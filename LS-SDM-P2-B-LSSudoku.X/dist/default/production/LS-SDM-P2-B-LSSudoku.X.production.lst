

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 07 14:22:30 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	text90,global,reloc=2,class=CODE,delta=1
   105                           	psect	text91,global,reloc=2,class=CODE,delta=1
   106                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   107                           	psect	text93,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   110                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   111                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   112                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   113                           	psect	pa_nodes0,global,class=CODE,delta=1
   114  0000                     
   115                           ; Version 2.32
   116                           ; Generated 02/02/2021 GMT
   117                           ; 
   118                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   119                           ; All rights reserved.
   120                           ; 
   121                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   122                           ; 
   123                           ; Redistribution and use in source and binary forms, with or without modification, are
   124                           ; permitted provided that the following conditions are met:
   125                           ; 
   126                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   127                           ;        conditions and the following disclaimer.
   128                           ; 
   129                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   130                           ;        of conditions and the following disclaimer in the documentation and/or other
   131                           ;        materials provided with the distribution. Publication is not required when
   132                           ;        this file is used in an embedded application.
   133                           ; 
   134                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   135                           ;        software without specific prior written permission.
   136                           ; 
   137                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   138                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   139                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   140                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   141                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   142                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   143                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   144                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   145                           ; 
   146                           ; 
   147                           ; Code-generator required, PIC18F4321 Definitions
   148                           ; 
   149                           ; SFR Addresses
   150  0000                     
   151                           	psect	idataCOMRAM
   152  001BC8                     __pidataCOMRAM:
   153                           	callstack 0
   154                           
   155                           ;initializer for _convertir
   156  001BC8  FA                 	db	250
   157                           
   158                           ;initializer for _novaTeclaSIO
   159  001BC9  FF                 	db	255
   160                           
   161                           ;initializer for _direccioSIO
   162  001BCA  FF                 	db	255
   163                           
   164                           ;initializer for _usuariActualSIO
   165  001BCB  FF                 	db	255
   166                           
   167                           ;initializer for _novaTeclaJOC
   168  001BCC  FF                 	db	255
   169                           
   170                           ;initializer for _usuariJoc
   171  001BCD  FF                 	db	255
   172                           
   173                           ;initializer for GLCDMotor@max2
   174  001BCE  0F                 	db	15
   175                           
   176                           ;initializer for GLCDMotor@max1
   177  001BCF  0F                 	db	15
   178                           
   179                           ;initializer for _usuariLoguejat
   180  001BD0  FF                 	db	255
   181                           
   182                           ;initializer for _novaDireccio
   183  001BD1  FF                 	db	255
   184                           
   185                           ;initializer for _novaLletra
   186  001BD2  FF                 	db	255
   187                           
   188                           ;initializer for _NovaTecla
   189  001BD3  FF                 	db	255
   190                           
   191                           ;initializer for _ultimaTecla
   192  001BD4  FF                 	db	255
   193                           
   194                           ;initializer for _novaTecla
   195  001BD5  FF                 	db	255
   196                           
   197                           ;initializer for _lletraASCII
   198  001BD6  FF                 	db	255
   199                           
   200                           ;initializer for _hora
   201  001BD7  33                 	db	51
   202  001BD8  30                 	db	48
   203  001BD9  3A                 	db	58
   204  001BDA  30                 	db	48
   205  001BDB  30                 	db	48
   206  001BDC  00                 	db	0
   207                           
   208                           ;initializer for _stringScore
   209  001BDD  30                 	db	48
   210  001BDE  30                 	db	48
   211  001BDF  00                 	db	0
   212                           
   213                           	psect	mediumconst
   214  001EF4                     __pmediumconst:
   215                           	callstack 0
   216  001EF4  00                 	db	0
   217  001EF5                     _lletraInici:
   218                           	callstack 0
   219  001EF5  41                 	db	65
   220  001EF6  44                 	db	68
   221  001EF7  47                 	db	71
   222  001EF8  4A                 	db	74
   223  001EF9  4D                 	db	77
   224  001EFA  50                 	db	80
   225  001EFB  54                 	db	84
   226  001EFC  57                 	db	87
   227  001EFD                     __end_of_lletraInici:
   228                           	callstack 0
   229  001EFD                     _arrayZero:
   230                           	callstack 0
   231  001EFD  30                 	db	48
   232  001EFE  20                 	db	32
   233  001EFF                     __end_of_arrayZero:
   234                           	callstack 0
   235  001EFF                     _menuList:
   236                           	callstack 0
   237  001EFF  31                 	db	49
   238  001F00  2E                 	db	46
   239  001F01  50                 	db	80
   240  001F02  6C                 	db	108
   241  001F03  61                 	db	97
   242  001F04  79                 	db	121
   243  001F05  20                 	db	32
   244  001F06  61                 	db	97
   245  001F07  20                 	db	32
   246  001F08  47                 	db	71
   247  001F09  61                 	db	97
   248  001F0A  6D                 	db	109
   249  001F0B  65                 	db	101
   250  001F0C  00                 	db	0
   251  001F0D  00                 	db	0
   252  001F0E  00                 	db	0
   253  001F0F  00                 	db	0
   254  001F10  00                 	db	0
   255  001F11  00                 	db	0
   256  001F12  00                 	db	0
   257  001F13  00                 	db	0
   258  001F14  00                 	db	0
   259  001F15  00                 	db	0
   260  001F16  00                 	db	0
   261  001F17  00                 	db	0
   262  001F18  00                 	db	0
   263  001F19  00                 	db	0
   264  001F1A  00                 	db	0
   265  001F1B  00                 	db	0
   266  001F1C  32                 	db	50
   267  001F1D  2E                 	db	46
   268  001F1E  4D                 	db	77
   269  001F1F  6F                 	db	111
   270  001F20  64                 	db	100
   271  001F21  69                 	db	105
   272  001F22  66                 	db	102
   273  001F23  79                 	db	121
   274  001F24  20                 	db	32
   275  001F25  54                 	db	84
   276  001F26  69                 	db	105
   277  001F27  6D                 	db	109
   278  001F28  65                 	db	101
   279  001F29  00                 	db	0
   280  001F2A  00                 	db	0
   281  001F2B  00                 	db	0
   282  001F2C  00                 	db	0
   283  001F2D  00                 	db	0
   284  001F2E  00                 	db	0
   285  001F2F  00                 	db	0
   286  001F30  00                 	db	0
   287  001F31  00                 	db	0
   288  001F32  00                 	db	0
   289  001F33  00                 	db	0
   290  001F34  00                 	db	0
   291  001F35  00                 	db	0
   292  001F36  00                 	db	0
   293  001F37  00                 	db	0
   294  001F38  00                 	db	0
   295  001F39  33                 	db	51
   296  001F3A  2E                 	db	46
   297  001F3B  53                 	db	83
   298  001F3C  68                 	db	104
   299  001F3D  6F                 	db	111
   300  001F3E  77                 	db	119
   301  001F3F  20                 	db	32
   302  001F40  47                 	db	71
   303  001F41  65                 	db	101
   304  001F42  6E                 	db	110
   305  001F43  65                 	db	101
   306  001F44  72                 	db	114
   307  001F45  61                 	db	97
   308  001F46  6C                 	db	108
   309  001F47  20                 	db	32
   310  001F48  54                 	db	84
   311  001F49  6F                 	db	111
   312  001F4A  70                 	db	112
   313  001F4B  20                 	db	32
   314  001F4C  35                 	db	53
   315  001F4D  20                 	db	32
   316  001F4E  53                 	db	83
   317  001F4F  63                 	db	99
   318  001F50  6F                 	db	111
   319  001F51  72                 	db	114
   320  001F52  65                 	db	101
   321  001F53  73                 	db	115
   322  001F54  20                 	db	32
   323  001F55  00                 	db	0
   324  001F56  34                 	db	52
   325  001F57  2E                 	db	46
   326  001F58  4C                 	db	76
   327  001F59  6F                 	db	111
   328  001F5A  67                 	db	103
   329  001F5B  6F                 	db	111
   330  001F5C  75                 	db	117
   331  001F5D  74                 	db	116
   332  001F5E  00                 	db	0
   333  001F5F  00                 	db	0
   334  001F60  00                 	db	0
   335  001F61  00                 	db	0
   336  001F62  00                 	db	0
   337  001F63  00                 	db	0
   338  001F64  00                 	db	0
   339  001F65  00                 	db	0
   340  001F66  00                 	db	0
   341  001F67  00                 	db	0
   342  001F68  00                 	db	0
   343  001F69  00                 	db	0
   344  001F6A  00                 	db	0
   345  001F6B  00                 	db	0
   346  001F6C  00                 	db	0
   347  001F6D  00                 	db	0
   348  001F6E  00                 	db	0
   349  001F6F  00                 	db	0
   350  001F70  00                 	db	0
   351  001F71  00                 	db	0
   352  001F72  00                 	db	0
   353  001F73  35                 	db	53
   354  001F74  2E                 	db	46
   355  001F75  53                 	db	83
   356  001F76  68                 	db	104
   357  001F77  6F                 	db	111
   358  001F78  77                 	db	119
   359  001F79  20                 	db	32
   360  001F7A  41                 	db	65
   361  001F7B  6C                 	db	108
   362  001F7C  6C                 	db	108
   363  001F7D  20                 	db	32
   364  001F7E  55                 	db	85
   365  001F7F  73                 	db	115
   366  001F80  65                 	db	101
   367  001F81  72                 	db	114
   368  001F82  73                 	db	115
   369  001F83  00                 	db	0
   370  001F84  00                 	db	0
   371  001F85  00                 	db	0
   372  001F86  00                 	db	0
   373  001F87  00                 	db	0
   374  001F88  00                 	db	0
   375  001F89  00                 	db	0
   376  001F8A  00                 	db	0
   377  001F8B  00                 	db	0
   378  001F8C  00                 	db	0
   379  001F8D  00                 	db	0
   380  001F8E  00                 	db	0
   381  001F8F  00                 	db	0
   382  001F90                     __end_of_menuList:
   383                           	callstack 0
   384  001F90                     _teclaPremuda:
   385                           	callstack 0
   386  001F90  01                 	db	1
   387  001F91  02                 	db	2
   388  001F92  03                 	db	3
   389  001F93  04                 	db	4
   390  001F94  05                 	db	5
   391  001F95  06                 	db	6
   392  001F96  07                 	db	7
   393  001F97  08                 	db	8
   394  001F98  09                 	db	9
   395  001F99  0A                 	db	10
   396  001F9A  00                 	db	0
   397  001F9B  0B                 	db	11
   398  001F9C                     __end_of_teclaPremuda:
   399                           	callstack 0
   400  001F9C                     _registerText:
   401                           	callstack 0
   402  001F9C  32                 	db	50
   403  001F9D  2E                 	db	46
   404  001F9E  52                 	db	82
   405  001F9F  45                 	db	69
   406  001FA0  47                 	db	71
   407  001FA1  49                 	db	73
   408  001FA2  53                 	db	83
   409  001FA3  54                 	db	84
   410  001FA4  45                 	db	69
   411  001FA5  52                 	db	82
   412  001FA6  00                 	db	0
   413  001FA7                     __end_of_registerText:
   414                           	callstack 0
   415  001FA7                     _loginText:
   416                           	callstack 0
   417  001FA7  31                 	db	49
   418  001FA8  2E                 	db	46
   419  001FA9  4C                 	db	76
   420  001FAA  4F                 	db	79
   421  001FAB  47                 	db	71
   422  001FAC  49                 	db	73
   423  001FAD  4E                 	db	78
   424  001FAE  00                 	db	0
   425  001FAF                     __end_of_loginText:
   426                           	callstack 0
   427  0000                     _PIR1bits	set	3998
   428  0000                     _RCREG	set	4014
   429  0000                     _TXREG	set	4013
   430  0000                     _TXSTAbits	set	4012
   431  0000                     _ADCON0bits	set	4034
   432  0000                     _ADRESH	set	4036
   433  0000                     _ADCON2	set	4032
   434  0000                     _ADCON1	set	4033
   435  0000                     _ADCON0	set	4034
   436  0000                     _EECON2	set	4007
   437  0000                     _EEDATA	set	4008
   438  0000                     _EEADR	set	4009
   439  0000                     _T0CONbits	set	4053
   440  0000                     _TMR0L	set	4054
   441  0000                     _TMR0H	set	4055
   442  0000                     _T0CON	set	4053
   443  0000                     _INTCONbits	set	4082
   444  0000                     _RCONbits	set	4048
   445  0000                     _PORTDbits	set	3971
   446  0000                     _SPBRG	set	4015
   447  0000                     _SPBRGH	set	4016
   448  0000                     _BAUDCON	set	4024
   449  0000                     _RCSTA	set	4011
   450  0000                     _TXSTA	set	4012
   451  0000                     _EECON1bits	set	4006
   452  0000                     _LATD	set	3980
   453  0000                     _TRISD	set	3989
   454  0000                     _TRISC	set	3988
   455  0000                     _LATBbits	set	3978
   456  0000                     _TRISB	set	3987
   457  0000                     _TRISA	set	3986
   458  0000                     _PORTCbits	set	3970
   459  0000                     _LATDbits	set	3980
   460  0000                     _LATCbits	set	3979
   461  0000                     _TRISDbits	set	3989
   462  0000                     _TRISCbits	set	3988
   463  001FAF                     STR_5:
   464  001FAF  54                 	db	84	;'T'
   465  001FB0  49                 	db	73	;'I'
   466  001FB1  4D                 	db	77	;'M'
   467  001FB2  45                 	db	69	;'E'
   468  001FB3  20                 	db	32
   469  001FB4  52                 	db	82	;'R'
   470  001FB5  45                 	db	69	;'E'
   471  001FB6  4D                 	db	77	;'M'
   472  001FB7  41                 	db	65	;'A'
   473  001FB8  49                 	db	73	;'I'
   474  001FB9  4E                 	db	78	;'N'
   475  001FBA  49                 	db	73	;'I'
   476  001FBB  4E                 	db	78	;'N'
   477  001FBC  47                 	db	71	;'G'
   478  001FBD  3A                 	db	58	;':'
   479  001FBE  00                 	db	0
   480  001FBF                     STR_4:
   481  001FBF  4D                 	db	77	;'M'
   482  001FC0  6F                 	db	111	;'o'
   483  001FC1  64                 	db	100	;'d'
   484  001FC2  69                 	db	105	;'i'
   485  001FC3  66                 	db	102	;'f'
   486  001FC4  79                 	db	121	;'y'
   487  001FC5  20                 	db	32
   488  001FC6  54                 	db	84	;'T'
   489  001FC7  69                 	db	105	;'i'
   490  001FC8  6D                 	db	109	;'m'
   491  001FC9  65                 	db	101	;'e'
   492  001FCA  3A                 	db	58	;':'
   493  001FCB  00                 	db	0
   494  001FCC                     STR_7:
   495  001FCC  54                 	db	84	;'T'
   496  001FCD  49                 	db	73	;'I'
   497  001FCE  4D                 	db	77	;'M'
   498  001FCF  45                 	db	69	;'E'
   499  001FD0  20                 	db	32
   500  001FD1  4C                 	db	76	;'L'
   501  001FD2  45                 	db	69	;'E'
   502  001FD3  46                 	db	70	;'F'
   503  001FD4  54                 	db	84	;'T'
   504  001FD5  3A                 	db	58	;':'
   505  001FD6  20                 	db	32
   506  001FD7  00                 	db	0
   507  001FD8                     STR_3:
   508  001FD8  42                 	db	66	;'B'
   509  001FD9  59                 	db	89	;'Y'
   510  001FDA  45                 	db	69	;'E'
   511  001FDB  20                 	db	32
   512  001FDC  42                 	db	66	;'B'
   513  001FDD  59                 	db	89	;'Y'
   514  001FDE  45                 	db	69	;'E'
   515  001FDF  20                 	db	32
   516  001FE0  00                 	db	0
   517  001FE1                     STR_8:
   518  001FE1  53                 	db	83	;'S'
   519  001FE2  43                 	db	67	;'C'
   520  001FE3  4F                 	db	79	;'O'
   521  001FE4  52                 	db	82	;'R'
   522  001FE5  45                 	db	69	;'E'
   523  001FE6  3A                 	db	58	;':'
   524  001FE7  20                 	db	32
   525  001FE8  00                 	db	0
   526  001FE9                     STR_6:
   527  001FE9  45                 	db	69	;'E'
   528  001FEA  52                 	db	82	;'R'
   529  001FEB  52                 	db	82	;'R'
   530  001FEC  4F                 	db	79	;'O'
   531  001FED  52                 	db	82	;'R'
   532  001FEE  53                 	db	83	;'S'
   533  001FEF  3A                 	db	58	;':'
   534  001FF0  00                 	db	0
   535  001FF1                     STR_2:
   536  001FF1  50                 	db	80	;'P'
   537  001FF2  53                 	db	83	;'S'
   538  001FF3  57                 	db	87	;'W'
   539  001FF4  44                 	db	68	;'D'
   540  001FF5  3A                 	db	58	;':'
   541  001FF6  20                 	db	32
   542  001FF7  00                 	db	0
   543  001FF8                     STR_1:
   544  001FF8  55                 	db	85	;'U'
   545  001FF9  53                 	db	83	;'S'
   546  001FFA  45                 	db	69	;'E'
   547  001FFB  52                 	db	82	;'R'
   548  001FFC  3A                 	db	58	;':'
   549  001FFD  20                 	db	32
   550  001FFE  00                 	db	0
   551  001FFF  00                 	db	0	; dummy byte at the end
   552  0000                     
   553                           ; #config settings
   554                           
   555                           	psect	cinit
   556  0017A2                     __pcinit:
   557                           	callstack 0
   558  0017A2                     start_initialization:
   559                           	callstack 0
   560  0017A2                     __initialization:
   561                           	callstack 0
   562                           
   563                           ; Initialize objects allocated to COMRAM (24 bytes)
   564                           ; load TBLPTR registers with __pidataCOMRAM
   565  0017A2  0EC8               	movlw	low __pidataCOMRAM
   566  0017A4  6EF6               	movwf	tblptrl,c
   567  0017A6  0E1B               	movlw	high __pidataCOMRAM
   568  0017A8  6EF7               	movwf	tblptrh,c
   569  0017AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   570  0017AC  6EF8               	movwf	tblptru,c
   571  0017AE  EE00  F05E         	lfsr	0,__pdataCOMRAM
   572  0017B2  EE10 F018          	lfsr	1,24
   573  0017B6                     copy_data0:
   574  0017B6  0009               	tblrd		*+
   575  0017B8  CFF5 FFEE          	movff	tablat,postinc0
   576  0017BC  50E5               	movf	postdec1,w,c
   577  0017BE  50E1               	movf	fsr1l,w,c
   578  0017C0  E1FA               	bnz	copy_data0
   579                           
   580                           ; Clear objects allocated to BANK1 (144 bytes)
   581  0017C2  EE01  F000         	lfsr	0,__pbssBANK1
   582  0017C6  0E90               	movlw	144
   583  0017C8                     clear_0:
   584  0017C8  6AEE               	clrf	postinc0,c
   585  0017CA  06E8               	decf	wreg,f,c
   586  0017CC  E1FD               	bnz	clear_0
   587                           
   588                           ; Clear objects allocated to BANK0 (52 bytes)
   589  0017CE  EE00  F080         	lfsr	0,__pbssBANK0
   590  0017D2  0E34               	movlw	52
   591  0017D4                     clear_1:
   592  0017D4  6AEE               	clrf	postinc0,c
   593  0017D6  06E8               	decf	wreg,f,c
   594  0017D8  E1FD               	bnz	clear_1
   595                           
   596                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   597  0017DA  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   598  0017DC  6A77               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   599  0017DE  6A76               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   600                           
   601                           ; Clear objects allocated to COMRAM (68 bytes)
   602  0017E0  EE00  F001         	lfsr	0,__pbssCOMRAM
   603  0017E4  0E44               	movlw	68
   604  0017E6                     clear_2:
   605  0017E6  6AEE               	clrf	postinc0,c
   606  0017E8  06E8               	decf	wreg,f,c
   607  0017EA  E1FD               	bnz	clear_2
   608  0017EC                     end_of_initialization:
   609                           	callstack 0
   610  0017EC                     __end_of__initialization:
   611                           	callstack 0
   612  0017EC  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   613  0017EE  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   614  0017F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   615  0017F2  6EF8               	movwf	tblptru,c
   616  0017F4  0100               	movlb	0
   617  0017F6  EF35  F00B         	goto	_main	;jump to C main() function
   618                           
   619                           	psect	bitbssCOMRAM
   620  0003B0                     __pbitbssCOMRAM:
   621                           	callstack 0
   622  0003B0                     _Krebut:
   623                           	callstack 0
   624  0003B0                     	ds	1
   625  0003B1                     _jugantSIO:
   626                           	callstack 0
   627  0003B1                     	ds	1
   628  0003B2                     _jugantJoc:
   629                           	callstack 0
   630  0003B2                     	ds	1
   631  0003B3                     _tempsAcabat:
   632                           	callstack 0
   633  0003B3                     	ds	1
   634  0003B4                     _nouSegon:
   635                           	callstack 0
   636  0003B4                     	ds	1
   637  0003B5                     _jugant:
   638                           	callstack 0
   639  0003B5                     	ds	1
   640  0003B6                     _cap2:
   641                           	callstack 0
   642  0003B6                     	ds	1
   643  0003B7                     _cap1:
   644                           	callstack 0
   645  0003B7                     	ds	1
   646  0003B8                     _newString:
   647                           	callstack 0
   648  0003B8                     	ds	1
   649  0003B9                     _ferMenu:
   650                           	callstack 0
   651  0003B9                     	ds	1
   652  0003BA                     _reproduir:
   653                           	callstack 0
   654  0003BA                     	ds	1
   655  0003BB                     _do_updateScore:
   656                           	callstack 0
   657  0003BB                     	ds	1
   658  0003BC                     _do_showUsers:
   659                           	callstack 0
   660  0003BC                     	ds	1
   661  0003BD                     _do_register:
   662                           	callstack 0
   663  0003BD                     	ds	1
   664  0003BE                     _do_check_exists:
   665                           	callstack 0
   666  0003BE                     	ds	1
   667  0003BF                     _loginNOTRegister:
   668                           	callstack 0
   669  0003BF                     	ds	1
   670  0003C0                     _setSMSon:
   671                           	callstack 0
   672  0003C0                     	ds	1
   673  0003C1                     _nou_s:
   674                           	callstack 0
   675  0003C1                     	ds	1
   676                           
   677                           	psect	bssCOMRAM
   678  000001                     __pbssCOMRAM:
   679                           	callstack 0
   680  000001                     _arrayShowUsers:
   681                           	callstack 0
   682  000001                     	ds	8
   683  000009                     _userPtr:
   684                           	callstack 0
   685  000009                     	ds	2
   686  00000B                     _h_Tics:
   687                           	callstack 0
   688  00000B                     	ds	2
   689  00000D                     _s_ptr:
   690                           	callstack 0
   691  00000D                     	ds	2
   692  00000F                     motorSIO@state:
   693                           	callstack 0
   694  00000F                     	ds	1
   695  000010                     _score:
   696                           	callstack 0
   697  000010                     	ds	1
   698  000011                     _timerSIO:
   699                           	callstack 0
   700  000011                     	ds	1
   701  000012                     motorJoc@state:
   702                           	callstack 0
   703  000012                     	ds	1
   704  000013                     _direccioJoc:
   705                           	callstack 0
   706  000013                     	ds	1
   707  000014                     motorHora@state:
   708                           	callstack 0
   709  000014                     	ds	1
   710  000015                     _segons:
   711                           	callstack 0
   712  000015                     	ds	1
   713  000016                     _timerHora:
   714                           	callstack 0
   715  000016                     	ds	1
   716  000017                     JoystickMotor@state:
   717                           	callstack 0
   718  000017                     	ds	1
   719  000018                     _ultimaTeclaAD:
   720                           	callstack 0
   721  000018                     	ds	1
   722  000019                     GLCDMotor@length2:
   723                           	callstack 0
   724  000019                     	ds	1
   725  00001A                     GLCDMotor@length1:
   726                           	callstack 0
   727  00001A                     	ds	1
   728  00001B                     GLCDMotor@k2:
   729                           	callstack 0
   730  00001B                     	ds	1
   731  00001C                     GLCDMotor@k1:
   732                           	callstack 0
   733  00001C                     	ds	1
   734  00001D                     GLCDMotor@min2:
   735                           	callstack 0
   736  00001D                     	ds	1
   737  00001E                     GLCDMotor@min1:
   738                           	callstack 0
   739  00001E                     	ds	1
   740  00001F                     GLCDMotor@j:
   741                           	callstack 0
   742  00001F                     	ds	1
   743  000020                     GLCDMotor@state:
   744                           	callstack 0
   745  000020                     	ds	1
   746  000021                     _menuDaltGLCD:
   747                           	callstack 0
   748  000021                     	ds	1
   749  000022                     _timerGLCD:
   750                           	callstack 0
   751  000022                     	ds	1
   752  000023                     motorAltaveu@state:
   753                           	callstack 0
   754  000023                     	ds	1
   755  000024                     _copsNota:
   756                           	callstack 0
   757  000024                     	ds	1
   758  000025                     _timerAltaveu:
   759                           	callstack 0
   760  000025                     	ds	1
   761  000026                     _nota:
   762                           	callstack 0
   763  000026                     	ds	1
   764  000027                     UmotorUsers@state:
   765                           	callstack 0
   766  000027                     	ds	1
   767  000028                     _scoreUsr:
   768                           	callstack 0
   769  000028                     	ds	1
   770  000029                     _j:
   771                           	callstack 0
   772  000029                     	ds	1
   773  00002A                     _i:
   774                           	callstack 0
   775  00002A                     	ds	1
   776  00002B                     _indexNextUserStruct:
   777                           	callstack 0
   778  00002B                     	ds	1
   779  00002C                     _indexNextUser:
   780                           	callstack 0
   781  00002C                     	ds	1
   782  00002D                     _numUsuaris:
   783                           	callstack 0
   784  00002D                     	ds	1
   785  00002E                     menu@state:
   786                           	callstack 0
   787  00002E                     	ds	1
   788  00002F                     _pos:
   789                           	callstack 0
   790  00002F                     	ds	1
   791  000030                     _indexUsuari:
   792                           	callstack 0
   793  000030                     	ds	1
   794  000031                     _menuDalt:
   795                           	callstack 0
   796  000031                     	ds	1
   797  000032                     _timerMenu:
   798                           	callstack 0
   799  000032                     	ds	1
   800  000033                     _tmp:
   801                           	callstack 0
   802  000033                     	ds	1
   803  000034                     _counter:
   804                           	callstack 0
   805  000034                     	ds	1
   806  000035                     TeTeclat@files:
   807                           	callstack 0
   808  000035                     	ds	1
   809  000036                     TeTeclat@cols:
   810                           	callstack 0
   811  000036                     	ds	1
   812  000037                     TeTeclat@state:
   813                           	callstack 0
   814  000037                     	ds	1
   815  000038                     _tiTeclat:
   816                           	callstack 0
   817  000038                     	ds	1
   818  000039                     SMotor@state:
   819                           	callstack 0
   820  000039                     	ds	1
   821  00003A                     _zeroTecla:
   822                           	callstack 0
   823  00003A                     	ds	1
   824  00003B                     _timerSMS:
   825                           	callstack 0
   826  00003B                     	ds	1
   827  00003C                     _sumaPulsacions:
   828                           	callstack 0
   829  00003C                     	ds	1
   830  00003D                     _Timer:
   831                           	callstack 0
   832  00003D                     	ds	1
   833  00003E                     _ColumnAct:
   834                           	callstack 0
   835  00003E                     	ds	1
   836  00003F                     _RowAct:
   837                           	callstack 0
   838  00003F                     	ds	1
   839  000040                     _Rows:
   840                           	callstack 0
   841  000040                     	ds	1
   842  000041                     _horaTmp:
   843                           	callstack 0
   844  000041                     	ds	4
   845                           
   846                           	psect	dataCOMRAM
   847  00005E                     __pdataCOMRAM:
   848                           	callstack 0
   849  00005E                     _convertir:
   850                           	callstack 0
   851  00005E                     	ds	1
   852  00005F                     _novaTeclaSIO:
   853                           	callstack 0
   854  00005F                     	ds	1
   855  000060                     _direccioSIO:
   856                           	callstack 0
   857  000060                     	ds	1
   858  000061                     _usuariActualSIO:
   859                           	callstack 0
   860  000061                     	ds	1
   861  000062                     _novaTeclaJOC:
   862                           	callstack 0
   863  000062                     	ds	1
   864  000063                     _usuariJoc:
   865                           	callstack 0
   866  000063                     	ds	1
   867  000064                     GLCDMotor@max2:
   868                           	callstack 0
   869  000064                     	ds	1
   870  000065                     GLCDMotor@max1:
   871                           	callstack 0
   872  000065                     	ds	1
   873  000066                     _usuariLoguejat:
   874                           	callstack 0
   875  000066                     	ds	1
   876  000067                     _novaDireccio:
   877                           	callstack 0
   878  000067                     	ds	1
   879  000068                     _novaLletra:
   880                           	callstack 0
   881  000068                     	ds	1
   882  000069                     _NovaTecla:
   883                           	callstack 0
   884  000069                     	ds	1
   885  00006A                     _ultimaTecla:
   886                           	callstack 0
   887  00006A                     	ds	1
   888  00006B                     _novaTecla:
   889                           	callstack 0
   890  00006B                     	ds	1
   891  00006C                     _lletraASCII:
   892                           	callstack 0
   893  00006C                     	ds	1
   894  00006D                     _hora:
   895                           	callstack 0
   896  00006D                     	ds	6
   897  000073                     _stringScore:
   898                           	callstack 0
   899  000073                     	ds	3
   900                           
   901                           	psect	bssBANK0
   902  000080                     __pbssBANK0:
   903                           	callstack 0
   904  000080                     _s_Timers:
   905                           	callstack 0
   906  000080                     	ds	24
   907  000098                     _puntuacions:
   908                           	callstack 0
   909  000098                     	ds	10
   910  0000A2                     _tmpPassword:
   911                           	callstack 0
   912  0000A2                     	ds	9
   913  0000AB                     _tmpUsername:
   914                           	callstack 0
   915  0000AB                     	ds	9
   916                           
   917                           	psect	bssBANK1
   918  000100                     __pbssBANK1:
   919                           	callstack 0
   920  000100                     _usuaris:
   921                           	callstack 0
   922  000100                     	ds	144
   923                           
   924                           	psect	cstackCOMRAM
   925  000045                     __pcstackCOMRAM:
   926                           	callstack 0
   927  000045                     
   928                           ; 1 bytes @ 0x0
   929  000045                     	ds	1
   930  000046                     ??_high_rsi:
   931                           
   932                           ; 1 bytes @ 0x1
   933  000046                     	ds	4
   934  00004A                     ??_EscriuPrimeraOrdre:
   935  00004A                     ??_CantaPartAlta:
   936  00004A                     ??_CantaPartBaixa:
   937  00004A                     ?_TiGetTics:
   938                           	callstack 0
   939  00004A                     ?_UgetUserName:
   940                           	callstack 0
   941  00004A                     ?_getArrayShowUsers:
   942                           	callstack 0
   943  00004A                     SsetNovaTecla@tecla:
   944                           	callstack 0
   945  00004A                     TiResetTics@Handle:
   946                           	callstack 0
   947  00004A                     MsetNovaTecla@tecla:
   948                           	callstack 0
   949  00004A                     MNovaLletra@lletra:
   950                           	callstack 0
   951  00004A                     MNouJoystick@posicio:
   952                           	callstack 0
   953  00004A                     UenviaChar@pos:
   954                           	callstack 0
   955  00004A                     UenviaPas@pos:
   956                           	callstack 0
   957  00004A                     escriureCharEEPROM@pos:
   958                           	callstack 0
   959  00004A                     llegirCharEEPROM@pos:
   960                           	callstack 0
   961  00004A                     compareStrings@a:
   962                           	callstack 0
   963  00004A                     UgetScore@quin:
   964                           	callstack 0
   965  00004A                     UgetTop5@quin:
   966                           	callstack 0
   967  00004A                     UnewScore@scoretmp:
   968                           	callstack 0
   969  00004A                     GLCDMostraMenu@num:
   970                           	callstack 0
   971  00004A                     HActualitzaHora@nova:
   972                           	callstack 0
   973  00004A                     JJuguem@usuari:
   974                           	callstack 0
   975  00004A                     JnovaTecla@tecla:
   976                           	callstack 0
   977  00004A                     JnovaDireccio@dir:
   978                           	callstack 0
   979  00004A                     conversorJoystick@direc:
   980                           	callstack 0
   981  00004A                     SIONovaDireccio@num:
   982                           	callstack 0
   983  00004A                     SIOStartGame@usuari:
   984                           	callstack 0
   985  00004A                     SIONovaTecla@tecla:
   986                           	callstack 0
   987  00004A                     CToAConverteix@numero:
   988                           	callstack 0
   989  00004A                     ___lbdiv@divisor:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x5
   993  00004A                     	ds	1
   994  00004B                     ??_JoystickMotor:
   995  00004B                     CantaPartAlta@c:
   996                           	callstack 0
   997  00004B                     CantaPartBaixa@c:
   998                           	callstack 0
   999  00004B                     EscriuPrimeraOrdre@ordre:
  1000                           	callstack 0
  1001  00004B                     UenviaChar@c:
  1002                           	callstack 0
  1003  00004B                     UenviaPas@c:
  1004                           	callstack 0
  1005  00004B                     escriureCharEEPROM@c:
  1006                           	callstack 0
  1007  00004B                     ___lbdiv@dividend:
  1008                           	callstack 0
  1009  00004B                     compareStrings@b:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x6
  1013  00004B                     	ds	1
  1014  00004C                     ??_TiGetTics:
  1015  00004C                     CantaIR@IR:
  1016                           	callstack 0
  1017  00004C                     CantaData@Data:
  1018                           	callstack 0
  1019  00004C                     UgetUserName@quin:
  1020                           	callstack 0
  1021  00004C                     getArrayShowUsers@quin:
  1022                           	callstack 0
  1023  00004C                     ___lbdiv@counter:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x7
  1027  00004C                     	ds	1
  1028  00004D                     ??_compareStrings:
  1029  00004D                     ___lbdiv@quotient:
  1030                           	callstack 0
  1031  00004D                     LcNewString@new_s:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x8
  1035  00004D                     	ds	1
  1036  00004E                     ??_Uinit:
  1037  00004E                     TiGetTics@Handle:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x9
  1041  00004E                     	ds	1
  1042  00004F                     ??_UmotorUsers:
  1043  00004F                     TiGetTics@actual:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0xA
  1047  00004F                     	ds	1
  1048  000050                     Uinit@k:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0xB
  1052  000050                     	ds	1
  1053  000051                     ??_SMotor:
  1054  000051                     ??_motorHora:
  1055  000051                     ??_motorAltaveu:
  1056  000051                     ??_TeTeclat:
  1057  000051                     WaitForBusy@Busy:
  1058                           	callstack 0
  1059  000051                     Uinit@i:
  1060                           	callstack 0
  1061  000051                     Espera@ms:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0xC
  1065  000051                     	ds	1
  1066  000052                     LcGotoXY@Row:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0xD
  1070  000052                     	ds	1
  1071  000053                     ??_Espera:
  1072  000053                     LcGotoXY@Fisics:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0xE
  1076  000053                     	ds	1
  1077  000054                     Espera@Timer:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0xF
  1081  000054                     	ds	1
  1082  000055                     LcInit@rows:
  1083                           	callstack 0
  1084  000055                     _LcGotoXY$334:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x10
  1088  000055                     	ds	1
  1089  000056                     LcInit@i:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x11
  1093  000056                     	ds	1
  1094  000057                     LcGotoXY@Column:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x12
  1098  000057                     	ds	1
  1099  000058                     ??_motorJoc:
  1100  000058                     LcPutChar@c:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x13
  1104  000058                     	ds	1
  1105  000059                     ??_GLCDMotor:
  1106  000059                     ??_motorSIO:
  1107  000059                     ??_menu:
  1108  000059                     
  1109                           ; 1 bytes @ 0x14
  1110  000059                     	ds	5
  1111  00005E                     
  1112                           ; 1 bytes @ 0x19
  1113 ;;
  1114 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1115 ;;
  1116 ;; *************** function _main *****************
  1117 ;; Defined at:
  1118 ;;		line 76 in file "main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1
  1132 ;;      Params:         0       0       0
  1133 ;;      Locals:         0       0       0
  1134 ;;      Temps:          0       0       0
  1135 ;;      Totals:         0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels required when called: 7
  1138 ;; This function calls:
  1139 ;;		_CtoA
  1140 ;;		_GLCDInit
  1141 ;;		_GLCDMotor
  1142 ;;		_JoystickInit
  1143 ;;		_JoystickMotor
  1144 ;;		_LcInit
  1145 ;;		_LcLCD
  1146 ;;		_Minit
  1147 ;;		_SMotor
  1148 ;;		_Sinit
  1149 ;;		_TeInit
  1150 ;;		_TeTeclat
  1151 ;;		_TiInitTimer
  1152 ;;		_Uinit
  1153 ;;		_UmotorUsers
  1154 ;;		_initAltaveu
  1155 ;;		_initHora
  1156 ;;		_initSIO
  1157 ;;		_init_eusart
  1158 ;;		_init_ports
  1159 ;;		_menu
  1160 ;;		_motorAltaveu
  1161 ;;		_motorHora
  1162 ;;		_motorJoc
  1163 ;;		_motorSIO
  1164 ;; This function is called by:
  1165 ;;		Startup code after reset
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text0
  1170  00166A                     __ptext0:
  1171                           	callstack 0
  1172  00166A                     _main:
  1173                           	callstack 24
  1174                           
  1175                           ;main.c: 77:     init_ports();
  1176                           
  1177                           ;incstack = 0
  1178  00166A  ECAB  F00D         	call	_init_ports	;wreg free
  1179                           
  1180                           ;main.c: 78:     init_eusart();
  1181  00166E  ECF0  F00D         	call	_init_eusart	;wreg free
  1182                           
  1183                           ;main.c: 79:     TiInitTimer();
  1184  001672  EC2B  F00D         	call	_TiInitTimer	;wreg free
  1185                           
  1186                           ;main.c: 80:     TeInit();
  1187  001676  EC9D  F00E         	call	_TeInit	;wreg free
  1188                           
  1189                           ;main.c: 81:     Sinit();
  1190  00167A  ECA1  F00E         	call	_Sinit	;wreg free
  1191                           
  1192                           ;main.c: 82:     SMotor();
  1193  00167E  EC59  F007         	call	_SMotor	;wreg free
  1194                           
  1195                           ;main.c: 83:     Uinit();
  1196  001682  EC5B  F009         	call	_Uinit	;wreg free
  1197                           
  1198                           ;main.c: 84:     initAltaveu();
  1199  001686  EC91  F00E         	call	_initAltaveu	;wreg free
  1200                           
  1201                           ;main.c: 85:     GLCDInit();
  1202  00168A  ECB1  F00E         	call	_GLCDInit	;wreg free
  1203                           
  1204                           ;main.c: 86:     JoystickInit();
  1205  00168E  EC05  F00E         	call	_JoystickInit	;wreg free
  1206                           
  1207                           ;main.c: 87:     initHora();
  1208  001692  EC8D  F00E         	call	_initHora	;wreg free
  1209                           
  1210                           ;main.c: 88:     initSIO();
  1211  001696  EC89  F00E         	call	_initSIO	;wreg free
  1212                           
  1213                           ;main.c: 90:     LcInit(2);
  1214  00169A  0E02               	movlw	2
  1215  00169C  ECBC  F009         	call	_LcInit
  1216                           
  1217                           ;main.c: 91:     Minit();
  1218  0016A0  ECA9  F00E         	call	_Minit	;wreg free
  1219  0016A4                     l196:
  1220                           
  1221                           ;main.c: 94:         GLCDMotor();
  1222  0016A4  ECDC  F003         	call	_GLCDMotor	;wreg free
  1223                           
  1224                           ;main.c: 95:         motorJoc();
  1225  0016A8  EC1B  F00A         	call	_motorJoc	;wreg free
  1226                           
  1227                           ;main.c: 96:         motorSIO();
  1228  0016AC  EC65  F006         	call	_motorSIO	;wreg free
  1229                           
  1230                           ;main.c: 97:         motorHora();
  1231  0016B0  ECB5  F00A         	call	_motorHora	;wreg free
  1232                           
  1233                           ;main.c: 98:         JoystickMotor();
  1234  0016B4  ECF0  F008         	call	_JoystickMotor	;wreg free
  1235                           
  1236                           ;main.c: 99:         menu();
  1237  0016B8  EC1B  F000         	call	_menu	;wreg free
  1238                           
  1239                           ;main.c: 101:         CtoA();
  1240  0016BC  EC77  F00D         	call	_CtoA	;wreg free
  1241                           
  1242                           ;main.c: 102:         motorAltaveu();
  1243  0016C0  EC6C  F00A         	call	_motorAltaveu	;wreg free
  1244                           
  1245                           ;main.c: 103:         UmotorUsers();
  1246  0016C4  EC25  F005         	call	_UmotorUsers	;wreg free
  1247                           
  1248                           ;main.c: 105:         TeTeclat();
  1249  0016C8  EC49  F008         	call	_TeTeclat	;wreg free
  1250                           
  1251                           ;main.c: 106:         SMotor();
  1252  0016CC  EC59  F007         	call	_SMotor	;wreg free
  1253                           
  1254                           ;main.c: 107:         LcLCD();
  1255  0016D0  ECFD  F00B         	call	_LcLCD	;wreg free
  1256  0016D4  D7E7               	goto	l196
  1257  0016D6                     __end_of_main:
  1258                           	callstack 0
  1259                           
  1260 ;; *************** function _motorSIO *****************
  1261 ;; Defined at:
  1262 ;;		line 43 in file "SIO.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1
  1276 ;;      Params:         0       0       0
  1277 ;;      Locals:         0       0       0
  1278 ;;      Temps:          2       0       0
  1279 ;;      Totals:         2       0       0
  1280 ;;Total ram usage:        2 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 6
  1283 ;; This function calls:
  1284 ;;		_CToAConverteix
  1285 ;;		_CToAHaAcabat
  1286 ;;		_CToAobtenir
  1287 ;;		_HGetTime
  1288 ;;		_LcClear
  1289 ;;		_LcGotoXY
  1290 ;;		_LcLliure
  1291 ;;		_LcNewString
  1292 ;;		_LcPutChar
  1293 ;;		_TiGetTics
  1294 ;;		_TiResetTics
  1295 ;;		_UgetUserName
  1296 ;;		_UnewScore
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text1
  1303  000CCA                     __ptext1:
  1304                           	callstack 0
  1305  000CCA                     _motorSIO:
  1306                           	callstack 24
  1307                           
  1308                           ;SIO.c: 44:     static char state = 0;;SIO.c: 46:  switch(state) {
  1309                           
  1310                           ;incstack = 0
  1311  000CCA  D0C8               	goto	l5165
  1312  000CCC                     l5047:
  1313                           
  1314                           ;SIO.c: 48:    if (usuariActualSIO > -1) {
  1315  000CCC  BE61               	btfsc	_usuariActualSIO^0,7,c
  1316  000CCE  0012               	return	
  1317                           
  1318                           ;SIO.c: 49:     userPtr = UgetUserName(usuariActualSIO);
  1319  000CD0  5061               	movf	_usuariActualSIO^0,w,c
  1320  000CD2  ECFB  F00D         	call	_UgetUserName
  1321  000CD6  C04A  F009         	movff	?_UgetUserName,_userPtr
  1322  000CDA  C04B  F00A         	movff	?_UgetUserName+1,_userPtr+1
  1323                           
  1324                           ;SIO.c: 50:     jugantSIO = 1;
  1325  000CDE  8276               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1326                           
  1327                           ;SIO.c: 51:     Krebut = 0;
  1328  000CE0  9076               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1329                           
  1330                           ;SIO.c: 52:     state = 1;
  1331  000CE2  0E01               	movlw	1
  1332  000CE4  6E0F               	movwf	motorSIO@state^0,c
  1333  000CE6  0C01               	retlw	1
  1334  000CE8                     l5057:
  1335                           
  1336                           ;SIO.c: 56:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1337  000CE8  D8D9               	call	PL26	;call to abstracted procedure
  1338  000CEA  E108               	bnz	l5065
  1339  000CEC  A2AC               	btfss	172,1,c	;volatile
  1340  000CEE  D006               	goto	l5065
  1341                           
  1342                           ;SIO.c: 57:     TXREG = '\0';
  1343  000CF0  6AAD               	clrf	173,c	;volatile
  1344                           
  1345                           ;SIO.c: 58:     novaTeclaSIO = 0;
  1346  000CF2  6A5F               	clrf	_novaTeclaSIO^0,c
  1347                           
  1348                           ;SIO.c: 59:     LATBbits.LATB3 = 1;
  1349  000CF4  868A               	bsf	138,3,c	;volatile
  1350                           
  1351                           ;SIO.c: 60:     state = 2;
  1352  000CF6  0E02               	movlw	2
  1353  000CF8  6E0F               	movwf	motorSIO@state^0,c
  1354                           
  1355                           ;SIO.c: 61:    }
  1356  000CFA  0C02               	retlw	2
  1357  000CFC                     l5065:
  1358  000CFC  D8CF               	call	PL26	;call to abstracted procedure
  1359  000CFE  A4D8               	btfss	status,2,c
  1360  000D00  A2AC               	btfss	172,1,c	;volatile
  1361  000D02  0012               	return	
  1362                           
  1363                           ;SIO.c: 63:     TXREG = *userPtr;
  1364  000D04  D8CB               	call	PL26	;call to abstracted procedure
  1365  000D06  6EAD               	movwf	173,c	;volatile
  1366                           
  1367                           ;SIO.c: 64:     userPtr++;
  1368  000D08  4A09               	infsnz	_userPtr^0,f,c
  1369  000D0A  2A0A               	incf	(_userPtr+1)^0,f,c
  1370  000D0C  0012               	return	
  1371  000D0E                     l5073:
  1372                           
  1373                           ;SIO.c: 68:    if (RCREG == 'K') {
  1374  000D0E  0E4B               	movlw	75
  1375  000D10  18AE               	xorwf	174,w,c
  1376  000D12  A4D8               	btfss	status,2,c
  1377  000D14  0012               	return	
  1378                           
  1379                           ;SIO.c: 69:     Krebut = 1;
  1380  000D16  8076               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1381  000D18                     l5077:
  1382                           
  1383                           ;SIO.c: 70:     state = 3;
  1384  000D18  0E03               	movlw	3
  1385  000D1A  6E0F               	movwf	motorSIO@state^0,c
  1386  000D1C  0C03               	retlw	3
  1387  000D1E                     l5079:
  1388                           
  1389                           ;SIO.c: 74:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1390  000D1E  2860               	incf	_direccioSIO^0,w,c
  1391  000D20  E006               	bz	l5087
  1392  000D22  A2AC               	btfss	172,1,c	;volatile
  1393  000D24  D004               	goto	l5087
  1394                           
  1395                           ;SIO.c: 75:     TXREG = direccioSIO;
  1396  000D26  C060  FFAD         	movff	_direccioSIO,4013	;volatile
  1397                           
  1398                           ;SIO.c: 76:     direccioSIO = -1;
  1399  000D2A  6860               	setf	_direccioSIO^0,c
  1400  000D2C  D7F5               	goto	l5077
  1401  000D2E                     l5087:
  1402  000D2E  0E30               	movlw	48
  1403  000D30  645F               	cpfsgt	_novaTeclaSIO^0,c
  1404  000D32  D009               	goto	l1255
  1405  000D34  0E3A               	movlw	58
  1406  000D36  605F               	cpfslt	_novaTeclaSIO^0,c
  1407  000D38  D006               	goto	l1255
  1408  000D3A  A2AC               	btfss	172,1,c	;volatile
  1409  000D3C  D004               	goto	l1255
  1410                           
  1411                           ;SIO.c: 80:     TXREG = novaTeclaSIO;
  1412  000D3E  C05F  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1413                           
  1414                           ;SIO.c: 81:     novaTeclaSIO = 0;
  1415  000D42  6A5F               	clrf	_novaTeclaSIO^0,c
  1416  000D44  D7E9               	goto	l5077
  1417  000D46                     l1255:
  1418  000D46  B276               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1419  000D48  D002               	goto	u4940
  1420  000D4A  B2AC               	btfsc	172,1,c	;volatile
  1421  000D4C  D002               	goto	u4950
  1422  000D4E                     u4940:
  1423  000D4E  AA9E               	btfss	158,5,c	;volatile
  1424  000D50  0012               	return	
  1425  000D52                     u4950:
  1426                           
  1427                           ;SIO.c: 85:     LcClear();
  1428  000D52  EC89  F00D         	call	_LcClear	;wreg free
  1429                           
  1430                           ;SIO.c: 86:     LcNewString("ERRORS:");
  1431  000D56  0EE9               	movlw	low STR_6
  1432  000D58  6E4D               	movwf	LcNewString@new_s^0,c
  1433  000D5A  0E1F               	movlw	high STR_6
  1434  000D5C  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  1435  000D5E  EC5C  F00E         	call	_LcNewString	;wreg free
  1436                           
  1437                           ;SIO.c: 87:     TXREG = 'F';
  1438  000D62  0E46               	movlw	70
  1439  000D64  6EAD               	movwf	173,c	;volatile
  1440                           
  1441                           ;SIO.c: 88:     novaTeclaSIO = 0;
  1442  000D66  6A5F               	clrf	_novaTeclaSIO^0,c
  1443                           
  1444                           ;SIO.c: 89:     state = 4;
  1445  000D68  0E04               	movlw	4
  1446  000D6A  6E0F               	movwf	motorSIO@state^0,c
  1447  000D6C  0C04               	retlw	4
  1448  000D6E                     l1262:
  1449                           
  1450                           ;SIO.c: 93:    if (PIR1bits.RCIF) {
  1451  000D6E  AA9E               	btfss	158,5,c	;volatile
  1452  000D70  0012               	return	
  1453                           
  1454                           ;SIO.c: 94:                 score = RCREG;
  1455  000D72  CFAE F010          	movff	4014,_score	;volatile
  1456                           
  1457                           ;SIO.c: 95:                 UnewScore(score);
  1458  000D76  5010               	movf	_score^0,w,c
  1459  000D78  EC68  F00E         	call	_UnewScore
  1460                           
  1461                           ;SIO.c: 96:     CToAConverteix(score);
  1462  000D7C  5010               	movf	_score^0,w,c
  1463  000D7E  EC56  F00E         	call	_CToAConverteix
  1464                           
  1465                           ;SIO.c: 97:     TiResetTics(timerSIO);
  1466  000D82  5011               	movf	_timerSIO^0,w,c
  1467  000D84  ECD6  F00D         	call	_TiResetTics
  1468  000D88                     l5115:
  1469                           
  1470                           ;SIO.c: 98:     state = 5;
  1471  000D88  0E05               	movlw	5
  1472  000D8A  6E0F               	movwf	motorSIO@state^0,c
  1473  000D8C  0C05               	retlw	5
  1474  000D8E                     l5117:
  1475                           
  1476                           ;SIO.c: 102:    if (TiGetTics(timerSIO) > 2490) {
  1477  000D8E  5011               	movf	_timerSIO^0,w,c
  1478  000D90  EC52  F00D         	call	_TiGetTics
  1479  000D94  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  1480  000D96  D010               	goto	l5125
  1481  000D98  0EBB               	movlw	187
  1482  000D9A  5C4A               	subwf	?_TiGetTics^0,w,c
  1483  000D9C  0E09               	movlw	9
  1484  000D9E  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  1485  000DA0  E30B               	bnc	l5125
  1486                           
  1487                           ;SIO.c: 103:     LcClear();
  1488  000DA2  EC89  F00D         	call	_LcClear	;wreg free
  1489                           
  1490                           ;SIO.c: 104:     LcNewString("TIME LEFT: ");
  1491  000DA6  0ECC               	movlw	low STR_7
  1492  000DA8  6E4D               	movwf	LcNewString@new_s^0,c
  1493  000DAA  0E1F               	movlw	high STR_7
  1494  000DAC  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  1495  000DAE  EC5C  F00E         	call	_LcNewString	;wreg free
  1496                           
  1497                           ;SIO.c: 105:     state = 7;
  1498  000DB2  0E07               	movlw	7
  1499  000DB4  6E0F               	movwf	motorSIO@state^0,c
  1500                           
  1501                           ;SIO.c: 106:    }
  1502  000DB6  0C07               	retlw	7
  1503  000DB8                     l5125:
  1504  000DB8  5011               	movf	_timerSIO^0,w,c
  1505  000DBA  EC52  F00D         	call	_TiGetTics
  1506  000DBE  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  1507  000DC0  D006               	goto	u4980
  1508  000DC2  0EBA               	movlw	186
  1509  000DC4  5C4A               	subwf	?_TiGetTics^0,w,c
  1510  000DC6  0E09               	movlw	9
  1511  000DC8  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  1512  000DCA  B0D8               	btfsc	status,0,c
  1513  000DCC  0012               	return	
  1514  000DCE                     u4980:
  1515  000DCE  AA9E               	btfss	158,5,c	;volatile
  1516  000DD0  0012               	return	
  1517  000DD2  EC62  F00E         	call	_LcLliure	;wreg free
  1518  000DD6  A0D8               	btfss	status,0,c
  1519  000DD8  0012               	return	
  1520                           
  1521                           ;SIO.c: 108:     LcGotoXY(0,1);
  1522  000DDA  ECC1  F003         	call	PL34	;call to abstracted procedure
  1523  000DDE  ECFB  F00C         	call	_LcGotoXY
  1524                           
  1525                           ;SIO.c: 109:     LcPutChar(RCREG);
  1526  000DE2  50AE               	movf	174,w,c	;volatile
  1527  000DE4  EC25  F00C         	call	_LcPutChar
  1528                           
  1529                           ;SIO.c: 110:     state = 6;
  1530  000DE8  0E06               	movlw	6
  1531  000DEA  6E0F               	movwf	motorSIO@state^0,c
  1532  000DEC  0C06               	retlw	6
  1533  000DEE                     l5135:
  1534                           
  1535                           ;SIO.c: 114:    if (LcLliure()) {
  1536  000DEE  EC62  F00E         	call	_LcLliure	;wreg free
  1537  000DF2  A0D8               	btfss	status,0,c
  1538  000DF4  0012               	return	
  1539                           
  1540                           ;SIO.c: 115:     LcNewString(HGetTime());
  1541  000DF6  ECC5  F00E         	call	_HGetTime	;wreg free
  1542  000DFA  D856               	call	PL52	;call to abstracted procedure
  1543  000DFC  EC5C  F00E         	call	_LcNewString	;wreg free
  1544                           
  1545                           ;SIO.c: 116:     state = 8;
  1546  000E00  0E08               	movlw	8
  1547  000E02  6E0F               	movwf	motorSIO@state^0,c
  1548  000E04  0C08               	retlw	8
  1549  000E06                     l1270:
  1550                           
  1551                           ;SIO.c: 120:    if (PIR1bits.RCIF) {
  1552  000E06  AA9E               	btfss	158,5,c	;volatile
  1553  000E08  0012               	return	
  1554                           
  1555                           ;SIO.c: 121:     LcPutChar(RCREG);
  1556  000E0A  50AE               	movf	174,w,c	;volatile
  1557  000E0C  EC25  F00C         	call	_LcPutChar
  1558                           
  1559                           ;SIO.c: 122:                 TiResetTics(timerSIO);
  1560  000E10  5011               	movf	_timerSIO^0,w,c
  1561  000E12  ECD6  F00D         	call	_TiResetTics
  1562  000E16  D7B8               	goto	l5115
  1563  000E18                     l5145:
  1564                           
  1565                           ;SIO.c: 127:    if (LcLliure()) {
  1566  000E18  EC62  F00E         	call	_LcLliure	;wreg free
  1567  000E1C  A0D8               	btfss	status,0,c
  1568  000E1E  0012               	return	
  1569                           
  1570                           ;SIO.c: 128:     LcGotoXY(0,1);
  1571  000E20  ECC1  F003         	call	PL34	;call to abstracted procedure
  1572  000E24  ECFB  F00C         	call	_LcGotoXY
  1573                           
  1574                           ;SIO.c: 129:     LcNewString("SCORE: ");
  1575  000E28  0EE1               	movlw	low STR_8
  1576  000E2A  6E4D               	movwf	LcNewString@new_s^0,c
  1577  000E2C  0E1F               	movlw	high STR_8
  1578  000E2E  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  1579  000E30  EC5C  F00E         	call	_LcNewString	;wreg free
  1580                           
  1581                           ;SIO.c: 130:     state = 9;
  1582  000E34  0E09               	movlw	9
  1583  000E36  6E0F               	movwf	motorSIO@state^0,c
  1584  000E38  0C09               	retlw	9
  1585  000E3A                     l5153:
  1586                           
  1587                           ;SIO.c: 134:    if (LcLliure() && CToAHaAcabat() == 250) {
  1588  000E3A  EC62  F00E         	call	_LcLliure	;wreg free
  1589  000E3E  A0D8               	btfss	status,0,c
  1590  000E40  0012               	return	
  1591  000E42  ECDF  F00E         	call	_CToAHaAcabat	;wreg free
  1592  000E46  0AFA               	xorlw	250
  1593  000E48  A4D8               	btfss	status,2,c
  1594  000E4A  0012               	return	
  1595                           
  1596                           ;SIO.c: 135:     LcNewString(CToAobtenir());
  1597  000E4C  ECDD  F00E         	call	_CToAobtenir	;wreg free
  1598  000E50  D82B               	call	PL52	;call to abstracted procedure
  1599  000E52  EC5C  F00E         	call	_LcNewString	;wreg free
  1600                           
  1601                           ;SIO.c: 136:     usuariActualSIO = -1;
  1602  000E56  6861               	setf	_usuariActualSIO^0,c
  1603                           
  1604                           ;SIO.c: 137:     state = 0;
  1605  000E58  6A0F               	clrf	motorSIO@state^0,c
  1606  000E5A  0012               	return	
  1607  000E5C                     l5165:
  1608  000E5C  500F               	movf	motorSIO@state^0,w,c
  1609  000E5E  6E59               	movwf	??_motorSIO^0,c
  1610  000E60  6A5A               	clrf	(??_motorSIO+1)^0,c
  1611                           
  1612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1613                           ; Switch size 1, requested type "space"
  1614                           ; Number of cases is 1, Range of values is 0 to 0
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte            4     3 (average)
  1618                           ;	Chosen strategy is simple_byte
  1619  000E62  505A               	movf	(??_motorSIO+1)^0,w,c
  1620  000E64  A4D8               	btfss	status,2,c
  1621  000E66  0012               	return	
  1622                           
  1623                           ; Switch size 1, requested type "space"
  1624                           ; Number of cases is 10, Range of values is 0 to 9
  1625                           ; switch strategies available:
  1626                           ; Name         Instructions Cycles
  1627                           ; simple_byte           31    16 (average)
  1628                           ;	Chosen strategy is simple_byte
  1629  000E68  5059               	movf	??_motorSIO^0,w,c
  1630  000E6A  E101 D72F          	bz	l5047
  1631  000E6E  0A01               	xorlw	1	; case 1
  1632  000E70  E101 D73A          	bz	l5057
  1633  000E74  0A03               	xorlw	3	; case 2
  1634  000E76  E101 D74A          	bz	l5073
  1635  000E7A  0A01               	xorlw	1	; case 3
  1636  000E7C  E101 D74F          	bz	l5079
  1637  000E80  0A07               	xorlw	7	; case 4
  1638  000E82  E101 D774          	bz	l1262
  1639  000E86  0A01               	xorlw	1	; case 5
  1640  000E88  E082               	bz	l5117
  1641  000E8A  0A03               	xorlw	3	; case 6
  1642  000E8C  E0BC               	bz	l1270
  1643  000E8E  0A01               	xorlw	1	; case 7
  1644  000E90  E0AE               	bz	l5135
  1645  000E92  0A0F               	xorlw	15	; case 8
  1646  000E94  E0C1               	bz	l5145
  1647  000E96  0A01               	xorlw	1	; case 9
  1648  000E98  E0D0               	bz	l5153
  1649  000E9A  0012               	return		;funcret
  1650  000E9C                     __end_of_motorSIO:
  1651                           	callstack 0
  1652  000E9C                     PL26:
  1653                           	callstack 24
  1654  000E9C  C009  FFD9         	movff	_userPtr,fsr2l
  1655  000EA0  C00A  FFDA         	movff	_userPtr+1,fsr2h
  1656  000EA4  50DF               	movf	indf2,w,c
  1657  000EA6  0012               	return	
  1658  000EA8                     __end_ofPL26:
  1659                           	callstack 0
  1660  000EA8                     PL52:
  1661                           	callstack 24
  1662  000EA8  6E59               	movwf	??_motorSIO^0,c
  1663  000EAA  C059  F04D         	movff	??_motorSIO,LcNewString@new_s
  1664  000EAE  6A4E               	clrf	(LcNewString@new_s+1)^0,c
  1665  000EB0  0012               	return	
  1666  000EB2                     __end_ofPL52:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _UnewScore *****************
  1670 ;; Defined at:
  1671 ;;		line 274 in file "Usuaris.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  scoretmp        1    wreg     unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1
  1685 ;;      Params:         0       0       0
  1686 ;;      Locals:         1       0       0
  1687 ;;      Temps:          0       0       0
  1688 ;;      Totals:         1       0       0
  1689 ;;Total ram usage:        1 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 2
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_motorSIO
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text2
  1700  001CD0                     __ptext2:
  1701                           	callstack 0
  1702  001CD0                     _UnewScore:
  1703                           	callstack 27
  1704                           
  1705                           ;incstack = 0
  1706                           ;UnewScore@scoretmp stored from wreg
  1707  001CD0  6E4A               	movwf	UnewScore@scoretmp^0,c
  1708                           
  1709                           ;Usuaris.c: 275:     scoreUsr = scoretmp;
  1710  001CD2  C04A  F028         	movff	UnewScore@scoretmp,_scoreUsr
  1711                           
  1712                           ;Usuaris.c: 276:     do_updateScore = 1;
  1713  001CD6  8677               	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1714  001CD8  0012               	return		;funcret
  1715  001CDA                     __end_of_UnewScore:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function _motorJoc *****************
  1719 ;; Defined at:
  1720 ;;		line 44 in file "Joc.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1
  1734 ;;      Params:         0       0       0
  1735 ;;      Locals:         0       0       0
  1736 ;;      Temps:          2       0       0
  1737 ;;      Totals:         2       0       0
  1738 ;;Total ram usage:        2 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; Hardware stack levels required when called: 5
  1741 ;; This function calls:
  1742 ;;		_HClearNouSegon
  1743 ;;		_HGetTime
  1744 ;;		_HJugant
  1745 ;;		_HNouSegon
  1746 ;;		_HnoJugant
  1747 ;;		_LcGotoXY
  1748 ;;		_LcLliure
  1749 ;;		_LcNewString
  1750 ;;		_SIONovaDireccio
  1751 ;;		_SIONovaTecla
  1752 ;;		_SIOStartGame
  1753 ;;		_SIOcheckKrebut
  1754 ;;		_SIOendGame
  1755 ;;		_conversorJoystick
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text3
  1762  001436                     __ptext3:
  1763                           	callstack 0
  1764  001436                     _motorJoc:
  1765                           	callstack 25
  1766                           
  1767                           ;Joc.c: 45:     static char state = 0;;Joc.c: 47:  switch(state) {
  1768                           
  1769                           ;incstack = 0
  1770  001436  D043               	goto	l5039
  1771  001438                     l4993:
  1772                           
  1773                           ;Joc.c: 49:    if (usuariJoc != -1) {
  1774  001438  2863               	incf	_usuariJoc^0,w,c
  1775  00143A  B4D8               	btfsc	status,2,c
  1776  00143C  0012               	return	
  1777                           
  1778                           ;Joc.c: 50:     SIOStartGame(usuariJoc);
  1779  00143E  5063               	movf	_usuariJoc^0,w,c
  1780  001440  EC6D  F00E         	call	_SIOStartGame
  1781                           
  1782                           ;Joc.c: 51:     jugantJoc = 1;
  1783  001444  8476               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1784                           
  1785                           ;Joc.c: 52:     state = 2;
  1786  001446  0E02               	movlw	2
  1787  001448  6E12               	movwf	motorJoc@state^0,c
  1788                           
  1789                           ;Joc.c: 54:   break;
  1790                           
  1791                           ;Joc.c: 53:    }
  1792  00144A  0C02               	retlw	2
  1793  00144C                     l1148:
  1794                           
  1795                           ;Joc.c: 56:    if (!jugantJoc) {
  1796  00144C  B476               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1797  00144E  D008               	goto	l5009
  1798                           
  1799                           ;Joc.c: 57:     usuariJoc = -1;
  1800  001450  6863               	setf	_usuariJoc^0,c
  1801                           
  1802                           ;Joc.c: 58:     HnoJugant();
  1803  001452  ECC3  F00E         	call	_HnoJugant	;wreg free
  1804                           
  1805                           ;Joc.c: 59:     SIOendGame();
  1806  001456  ECC1  F00E         	call	_SIOendGame	;wreg free
  1807                           
  1808                           ;Joc.c: 60:     LATBbits.LATB3 = 0;
  1809  00145A  968A               	bcf	138,3,c	;volatile
  1810  00145C                     l5007:
  1811                           
  1812                           ;Joc.c: 61:     state--;
  1813  00145C  0612               	decf	motorJoc@state^0,f,c
  1814                           
  1815                           ;Joc.c: 62:    }
  1816  00145E  0012               	return	
  1817  001460                     l5009:
  1818  001460  BE13               	btfsc	_direccioJoc^0,7,c
  1819  001462  D007               	goto	l5015
  1820                           
  1821                           ;Joc.c: 64:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1822  001464  5013               	movf	_direccioJoc^0,w,c
  1823  001466  EC65  F00D         	call	_conversorJoystick
  1824  00146A  EC75  F00E         	call	_SIONovaDireccio
  1825                           
  1826                           ;Joc.c: 65:     direccioJoc = -1;
  1827  00146E  6813               	setf	_direccioJoc^0,c
  1828                           
  1829                           ;Joc.c: 66:    }
  1830  001470  0012               	return	
  1831  001472                     l5015:
  1832  001472  EC2C  F00E         	call	_HNouSegon	;wreg free
  1833  001476  E311               	bnc	l5025
  1834  001478  EC62  F00E         	call	_LcLliure	;wreg free
  1835  00147C  E30E               	bnc	l5025
  1836                           
  1837                           ;Joc.c: 68:     HClearNouSegon();
  1838  00147E  ECC7  F00E         	call	_HClearNouSegon	;wreg free
  1839                           
  1840                           ;Joc.c: 69:     LcGotoXY(0,1);
  1841  001482  ECC1  F003         	call	PL34	;call to abstracted procedure
  1842  001486  ECFB  F00C         	call	_LcGotoXY
  1843                           
  1844                           ;Joc.c: 70:     LcNewString(HGetTime());
  1845  00148A  ECC5  F00E         	call	_HGetTime	;wreg free
  1846  00148E  6E58               	movwf	??_motorJoc^0,c
  1847  001490  C058  F04D         	movff	??_motorJoc,LcNewString@new_s
  1848  001494  6A4E               	clrf	(LcNewString@new_s+1)^0,c
  1849  001496  EF5C  F00E         	goto	_LcNewString	;wreg free
  1850  00149A                     l5025:
  1851  00149A  5062               	movf	_novaTeclaJOC^0,w,c
  1852  00149C  0A80               	xorlw	128
  1853  00149E  0F7F               	addlw	-129
  1854  0014A0  A0D8               	btfss	status,0,c
  1855  0014A2  0012               	return	
  1856                           
  1857                           ;Joc.c: 73:     SIONovaTecla(novaTeclaJOC+48);
  1858  0014A4  5062               	movf	_novaTeclaJOC^0,w,c
  1859  0014A6  0F30               	addlw	48
  1860  0014A8  EC71  F00E         	call	_SIONovaTecla
  1861                           
  1862                           ;Joc.c: 74:     novaTeclaJOC = -1;
  1863  0014AC  6862               	setf	_novaTeclaJOC^0,c
  1864  0014AE  0012               	return	
  1865  0014B0                     l5031:
  1866                           
  1867                           ;Joc.c: 78:    if (SIOcheckKrebut()) {
  1868  0014B0  EC26  F00E         	call	_SIOcheckKrebut	;wreg free
  1869  0014B4  A0D8               	btfss	status,0,c
  1870  0014B6  0012               	return	
  1871                           
  1872                           ;Joc.c: 79:     HJugant();
  1873  0014B8  ECB5  F00E         	call	_HJugant	;wreg free
  1874  0014BC  D7CF               	goto	l5007
  1875  0014BE                     l5039:
  1876  0014BE  5012               	movf	motorJoc@state^0,w,c
  1877  0014C0  6E58               	movwf	??_motorJoc^0,c
  1878  0014C2  6A59               	clrf	(??_motorJoc+1)^0,c
  1879                           
  1880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1881                           ; Switch size 1, requested type "space"
  1882                           ; Number of cases is 1, Range of values is 0 to 0
  1883                           ; switch strategies available:
  1884                           ; Name         Instructions Cycles
  1885                           ; simple_byte            4     3 (average)
  1886                           ;	Chosen strategy is simple_byte
  1887  0014C4  5059               	movf	(??_motorJoc+1)^0,w,c
  1888  0014C6  A4D8               	btfss	status,2,c
  1889  0014C8  0012               	return	
  1890                           
  1891                           ; Switch size 1, requested type "space"
  1892                           ; Number of cases is 3, Range of values is 0 to 2
  1893                           ; switch strategies available:
  1894                           ; Name         Instructions Cycles
  1895                           ; simple_byte           10     6 (average)
  1896                           ;	Chosen strategy is simple_byte
  1897  0014CA  5058               	movf	??_motorJoc^0,w,c
  1898  0014CC  E0B5               	bz	l4993
  1899  0014CE  0A01               	xorlw	1	; case 1
  1900  0014D0  E0BD               	bz	l1148
  1901  0014D2  0A03               	xorlw	3	; case 2
  1902  0014D4  E0ED               	bz	l5031
  1903  0014D6  0012               	return		;funcret
  1904  0014D8                     __end_of_motorJoc:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _conversorJoystick *****************
  1908 ;; Defined at:
  1909 ;;		line 27 in file "Joc.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  direc           1    wreg     unsigned char 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  direc           1    5[COMRAM] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      unsigned char 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1
  1923 ;;      Params:         0       0       0
  1924 ;;      Locals:         1       0       0
  1925 ;;      Temps:          0       0       0
  1926 ;;      Totals:         1       0       0
  1927 ;;Total ram usage:        1 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 2
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_motorJoc
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text4
  1938  001ACA                     __ptext4:
  1939                           	callstack 0
  1940  001ACA                     _conversorJoystick:
  1941                           	callstack 27
  1942                           
  1943                           ;incstack = 0
  1944                           ;conversorJoystick@direc stored from wreg
  1945  001ACA  6E4A               	movwf	conversorJoystick@direc^0,c
  1946                           
  1947                           ;Joc.c: 29:     if (direc==2) {
  1948  001ACC  0E02               	movlw	2
  1949  001ACE  184A               	xorwf	conversorJoystick@direc^0,w,c
  1950  001AD0  E101               	bnz	l2331
  1951                           
  1952                           ;Joc.c: 30:         return 'W';
  1953  001AD2  0C57               	retlw	87
  1954  001AD4                     l2331:
  1955                           
  1956                           ;Joc.c: 32:     if (direc==6) {
  1957  001AD4  0E06               	movlw	6
  1958  001AD6  184A               	xorwf	conversorJoystick@direc^0,w,c
  1959  001AD8  E101               	bnz	l2337
  1960                           
  1961                           ;Joc.c: 33:         return 'D';
  1962  001ADA  0C44               	retlw	68
  1963  001ADC                     l2337:
  1964                           
  1965                           ;Joc.c: 35:     if (direc==8) {
  1966  001ADC  0E08               	movlw	8
  1967  001ADE  184A               	xorwf	conversorJoystick@direc^0,w,c
  1968  001AE0  E101               	bnz	l2343
  1969                           
  1970                           ;Joc.c: 36:         return 'S';
  1971  001AE2  0C53               	retlw	83
  1972  001AE4                     l2343:
  1973                           
  1974                           ;Joc.c: 38:     if (direc==4) {
  1975  001AE4  0E04               	movlw	4
  1976  001AE6  184A               	xorwf	conversorJoystick@direc^0,w,c
  1977  001AE8  E101               	bnz	l2349
  1978                           
  1979                           ;Joc.c: 39:         return 'A';
  1980  001AEA  0C41               	retlw	65
  1981  001AEC                     l2349:
  1982                           
  1983                           ;Joc.c: 41:     return 0;
  1984  001AEC  0C00               	retlw	0	;funcret
  1985  001AEE                     __end_of_conversorJoystick:
  1986                           	callstack 0
  1987                           
  1988 ;; *************** function _SIOendGame *****************
  1989 ;; Defined at:
  1990 ;;		line 23 in file "SIO.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		None
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1
  2004 ;;      Params:         0       0       0
  2005 ;;      Locals:         0       0       0
  2006 ;;      Temps:          0       0       0
  2007 ;;      Totals:         0       0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 2
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_motorJoc
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text5
  2019  001D82                     __ptext5:
  2020                           	callstack 0
  2021  001D82                     _SIOendGame:
  2022                           	callstack 27
  2023                           
  2024                           ;SIO.c: 24:     jugantSIO = 0;
  2025                           
  2026                           ;incstack = 0
  2027  001D82  9276               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2028  001D84  0012               	return		;funcret
  2029  001D86                     __end_of_SIOendGame:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _SIOcheckKrebut *****************
  2033 ;; Defined at:
  2034 ;;		line 26 in file "SIO.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;		None               void
  2041 ;; Registers used:
  2042 ;;		status,0
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1
  2048 ;;      Params:         0       0       0
  2049 ;;      Locals:         0       0       0
  2050 ;;      Temps:          0       0       0
  2051 ;;      Totals:         0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 2
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_motorJoc
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text6
  2063  001C4C                     __ptext6:
  2064                           	callstack 0
  2065  001C4C                     _SIOcheckKrebut:
  2066                           	callstack 27
  2067                           
  2068                           ;SIO.c: 27:     return Krebut;
  2069                           
  2070                           ;incstack = 0
  2071  001C4C  B076               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2072  001C4E  D002               	goto	l2365
  2073  001C50  90D8               	bcf	status,0,c
  2074  001C52  0012               	return	
  2075  001C54                     l2365:
  2076  001C54  80D8               	bsf	status,0,c
  2077  001C56  0012               	return		;funcret
  2078  001C58                     __end_of_SIOcheckKrebut:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _SIOStartGame *****************
  2082 ;; Defined at:
  2083 ;;		line 33 in file "SIO.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  usuari          1    wreg     unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  usuari          1    5[COMRAM] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1
  2097 ;;      Params:         0       0       0
  2098 ;;      Locals:         1       0       0
  2099 ;;      Temps:          0       0       0
  2100 ;;      Totals:         1       0       0
  2101 ;;Total ram usage:        1 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 2
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_motorJoc
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text7
  2112  001CDA                     __ptext7:
  2113                           	callstack 0
  2114  001CDA                     _SIOStartGame:
  2115                           	callstack 27
  2116                           
  2117                           ;incstack = 0
  2118                           ;SIOStartGame@usuari stored from wreg
  2119  001CDA  6E4A               	movwf	SIOStartGame@usuari^0,c
  2120                           
  2121                           ;SIO.c: 34:     usuariActualSIO = usuari;
  2122  001CDC  C04A  F061         	movff	SIOStartGame@usuari,_usuariActualSIO
  2123  001CE0  0012               	return		;funcret
  2124  001CE2                     __end_of_SIOStartGame:
  2125                           	callstack 0
  2126                           
  2127 ;; *************** function _SIONovaTecla *****************
  2128 ;; Defined at:
  2129 ;;		line 40 in file "SIO.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  tecla           1    wreg     char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  tecla           1    5[COMRAM] char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1
  2143 ;;      Params:         0       0       0
  2144 ;;      Locals:         1       0       0
  2145 ;;      Temps:          0       0       0
  2146 ;;      Totals:         1       0       0
  2147 ;;Total ram usage:        1 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 2
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_motorJoc
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text8
  2158  001CE2                     __ptext8:
  2159                           	callstack 0
  2160  001CE2                     _SIONovaTecla:
  2161                           	callstack 27
  2162                           
  2163                           ;incstack = 0
  2164                           ;SIONovaTecla@tecla stored from wreg
  2165  001CE2  6E4A               	movwf	SIONovaTecla@tecla^0,c
  2166                           
  2167                           ;SIO.c: 41:     novaTeclaSIO = tecla;
  2168  001CE4  C04A  F05F         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2169  001CE8  0012               	return		;funcret
  2170  001CEA                     __end_of_SIONovaTecla:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _SIONovaDireccio *****************
  2174 ;; Defined at:
  2175 ;;		line 29 in file "SIO.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  num             1    wreg     unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  num             1    5[COMRAM] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1
  2189 ;;      Params:         0       0       0
  2190 ;;      Locals:         1       0       0
  2191 ;;      Temps:          0       0       0
  2192 ;;      Totals:         1       0       0
  2193 ;;Total ram usage:        1 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 2
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_motorJoc
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text9
  2204  001CEA                     __ptext9:
  2205                           	callstack 0
  2206  001CEA                     _SIONovaDireccio:
  2207                           	callstack 27
  2208                           
  2209                           ;incstack = 0
  2210                           ;SIONovaDireccio@num stored from wreg
  2211  001CEA  6E4A               	movwf	SIONovaDireccio@num^0,c
  2212                           
  2213                           ;SIO.c: 30:     direccioSIO = num;
  2214  001CEC  C04A  F060         	movff	SIONovaDireccio@num,_direccioSIO
  2215  001CF0  0012               	return		;funcret
  2216  001CF2                     __end_of_SIONovaDireccio:
  2217                           	callstack 0
  2218                           
  2219 ;; *************** function _HnoJugant *****************
  2220 ;; Defined at:
  2221 ;;		line 35 in file "Hora.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		None
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1
  2235 ;;      Params:         0       0       0
  2236 ;;      Locals:         0       0       0
  2237 ;;      Temps:          0       0       0
  2238 ;;      Totals:         0       0       0
  2239 ;;Total ram usage:        0 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 2
  2242 ;; This function calls:
  2243 ;;		Nothing
  2244 ;; This function is called by:
  2245 ;;		_motorJoc
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text10
  2250  001D86                     __ptext10:
  2251                           	callstack 0
  2252  001D86                     _HnoJugant:
  2253                           	callstack 27
  2254                           
  2255                           ;Hora.c: 36:     jugant = 0;
  2256                           
  2257                           ;incstack = 0
  2258  001D86  9A76               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2259  001D88  0012               	return		;funcret
  2260  001D8A                     __end_of_HnoJugant:
  2261                           	callstack 0
  2262                           
  2263 ;; *************** function _HNouSegon *****************
  2264 ;; Defined at:
  2265 ;;		line 23 in file "Hora.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;		None               void
  2272 ;; Registers used:
  2273 ;;		status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1
  2279 ;;      Params:         0       0       0
  2280 ;;      Locals:         0       0       0
  2281 ;;      Temps:          0       0       0
  2282 ;;      Totals:         0       0       0
  2283 ;;Total ram usage:        0 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 2
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_motorJoc
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text11
  2294  001C58                     __ptext11:
  2295                           	callstack 0
  2296  001C58                     _HNouSegon:
  2297                           	callstack 27
  2298                           
  2299                           ;Hora.c: 24:     return nouSegon;
  2300                           
  2301                           ;incstack = 0
  2302  001C58  B876               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2303  001C5A  D002               	goto	l2311
  2304  001C5C  90D8               	bcf	status,0,c
  2305  001C5E  0012               	return	
  2306  001C60                     l2311:
  2307  001C60  80D8               	bsf	status,0,c
  2308  001C62  0012               	return		;funcret
  2309  001C64                     __end_of_HNouSegon:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _HJugant *****************
  2313 ;; Defined at:
  2314 ;;		line 38 in file "Hora.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		None
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1
  2328 ;;      Params:         0       0       0
  2329 ;;      Locals:         0       0       0
  2330 ;;      Temps:          0       0       0
  2331 ;;      Totals:         0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 2
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_motorJoc
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text12
  2343  001D6A                     __ptext12:
  2344                           	callstack 0
  2345  001D6A                     _HJugant:
  2346                           	callstack 27
  2347                           
  2348                           ;Hora.c: 39:     jugant = 1;
  2349                           
  2350                           ;incstack = 0
  2351  001D6A  8A76               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2352                           
  2353                           ;Hora.c: 40:     tempsAcabat = 0;
  2354  001D6C  9676               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2355  001D6E  0012               	return		;funcret
  2356  001D70                     __end_of_HJugant:
  2357                           	callstack 0
  2358                           
  2359 ;; *************** function _HGetTime *****************
  2360 ;; Defined at:
  2361 ;;		line 31 in file "Hora.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      PTR unsigned char 
  2368 ;; Registers used:
  2369 ;;		wreg
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1
  2375 ;;      Params:         2       0       0
  2376 ;;      Locals:         0       0       0
  2377 ;;      Temps:          0       0       0
  2378 ;;      Totals:         2       0       0
  2379 ;;Total ram usage:        2 bytes
  2380 ;; Hardware stack levels used: 1
  2381 ;; Hardware stack levels required when called: 2
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_motorJoc
  2386 ;;		_motorSIO
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text13
  2391  001D8A                     __ptext13:
  2392                           	callstack 0
  2393  001D8A                     _HGetTime:
  2394                           	callstack 27
  2395                           
  2396                           ;Hora.c: 32:     return hora;
  2397                           
  2398                           ;incstack = 0
  2399  001D8A  0E6D               	movlw	_hora& (0+255)
  2400  001D8C  0012               	return		;funcret
  2401  001D8E                     __end_of_HGetTime:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _HClearNouSegon *****************
  2405 ;; Defined at:
  2406 ;;		line 27 in file "Hora.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		None
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1
  2420 ;;      Params:         0       0       0
  2421 ;;      Locals:         0       0       0
  2422 ;;      Temps:          0       0       0
  2423 ;;      Totals:         0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 2
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_motorJoc
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text14
  2435  001D8E                     __ptext14:
  2436                           	callstack 0
  2437  001D8E                     _HClearNouSegon:
  2438                           	callstack 27
  2439                           
  2440                           ;Hora.c: 28:     nouSegon = 0;
  2441                           
  2442                           ;incstack = 0
  2443  001D8E  9876               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2444  001D90  0012               	return		;funcret
  2445  001D92                     __end_of_HClearNouSegon:
  2446                           	callstack 0
  2447                           
  2448 ;; *************** function _motorHora *****************
  2449 ;; Defined at:
  2450 ;;		line 46 in file "Hora.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1
  2464 ;;      Params:         0       0       0
  2465 ;;      Locals:         0       0       0
  2466 ;;      Temps:          2       0       0
  2467 ;;      Totals:         2       0       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 3
  2471 ;; This function calls:
  2472 ;;		_TiGetTics
  2473 ;;		_TiResetTics
  2474 ;;		_playAltaveu
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text15
  2481  00156A                     __ptext15:
  2482                           	callstack 0
  2483  00156A                     _motorHora:
  2484                           	callstack 27
  2485                           
  2486                           ;Hora.c: 47:  static char state = 0;;Hora.c: 49:  switch(state) {
  2487                           
  2488                           ;incstack = 0
  2489  00156A  D038               	goto	l5223
  2490  00156C                     l5173:
  2491                           
  2492                           ;Hora.c: 51:    if (TiGetTics(timerHora) >= 1205) {
  2493  00156C  5016               	movf	_timerHora^0,w,c
  2494  00156E  EC52  F00D         	call	_TiGetTics
  2495  001572  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  2496  001574  0012               	return	
  2497  001576  EC20  F005         	call	PL70	;call to abstracted procedure
  2498  00157A  A0D8               	btfss	status,0,c
  2499  00157C  0012               	return	
  2500                           
  2501                           ;Hora.c: 52:     TiResetTics(timerHora);
  2502  00157E  5016               	movf	_timerHora^0,w,c
  2503  001580  ECD6  F00D         	call	_TiResetTics
  2504                           
  2505                           ;Hora.c: 53:     if(jugant){
  2506  001584  AA76               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2507  001586  D028               	goto	l5219
  2508                           
  2509                           ;Hora.c: 54:       nouSegon = 1;
  2510  001588  8876               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2511                           
  2512                           ;Hora.c: 56:      hora[4]--;
  2513  00158A  0671               	decf	(_hora+4)^0,f,c
  2514                           
  2515                           ;Hora.c: 57:      if(hora[4] == ('0'-1)){
  2516  00158C  0E2F               	movlw	47
  2517  00158E  1871               	xorwf	(_hora+4)^0,w,c
  2518  001590  E103               	bnz	l5189
  2519                           
  2520                           ;Hora.c: 58:       hora[4] = '9';
  2521  001592  0E39               	movlw	57
  2522  001594  6E71               	movwf	(_hora+4)^0,c
  2523                           
  2524                           ;Hora.c: 59:       hora[3]--;
  2525  001596  0670               	decf	(_hora+3)^0,f,c
  2526  001598                     l5189:
  2527                           
  2528                           ;Hora.c: 62:      if(hora[3] == ('0'-1)){
  2529  001598  0E2F               	movlw	47
  2530  00159A  1870               	xorwf	(_hora+3)^0,w,c
  2531  00159C  E103               	bnz	l5195
  2532                           
  2533                           ;Hora.c: 63:       hora[3] = '5';
  2534  00159E  0E35               	movlw	53
  2535  0015A0  6E70               	movwf	(_hora+3)^0,c
  2536                           
  2537                           ;Hora.c: 64:       hora[1]--;
  2538  0015A2  066E               	decf	(_hora+1)^0,f,c
  2539  0015A4                     l5195:
  2540                           
  2541                           ;Hora.c: 67:      if(hora[1] == ('0'-1)){
  2542  0015A4  0E2F               	movlw	47
  2543  0015A6  186E               	xorwf	(_hora+1)^0,w,c
  2544  0015A8  E103               	bnz	l5201
  2545                           
  2546                           ;Hora.c: 68:       hora[1] = '9';
  2547  0015AA  0E39               	movlw	57
  2548  0015AC  6E6E               	movwf	(_hora+1)^0,c
  2549                           
  2550                           ;Hora.c: 69:       hora[0]--;
  2551  0015AE  066D               	decf	_hora^0,f,c
  2552  0015B0                     l5201:
  2553                           
  2554                           ;Hora.c: 72:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2555  0015B0  0E30               	movlw	48
  2556  0015B2  186D               	xorwf	_hora^0,w,c
  2557  0015B4  E10A               	bnz	l5211
  2558  0015B6  0E30               	movlw	48
  2559  0015B8  186E               	xorwf	(_hora+1)^0,w,c
  2560  0015BA  E107               	bnz	l5211
  2561  0015BC  0E30               	movlw	48
  2562  0015BE  1870               	xorwf	(_hora+3)^0,w,c
  2563  0015C0  E104               	bnz	l5211
  2564  0015C2  0E30               	movlw	48
  2565  0015C4  1871               	xorwf	(_hora+4)^0,w,c
  2566  0015C6  E101               	bnz	l5211
  2567                           
  2568                           ;Hora.c: 73:       tempsAcabat = 1;
  2569  0015C8  8676               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2570  0015CA                     l5211:
  2571                           
  2572                           ;Hora.c: 76:      segons++;
  2573  0015CA  2A15               	incf	_segons^0,f,c
  2574                           
  2575                           ;Hora.c: 77:      if(segons > 59){
  2576  0015CC  0E3B               	movlw	59
  2577  0015CE  6415               	cpfsgt	_segons^0,c
  2578  0015D0  D003               	goto	l5219
  2579                           
  2580                           ;Hora.c: 78:       playAltaveu();
  2581  0015D2  ECC9  F00E         	call	_playAltaveu	;wreg free
  2582                           
  2583                           ;Hora.c: 79:       segons = 0;
  2584  0015D6  6A15               	clrf	_segons^0,c
  2585  0015D8                     l5219:
  2586                           
  2587                           ;Hora.c: 82:     state = 0;
  2588  0015D8  6A14               	clrf	motorHora@state^0,c
  2589  0015DA  0012               	return	
  2590  0015DC                     l5223:
  2591  0015DC  5014               	movf	motorHora@state^0,w,c
  2592  0015DE  6E51               	movwf	??_motorHora^0,c
  2593  0015E0  6A52               	clrf	(??_motorHora+1)^0,c
  2594                           
  2595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2596                           ; Switch size 1, requested type "space"
  2597                           ; Number of cases is 1, Range of values is 0 to 0
  2598                           ; switch strategies available:
  2599                           ; Name         Instructions Cycles
  2600                           ; simple_byte            4     3 (average)
  2601                           ;	Chosen strategy is simple_byte
  2602  0015E2  5052               	movf	(??_motorHora+1)^0,w,c
  2603  0015E4  A4D8               	btfss	status,2,c
  2604  0015E6  0012               	return	
  2605                           
  2606                           ; Switch size 1, requested type "space"
  2607                           ; Number of cases is 1, Range of values is 0 to 0
  2608                           ; switch strategies available:
  2609                           ; Name         Instructions Cycles
  2610                           ; simple_byte            4     3 (average)
  2611                           ;	Chosen strategy is simple_byte
  2612  0015E8  5051               	movf	??_motorHora^0,w,c
  2613  0015EA  E0C0               	bz	l5173
  2614  0015EC  0012               	return		;funcret
  2615  0015EE                     __end_of_motorHora:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _playAltaveu *****************
  2619 ;; Defined at:
  2620 ;;		line 13 in file "Altaveu.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		None
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1
  2634 ;;      Params:         0       0       0
  2635 ;;      Locals:         0       0       0
  2636 ;;      Temps:          0       0       0
  2637 ;;      Totals:         0       0       0
  2638 ;;Total ram usage:        0 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 2
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_motorHora
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text16
  2649  001D92                     __ptext16:
  2650                           	callstack 0
  2651  001D92                     _playAltaveu:
  2652                           	callstack 27
  2653                           
  2654                           ;Altaveu.c: 14:     reproduir = 1;
  2655                           
  2656                           ;incstack = 0
  2657  001D92  8477               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2658  001D94  0012               	return		;funcret
  2659  001D96                     __end_of_playAltaveu:
  2660                           	callstack 0
  2661                           
  2662 ;; *************** function _motorAltaveu *****************
  2663 ;; Defined at:
  2664 ;;		line 16 in file "Altaveu.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1
  2678 ;;      Params:         0       0       0
  2679 ;;      Locals:         0       0       0
  2680 ;;      Temps:          3       0       0
  2681 ;;      Totals:         3       0       0
  2682 ;;Total ram usage:        3 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; Hardware stack levels required when called: 3
  2685 ;; This function calls:
  2686 ;;		_TiGetTics
  2687 ;;		_TiResetTics
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text17
  2694  0014D8                     __ptext17:
  2695                           	callstack 0
  2696  0014D8                     _motorAltaveu:
  2697                           	callstack 27
  2698                           
  2699                           ;Altaveu.c: 17: static char state = 0;;Altaveu.c: 19:  switch(state) {
  2700                           
  2701                           ;incstack = 0
  2702  0014D8  D02F               	goto	l5823
  2703  0014DA                     l849:
  2704                           
  2705                           ;Altaveu.c: 21:    if (reproduir) {
  2706  0014DA  A477               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2707  0014DC  0012               	return	
  2708                           
  2709                           ;Altaveu.c: 22:     nota = 1;
  2710  0014DE  0E01               	movlw	1
  2711  0014E0  6E26               	movwf	_nota^0,c
  2712                           
  2713                           ;Altaveu.c: 23:     copsNota = 0;
  2714  0014E2  6A24               	clrf	_copsNota^0,c
  2715                           
  2716                           ;Altaveu.c: 24:     TiResetTics(timerAltaveu);
  2717  0014E4  5025               	movf	_timerAltaveu^0,w,c
  2718  0014E6  ECD6  F00D         	call	_TiResetTics
  2719                           
  2720                           ;Altaveu.c: 25:     state = 1;
  2721  0014EA  0E01               	movlw	1
  2722  0014EC  6E23               	movwf	motorAltaveu@state^0,c
  2723  0014EE  0C01               	retlw	1
  2724  0014F0                     l5791:
  2725                           
  2726                           ;Altaveu.c: 29:    if (nota > 5) {
  2727  0014F0  0E05               	movlw	5
  2728  0014F2  6426               	cpfsgt	_nota^0,c
  2729  0014F4  D003               	goto	l5797
  2730                           
  2731                           ;Altaveu.c: 30:     reproduir = 0;
  2732  0014F6  9477               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2733                           
  2734                           ;Altaveu.c: 31:     state--;
  2735  0014F8  0623               	decf	motorAltaveu@state^0,f,c
  2736                           
  2737                           ;Altaveu.c: 32:    }
  2738  0014FA  0C05               	retlw	5
  2739  0014FC                     l5797:
  2740  0014FC  0EA8               	movlw	168
  2741  0014FE  1824               	xorwf	_copsNota^0,w,c
  2742  001500  E103               	bnz	l5803
  2743                           
  2744                           ;Altaveu.c: 34:     nota++;
  2745  001502  2A26               	incf	_nota^0,f,c
  2746                           
  2747                           ;Altaveu.c: 35:     copsNota = 0;
  2748  001504  6A24               	clrf	_copsNota^0,c
  2749                           
  2750                           ;Altaveu.c: 36:    }
  2751  001506  0012               	return	
  2752  001508                     l5803:
  2753  001508  5025               	movf	_timerAltaveu^0,w,c
  2754  00150A  EC52  F00D         	call	_TiGetTics
  2755  00150E  D821               	call	PL22	;call to abstracted procedure
  2756  001510  B0D8               	btfsc	status,0,c
  2757  001512  0012               	return	
  2758                           
  2759                           ;Altaveu.c: 38:     LATBbits.LB0 = 1;
  2760  001514  808A               	bsf	138,0,c	;volatile
  2761                           
  2762                           ;Altaveu.c: 39:     TiResetTics(timerAltaveu);
  2763  001516  5025               	movf	_timerAltaveu^0,w,c
  2764  001518  ECD6  F00D         	call	_TiResetTics
  2765  00151C                     l5809:
  2766                           
  2767                           ;Altaveu.c: 40:     state++;
  2768  00151C  2A23               	incf	motorAltaveu@state^0,f,c
  2769  00151E  0012               	return	
  2770  001520                     l5811:
  2771                           
  2772                           ;Altaveu.c: 44:    if (TiGetTics(timerAltaveu) > nota) {
  2773  001520  5025               	movf	_timerAltaveu^0,w,c
  2774  001522  EC52  F00D         	call	_TiGetTics
  2775  001526  D815               	call	PL22	;call to abstracted procedure
  2776  001528  B0D8               	btfsc	status,0,c
  2777  00152A  0012               	return	
  2778                           
  2779                           ;Altaveu.c: 45:     LATBbits.LB0 = 0;
  2780  00152C  908A               	bcf	138,0,c	;volatile
  2781                           
  2782                           ;Altaveu.c: 46:     TiResetTics(timerAltaveu);
  2783  00152E  5025               	movf	_timerAltaveu^0,w,c
  2784  001530  ECD6  F00D         	call	_TiResetTics
  2785                           
  2786                           ;Altaveu.c: 47:     copsNota++;
  2787  001534  2A24               	incf	_copsNota^0,f,c
  2788  001536  D7F2               	goto	l5809
  2789  001538                     l5823:
  2790  001538  5023               	movf	motorAltaveu@state^0,w,c
  2791  00153A  6E51               	movwf	??_motorAltaveu^0,c
  2792  00153C  6A52               	clrf	(??_motorAltaveu+1)^0,c
  2793                           
  2794                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2795                           ; Switch size 1, requested type "space"
  2796                           ; Number of cases is 1, Range of values is 0 to 0
  2797                           ; switch strategies available:
  2798                           ; Name         Instructions Cycles
  2799                           ; simple_byte            4     3 (average)
  2800                           ;	Chosen strategy is simple_byte
  2801  00153E  5052               	movf	(??_motorAltaveu+1)^0,w,c
  2802  001540  A4D8               	btfss	status,2,c
  2803  001542  0012               	return	
  2804                           
  2805                           ; Switch size 1, requested type "space"
  2806                           ; Number of cases is 3, Range of values is 0 to 2
  2807                           ; switch strategies available:
  2808                           ; Name         Instructions Cycles
  2809                           ; simple_byte           10     6 (average)
  2810                           ;	Chosen strategy is simple_byte
  2811  001544  5051               	movf	??_motorAltaveu^0,w,c
  2812  001546  E0C9               	bz	l849
  2813  001548  0A01               	xorlw	1	; case 1
  2814  00154A  E0D2               	bz	l5791
  2815  00154C  0A03               	xorlw	3	; case 2
  2816  00154E  E0E8               	bz	l5811
  2817  001550  0012               	return		;funcret
  2818  001552                     __end_of_motorAltaveu:
  2819                           	callstack 0
  2820  001552                     PL22:
  2821                           	callstack 27
  2822  001552  5026               	movf	_nota^0,w,c
  2823  001554  6E51               	movwf	??_motorAltaveu^0,c
  2824  001556  6A52               	clrf	(??_motorAltaveu+1)^0,c
  2825  001558  504A               	movf	?_TiGetTics^0,w,c
  2826  00155A  5C51               	subwf	??_motorAltaveu^0,w,c
  2827  00155C  5052               	movf	(??_motorAltaveu+1)^0,w,c
  2828  00155E  0A80               	xorlw	128
  2829  001560  6E53               	movwf	(??_motorAltaveu+2)^0,c
  2830  001562  504B               	movf	(?_TiGetTics+1)^0,w,c
  2831  001564  0A80               	xorlw	128
  2832  001566  5853               	subwfb	(??_motorAltaveu+2)^0,w,c
  2833  001568  0012               	return	
  2834  00156A                     __end_ofPL22:
  2835                           	callstack 0
  2836                           
  2837 ;; *************** function _menu *****************
  2838 ;; Defined at:
  2839 ;;		line 42 in file "Menu.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1
  2853 ;;      Params:         0       0       0
  2854 ;;      Locals:         0       0       0
  2855 ;;      Temps:          5       0       0
  2856 ;;      Totals:         5       0       0
  2857 ;;Total ram usage:        5 bytes
  2858 ;; Hardware stack levels used: 1
  2859 ;; Hardware stack levels required when called: 6
  2860 ;; This function calls:
  2861 ;;		_CToAConverteix
  2862 ;;		_CToAHaAcabat
  2863 ;;		_CToAobtenir
  2864 ;;		_GLCDMostraMenu
  2865 ;;		_HActualitzaHora
  2866 ;;		_JJuguem
  2867 ;;		_JendGame
  2868 ;;		_JnovaDireccio
  2869 ;;		_JnovaTecla
  2870 ;;		_LcClear
  2871 ;;		_LcGotoXY
  2872 ;;		_LcLliure
  2873 ;;		_LcNewString
  2874 ;;		_LcPutChar
  2875 ;;		_LcScroll
  2876 ;;		_NoFerMenu
  2877 ;;		_SIOHaAcabatPuntuacions
  2878 ;;		_SMSoff
  2879 ;;		_SMSon
  2880 ;;		_SiFerMenu
  2881 ;;		_TiGetTics
  2882 ;;		_TiResetTics
  2883 ;;		_URegister
  2884 ;;		_UcheckExists
  2885 ;;		_UcheckExistsGetError
  2886 ;;		_UcheckExistsNotFinished
  2887 ;;		_UenviaChar
  2888 ;;		_UenviaPas
  2889 ;;		_UgetNumUsuaris
  2890 ;;		_UgetScore
  2891 ;;		_UgetTop5
  2892 ;;		_UgetUserName
  2893 ;;		_UshowUsersCalculat
  2894 ;;		_calculateShowUsers
  2895 ;;		_checkHoraAcabat
  2896 ;;		_getArrayShowUsers
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text18
  2903  000036                     __ptext18:
  2904                           	callstack 0
  2905  000036                     _menu:
  2906                           	callstack 24
  2907                           
  2908                           ;Menu.c: 43:  static char state = 0;;Menu.c: 45:  switch(state) {
  2909                           
  2910                           ;incstack = 0
  2911  000036  D32A               	goto	l5775
  2912  000038                     l5231:
  2913                           
  2914                           ;Menu.c: 47:    LcClear();
  2915  000038  EC89  F00D         	call	_LcClear	;wreg free
  2916                           
  2917                           ;Menu.c: 48:    LcNewString(loginText);
  2918  00003C  0EA7               	movlw	low _loginText
  2919  00003E  6E4D               	movwf	LcNewString@new_s^0,c
  2920  000040  0E1F               	movlw	high _loginText
  2921  000042  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  2922  000044  EC5C  F00E         	call	_LcNewString	;wreg free
  2923                           
  2924                           ;Menu.c: 49:    state = 1;
  2925  000048  0E01               	movlw	1
  2926  00004A  6E2E               	movwf	menu@state^0,c
  2927                           
  2928                           ;Menu.c: 50:   break;
  2929  00004C  0C01               	retlw	1
  2930  00004E                     l5237:
  2931                           
  2932                           ;Menu.c: 52:    if (LcLliure()) {
  2933  00004E  EC62  F00E         	call	_LcLliure	;wreg free
  2934  000052  A0D8               	btfss	status,0,c
  2935  000054  0012               	return	
  2936                           
  2937                           ;Menu.c: 53:     LcGotoXY(0,1);
  2938  000056  DB95               	call	PL34	;call to abstracted procedure
  2939  000058  ECFB  F00C         	call	_LcGotoXY
  2940                           
  2941                           ;Menu.c: 54:     LcNewString(registerText);
  2942  00005C  0E9C               	movlw	low _registerText
  2943  00005E  6E4D               	movwf	LcNewString@new_s^0,c
  2944  000060  0E1F               	movlw	high _registerText
  2945  000062  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  2946  000064  EC5C  F00E         	call	_LcNewString	;wreg free
  2947                           
  2948                           ;Menu.c: 55:     NovaTecla = -1;
  2949  000068  6869               	setf	_NovaTecla^0,c
  2950                           
  2951                           ;Menu.c: 56:     state = 2;
  2952  00006A  0E02               	movlw	2
  2953  00006C  6E2E               	movwf	menu@state^0,c
  2954                           
  2955                           ;Menu.c: 58:   break;
  2956                           
  2957                           ;Menu.c: 57:    }
  2958  00006E  0C02               	retlw	2
  2959  000070                     l5247:
  2960                           
  2961                           ;Menu.c: 60:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  2962  000070  0469               	decf	_NovaTecla^0,w,c
  2963  000072  E108               	bnz	l5255
  2964  000074  ECCD  F00E         	call	_UgetNumUsuaris	;wreg free
  2965  000078  0900               	iorlw	0
  2966  00007A  E004               	bz	l5255
  2967                           
  2968                           ;Menu.c: 61:     loginNOTRegister = 1;
  2969  00007C  8E77               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2970  00007E                     l5253:
  2971                           
  2972                           ;Menu.c: 62:     state = 3;
  2973  00007E  0E03               	movlw	3
  2974  000080  6E2E               	movwf	menu@state^0,c
  2975                           
  2976                           ;Menu.c: 63:    }
  2977  000082  0C03               	retlw	3
  2978  000084                     l5255:
  2979  000084  0E02               	movlw	2
  2980  000086  1869               	xorwf	_NovaTecla^0,w,c
  2981  000088  A4D8               	btfss	status,2,c
  2982  00008A  0012               	return	
  2983                           
  2984                           ;Menu.c: 65:     loginNOTRegister = 0;
  2985  00008C  9E77               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2986  00008E  D7F7               	goto	l5253
  2987  000090                     l509:
  2988                           
  2989                           ;Menu.c: 70:    NovaTecla = -1;
  2990  000090  6869               	setf	_NovaTecla^0,c
  2991                           
  2992                           ;Menu.c: 71:    novaLletra = -1;
  2993  000092  6868               	setf	_novaLletra^0,c
  2994                           
  2995                           ;Menu.c: 72:    LcClear();
  2996  000094  EC89  F00D         	call	_LcClear	;wreg free
  2997                           
  2998                           ;Menu.c: 73:    LcNewString("USER: ");
  2999  000098  0EF8               	movlw	low STR_1
  3000  00009A  6E4D               	movwf	LcNewString@new_s^0,c
  3001  00009C  0E1F               	movlw	high STR_1
  3002  00009E  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3003  0000A0  EC5C  F00E         	call	_LcNewString	;wreg free
  3004                           
  3005                           ;Menu.c: 74:    state = 4;
  3006  0000A4  0E04               	movlw	4
  3007  0000A6  6E2E               	movwf	menu@state^0,c
  3008                           
  3009                           ;Menu.c: 75:   break;
  3010  0000A8  0C04               	retlw	4
  3011  0000AA                     l5267:
  3012                           
  3013                           ;Menu.c: 77:    if (LcLliure()) {
  3014  0000AA  EC62  F00E         	call	_LcLliure	;wreg free
  3015  0000AE  A0D8               	btfss	status,0,c
  3016  0000B0  0012               	return	
  3017                           
  3018                           ;Menu.c: 78:     LcGotoXY(0,1);
  3019  0000B2  DB67               	call	PL34	;call to abstracted procedure
  3020  0000B4  ECFB  F00C         	call	_LcGotoXY
  3021                           
  3022                           ;Menu.c: 79:     LcNewString("PSWD: ");
  3023  0000B8  0EF1               	movlw	low STR_2
  3024  0000BA  6E4D               	movwf	LcNewString@new_s^0,c
  3025  0000BC  0E1F               	movlw	high STR_2
  3026  0000BE  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3027  0000C0  EC5C  F00E         	call	_LcNewString	;wreg free
  3028                           
  3029                           ;Menu.c: 80:     state = 5;
  3030  0000C4  0E05               	movlw	5
  3031  0000C6  6E2E               	movwf	menu@state^0,c
  3032  0000C8  0C05               	retlw	5
  3033  0000CA                     l5275:
  3034                           
  3035                           ;Menu.c: 84:    if (LcLliure()) {
  3036  0000CA  EC62  F00E         	call	_LcLliure	;wreg free
  3037  0000CE  A0D8               	btfss	status,0,c
  3038  0000D0  0012               	return	
  3039                           
  3040                           ;Menu.c: 85:     LcGotoXY(6,0);
  3041  0000D2  0E00               	movlw	0
  3042  0000D4  6E52               	movwf	LcGotoXY@Row^0,c
  3043  0000D6  0E06               	movlw	6
  3044  0000D8  ECFB  F00C         	call	_LcGotoXY
  3045                           
  3046                           ;Menu.c: 86:     SMSon();
  3047  0000DC  ECB8  F00E         	call	_SMSon	;wreg free
  3048                           
  3049                           ;Menu.c: 87:     tmp =0;
  3050  0000E0  6A33               	clrf	_tmp^0,c
  3051  0000E2                     l5283:
  3052                           
  3053                           ;Menu.c: 88:     state = 6;
  3054  0000E2  0E06               	movlw	6
  3055  0000E4  6E2E               	movwf	menu@state^0,c
  3056  0000E6  0C06               	retlw	6
  3057  0000E8                     l5285:
  3058                           
  3059                           ;Menu.c: 92:    if (novaLletra > 31 && NovaTecla != 10) {
  3060  0000E8  5068               	movf	_novaLletra^0,w,c
  3061  0000EA  0A80               	xorlw	128
  3062  0000EC  0F60               	addlw	-160
  3063  0000EE  E30E               	bnc	l5295
  3064  0000F0  0E0A               	movlw	10
  3065  0000F2  1869               	xorwf	_NovaTecla^0,w,c
  3066  0000F4  E00B               	bz	l5295
  3067                           
  3068                           ;Menu.c: 93:     LcPutChar(novaLletra);
  3069  0000F6  5068               	movf	_novaLletra^0,w,c
  3070  0000F8  EC25  F00C         	call	_LcPutChar
  3071                           
  3072                           ;Menu.c: 94:     UenviaChar(novaLletra,tmp);
  3073  0000FC  C033  F04A         	movff	_tmp,UenviaChar@pos
  3074  000100  5068               	movf	_novaLletra^0,w,c
  3075  000102  EC16  F00E         	call	_UenviaChar
  3076  000106                     l5293:
  3077                           
  3078                           ;Menu.c: 95:     state = 7;
  3079  000106  0E07               	movlw	7
  3080  000108  6E2E               	movwf	menu@state^0,c
  3081                           
  3082                           ;Menu.c: 96:    }
  3083  00010A  0C07               	retlw	7
  3084  00010C                     l5295:
  3085  00010C  0E0B               	movlw	11
  3086  00010E  1869               	xorwf	_NovaTecla^0,w,c
  3087  000110  E0FA               	bz	l5293
  3088  000112  0012               	return	
  3089  000114                     l5299:
  3090                           
  3091                           ;Menu.c: 102:    if (tmp != 7 && NovaTecla != 11) {
  3092  000114  0E07               	movlw	7
  3093  000116  1833               	xorwf	_tmp^0,w,c
  3094  000118  E005               	bz	l5311
  3095  00011A  0E0B               	movlw	11
  3096  00011C  1869               	xorwf	_NovaTecla^0,w,c
  3097  00011E  E002               	bz	l5311
  3098                           
  3099                           ;Menu.c: 103:     tmp++;
  3100                           
  3101                           ;Menu.c: 104:     NovaTecla = -1;
  3102                           
  3103                           ;Menu.c: 105:     novaLletra = -1;
  3104  000120  DB47               	call	PL82	;call to abstracted procedure
  3105  000122  D7DF               	goto	l5283
  3106  000124                     l5311:
  3107  000124  0E07               	movlw	7
  3108  000126  1833               	xorwf	_tmp^0,w,c
  3109  000128  E004               	bz	u5280
  3110  00012A  0E0B               	movlw	11
  3111  00012C  1869               	xorwf	_NovaTecla^0,w,c
  3112  00012E  A4D8               	btfss	status,2,c
  3113  000130  0012               	return	
  3114  000132                     u5280:
  3115                           
  3116                           ;Menu.c: 109:     LcGotoXY(6,1);
  3117  000132  0E01               	movlw	1
  3118  000134  6E52               	movwf	LcGotoXY@Row^0,c
  3119  000136  0E06               	movlw	6
  3120  000138  ECFB  F00C         	call	_LcGotoXY
  3121                           
  3122                           ;Menu.c: 110:     UenviaChar('\0',tmp);
  3123  00013C  C033  F04A         	movff	_tmp,UenviaChar@pos
  3124  000140  0E00               	movlw	0
  3125  000142  EC16  F00E         	call	_UenviaChar
  3126                           
  3127                           ;Menu.c: 111:     NovaTecla = -1;
  3128                           
  3129                           ;Menu.c: 112:     novaLletra = -1;
  3130                           
  3131                           ;Menu.c: 113:     tmp = 0;
  3132  000146  DB30               	call	PL80	;call to abstracted procedure
  3133  000148                     l5325:
  3134                           
  3135                           ;Menu.c: 114:     state = 8;
  3136  000148  0E08               	movlw	8
  3137  00014A  6E2E               	movwf	menu@state^0,c
  3138  00014C  0C08               	retlw	8
  3139  00014E                     l5327:
  3140                           
  3141                           ;Menu.c: 118:    if (novaLletra > 31 && NovaTecla != 10) {
  3142  00014E  5068               	movf	_novaLletra^0,w,c
  3143  000150  0A80               	xorlw	128
  3144  000152  0F60               	addlw	-160
  3145  000154  E30E               	bnc	l5337
  3146  000156  0E0A               	movlw	10
  3147  000158  1869               	xorwf	_NovaTecla^0,w,c
  3148  00015A  E00B               	bz	l5337
  3149                           
  3150                           ;Menu.c: 119:     LcPutChar(novaLletra);
  3151  00015C  5068               	movf	_novaLletra^0,w,c
  3152  00015E  EC25  F00C         	call	_LcPutChar
  3153                           
  3154                           ;Menu.c: 120:     UenviaPas(novaLletra,tmp);
  3155  000162  C033  F04A         	movff	_tmp,UenviaPas@pos
  3156  000166  5068               	movf	_novaLletra^0,w,c
  3157  000168  EC0E  F00E         	call	_UenviaPas
  3158  00016C                     l5335:
  3159                           
  3160                           ;Menu.c: 121:     state = 9;
  3161  00016C  0E09               	movlw	9
  3162  00016E  6E2E               	movwf	menu@state^0,c
  3163                           
  3164                           ;Menu.c: 122:    }
  3165  000170  0C09               	retlw	9
  3166  000172                     l5337:
  3167  000172  0E0B               	movlw	11
  3168  000174  1869               	xorwf	_NovaTecla^0,w,c
  3169  000176  E0FA               	bz	l5335
  3170  000178  0012               	return	
  3171  00017A                     l5341:
  3172                           
  3173                           ;Menu.c: 128:    if (tmp != 7 && NovaTecla != 11) {
  3174  00017A  0E07               	movlw	7
  3175  00017C  1833               	xorwf	_tmp^0,w,c
  3176  00017E  E005               	bz	l5353
  3177  000180  0E0B               	movlw	11
  3178  000182  1869               	xorwf	_NovaTecla^0,w,c
  3179  000184  E002               	bz	l5353
  3180                           
  3181                           ;Menu.c: 129:     tmp++;
  3182                           
  3183                           ;Menu.c: 130:     NovaTecla = -1;
  3184                           
  3185                           ;Menu.c: 131:     novaLletra = -1;
  3186  000186  DB14               	call	PL82	;call to abstracted procedure
  3187  000188  D7DF               	goto	l5325
  3188  00018A                     l5353:
  3189  00018A  0E07               	movlw	7
  3190  00018C  1833               	xorwf	_tmp^0,w,c
  3191  00018E  E004               	bz	u5350
  3192  000190  0E0B               	movlw	11
  3193  000192  1869               	xorwf	_NovaTecla^0,w,c
  3194  000194  A4D8               	btfss	status,2,c
  3195  000196  0012               	return	
  3196  000198                     u5350:
  3197                           
  3198                           ;Menu.c: 135:     UenviaPas('\0',tmp);
  3199  000198  C033  F04A         	movff	_tmp,UenviaPas@pos
  3200  00019C  0E00               	movlw	0
  3201  00019E  EC0E  F00E         	call	_UenviaPas
  3202                           
  3203                           ;Menu.c: 136:     NovaTecla = -1;
  3204                           
  3205                           ;Menu.c: 137:     novaLletra = -1;
  3206                           
  3207                           ;Menu.c: 138:     tmp = 0;
  3208  0001A2  DB02               	call	PL80	;call to abstracted procedure
  3209                           
  3210                           ;Menu.c: 139:     UcheckExists();
  3211  0001A4  ECD1  F00E         	call	_UcheckExists	;wreg free
  3212                           
  3213                           ;Menu.c: 140:     SMSoff();
  3214  0001A8  ECBB  F00E         	call	_SMSoff	;wreg free
  3215                           
  3216                           ;Menu.c: 141:     state = 10;
  3217  0001AC  0E0A               	movlw	10
  3218  0001AE  6E2E               	movwf	menu@state^0,c
  3219  0001B0  0C0A               	retlw	10
  3220  0001B2                     l5371:
  3221                           
  3222                           ;Menu.c: 145:    if (!UcheckExistsNotFinished()) {
  3223  0001B2  EC4A  F00E         	call	_UcheckExistsNotFinished	;wreg free
  3224  0001B6  B0D8               	btfsc	status,0,c
  3225  0001B8  0012               	return	
  3226                           
  3227                           ;Menu.c: 146:     indexUsuari = UcheckExistsGetError();
  3228  0001BA  ECCF  F00E         	call	_UcheckExistsGetError	;wreg free
  3229  0001BE  6E30               	movwf	_indexUsuari^0,c
  3230                           
  3231                           ;Menu.c: 147:     state = 11;
  3232  0001C0  0E0B               	movlw	11
  3233  0001C2  6E2E               	movwf	menu@state^0,c
  3234  0001C4  0C0B               	retlw	11
  3235  0001C6                     l536:
  3236                           
  3237                           ;Menu.c: 151:    if (!loginNOTRegister && indexUsuari == -1) {
  3238  0001C6  BE77               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3239  0001C8  D006               	goto	l537
  3240  0001CA  2830               	incf	_indexUsuari^0,w,c
  3241  0001CC  E104               	bnz	l537
  3242                           
  3243                           ;Menu.c: 152:     URegister();
  3244  0001CE  ECD3  F00E         	call	_URegister	;wreg free
  3245  0001D2                     l5381:
  3246                           
  3247                           ;Menu.c: 153:     state = 0;
  3248  0001D2  6A2E               	clrf	menu@state^0,c
  3249                           
  3250                           ;Menu.c: 154:    }
  3251  0001D4  0012               	return	
  3252  0001D6                     l537:
  3253  0001D6  BE77               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3254  0001D8  BE30               	btfsc	_indexUsuari^0,7,c
  3255  0001DA  D003               	goto	l539
  3256  0001DC                     u5400:
  3257                           
  3258                           ;Menu.c: 156:     state = 12;
  3259  0001DC  0E0C               	movlw	12
  3260  0001DE  6E2E               	movwf	menu@state^0,c
  3261                           
  3262                           ;Menu.c: 157:    }
  3263  0001E0  0C0C               	retlw	12
  3264  0001E2                     l539:
  3265  0001E2  AE77               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3266  0001E4  D002               	goto	u5420
  3267  0001E6  2830               	incf	_indexUsuari^0,w,c
  3268  0001E8  E0F4               	bz	l5381
  3269  0001EA                     u5420:
  3270  0001EA  AE77               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3271  0001EC  BE30               	btfsc	_indexUsuari^0,7,c
  3272  0001EE  0012               	return	
  3273  0001F0  D7F0               	goto	l5381
  3274  0001F2                     l5391:
  3275                           
  3276                           ;Menu.c: 163:    LcClear();
  3277  0001F2  EC89  F00D         	call	_LcClear	;wreg free
  3278                           
  3279                           ;Menu.c: 164:    SiFerMenu();
  3280  0001F6  ECD5  F00E         	call	_SiFerMenu	;wreg free
  3281                           
  3282                           ;Menu.c: 165:    GLCDMostraMenu(menuDalt);
  3283  0001FA  5031               	movf	_menuDalt^0,w,c
  3284  0001FC  EC50  F00E         	call	_GLCDMostraMenu
  3285                           
  3286                           ;Menu.c: 166:    novaDireccio = -1;
  3287  000200  6867               	setf	_novaDireccio^0,c
  3288                           
  3289                           ;Menu.c: 167:    NovaTecla = -1;
  3290  000202  6869               	setf	_NovaTecla^0,c
  3291                           
  3292                           ;Menu.c: 168:    state = 13;
  3293  000204  0E0D               	movlw	13
  3294  000206  6E2E               	movwf	menu@state^0,c
  3295                           
  3296                           ;Menu.c: 169:   break;
  3297  000208  0C0D               	retlw	13
  3298  00020A                     l5403:
  3299                           
  3300                           ;Menu.c: 171:    if (novaDireccio == 8) {
  3301  00020A  0E08               	movlw	8
  3302  00020C  1867               	xorwf	_novaDireccio^0,w,c
  3303  00020E  E105               	bnz	l5411
  3304                           
  3305                           ;Menu.c: 172:     if(menuDalt < 4) menuDalt++;
  3306  000210  0E04               	movlw	4
  3307  000212  6031               	cpfslt	_menuDalt^0,c
  3308  000214  D7E3               	goto	u5400
  3309  000216  2A31               	incf	_menuDalt^0,f,c
  3310  000218  D7E1               	goto	u5400
  3311  00021A                     l5411:
  3312  00021A  0E02               	movlw	2
  3313  00021C  1867               	xorwf	_novaDireccio^0,w,c
  3314  00021E  E104               	bnz	l5419
  3315                           
  3316                           ;Menu.c: 176:     if(menuDalt > 0) menuDalt--;
  3317  000220  5031               	movf	_menuDalt^0,w,c
  3318  000222  E0DC               	bz	u5400
  3319  000224  0631               	decf	_menuDalt^0,f,c
  3320  000226  D7DA               	goto	u5400
  3321  000228                     l5419:
  3322  000228  0E0B               	movlw	11
  3323  00022A  1869               	xorwf	_NovaTecla^0,w,c
  3324  00022C  E110               	bnz	l5431
  3325  00022E  0E03               	movlw	3
  3326  000230  1831               	xorwf	_menuDalt^0,w,c
  3327  000232  E10D               	bnz	l5431
  3328                           
  3329                           ;Menu.c: 180:     NoFerMenu();
  3330  000234  ECD9  F00E         	call	_NoFerMenu	;wreg free
  3331                           
  3332                           ;Menu.c: 181:     LcClear();
  3333  000238  EC89  F00D         	call	_LcClear	;wreg free
  3334                           
  3335                           ;Menu.c: 182:     LcNewString("BYE BYE ");
  3336  00023C  0ED8               	movlw	low STR_3
  3337  00023E  6E4D               	movwf	LcNewString@new_s^0,c
  3338  000240  0E1F               	movlw	high STR_3
  3339  000242  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3340  000244  EC5C  F00E         	call	_LcNewString	;wreg free
  3341                           
  3342                           ;Menu.c: 183:     state = 14;
  3343  000248  0E0E               	movlw	14
  3344  00024A  6E2E               	movwf	menu@state^0,c
  3345                           
  3346                           ;Menu.c: 184:    }
  3347  00024C  0C0E               	retlw	14
  3348  00024E                     l5431:
  3349  00024E  0E0B               	movlw	11
  3350  000250  1869               	xorwf	_NovaTecla^0,w,c
  3351  000252  E110               	bnz	l5445
  3352  000254  0431               	decf	_menuDalt^0,w,c
  3353  000256  E10E               	bnz	l5445
  3354                           
  3355                           ;Menu.c: 186:     LcClear();
  3356  000258  EC89  F00D         	call	_LcClear	;wreg free
  3357                           
  3358                           ;Menu.c: 187:     NoFerMenu();
  3359  00025C  ECD9  F00E         	call	_NoFerMenu	;wreg free
  3360                           
  3361                           ;Menu.c: 188:     LcNewString("Modify Time:");
  3362  000260  0EBF               	movlw	low STR_4
  3363  000262  6E4D               	movwf	LcNewString@new_s^0,c
  3364  000264  0E1F               	movlw	high STR_4
  3365  000266  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3366  000268  EC5C  F00E         	call	_LcNewString	;wreg free
  3367                           
  3368                           ;Menu.c: 189:     NovaTecla = -1;
  3369  00026C  6869               	setf	_NovaTecla^0,c
  3370                           
  3371                           ;Menu.c: 190:     state = 16;
  3372  00026E  0E10               	movlw	16
  3373  000270  6E2E               	movwf	menu@state^0,c
  3374                           
  3375                           ;Menu.c: 191:    }
  3376  000272  0C10               	retlw	16
  3377  000274                     l5445:
  3378  000274  5031               	movf	_menuDalt^0,w,c
  3379  000276  E114               	bnz	l5461
  3380  000278  0E0B               	movlw	11
  3381  00027A  1869               	xorwf	_NovaTecla^0,w,c
  3382  00027C  E111               	bnz	l5461
  3383                           
  3384                           ;Menu.c: 193:     NoFerMenu();
  3385  00027E  ECD9  F00E         	call	_NoFerMenu	;wreg free
  3386                           
  3387                           ;Menu.c: 194:     NovaTecla = -1;
  3388  000282  6869               	setf	_NovaTecla^0,c
  3389                           
  3390                           ;Menu.c: 195:     LcClear();
  3391  000284  EC89  F00D         	call	_LcClear	;wreg free
  3392                           
  3393                           ;Menu.c: 196:     LcNewString("TIME REMAINING:");
  3394  000288  0EAF               	movlw	low STR_5
  3395  00028A  6E4D               	movwf	LcNewString@new_s^0,c
  3396  00028C  0E1F               	movlw	high STR_5
  3397  00028E  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3398  000290  EC5C  F00E         	call	_LcNewString	;wreg free
  3399                           
  3400                           ;Menu.c: 197:     JJuguem(indexUsuari);
  3401  000294  5030               	movf	_indexUsuari^0,w,c
  3402  000296  EC81  F00E         	call	_JJuguem
  3403  00029A                     l5459:
  3404                           
  3405                           ;Menu.c: 198:     state = 21;
  3406  00029A  0E15               	movlw	21
  3407  00029C  6E2E               	movwf	menu@state^0,c
  3408                           
  3409                           ;Menu.c: 199:    }
  3410  00029E  0C15               	retlw	21
  3411  0002A0                     l5461:
  3412  0002A0  0E0B               	movlw	11
  3413  0002A2  1869               	xorwf	_NovaTecla^0,w,c
  3414  0002A4  E10E               	bnz	l5477
  3415  0002A6  0E04               	movlw	4
  3416  0002A8  1831               	xorwf	_menuDalt^0,w,c
  3417  0002AA  E10B               	bnz	l5477
  3418                           
  3419                           ;Menu.c: 201:     NoFerMenu();
  3420  0002AC  ECD9  F00E         	call	_NoFerMenu	;wreg free
  3421                           
  3422                           ;Menu.c: 202:     LcClear();
  3423  0002B0  EC89  F00D         	call	_LcClear	;wreg free
  3424                           
  3425                           ;Menu.c: 203:     menuDalt = 0;
  3426  0002B4  6A31               	clrf	_menuDalt^0,c
  3427                           
  3428                           ;Menu.c: 204:     NovaTecla = -1;
  3429  0002B6  6869               	setf	_NovaTecla^0,c
  3430                           
  3431                           ;Menu.c: 205:     calculateShowUsers();
  3432  0002B8  ECCB  F00E         	call	_calculateShowUsers	;wreg free
  3433                           
  3434                           ;Menu.c: 206:     state = 30;
  3435  0002BC  0E1E               	movlw	30
  3436  0002BE  6E2E               	movwf	menu@state^0,c
  3437                           
  3438                           ;Menu.c: 207:    }
  3439  0002C0  0C1E               	retlw	30
  3440  0002C2                     l5477:
  3441  0002C2  0E0B               	movlw	11
  3442  0002C4  1869               	xorwf	_NovaTecla^0,w,c
  3443  0002C6  A4D8               	btfss	status,2,c
  3444  0002C8  0012               	return	
  3445  0002CA  0E02               	movlw	2
  3446  0002CC  1831               	xorwf	_menuDalt^0,w,c
  3447  0002CE  A4D8               	btfss	status,2,c
  3448  0002D0  0012               	return	
  3449  0002D2  0E00               	movlw	0
  3450  0002D4  EC3E  F00E         	call	_UgetTop5
  3451  0002D8  0AFF               	xorlw	255
  3452  0002DA  B4D8               	btfsc	status,2,c
  3453  0002DC  0012               	return	
  3454                           
  3455                           ;Menu.c: 209:     NoFerMenu();
  3456  0002DE  ECD9  F00E         	call	_NoFerMenu	;wreg free
  3457                           
  3458                           ;Menu.c: 210:     LcClear();
  3459  0002E2  EC89  F00D         	call	_LcClear	;wreg free
  3460                           
  3461                           ;Menu.c: 211:     menuDalt = 0;
  3462  0002E6  6A31               	clrf	_menuDalt^0,c
  3463                           
  3464                           ;Menu.c: 212:     NovaTecla = -1;
  3465  0002E8  6869               	setf	_NovaTecla^0,c
  3466  0002EA                     l5491:
  3467                           
  3468                           ;Menu.c: 213:     state = 31;
  3469  0002EA  0E1F               	movlw	31
  3470  0002EC  6E2E               	movwf	menu@state^0,c
  3471  0002EE  0C1F               	retlw	31
  3472  0002F0                     l5493:
  3473                           
  3474                           ;Menu.c: 217:    if (LcLliure()) {
  3475  0002F0  EC62  F00E         	call	_LcLliure	;wreg free
  3476  0002F4  A0D8               	btfss	status,0,c
  3477  0002F6  0012               	return	
  3478                           
  3479                           ;Menu.c: 218:     LcNewString(UgetUserName(indexUsuari));
  3480  0002F8  5030               	movf	_indexUsuari^0,w,c
  3481  0002FA  ECFB  F00D         	call	_UgetUserName
  3482  0002FE  DA44               	call	PL44	;call to abstracted procedure
  3483  000300  EC5C  F00E         	call	_LcNewString	;wreg free
  3484                           
  3485                           ;Menu.c: 219:     TiResetTics(timerMenu);
  3486  000304  5032               	movf	_timerMenu^0,w,c
  3487  000306  ECD6  F00D         	call	_TiResetTics
  3488                           
  3489                           ;Menu.c: 220:     state = 15;
  3490  00030A  0E0F               	movlw	15
  3491  00030C  6E2E               	movwf	menu@state^0,c
  3492  00030E  0C0F               	retlw	15
  3493  000310                     l5501:
  3494                           
  3495                           ;Menu.c: 224:    if (TiGetTics(timerMenu) > 2410) {
  3496  000310  5032               	movf	_timerMenu^0,w,c
  3497  000312  EC52  F00D         	call	_TiGetTics
  3498  000316  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  3499  000318  0012               	return	
  3500  00031A  0E6B               	movlw	107
  3501  00031C  5C4A               	subwf	?_TiGetTics^0,w,c
  3502  00031E  0E09               	movlw	9
  3503  000320  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  3504  000322  E301 D756          	bc	l5381
  3505  000326  0012               	return	
  3506  000328                     l5505:
  3507                           
  3508                           ;Menu.c: 229:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3509  000328  EC62  F00E         	call	_LcLliure	;wreg free
  3510  00032C  E347               	bnc	l5571
  3511  00032E  BE69               	btfsc	_NovaTecla^0,7,c
  3512  000330  D045               	goto	l5571
  3513  000332  5069               	movf	_NovaTecla^0,w,c
  3514  000334  0A80               	xorlw	128
  3515  000336  0F76               	addlw	-138
  3516  000338  E241               	bc	l5571
  3517                           
  3518                           ;Menu.c: 230:     LcGotoXY(0,1);
  3519  00033A  DA23               	call	PL34	;call to abstracted procedure
  3520  00033C  ECFB  F00C         	call	_LcGotoXY
  3521                           
  3522                           ;Menu.c: 231:     horaTmp[0] = NovaTecla+48;
  3523  000340  5069               	movf	_NovaTecla^0,w,c
  3524  000342  0F30               	addlw	48
  3525  000344  6E41               	movwf	_horaTmp^0,c
  3526                           
  3527                           ;Menu.c: 232:     LcPutChar(horaTmp[0]);
  3528  000346  5041               	movf	_horaTmp^0,w,c
  3529  000348  EC25  F00C         	call	_LcPutChar
  3530                           
  3531                           ;Menu.c: 233:     NovaTecla = -1;
  3532  00034C  6869               	setf	_NovaTecla^0,c
  3533                           
  3534                           ;Menu.c: 234:     state = 17;
  3535  00034E  0E11               	movlw	17
  3536  000350                     L1:
  3537  000350  6E2E               	movwf	menu@state^0,c
  3538                           
  3539                           ;Menu.c: 235:    }
  3540  000352  0012               	return	
  3541  000354                     L2:
  3542  000354  1869               	xorwf	_NovaTecla^0,w,c
  3543  000356  E101 D741          	bz	u5400
  3544  00035A  0012               	return	
  3545  00035C                     l5525:
  3546                           
  3547                           ;Menu.c: 241:    if (NovaTecla > -1 && NovaTecla < 10) {
  3548  00035C  BE69               	btfsc	_NovaTecla^0,7,c
  3549  00035E  D02E               	goto	l5571
  3550  000360  5069               	movf	_NovaTecla^0,w,c
  3551  000362  0A80               	xorlw	128
  3552  000364  0F76               	addlw	-138
  3553  000366  E22A               	bc	l5571
  3554                           
  3555                           ;Menu.c: 242:     horaTmp[1] = NovaTecla+48;
  3556  000368  5069               	movf	_NovaTecla^0,w,c
  3557  00036A  0F30               	addlw	48
  3558  00036C  6E42               	movwf	(_horaTmp+1)^0,c
  3559                           
  3560                           ;Menu.c: 243:     LcPutChar(horaTmp[1]);
  3561  00036E  5042               	movf	(_horaTmp+1)^0,w,c
  3562  000370  EC25  F00C         	call	_LcPutChar
  3563                           
  3564                           ;Menu.c: 244:     NovaTecla = -1;
  3565  000374  6869               	setf	_NovaTecla^0,c
  3566                           
  3567                           ;Menu.c: 245:     LcPutChar(':');
  3568  000376  0E3A               	movlw	58
  3569  000378  EC25  F00C         	call	_LcPutChar
  3570                           
  3571                           ;Menu.c: 246:     state = 18;
  3572  00037C  0E12               	movlw	18
  3573  00037E  D7E8               	goto	L1
  3574  000380                     l5543:
  3575                           
  3576                           ;Menu.c: 253:    if (NovaTecla > -1 && NovaTecla < 10) {
  3577  000380  BE69               	btfsc	_NovaTecla^0,7,c
  3578  000382  D01C               	goto	l5571
  3579  000384  5069               	movf	_NovaTecla^0,w,c
  3580  000386  0A80               	xorlw	128
  3581  000388  0F76               	addlw	-138
  3582  00038A  E218               	bc	l5571
  3583                           
  3584                           ;Menu.c: 254:     horaTmp[2] = NovaTecla+48;
  3585  00038C  5069               	movf	_NovaTecla^0,w,c
  3586  00038E  0F30               	addlw	48
  3587  000390  6E43               	movwf	(_horaTmp+2)^0,c
  3588                           
  3589                           ;Menu.c: 255:     LcPutChar(horaTmp[2]);
  3590  000392  5043               	movf	(_horaTmp+2)^0,w,c
  3591  000394  EC25  F00C         	call	_LcPutChar
  3592                           
  3593                           ;Menu.c: 256:     NovaTecla = -1;
  3594  000398  6869               	setf	_NovaTecla^0,c
  3595                           
  3596                           ;Menu.c: 257:     state = 19;
  3597  00039A  0E13               	movlw	19
  3598  00039C  D7D9               	goto	L1
  3599  00039E                     l5559:
  3600                           
  3601                           ;Menu.c: 264:    if (NovaTecla > -1 && NovaTecla < 10) {
  3602  00039E  BE69               	btfsc	_NovaTecla^0,7,c
  3603  0003A0  D00D               	goto	l5571
  3604  0003A2  5069               	movf	_NovaTecla^0,w,c
  3605  0003A4  0A80               	xorlw	128
  3606  0003A6  0F76               	addlw	-138
  3607  0003A8  E209               	bc	l5571
  3608                           
  3609                           ;Menu.c: 265:     horaTmp[3] = NovaTecla+48;
  3610  0003AA  5069               	movf	_NovaTecla^0,w,c
  3611  0003AC  0F30               	addlw	48
  3612  0003AE  6E44               	movwf	(_horaTmp+3)^0,c
  3613                           
  3614                           ;Menu.c: 266:     LcPutChar(horaTmp[3]);
  3615  0003B0  5044               	movf	(_horaTmp+3)^0,w,c
  3616  0003B2  EC25  F00C         	call	_LcPutChar
  3617                           
  3618                           ;Menu.c: 267:     NovaTecla = -1;
  3619  0003B6  6869               	setf	_NovaTecla^0,c
  3620                           
  3621                           ;Menu.c: 268:     state = 20;
  3622  0003B8  0E14               	movlw	20
  3623  0003BA  D7CA               	goto	L1
  3624  0003BC                     l5571:
  3625  0003BC  0E0A               	movlw	10
  3626  0003BE  D7CA               	goto	L2
  3627  0003C0                     l5575:
  3628                           
  3629                           ;Menu.c: 275:    if (NovaTecla == 11) {
  3630  0003C0  0E0B               	movlw	11
  3631  0003C2  1869               	xorwf	_NovaTecla^0,w,c
  3632  0003C4  E1FB               	bnz	l5571
  3633                           
  3634                           ;Menu.c: 276:     HActualitzaHora(horaTmp);
  3635  0003C6  0E41               	movlw	low _horaTmp
  3636  0003C8  6E4A               	movwf	HActualitzaHora@nova^0,c
  3637  0003CA  ECC7  F00C         	call	_HActualitzaHora	;wreg free
  3638                           
  3639                           ;Menu.c: 277:     NovaTecla = -1;
  3640  0003CE  6869               	setf	_NovaTecla^0,c
  3641  0003D0  D705               	goto	u5400
  3642  0003D2                     l5587:
  3643                           
  3644                           ;Menu.c: 285:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3645  0003D2  0E0A               	movlw	10
  3646  0003D4  1869               	xorwf	_NovaTecla^0,w,c
  3647  0003D6  E103               	bnz	u5780
  3648  0003D8  EC62  F00E         	call	_LcLliure	;wreg free
  3649  0003DC  E203               	bc	u5790
  3650  0003DE                     u5780:
  3651  0003DE  EC32  F00E         	call	_checkHoraAcabat	;wreg free
  3652  0003E2  E307               	bnc	l5599
  3653  0003E4                     u5790:
  3654                           
  3655                           ;Menu.c: 286:     LcClear();
  3656  0003E4  EC89  F00D         	call	_LcClear	;wreg free
  3657                           
  3658                           ;Menu.c: 287:     JendGame();
  3659  0003E8  ECDB  F00E         	call	_JendGame	;wreg free
  3660                           
  3661                           ;Menu.c: 288:     state = 22;
  3662  0003EC  0E16               	movlw	22
  3663  0003EE  6E2E               	movwf	menu@state^0,c
  3664                           
  3665                           ;Menu.c: 289:    }
  3666  0003F0  0C16               	retlw	22
  3667  0003F2                     l5599:
  3668  0003F2  5069               	movf	_NovaTecla^0,w,c
  3669  0003F4  0A80               	xorlw	128
  3670  0003F6  0F7F               	addlw	-129
  3671  0003F8  E309               	bnc	l5609
  3672  0003FA  5069               	movf	_NovaTecla^0,w,c
  3673  0003FC  0A80               	xorlw	128
  3674  0003FE  0F76               	addlw	-138
  3675  000400  E205               	bc	l5609
  3676                           
  3677                           ;Menu.c: 291:     JnovaTecla(NovaTecla);
  3678  000402  5069               	movf	_NovaTecla^0,w,c
  3679  000404  EC79  F00E         	call	_JnovaTecla
  3680                           
  3681                           ;Menu.c: 292:     NovaTecla = -1;
  3682  000408  6869               	setf	_NovaTecla^0,c
  3683  00040A  D747               	goto	l5459
  3684  00040C                     l5609:
  3685  00040C  BE67               	btfsc	_novaDireccio^0,7,c
  3686  00040E  0012               	return	
  3687                           
  3688                           ;Menu.c: 296:     JnovaDireccio(novaDireccio);
  3689  000410  5067               	movf	_novaDireccio^0,w,c
  3690  000412  EC7D  F00E         	call	_JnovaDireccio
  3691                           
  3692                           ;Menu.c: 297:     novaDireccio = -1;
  3693  000416  6867               	setf	_novaDireccio^0,c
  3694  000418  D740               	goto	l5459
  3695  00041A                     l5617:
  3696                           
  3697                           ;Menu.c: 302:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3698  00041A  ECD7  F00E         	call	_SIOHaAcabatPuntuacions	;wreg free
  3699  00041E  0900               	iorlw	0
  3700  000420  B4D8               	btfsc	status,2,c
  3701  000422  0012               	return	
  3702  000424  0E0B               	movlw	11
  3703  000426  D796               	goto	L2
  3704  000428                     l5623:
  3705                           
  3706                           ;Menu.c: 307:    if (LcLliure()) {
  3707  000428  EC62  F00E         	call	_LcLliure	;wreg free
  3708  00042C  A0D8               	btfss	status,0,c
  3709  00042E  0012               	return	
  3710                           
  3711                           ;Menu.c: 308:     LcGotoXY(0,0);
  3712  000430  0E00               	movlw	0
  3713  000432  6E52               	movwf	LcGotoXY@Row^0,c
  3714  000434  ECFB  F00C         	call	_LcGotoXY
  3715                           
  3716                           ;Menu.c: 309:     LcNewString(getArrayShowUsers(menuDalt));
  3717  000438  5031               	movf	_menuDalt^0,w,c
  3718  00043A  ECBA  F00D         	call	_getArrayShowUsers
  3719  00043E  D99C               	call	PL30	;call to abstracted procedure
  3720  000440  EC5C  F00E         	call	_LcNewString	;wreg free
  3721                           
  3722                           ;Menu.c: 310:     menuDalt++;
  3723  000444  2A31               	incf	_menuDalt^0,f,c
  3724                           
  3725                           ;Menu.c: 311:     state = 24;
  3726  000446  0E18               	movlw	24
  3727  000448  6E2E               	movwf	menu@state^0,c
  3728  00044A  0C18               	retlw	24
  3729  00044C                     l5631:
  3730                           
  3731                           ;Menu.c: 315:    if (LcLliure()) {
  3732  00044C  EC62  F00E         	call	_LcLliure	;wreg free
  3733  000450  A0D8               	btfss	status,0,c
  3734  000452  0012               	return	
  3735                           
  3736                           ;Menu.c: 316:     if (menuDalt < UgetNumUsuaris()){
  3737  000454  ECCD  F00E         	call	_UgetNumUsuaris	;wreg free
  3738  000458  6031               	cpfslt	_menuDalt^0,c
  3739  00045A  D00B               	goto	l603
  3740                           
  3741                           ;Menu.c: 317:       LcGotoXY(0,1);
  3742  00045C  D992               	call	PL34	;call to abstracted procedure
  3743  00045E  ECFB  F00C         	call	_LcGotoXY
  3744                           
  3745                           ;Menu.c: 318:       LcNewString(getArrayShowUsers(menuDalt));
  3746  000462  5031               	movf	_menuDalt^0,w,c
  3747  000464  ECBA  F00D         	call	_getArrayShowUsers
  3748  000468  D987               	call	PL30	;call to abstracted procedure
  3749  00046A  EC5C  F00E         	call	_LcNewString	;wreg free
  3750                           
  3751                           ;Menu.c: 319:       menuDalt++;
  3752  00046E  2A31               	incf	_menuDalt^0,f,c
  3753                           
  3754                           ;Menu.c: 320:     } else {
  3755  000470  D001               	goto	l5639
  3756  000472                     l603:
  3757                           
  3758                           ;Menu.c: 321:       menuDalt = 0;
  3759  000472  6A31               	clrf	_menuDalt^0,c
  3760  000474                     l5639:
  3761                           
  3762                           ;Menu.c: 323:     state = 25;
  3763  000474  0E19               	movlw	25
  3764  000476  6E2E               	movwf	menu@state^0,c
  3765  000478  0C19               	retlw	25
  3766  00047A                     l5641:
  3767                           
  3768                           ;Menu.c: 327:    if (LcLliure()) {
  3769  00047A  EC62  F00E         	call	_LcLliure	;wreg free
  3770  00047E  A0D8               	btfss	status,0,c
  3771  000480  0012               	return	
  3772                           
  3773                           ;Menu.c: 328:     if (menuDalt == UgetNumUsuaris()){
  3774  000482  ECCD  F00E         	call	_UgetNumUsuaris	;wreg free
  3775  000486  1831               	xorwf	_menuDalt^0,w,c
  3776  000488  E101               	bnz	l5647
  3777                           
  3778                           ;Menu.c: 329:       menuDalt = 0;
  3779  00048A  6A31               	clrf	_menuDalt^0,c
  3780  00048C                     l5647:
  3781                           
  3782                           ;Menu.c: 331:     LcGotoXY(16,0);
  3783  00048C  D98A               	call	PL78	;call to abstracted procedure
  3784  00048E  ECFB  F00C         	call	_LcGotoXY
  3785                           
  3786                           ;Menu.c: 332:     LcNewString(getArrayShowUsers(menuDalt));
  3787  000492  5031               	movf	_menuDalt^0,w,c
  3788  000494  ECBA  F00D         	call	_getArrayShowUsers
  3789  000498  D96F               	call	PL30	;call to abstracted procedure
  3790  00049A  EC5C  F00E         	call	_LcNewString	;wreg free
  3791                           
  3792                           ;Menu.c: 333:     state = 26;
  3793  00049E  0E1A               	movlw	26
  3794  0004A0  6E2E               	movwf	menu@state^0,c
  3795  0004A2  0C1A               	retlw	26
  3796  0004A4                     l5651:
  3797                           
  3798                           ;Menu.c: 337:    if (LcLliure()) {
  3799  0004A4  EC62  F00E         	call	_LcLliure	;wreg free
  3800  0004A8  A0D8               	btfss	status,0,c
  3801  0004AA  0012               	return	
  3802                           
  3803                           ;Menu.c: 338:     if (menuDalt+1 < UgetNumUsuaris()){
  3804  0004AC  ECCD  F00E         	call	_UgetNumUsuaris	;wreg free
  3805  0004B0  6E59               	movwf	??_menu^0,c
  3806  0004B2  6A5A               	clrf	(??_menu+1)^0,c
  3807  0004B4  5031               	movf	_menuDalt^0,w,c
  3808  0004B6  6E5B               	movwf	(??_menu+2)^0,c
  3809  0004B8  6A5C               	clrf	(??_menu+3)^0,c
  3810  0004BA  2A5B               	incf	(??_menu+2)^0,f,c
  3811  0004BC  0E00               	movlw	0
  3812  0004BE  225C               	addwfc	(??_menu+3)^0,f,c
  3813  0004C0  5059               	movf	??_menu^0,w,c
  3814  0004C2  5C5B               	subwf	(??_menu+2)^0,w,c
  3815  0004C4  505C               	movf	(??_menu+3)^0,w,c
  3816  0004C6  0A80               	xorlw	128
  3817  0004C8  6E5D               	movwf	(??_menu+4)^0,c
  3818  0004CA  505A               	movf	(??_menu+1)^0,w,c
  3819  0004CC  0A80               	xorlw	128
  3820  0004CE  585D               	subwfb	(??_menu+4)^0,w,c
  3821  0004D0  E209               	bc	l5657
  3822                           
  3823                           ;Menu.c: 339:       LcGotoXY(16,1);
  3824  0004D2  D964               	call	PL76	;call to abstracted procedure
  3825  0004D4  ECFB  F00C         	call	_LcGotoXY
  3826                           
  3827                           ;Menu.c: 340:       LcNewString(getArrayShowUsers(menuDalt+1));
  3828  0004D8  2831               	incf	_menuDalt^0,w,c
  3829  0004DA  ECBA  F00D         	call	_getArrayShowUsers
  3830  0004DE  D94C               	call	PL30	;call to abstracted procedure
  3831  0004E0  EC5C  F00E         	call	_LcNewString	;wreg free
  3832  0004E4                     l5657:
  3833                           
  3834                           ;Menu.c: 342:     state = 27;
  3835  0004E4  0E1B               	movlw	27
  3836  0004E6  6E2E               	movwf	menu@state^0,c
  3837  0004E8  0C1B               	retlw	27
  3838  0004EA                     l5659:
  3839                           
  3840                           ;Menu.c: 346:    if (TiGetTics(timerMenu) > 1205) {
  3841  0004EA  5032               	movf	_timerMenu^0,w,c
  3842  0004EC  EC52  F00D         	call	_TiGetTics
  3843  0004F0  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  3844  0004F2  D008               	goto	l5663
  3845  0004F4  0EB6               	movlw	182
  3846  0004F6  5C4A               	subwf	?_TiGetTics^0,w,c
  3847  0004F8  0E04               	movlw	4
  3848  0004FA  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  3849  0004FC  E303               	bnc	l5663
  3850                           
  3851                           ;Menu.c: 347:     state = 29;
  3852  0004FE  0E1D               	movlw	29
  3853  000500  6E2E               	movwf	menu@state^0,c
  3854                           
  3855                           ;Menu.c: 348:    }
  3856  000502  0C1D               	retlw	29
  3857  000504                     l5663:
  3858  000504  0E0B               	movlw	11
  3859  000506  1869               	xorwf	_NovaTecla^0,w,c
  3860  000508  A4D8               	btfss	status,2,c
  3861  00050A  0012               	return	
  3862  00050C                     u5930:
  3863                           
  3864                           ;Menu.c: 350:     menuDalt = 0;
  3865  00050C  6A31               	clrf	_menuDalt^0,c
  3866  00050E  D666               	goto	u5400
  3867  000510                     l5669:
  3868                           
  3869                           ;Menu.c: 355:    if (pos > 15) {
  3870  000510  0E0F               	movlw	15
  3871  000512  642F               	cpfsgt	_pos^0,c
  3872  000514  D005               	goto	l5675
  3873                           
  3874                           ;Menu.c: 356:     LcClear();
  3875  000516  EC89  F00D         	call	_LcClear	;wreg free
  3876  00051A                     l5673:
  3877                           
  3878                           ;Menu.c: 357:     state = 23;
  3879  00051A  0E17               	movlw	23
  3880  00051C  6E2E               	movwf	menu@state^0,c
  3881                           
  3882                           ;Menu.c: 358:    }
  3883  00051E  0C17               	retlw	23
  3884  000520                     l5675:
  3885  000520  0E10               	movlw	16
  3886  000522  602F               	cpfslt	_pos^0,c
  3887  000524  0C10               	retlw	16
  3888                           
  3889                           ;Menu.c: 360:     TiResetTics(timerMenu);
  3890  000526  5032               	movf	_timerMenu^0,w,c
  3891  000528  ECD6  F00D         	call	_TiResetTics
  3892                           
  3893                           ;Menu.c: 361:     LcScroll();
  3894  00052C  ECBE  F00E         	call	_LcScroll	;wreg free
  3895                           
  3896                           ;Menu.c: 362:     pos++;
  3897  000530  2A2F               	incf	_pos^0,f,c
  3898  000532                     l5683:
  3899                           
  3900                           ;Menu.c: 363:     state = 28;
  3901  000532  0E1C               	movlw	28
  3902  000534  6E2E               	movwf	menu@state^0,c
  3903  000536  0C1C               	retlw	28
  3904  000538                     l5685:
  3905                           
  3906                           ;Menu.c: 367:    if (LcLliure()) {
  3907  000538  EC62  F00E         	call	_LcLliure	;wreg free
  3908  00053C  A0D8               	btfss	status,0,c
  3909  00053E  0012               	return	
  3910                           
  3911                           ;Menu.c: 368:     TiResetTics(timerMenu);
  3912  000540  5032               	movf	_timerMenu^0,w,c
  3913  000542  ECD6  F00D         	call	_TiResetTics
  3914                           
  3915                           ;Menu.c: 369:     pos = 0;
  3916  000546  6A2F               	clrf	_pos^0,c
  3917  000548  D7F4               	goto	l5683
  3918  00054A                     l5693:
  3919                           
  3920                           ;Menu.c: 374:    if (UshowUsersCalculat()) {
  3921  00054A  EC38  F00E         	call	_UshowUsersCalculat	;wreg free
  3922  00054E  E2E5               	bc	l5673
  3923  000550  0012               	return	
  3924  000552                     l5697:
  3925                           
  3926                           ;Menu.c: 379:    if (LcLliure()) {
  3927  000552  EC62  F00E         	call	_LcLliure	;wreg free
  3928  000556  A0D8               	btfss	status,0,c
  3929  000558  0012               	return	
  3930                           
  3931                           ;Menu.c: 380:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  3932  00055A  5031               	movf	_menuDalt^0,w,c
  3933  00055C  EC3E  F00E         	call	_UgetTop5
  3934  000560  ECFB  F00D         	call	_UgetUserName
  3935  000564  D911               	call	PL44	;call to abstracted procedure
  3936  000566  EC5C  F00E         	call	_LcNewString	;wreg free
  3937                           
  3938                           ;Menu.c: 381:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  3939  00056A  5031               	movf	_menuDalt^0,w,c
  3940  00056C  EC3E  F00E         	call	_UgetTop5
  3941  000570  EC44  F00E         	call	_UgetScore
  3942  000574  EC56  F00E         	call	_CToAConverteix
  3943                           
  3944                           ;Menu.c: 382:     state = 32;
  3945  000578  0E20               	movlw	32
  3946  00057A  6E2E               	movwf	menu@state^0,c
  3947  00057C  0C20               	retlw	32
  3948  00057E                     l5703:
  3949                           
  3950                           ;Menu.c: 386:    if (CToAHaAcabat() == 250 && LcLliure()) {
  3951  00057E  ECDF  F00E         	call	_CToAHaAcabat	;wreg free
  3952  000582  0AFA               	xorlw	250
  3953  000584  A4D8               	btfss	status,2,c
  3954  000586  0012               	return	
  3955  000588  EC62  F00E         	call	_LcLliure	;wreg free
  3956  00058C  A0D8               	btfss	status,0,c
  3957  00058E  0012               	return	
  3958                           
  3959                           ;Menu.c: 387:     LcPutChar(':');
  3960  000590  0E3A               	movlw	58
  3961  000592  EC25  F00C         	call	_LcPutChar
  3962                           
  3963                           ;Menu.c: 388:     LcGotoXY(0,1);
  3964  000596  D8F5               	call	PL34	;call to abstracted procedure
  3965  000598  ECFB  F00C         	call	_LcGotoXY
  3966                           
  3967                           ;Menu.c: 389:     LcNewString(CToAobtenir());
  3968  00059C  ECDD  F00E         	call	_CToAobtenir	;wreg free
  3969  0005A0  D8F8               	call	PL50	;call to abstracted procedure
  3970  0005A2  EC5C  F00E         	call	_LcNewString	;wreg free
  3971                           
  3972                           ;Menu.c: 390:     menuDalt++;
  3973  0005A6  2A31               	incf	_menuDalt^0,f,c
  3974                           
  3975                           ;Menu.c: 391:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  3976  0005A8  0E05               	movlw	5
  3977  0005AA  1831               	xorwf	_menuDalt^0,w,c
  3978  0005AC  E005               	bz	u6020
  3979  0005AE  5031               	movf	_menuDalt^0,w,c
  3980  0005B0  EC3E  F00E         	call	_UgetTop5
  3981  0005B4  0AFF               	xorlw	255
  3982  0005B6  E101               	bnz	l5717
  3983  0005B8                     u6020:
  3984  0005B8  6A31               	clrf	_menuDalt^0,c
  3985  0005BA                     l5717:
  3986                           
  3987                           ;Menu.c: 392:     state = 34;
  3988  0005BA  0E22               	movlw	34
  3989  0005BC  6E2E               	movwf	menu@state^0,c
  3990  0005BE  0C22               	retlw	34
  3991  0005C0                     l5719:
  3992                           
  3993                           ;Menu.c: 396:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  3994  0005C0  5031               	movf	_menuDalt^0,w,c
  3995  0005C2  EC3E  F00E         	call	_UgetTop5
  3996  0005C6  0AFF               	xorlw	255
  3997  0005C8  E104               	bnz	u6040
  3998  0005CA  0E05               	movlw	5
  3999  0005CC  1831               	xorwf	_menuDalt^0,w,c
  4000  0005CE  B4D8               	btfsc	status,2,c
  4001  0005D0  0012               	return	
  4002  0005D2                     u6040:
  4003  0005D2  EC62  F00E         	call	_LcLliure	;wreg free
  4004  0005D6  A0D8               	btfss	status,0,c
  4005  0005D8  0012               	return	
  4006                           
  4007                           ;Menu.c: 397:     LcGotoXY(16,0);
  4008  0005DA  D8E3               	call	PL78	;call to abstracted procedure
  4009  0005DC  ECFB  F00C         	call	_LcGotoXY
  4010                           
  4011                           ;Menu.c: 398:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4012  0005E0  5031               	movf	_menuDalt^0,w,c
  4013  0005E2  EC3E  F00E         	call	_UgetTop5
  4014  0005E6  ECFB  F00D         	call	_UgetUserName
  4015  0005EA  D8CE               	call	PL44	;call to abstracted procedure
  4016  0005EC  EC5C  F00E         	call	_LcNewString	;wreg free
  4017                           
  4018                           ;Menu.c: 399:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4019  0005F0  5031               	movf	_menuDalt^0,w,c
  4020  0005F2  EC3E  F00E         	call	_UgetTop5
  4021  0005F6  EC44  F00E         	call	_UgetScore
  4022  0005FA  EC56  F00E         	call	_CToAConverteix
  4023                           
  4024                           ;Menu.c: 400:     state = 35;
  4025  0005FE  0E23               	movlw	35
  4026  000600  6E2E               	movwf	menu@state^0,c
  4027  000602  0C23               	retlw	35
  4028  000604                     l5729:
  4029                           
  4030                           ;Menu.c: 404:    if (LcLliure() && CToAHaAcabat() == 250) {
  4031  000604  EC62  F00E         	call	_LcLliure	;wreg free
  4032  000608  A0D8               	btfss	status,0,c
  4033  00060A  0012               	return	
  4034  00060C  ECDF  F00E         	call	_CToAHaAcabat	;wreg free
  4035  000610  0AFA               	xorlw	250
  4036  000612  A4D8               	btfss	status,2,c
  4037  000614  0012               	return	
  4038                           
  4039                           ;Menu.c: 405:     LcPutChar(':');
  4040  000616  0E3A               	movlw	58
  4041  000618  EC25  F00C         	call	_LcPutChar
  4042                           
  4043                           ;Menu.c: 406:     LcGotoXY(16,1);
  4044  00061C  D8BF               	call	PL76	;call to abstracted procedure
  4045  00061E  ECFB  F00C         	call	_LcGotoXY
  4046                           
  4047                           ;Menu.c: 407:     LcNewString(CToAobtenir());
  4048  000622  ECDD  F00E         	call	_CToAobtenir	;wreg free
  4049  000626  D8B5               	call	PL50	;call to abstracted procedure
  4050  000628  EC5C  F00E         	call	_LcNewString	;wreg free
  4051                           
  4052                           ;Menu.c: 408:     pos = 0;
  4053  00062C  6A2F               	clrf	_pos^0,c
  4054                           
  4055                           ;Menu.c: 409:     TiResetTics(timerMenu);
  4056  00062E  5032               	movf	_timerMenu^0,w,c
  4057  000630  ECD6  F00D         	call	_TiResetTics
  4058  000634                     l5741:
  4059                           
  4060                           ;Menu.c: 410:     state = 37;
  4061  000634  0E25               	movlw	37
  4062  000636  6E2E               	movwf	menu@state^0,c
  4063  000638  0C25               	retlw	37
  4064  00063A                     l5743:
  4065                           
  4066                           ;Menu.c: 414:    if (NovaTecla == 11 && LcLliure()) {
  4067  00063A  0E0B               	movlw	11
  4068  00063C  1869               	xorwf	_NovaTecla^0,w,c
  4069  00063E  E104               	bnz	l5751
  4070  000640  EC62  F00E         	call	_LcLliure	;wreg free
  4071  000644  E301 D762          	bc	u5930
  4072  000648                     l5751:
  4073  000648  5032               	movf	_timerMenu^0,w,c
  4074  00064A  EC52  F00D         	call	_TiGetTics
  4075  00064E  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  4076  000650  0012               	return	
  4077  000652  0E91               	movlw	145
  4078  000654  5C4A               	subwf	?_TiGetTics^0,w,c
  4079  000656  0E01               	movlw	1
  4080  000658  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  4081  00065A  A0D8               	btfss	status,0,c
  4082  00065C  0012               	return	
  4083  00065E  EC62  F00E         	call	_LcLliure	;wreg free
  4084  000662  A0D8               	btfss	status,0,c
  4085  000664  0012               	return	
  4086                           
  4087                           ;Menu.c: 419:     state = 38;
  4088  000666  0E26               	movlw	38
  4089  000668  6E2E               	movwf	menu@state^0,c
  4090  00066A  0C26               	retlw	38
  4091  00066C                     l5757:
  4092                           
  4093                           ;Menu.c: 423:    if (pos < 16) {
  4094  00066C  0E10               	movlw	16
  4095  00066E  602F               	cpfslt	_pos^0,c
  4096  000670  D007               	goto	l5767
  4097                           
  4098                           ;Menu.c: 424:     TiResetTics(timerMenu);
  4099  000672  5032               	movf	_timerMenu^0,w,c
  4100  000674  ECD6  F00D         	call	_TiResetTics
  4101                           
  4102                           ;Menu.c: 425:     LcScroll();
  4103  000678  ECBE  F00E         	call	_LcScroll	;wreg free
  4104                           
  4105                           ;Menu.c: 426:     pos++;
  4106  00067C  2A2F               	incf	_pos^0,f,c
  4107  00067E  D7DA               	goto	l5741
  4108  000680                     l5767:
  4109  000680  0E0F               	movlw	15
  4110  000682  642F               	cpfsgt	_pos^0,c
  4111  000684  0C0F               	retlw	15
  4112                           
  4113                           ;Menu.c: 430:     LcClear();
  4114  000686  EC89  F00D         	call	_LcClear	;wreg free
  4115  00068A  D62F               	goto	l5491
  4116  00068C                     l5775:
  4117  00068C  502E               	movf	menu@state^0,w,c
  4118  00068E  6E59               	movwf	??_menu^0,c
  4119  000690  6A5A               	clrf	(??_menu+1)^0,c
  4120                           
  4121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4122                           ; Switch size 1, requested type "space"
  4123                           ; Number of cases is 1, Range of values is 0 to 0
  4124                           ; switch strategies available:
  4125                           ; Name         Instructions Cycles
  4126                           ; simple_byte            4     3 (average)
  4127                           ;	Chosen strategy is simple_byte
  4128  000692  505A               	movf	(??_menu+1)^0,w,c
  4129  000694  A4D8               	btfss	status,2,c
  4130  000696  0012               	return	
  4131                           
  4132                           ; Switch size 1, requested type "space"
  4133                           ; Number of cases is 37, Range of values is 0 to 38
  4134                           ; switch strategies available:
  4135                           ; Name         Instructions Cycles
  4136                           ; simple_byte          112    57 (average)
  4137                           ;	Chosen strategy is simple_byte
  4138  000698  5059               	movf	??_menu^0,w,c
  4139  00069A  E101 D4CD          	bz	l5231
  4140  00069E  0A01               	xorlw	1	; case 1
  4141  0006A0  E101 D4D5          	bz	l5237
  4142  0006A4  0A03               	xorlw	3	; case 2
  4143  0006A6  E101 D4E3          	bz	l5247
  4144  0006AA  0A01               	xorlw	1	; case 3
  4145  0006AC  E101 D4F0          	bz	l509
  4146  0006B0  0A07               	xorlw	7	; case 4
  4147  0006B2  E101 D4FA          	bz	l5267
  4148  0006B6  0A01               	xorlw	1	; case 5
  4149  0006B8  E101 D507          	bz	l5275
  4150  0006BC  0A03               	xorlw	3	; case 6
  4151  0006BE  E101 D513          	bz	l5285
  4152  0006C2  0A01               	xorlw	1	; case 7
  4153  0006C4  E101 D526          	bz	l5299
  4154  0006C8  0A0F               	xorlw	15	; case 8
  4155  0006CA  E101 D540          	bz	l5327
  4156  0006CE  0A01               	xorlw	1	; case 9
  4157  0006D0  E101 D553          	bz	l5341
  4158  0006D4  0A03               	xorlw	3	; case 10
  4159  0006D6  E101 D56C          	bz	l5371
  4160  0006DA  0A01               	xorlw	1	; case 11
  4161  0006DC  E101 D573          	bz	l536
  4162  0006E0  0A07               	xorlw	7	; case 12
  4163  0006E2  E101 D586          	bz	l5391
  4164  0006E6  0A01               	xorlw	1	; case 13
  4165  0006E8  E101 D58F          	bz	l5403
  4166  0006EC  0A03               	xorlw	3	; case 14
  4167  0006EE  E101 D5FF          	bz	l5493
  4168  0006F2  0A01               	xorlw	1	; case 15
  4169  0006F4  E101 D60C          	bz	l5501
  4170  0006F8  0A1F               	xorlw	31	; case 16
  4171  0006FA  E101 D615          	bz	l5505
  4172  0006FE  0A01               	xorlw	1	; case 17
  4173  000700  E101 D62C          	bz	l5525
  4174  000704  0A03               	xorlw	3	; case 18
  4175  000706  E101 D63B          	bz	l5543
  4176  00070A  0A01               	xorlw	1	; case 19
  4177  00070C  E101 D647          	bz	l5559
  4178  000710  0A07               	xorlw	7	; case 20
  4179  000712  E101 D655          	bz	l5575
  4180  000716  0A01               	xorlw	1	; case 21
  4181  000718  E101 D65B          	bz	l5587
  4182  00071C  0A03               	xorlw	3	; case 22
  4183  00071E  E101 D67C          	bz	l5617
  4184  000722  0A01               	xorlw	1	; case 23
  4185  000724  E101 D680          	bz	l5623
  4186  000728  0A0F               	xorlw	15	; case 24
  4187  00072A  E101 D68F          	bz	l5631
  4188  00072E  0A01               	xorlw	1	; case 25
  4189  000730  E101 D6A3          	bz	l5641
  4190  000734  0A03               	xorlw	3	; case 26
  4191  000736  E101 D6B5          	bz	l5651
  4192  00073A  0A01               	xorlw	1	; case 27
  4193  00073C  E101 D6FC          	bz	l5685
  4194  000740  0A07               	xorlw	7	; case 28
  4195  000742  E101 D6D2          	bz	l5659
  4196  000746  0A01               	xorlw	1	; case 29
  4197  000748  E101 D6E2          	bz	l5669
  4198  00074C  0A03               	xorlw	3	; case 30
  4199  00074E  E101 D6FC          	bz	l5693
  4200  000752  0A01               	xorlw	1	; case 31
  4201  000754  E101 D6FD          	bz	l5697
  4202  000758  0A3F               	xorlw	63	; case 32
  4203  00075A  E101 D710          	bz	l5703
  4204  00075E  0A02               	xorlw	2	; case 34
  4205  000760  E101 D72E          	bz	l5719
  4206  000764  0A01               	xorlw	1	; case 35
  4207  000766  E101 D74D          	bz	l5729
  4208  00076A  0A06               	xorlw	6	; case 37
  4209  00076C  E101 D765          	bz	l5743
  4210  000770  0A03               	xorlw	3	; case 38
  4211  000772  E101 D77B          	bz	l5757
  4212  000776  0012               	return		;funcret
  4213  000778                     __end_of_menu:
  4214                           	callstack 0
  4215  000778                     PL30:
  4216                           	callstack 24
  4217  000778  C04A  F04D         	movff	?_getArrayShowUsers,LcNewString@new_s
  4218  00077C  C04B  F04E         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4219  000780  0012               	return	
  4220  000782                     __end_ofPL30:
  4221                           	callstack 0
  4222  000782                     PL34:
  4223                           	callstack 24
  4224  000782  0E01               	movlw	1
  4225  000784  6E52               	movwf	LcGotoXY@Row^0,c
  4226  000786  0C00               	retlw	0
  4227  000788                     __end_ofPL34:
  4228                           	callstack 0
  4229  000788                     PL44:
  4230                           	callstack 24
  4231  000788  C04A  F04D         	movff	?_UgetUserName,LcNewString@new_s
  4232  00078C  C04B  F04E         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4233  000790  0012               	return	
  4234  000792                     __end_ofPL44:
  4235                           	callstack 0
  4236  000792                     PL50:
  4237                           	callstack 24
  4238  000792  6E59               	movwf	??_menu^0,c
  4239  000794  C059  F04D         	movff	??_menu,LcNewString@new_s
  4240  000798  6A4E               	clrf	(LcNewString@new_s+1)^0,c
  4241  00079A  0012               	return	
  4242  00079C                     __end_ofPL50:
  4243                           	callstack 0
  4244  00079C                     PL76:
  4245                           	callstack 24
  4246  00079C  0E01               	movlw	1
  4247  00079E  6E52               	movwf	LcGotoXY@Row^0,c
  4248  0007A0  0C10               	retlw	16
  4249  0007A2                     __end_ofPL76:
  4250                           	callstack 0
  4251  0007A2                     PL78:
  4252                           	callstack 24
  4253  0007A2  0E00               	movlw	0
  4254  0007A4  6E52               	movwf	LcGotoXY@Row^0,c
  4255  0007A6  0C10               	retlw	16
  4256  0007A8                     __end_ofPL78:
  4257                           	callstack 0
  4258  0007A8                     PL80:
  4259                           	callstack 24
  4260  0007A8  6869               	setf	_NovaTecla^0,c
  4261  0007AA  6868               	setf	_novaLletra^0,c
  4262  0007AC  6A33               	clrf	_tmp^0,c
  4263  0007AE  0012               	return	
  4264  0007B0                     __end_ofPL80:
  4265                           	callstack 0
  4266  0007B0                     PL82:
  4267                           	callstack 24
  4268  0007B0  2A33               	incf	_tmp^0,f,c
  4269  0007B2  6869               	setf	_NovaTecla^0,c
  4270  0007B4  6868               	setf	_novaLletra^0,c
  4271  0007B6  0012               	return	
  4272  0007B8                     __end_ofPL82:
  4273                           	callstack 0
  4274                           
  4275 ;; *************** function _getArrayShowUsers *****************
  4276 ;; Defined at:
  4277 ;;		line 62 in file "Usuaris.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  quin            1    wreg     unsigned char 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  quin            1    7[COMRAM] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  2    5[COMRAM] PTR unsigned char 
  4284 ;; Registers used:
  4285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1
  4291 ;;      Params:         2       0       0
  4292 ;;      Locals:         1       0       0
  4293 ;;      Temps:          0       0       0
  4294 ;;      Totals:         3       0       0
  4295 ;;Total ram usage:        3 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 2
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_menu
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text19
  4306  001B74                     __ptext19:
  4307                           	callstack 0
  4308  001B74                     _getArrayShowUsers:
  4309                           	callstack 27
  4310                           
  4311                           ;incstack = 0
  4312                           ;getArrayShowUsers@quin stored from wreg
  4313  001B74  6E4C               	movwf	getArrayShowUsers@quin^0,c
  4314                           
  4315                           ;Usuaris.c: 63:     return usuaris[arrayShowUsers[quin]].username;
  4316  001B76  504C               	movf	getArrayShowUsers@quin^0,w,c
  4317  001B78  0F01               	addlw	low _arrayShowUsers
  4318  001B7A  6ED9               	movwf	fsr2l,c
  4319  001B7C  6ADA               	clrf	fsr2h,c
  4320  001B7E  50DF               	movf	indf2,w,c
  4321  001B80  0D12               	mullw	18
  4322  001B82  0E00               	movlw	low _usuaris
  4323  001B84  24F3               	addwf	243,w,c
  4324  001B86  6E4A               	movwf	?_getArrayShowUsers^0,c
  4325  001B88  0E01               	movlw	high _usuaris
  4326  001B8A  20F4               	addwfc	prodh,w,c
  4327  001B8C  6E4B               	movwf	(?_getArrayShowUsers+1)^0,c
  4328  001B8E  0012               	return		;funcret
  4329  001B90                     __end_of_getArrayShowUsers:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function _checkHoraAcabat *****************
  4333 ;; Defined at:
  4334 ;;		line 42 in file "Hora.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;		None               void
  4341 ;; Registers used:
  4342 ;;		status,0
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1
  4348 ;;      Params:         0       0       0
  4349 ;;      Locals:         0       0       0
  4350 ;;      Temps:          0       0       0
  4351 ;;      Totals:         0       0       0
  4352 ;;Total ram usage:        0 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 2
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_menu
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text20
  4363  001C64                     __ptext20:
  4364                           	callstack 0
  4365  001C64                     _checkHoraAcabat:
  4366                           	callstack 27
  4367                           
  4368                           ;Hora.c: 43:     return tempsAcabat;
  4369                           
  4370                           ;incstack = 0
  4371  001C64  B676               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4372  001C66  D002               	goto	l2215
  4373  001C68  90D8               	bcf	status,0,c
  4374  001C6A  0012               	return	
  4375  001C6C                     l2215:
  4376  001C6C  80D8               	bsf	status,0,c
  4377  001C6E  0012               	return		;funcret
  4378  001C70                     __end_of_checkHoraAcabat:
  4379                           	callstack 0
  4380                           
  4381 ;; *************** function _calculateShowUsers *****************
  4382 ;; Defined at:
  4383 ;;		line 124 in file "Usuaris.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		None
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1
  4397 ;;      Params:         0       0       0
  4398 ;;      Locals:         0       0       0
  4399 ;;      Temps:          0       0       0
  4400 ;;      Totals:         0       0       0
  4401 ;;Total ram usage:        0 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; Hardware stack levels required when called: 2
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_menu
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text21
  4412  001D96                     __ptext21:
  4413                           	callstack 0
  4414  001D96                     _calculateShowUsers:
  4415                           	callstack 27
  4416                           
  4417                           ;Usuaris.c: 125:     do_showUsers = 1;
  4418                           
  4419                           ;incstack = 0
  4420  001D96  8877               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4421  001D98  0012               	return		;funcret
  4422  001D9A                     __end_of_calculateShowUsers:
  4423                           	callstack 0
  4424                           
  4425 ;; *************** function _UshowUsersCalculat *****************
  4426 ;; Defined at:
  4427 ;;		line 127 in file "Usuaris.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;		None
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;		None
  4432 ;; Return value:  Size  Location     Type
  4433 ;;		None               void
  4434 ;; Registers used:
  4435 ;;		status,0
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1
  4441 ;;      Params:         0       0       0
  4442 ;;      Locals:         0       0       0
  4443 ;;      Temps:          0       0       0
  4444 ;;      Totals:         0       0       0
  4445 ;;Total ram usage:        0 bytes
  4446 ;; Hardware stack levels used: 1
  4447 ;; Hardware stack levels required when called: 2
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_menu
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text22
  4456  001C70                     __ptext22:
  4457                           	callstack 0
  4458  001C70                     _UshowUsersCalculat:
  4459                           	callstack 27
  4460                           
  4461                           ;Usuaris.c: 128:     return !do_showUsers;
  4462                           
  4463                           ;incstack = 0
  4464  001C70  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4465  001C72  D002               	goto	l2237
  4466  001C74  90D8               	bcf	status,0,c
  4467  001C76  0012               	return	
  4468  001C78                     l2237:
  4469  001C78  80D8               	bsf	status,0,c
  4470  001C7A  0012               	return		;funcret
  4471  001C7C                     __end_of_UshowUsersCalculat:
  4472                           	callstack 0
  4473                           
  4474 ;; *************** function _UgetUserName *****************
  4475 ;; Defined at:
  4476 ;;		line 58 in file "Usuaris.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  quin            1    wreg     unsigned char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  quin            1    7[COMRAM] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  2    5[COMRAM] PTR unsigned char 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0, prodl, prodh
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1
  4490 ;;      Params:         2       0       0
  4491 ;;      Locals:         1       0       0
  4492 ;;      Temps:          0       0       0
  4493 ;;      Totals:         3       0       0
  4494 ;;Total ram usage:        3 bytes
  4495 ;; Hardware stack levels used: 1
  4496 ;; Hardware stack levels required when called: 2
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_menu
  4501 ;;		_motorSIO
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text23
  4506  001BF6                     __ptext23:
  4507                           	callstack 0
  4508  001BF6                     _UgetUserName:
  4509                           	callstack 27
  4510                           
  4511                           ;incstack = 0
  4512                           ;UgetUserName@quin stored from wreg
  4513  001BF6  6E4C               	movwf	UgetUserName@quin^0,c
  4514                           
  4515                           ;Usuaris.c: 59:     return usuaris[quin].username;
  4516  001BF8  504C               	movf	UgetUserName@quin^0,w,c
  4517  001BFA  0D12               	mullw	18
  4518  001BFC  0E00               	movlw	low _usuaris
  4519  001BFE  24F3               	addwf	243,w,c
  4520  001C00  6E4A               	movwf	?_UgetUserName^0,c
  4521  001C02  0E01               	movlw	high _usuaris
  4522  001C04  20F4               	addwfc	prodh,w,c
  4523  001C06  6E4B               	movwf	(?_UgetUserName+1)^0,c
  4524  001C08  0012               	return		;funcret
  4525  001C0A                     __end_of_UgetUserName:
  4526                           	callstack 0
  4527                           
  4528 ;; *************** function _UgetTop5 *****************
  4529 ;; Defined at:
  4530 ;;		line 271 in file "Usuaris.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  quin            1    wreg     unsigned char 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  quin            1    5[COMRAM] unsigned char 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      char 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1
  4544 ;;      Params:         0       0       0
  4545 ;;      Locals:         1       0       0
  4546 ;;      Temps:          0       0       0
  4547 ;;      Totals:         1       0       0
  4548 ;;Total ram usage:        1 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 2
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_menu
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text24
  4559  001C7C                     __ptext24:
  4560                           	callstack 0
  4561  001C7C                     _UgetTop5:
  4562                           	callstack 27
  4563                           
  4564                           ;incstack = 0
  4565                           ;UgetTop5@quin stored from wreg
  4566  001C7C  6E4A               	movwf	UgetTop5@quin^0,c
  4567                           
  4568                           ;Usuaris.c: 272:     return puntuacions[quin].indexStruct;
  4569  001C7E  504A               	movf	UgetTop5@quin^0,w,c
  4570  001C80  EC52  F006         	call	PL18	;call to abstracted procedure
  4571  001C84  50DF               	movf	indf2,w,c
  4572  001C86  0012               	return		;funcret
  4573  001C88                     __end_of_UgetTop5:
  4574                           	callstack 0
  4575                           
  4576 ;; *************** function _UgetScore *****************
  4577 ;; Defined at:
  4578 ;;		line 268 in file "Usuaris.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  quin            1    wreg     unsigned char 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  quin            1    5[COMRAM] unsigned char 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      unsigned char 
  4585 ;; Registers used:
  4586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1
  4592 ;;      Params:         0       0       0
  4593 ;;      Locals:         1       0       0
  4594 ;;      Temps:          0       0       0
  4595 ;;      Totals:         1       0       0
  4596 ;;Total ram usage:        1 bytes
  4597 ;; Hardware stack levels used: 1
  4598 ;; Hardware stack levels required when called: 2
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_menu
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           	psect	text25
  4607  001C88                     __ptext25:
  4608                           	callstack 0
  4609  001C88                     _UgetScore:
  4610                           	callstack 27
  4611                           
  4612                           ;incstack = 0
  4613                           ;UgetScore@quin stored from wreg
  4614  001C88  6E4A               	movwf	UgetScore@quin^0,c
  4615                           
  4616                           ;Usuaris.c: 269:     return puntuacions[quin].score;
  4617  001C8A  504A               	movf	UgetScore@quin^0,w,c
  4618  001C8C  EC4C  F006         	call	PL16	;call to abstracted procedure
  4619  001C90  50DF               	movf	indf2,w,c
  4620  001C92  0012               	return		;funcret
  4621  001C94                     __end_of_UgetScore:
  4622                           	callstack 0
  4623                           
  4624 ;; *************** function _UgetNumUsuaris *****************
  4625 ;; Defined at:
  4626 ;;		line 34 in file "Usuaris.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      unsigned char 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1
  4640 ;;      Params:         0       0       0
  4641 ;;      Locals:         0       0       0
  4642 ;;      Temps:          0       0       0
  4643 ;;      Totals:         0       0       0
  4644 ;;Total ram usage:        0 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; Hardware stack levels required when called: 2
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_menu
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text26
  4655  001D9A                     __ptext26:
  4656                           	callstack 0
  4657  001D9A                     _UgetNumUsuaris:
  4658                           	callstack 27
  4659                           
  4660                           ;Usuaris.c: 35:     return numUsuaris;
  4661                           
  4662                           ;incstack = 0
  4663  001D9A  502D               	movf	_numUsuaris^0,w,c
  4664  001D9C  0012               	return		;funcret
  4665  001D9E                     __end_of_UgetNumUsuaris:
  4666                           	callstack 0
  4667                           
  4668 ;; *************** function _UenviaPas *****************
  4669 ;; Defined at:
  4670 ;;		line 50 in file "Usuaris.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  c               1    wreg     unsigned char 
  4673 ;;  pos             1    5[COMRAM] unsigned char 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  c               1    6[COMRAM] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1
  4685 ;;      Params:         1       0       0
  4686 ;;      Locals:         1       0       0
  4687 ;;      Temps:          0       0       0
  4688 ;;      Totals:         2       0       0
  4689 ;;Total ram usage:        2 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 2
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_menu
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text27
  4700  001C1C                     __ptext27:
  4701                           	callstack 0
  4702  001C1C                     _UenviaPas:
  4703                           	callstack 27
  4704                           
  4705                           ;incstack = 0
  4706                           ;UenviaPas@c stored from wreg
  4707  001C1C  6E4B               	movwf	UenviaPas@c^0,c
  4708                           
  4709                           ;Usuaris.c: 51:     tmpPassword[pos] = c;
  4710  001C1E  504A               	movf	UenviaPas@pos^0,w,c
  4711  001C20  0FA2               	addlw	low _tmpPassword
  4712  001C22  6ED9               	movwf	fsr2l,c
  4713  001C24  6ADA               	clrf	fsr2h,c
  4714  001C26  C04B  FFDF         	movff	UenviaPas@c,indf2
  4715  001C2A  0012               	return		;funcret
  4716  001C2C                     __end_of_UenviaPas:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _UenviaChar *****************
  4720 ;; Defined at:
  4721 ;;		line 47 in file "Usuaris.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  c               1    wreg     unsigned char 
  4724 ;;  pos             1    5[COMRAM] unsigned char 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  c               1    6[COMRAM] unsigned char 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      void 
  4729 ;; Registers used:
  4730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1
  4736 ;;      Params:         1       0       0
  4737 ;;      Locals:         1       0       0
  4738 ;;      Temps:          0       0       0
  4739 ;;      Totals:         2       0       0
  4740 ;;Total ram usage:        2 bytes
  4741 ;; Hardware stack levels used: 1
  4742 ;; Hardware stack levels required when called: 2
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_menu
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text28
  4751  001C2C                     __ptext28:
  4752                           	callstack 0
  4753  001C2C                     _UenviaChar:
  4754                           	callstack 27
  4755                           
  4756                           ;incstack = 0
  4757                           ;UenviaChar@c stored from wreg
  4758  001C2C  6E4B               	movwf	UenviaChar@c^0,c
  4759                           
  4760                           ;Usuaris.c: 48:     tmpUsername[pos] = c;
  4761  001C2E  504A               	movf	UenviaChar@pos^0,w,c
  4762  001C30  0FAB               	addlw	low _tmpUsername
  4763  001C32  6ED9               	movwf	fsr2l,c
  4764  001C34  6ADA               	clrf	fsr2h,c
  4765  001C36  C04B  FFDF         	movff	UenviaChar@c,indf2
  4766  001C3A  0012               	return		;funcret
  4767  001C3C                     __end_of_UenviaChar:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function _UcheckExistsNotFinished *****************
  4771 ;; Defined at:
  4772 ;;		line 41 in file "Usuaris.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;		None
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;		None
  4777 ;; Return value:  Size  Location     Type
  4778 ;;		None               void
  4779 ;; Registers used:
  4780 ;;		status,0
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1
  4786 ;;      Params:         0       0       0
  4787 ;;      Locals:         0       0       0
  4788 ;;      Temps:          0       0       0
  4789 ;;      Totals:         0       0       0
  4790 ;;Total ram usage:        0 bytes
  4791 ;; Hardware stack levels used: 1
  4792 ;; Hardware stack levels required when called: 2
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_menu
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text29
  4801  001C94                     __ptext29:
  4802                           	callstack 0
  4803  001C94                     _UcheckExistsNotFinished:
  4804                           	callstack 27
  4805                           
  4806                           ;Usuaris.c: 42:     return do_check_exists;
  4807                           
  4808                           ;incstack = 0
  4809  001C94  BC77               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4810  001C96  D002               	goto	l2171
  4811  001C98  90D8               	bcf	status,0,c
  4812  001C9A  0012               	return	
  4813  001C9C                     l2171:
  4814  001C9C  80D8               	bsf	status,0,c
  4815  001C9E  0012               	return		;funcret
  4816  001CA0                     __end_of_UcheckExistsNotFinished:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _UcheckExistsGetError *****************
  4820 ;; Defined at:
  4821 ;;		line 44 in file "Usuaris.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      char 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1
  4835 ;;      Params:         0       0       0
  4836 ;;      Locals:         0       0       0
  4837 ;;      Temps:          0       0       0
  4838 ;;      Totals:         0       0       0
  4839 ;;Total ram usage:        0 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; Hardware stack levels required when called: 2
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_menu
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text30
  4850  001D9E                     __ptext30:
  4851                           	callstack 0
  4852  001D9E                     _UcheckExistsGetError:
  4853                           	callstack 27
  4854                           
  4855                           ;Usuaris.c: 45:     return usuariLoguejat;
  4856                           
  4857                           ;incstack = 0
  4858  001D9E  5066               	movf	_usuariLoguejat^0,w,c
  4859  001DA0  0012               	return		;funcret
  4860  001DA2                     __end_of_UcheckExistsGetError:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _UcheckExists *****************
  4864 ;; Defined at:
  4865 ;;		line 38 in file "Usuaris.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		None
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1
  4879 ;;      Params:         0       0       0
  4880 ;;      Locals:         0       0       0
  4881 ;;      Temps:          0       0       0
  4882 ;;      Totals:         0       0       0
  4883 ;;Total ram usage:        0 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 2
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_menu
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text31
  4894  001DA2                     __ptext31:
  4895                           	callstack 0
  4896  001DA2                     _UcheckExists:
  4897                           	callstack 27
  4898                           
  4899                           ;Usuaris.c: 39:     do_check_exists = 1;
  4900                           
  4901                           ;incstack = 0
  4902  001DA2  8C77               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4903  001DA4  0012               	return		;funcret
  4904  001DA6                     __end_of_UcheckExists:
  4905                           	callstack 0
  4906                           
  4907 ;; *************** function _URegister *****************
  4908 ;; Defined at:
  4909 ;;		line 54 in file "Usuaris.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		None
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1
  4923 ;;      Params:         0       0       0
  4924 ;;      Locals:         0       0       0
  4925 ;;      Temps:          0       0       0
  4926 ;;      Totals:         0       0       0
  4927 ;;Total ram usage:        0 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; Hardware stack levels required when called: 2
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_menu
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text32
  4938  001DA6                     __ptext32:
  4939                           	callstack 0
  4940  001DA6                     _URegister:
  4941                           	callstack 27
  4942                           
  4943                           ;Usuaris.c: 55:     do_register = 1;
  4944                           
  4945                           ;incstack = 0
  4946  001DA6  8A77               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  4947  001DA8  0012               	return		;funcret
  4948  001DAA                     __end_of_URegister:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function _SiFerMenu *****************
  4952 ;; Defined at:
  4953 ;;		line 19 in file "GestioLCD.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		None
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1
  4967 ;;      Params:         0       0       0
  4968 ;;      Locals:         0       0       0
  4969 ;;      Temps:          0       0       0
  4970 ;;      Totals:         0       0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used: 1
  4973 ;; Hardware stack levels required when called: 2
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_menu
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text33
  4982  001DAA                     __ptext33:
  4983                           	callstack 0
  4984  001DAA                     _SiFerMenu:
  4985                           	callstack 27
  4986                           
  4987                           ;GestioLCD.c: 20:     ferMenu = 1;
  4988                           
  4989                           ;incstack = 0
  4990  001DAA  8277               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4991  001DAC  0012               	return		;funcret
  4992  001DAE                     __end_of_SiFerMenu:
  4993                           	callstack 0
  4994                           
  4995 ;; *************** function _SMSon *****************
  4996 ;; Defined at:
  4997 ;;		line 128 in file "Ssms.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		None
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1
  5011 ;;      Params:         0       0       0
  5012 ;;      Locals:         0       0       0
  5013 ;;      Temps:          0       0       0
  5014 ;;      Totals:         0       0       0
  5015 ;;Total ram usage:        0 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; Hardware stack levels required when called: 2
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_menu
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text34
  5026  001D70                     __ptext34:
  5027                           	callstack 0
  5028  001D70                     _SMSon:
  5029                           	callstack 27
  5030                           
  5031                           ;Ssms.c: 129:     setSMSon = 1;
  5032                           
  5033                           ;incstack = 0
  5034  001D70  8078               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5035                           
  5036                           ;Ssms.c: 130:     novaTecla = -1;
  5037  001D72  686B               	setf	_novaTecla^0,c
  5038  001D74  0012               	return		;funcret
  5039  001D76                     __end_of_SMSon:
  5040                           	callstack 0
  5041                           
  5042 ;; *************** function _SMSoff *****************
  5043 ;; Defined at:
  5044 ;;		line 133 in file "Ssms.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;		None
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;		None
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  1    wreg      void 
  5051 ;; Registers used:
  5052 ;;		None
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1
  5058 ;;      Params:         0       0       0
  5059 ;;      Locals:         0       0       0
  5060 ;;      Temps:          0       0       0
  5061 ;;      Totals:         0       0       0
  5062 ;;Total ram usage:        0 bytes
  5063 ;; Hardware stack levels used: 1
  5064 ;; Hardware stack levels required when called: 2
  5065 ;; This function calls:
  5066 ;;		Nothing
  5067 ;; This function is called by:
  5068 ;;		_menu
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text35
  5073  001D76                     __ptext35:
  5074                           	callstack 0
  5075  001D76                     _SMSoff:
  5076                           	callstack 27
  5077                           
  5078                           ;Ssms.c: 134:     setSMSon = 0;
  5079                           
  5080                           ;incstack = 0
  5081  001D76  9078               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5082                           
  5083                           ;Ssms.c: 135:     novaTecla = -1;
  5084  001D78  686B               	setf	_novaTecla^0,c
  5085  001D7A  0012               	return		;funcret
  5086  001D7C                     __end_of_SMSoff:
  5087                           	callstack 0
  5088                           
  5089 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5090 ;; Defined at:
  5091 ;;		line 37 in file "SIO.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;		None
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;		None
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  1    wreg      char 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1
  5105 ;;      Params:         0       0       0
  5106 ;;      Locals:         0       0       0
  5107 ;;      Temps:          0       0       0
  5108 ;;      Totals:         0       0       0
  5109 ;;Total ram usage:        0 bytes
  5110 ;; Hardware stack levels used: 1
  5111 ;; Hardware stack levels required when called: 2
  5112 ;; This function calls:
  5113 ;;		Nothing
  5114 ;; This function is called by:
  5115 ;;		_menu
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text36
  5120  001DAE                     __ptext36:
  5121                           	callstack 0
  5122  001DAE                     _SIOHaAcabatPuntuacions:
  5123                           	callstack 27
  5124                           
  5125                           ;SIO.c: 38:     return usuariActualSIO;
  5126                           
  5127                           ;incstack = 0
  5128  001DAE  5061               	movf	_usuariActualSIO^0,w,c
  5129  001DB0  0012               	return		;funcret
  5130  001DB2                     __end_of_SIOHaAcabatPuntuacions:
  5131                           	callstack 0
  5132                           
  5133 ;; *************** function _NoFerMenu *****************
  5134 ;; Defined at:
  5135 ;;		line 22 in file "GestioLCD.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		None
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1
  5149 ;;      Params:         0       0       0
  5150 ;;      Locals:         0       0       0
  5151 ;;      Temps:          0       0       0
  5152 ;;      Totals:         0       0       0
  5153 ;;Total ram usage:        0 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 2
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_menu
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text37
  5164  001DB2                     __ptext37:
  5165                           	callstack 0
  5166  001DB2                     _NoFerMenu:
  5167                           	callstack 27
  5168                           
  5169                           ;GestioLCD.c: 23:     ferMenu = 0;
  5170                           
  5171                           ;incstack = 0
  5172  001DB2  9277               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5173  001DB4  0012               	return		;funcret
  5174  001DB6                     __end_of_NoFerMenu:
  5175                           	callstack 0
  5176                           
  5177 ;; *************** function _LcScroll *****************
  5178 ;; Defined at:
  5179 ;;		line 37 in file "LcTLCD.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1
  5193 ;;      Params:         0       0       0
  5194 ;;      Locals:         0       0       0
  5195 ;;      Temps:          0       0       0
  5196 ;;      Totals:         0       0       0
  5197 ;;Total ram usage:        0 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; Hardware stack levels required when called: 4
  5200 ;; This function calls:
  5201 ;;		_CantaIR
  5202 ;; This function is called by:
  5203 ;;		_menu
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text38
  5208  001D7C                     __ptext38:
  5209                           	callstack 0
  5210  001D7C                     _LcScroll:
  5211                           	callstack 25
  5212                           
  5213                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5214                           
  5215                           ;incstack = 0
  5216  001D7C  0E18               	movlw	24
  5217  001D7E  EFC8  F00D         	goto	_CantaIR
  5218  001D82                     __end_of_LcScroll:
  5219                           	callstack 0
  5220                           
  5221 ;; *************** function _JnovaTecla *****************
  5222 ;; Defined at:
  5223 ;;		line 16 in file "Joc.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  tecla           1    wreg     char 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  tecla           1    5[COMRAM] char 
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      void 
  5230 ;; Registers used:
  5231 ;;		wreg
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1
  5237 ;;      Params:         0       0       0
  5238 ;;      Locals:         1       0       0
  5239 ;;      Temps:          0       0       0
  5240 ;;      Totals:         1       0       0
  5241 ;;Total ram usage:        1 bytes
  5242 ;; Hardware stack levels used: 1
  5243 ;; Hardware stack levels required when called: 2
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_menu
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text39
  5252  001CF2                     __ptext39:
  5253                           	callstack 0
  5254  001CF2                     _JnovaTecla:
  5255                           	callstack 27
  5256                           
  5257                           ;incstack = 0
  5258                           ;JnovaTecla@tecla stored from wreg
  5259  001CF2  6E4A               	movwf	JnovaTecla@tecla^0,c
  5260                           
  5261                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5262  001CF4  C04A  F062         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5263  001CF8  0012               	return		;funcret
  5264  001CFA                     __end_of_JnovaTecla:
  5265                           	callstack 0
  5266                           
  5267 ;; *************** function _JnovaDireccio *****************
  5268 ;; Defined at:
  5269 ;;		line 19 in file "Joc.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  dir             1    wreg     unsigned char 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;  dir             1    5[COMRAM] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1
  5283 ;;      Params:         0       0       0
  5284 ;;      Locals:         1       0       0
  5285 ;;      Temps:          0       0       0
  5286 ;;      Totals:         1       0       0
  5287 ;;Total ram usage:        1 bytes
  5288 ;; Hardware stack levels used: 1
  5289 ;; Hardware stack levels required when called: 2
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_menu
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text40
  5298  001CFA                     __ptext40:
  5299                           	callstack 0
  5300  001CFA                     _JnovaDireccio:
  5301                           	callstack 27
  5302                           
  5303                           ;incstack = 0
  5304                           ;JnovaDireccio@dir stored from wreg
  5305  001CFA  6E4A               	movwf	JnovaDireccio@dir^0,c
  5306                           
  5307                           ;Joc.c: 20:     direccioJoc = dir;
  5308  001CFC  C04A  F013         	movff	JnovaDireccio@dir,_direccioJoc
  5309  001D00  0012               	return		;funcret
  5310  001D02                     __end_of_JnovaDireccio:
  5311                           	callstack 0
  5312                           
  5313 ;; *************** function _JendGame *****************
  5314 ;; Defined at:
  5315 ;;		line 23 in file "Joc.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;		None
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;		None
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  1    wreg      void 
  5322 ;; Registers used:
  5323 ;;		None
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1
  5329 ;;      Params:         0       0       0
  5330 ;;      Locals:         0       0       0
  5331 ;;      Temps:          0       0       0
  5332 ;;      Totals:         0       0       0
  5333 ;;Total ram usage:        0 bytes
  5334 ;; Hardware stack levels used: 1
  5335 ;; Hardware stack levels required when called: 2
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_menu
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text41
  5344  001DB6                     __ptext41:
  5345                           	callstack 0
  5346  001DB6                     _JendGame:
  5347                           	callstack 27
  5348                           
  5349                           ;Joc.c: 24:     jugantJoc = 0;
  5350                           
  5351                           ;incstack = 0
  5352  001DB6  9476               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5353  001DB8  0012               	return		;funcret
  5354  001DBA                     __end_of_JendGame:
  5355                           	callstack 0
  5356                           
  5357 ;; *************** function _JJuguem *****************
  5358 ;; Defined at:
  5359 ;;		line 13 in file "Joc.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  usuari          1    wreg     unsigned char 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  usuari          1    5[COMRAM] unsigned char 
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1
  5373 ;;      Params:         0       0       0
  5374 ;;      Locals:         1       0       0
  5375 ;;      Temps:          0       0       0
  5376 ;;      Totals:         1       0       0
  5377 ;;Total ram usage:        1 bytes
  5378 ;; Hardware stack levels used: 1
  5379 ;; Hardware stack levels required when called: 2
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_menu
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text42
  5388  001D02                     __ptext42:
  5389                           	callstack 0
  5390  001D02                     _JJuguem:
  5391                           	callstack 27
  5392                           
  5393                           ;incstack = 0
  5394                           ;JJuguem@usuari stored from wreg
  5395  001D02  6E4A               	movwf	JJuguem@usuari^0,c
  5396                           
  5397                           ;Joc.c: 14:     usuariJoc = usuari;
  5398  001D04  C04A  F063         	movff	JJuguem@usuari,_usuariJoc
  5399  001D08  0012               	return		;funcret
  5400  001D0A                     __end_of_JJuguem:
  5401                           	callstack 0
  5402                           
  5403 ;; *************** function _HActualitzaHora *****************
  5404 ;; Defined at:
  5405 ;;		line 16 in file "Hora.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5408 ;;		 -> horaTmp(4), 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1
  5420 ;;      Params:         1       0       0
  5421 ;;      Locals:         0       0       0
  5422 ;;      Temps:          0       0       0
  5423 ;;      Totals:         1       0       0
  5424 ;;Total ram usage:        1 bytes
  5425 ;; Hardware stack levels used: 1
  5426 ;; Hardware stack levels required when called: 2
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_menu
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text43
  5435  00198E                     __ptext43:
  5436                           	callstack 0
  5437  00198E                     _HActualitzaHora:
  5438                           	callstack 27
  5439                           
  5440                           ;Hora.c: 17:     hora[0] = nova[0];
  5441                           
  5442                           ;incstack = 0
  5443  00198E  504A               	movf	HActualitzaHora@nova^0,w,c
  5444  001990  6ED9               	movwf	fsr2l,c
  5445  001992  6ADA               	clrf	fsr2h,c
  5446  001994  50DF               	movf	indf2,w,c
  5447  001996  6E6D               	movwf	_hora^0,c
  5448                           
  5449                           ;Hora.c: 18:     hora[1] = nova[1];
  5450  001998  504A               	movf	HActualitzaHora@nova^0,w,c
  5451  00199A  6ED9               	movwf	fsr2l,c
  5452  00199C  6ADA               	clrf	fsr2h,c
  5453  00199E  2AD9               	incf	fsr2l,f,c
  5454  0019A0  50DF               	movf	indf2,w,c
  5455  0019A2  6E6E               	movwf	(_hora+1)^0,c
  5456                           
  5457                           ;Hora.c: 19:     hora[3] = nova[2];
  5458  0019A4  504A               	movf	HActualitzaHora@nova^0,w,c
  5459  0019A6  6ED9               	movwf	fsr2l,c
  5460  0019A8  6ADA               	clrf	fsr2h,c
  5461  0019AA  0E02               	movlw	2
  5462  0019AC  26D9               	addwf	fsr2l,f,c
  5463  0019AE  50DF               	movf	indf2,w,c
  5464  0019B0  6E70               	movwf	(_hora+3)^0,c
  5465                           
  5466                           ;Hora.c: 20:     hora[4] = nova[3];
  5467  0019B2  504A               	movf	HActualitzaHora@nova^0,w,c
  5468  0019B4  6ED9               	movwf	fsr2l,c
  5469  0019B6  6ADA               	clrf	fsr2h,c
  5470  0019B8  0E03               	movlw	3
  5471  0019BA  26D9               	addwf	fsr2l,f,c
  5472  0019BC  50DF               	movf	indf2,w,c
  5473  0019BE  6E71               	movwf	(_hora+4)^0,c
  5474  0019C0  0012               	return		;funcret
  5475  0019C2                     __end_of_HActualitzaHora:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function _GLCDMostraMenu *****************
  5479 ;; Defined at:
  5480 ;;		line 30 in file "GestioLCD.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  num             1    wreg     unsigned char 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  num             1    5[COMRAM] unsigned char 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1
  5494 ;;      Params:         0       0       0
  5495 ;;      Locals:         1       0       0
  5496 ;;      Temps:          0       0       0
  5497 ;;      Totals:         1       0       0
  5498 ;;Total ram usage:        1 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 2
  5501 ;; This function calls:
  5502 ;;		Nothing
  5503 ;; This function is called by:
  5504 ;;		_menu
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text44
  5509  001CA0                     __ptext44:
  5510                           	callstack 0
  5511  001CA0                     _GLCDMostraMenu:
  5512                           	callstack 27
  5513                           
  5514                           ;incstack = 0
  5515                           ;GLCDMostraMenu@num stored from wreg
  5516  001CA0  6E4A               	movwf	GLCDMostraMenu@num^0,c
  5517                           
  5518                           ;GestioLCD.c: 31:     newString = 1;
  5519  001CA2  8077               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5520                           
  5521                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5522  001CA4  C04A  F021         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5523                           
  5524                           ;GestioLCD.c: 33:     ferMenu = 1;
  5525  001CA8  8277               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5526  001CAA  0012               	return		;funcret
  5527  001CAC                     __end_of_GLCDMostraMenu:
  5528                           	callstack 0
  5529                           
  5530 ;; *************** function _CToAobtenir *****************
  5531 ;; Defined at:
  5532 ;;		line 7 in file "CtoA.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;		None
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;		None
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      PTR unsigned char 
  5539 ;; Registers used:
  5540 ;;		wreg
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1
  5546 ;;      Params:         2       0       0
  5547 ;;      Locals:         0       0       0
  5548 ;;      Temps:          0       0       0
  5549 ;;      Totals:         2       0       0
  5550 ;;Total ram usage:        2 bytes
  5551 ;; Hardware stack levels used: 1
  5552 ;; Hardware stack levels required when called: 2
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_menu
  5557 ;;		_motorSIO
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text45
  5562  001DBA                     __ptext45:
  5563                           	callstack 0
  5564  001DBA                     _CToAobtenir:
  5565                           	callstack 27
  5566                           
  5567                           ;CtoA.c: 8:     return stringScore;
  5568                           
  5569                           ;incstack = 0
  5570  001DBA  0E73               	movlw	_stringScore& (0+255)
  5571  001DBC  0012               	return		;funcret
  5572  001DBE                     __end_of_CToAobtenir:
  5573                           	callstack 0
  5574                           
  5575 ;; *************** function _CToAHaAcabat *****************
  5576 ;; Defined at:
  5577 ;;		line 10 in file "CtoA.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;		None
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;		None
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  1    wreg      unsigned char 
  5584 ;; Registers used:
  5585 ;;		wreg, status,2
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1
  5591 ;;      Params:         0       0       0
  5592 ;;      Locals:         0       0       0
  5593 ;;      Temps:          0       0       0
  5594 ;;      Totals:         0       0       0
  5595 ;;Total ram usage:        0 bytes
  5596 ;; Hardware stack levels used: 1
  5597 ;; Hardware stack levels required when called: 2
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		_menu
  5602 ;;		_motorSIO
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text46
  5607  001DBE                     __ptext46:
  5608                           	callstack 0
  5609  001DBE                     _CToAHaAcabat:
  5610                           	callstack 27
  5611                           
  5612                           ;CtoA.c: 11:     return convertir;
  5613                           
  5614                           ;incstack = 0
  5615  001DBE  505E               	movf	_convertir^0,w,c
  5616  001DC0  0012               	return		;funcret
  5617  001DC2                     __end_of_CToAHaAcabat:
  5618                           	callstack 0
  5619                           
  5620 ;; *************** function _CToAConverteix *****************
  5621 ;; Defined at:
  5622 ;;		line 14 in file "CtoA.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  numero          1    wreg     unsigned char 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  numero          1    5[COMRAM] unsigned char 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  1    wreg      void 
  5629 ;; Registers used:
  5630 ;;		wreg, status,2, cstack
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1
  5636 ;;      Params:         0       0       0
  5637 ;;      Locals:         1       0       0
  5638 ;;      Temps:          0       0       0
  5639 ;;      Totals:         1       0       0
  5640 ;;Total ram usage:        1 bytes
  5641 ;; Hardware stack levels used: 1
  5642 ;; Hardware stack levels required when called: 3
  5643 ;; This function calls:
  5644 ;;		_CToAReset
  5645 ;; This function is called by:
  5646 ;;		_menu
  5647 ;;		_motorSIO
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text47
  5652  001CAC                     __ptext47:
  5653                           	callstack 0
  5654  001CAC                     _CToAConverteix:
  5655                           	callstack 26
  5656                           
  5657                           ;incstack = 0
  5658                           ;CToAConverteix@numero stored from wreg
  5659  001CAC  6E4A               	movwf	CToAConverteix@numero^0,c
  5660                           
  5661                           ;CtoA.c: 15:     CToAReset();
  5662  001CAE  EC85  F00E         	call	_CToAReset	;wreg free
  5663                           
  5664                           ;CtoA.c: 16:     convertir = numero;
  5665  001CB2  C04A  F05E         	movff	CToAConverteix@numero,_convertir
  5666  001CB6  0012               	return		;funcret
  5667  001CB8                     __end_of_CToAConverteix:
  5668                           	callstack 0
  5669                           
  5670 ;; *************** function _CToAReset *****************
  5671 ;; Defined at:
  5672 ;;		line 18 in file "CtoA.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1
  5686 ;;      Params:         0       0       0
  5687 ;;      Locals:         0       0       0
  5688 ;;      Temps:          0       0       0
  5689 ;;      Totals:         0       0       0
  5690 ;;Total ram usage:        0 bytes
  5691 ;; Hardware stack levels used: 1
  5692 ;; Hardware stack levels required when called: 2
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_CToAConverteix
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text48
  5701  001D0A                     __ptext48:
  5702                           	callstack 0
  5703  001D0A                     _CToAReset:
  5704                           	callstack 26
  5705                           
  5706                           ;CtoA.c: 19:     stringScore[0] = '0';
  5707                           
  5708                           ;incstack = 0
  5709  001D0A  0E30               	movlw	48
  5710  001D0C  6E73               	movwf	_stringScore^0,c
  5711                           
  5712                           ;CtoA.c: 20:     stringScore[1] = '0';
  5713  001D0E  6E74               	movwf	(_stringScore+1)^0,c
  5714  001D10  0C30               	retlw	48	;funcret
  5715  001D12                     __end_of_CToAReset:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function _init_ports *****************
  5719 ;; Defined at:
  5720 ;;		line 25 in file "main.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1
  5734 ;;      Params:         0       0       0
  5735 ;;      Locals:         0       0       0
  5736 ;;      Temps:          0       0       0
  5737 ;;      Totals:         0       0       0
  5738 ;;Total ram usage:        0 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 2
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_main
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text49
  5749  001B56                     __ptext49:
  5750                           	callstack 0
  5751  001B56                     _init_ports:
  5752                           	callstack 28
  5753                           
  5754                           ;incstack = 0
  5755  001B56  0E03               	movlw	3
  5756  001B58  6E92               	movwf	146,c	;volatile
  5757  001B5A  0EE0               	movlw	224
  5758  001B5C  6E93               	movwf	147,c	;volatile
  5759  001B5E  968A               	bcf	138,3,c	;volatile
  5760  001B60  908A               	bcf	138,0,c	;volatile
  5761  001B62  928A               	bcf	138,1,c	;volatile
  5762                           
  5763                           ;main.c: 49:     TRISC = 0xC0;
  5764  001B64  0EC0               	movlw	192
  5765  001B66  6E94               	movwf	148,c	;volatile
  5766                           
  5767                           ;main.c: 59:     TRISD = 0x8F;
  5768  001B68  0E8F               	movlw	143
  5769  001B6A  6E95               	movwf	149,c	;volatile
  5770                           
  5771                           ;main.c: 60:     LATD = 0x00;
  5772  001B6C  6A8C               	clrf	140,c	;volatile
  5773                           
  5774                           ;main.c: 63:     EECON1bits.EEPGD = 1;
  5775  001B6E  8EA6               	bsf	166,7,c	;volsfr
  5776                           
  5777                           ;main.c: 64:     EECON1bits.CFGS = 0;
  5778  001B70  9CA6               	bcf	166,6,c	;volsfr
  5779  001B72  0012               	return		;funcret
  5780  001B74                     __end_of_init_ports:
  5781                           	callstack 0
  5782                           
  5783 ;; *************** function _init_eusart *****************
  5784 ;; Defined at:
  5785 ;;		line 67 in file "main.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;		None
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1
  5799 ;;      Params:         0       0       0
  5800 ;;      Locals:         0       0       0
  5801 ;;      Temps:          0       0       0
  5802 ;;      Totals:         0       0       0
  5803 ;;Total ram usage:        0 bytes
  5804 ;; Hardware stack levels used: 1
  5805 ;; Hardware stack levels required when called: 2
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_main
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           	psect	text50
  5814  001BE0                     __ptext50:
  5815                           	callstack 0
  5816  001BE0                     _init_eusart:
  5817                           	callstack 28
  5818                           
  5819                           ;main.c: 68:     TXSTA = 0x24;
  5820                           
  5821                           ;incstack = 0
  5822  001BE0  0E24               	movlw	36
  5823  001BE2  6EAC               	movwf	172,c	;volatile
  5824                           
  5825                           ;main.c: 69:     RCSTA = 0x90;
  5826  001BE4  0E90               	movlw	144
  5827  001BE6  6EAB               	movwf	171,c	;volatile
  5828                           
  5829                           ;main.c: 70:     BAUDCON = 0x08;
  5830  001BE8  0E08               	movlw	8
  5831  001BEA  6EB8               	movwf	184,c	;volatile
  5832                           
  5833                           ;main.c: 71:     SPBRGH = 0x04;
  5834  001BEC  0E04               	movlw	4
  5835  001BEE  6EB0               	movwf	176,c	;volatile
  5836                           
  5837                           ;main.c: 72:     SPBRG = 0x10;
  5838  001BF0  0E10               	movlw	16
  5839  001BF2  6EAF               	movwf	175,c	;volatile
  5840  001BF4  0C10               	retlw	16	;funcret
  5841  001BF6                     __end_of_init_eusart:
  5842                           	callstack 0
  5843                           
  5844 ;; *************** function _initSIO *****************
  5845 ;; Defined at:
  5846 ;;		line 19 in file "SIO.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;		None
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;		None
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  1    wreg      void 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1
  5860 ;;      Params:         0       0       0
  5861 ;;      Locals:         0       0       0
  5862 ;;      Temps:          0       0       0
  5863 ;;      Totals:         0       0       0
  5864 ;;Total ram usage:        0 bytes
  5865 ;; Hardware stack levels used: 1
  5866 ;; Hardware stack levels required when called: 3
  5867 ;; This function calls:
  5868 ;;		_TiGetTimer
  5869 ;; This function is called by:
  5870 ;;		_main
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text51
  5875  001D12                     __ptext51:
  5876                           	callstack 0
  5877  001D12                     _initSIO:
  5878                           	callstack 27
  5879                           
  5880                           ;SIO.c: 20:     timerSIO = TiGetTimer();
  5881                           
  5882                           ;incstack = 0
  5883  001D12  EC15  F00D         	call	_TiGetTimer	;wreg free
  5884  001D16  6E11               	movwf	_timerSIO^0,c
  5885  001D18  0012               	return		;funcret
  5886  001D1A                     __end_of_initSIO:
  5887                           	callstack 0
  5888                           
  5889 ;; *************** function _initHora *****************
  5890 ;; Defined at:
  5891 ;;		line 12 in file "Hora.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;		None
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;		None
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      void 
  5898 ;; Registers used:
  5899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMRAM   BANK0   BANK1
  5905 ;;      Params:         0       0       0
  5906 ;;      Locals:         0       0       0
  5907 ;;      Temps:          0       0       0
  5908 ;;      Totals:         0       0       0
  5909 ;;Total ram usage:        0 bytes
  5910 ;; Hardware stack levels used: 1
  5911 ;; Hardware stack levels required when called: 3
  5912 ;; This function calls:
  5913 ;;		_TiGetTimer
  5914 ;; This function is called by:
  5915 ;;		_main
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	text52
  5920  001D1A                     __ptext52:
  5921                           	callstack 0
  5922  001D1A                     _initHora:
  5923                           	callstack 27
  5924                           
  5925                           ;Hora.c: 13:     timerHora = TiGetTimer();
  5926                           
  5927                           ;incstack = 0
  5928  001D1A  EC15  F00D         	call	_TiGetTimer	;wreg free
  5929  001D1E  6E16               	movwf	_timerHora^0,c
  5930  001D20  0012               	return		;funcret
  5931  001D22                     __end_of_initHora:
  5932                           	callstack 0
  5933                           
  5934 ;; *************** function _initAltaveu *****************
  5935 ;; Defined at:
  5936 ;;		line 10 in file "Altaveu.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;		None
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;		None
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1
  5950 ;;      Params:         0       0       0
  5951 ;;      Locals:         0       0       0
  5952 ;;      Temps:          0       0       0
  5953 ;;      Totals:         0       0       0
  5954 ;;Total ram usage:        0 bytes
  5955 ;; Hardware stack levels used: 1
  5956 ;; Hardware stack levels required when called: 3
  5957 ;; This function calls:
  5958 ;;		_TiGetTimer
  5959 ;; This function is called by:
  5960 ;;		_main
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text53
  5965  001D22                     __ptext53:
  5966                           	callstack 0
  5967  001D22                     _initAltaveu:
  5968                           	callstack 27
  5969                           
  5970                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  5971                           
  5972                           ;incstack = 0
  5973  001D22  EC15  F00D         	call	_TiGetTimer	;wreg free
  5974  001D26  6E25               	movwf	_timerAltaveu^0,c
  5975  001D28  0012               	return		;funcret
  5976  001D2A                     __end_of_initAltaveu:
  5977                           	callstack 0
  5978                           
  5979 ;; *************** function _UmotorUsers *****************
  5980 ;; Defined at:
  5981 ;;		line 131 in file "Usuaris.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1
  5995 ;;      Params:         0       0       0
  5996 ;;      Locals:         0       0       0
  5997 ;;      Temps:          2       0       0
  5998 ;;      Totals:         2       0       0
  5999 ;;Total ram usage:        2 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; Hardware stack levels required when called: 3
  6002 ;; This function calls:
  6003 ;;		_compareStrings
  6004 ;;		_escriureCharEEPROM
  6005 ;; This function is called by:
  6006 ;;		_main
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text54
  6011  000A4A                     __ptext54:
  6012                           	callstack 0
  6013  000A4A                     _UmotorUsers:
  6014                           	callstack 27
  6015                           
  6016                           ;Usuaris.c: 132:     static char state = 0;;Usuaris.c: 134:  switch(state) {
  6017                           
  6018                           ;incstack = 0
  6019  000A4A  D0FC               	goto	l5997
  6020  000A4C                     l761:
  6021                           
  6022                           ;Usuaris.c: 136:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  6023  000A4C  AC77               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6024  000A4E  BA77               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6025  000A50  D006               	goto	l762
  6026  000A52  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6027  000A54  B677               	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6028  000A56  D003               	goto	l762
  6029                           
  6030                           ;Usuaris.c: 137:     i = 0;
  6031  000A58  6A2A               	clrf	_i^0,c
  6032                           
  6033                           ;Usuaris.c: 138:     j = 0;
  6034  000A5A  6A29               	clrf	_j^0,c
  6035                           
  6036                           ;Usuaris.c: 139:    }
  6037  000A5C  0012               	return	
  6038  000A5E                     l762:
  6039  000A5E  AC77               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6040  000A60  D004               	goto	l764
  6041                           
  6042                           ;Usuaris.c: 141:     usuariLoguejat = -1;
  6043  000A62  6866               	setf	_usuariLoguejat^0,c
  6044  000A64                     l5841:
  6045                           
  6046                           ;Usuaris.c: 142:     state = 1;
  6047  000A64  0E01               	movlw	1
  6048  000A66  6E27               	movwf	UmotorUsers@state^0,c
  6049                           
  6050                           ;Usuaris.c: 143:    }
  6051  000A68  0C01               	retlw	1
  6052  000A6A                     l764:
  6053  000A6A  AA77               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6054  000A6C  D003               	goto	l766
  6055  000A6E                     u6240:
  6056                           
  6057                           ;Usuaris.c: 145:     state = 2;
  6058  000A6E  0E02               	movlw	2
  6059  000A70  6E27               	movwf	UmotorUsers@state^0,c
  6060                           
  6061                           ;Usuaris.c: 146:    }
  6062  000A72  0C02               	retlw	2
  6063  000A74                     l766:
  6064  000A74  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6065  000A76  D015               	goto	l768
  6066                           
  6067                           ;Usuaris.c: 148:     arrayShowUsers[0] = usuariLoguejat;
  6068  000A78  C066  F001         	movff	_usuariLoguejat,_arrayShowUsers
  6069                           
  6070                           ;Usuaris.c: 149:     arrayShowUsers[1] = -1;
  6071  000A7C  6802               	setf	(_arrayShowUsers+1)^0,c
  6072                           
  6073                           ;Usuaris.c: 150:     arrayShowUsers[2] = -1;
  6074  000A7E  6803               	setf	(_arrayShowUsers+2)^0,c
  6075                           
  6076                           ;Usuaris.c: 151:     arrayShowUsers[3] = -1;
  6077  000A80  6804               	setf	(_arrayShowUsers+3)^0,c
  6078                           
  6079                           ;Usuaris.c: 152:     arrayShowUsers[4] = -1;
  6080  000A82  6805               	setf	(_arrayShowUsers+4)^0,c
  6081                           
  6082                           ;Usuaris.c: 153:     arrayShowUsers[5] = -1;
  6083  000A84  6806               	setf	(_arrayShowUsers+5)^0,c
  6084                           
  6085                           ;Usuaris.c: 154:     arrayShowUsers[6] = -1;
  6086  000A86  6807               	setf	(_arrayShowUsers+6)^0,c
  6087                           
  6088                           ;Usuaris.c: 155:     arrayShowUsers[7] = -1;
  6089  000A88  6808               	setf	(_arrayShowUsers+7)^0,c
  6090                           
  6091                           ;Usuaris.c: 156:     i = 1;
  6092  000A8A  0E01               	movlw	1
  6093  000A8C  6E2A               	movwf	_i^0,c
  6094                           
  6095                           ;Usuaris.c: 157:     if(numUsuaris < 7) {
  6096  000A8E  0E07               	movlw	7
  6097  000A90  602D               	cpfslt	_numUsuaris^0,c
  6098  000A92  D002               	goto	l769
  6099  000A94                     u6260:
  6100                           
  6101                           ;Usuaris.c: 158:       j = 0;
  6102  000A94  6A29               	clrf	_j^0,c
  6103                           
  6104                           ;Usuaris.c: 159:     }
  6105  000A96  D002               	goto	l5853
  6106  000A98                     l769:
  6107                           
  6108                           ;Usuaris.c: 161:       j = indexNextUserStruct;
  6109  000A98  C02B  F029         	movff	_indexNextUserStruct,_j
  6110  000A9C                     l5853:
  6111                           
  6112                           ;Usuaris.c: 163:     state = 5;
  6113  000A9C  0E05               	movlw	5
  6114  000A9E  6E27               	movwf	UmotorUsers@state^0,c
  6115                           
  6116                           ;Usuaris.c: 164:    }
  6117  000AA0  0C05               	retlw	5
  6118  000AA2                     l768:
  6119  000AA2  A677               	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6120  000AA4  0012               	return	
  6121                           
  6122                           ;Usuaris.c: 166:     do_updateScore = 0;
  6123  000AA6  9677               	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6124  000AA8                     l5857:
  6125                           
  6126                           ;Usuaris.c: 167:     state = 6;
  6127  000AA8  0E06               	movlw	6
  6128  000AAA  6E27               	movwf	UmotorUsers@state^0,c
  6129  000AAC  0C06               	retlw	6
  6130  000AAE                     l5859:
  6131                           
  6132                           ;Usuaris.c: 171:    if (i < numUsuaris) {
  6133  000AAE  502D               	movf	_numUsuaris^0,w,c
  6134  000AB0  5C2A               	subwf	_i^0,w,c
  6135  000AB2  E212               	bc	l5869
  6136                           
  6137                           ;Usuaris.c: 172:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6138  000AB4  0EAB               	movlw	low _tmpUsername
  6139  000AB6  6E4A               	movwf	compareStrings@a^0,c
  6140  000AB8  502A               	movf	_i^0,w,c
  6141  000ABA  0D12               	mullw	18
  6142  000ABC  0E00               	movlw	low _usuaris
  6143  000ABE  24F3               	addwf	243,w,c
  6144  000AC0  6E4B               	movwf	compareStrings@b^0,c
  6145  000AC2  0E01               	movlw	high _usuaris
  6146  000AC4  20F4               	addwfc	prodh,w,c
  6147  000AC6  6E4C               	movwf	(compareStrings@b+1)^0,c
  6148  000AC8  EC6D  F00C         	call	_compareStrings	;wreg free
  6149  000ACC  0900               	iorlw	0
  6150  000ACE  E102               	bnz	l5865
  6151                           
  6152                           ;Usuaris.c: 173:      usuariLoguejat = i;
  6153  000AD0  C02A  F066         	movff	_i,_usuariLoguejat
  6154  000AD4                     l5865:
  6155                           
  6156                           ;Usuaris.c: 176:     i++;
  6157  000AD4  2A2A               	incf	_i^0,f,c
  6158  000AD6  D7C6               	goto	l5841
  6159  000AD8                     l5869:
  6160  000AD8  502D               	movf	_numUsuaris^0,w,c
  6161  000ADA  182A               	xorwf	_i^0,w,c
  6162  000ADC  A4D8               	btfss	status,2,c
  6163  000ADE  0012               	return	
  6164                           
  6165                           ;Usuaris.c: 180:     do_check_exists = 0;
  6166  000AE0  9C77               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6167                           
  6168                           ;Usuaris.c: 181:     state = 0;
  6169  000AE2  6A27               	clrf	UmotorUsers@state^0,c
  6170  000AE4  0012               	return	
  6171  000AE6                     l5873:
  6172                           
  6173                           ;Usuaris.c: 185:    if (i != 8) {
  6174  000AE6  0E08               	movlw	8
  6175  000AE8  182A               	xorwf	_i^0,w,c
  6176  000AEA  E00D               	bz	l5885
  6177                           
  6178                           ;Usuaris.c: 186:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  6179  000AEC  C02C  F04A         	movff	_indexNextUser,escriureCharEEPROM@pos
  6180  000AF0  502A               	movf	_i^0,w,c
  6181  000AF2  0FAB               	addlw	low _tmpUsername
  6182  000AF4  D8E6               	call	PL84	;call to abstracted procedure
  6183  000AF6  EC3F  F00D         	call	_escriureCharEEPROM
  6184  000AFA  2A2C               	incf	_indexNextUser^0,f,c
  6185                           
  6186                           ;Usuaris.c: 187:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6187  000AFC  502A               	movf	_i^0,w,c
  6188  000AFE  0FAB               	addlw	low _tmpUsername
  6189  000B00  D8D7               	call	PL24	;call to abstracted procedure
  6190                           
  6191                           ;Usuaris.c: 188:     i++;
  6192  000B02  D8BC               	call	PL14	;call to abstracted procedure
  6193  000B04  D7B4               	goto	u6240
  6194  000B06                     l5885:
  6195  000B06  0E08               	movlw	8
  6196  000B08  182A               	xorwf	_i^0,w,c
  6197  000B0A  A4D8               	btfss	status,2,c
  6198  000B0C  0012               	return	
  6199                           
  6200                           ;Usuaris.c: 192:     i = 0;
  6201  000B0E  6A2A               	clrf	_i^0,c
  6202  000B10                     l5889:
  6203                           
  6204                           ;Usuaris.c: 193:     state = 3;
  6205  000B10  0E03               	movlw	3
  6206  000B12  6E27               	movwf	UmotorUsers@state^0,c
  6207  000B14  0C03               	retlw	3
  6208  000B16                     l5891:
  6209                           
  6210                           ;Usuaris.c: 197:    if (i != 8) {
  6211  000B16  0E08               	movlw	8
  6212  000B18  182A               	xorwf	_i^0,w,c
  6213  000B1A  E011               	bz	l5903
  6214                           
  6215                           ;Usuaris.c: 198:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  6216  000B1C  C02C  F04A         	movff	_indexNextUser,escriureCharEEPROM@pos
  6217  000B20  502A               	movf	_i^0,w,c
  6218  000B22  0FA2               	addlw	low _tmpPassword
  6219  000B24  D8CE               	call	PL84	;call to abstracted procedure
  6220  000B26  EC3F  F00D         	call	_escriureCharEEPROM
  6221  000B2A  2A2C               	incf	_indexNextUser^0,f,c
  6222                           
  6223                           ;Usuaris.c: 199:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6224  000B2C  502A               	movf	_i^0,w,c
  6225  000B2E  0FA2               	addlw	low _tmpPassword
  6226  000B30  D8BF               	call	PL24	;call to abstracted procedure
  6227  000B32  0E09               	movlw	9
  6228  000B34  264F               	addwf	??_UmotorUsers^0,f,c
  6229  000B36  0E00               	movlw	0
  6230  000B38  2250               	addwfc	(??_UmotorUsers+1)^0,f,c
  6231                           
  6232                           ;Usuaris.c: 200:     i++;
  6233  000B3A  D8A0               	call	PL14	;call to abstracted procedure
  6234  000B3C  D7E9               	goto	l5889
  6235  000B3E                     l5903:
  6236  000B3E  0E08               	movlw	8
  6237  000B40  182A               	xorwf	_i^0,w,c
  6238  000B42  A4D8               	btfss	status,2,c
  6239  000B44  0012               	return	
  6240                           
  6241                           ;Usuaris.c: 204:     do_register = 0;
  6242  000B46  9A77               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6243                           
  6244                           ;Usuaris.c: 205:     indexNextUser++;
  6245  000B48  2A2C               	incf	_indexNextUser^0,f,c
  6246                           
  6247                           ;Usuaris.c: 206:     if(indexNextUser == 159) indexNextUser = 16;
  6248  000B4A  0E9F               	movlw	159
  6249  000B4C  182C               	xorwf	_indexNextUser^0,w,c
  6250  000B4E  E102               	bnz	l5913
  6251  000B50  0E10               	movlw	16
  6252  000B52  6E2C               	movwf	_indexNextUser^0,c
  6253  000B54                     l5913:
  6254                           
  6255                           ;Usuaris.c: 207:     indexNextUserStruct++;
  6256  000B54  2A2B               	incf	_indexNextUserStruct^0,f,c
  6257                           
  6258                           ;Usuaris.c: 208:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6259  000B56  0E08               	movlw	8
  6260  000B58  182B               	xorwf	_indexNextUserStruct^0,w,c
  6261  000B5A  E101               	bnz	l5919
  6262  000B5C  6A2B               	clrf	_indexNextUserStruct^0,c
  6263  000B5E                     l5919:
  6264                           
  6265                           ;Usuaris.c: 209:     if(numUsuaris != 8) numUsuaris++;
  6266  000B5E  0E08               	movlw	8
  6267  000B60  182D               	xorwf	_numUsuaris^0,w,c
  6268  000B62  E001               	bz	l5923
  6269  000B64  2A2D               	incf	_numUsuaris^0,f,c
  6270  000B66                     l5923:
  6271                           
  6272                           ;Usuaris.c: 210:     state = 0;
  6273  000B66  6A27               	clrf	UmotorUsers@state^0,c
  6274  000B68  0012               	return	
  6275  000B6A                     l5925:
  6276                           
  6277                           ;Usuaris.c: 214:    if (i < numUsuaris) {
  6278  000B6A  502D               	movf	_numUsuaris^0,w,c
  6279  000B6C  5C2A               	subwf	_i^0,w,c
  6280  000B6E  E217               	bc	l5941
  6281                           
  6282                           ;Usuaris.c: 215:     if(j != usuariLoguejat){
  6283  000B70  C066  F04F         	movff	_usuariLoguejat,??_UmotorUsers
  6284  000B74  6A50               	clrf	(??_UmotorUsers+1)^0,c
  6285  000B76  BE4F               	btfsc	??_UmotorUsers^0,7,c
  6286  000B78  0650               	decf	(??_UmotorUsers+1)^0,f,c
  6287  000B7A  5029               	movf	_j^0,w,c
  6288  000B7C  184F               	xorwf	??_UmotorUsers^0,w,c
  6289  000B7E  1050               	iorwf	(??_UmotorUsers+1)^0,w,c
  6290  000B80  E008               	bz	l5933
  6291                           
  6292                           ;Usuaris.c: 216:       arrayShowUsers[i] = j;
  6293  000B82  502A               	movf	_i^0,w,c
  6294  000B84  0F01               	addlw	low _arrayShowUsers
  6295  000B86  6ED9               	movwf	fsr2l,c
  6296  000B88  6ADA               	clrf	fsr2h,c
  6297  000B8A  C029  FFDF         	movff	_j,indf2
  6298                           
  6299                           ;Usuaris.c: 217:      i++;
  6300  000B8E  2A2A               	incf	_i^0,f,c
  6301                           
  6302                           ;Usuaris.c: 218:     }else{
  6303  000B90  D001               	goto	l793
  6304  000B92                     l5933:
  6305                           
  6306                           ;Usuaris.c: 219:       j++;
  6307  000B92  2A29               	incf	_j^0,f,c
  6308  000B94                     l793:
  6309                           
  6310                           ;Usuaris.c: 221:     j++;
  6311  000B94  2A29               	incf	_j^0,f,c
  6312                           
  6313                           ;Usuaris.c: 222:     if(j > 7) j=0;
  6314  000B96  0E07               	movlw	7
  6315  000B98  6429               	cpfsgt	_j^0,c
  6316  000B9A  D780               	goto	l5853
  6317  000B9C  D77B               	goto	u6260
  6318  000B9E                     l5941:
  6319  000B9E  502D               	movf	_numUsuaris^0,w,c
  6320  000BA0  182A               	xorwf	_i^0,w,c
  6321  000BA2  A4D8               	btfss	status,2,c
  6322  000BA4  0012               	return	
  6323                           
  6324                           ;Usuaris.c: 226:     do_showUsers = 0;
  6325  000BA6  9877               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6326                           
  6327                           ;Usuaris.c: 227:     state = 0;
  6328  000BA8  6A27               	clrf	UmotorUsers@state^0,c
  6329  000BAA  0012               	return	
  6330  000BAC                     l5945:
  6331                           
  6332                           ;Usuaris.c: 231:    if (i < 5 && puntuacions[i].indexStruct != -1) {
  6333  000BAC  0E05               	movlw	5
  6334  000BAE  602A               	cpfslt	_i^0,c
  6335  000BB0  D006               	goto	l5953
  6336  000BB2  502A               	movf	_i^0,w,c
  6337  000BB4  D877               	call	PL18	;call to abstracted procedure
  6338  000BB6  28DE               	incf	postinc2,w,c
  6339  000BB8  E002               	bz	l5953
  6340                           
  6341                           ;Usuaris.c: 232:     i++;
  6342  000BBA  2A2A               	incf	_i^0,f,c
  6343  000BBC  D775               	goto	l5857
  6344  000BBE                     l5953:
  6345  000BBE  0E05               	movlw	5
  6346  000BC0  602A               	cpfslt	_i^0,c
  6347  000BC2  D007               	goto	l5959
  6348  000BC4  502A               	movf	_i^0,w,c
  6349  000BC6  D86E               	call	PL18	;call to abstracted procedure
  6350  000BC8  28DE               	incf	postinc2,w,c
  6351  000BCA  E103               	bnz	l5959
  6352  000BCC                     u6450:
  6353                           
  6354                           ;Usuaris.c: 236:     state = 7;
  6355  000BCC  0E07               	movlw	7
  6356  000BCE  6E27               	movwf	UmotorUsers@state^0,c
  6357                           
  6358                           ;Usuaris.c: 237:    }
  6359  000BD0  0C07               	retlw	7
  6360  000BD2                     l5959:
  6361  000BD2  0E04               	movlw	4
  6362  000BD4  642A               	cpfsgt	_i^0,c
  6363  000BD6  0C04               	retlw	4
  6364                           
  6365                           ;Usuaris.c: 239:     i = 0;
  6366  000BD8  6A2A               	clrf	_i^0,c
  6367  000BDA                     l5963:
  6368                           
  6369                           ;Usuaris.c: 240:     state = 8;
  6370  000BDA  0E08               	movlw	8
  6371  000BDC  6E27               	movwf	UmotorUsers@state^0,c
  6372  000BDE  0C08               	retlw	8
  6373  000BE0                     l5965:
  6374                           
  6375                           ;Usuaris.c: 244:    puntuacions[i].score = scoreUsr;
  6376  000BE0  502A               	movf	_i^0,w,c
  6377  000BE2  D85A               	call	PL16	;call to abstracted procedure
  6378  000BE4  C028  FFDF         	movff	_scoreUsr,indf2
  6379                           
  6380                           ;Usuaris.c: 245:    puntuacions[i].indexStruct = usuariLoguejat;
  6381  000BE8  502A               	movf	_i^0,w,c
  6382  000BEA  D85C               	call	PL18	;call to abstracted procedure
  6383  000BEC  C066  FFDF         	movff	_usuariLoguejat,indf2
  6384                           
  6385                           ;Usuaris.c: 246:    i = i+i;
  6386  000BF0  0E02               	movlw	2
  6387  000BF2  022A               	mulwf	_i^0,c
  6388  000BF4  50F3               	movf	prodl,w,c
  6389  000BF6  6E2A               	movwf	_i^0,c
  6390                           
  6391                           ;Usuaris.c: 247:    escriureCharEEPROM(usuariLoguejat,200+i);
  6392  000BF8  502A               	movf	_i^0,w,c
  6393  000BFA  0FC8               	addlw	200
  6394  000BFC  6E4A               	movwf	escriureCharEEPROM@pos^0,c
  6395  000BFE  5066               	movf	_usuariLoguejat^0,w,c
  6396  000C00  EC3F  F00D         	call	_escriureCharEEPROM
  6397                           
  6398                           ;Usuaris.c: 248:    i++;
  6399  000C04  2A2A               	incf	_i^0,f,c
  6400                           
  6401                           ;Usuaris.c: 249:    escriureCharEEPROM(scoreUsr,200+i);
  6402  000C06  502A               	movf	_i^0,w,c
  6403  000C08  0FC8               	addlw	200
  6404  000C0A  6E4A               	movwf	escriureCharEEPROM@pos^0,c
  6405  000C0C  5028               	movf	_scoreUsr^0,w,c
  6406  000C0E  EC3F  F00D         	call	_escriureCharEEPROM
  6407  000C12  D7A9               	goto	l5923
  6408  000C14                     l5977:
  6409                           
  6410                           ;Usuaris.c: 253:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  6411  000C14  502A               	movf	_i^0,w,c
  6412  000C16  D840               	call	PL16	;call to abstracted procedure
  6413  000C18  5028               	movf	_scoreUsr^0,w,c
  6414  000C1A  5CDE               	subwf	postinc2,w,c
  6415  000C1C  E305               	bnc	l5985
  6416  000C1E  0E05               	movlw	5
  6417  000C20  602A               	cpfslt	_i^0,c
  6418  000C22  D002               	goto	l5985
  6419                           
  6420                           ;Usuaris.c: 254:     i++;
  6421  000C24  2A2A               	incf	_i^0,f,c
  6422  000C26  D7D9               	goto	l5963
  6423  000C28                     l5985:
  6424  000C28  0E04               	movlw	4
  6425  000C2A  642A               	cpfsgt	_i^0,c
  6426  000C2C  D001               	goto	l5989
  6427  000C2E  D79B               	goto	l5923
  6428  000C30                     l5989:
  6429  000C30  502A               	movf	_i^0,w,c
  6430  000C32  D832               	call	PL16	;call to abstracted procedure
  6431  000C34  5028               	movf	_scoreUsr^0,w,c
  6432  000C36  5CDE               	subwf	postinc2,w,c
  6433  000C38  B0D8               	btfsc	status,0,c
  6434  000C3A  0012               	return	
  6435  000C3C  0E05               	movlw	5
  6436  000C3E  602A               	cpfslt	_i^0,c
  6437  000C40  0C05               	retlw	5
  6438  000C42  D7C4               	goto	u6450
  6439  000C44                     l5997:
  6440  000C44  5027               	movf	UmotorUsers@state^0,w,c
  6441  000C46  6E4F               	movwf	??_UmotorUsers^0,c
  6442  000C48  6A50               	clrf	(??_UmotorUsers+1)^0,c
  6443                           
  6444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6445                           ; Switch size 1, requested type "space"
  6446                           ; Number of cases is 1, Range of values is 0 to 0
  6447                           ; switch strategies available:
  6448                           ; Name         Instructions Cycles
  6449                           ; simple_byte            4     3 (average)
  6450                           ;	Chosen strategy is simple_byte
  6451  000C4A  5050               	movf	(??_UmotorUsers+1)^0,w,c
  6452  000C4C  A4D8               	btfss	status,2,c
  6453  000C4E  0012               	return	
  6454                           
  6455                           ; Switch size 1, requested type "space"
  6456                           ; Number of cases is 8, Range of values is 0 to 8
  6457                           ; switch strategies available:
  6458                           ; Name         Instructions Cycles
  6459                           ; simple_byte           25    13 (average)
  6460                           ;	Chosen strategy is simple_byte
  6461  000C50  504F               	movf	??_UmotorUsers^0,w,c
  6462  000C52  E101 D6FB          	bz	l761
  6463  000C56  0A01               	xorlw	1	; case 1
  6464  000C58  E101 D729          	bz	l5859
  6465  000C5C  0A03               	xorlw	3	; case 2
  6466  000C5E  E101 D742          	bz	l5873
  6467  000C62  0A01               	xorlw	1	; case 3
  6468  000C64  E101 D757          	bz	l5891
  6469  000C68  0A06               	xorlw	6	; case 5
  6470  000C6A  E101 D77E          	bz	l5925
  6471  000C6E  0A03               	xorlw	3	; case 6
  6472  000C70  E09D               	bz	l5945
  6473  000C72  0A01               	xorlw	1	; case 7
  6474  000C74  E0B5               	bz	l5965
  6475  000C76  0A0F               	xorlw	15	; case 8
  6476  000C78  E0CD               	bz	l5977
  6477  000C7A  0012               	return		;funcret
  6478  000C7C                     __end_of_UmotorUsers:
  6479                           	callstack 0
  6480  000C7C                     PL14:
  6481                           	callstack 27
  6482  000C7C  50F3               	movf	243,w,c
  6483  000C7E  264F               	addwf	??_UmotorUsers^0,f,c
  6484  000C80  50F4               	movf	244,w,c
  6485  000C82  2250               	addwfc	(??_UmotorUsers+1)^0,f,c
  6486  000C84  502A               	movf	_i^0,w,c
  6487  000C86  244F               	addwf	??_UmotorUsers^0,w,c
  6488  000C88  6EE1               	movwf	fsr1l,c
  6489  000C8A  0E00               	movlw	0
  6490  000C8C  2050               	addwfc	(??_UmotorUsers+1)^0,w,c
  6491  000C8E  6EE2               	movwf	fsr1h,c
  6492  000C90  CFDF FFE7          	movff	indf2,indf1
  6493  000C94  2A2A               	incf	_i^0,f,c
  6494  000C96  0012               	return	
  6495  000C98                     __end_ofPL14:
  6496                           	callstack 0
  6497  000C98                     PL16:
  6498                           	callstack 27
  6499  000C98  0D02               	mullw	2
  6500  000C9A  50F3               	movf	243,w,c
  6501  000C9C  0F99               	addlw	low (_puntuacions+1)
  6502  000C9E  6ED9               	movwf	fsr2l,c
  6503  000CA0  6ADA               	clrf	fsr2h,c
  6504  000CA2  0012               	return	
  6505  000CA4                     __end_ofPL16:
  6506                           	callstack 0
  6507  000CA4                     PL18:
  6508                           	callstack 27
  6509  000CA4  0D02               	mullw	2
  6510  000CA6  50F3               	movf	243,w,c
  6511  000CA8  0F98               	addlw	low _puntuacions
  6512  000CAA  6ED9               	movwf	fsr2l,c
  6513  000CAC  6ADA               	clrf	fsr2h,c
  6514  000CAE  0012               	return	
  6515  000CB0                     __end_ofPL18:
  6516                           	callstack 0
  6517  000CB0                     PL24:
  6518                           	callstack 27
  6519  000CB0  6ED9               	movwf	fsr2l,c
  6520  000CB2  6ADA               	clrf	fsr2h,c
  6521  000CB4  502B               	movf	_indexNextUserStruct^0,w,c
  6522  000CB6  0D12               	mullw	18
  6523  000CB8  0E00               	movlw	low _usuaris
  6524  000CBA  6E4F               	movwf	??_UmotorUsers^0,c
  6525  000CBC  0E01               	movlw	high _usuaris
  6526  000CBE  6E50               	movwf	(??_UmotorUsers+1)^0,c
  6527  000CC0  0012               	return	
  6528  000CC2                     __end_ofPL24:
  6529                           	callstack 0
  6530  000CC2                     PL84:
  6531                           	callstack 27
  6532  000CC2  6ED9               	movwf	fsr2l,c
  6533  000CC4  6ADA               	clrf	fsr2h,c
  6534  000CC6  50DF               	movf	indf2,w,c
  6535  000CC8  0012               	return	
  6536  000CCA                     __end_ofPL84:
  6537                           	callstack 0
  6538                           
  6539 ;; *************** function _escriureCharEEPROM *****************
  6540 ;; Defined at:
  6541 ;;		line 65 in file "Usuaris.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  c               1    wreg     unsigned char 
  6544 ;;  pos             1    5[COMRAM] unsigned char 
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  c               1    6[COMRAM] unsigned char 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      void 
  6549 ;; Registers used:
  6550 ;;		wreg, status,2
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1
  6556 ;;      Params:         1       0       0
  6557 ;;      Locals:         1       0       0
  6558 ;;      Temps:          0       0       0
  6559 ;;      Totals:         2       0       0
  6560 ;;Total ram usage:        2 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; Hardware stack levels required when called: 2
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_UmotorUsers
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text55
  6571  001A7E                     __ptext55:
  6572                           	callstack 0
  6573  001A7E                     _escriureCharEEPROM:
  6574                           	callstack 27
  6575                           
  6576                           ;incstack = 0
  6577                           ;escriureCharEEPROM@c stored from wreg
  6578  001A7E  6E4B               	movwf	escriureCharEEPROM@c^0,c
  6579                           
  6580                           ;Usuaris.c: 66:     EEADR = pos;
  6581  001A80  C04A  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  6582                           
  6583                           ;Usuaris.c: 67:     EEDATA = c;
  6584  001A84  C04B  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  6585                           
  6586                           ;Usuaris.c: 68:     EECON1bits.EEPGD = 0;
  6587  001A88  9EA6               	bcf	166,7,c	;volsfr
  6588                           
  6589                           ;Usuaris.c: 69:     EECON1bits.CFGS = 0;
  6590  001A8A  9CA6               	bcf	166,6,c	;volsfr
  6591                           
  6592                           ;Usuaris.c: 70:     EECON1bits.WREN = 1;
  6593  001A8C  84A6               	bsf	166,2,c	;volsfr
  6594                           
  6595                           ;Usuaris.c: 71:     INTCONbits.GIE = 0;
  6596  001A8E  9EF2               	bcf	242,7,c	;volatile
  6597                           
  6598                           ;Usuaris.c: 72:     EECON2 = 85;
  6599  001A90  0E55               	movlw	85
  6600  001A92  6EA7               	movwf	167,c	;volsfr
  6601                           
  6602                           ;Usuaris.c: 73:     EECON2 = 170;
  6603  001A94  0EAA               	movlw	170
  6604  001A96  6EA7               	movwf	167,c	;volsfr
  6605                           
  6606                           ;Usuaris.c: 74:     EECON1bits.WR = 1;
  6607  001A98  82A6               	bsf	166,1,c	;volsfr
  6608  001A9A                     l720:
  6609  001A9A  B2A6               	btfsc	166,1,c	;volsfr
  6610  001A9C  D7FE               	goto	l720
  6611                           
  6612                           ;Usuaris.c: 76:     INTCONbits.GIE = 1;
  6613  001A9E  8EF2               	bsf	242,7,c	;volatile
  6614                           
  6615                           ;Usuaris.c: 77:     EECON1bits.WREN = 0;
  6616  001AA0  94A6               	bcf	166,2,c	;volsfr
  6617  001AA2  0012               	return		;funcret
  6618  001AA4                     __end_of_escriureCharEEPROM:
  6619                           	callstack 0
  6620                           
  6621 ;; *************** function _compareStrings *****************
  6622 ;; Defined at:
  6623 ;;		line 115 in file "Usuaris.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;  a               1    5[COMRAM] PTR const unsigned char 
  6626 ;;		 -> tmpUsername(9), 
  6627 ;;  b               2    6[COMRAM] PTR const unsigned char 
  6628 ;;		 -> usuaris.username(9), usuaris(144), 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;		None
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      unsigned char 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1
  6640 ;;      Params:         3       0       0
  6641 ;;      Locals:         0       0       0
  6642 ;;      Temps:          2       0       0
  6643 ;;      Totals:         5       0       0
  6644 ;;Total ram usage:        5 bytes
  6645 ;; Hardware stack levels used: 1
  6646 ;; Hardware stack levels required when called: 2
  6647 ;; This function calls:
  6648 ;;		Nothing
  6649 ;; This function is called by:
  6650 ;;		_UmotorUsers
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text56
  6655  0018DA                     __ptext56:
  6656                           	callstack 0
  6657  0018DA                     _compareStrings:
  6658                           	callstack 27
  6659                           
  6660                           ;Usuaris.c: 116:     while (*a){
  6661                           
  6662                           ;incstack = 0
  6663  0018DA  D00A               	goto	l4441
  6664  0018DC                     l4435:
  6665                           
  6666                           ;Usuaris.c: 117:         if (*a != *b)break;
  6667  0018DC  D813               	call	PL48	;call to abstracted procedure
  6668  0018DE  504A               	movf	compareStrings@a^0,w,c
  6669  0018E0  6EE1               	movwf	fsr1l,c
  6670  0018E2  6AE2               	clrf	fsr1h,c
  6671  0018E4  50DE               	movf	postinc2,w,c
  6672  0018E6  18E6               	xorwf	postinc1,w,c
  6673  0018E8  E105               	bnz	u3850
  6674                           
  6675                           ;Usuaris.c: 118:         a++;
  6676  0018EA  2A4A               	incf	compareStrings@a^0,f,c
  6677                           
  6678                           ;Usuaris.c: 119:         b++;
  6679  0018EC  4A4B               	infsnz	compareStrings@b^0,f,c
  6680  0018EE  2A4C               	incf	(compareStrings@b+1)^0,f,c
  6681  0018F0                     l4441:
  6682                           
  6683                           ;Usuaris.c: 116:     while (*a){
  6684  0018F0  D80E               	call	PL72	;call to abstracted procedure
  6685  0018F2  E1F4               	bnz	l4435
  6686  0018F4                     u3850:
  6687                           
  6688                           ;Usuaris.c: 121:     return *(const unsigned char*)a - *(const unsigned char*)b;
  6689  0018F4  D807               	call	PL48	;call to abstracted procedure
  6690  0018F6  50DF               	movf	indf2,w,c
  6691  0018F8  6E4D               	movwf	??_compareStrings^0,c
  6692  0018FA  D809               	call	PL72	;call to abstracted procedure
  6693  0018FC  6E4E               	movwf	(??_compareStrings+1)^0,c
  6694  0018FE  504D               	movf	??_compareStrings^0,w,c
  6695  001900  5C4E               	subwf	(??_compareStrings+1)^0,w,c
  6696  001902  0012               	return		;funcret
  6697  001904                     __end_of_compareStrings:
  6698                           	callstack 0
  6699  001904                     PL48:
  6700                           	callstack 27
  6701  001904  C04B  FFD9         	movff	compareStrings@b,fsr2l
  6702  001908  C04C  FFDA         	movff	compareStrings@b+1,fsr2h
  6703  00190C  0012               	return	
  6704  00190E                     __end_ofPL48:
  6705                           	callstack 0
  6706  00190E                     PL72:
  6707                           	callstack 27
  6708  00190E  504A               	movf	compareStrings@a^0,w,c
  6709  001910  6ED9               	movwf	fsr2l,c
  6710  001912  6ADA               	clrf	fsr2h,c
  6711  001914  50DF               	movf	indf2,w,c
  6712  001916  0012               	return	
  6713  001918                     __end_ofPL72:
  6714                           	callstack 0
  6715                           
  6716 ;; *************** function _Uinit *****************
  6717 ;; Defined at:
  6718 ;;		line 86 in file "Usuaris.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;		None
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  k               1   11[COMRAM] unsigned char 
  6723 ;;  i               1   12[COMRAM] unsigned char 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  1    wreg      void 
  6726 ;; Registers used:
  6727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1
  6733 ;;      Params:         0       0       0
  6734 ;;      Locals:         2       0       0
  6735 ;;      Temps:          2       0       0
  6736 ;;      Totals:         4       0       0
  6737 ;;Total ram usage:        4 bytes
  6738 ;; Hardware stack levels used: 1
  6739 ;; Hardware stack levels required when called: 3
  6740 ;; This function calls:
  6741 ;;		___lbdiv
  6742 ;;		_llegirCharEEPROM
  6743 ;; This function is called by:
  6744 ;;		_main
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text57
  6749  0012B6                     __ptext57:
  6750                           	callstack 0
  6751  0012B6                     _Uinit:
  6752                           	callstack 27
  6753                           
  6754                           ;Usuaris.c: 90:     numUsuaris = llegirCharEEPROM(i);
  6755                           
  6756                           ;incstack = 0
  6757  0012B6  502A               	movf	_i^0,w,c
  6758  0012B8  EC1E  F00E         	call	_llegirCharEEPROM
  6759  0012BC  6E2D               	movwf	_numUsuaris^0,c
  6760                           
  6761                           ;Usuaris.c: 91:     if(numUsuaris > 8) numUsuaris = 0;
  6762  0012BE  0E08               	movlw	8
  6763  0012C0  642D               	cpfsgt	_numUsuaris^0,c
  6764  0012C2  D001               	goto	l4751
  6765  0012C4  6A2D               	clrf	_numUsuaris^0,c
  6766  0012C6                     l4751:
  6767                           
  6768                           ;Usuaris.c: 92:     i++;
  6769  0012C6  2A2A               	incf	_i^0,f,c
  6770                           
  6771                           ;Usuaris.c: 93:     indexNextUser = llegirCharEEPROM(i);
  6772  0012C8  502A               	movf	_i^0,w,c
  6773  0012CA  EC1E  F00E         	call	_llegirCharEEPROM
  6774  0012CE  6E2C               	movwf	_indexNextUser^0,c
  6775                           
  6776                           ;Usuaris.c: 94:     if(indexNextUser > 8) indexNextUser = 0;
  6777  0012D0  0E08               	movlw	8
  6778  0012D2  642C               	cpfsgt	_indexNextUser^0,c
  6779  0012D4  D001               	goto	l4759
  6780  0012D6  6A2C               	clrf	_indexNextUser^0,c
  6781  0012D8                     l4759:
  6782                           
  6783                           ;Usuaris.c: 95:     indexNextUserStruct = indexNextUser/18;
  6784  0012D8  0E12               	movlw	18
  6785  0012DA  6E4A               	movwf	___lbdiv@divisor^0,c
  6786  0012DC  502C               	movf	_indexNextUser^0,w,c
  6787  0012DE  ECE1  F00C         	call	___lbdiv
  6788  0012E2  6E2B               	movwf	_indexNextUserStruct^0,c
  6789                           
  6790                           ;Usuaris.c: 96:     i++;
  6791  0012E4  2A2A               	incf	_i^0,f,c
  6792                           
  6793                           ;Usuaris.c: 97:     for(;j<numUsuaris;j++){
  6794  0012E6  D016               	goto	l4777
  6795  0012E8                     l732:
  6796                           
  6797                           ;Usuaris.c: 98:         for(unsigned char k = 0; k<8; k++){
  6798  0012E8  6A50               	clrf	Uinit@k^0,c
  6799  0012EA                     l4767:
  6800                           
  6801                           ;Usuaris.c: 99:             usuaris[j].username[k] = llegirCharEEPROM(i);
  6802  0012EA  D83F               	call	PL42	;call to abstracted procedure
  6803  0012EC  D832               	call	PL20	;call to abstracted procedure
  6804  0012EE  EC1E  F00E         	call	_llegirCharEEPROM
  6805  0012F2  6EDF               	movwf	indf2,c
  6806                           
  6807                           ;Usuaris.c: 100:             i++;
  6808  0012F4  2A2A               	incf	_i^0,f,c
  6809                           
  6810                           ;Usuaris.c: 101:             usuaris[j].password[k] = llegirCharEEPROM(i);
  6811  0012F6  D839               	call	PL42	;call to abstracted procedure
  6812  0012F8  0E09               	movlw	9
  6813  0012FA  264E               	addwf	??_Uinit^0,f,c
  6814  0012FC  0E00               	movlw	0
  6815  0012FE  224F               	addwfc	(??_Uinit+1)^0,f,c
  6816  001300  D828               	call	PL20	;call to abstracted procedure
  6817  001302  EC1E  F00E         	call	_llegirCharEEPROM
  6818  001306  6EDF               	movwf	indf2,c
  6819                           
  6820                           ;Usuaris.c: 102:             i++;
  6821  001308  2A2A               	incf	_i^0,f,c
  6822                           
  6823                           ;Usuaris.c: 103:         }
  6824  00130A  2A50               	incf	Uinit@k^0,f,c
  6825  00130C  0E07               	movlw	7
  6826  00130E  6450               	cpfsgt	Uinit@k^0,c
  6827  001310  D7EC               	goto	l4767
  6828                           
  6829                           ;Usuaris.c: 104:     }
  6830  001312  2A29               	incf	_j^0,f,c
  6831  001314                     l4777:
  6832  001314  502D               	movf	_numUsuaris^0,w,c
  6833  001316  5C29               	subwf	_j^0,w,c
  6834  001318  E3E7               	bnc	l732
  6835                           
  6836                           ;Usuaris.c: 107:     puntuacions[0].indexStruct = -1;
  6837  00131A  0100               	movlb	0	; () banked
  6838  00131C  6998               	setf	_puntuacions& (0+255),b
  6839                           
  6840                           ;Usuaris.c: 108:     for(char i = 0; i<5; i++){
  6841  00131E  6A51               	clrf	Uinit@i^0,c
  6842  001320                     l4783:
  6843                           
  6844                           ;Usuaris.c: 109:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  6845  001320  5051               	movf	Uinit@i^0,w,c
  6846  001322  EC52  F006         	call	PL18	;call to abstracted procedure
  6847  001326  5051               	movf	Uinit@i^0,w,c
  6848  001328  0D02               	mullw	2
  6849  00132A  50F3               	movf	243,w,c
  6850  00132C  0FC8               	addlw	200
  6851  00132E  EC1E  F00E         	call	_llegirCharEEPROM
  6852  001332  6EDF               	movwf	indf2,c
  6853                           
  6854                           ;Usuaris.c: 110:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  6855  001334  5051               	movf	Uinit@i^0,w,c
  6856  001336  EC4C  F006         	call	PL16	;call to abstracted procedure
  6857  00133A  5051               	movf	Uinit@i^0,w,c
  6858  00133C  0D02               	mullw	2
  6859  00133E  50F3               	movf	243,w,c
  6860  001340  0FC9               	addlw	201
  6861  001342  EC1E  F00E         	call	_llegirCharEEPROM
  6862  001346  6EDF               	movwf	indf2,c
  6863                           
  6864                           ;Usuaris.c: 111:     }
  6865  001348  2A51               	incf	Uinit@i^0,f,c
  6866  00134A  0E04               	movlw	4
  6867  00134C  6451               	cpfsgt	Uinit@i^0,c
  6868  00134E  D7E8               	goto	l4783
  6869  001350  0C04               	retlw	4
  6870  001352                     __end_of_Uinit:
  6871                           	callstack 0
  6872  001352                     PL20:
  6873                           	callstack 27
  6874  001352  50F3               	movf	243,w,c
  6875  001354  264E               	addwf	??_Uinit^0,f,c
  6876  001356  50F4               	movf	244,w,c
  6877  001358  224F               	addwfc	(??_Uinit+1)^0,f,c
  6878  00135A  5050               	movf	Uinit@k^0,w,c
  6879  00135C  244E               	addwf	??_Uinit^0,w,c
  6880  00135E  6ED9               	movwf	fsr2l,c
  6881  001360  0E00               	movlw	0
  6882  001362  204F               	addwfc	(??_Uinit+1)^0,w,c
  6883  001364  6EDA               	movwf	fsr2h,c
  6884  001366  502A               	movf	_i^0,w,c
  6885  001368  0012               	return	
  6886  00136A                     __end_ofPL20:
  6887                           	callstack 0
  6888  00136A                     PL42:
  6889                           	callstack 27
  6890  00136A  5029               	movf	_j^0,w,c
  6891  00136C  0D12               	mullw	18
  6892  00136E  0E00               	movlw	low _usuaris
  6893  001370  6E4E               	movwf	??_Uinit^0,c
  6894  001372  0E01               	movlw	high _usuaris
  6895  001374  6E4F               	movwf	(??_Uinit+1)^0,c
  6896  001376  0012               	return	
  6897  001378                     __end_ofPL42:
  6898                           	callstack 0
  6899                           
  6900 ;; *************** function _llegirCharEEPROM *****************
  6901 ;; Defined at:
  6902 ;;		line 79 in file "Usuaris.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  pos             1    wreg     unsigned char 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  pos             1    5[COMRAM] unsigned char 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  1    wreg      unsigned char 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1
  6916 ;;      Params:         0       0       0
  6917 ;;      Locals:         1       0       0
  6918 ;;      Temps:          0       0       0
  6919 ;;      Totals:         1       0       0
  6920 ;;Total ram usage:        1 bytes
  6921 ;; Hardware stack levels used: 1
  6922 ;; Hardware stack levels required when called: 2
  6923 ;; This function calls:
  6924 ;;		Nothing
  6925 ;; This function is called by:
  6926 ;;		_Uinit
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text58
  6931  001C3C                     __ptext58:
  6932                           	callstack 0
  6933  001C3C                     _llegirCharEEPROM:
  6934                           	callstack 27
  6935                           
  6936                           ;incstack = 0
  6937                           ;llegirCharEEPROM@pos stored from wreg
  6938  001C3C  6E4A               	movwf	llegirCharEEPROM@pos^0,c
  6939                           
  6940                           ;Usuaris.c: 80:     EEADR = pos;
  6941  001C3E  C04A  FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  6942                           
  6943                           ;Usuaris.c: 81:     EECON1bits.EEPGD = 0;
  6944  001C42  9EA6               	bcf	166,7,c	;volsfr
  6945                           
  6946                           ;Usuaris.c: 82:     EECON1bits.CFGS = 0;
  6947  001C44  9CA6               	bcf	166,6,c	;volsfr
  6948                           
  6949                           ;Usuaris.c: 83:     EECON1bits.RD = 1;
  6950  001C46  80A6               	bsf	166,0,c	;volsfr
  6951                           
  6952                           ;Usuaris.c: 84:     return EEDATA;
  6953  001C48  50A8               	movf	168,w,c	;volatile
  6954  001C4A  0012               	return		;funcret
  6955  001C4C                     __end_of_llegirCharEEPROM:
  6956                           	callstack 0
  6957                           
  6958 ;; *************** function ___lbdiv *****************
  6959 ;; Defined at:
  6960 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lbdiv.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;  dividend        1    wreg     unsigned char 
  6963 ;;  divisor         1    5[COMRAM] unsigned char 
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  dividend        1    6[COMRAM] unsigned char 
  6966 ;;  quotient        1    8[COMRAM] unsigned char 
  6967 ;;  counter         1    7[COMRAM] unsigned char 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1    wreg      unsigned char 
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1
  6977 ;;      Params:         1       0       0
  6978 ;;      Locals:         3       0       0
  6979 ;;      Temps:          0       0       0
  6980 ;;      Totals:         4       0       0
  6981 ;;Total ram usage:        4 bytes
  6982 ;; Hardware stack levels used: 1
  6983 ;; Hardware stack levels required when called: 2
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		_Uinit
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text59
  6992  0019C2                     __ptext59:
  6993                           	callstack 0
  6994  0019C2                     ___lbdiv:
  6995                           	callstack 27
  6996                           
  6997                           ;incstack = 0
  6998                           ;___lbdiv@dividend stored from wreg
  6999  0019C2  6E4B               	movwf	___lbdiv@dividend^0,c
  7000  0019C4  6A4D               	clrf	___lbdiv@quotient^0,c
  7001  0019C6  504A               	movf	___lbdiv@divisor^0,w,c
  7002  0019C8  E014               	bz	l4473
  7003  0019CA  0E01               	movlw	1
  7004  0019CC  6E4C               	movwf	___lbdiv@counter^0,c
  7005  0019CE  D003               	goto	l4461
  7006  0019D0                     l4457:
  7007  0019D0  90D8               	bcf	status,0,c
  7008  0019D2  364A               	rlcf	___lbdiv@divisor^0,f,c
  7009  0019D4  2A4C               	incf	___lbdiv@counter^0,f,c
  7010  0019D6                     l4461:
  7011  0019D6  AE4A               	btfss	___lbdiv@divisor^0,7,c
  7012  0019D8  D7FB               	goto	l4457
  7013  0019DA                     u3870:
  7014  0019DA  90D8               	bcf	status,0,c
  7015  0019DC  364D               	rlcf	___lbdiv@quotient^0,f,c
  7016  0019DE  504A               	movf	___lbdiv@divisor^0,w,c
  7017  0019E0  5C4B               	subwf	___lbdiv@dividend^0,w,c
  7018  0019E2  E303               	bnc	l4469
  7019  0019E4  504A               	movf	___lbdiv@divisor^0,w,c
  7020  0019E6  5E4B               	subwf	___lbdiv@dividend^0,f,c
  7021  0019E8  804D               	bsf	___lbdiv@quotient^0,0,c
  7022  0019EA                     l4469:
  7023  0019EA  90D8               	bcf	status,0,c
  7024  0019EC  324A               	rrcf	___lbdiv@divisor^0,f,c
  7025  0019EE  2E4C               	decfsz	___lbdiv@counter^0,f,c
  7026  0019F0  D7F4               	goto	u3870
  7027  0019F2                     l4473:
  7028  0019F2  504D               	movf	___lbdiv@quotient^0,w,c
  7029  0019F4  0012               	return		;funcret
  7030  0019F6                     __end_of___lbdiv:
  7031                           	callstack 0
  7032                           
  7033 ;; *************** function _TiInitTimer *****************
  7034 ;; Defined at:
  7035 ;;		line 18 in file "TiTTimer.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;		None
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1
  7049 ;;      Params:         0       0       0
  7050 ;;      Locals:         0       0       0
  7051 ;;      Temps:          0       0       0
  7052 ;;      Totals:         0       0       0
  7053 ;;Total ram usage:        0 bytes
  7054 ;; Hardware stack levels used: 1
  7055 ;; Hardware stack levels required when called: 2
  7056 ;; This function calls:
  7057 ;;		Nothing
  7058 ;; This function is called by:
  7059 ;;		_main
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	text60
  7064  001A56                     __ptext60:
  7065                           	callstack 0
  7066  001A56                     _TiInitTimer:
  7067                           	callstack 28
  7068                           
  7069                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7070                           
  7071                           ;incstack = 0
  7072  001A56  9ED0               	bcf	208,7,c	;volatile
  7073                           
  7074                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7075  001A58  8EF2               	bsf	242,7,c	;volatile
  7076                           
  7077                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7078  001A5A  8CF2               	bsf	242,6,c	;volatile
  7079                           
  7080                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7081  001A5C  8AF2               	bsf	242,5,c	;volatile
  7082                           
  7083                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7084  001A5E  94F2               	bcf	242,2,c	;volatile
  7085                           
  7086                           ;TiTTimer.c: 25:     T0CON = 136;
  7087  001A60  0E88               	movlw	136
  7088  001A62  6ED5               	movwf	213,c	;volatile
  7089                           
  7090                           ;TiTTimer.c: 27:     TMR0H = 223;
  7091                           
  7092                           ;TiTTimer.c: 28:     TMR0L = 148;
  7093  001A64  EC68  F00C         	call	PL60	;call to abstracted procedure
  7094                           
  7095                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7096  001A68  8ED5               	bsf	213,7,c	;volatile
  7097                           
  7098                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  7099  001A6A  6A34               	clrf	_counter^0,c
  7100  001A6C                     l4567:
  7101  001A6C  0E07               	movlw	7
  7102  001A6E  6434               	cpfsgt	_counter^0,c
  7103  001A70  D001               	goto	l4571
  7104  001A72  0C07               	retlw	7
  7105  001A74                     l4571:
  7106                           
  7107                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7108  001A74  EC24  F00D         	call	PL12	;call to abstracted procedure
  7109  001A78  6ADF               	clrf	indf2,c
  7110                           
  7111                           ;TiTTimer.c: 33:     }
  7112  001A7A  2A34               	incf	_counter^0,f,c
  7113  001A7C  D7F7               	goto	l4567
  7114  001A7E                     __end_of_TiInitTimer:
  7115                           	callstack 0
  7116                           
  7117 ;; *************** function _TeTeclat *****************
  7118 ;; Defined at:
  7119 ;;		line 21 in file "TeTeclat.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;		None
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1
  7133 ;;      Params:         0       0       0
  7134 ;;      Locals:         0       0       0
  7135 ;;      Temps:          4       0       0
  7136 ;;      Totals:         4       0       0
  7137 ;;Total ram usage:        4 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; Hardware stack levels required when called: 3
  7140 ;; This function calls:
  7141 ;;		_MsetNovaTecla
  7142 ;;		_SsetNovaTecla
  7143 ;;		_TiGetTics
  7144 ;;		_TiResetTics
  7145 ;; This function is called by:
  7146 ;;		_main
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text61
  7151  001092                     __ptext61:
  7152                           	callstack 0
  7153  001092                     _TeTeclat:
  7154                           	callstack 27
  7155                           
  7156                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7157                           
  7158                           ;incstack = 0
  7159  001092  A083               	btfss	131,0,c	;volatile
  7160  001094  D003               	goto	u6520
  7161  001096  6A51               	clrf	??_TeTeclat^0,c
  7162  001098  2A51               	incf	??_TeTeclat^0,f,c
  7163  00109A  D001               	goto	u6528
  7164  00109C                     u6520:
  7165  00109C  6A51               	clrf	??_TeTeclat^0,c
  7166  00109E                     u6528:
  7167  00109E  0E01               	movlw	1
  7168  0010A0  A283               	btfss	131,1,c	;volatile
  7169  0010A2  0E00               	movlw	0
  7170  0010A4  0D02               	mullw	2
  7171  0010A6  CFF3 F052          	movff	prodl,??_TeTeclat+1
  7172  0010AA  0E01               	movlw	1
  7173  0010AC  A483               	btfss	131,2,c	;volatile
  7174  0010AE  0E00               	movlw	0
  7175  0010B0  0D03               	mullw	3
  7176  0010B2  CFF3 F053          	movff	prodl,??_TeTeclat+2
  7177  0010B6  0E01               	movlw	1
  7178  0010B8  A683               	btfss	131,3,c	;volatile
  7179  0010BA  0E00               	movlw	0
  7180  0010BC  0D04               	mullw	4
  7181  0010BE  50F3               	movf	243,w,c
  7182  0010C0  2453               	addwf	(??_TeTeclat+2)^0,w,c
  7183  0010C2  2452               	addwf	(??_TeTeclat+1)^0,w,c
  7184  0010C4  2451               	addwf	??_TeTeclat^0,w,c
  7185  0010C6  6E35               	movwf	TeTeclat@files^0,c
  7186                           
  7187                           ;TeTeclat.c: 26:  switch(state) {
  7188  0010C8  D058               	goto	l6079
  7189  0010CA                     l6005:
  7190                           
  7191                           ;TeTeclat.c: 28:    if (files==0) {
  7192  0010CA  5035               	movf	TeTeclat@files^0,w,c
  7193  0010CC  E106               	bnz	l6011
  7194                           
  7195                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  7196  0010CE  888C               	bsf	140,4,c	;volatile
  7197                           
  7198                           ;TeTeclat.c: 30:     LATDbits.LD5=0;
  7199  0010D0  9A8C               	bcf	140,5,c	;volatile
  7200                           
  7201                           ;TeTeclat.c: 31:     LATDbits.LD6=0;
  7202  0010D2  9C8C               	bcf	140,6,c	;volatile
  7203                           
  7204                           ;TeTeclat.c: 32:     cols=0;
  7205  0010D4  6A36               	clrf	TeTeclat@cols^0,c
  7206  0010D6                     l6009:
  7207                           
  7208                           ;TeTeclat.c: 33:     state++;
  7209  0010D6  2A37               	incf	TeTeclat@state^0,f,c
  7210                           
  7211                           ;TeTeclat.c: 34:    }
  7212  0010D8  0012               	return	
  7213  0010DA                     l6011:
  7214  0010DA  5035               	movf	TeTeclat@files^0,w,c
  7215  0010DC  B4D8               	btfsc	status,2,c
  7216  0010DE  0012               	return	
  7217                           
  7218                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  7219  0010E0  5038               	movf	_tiTeclat^0,w,c
  7220  0010E2  ECD6  F00D         	call	_TiResetTics
  7221  0010E6                     l6015:
  7222                           
  7223                           ;TeTeclat.c: 37:     state = 3;
  7224  0010E6  0E03               	movlw	3
  7225  0010E8  6E37               	movwf	TeTeclat@state^0,c
  7226  0010EA  0C03               	retlw	3
  7227  0010EC                     l6017:
  7228                           
  7229                           ;TeTeclat.c: 41:    if (files==0) {
  7230  0010EC  5035               	movf	TeTeclat@files^0,w,c
  7231  0010EE  E106               	bnz	l6025
  7232                           
  7233                           ;TeTeclat.c: 42:     LATDbits.LD4=0;
  7234  0010F0  988C               	bcf	140,4,c	;volatile
  7235                           
  7236                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  7237  0010F2  8A8C               	bsf	140,5,c	;volatile
  7238                           
  7239                           ;TeTeclat.c: 44:     LATDbits.LD6=0;
  7240  0010F4  9C8C               	bcf	140,6,c	;volatile
  7241                           
  7242                           ;TeTeclat.c: 45:     cols=1;
  7243  0010F6  0E01               	movlw	1
  7244  0010F8  6E36               	movwf	TeTeclat@cols^0,c
  7245  0010FA  D7ED               	goto	l6009
  7246  0010FC                     l6025:
  7247  0010FC  5035               	movf	TeTeclat@files^0,w,c
  7248  0010FE  B4D8               	btfsc	status,2,c
  7249  001100  0012               	return	
  7250                           
  7251                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  7252  001102  5038               	movf	_tiTeclat^0,w,c
  7253  001104  ECD6  F00D         	call	_TiResetTics
  7254  001108  D7EE               	goto	l6015
  7255  00110A                     l6031:
  7256                           
  7257                           ;TeTeclat.c: 54:    if (files==0) {
  7258  00110A  5035               	movf	TeTeclat@files^0,w,c
  7259  00110C  E107               	bnz	l6039
  7260                           
  7261                           ;TeTeclat.c: 55:     LATDbits.LD4=0;
  7262  00110E  988C               	bcf	140,4,c	;volatile
  7263                           
  7264                           ;TeTeclat.c: 56:     LATDbits.LD5=0;
  7265  001110  9A8C               	bcf	140,5,c	;volatile
  7266                           
  7267                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  7268  001112  8C8C               	bsf	140,6,c	;volatile
  7269                           
  7270                           ;TeTeclat.c: 58:     cols=2;
  7271  001114  0E02               	movlw	2
  7272  001116  6E36               	movwf	TeTeclat@cols^0,c
  7273  001118                     l6037:
  7274                           
  7275                           ;TeTeclat.c: 59:     state = 0;
  7276  001118  6A37               	clrf	TeTeclat@state^0,c
  7277                           
  7278                           ;TeTeclat.c: 60:    }
  7279  00111A  0012               	return	
  7280  00111C                     l6039:
  7281  00111C  5035               	movf	TeTeclat@files^0,w,c
  7282  00111E  B4D8               	btfsc	status,2,c
  7283  001120  0012               	return	
  7284                           
  7285                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  7286  001122  5038               	movf	_tiTeclat^0,w,c
  7287  001124  ECD6  F00D         	call	_TiResetTics
  7288  001128  D7D6               	goto	l6009
  7289  00112A                     l6045:
  7290                           
  7291                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  7292  00112A  5038               	movf	_tiTeclat^0,w,c
  7293  00112C  EC52  F00D         	call	_TiGetTics
  7294  001130  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  7295  001132  0012               	return	
  7296  001134  D7D0               	goto	l6009
  7297  001136                     l6049:
  7298                           
  7299                           ;TeTeclat.c: 72:    if (files==0) {
  7300  001136  5035               	movf	TeTeclat@files^0,w,c
  7301  001138  E103               	bnz	l6053
  7302                           
  7303                           ;TeTeclat.c: 73:     state = 1;
  7304  00113A  0E01               	movlw	1
  7305  00113C  6E37               	movwf	TeTeclat@state^0,c
  7306                           
  7307                           ;TeTeclat.c: 74:    }
  7308  00113E  0C01               	retlw	1
  7309  001140                     l6053:
  7310  001140  5035               	movf	TeTeclat@files^0,w,c
  7311  001142  B4D8               	btfsc	status,2,c
  7312  001144  0012               	return	
  7313                           
  7314                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7315  001146  D830               	call	PL8	;call to abstracted procedure
  7316  001148  EC99  F00E         	call	_MsetNovaTecla
  7317                           
  7318                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7319  00114C  D82D               	call	PL8	;call to abstracted procedure
  7320  00114E  EC95  F00E         	call	_SsetNovaTecla
  7321  001152  D7C1               	goto	l6009
  7322  001154                     l6059:
  7323                           
  7324                           ;TeTeclat.c: 82:    if (files==0) {
  7325  001154  5035               	movf	TeTeclat@files^0,w,c
  7326  001156  A4D8               	btfss	status,2,c
  7327  001158  0012               	return	
  7328                           
  7329                           ;TeTeclat.c: 83:     TiResetTics(tiTeclat);
  7330  00115A  5038               	movf	_tiTeclat^0,w,c
  7331  00115C  ECD6  F00D         	call	_TiResetTics
  7332  001160  D7BA               	goto	l6009
  7333  001162                     l6065:
  7334                           
  7335                           ;TeTeclat.c: 88:    if (TiGetTics(tiTeclat)>=0) {
  7336  001162  5038               	movf	_tiTeclat^0,w,c
  7337  001164  EC52  F00D         	call	_TiGetTics
  7338  001168  D7E3               	goto	L3
  7339  00116A                     l6069:
  7340                           
  7341                           ;TeTeclat.c: 93:    if (files!=0) {
  7342  00116A  5035               	movf	TeTeclat@files^0,w,c
  7343  00116C  E003               	bz	l6073
  7344                           
  7345                           ;TeTeclat.c: 94:     state = 5;
  7346  00116E  0E05               	movlw	5
  7347  001170  6E37               	movwf	TeTeclat@state^0,c
  7348                           
  7349                           ;TeTeclat.c: 95:    }
  7350  001172  0C05               	retlw	5
  7351  001174                     l6073:
  7352  001174  5035               	movf	TeTeclat@files^0,w,c
  7353  001176  E0D0               	bz	l6037
  7354  001178  0012               	return	
  7355  00117A                     l6079:
  7356  00117A  5037               	movf	TeTeclat@state^0,w,c
  7357  00117C  6E51               	movwf	??_TeTeclat^0,c
  7358  00117E  6A52               	clrf	(??_TeTeclat+1)^0,c
  7359                           
  7360                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7361                           ; Switch size 1, requested type "space"
  7362                           ; Number of cases is 1, Range of values is 0 to 0
  7363                           ; switch strategies available:
  7364                           ; Name         Instructions Cycles
  7365                           ; simple_byte            4     3 (average)
  7366                           ;	Chosen strategy is simple_byte
  7367  001180  5052               	movf	(??_TeTeclat+1)^0,w,c
  7368  001182  A4D8               	btfss	status,2,c
  7369  001184  0012               	return	
  7370                           
  7371                           ; Switch size 1, requested type "space"
  7372                           ; Number of cases is 8, Range of values is 0 to 7
  7373                           ; switch strategies available:
  7374                           ; Name         Instructions Cycles
  7375                           ; simple_byte           25    13 (average)
  7376                           ;	Chosen strategy is simple_byte
  7377  001186  5051               	movf	??_TeTeclat^0,w,c
  7378  001188  E0A0               	bz	l6005
  7379  00118A  0A01               	xorlw	1	; case 1
  7380  00118C  E0AF               	bz	l6017
  7381  00118E  0A03               	xorlw	3	; case 2
  7382  001190  E0BC               	bz	l6031
  7383  001192  0A01               	xorlw	1	; case 3
  7384  001194  E0CA               	bz	l6045
  7385  001196  0A07               	xorlw	7	; case 4
  7386  001198  E0CE               	bz	l6049
  7387  00119A  0A01               	xorlw	1	; case 5
  7388  00119C  E0DB               	bz	l6059
  7389  00119E  0A03               	xorlw	3	; case 6
  7390  0011A0  E0E0               	bz	l6065
  7391  0011A2  0A01               	xorlw	1	; case 7
  7392  0011A4  E0E2               	bz	l6069
  7393  0011A6  0012               	return		;funcret
  7394  0011A8                     __end_of_TeTeclat:
  7395                           	callstack 0
  7396  0011A8                     PL8:
  7397                           	callstack 27
  7398  0011A8  0EFD               	movlw	253
  7399  0011AA  6E51               	movwf	??_TeTeclat^0,c
  7400  0011AC  6852               	setf	(??_TeTeclat+1)^0,c
  7401  0011AE  5035               	movf	TeTeclat@files^0,w,c
  7402  0011B0  0D03               	mullw	3
  7403  0011B2  0E90               	movlw	low _teclaPremuda
  7404  0011B4  6E53               	movwf	(??_TeTeclat+2)^0,c
  7405  0011B6  0E1F               	movlw	high _teclaPremuda
  7406  0011B8  6E54               	movwf	(??_TeTeclat+3)^0,c
  7407  0011BA  50F3               	movf	243,w,c
  7408  0011BC  2653               	addwf	(??_TeTeclat+2)^0,f,c
  7409  0011BE  50F4               	movf	244,w,c
  7410  0011C0  2254               	addwfc	(??_TeTeclat+3)^0,f,c
  7411  0011C2  5036               	movf	TeTeclat@cols^0,w,c
  7412  0011C4  2653               	addwf	(??_TeTeclat+2)^0,f,c
  7413  0011C6  0E00               	movlw	0
  7414  0011C8  2254               	addwfc	(??_TeTeclat+3)^0,f,c
  7415  0011CA  5051               	movf	??_TeTeclat^0,w,c
  7416  0011CC  2653               	addwf	(??_TeTeclat+2)^0,f,c
  7417  0011CE  5052               	movf	(??_TeTeclat+1)^0,w,c
  7418  0011D0  2254               	addwfc	(??_TeTeclat+3)^0,f,c
  7419  0011D2  C053  FFF6         	movff	??_TeTeclat+2,tblptrl
  7420  0011D6  C054  FFF7         	movff	??_TeTeclat+3,tblptrh
  7421  0011DA                     	if	0	;tblptru may be non-zero
  7422  0011DA                     	endif
  7423  0011DA                     	if	0	;tblptru may be non-zero
  7424  0011DA                     	endif
  7425  0011DA  0008               	tblrd		*
  7426  0011DC  50F5               	movf	tablat,w,c
  7427  0011DE  0012               	return	
  7428  0011E0                     __end_ofPL8:
  7429                           	callstack 0
  7430                           
  7431 ;; *************** function _SsetNovaTecla *****************
  7432 ;; Defined at:
  7433 ;;		line 124 in file "Ssms.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  tecla           1    wreg     unsigned char 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  tecla           1    5[COMRAM] unsigned char 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  1    wreg      void 
  7440 ;; Registers used:
  7441 ;;		wreg
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK1
  7447 ;;      Params:         0       0       0
  7448 ;;      Locals:         1       0       0
  7449 ;;      Temps:          0       0       0
  7450 ;;      Totals:         1       0       0
  7451 ;;Total ram usage:        1 bytes
  7452 ;; Hardware stack levels used: 1
  7453 ;; Hardware stack levels required when called: 2
  7454 ;; This function calls:
  7455 ;;		Nothing
  7456 ;; This function is called by:
  7457 ;;		_TeTeclat
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           	psect	text62
  7462  001D2A                     __ptext62:
  7463                           	callstack 0
  7464  001D2A                     _SsetNovaTecla:
  7465                           	callstack 27
  7466                           
  7467                           ;incstack = 0
  7468                           ;SsetNovaTecla@tecla stored from wreg
  7469  001D2A  6E4A               	movwf	SsetNovaTecla@tecla^0,c
  7470                           
  7471                           ;Ssms.c: 125:     novaTecla = tecla;
  7472  001D2C  C04A  F06B         	movff	SsetNovaTecla@tecla,_novaTecla
  7473  001D30  0012               	return		;funcret
  7474  001D32                     __end_of_SsetNovaTecla:
  7475                           	callstack 0
  7476                           
  7477 ;; *************** function _MsetNovaTecla *****************
  7478 ;; Defined at:
  7479 ;;		line 31 in file "Menu.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;  tecla           1    wreg     unsigned char 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  tecla           1    5[COMRAM] unsigned char 
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  1    wreg      void 
  7486 ;; Registers used:
  7487 ;;		wreg
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMRAM   BANK0   BANK1
  7493 ;;      Params:         0       0       0
  7494 ;;      Locals:         1       0       0
  7495 ;;      Temps:          0       0       0
  7496 ;;      Totals:         1       0       0
  7497 ;;Total ram usage:        1 bytes
  7498 ;; Hardware stack levels used: 1
  7499 ;; Hardware stack levels required when called: 2
  7500 ;; This function calls:
  7501 ;;		Nothing
  7502 ;; This function is called by:
  7503 ;;		_TeTeclat
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           	psect	text63
  7508  001D32                     __ptext63:
  7509                           	callstack 0
  7510  001D32                     _MsetNovaTecla:
  7511                           	callstack 27
  7512                           
  7513                           ;incstack = 0
  7514                           ;MsetNovaTecla@tecla stored from wreg
  7515  001D32  6E4A               	movwf	MsetNovaTecla@tecla^0,c
  7516                           
  7517                           ;Menu.c: 32:     NovaTecla = tecla;
  7518  001D34  C04A  F069         	movff	MsetNovaTecla@tecla,_NovaTecla
  7519  001D38  0012               	return		;funcret
  7520  001D3A                     __end_of_MsetNovaTecla:
  7521                           	callstack 0
  7522                           
  7523 ;; *************** function _TeInit *****************
  7524 ;; Defined at:
  7525 ;;		line 17 in file "TeTeclat.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;		None
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;		None
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1
  7539 ;;      Params:         0       0       0
  7540 ;;      Locals:         0       0       0
  7541 ;;      Temps:          0       0       0
  7542 ;;      Totals:         0       0       0
  7543 ;;Total ram usage:        0 bytes
  7544 ;; Hardware stack levels used: 1
  7545 ;; Hardware stack levels required when called: 3
  7546 ;; This function calls:
  7547 ;;		_TiGetTimer
  7548 ;; This function is called by:
  7549 ;;		_main
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text64
  7554  001D3A                     __ptext64:
  7555                           	callstack 0
  7556  001D3A                     _TeInit:
  7557                           	callstack 27
  7558                           
  7559                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  7560                           
  7561                           ;incstack = 0
  7562  001D3A  EC15  F00D         	call	_TiGetTimer	;wreg free
  7563  001D3E  6E38               	movwf	_tiTeclat^0,c
  7564  001D40  0012               	return		;funcret
  7565  001D42                     __end_of_TeInit:
  7566                           	callstack 0
  7567                           
  7568 ;; *************** function _Sinit *****************
  7569 ;; Defined at:
  7570 ;;		line 18 in file "Ssms.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;		None
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1    wreg      void 
  7577 ;; Registers used:
  7578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1
  7584 ;;      Params:         0       0       0
  7585 ;;      Locals:         0       0       0
  7586 ;;      Temps:          0       0       0
  7587 ;;      Totals:         0       0       0
  7588 ;;Total ram usage:        0 bytes
  7589 ;; Hardware stack levels used: 1
  7590 ;; Hardware stack levels required when called: 3
  7591 ;; This function calls:
  7592 ;;		_TiGetTimer
  7593 ;; This function is called by:
  7594 ;;		_main
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text65
  7599  001D42                     __ptext65:
  7600                           	callstack 0
  7601  001D42                     _Sinit:
  7602                           	callstack 27
  7603                           
  7604                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  7605                           
  7606                           ;incstack = 0
  7607  001D42  EC15  F00D         	call	_TiGetTimer	;wreg free
  7608  001D46  6E3B               	movwf	_timerSMS^0,c
  7609  001D48  0012               	return		;funcret
  7610  001D4A                     __end_of_Sinit:
  7611                           	callstack 0
  7612                           
  7613 ;; *************** function _SMotor *****************
  7614 ;; Defined at:
  7615 ;;		line 22 in file "Ssms.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;		None
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;		None
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      void 
  7622 ;; Registers used:
  7623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1
  7629 ;;      Params:         0       0       0
  7630 ;;      Locals:         0       0       0
  7631 ;;      Temps:          4       0       0
  7632 ;;      Totals:         4       0       0
  7633 ;;Total ram usage:        4 bytes
  7634 ;; Hardware stack levels used: 1
  7635 ;; Hardware stack levels required when called: 3
  7636 ;; This function calls:
  7637 ;;		_MNovaLletra
  7638 ;;		_TiGetTics
  7639 ;;		_TiResetTics
  7640 ;; This function is called by:
  7641 ;;		_main
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text66
  7646  000EB2                     __ptext66:
  7647                           	callstack 0
  7648  000EB2                     _SMotor:
  7649                           	callstack 27
  7650                           
  7651                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  7652                           
  7653                           ;incstack = 0
  7654  000EB2  D0C1               	goto	l4739
  7655  000EB4                     l4583:
  7656                           
  7657                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  7658  000EB4  286B               	incf	_novaTecla^0,w,c
  7659  000EB6  E008               	bz	l4591
  7660  000EB8  A078               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7661  000EBA  D006               	goto	l4591
  7662                           
  7663                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  7664  000EBC  503B               	movf	_timerSMS^0,w,c
  7665  000EBE  ECD6  F00D         	call	_TiResetTics
  7666                           
  7667                           ;Ssms.c: 29:     state = 3;
  7668  000EC2  0E03               	movlw	3
  7669  000EC4  6E39               	movwf	SMotor@state^0,c
  7670                           
  7671                           ;Ssms.c: 30:    }
  7672  000EC6  0C03               	retlw	3
  7673  000EC8                     l4591:
  7674  000EC8  286B               	incf	_novaTecla^0,w,c
  7675  000ECA  A4D8               	btfss	status,2,c
  7676  000ECC  0012               	return	
  7677  000ECE  503B               	movf	_timerSMS^0,w,c
  7678  000ED0  EC52  F00D         	call	_TiGetTics
  7679  000ED4  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  7680  000ED6  0012               	return	
  7681  000ED8  D8D7               	call	PL56	;call to abstracted procedure
  7682  000EDA  A0D8               	btfss	status,0,c
  7683  000EDC  0012               	return	
  7684  000EDE  286C               	incf	_lletraASCII^0,w,c
  7685  000EE0  A4D8               	btfss	status,2,c
  7686  000EE2  A078               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7687  000EE4  0012               	return	
  7688                           
  7689                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  7690  000EE6  506C               	movf	_lletraASCII^0,w,c
  7691  000EE8  ECA5  F00E         	call	_MNovaLletra
  7692                           
  7693                           ;Ssms.c: 33:     lletraASCII = -1;
  7694  000EEC  686C               	setf	_lletraASCII^0,c
  7695                           
  7696                           ;Ssms.c: 34:     ultimaTecla = -1;
  7697  000EEE  686A               	setf	_ultimaTecla^0,c
  7698                           
  7699                           ;Ssms.c: 35:     zeroTecla = 0;
  7700  000EF0  6A3A               	clrf	_zeroTecla^0,c
  7701  000EF2  0012               	return	
  7702  000EF4                     l4607:
  7703                           
  7704                           ;Ssms.c: 39:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  7705  000EF4  506A               	movf	_ultimaTecla^0,w,c
  7706  000EF6  186B               	xorwf	_novaTecla^0,w,c
  7707  000EF8  E10C               	bnz	l4615
  7708  000EFA  503B               	movf	_timerSMS^0,w,c
  7709  000EFC  EC52  F00D         	call	_TiGetTics
  7710  000F00  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  7711  000F02  D002               	goto	u4050
  7712  000F04  D8C1               	call	PL56	;call to abstracted procedure
  7713  000F06  E205               	bc	l4615
  7714  000F08                     u4050:
  7715                           
  7716                           ;Ssms.c: 40:     novaTecla = -1;
  7717  000F08  686B               	setf	_novaTecla^0,c
  7718                           
  7719                           ;Ssms.c: 41:     sumaPulsacions++;
  7720  000F0A  2A3C               	incf	_sumaPulsacions^0,f,c
  7721                           
  7722                           ;Ssms.c: 42:     lletraASCII++;
  7723  000F0C  2A6C               	incf	_lletraASCII^0,f,c
  7724                           
  7725                           ;Ssms.c: 43:     state++;
  7726  000F0E  2A39               	incf	SMotor@state^0,f,c
  7727                           
  7728                           ;Ssms.c: 44:    }
  7729  000F10  0012               	return	
  7730  000F12                     l4615:
  7731  000F12  286B               	incf	_novaTecla^0,w,c
  7732  000F14  B4D8               	btfsc	status,2,c
  7733  000F16  0012               	return	
  7734  000F18  506A               	movf	_ultimaTecla^0,w,c
  7735  000F1A  186B               	xorwf	_novaTecla^0,w,c
  7736  000F1C  B4D8               	btfsc	status,2,c
  7737  000F1E  0012               	return	
  7738                           
  7739                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  7740  000F20  506C               	movf	_lletraASCII^0,w,c
  7741  000F22  ECA5  F00E         	call	_MNovaLletra
  7742                           
  7743                           ;Ssms.c: 47:     if(novaTecla != 0){
  7744  000F26  506B               	movf	_novaTecla^0,w,c
  7745  000F28  E007               	bz	l4625
  7746                           
  7747                           ;Ssms.c: 48:       lletraASCII = lletraInici[novaTecla-2];
  7748  000F2A  0EFE               	movlw	254
  7749  000F2C  6E51               	movwf	??_SMotor^0,c
  7750  000F2E  6852               	setf	(??_SMotor+1)^0,c
  7751  000F30  C06B  F053         	movff	_novaTecla,??_SMotor+2
  7752  000F34  D898               	call	PL10	;call to abstracted procedure
  7753                           
  7754                           ;Ssms.c: 49:     }else{
  7755  000F36  D002               	goto	l4627
  7756  000F38                     l4625:
  7757                           
  7758                           ;Ssms.c: 50:       lletraASCII = '0';
  7759  000F38  0E30               	movlw	48
  7760  000F3A  6E6C               	movwf	_lletraASCII^0,c
  7761  000F3C                     l4627:
  7762                           
  7763                           ;Ssms.c: 52:     zeroTecla=0;
  7764  000F3C  6A3A               	clrf	_zeroTecla^0,c
  7765                           
  7766                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  7767  000F3E  C06B  F06A         	movff	_novaTecla,_ultimaTecla
  7768                           
  7769                           ;Ssms.c: 54:     sumaPulsacions = 0;
  7770  000F42  6A3C               	clrf	_sumaPulsacions^0,c
  7771                           
  7772                           ;Ssms.c: 55:     novaTecla = -1;
  7773  000F44  686B               	setf	_novaTecla^0,c
  7774                           
  7775                           ;Ssms.c: 56:     state--;
  7776  000F46  0639               	decf	SMotor@state^0,f,c
  7777  000F48  0012               	return	
  7778  000F4A                     l4637:
  7779                           
  7780                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  7781  000F4A  0E07               	movlw	7
  7782  000F4C  186A               	xorwf	_ultimaTecla^0,w,c
  7783  000F4E  E008               	bz	l4645
  7784  000F50  0E09               	movlw	9
  7785  000F52  186A               	xorwf	_ultimaTecla^0,w,c
  7786  000F54  E005               	bz	l4645
  7787  000F56  506A               	movf	_ultimaTecla^0,w,c
  7788  000F58  E003               	bz	l4645
  7789                           
  7790                           ;Ssms.c: 61:     state = 5;
  7791  000F5A  0E05               	movlw	5
  7792  000F5C  6E39               	movwf	SMotor@state^0,c
  7793                           
  7794                           ;Ssms.c: 62:    }
  7795  000F5E  0C05               	retlw	5
  7796  000F60                     l4645:
  7797  000F60  0E07               	movlw	7
  7798  000F62  186A               	xorwf	_ultimaTecla^0,w,c
  7799  000F64  E003               	bz	u4130
  7800  000F66  0E09               	movlw	9
  7801  000F68  186A               	xorwf	_ultimaTecla^0,w,c
  7802  000F6A  E103               	bnz	l4651
  7803  000F6C                     u4130:
  7804                           
  7805                           ;Ssms.c: 64:     state = 6;
  7806  000F6C  0E06               	movlw	6
  7807  000F6E  6E39               	movwf	SMotor@state^0,c
  7808                           
  7809                           ;Ssms.c: 65:    }
  7810  000F70  0C06               	retlw	6
  7811  000F72                     l4651:
  7812  000F72  506A               	movf	_ultimaTecla^0,w,c
  7813  000F74  A4D8               	btfss	status,2,c
  7814  000F76  0012               	return	
  7815                           
  7816                           ;Ssms.c: 67:     zeroTecla++;
  7817  000F78  2A3A               	incf	_zeroTecla^0,f,c
  7818                           
  7819                           ;Ssms.c: 68:     if(zeroTecla == 2) zeroTecla = 0;
  7820  000F7A  0E02               	movlw	2
  7821  000F7C  183A               	xorwf	_zeroTecla^0,w,c
  7822  000F7E  E101               	bnz	l4659
  7823  000F80  6A3A               	clrf	_zeroTecla^0,c
  7824  000F82                     l4659:
  7825                           
  7826                           ;Ssms.c: 69:     lletraASCII = arrayZero[zeroTecla];
  7827  000F82  0EFD               	movlw	low _arrayZero
  7828  000F84  243A               	addwf	_zeroTecla^0,w,c
  7829  000F86  6EF6               	movwf	tblptrl,c
  7830  000F88  6AF7               	clrf	tblptrh,c
  7831  000F8A  0E1E               	movlw	high _arrayZero
  7832  000F8C  22F7               	addwfc	tblptrh,f,c
  7833  000F8E                     	if	0	;There are less than 3 active tblptr bytes
  7834  000F8E                     	endif
  7835  000F8E  0008               	tblrd		*
  7836  000F90  CFF5 F06C          	movff	tablat,_lletraASCII
  7837  000F94                     l4661:
  7838                           
  7839                           ;Ssms.c: 70:     state = 0;
  7840  000F94  6A39               	clrf	SMotor@state^0,c
  7841  000F96  0012               	return	
  7842  000F98                     l4663:
  7843                           
  7844                           ;Ssms.c: 74:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  7845  000F98  506B               	movf	_novaTecla^0,w,c
  7846  000F9A  0A80               	xorlw	128
  7847  000F9C  0F7E               	addlw	-130
  7848  000F9E  E202               	bc	u4170
  7849  000FA0  506B               	movf	_novaTecla^0,w,c
  7850  000FA2  E107               	bnz	l4671
  7851  000FA4                     u4170:
  7852  000FA4  506B               	movf	_novaTecla^0,w,c
  7853  000FA6  0A80               	xorlw	128
  7854  000FA8  0F76               	addlw	-138
  7855  000FAA  E203               	bc	l4671
  7856                           
  7857                           ;Ssms.c: 75:     state = 1;
  7858  000FAC  0E01               	movlw	1
  7859  000FAE  6E39               	movwf	SMotor@state^0,c
  7860                           
  7861                           ;Ssms.c: 76:    }
  7862  000FB0  0C01               	retlw	1
  7863  000FB2                     l4671:
  7864  000FB2  506B               	movf	_novaTecla^0,w,c
  7865  000FB4  E00C               	bz	l4683
  7866  000FB6  506B               	movf	_novaTecla^0,w,c
  7867  000FB8  0A80               	xorlw	128
  7868  000FBA  0F7E               	addlw	-130
  7869  000FBC  E208               	bc	l4683
  7870  000FBE  286C               	incf	_lletraASCII^0,w,c
  7871  000FC0  E106               	bnz	l4683
  7872                           
  7873                           ;Ssms.c: 78:     MNovaLletra(novaTecla+48);
  7874  000FC2  506B               	movf	_novaTecla^0,w,c
  7875  000FC4  0F30               	addlw	48
  7876  000FC6  ECA5  F00E         	call	_MNovaLletra
  7877  000FCA                     l4679:
  7878                           
  7879                           ;Ssms.c: 79:     novaTecla = -1;
  7880  000FCA  686B               	setf	_novaTecla^0,c
  7881  000FCC  D7E3               	goto	l4661
  7882  000FCE                     l4683:
  7883  000FCE  506B               	movf	_novaTecla^0,w,c
  7884  000FD0  B4D8               	btfsc	status,2,c
  7885  000FD2  0012               	return	
  7886  000FD4  506B               	movf	_novaTecla^0,w,c
  7887  000FD6  0A80               	xorlw	128
  7888  000FD8  0F7E               	addlw	-130
  7889  000FDA  B0D8               	btfsc	status,0,c
  7890  000FDC  0012               	return	
  7891  000FDE  286C               	incf	_lletraASCII^0,w,c
  7892  000FE0  B4D8               	btfsc	status,2,c
  7893  000FE2  0012               	return	
  7894                           
  7895                           ;Ssms.c: 83:     MNovaLletra(lletraASCII);
  7896  000FE4  506C               	movf	_lletraASCII^0,w,c
  7897  000FE6  ECA5  F00E         	call	_MNovaLletra
  7898                           
  7899                           ;Ssms.c: 84:     lletraASCII = -1;
  7900  000FEA  686C               	setf	_lletraASCII^0,c
  7901                           
  7902                           ;Ssms.c: 85:     state++;
  7903  000FEC  2A39               	incf	SMotor@state^0,f,c
  7904  000FEE  0012               	return	
  7905  000FF0                     l4695:
  7906                           
  7907                           ;Ssms.c: 89:    MNovaLletra(novaTecla+48);
  7908  000FF0  506B               	movf	_novaTecla^0,w,c
  7909  000FF2  0F30               	addlw	48
  7910  000FF4  ECA5  F00E         	call	_MNovaLletra
  7911  000FF8  D7E8               	goto	l4679
  7912  000FFA                     l4701:
  7913                           
  7914                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  7915  000FFA  0E04               	movlw	4
  7916  000FFC  183C               	xorwf	_sumaPulsacions^0,w,c
  7917  000FFE  E108               	bnz	l4709
  7918  001000                     u4250:
  7919                           
  7920                           ;Ssms.c: 95:     lletraASCII = lletraInici[ultimaTecla-2];
  7921  001000  0EFE               	movlw	254
  7922  001002  6E51               	movwf	??_SMotor^0,c
  7923  001004  6852               	setf	(??_SMotor+1)^0,c
  7924  001006  C06A  F053         	movff	_ultimaTecla,??_SMotor+2
  7925  00100A  D82D               	call	PL10	;call to abstracted procedure
  7926                           
  7927                           ;Ssms.c: 96:     sumaPulsacions = 0;
  7928  00100C  6A3C               	clrf	_sumaPulsacions^0,c
  7929  00100E  D7C2               	goto	l4661
  7930  001010                     l4709:
  7931  001010  0E03               	movlw	3
  7932  001012  183C               	xorwf	_sumaPulsacions^0,w,c
  7933  001014  E104               	bnz	l4715
  7934  001016                     u4260:
  7935                           
  7936                           ;Ssms.c: 100:     lletraASCII = ultimaTecla+48;
  7937  001016  506A               	movf	_ultimaTecla^0,w,c
  7938  001018  0F30               	addlw	48
  7939  00101A  6E6C               	movwf	_lletraASCII^0,c
  7940  00101C  D7BB               	goto	l4661
  7941  00101E                     l4715:
  7942  00101E  0E03               	movlw	3
  7943  001020  603C               	cpfslt	_sumaPulsacions^0,c
  7944  001022  0012               	return	
  7945  001024  D7B7               	goto	l4661
  7946  001026                     l4719:
  7947                           
  7948                           ;Ssms.c: 108:    if (sumaPulsacions == 4) {
  7949  001026  0E04               	movlw	4
  7950  001028  183C               	xorwf	_sumaPulsacions^0,w,c
  7951  00102A  E0F5               	bz	u4260
  7952  00102C  0E05               	movlw	5
  7953  00102E  183C               	xorwf	_sumaPulsacions^0,w,c
  7954  001030  E0E7               	bz	u4250
  7955  001032  0E04               	movlw	4
  7956  001034  D7F5               	goto	L4
  7957  001036                     l4739:
  7958  001036  5039               	movf	SMotor@state^0,w,c
  7959  001038  6E51               	movwf	??_SMotor^0,c
  7960  00103A  6A52               	clrf	(??_SMotor+1)^0,c
  7961                           
  7962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7963                           ; Switch size 1, requested type "space"
  7964                           ; Number of cases is 1, Range of values is 0 to 0
  7965                           ; switch strategies available:
  7966                           ; Name         Instructions Cycles
  7967                           ; simple_byte            4     3 (average)
  7968                           ;	Chosen strategy is simple_byte
  7969  00103C  5052               	movf	(??_SMotor+1)^0,w,c
  7970  00103E  A4D8               	btfss	status,2,c
  7971  001040  0012               	return	
  7972                           
  7973                           ; Switch size 1, requested type "space"
  7974                           ; Number of cases is 7, Range of values is 0 to 6
  7975                           ; switch strategies available:
  7976                           ; Name         Instructions Cycles
  7977                           ; simple_byte           22    12 (average)
  7978                           ;	Chosen strategy is simple_byte
  7979  001042  5051               	movf	??_SMotor^0,w,c
  7980  001044  E101 D736          	bz	l4583
  7981  001048  0A01               	xorlw	1	; case 1
  7982  00104A  E101 D753          	bz	l4607
  7983  00104E  0A03               	xorlw	3	; case 2
  7984  001050  E101 D77B          	bz	l4637
  7985  001054  0A01               	xorlw	1	; case 3
  7986  001056  E0A0               	bz	l4663
  7987  001058  0A07               	xorlw	7	; case 4
  7988  00105A  E0CA               	bz	l4695
  7989  00105C  0A01               	xorlw	1	; case 5
  7990  00105E  E0CD               	bz	l4701
  7991  001060  0A03               	xorlw	3	; case 6
  7992  001062  E0E1               	bz	l4719
  7993  001064  0012               	return		;funcret
  7994  001066                     __end_of_SMotor:
  7995                           	callstack 0
  7996  001066                     PL10:
  7997                           	callstack 27
  7998  001066  6A54               	clrf	(??_SMotor+3)^0,c
  7999  001068  BE53               	btfsc	(??_SMotor+2)^0,7,c
  8000  00106A  0654               	decf	(??_SMotor+3)^0,f,c
  8001  00106C  5051               	movf	??_SMotor^0,w,c
  8002  00106E  2653               	addwf	(??_SMotor+2)^0,f,c
  8003  001070  5052               	movf	(??_SMotor+1)^0,w,c
  8004  001072  2254               	addwfc	(??_SMotor+3)^0,f,c
  8005  001074  0EF5               	movlw	low _lletraInici
  8006  001076  2453               	addwf	(??_SMotor+2)^0,w,c
  8007  001078  6EF6               	movwf	tblptrl,c
  8008  00107A  0E1E               	movlw	high _lletraInici
  8009  00107C  2054               	addwfc	(??_SMotor+3)^0,w,c
  8010  00107E  6EF7               	movwf	tblptrh,c
  8011  001080                     	if	0	;There are less than 3 active tblptr bytes
  8012  001080                     	endif
  8013  001080  0008               	tblrd		*
  8014  001082  CFF5 F06C          	movff	tablat,_lletraASCII
  8015  001086  0012               	return	
  8016  001088                     __end_ofPL10:
  8017                           	callstack 0
  8018  001088                     PL56:
  8019                           	callstack 27
  8020  001088  0E5A               	movlw	90
  8021  00108A  5C4A               	subwf	?_TiGetTics^0,w,c
  8022  00108C  0E02               	movlw	2
  8023  00108E  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  8024  001090  0012               	return	
  8025  001092                     __end_ofPL56:
  8026                           	callstack 0
  8027                           
  8028 ;; *************** function _MNovaLletra *****************
  8029 ;; Defined at:
  8030 ;;		line 35 in file "Menu.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  lletra          1    wreg     unsigned char 
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;  lletra          1    5[COMRAM] unsigned char 
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  1    wreg      void 
  8037 ;; Registers used:
  8038 ;;		wreg
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMRAM   BANK0   BANK1
  8044 ;;      Params:         0       0       0
  8045 ;;      Locals:         1       0       0
  8046 ;;      Temps:          0       0       0
  8047 ;;      Totals:         1       0       0
  8048 ;;Total ram usage:        1 bytes
  8049 ;; Hardware stack levels used: 1
  8050 ;; Hardware stack levels required when called: 2
  8051 ;; This function calls:
  8052 ;;		Nothing
  8053 ;; This function is called by:
  8054 ;;		_SMotor
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text67
  8059  001D4A                     __ptext67:
  8060                           	callstack 0
  8061  001D4A                     _MNovaLletra:
  8062                           	callstack 27
  8063                           
  8064                           ;incstack = 0
  8065                           ;MNovaLletra@lletra stored from wreg
  8066  001D4A  6E4A               	movwf	MNovaLletra@lletra^0,c
  8067                           
  8068                           ;Menu.c: 36:     novaLletra = lletra;
  8069  001D4C  C04A  F068         	movff	MNovaLletra@lletra,_novaLletra
  8070  001D50  0012               	return		;funcret
  8071  001D52                     __end_of_MNovaLletra:
  8072                           	callstack 0
  8073                           
  8074 ;; *************** function _Minit *****************
  8075 ;; Defined at:
  8076 ;;		line 28 in file "Menu.c"
  8077 ;; Parameters:    Size  Location     Type
  8078 ;;		None
  8079 ;; Auto vars:     Size  Location     Type
  8080 ;;		None
  8081 ;; Return value:  Size  Location     Type
  8082 ;;                  1    wreg      void 
  8083 ;; Registers used:
  8084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8085 ;; Tracked objects:
  8086 ;;		On entry : 0/0
  8087 ;;		On exit  : 0/0
  8088 ;;		Unchanged: 0/0
  8089 ;; Data sizes:     COMRAM   BANK0   BANK1
  8090 ;;      Params:         0       0       0
  8091 ;;      Locals:         0       0       0
  8092 ;;      Temps:          0       0       0
  8093 ;;      Totals:         0       0       0
  8094 ;;Total ram usage:        0 bytes
  8095 ;; Hardware stack levels used: 1
  8096 ;; Hardware stack levels required when called: 3
  8097 ;; This function calls:
  8098 ;;		_TiGetTimer
  8099 ;; This function is called by:
  8100 ;;		_main
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           	psect	text68
  8105  001D52                     __ptext68:
  8106                           	callstack 0
  8107  001D52                     _Minit:
  8108                           	callstack 27
  8109                           
  8110                           ;Menu.c: 29:     timerMenu = TiGetTimer();
  8111                           
  8112                           ;incstack = 0
  8113  001D52  EC15  F00D         	call	_TiGetTimer	;wreg free
  8114  001D56  6E32               	movwf	_timerMenu^0,c
  8115  001D58  0012               	return		;funcret
  8116  001D5A                     __end_of_Minit:
  8117                           	callstack 0
  8118                           
  8119 ;; *************** function _LcLCD *****************
  8120 ;; Defined at:
  8121 ;;		line 232 in file "LcTLCD.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;		None
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;		None
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMRAM   BANK0   BANK1
  8135 ;;      Params:         0       0       0
  8136 ;;      Locals:         0       0       0
  8137 ;;      Temps:          0       0       0
  8138 ;;      Totals:         0       0       0
  8139 ;;Total ram usage:        0 bytes
  8140 ;; Hardware stack levels used: 1
  8141 ;; Hardware stack levels required when called: 6
  8142 ;; This function calls:
  8143 ;;		_LcPutChar
  8144 ;; This function is called by:
  8145 ;;		_main
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text69
  8150  0017FA                     __ptext69:
  8151                           	callstack 0
  8152  0017FA                     _LcLCD:
  8153                           	callstack 24
  8154                           
  8155                           ;LcTLCD.c: 233:     if(nou_s == 1){
  8156                           
  8157                           ;incstack = 0
  8158  0017FA  A278               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8159  0017FC  0012               	return	
  8160                           
  8161                           ;LcTLCD.c: 234:         LcPutChar(*s_ptr);
  8162  0017FE  D818               	call	PL36	;call to abstracted procedure
  8163  001800  64F7               	cpfsgt	tblptrh,c
  8164  001802  D003               	bra	u3917
  8165  001804  0008               	tblrd		*
  8166  001806  50F5               	movf	tablat,w,c
  8167  001808  D001               	bra	u3910
  8168  00180A                     u3917:
  8169  00180A  D819               	call	PL46	;call to abstracted procedure
  8170  00180C                     u3910:
  8171  00180C  EC25  F00C         	call	_LcPutChar
  8172                           
  8173                           ;LcTLCD.c: 235:         s_ptr++;
  8174  001810  4A0D               	infsnz	_s_ptr^0,f,c
  8175  001812  2A0E               	incf	(_s_ptr+1)^0,f,c
  8176                           
  8177                           ;LcTLCD.c: 236:         if(*s_ptr == '\0'){
  8178  001814  D80D               	call	PL36	;call to abstracted procedure
  8179  001816  64F7               	cpfsgt	tblptrh,c
  8180  001818  D003               	bra	u3927
  8181  00181A  0008               	tblrd		*
  8182  00181C  50F5               	movf	tablat,w,c
  8183  00181E  D001               	bra	u3920
  8184  001820                     u3927:
  8185  001820  D80E               	call	PL46	;call to abstracted procedure
  8186  001822                     u3920:
  8187  001822  0900               	iorlw	0
  8188  001824  A4D8               	btfss	status,2,c
  8189  001826  0012               	return	
  8190                           
  8191                           ;LcTLCD.c: 237:             nou_s = 0;
  8192  001828  9278               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8193                           
  8194                           ;LcTLCD.c: 238:             s_ptr=0;
  8195  00182A  6A0D               	clrf	_s_ptr^0,c
  8196  00182C  6A0E               	clrf	(_s_ptr+1)^0,c
  8197  00182E  0012               	return		;funcret
  8198  001830                     __end_of_LcLCD:
  8199                           	callstack 0
  8200  001830                     PL36:
  8201                           	callstack 24
  8202  001830  C00D  FFF6         	movff	_s_ptr,tblptrl
  8203  001834  C00E  FFF7         	movff	_s_ptr+1,tblptrh
  8204  001838  6AF8               	clrf	tblptru,c
  8205  00183A  0E01               	movlw	(high __ramtop+-1)
  8206  00183C  0012               	return	
  8207  00183E                     __end_ofPL36:
  8208                           	callstack 0
  8209  00183E                     PL46:
  8210                           	callstack 24
  8211  00183E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8212  001842  CFF7 FFE2          	movff	tblptrh,fsr1h
  8213  001846  50E7               	movf	indf1,w,c
  8214  001848  0012               	return	
  8215  00184A                     __end_ofPL46:
  8216                           	callstack 0
  8217                           
  8218 ;; *************** function _LcInit *****************
  8219 ;; Defined at:
  8220 ;;		line 41 in file "LcTLCD.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  rows            1    wreg     unsigned char 
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;  rows            1   16[COMRAM] unsigned char 
  8225 ;;  i               2   17[COMRAM] int 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1
  8235 ;;      Params:         0       0       0
  8236 ;;      Locals:         3       0       0
  8237 ;;      Temps:          0       0       0
  8238 ;;      Totals:         3       0       0
  8239 ;;Total ram usage:        3 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; Hardware stack levels required when called: 4
  8242 ;; This function calls:
  8243 ;;		_CantaIR
  8244 ;;		_EscriuPrimeraOrdre
  8245 ;;		_Espera
  8246 ;;		_TiGetTimer
  8247 ;;		_WaitForBusy
  8248 ;; This function is called by:
  8249 ;;		_main
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text70
  8254  001378                     __ptext70:
  8255                           	callstack 0
  8256  001378                     _LcInit:
  8257                           	callstack 26
  8258                           
  8259                           ;incstack = 0
  8260                           ;LcInit@rows stored from wreg
  8261  001378  6E55               	movwf	LcInit@rows^0,c
  8262                           
  8263                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  8264  00137A  EC15  F00D         	call	_TiGetTimer	;wreg free
  8265  00137E  6E3D               	movwf	_Timer^0,c
  8266                           
  8267                           ;LcTLCD.c: 49:  Rows = rows;
  8268  001380  C055  F040         	movff	LcInit@rows,_Rows
  8269                           
  8270                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  8271  001384  6A3E               	clrf	_ColumnAct^0,c
  8272  001386  6A3F               	clrf	_RowAct^0,c
  8273                           
  8274                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8275  001388  9894               	bcf	148,4,c	;volatile
  8276  00138A  9E95               	bcf	149,7,c	;volatile
  8277  00138C  9A94               	bcf	148,5,c	;volatile
  8278                           
  8279                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  8280  00138E  6A56               	clrf	LcInit@i^0,c
  8281  001390  6A57               	clrf	(LcInit@i+1)^0,c
  8282  001392                     l4491:
  8283                           
  8284                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  8285  001392  6A52               	clrf	(Espera@ms+1)^0,c
  8286  001394  0E64               	movlw	100
  8287  001396  6E51               	movwf	Espera@ms^0,c
  8288  001398  503D               	movf	_Timer^0,w,c
  8289  00139A  EC9A  F00D         	call	_Espera
  8290                           
  8291                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  8292  00139E  0E03               	movlw	3
  8293  0013A0  ECF7  F00A         	call	_EscriuPrimeraOrdre
  8294                           
  8295                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  8296  0013A4  6A52               	clrf	(Espera@ms+1)^0,c
  8297  0013A6  0E05               	movlw	5
  8298  0013A8  6E51               	movwf	Espera@ms^0,c
  8299  0013AA  503D               	movf	_Timer^0,w,c
  8300  0013AC  EC9A  F00D         	call	_Espera
  8301                           
  8302                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  8303  0013B0  0E03               	movlw	3
  8304  0013B2  ECF7  F00A         	call	_EscriuPrimeraOrdre
  8305                           
  8306                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8307  0013B6  D83A               	call	PL66	;call to abstracted procedure
  8308  0013B8  EC9A  F00D         	call	_Espera
  8309                           
  8310                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  8311  0013BC  0E03               	movlw	3
  8312  0013BE  ECF7  F00A         	call	_EscriuPrimeraOrdre
  8313                           
  8314                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  8315  0013C2  D834               	call	PL66	;call to abstracted procedure
  8316  0013C4  EC9A  F00D         	call	_Espera
  8317                           
  8318                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  8319  0013C8  0E02               	movlw	2
  8320  0013CA  ECF7  F00A         	call	_EscriuPrimeraOrdre
  8321                           
  8322                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  8323  0013CE  6A52               	clrf	(Espera@ms+1)^0,c
  8324  0013D0  0E04               	movlw	4
  8325  0013D2  6E51               	movwf	Espera@ms^0,c
  8326  0013D4  503D               	movf	_Timer^0,w,c
  8327  0013D6  EC9A  F00D         	call	_Espera
  8328                           
  8329                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  8330  0013DA  0E28               	movlw	40
  8331  0013DC  ECC8  F00D         	call	_CantaIR
  8332                           
  8333                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  8334  0013E0  EC8C  F00C         	call	_WaitForBusy	;wreg free
  8335  0013E4  0E08               	movlw	8
  8336  0013E6  ECC8  F00D         	call	_CantaIR
  8337                           
  8338                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  8339  0013EA  EC8C  F00C         	call	_WaitForBusy	;wreg free
  8340  0013EE  0E01               	movlw	1
  8341  0013F0  ECC8  F00D         	call	_CantaIR
  8342                           
  8343                           ;LcTLCD.c: 71:   Espera(Timer,3);
  8344  0013F4  EC95  F00D         	call	PL64	;call to abstracted procedure
  8345  0013F8  EC9A  F00D         	call	_Espera
  8346                           
  8347                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  8348  0013FC  EC8C  F00C         	call	_WaitForBusy	;wreg free
  8349  001400  0E06               	movlw	6
  8350  001402  ECC8  F00D         	call	_CantaIR
  8351                           
  8352                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  8353  001406  EC8C  F00C         	call	_WaitForBusy	;wreg free
  8354  00140A  0E0F               	movlw	15
  8355  00140C  ECC8  F00D         	call	_CantaIR
  8356                           
  8357                           ;LcTLCD.c: 74:  }
  8358  001410  4A56               	infsnz	LcInit@i^0,f,c
  8359  001412  2A57               	incf	(LcInit@i+1)^0,f,c
  8360  001414  BE57               	btfsc	(LcInit@i+1)^0,7,c
  8361  001416  D7BD               	goto	l4491
  8362  001418  5057               	movf	(LcInit@i+1)^0,w,c
  8363  00141A  E103               	bnz	u3890
  8364  00141C  0E02               	movlw	2
  8365  00141E  5C56               	subwf	LcInit@i^0,w,c
  8366  001420  E3B8               	bnc	l4491
  8367  001422                     u3890:
  8368                           
  8369                           ;LcTLCD.c: 80:     WaitForBusy();
  8370  001422  EC8C  F00C         	call	_WaitForBusy	;wreg free
  8371                           
  8372                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  8373  001426  0E0C               	movlw	12
  8374  001428  EFC8  F00D         	goto	_CantaIR
  8375  00142C                     __end_of_LcInit:
  8376                           	callstack 0
  8377  00142C                     PL66:
  8378                           	callstack 26
  8379  00142C  6A52               	clrf	(Espera@ms+1)^0,c
  8380  00142E  0E01               	movlw	1
  8381  001430  6E51               	movwf	Espera@ms^0,c
  8382  001432  503D               	movf	_Timer^0,w,c
  8383  001434  0012               	return	
  8384  001436                     __end_ofPL66:
  8385                           	callstack 0
  8386                           
  8387 ;; *************** function _EscriuPrimeraOrdre *****************
  8388 ;; Defined at:
  8389 ;;		line 216 in file "LcTLCD.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  ordre           1    wreg     unsigned char 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  ordre           1    6[COMRAM] unsigned char 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1
  8403 ;;      Params:         0       0       0
  8404 ;;      Locals:         1       0       0
  8405 ;;      Temps:          1       0       0
  8406 ;;      Totals:         2       0       0
  8407 ;;Total ram usage:        2 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 2
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_LcInit
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           	psect	text71
  8418  0015EE                     __ptext71:
  8419                           	callstack 0
  8420  0015EE                     _EscriuPrimeraOrdre:
  8421                           	callstack 27
  8422                           
  8423                           ;incstack = 0
  8424                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8425  0015EE  6E4B               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8426                           
  8427                           ;LcTLCD.c: 218:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8428  0015F0  9694               	bcf	148,3,c	;volatile
  8429                           
  8430                           ;LcTLCD.c: 219:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8431  0015F2  D82F               	call	PL40	;call to abstracted procedure
  8432  0015F4  888B               	bsf	139,4,c	;volatile
  8433                           
  8434                           ;LcTLCD.c: 220:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8435  0015F6  A64B               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8436  0015F8  D003               	goto	u230
  8437  0015FA  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8438  0015FC  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8439  0015FE  D001               	goto	u248
  8440  001600                     u230:
  8441  001600  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8442  001602                     u248:
  8443  001602  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8444  001604  D82D               	call	PL62	;call to abstracted procedure
  8445  001606  0BF7               	andlw	-9
  8446  001608  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8447  00160A  6E8B               	movwf	139,c	;volatile
  8448                           
  8449                           ;LcTLCD.c: 221:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8450  00160C  A44B               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8451  00160E  D003               	goto	u250
  8452  001610  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8453  001612  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8454  001614  D001               	goto	u268
  8455  001616                     u250:
  8456  001616  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8457  001618                     u268:
  8458  001618  D823               	call	PL62	;call to abstracted procedure
  8459  00161A  0BFB               	andlw	-5
  8460  00161C  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8461  00161E  6E8B               	movwf	139,c	;volatile
  8462                           
  8463                           ;LcTLCD.c: 222:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8464  001620  A24B               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8465  001622  D003               	goto	u270
  8466  001624  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8467  001626  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8468  001628  D001               	goto	u288
  8469  00162A                     u270:
  8470  00162A  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8471  00162C                     u288:
  8472  00162C  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8473  00162E  508B               	movf	139,w,c	;volatile
  8474  001630  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8475  001632  0BFD               	andlw	-3
  8476  001634  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8477  001636  6E8B               	movwf	139,c	;volatile
  8478                           
  8479                           ;LcTLCD.c: 223:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8480  001638  A04B               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8481  00163A  D003               	goto	u290
  8482  00163C  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8483  00163E  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8484  001640  D001               	goto	u308
  8485  001642                     u290:
  8486  001642  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8487  001644                     u308:
  8488  001644  508B               	movf	139,w,c	;volatile
  8489  001646  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8490  001648  0BFE               	andlw	-2
  8491  00164A  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8492  00164C  6E8B               	movwf	139,c	;volatile
  8493                           
  8494                           ;LcTLCD.c: 224:  (LATCbits.LATC4 = 0);
  8495  00164E  988B               	bcf	139,4,c	;volatile
  8496  001650  0012               	return		;funcret
  8497  001652                     __end_of_EscriuPrimeraOrdre:
  8498                           	callstack 0
  8499  001652                     PL40:
  8500                           	callstack 24
  8501  001652  9494               	bcf	148,2,c	;volatile
  8502  001654  9294               	bcf	148,1,c	;volatile
  8503  001656  9094               	bcf	148,0,c	;volatile
  8504  001658  9A8B               	bcf	139,5,c	;volatile
  8505  00165A  9E8C               	bcf	140,7,c	;volatile
  8506  00165C  888B               	bsf	139,4,c	;volatile
  8507  00165E  0012               	return	
  8508  001660                     __end_ofPL40:
  8509                           	callstack 0
  8510  001660                     PL62:
  8511                           	callstack 27
  8512  001660  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8513  001662  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8514  001664  508B               	movf	139,w,c	;volatile
  8515  001666  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8516  001668  0012               	return	
  8517  00166A                     __end_ofPL62:
  8518                           	callstack 0
  8519                           
  8520 ;; *************** function _JoystickMotor *****************
  8521 ;; Defined at:
  8522 ;;		line 18 in file "Joystick.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;		None
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;		None
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  1    wreg      void 
  8529 ;; Registers used:
  8530 ;;		wreg, status,2, status,0, cstack
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMRAM   BANK0   BANK1
  8536 ;;      Params:         0       0       0
  8537 ;;      Locals:         0       0       0
  8538 ;;      Temps:          2       0       0
  8539 ;;      Totals:         2       0       0
  8540 ;;Total ram usage:        2 bytes
  8541 ;; Hardware stack levels used: 1
  8542 ;; Hardware stack levels required when called: 3
  8543 ;; This function calls:
  8544 ;;		_MNouJoystick
  8545 ;; This function is called by:
  8546 ;;		_main
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text72
  8551  0011E0                     __ptext72:
  8552                           	callstack 0
  8553  0011E0                     _JoystickMotor:
  8554                           	callstack 27
  8555                           
  8556                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  8557                           
  8558                           ;incstack = 0
  8559  0011E0  D056               	goto	l3245
  8560  0011E2                     l999:
  8561                           
  8562                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8563  0011E2  B2C2               	btfsc	194,1,c	;volatile
  8564  0011E4  D00B               	goto	l1000
  8565  0011E6  0EC8               	movlw	200
  8566  0011E8  60C4               	cpfslt	196,c	;volatile
  8567  0011EA  D008               	goto	l1000
  8568  0011EC  0E32               	movlw	50
  8569  0011EE  64C4               	cpfsgt	196,c	;volatile
  8570  0011F0  D005               	goto	l1000
  8571                           
  8572                           ;Joystick.c: 23:     ADCON0 = 0x07;
  8573  0011F2  0E07               	movlw	7
  8574  0011F4  6EC2               	movwf	194,c	;volatile
  8575                           
  8576                           ;Joystick.c: 24:                 cap1 = 1;
  8577  0011F6  8E76               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8578  0011F8                     l3175:
  8579                           
  8580                           ;Joystick.c: 25:     state++;
  8581  0011F8  2A17               	incf	JoystickMotor@state^0,f,c
  8582                           
  8583                           ;Joystick.c: 26:    }
  8584  0011FA  D052               	goto	l1007
  8585  0011FC                     l1000:
  8586  0011FC  B2C2               	btfsc	194,1,c	;volatile
  8587  0011FE  D00F               	goto	l1002
  8588  001200  0EC7               	movlw	199
  8589  001202  64C4               	cpfsgt	196,c	;volatile
  8590  001204  D00C               	goto	l1002
  8591                           
  8592                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  8593  001206  0E02               	movlw	2
  8594  001208  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8595  00120A  E003               	bz	l3183
  8596  00120C  0E02               	movlw	2
  8597  00120E  ECAD  F00E         	call	_MNouJoystick
  8598  001212                     l3183:
  8599                           
  8600                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  8601  001212  0E02               	movlw	2
  8602  001214  6E18               	movwf	_ultimaTeclaAD^0,c
  8603                           
  8604                           ;Joystick.c: 30:     ADCON0 = 0x07;
  8605  001216  0E07               	movlw	7
  8606  001218  6EC2               	movwf	194,c	;volatile
  8607                           
  8608                           ;Joystick.c: 31:                 cap1 = 0;
  8609  00121A  9E76               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8610  00121C  D7ED               	goto	l3175
  8611  00121E                     l1002:
  8612  00121E  B2C2               	btfsc	194,1,c	;volatile
  8613  001220  D03F               	goto	l1007
  8614  001222  0E33               	movlw	51
  8615  001224  60C4               	cpfslt	196,c	;volatile
  8616  001226  D03C               	goto	l1007
  8617                           
  8618                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  8619  001228  0E08               	movlw	8
  8620  00122A  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8621  00122C  E003               	bz	l3197
  8622  00122E  0E08               	movlw	8
  8623  001230  ECAD  F00E         	call	_MNouJoystick
  8624  001234                     l3197:
  8625                           
  8626                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  8627  001234  0E08               	movlw	8
  8628  001236  D7EE               	goto	L5
  8629  001238                     l1008:
  8630                           
  8631                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8632  001238  B2C2               	btfsc	194,1,c	;volatile
  8633  00123A  D00B               	goto	l1009
  8634  00123C  0EC8               	movlw	200
  8635  00123E  60C4               	cpfslt	196,c	;volatile
  8636  001240  D008               	goto	l1009
  8637  001242  0E32               	movlw	50
  8638  001244  64C4               	cpfsgt	196,c	;volatile
  8639  001246  D005               	goto	l1009
  8640                           
  8641                           ;Joystick.c: 44:     ADCON0 = 0x03;
  8642  001248  0E03               	movlw	3
  8643  00124A  6EC2               	movwf	194,c	;volatile
  8644                           
  8645                           ;Joystick.c: 45:                 cap2 = 1;
  8646  00124C  8C76               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8647  00124E                     l3213:
  8648                           
  8649                           ;Joystick.c: 46:     state--;
  8650  00124E  0617               	decf	JoystickMotor@state^0,f,c
  8651                           
  8652                           ;Joystick.c: 47:    }
  8653  001250  D027               	goto	l1007
  8654  001252                     l1009:
  8655  001252  B2C2               	btfsc	194,1,c	;volatile
  8656  001254  D00F               	goto	l1011
  8657  001256  0EC7               	movlw	199
  8658  001258  64C4               	cpfsgt	196,c	;volatile
  8659  00125A  D00C               	goto	l1011
  8660                           
  8661                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  8662  00125C  0E06               	movlw	6
  8663  00125E  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8664  001260  E003               	bz	l3221
  8665  001262  0E06               	movlw	6
  8666  001264  ECAD  F00E         	call	_MNouJoystick
  8667  001268                     l3221:
  8668                           
  8669                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  8670  001268  0E06               	movlw	6
  8671  00126A  6E18               	movwf	_ultimaTeclaAD^0,c
  8672                           
  8673                           ;Joystick.c: 51:     ADCON0 = 0x03;
  8674  00126C  0E03               	movlw	3
  8675  00126E  6EC2               	movwf	194,c	;volatile
  8676                           
  8677                           ;Joystick.c: 52:                 cap2 = 0;
  8678  001270  9C76               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8679  001272  D7ED               	goto	l3213
  8680  001274                     l1011:
  8681  001274  B2C2               	btfsc	194,1,c	;volatile
  8682  001276  D014               	goto	l1007
  8683  001278  0E33               	movlw	51
  8684  00127A  60C4               	cpfslt	196,c	;volatile
  8685  00127C  D011               	goto	l1007
  8686                           
  8687                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  8688  00127E  0E04               	movlw	4
  8689  001280  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8690  001282  E003               	bz	l3235
  8691  001284  0E04               	movlw	4
  8692  001286  ECAD  F00E         	call	_MNouJoystick
  8693  00128A                     l3235:
  8694                           
  8695                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  8696  00128A  0E04               	movlw	4
  8697  00128C  D7EE               	goto	L6
  8698  00128E                     l3245:
  8699  00128E  5017               	movf	JoystickMotor@state^0,w,c
  8700  001290  6E4B               	movwf	??_JoystickMotor^0,c
  8701  001292  6A4C               	clrf	(??_JoystickMotor+1)^0,c
  8702                           
  8703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8704                           ; Switch size 1, requested type "space"
  8705                           ; Number of cases is 1, Range of values is 0 to 0
  8706                           ; switch strategies available:
  8707                           ; Name         Instructions Cycles
  8708                           ; simple_byte            4     3 (average)
  8709                           ;	Chosen strategy is simple_byte
  8710  001294  504C               	movf	(??_JoystickMotor+1)^0,w,c
  8711  001296  E104               	bnz	l1007
  8712                           
  8713                           ; Switch size 1, requested type "space"
  8714                           ; Number of cases is 2, Range of values is 0 to 1
  8715                           ; switch strategies available:
  8716                           ; Name         Instructions Cycles
  8717                           ; simple_byte            7     4 (average)
  8718                           ;	Chosen strategy is simple_byte
  8719  001298  504B               	movf	??_JoystickMotor^0,w,c
  8720  00129A  E0A3               	bz	l999
  8721  00129C  0A01               	xorlw	1	; case 1
  8722  00129E  E0CC               	bz	l1008
  8723  0012A0                     l1007:
  8724                           
  8725                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  8726  0012A0  BE76               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  8727  0012A2  AC76               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  8728  0012A4  0012               	return	
  8729  0012A6  5018               	movf	_ultimaTeclaAD^0,w,c
  8730  0012A8  B4D8               	btfsc	status,2,c
  8731  0012AA  0012               	return	
  8732                           
  8733                           ;Joystick.c: 66:         MNouJoystick(-1);
  8734  0012AC  0EFF               	movlw	255
  8735  0012AE  ECAD  F00E         	call	_MNouJoystick
  8736                           
  8737                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  8738  0012B2  6818               	setf	_ultimaTeclaAD^0,c
  8739  0012B4  0012               	return		;funcret
  8740  0012B6                     __end_of_JoystickMotor:
  8741                           	callstack 0
  8742                           
  8743 ;; *************** function _MNouJoystick *****************
  8744 ;; Defined at:
  8745 ;;		line 38 in file "Menu.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  posicio         1    wreg     char 
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;  posicio         1    5[COMRAM] char 
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  1    wreg      void 
  8752 ;; Registers used:
  8753 ;;		wreg
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMRAM   BANK0   BANK1
  8759 ;;      Params:         0       0       0
  8760 ;;      Locals:         1       0       0
  8761 ;;      Temps:          0       0       0
  8762 ;;      Totals:         1       0       0
  8763 ;;Total ram usage:        1 bytes
  8764 ;; Hardware stack levels used: 1
  8765 ;; Hardware stack levels required when called: 2
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		_JoystickMotor
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773                           	psect	text73
  8774  001D5A                     __ptext73:
  8775                           	callstack 0
  8776  001D5A                     _MNouJoystick:
  8777                           	callstack 27
  8778                           
  8779                           ;incstack = 0
  8780                           ;MNouJoystick@posicio stored from wreg
  8781  001D5A  6E4A               	movwf	MNouJoystick@posicio^0,c
  8782                           
  8783                           ;Menu.c: 39:     novaDireccio = posicio;
  8784  001D5C  C04A  F067         	movff	MNouJoystick@posicio,_novaDireccio
  8785  001D60  0012               	return		;funcret
  8786  001D62                     __end_of_MNouJoystick:
  8787                           	callstack 0
  8788                           
  8789 ;; *************** function _JoystickInit *****************
  8790 ;; Defined at:
  8791 ;;		line 12 in file "Joystick.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;		None
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;		None
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  1    wreg      void 
  8798 ;; Registers used:
  8799 ;;		wreg, status,2
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMRAM   BANK0   BANK1
  8805 ;;      Params:         0       0       0
  8806 ;;      Locals:         0       0       0
  8807 ;;      Temps:          0       0       0
  8808 ;;      Totals:         0       0       0
  8809 ;;Total ram usage:        0 bytes
  8810 ;; Hardware stack levels used: 1
  8811 ;; Hardware stack levels required when called: 2
  8812 ;; This function calls:
  8813 ;;		Nothing
  8814 ;; This function is called by:
  8815 ;;		_main
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text74
  8820  001C0A                     __ptext74:
  8821                           	callstack 0
  8822  001C0A                     _JoystickInit:
  8823                           	callstack 28
  8824                           
  8825                           ;Joystick.c: 13:     ADCON0 = 0x01;
  8826                           
  8827                           ;incstack = 0
  8828  001C0A  0E01               	movlw	1
  8829  001C0C  6EC2               	movwf	194,c	;volatile
  8830                           
  8831                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  8832  001C0E  0E0D               	movlw	13
  8833  001C10  6EC1               	movwf	193,c	;volatile
  8834                           
  8835                           ;Joystick.c: 15:     ADCON2 = 0x09;
  8836  001C12  0E09               	movlw	9
  8837  001C14  6EC0               	movwf	192,c	;volatile
  8838                           
  8839                           ;Joystick.c: 16:     ADRESH = 127;
  8840  001C16  0E7F               	movlw	127
  8841  001C18  6EC4               	movwf	196,c	;volatile
  8842  001C1A  0C7F               	retlw	127	;funcret
  8843  001C1C                     __end_of_JoystickInit:
  8844                           	callstack 0
  8845                           
  8846 ;; *************** function _GLCDMotor *****************
  8847 ;; Defined at:
  8848 ;;		line 36 in file "GestioLCD.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;		None
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1
  8862 ;;      Params:         0       0       0
  8863 ;;      Locals:         0       0       0
  8864 ;;      Temps:          2       0       0
  8865 ;;      Totals:         2       0       0
  8866 ;;Total ram usage:        2 bytes
  8867 ;; Hardware stack levels used: 1
  8868 ;; Hardware stack levels required when called: 6
  8869 ;; This function calls:
  8870 ;;		_LcClear
  8871 ;;		_LcGotoXY
  8872 ;;		_LcLliure
  8873 ;;		_LcNewString
  8874 ;;		_LcPutChar
  8875 ;;		_TiGetTics
  8876 ;;		_TiResetTics
  8877 ;; This function is called by:
  8878 ;;		_main
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           	psect	text75
  8883  0007B8                     __ptext75:
  8884                           	callstack 0
  8885  0007B8                     _GLCDMotor:
  8886                           	callstack 24
  8887                           
  8888                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  8889                           
  8890                           ;incstack = 0
  8891  0007B8  D0FD               	goto	l4985
  8892  0007BA                     l4801:
  8893                           
  8894                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  8895  0007BA  0E11               	movlw	17
  8896  0007BC  601A               	cpfslt	GLCDMotor@length1^0,c
  8897  0007BE  D00E               	goto	l4811
  8898  0007C0  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8899  0007C2  D00C               	goto	l4811
  8900                           
  8901                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  8902  0007C4  0E00               	movlw	0
  8903  0007C6  6E52               	movwf	LcGotoXY@Row^0,c
  8904  0007C8  ECFB  F00C         	call	_LcGotoXY
  8905                           
  8906                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  8907  0007CC  5021               	movf	_menuDaltGLCD^0,w,c
  8908  0007CE  0D1D               	mullw	29
  8909  0007D0  D930               	call	PL38	;call to abstracted procedure
  8910  0007D2  EC5C  F00E         	call	_LcNewString	;wreg free
  8911                           
  8912                           ;GestioLCD.c: 53:     state = 5;
  8913  0007D6  0E05               	movlw	5
  8914  0007D8  6E20               	movwf	GLCDMotor@state^0,c
  8915                           
  8916                           ;GestioLCD.c: 54:    }
  8917  0007DA  0C05               	retlw	5
  8918  0007DC                     l4811:
  8919  0007DC  0E10               	movlw	16
  8920  0007DE  641A               	cpfsgt	GLCDMotor@length1^0,c
  8921  0007E0  0C10               	retlw	16
  8922  0007E2  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8923  0007E4  0C10               	retlw	16
  8924  0007E6                     u4390:
  8925                           
  8926                           ;GestioLCD.c: 56:     state++;
  8927  0007E6  2A20               	incf	GLCDMotor@state^0,f,c
  8928  0007E8  0012               	return	
  8929  0007EA                     l4817:
  8930                           
  8931                           ;GestioLCD.c: 60:    if (j>=16) {
  8932  0007EA  0E0F               	movlw	15
  8933  0007EC  641F               	cpfsgt	GLCDMotor@j^0,c
  8934  0007EE  D012               	goto	l4831
  8935                           
  8936                           ;GestioLCD.c: 61:     min1++;
  8937  0007F0  2A1E               	incf	GLCDMotor@min1^0,f,c
  8938                           
  8939                           ;GestioLCD.c: 62:     max1++;
  8940  0007F2  2A65               	incf	GLCDMotor@max1^0,f,c
  8941                           
  8942                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  8943  0007F4  D905               	call	PL2	;call to abstracted procedure
  8944  0007F6  5065               	movf	GLCDMotor@max1^0,w,c
  8945  0007F8  D90E               	call	PL4	;call to abstracted procedure
  8946  0007FA  E101               	bnz	l4825
  8947  0007FC  6A65               	clrf	GLCDMotor@max1^0,c
  8948  0007FE                     l4825:
  8949                           
  8950                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  8951  0007FE  D900               	call	PL2	;call to abstracted procedure
  8952  000800  501E               	movf	GLCDMotor@min1^0,w,c
  8953  000802  D909               	call	PL4	;call to abstracted procedure
  8954  000804  E101               	bnz	l930
  8955  000806  6A1E               	clrf	GLCDMotor@min1^0,c
  8956  000808                     l930:
  8957                           
  8958                           ;GestioLCD.c: 65:     j=0;
  8959  000808  6A1F               	clrf	GLCDMotor@j^0,c
  8960                           
  8961                           ;GestioLCD.c: 66:     k1=min1;
  8962  00080A  C01E  F01C         	movff	GLCDMotor@min1,GLCDMotor@k1
  8963                           
  8964                           ;GestioLCD.c: 67:     state = 6;
  8965  00080E  0E06               	movlw	6
  8966  000810  6E20               	movwf	GLCDMotor@state^0,c
  8967                           
  8968                           ;GestioLCD.c: 68:    }
  8969  000812  0C06               	retlw	6
  8970  000814                     l4831:
  8971  000814  0E10               	movlw	16
  8972  000816  601F               	cpfslt	GLCDMotor@j^0,c
  8973  000818  0C10               	retlw	16
  8974                           
  8975                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  8976  00081A  0E00               	movlw	0
  8977  00081C  6E52               	movwf	LcGotoXY@Row^0,c
  8978  00081E  501F               	movf	GLCDMotor@j^0,w,c
  8979  000820  ECFB  F00C         	call	_LcGotoXY
  8980                           
  8981                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  8982  000824  D8ED               	call	PL2	;call to abstracted procedure
  8983  000826  501C               	movf	GLCDMotor@k1^0,w,c
  8984  000828  D8F6               	call	PL4	;call to abstracted procedure
  8985  00082A  EC25  F00C         	call	_LcPutChar
  8986                           
  8987                           ;GestioLCD.c: 72:     j++;
  8988  00082E  2A1F               	incf	GLCDMotor@j^0,f,c
  8989                           
  8990                           ;GestioLCD.c: 73:     k1++;
  8991  000830  2A1C               	incf	GLCDMotor@k1^0,f,c
  8992                           
  8993                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  8994  000832  D8E6               	call	PL2	;call to abstracted procedure
  8995  000834  501C               	movf	GLCDMotor@k1^0,w,c
  8996  000836  D8EF               	call	PL4	;call to abstracted procedure
  8997  000838  B4D8               	btfsc	status,2,c
  8998  00083A  6A1C               	clrf	GLCDMotor@k1^0,c
  8999  00083C  0012               	return	
  9000  00083E                     l4845:
  9001                           
  9002                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  9003  00083E  0E04               	movlw	4
  9004  000840  6021               	cpfslt	_menuDaltGLCD^0,c
  9005  000842  D010               	goto	u4490
  9006  000844  D7D0               	goto	u4390
  9007  000846                     u4460:
  9008                           
  9009                           ;GestioLCD.c: 82:     state = 0;
  9010  000846  6A20               	clrf	GLCDMotor@state^0,c
  9011  000848  0012               	return	
  9012  00084A                     l4853:
  9013                           
  9014                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  9015  00084A  EC62  F00E         	call	_LcLliure	;wreg free
  9016  00084E  E306               	bnc	l4859
  9017  000850  0E04               	movlw	4
  9018  000852  6021               	cpfslt	_menuDaltGLCD^0,c
  9019  000854  D003               	goto	l4859
  9020                           
  9021                           ;GestioLCD.c: 87:     state = 7;
  9022  000856  0E07               	movlw	7
  9023  000858  6E20               	movwf	GLCDMotor@state^0,c
  9024                           
  9025                           ;GestioLCD.c: 88:    }
  9026  00085A  0C07               	retlw	7
  9027  00085C                     l4859:
  9028  00085C  EC62  F00E         	call	_LcLliure	;wreg free
  9029  000860  A0D8               	btfss	status,0,c
  9030  000862  0012               	return	
  9031  000864                     u4490:
  9032  000864  0E03               	movlw	3
  9033  000866  6421               	cpfsgt	_menuDaltGLCD^0,c
  9034  000868  0C03               	retlw	3
  9035  00086A  D7ED               	goto	u4460
  9036  00086C                     l942:
  9037                           
  9038                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  9039  00086C  B077               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9040  00086E  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9041  000870  0012               	return	
  9042                           
  9043                           ;GestioLCD.c: 95:     length1 = 0;
  9044  000872  6A1A               	clrf	GLCDMotor@length1^0,c
  9045                           
  9046                           ;GestioLCD.c: 96:     length2 = 0;
  9047  000874  6A19               	clrf	GLCDMotor@length2^0,c
  9048                           
  9049                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  9050  000876  0E00               	movlw	0
  9051  000878  6E52               	movwf	LcGotoXY@Row^0,c
  9052  00087A  ECFB  F00C         	call	_LcGotoXY
  9053                           
  9054                           ;GestioLCD.c: 98:     min1 = 0;
  9055  00087E  6A1E               	clrf	GLCDMotor@min1^0,c
  9056                           
  9057                           ;GestioLCD.c: 99:     max1 = 15;
  9058  000880  0E0F               	movlw	15
  9059  000882  6E65               	movwf	GLCDMotor@max1^0,c
  9060                           
  9061                           ;GestioLCD.c: 100:     min2 = 0;
  9062  000884  6A1D               	clrf	GLCDMotor@min2^0,c
  9063                           
  9064                           ;GestioLCD.c: 101:     max2 = 15;
  9065  000886  0E0F               	movlw	15
  9066  000888  6E64               	movwf	GLCDMotor@max2^0,c
  9067                           
  9068                           ;GestioLCD.c: 102:     j = 0;
  9069  00088A  6A1F               	clrf	GLCDMotor@j^0,c
  9070                           
  9071                           ;GestioLCD.c: 103:     k1 = 0;
  9072  00088C  6A1C               	clrf	GLCDMotor@k1^0,c
  9073                           
  9074                           ;GestioLCD.c: 104:     k2 = 0;
  9075  00088E  6A1B               	clrf	GLCDMotor@k2^0,c
  9076                           
  9077                           ;GestioLCD.c: 105:     newString = 0;
  9078  000890  9077               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  9079  000892  D7A9               	goto	u4390
  9080  000894                     l4889:
  9081                           
  9082                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  9083  000894  D8B5               	call	PL2	;call to abstracted procedure
  9084  000896  501A               	movf	GLCDMotor@length1^0,w,c
  9085  000898  D8BE               	call	PL4	;call to abstracted procedure
  9086  00089A  E104               	bnz	l4895
  9087  00089C  0E03               	movlw	3
  9088  00089E  6421               	cpfsgt	_menuDaltGLCD^0,c
  9089  0008A0  D001               	goto	l4895
  9090  0008A2  D7A1               	goto	u4390
  9091  0008A4                     l4895:
  9092  0008A4  D8AD               	call	PL2	;call to abstracted procedure
  9093  0008A6  501A               	movf	GLCDMotor@length1^0,w,c
  9094  0008A8  D8B6               	call	PL4	;call to abstracted procedure
  9095  0008AA  E002               	bz	l4899
  9096                           
  9097                           ;GestioLCD.c: 114:     length1++;
  9098  0008AC  2A1A               	incf	GLCDMotor@length1^0,f,c
  9099                           
  9100                           ;GestioLCD.c: 115:    }
  9101  0008AE  0012               	return	
  9102  0008B0                     l4899:
  9103  0008B0  0E04               	movlw	4
  9104  0008B2  6021               	cpfslt	_menuDaltGLCD^0,c
  9105  0008B4  0C04               	retlw	4
  9106  0008B6  D8A4               	call	PL2	;call to abstracted procedure
  9107  0008B8  501A               	movf	GLCDMotor@length1^0,w,c
  9108  0008BA  D8AD               	call	PL4	;call to abstracted procedure
  9109  0008BC  A4D8               	btfss	status,2,c
  9110  0008BE  0012               	return	
  9111                           
  9112                           ;GestioLCD.c: 117:     state = 13;
  9113  0008C0  0E0D               	movlw	13
  9114  0008C2  6E20               	movwf	GLCDMotor@state^0,c
  9115  0008C4  0C0D               	retlw	13
  9116  0008C6                     l4905:
  9117                           
  9118                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  9119  0008C6  0E11               	movlw	17
  9120  0008C8  6019               	cpfslt	GLCDMotor@length2^0,c
  9121  0008CA  D010               	goto	l4915
  9122  0008CC  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9123  0008CE  D00E               	goto	l4915
  9124                           
  9125                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  9126  0008D0  ECC1  F003         	call	PL34	;call to abstracted procedure
  9127  0008D4  ECFB  F00C         	call	_LcGotoXY
  9128                           
  9129                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  9130  0008D8  5021               	movf	_menuDaltGLCD^0,w,c
  9131  0008DA  0D1D               	mullw	29
  9132  0008DC  0E1D               	movlw	29
  9133  0008DE  26F3               	addwf	243,f,c
  9134  0008E0  0E00               	movlw	0
  9135  0008E2  22F4               	addwfc	244,f,c
  9136  0008E4  D8A6               	call	PL38	;call to abstracted procedure
  9137  0008E6  EC5C  F00E         	call	_LcNewString	;wreg free
  9138  0008EA  D77D               	goto	u4390
  9139  0008EC                     l4915:
  9140  0008EC  0E10               	movlw	16
  9141  0008EE  6419               	cpfsgt	GLCDMotor@length2^0,c
  9142  0008F0  0C10               	retlw	16
  9143  0008F2  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9144  0008F4  0C10               	retlw	16
  9145                           
  9146                           ;GestioLCD.c: 127:     state = 9;
  9147  0008F6  0E09               	movlw	9
  9148  0008F8  6E20               	movwf	GLCDMotor@state^0,c
  9149  0008FA  0C09               	retlw	9
  9150  0008FC                     l4921:
  9151                           
  9152                           ;GestioLCD.c: 131:    if (j<16) {
  9153  0008FC  0E10               	movlw	16
  9154  0008FE  601F               	cpfslt	GLCDMotor@j^0,c
  9155  000900  D014               	goto	l4935
  9156                           
  9157                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  9158  000902  0E01               	movlw	1
  9159  000904  6E52               	movwf	LcGotoXY@Row^0,c
  9160  000906  501F               	movf	GLCDMotor@j^0,w,c
  9161  000908  ECFB  F00C         	call	_LcGotoXY
  9162                           
  9163                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  9164  00090C  D879               	call	PL2	;call to abstracted procedure
  9165  00090E  501B               	movf	GLCDMotor@k2^0,w,c
  9166  000910  D88C               	call	PL6	;call to abstracted procedure
  9167  000912  D881               	call	PL4	;call to abstracted procedure
  9168  000914  EC25  F00C         	call	_LcPutChar
  9169                           
  9170                           ;GestioLCD.c: 134:     j++;
  9171  000918  2A1F               	incf	GLCDMotor@j^0,f,c
  9172                           
  9173                           ;GestioLCD.c: 135:     k2++;
  9174  00091A  2A1B               	incf	GLCDMotor@k2^0,f,c
  9175                           
  9176                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  9177  00091C  D871               	call	PL2	;call to abstracted procedure
  9178  00091E  501B               	movf	GLCDMotor@k2^0,w,c
  9179  000920  D884               	call	PL6	;call to abstracted procedure
  9180  000922  D879               	call	PL4	;call to abstracted procedure
  9181  000924  B4D8               	btfsc	status,2,c
  9182  000926  6A1B               	clrf	GLCDMotor@k2^0,c
  9183  000928  0012               	return	
  9184  00092A                     l4935:
  9185  00092A  0E0F               	movlw	15
  9186  00092C  641F               	cpfsgt	GLCDMotor@j^0,c
  9187  00092E  0C0F               	retlw	15
  9188                           
  9189                           ;GestioLCD.c: 139:     min2++;
  9190  000930  2A1D               	incf	GLCDMotor@min2^0,f,c
  9191                           
  9192                           ;GestioLCD.c: 140:     max2++;
  9193  000932  2A64               	incf	GLCDMotor@max2^0,f,c
  9194                           
  9195                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  9196  000934  D865               	call	PL2	;call to abstracted procedure
  9197  000936  5064               	movf	GLCDMotor@max2^0,w,c
  9198  000938  D878               	call	PL6	;call to abstracted procedure
  9199  00093A  D86D               	call	PL4	;call to abstracted procedure
  9200  00093C  E101               	bnz	l4943
  9201  00093E  6A64               	clrf	GLCDMotor@max2^0,c
  9202  000940                     l4943:
  9203                           
  9204                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  9205  000940  D85F               	call	PL2	;call to abstracted procedure
  9206  000942  501D               	movf	GLCDMotor@min2^0,w,c
  9207  000944  D872               	call	PL6	;call to abstracted procedure
  9208  000946  D867               	call	PL4	;call to abstracted procedure
  9209  000948  E101               	bnz	l960
  9210  00094A  6A1D               	clrf	GLCDMotor@min2^0,c
  9211  00094C                     l960:
  9212                           
  9213                           ;GestioLCD.c: 143:     j=0;
  9214  00094C  6A1F               	clrf	GLCDMotor@j^0,c
  9215                           
  9216                           ;GestioLCD.c: 144:     k2=min2;
  9217  00094E  C01D  F01B         	movff	GLCDMotor@min2,GLCDMotor@k2
  9218  000952  D749               	goto	u4390
  9219  000954                     l4949:
  9220                           
  9221                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  9222  000954  5022               	movf	_timerGLCD^0,w,c
  9223  000956  EC52  F00D         	call	_TiGetTics
  9224  00095A  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  9225  00095C  D00A               	goto	l962
  9226  00095E  D870               	call	PL70	;call to abstracted procedure
  9227  000960  E308               	bnc	l962
  9228  000962  A077               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9229  000964  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9230  000966  D005               	goto	l962
  9231                           
  9232                           ;GestioLCD.c: 150:     LcClear();
  9233  000968  EC89  F00D         	call	_LcClear	;wreg free
  9234  00096C                     l4957:
  9235                           
  9236                           ;GestioLCD.c: 151:     state = 2;
  9237  00096C  0E02               	movlw	2
  9238  00096E  6E20               	movwf	GLCDMotor@state^0,c
  9239                           
  9240                           ;GestioLCD.c: 152:    }
  9241  000970  0C02               	retlw	2
  9242  000972                     l962:
  9243  000972  B077               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9244  000974  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9245  000976  0012               	return	
  9246                           
  9247                           ;GestioLCD.c: 154:     LcClear();
  9248  000978  EC89  F00D         	call	_LcClear	;wreg free
  9249  00097C  D764               	goto	u4460
  9250  00097E                     l4965:
  9251                           
  9252                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9253  00097E  5022               	movf	_timerGLCD^0,w,c
  9254  000980  ECD6  F00D         	call	_TiResetTics
  9255  000984  D730               	goto	u4390
  9256  000986                     l4969:
  9257                           
  9258                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9259  000986  EC62  F00E         	call	_LcLliure	;wreg free
  9260  00098A  A0D8               	btfss	status,0,c
  9261  00098C  0012               	return	
  9262                           
  9263                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9264  00098E  5022               	movf	_timerGLCD^0,w,c
  9265  000990  ECD6  F00D         	call	_TiResetTics
  9266                           
  9267                           ;GestioLCD.c: 165:     state = 11;
  9268  000994  0E0B               	movlw	11
  9269  000996  6E20               	movwf	GLCDMotor@state^0,c
  9270  000998  0C0B               	retlw	11
  9271  00099A                     l4975:
  9272                           
  9273                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  9274  00099A  D832               	call	PL2	;call to abstracted procedure
  9275  00099C  5019               	movf	GLCDMotor@length2^0,w,c
  9276  00099E  D845               	call	PL6	;call to abstracted procedure
  9277  0009A0  D83A               	call	PL4	;call to abstracted procedure
  9278  0009A2  E002               	bz	l4979
  9279                           
  9280                           ;GestioLCD.c: 170:     length2++;
  9281  0009A4  2A19               	incf	GLCDMotor@length2^0,f,c
  9282                           
  9283                           ;GestioLCD.c: 171:    }
  9284  0009A6  0012               	return	
  9285  0009A8                     l4979:
  9286  0009A8  D82B               	call	PL2	;call to abstracted procedure
  9287  0009AA  5019               	movf	GLCDMotor@length2^0,w,c
  9288  0009AC  D83E               	call	PL6	;call to abstracted procedure
  9289  0009AE  D833               	call	PL4	;call to abstracted procedure
  9290  0009B0  E0DD               	bz	l4957
  9291  0009B2  0012               	return	
  9292  0009B4                     l4985:
  9293  0009B4  5020               	movf	GLCDMotor@state^0,w,c
  9294  0009B6  6E59               	movwf	??_GLCDMotor^0,c
  9295  0009B8  6A5A               	clrf	(??_GLCDMotor+1)^0,c
  9296                           
  9297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9298                           ; Switch size 1, requested type "space"
  9299                           ; Number of cases is 1, Range of values is 0 to 0
  9300                           ; switch strategies available:
  9301                           ; Name         Instructions Cycles
  9302                           ; simple_byte            4     3 (average)
  9303                           ;	Chosen strategy is simple_byte
  9304  0009BA  505A               	movf	(??_GLCDMotor+1)^0,w,c
  9305  0009BC  A4D8               	btfss	status,2,c
  9306  0009BE  0012               	return	
  9307                           
  9308                           ; Switch size 1, requested type "space"
  9309                           ; Number of cases is 12, Range of values is 0 to 13
  9310                           ; switch strategies available:
  9311                           ; Name         Instructions Cycles
  9312                           ; simple_byte           37    19 (average)
  9313                           ;	Chosen strategy is simple_byte
  9314  0009C0  5059               	movf	??_GLCDMotor^0,w,c
  9315  0009C2  E101 D753          	bz	l942
  9316  0009C6  0A01               	xorlw	1	; case 1
  9317  0009C8  E101 D764          	bz	l4889
  9318  0009CC  0A03               	xorlw	3	; case 2
  9319  0009CE  E101 D6F4          	bz	l4801
  9320  0009D2  0A01               	xorlw	1	; case 3
  9321  0009D4  E101 D709          	bz	l4817
  9322  0009D8  0A06               	xorlw	6	; case 5
  9323  0009DA  E101 D736          	bz	l4853
  9324  0009DE  0A03               	xorlw	3	; case 6
  9325  0009E0  E101 D72D          	bz	l4845
  9326  0009E4  0A01               	xorlw	1	; case 7
  9327  0009E6  E101 D76E          	bz	l4905
  9328  0009EA  0A0F               	xorlw	15	; case 8
  9329  0009EC  E0CC               	bz	l4969
  9330  0009EE  0A01               	xorlw	1	; case 9
  9331  0009F0  E085               	bz	l4921
  9332  0009F2  0A03               	xorlw	3	; case 10
  9333  0009F4  E0C4               	bz	l4965
  9334  0009F6  0A01               	xorlw	1	; case 11
  9335  0009F8  E0AD               	bz	l4949
  9336  0009FA  0A06               	xorlw	6	; case 13
  9337  0009FC  E0CE               	bz	l4975
  9338  0009FE  0012               	return		;funcret
  9339  000A00                     __end_of_GLCDMotor:
  9340                           	callstack 0
  9341  000A00                     PL2:
  9342                           	callstack 24
  9343  000A00  5021               	movf	_menuDaltGLCD^0,w,c
  9344  000A02  0D1D               	mullw	29
  9345  000A04  0EFF               	movlw	low _menuList
  9346  000A06  6E59               	movwf	??_GLCDMotor^0,c
  9347  000A08  0E1E               	movlw	high _menuList
  9348  000A0A  6E5A               	movwf	(??_GLCDMotor+1)^0,c
  9349  000A0C  50F3               	movf	243,w,c
  9350  000A0E  2659               	addwf	??_GLCDMotor^0,f,c
  9351  000A10  50F4               	movf	244,w,c
  9352  000A12  225A               	addwfc	(??_GLCDMotor+1)^0,f,c
  9353  000A14  0012               	return	
  9354  000A16                     __end_ofPL2:
  9355                           	callstack 0
  9356  000A16                     PL4:
  9357                           	callstack 24
  9358  000A16  2659               	addwf	??_GLCDMotor^0,f,c
  9359  000A18  0E00               	movlw	0
  9360  000A1A  225A               	addwfc	(??_GLCDMotor+1)^0,f,c
  9361  000A1C  C059  FFF6         	movff	??_GLCDMotor,tblptrl
  9362  000A20  C05A  FFF7         	movff	??_GLCDMotor+1,tblptrh
  9363  000A24                     	if	0	;tblptru may be non-zero
  9364  000A24                     	endif
  9365  000A24                     	if	0	;tblptru may be non-zero
  9366  000A24                     	endif
  9367  000A24  0008               	tblrd		*
  9368  000A26  50F5               	movf	tablat,w,c
  9369  000A28  0012               	return	
  9370  000A2A                     __end_ofPL4:
  9371                           	callstack 0
  9372  000A2A                     PL6:
  9373                           	callstack 24
  9374  000A2A  2659               	addwf	??_GLCDMotor^0,f,c
  9375  000A2C  0E00               	movlw	0
  9376  000A2E  225A               	addwfc	(??_GLCDMotor+1)^0,f,c
  9377  000A30  0C1D               	retlw	29
  9378  000A32                     __end_ofPL6:
  9379                           	callstack 0
  9380  000A32                     PL38:
  9381                           	callstack 24
  9382  000A32  0EFF               	movlw	low _menuList
  9383  000A34  24F3               	addwf	243,w,c
  9384  000A36  6E4D               	movwf	LcNewString@new_s^0,c
  9385  000A38  0E1E               	movlw	high _menuList
  9386  000A3A  20F4               	addwfc	prodh,w,c
  9387  000A3C  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  9388  000A3E  0012               	return	
  9389  000A40                     __end_ofPL38:
  9390                           	callstack 0
  9391  000A40                     PL70:
  9392                           	callstack 27
  9393  000A40  0EB5               	movlw	181
  9394  000A42  5C4A               	subwf	?_TiGetTics^0,w,c
  9395  000A44  0E04               	movlw	4
  9396  000A46  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  9397  000A48  0012               	return	
  9398  000A4A                     __end_ofPL70:
  9399                           	callstack 0
  9400                           
  9401 ;; *************** function _LcPutChar *****************
  9402 ;; Defined at:
  9403 ;;		line 120 in file "LcTLCD.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;  c               1    wreg     unsigned char 
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;  c               1   19[COMRAM] unsigned char 
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  1    wreg      void 
  9410 ;; Registers used:
  9411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMRAM   BANK0   BANK1
  9417 ;;      Params:         0       0       0
  9418 ;;      Locals:         1       0       0
  9419 ;;      Temps:          0       0       0
  9420 ;;      Totals:         1       0       0
  9421 ;;Total ram usage:        1 bytes
  9422 ;; Hardware stack levels used: 1
  9423 ;; Hardware stack levels required when called: 5
  9424 ;; This function calls:
  9425 ;;		_CantaData
  9426 ;;		_LcGotoXY
  9427 ;;		_WaitForBusy
  9428 ;; This function is called by:
  9429 ;;		_LcLCD
  9430 ;;		_menu
  9431 ;;		_GLCDMotor
  9432 ;;		_motorSIO
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           	psect	text76
  9437  00184A                     __ptext76:
  9438                           	callstack 0
  9439  00184A                     _LcPutChar:
  9440                           	callstack 24
  9441                           
  9442                           ;incstack = 0
  9443                           ;LcPutChar@c stored from wreg
  9444  00184A  6E58               	movwf	LcPutChar@c^0,c
  9445                           
  9446                           ;LcTLCD.c: 122:  WaitForBusy(); CantaData(c);
  9447  00184C  EC8C  F00C         	call	_WaitForBusy	;wreg free
  9448  001850  5058               	movf	LcPutChar@c^0,w,c
  9449  001852  ECAB  F00C         	call	_CantaData
  9450                           
  9451                           ;LcTLCD.c: 124:  ++ColumnAct;
  9452  001856  2A3E               	incf	_ColumnAct^0,f,c
  9453                           
  9454                           ;LcTLCD.c: 126:  if (Rows == 2) {
  9455  001858  0E02               	movlw	2
  9456  00185A  1840               	xorwf	_Rows^0,w,c
  9457  00185C  E10C               	bnz	l4359
  9458                           
  9459                           ;LcTLCD.c: 127:   if (ColumnAct >= 40) {
  9460  00185E  0E27               	movlw	39
  9461  001860  643E               	cpfsgt	_ColumnAct^0,c
  9462  001862  D009               	goto	l4359
  9463                           
  9464                           ;LcTLCD.c: 128:    ColumnAct = 0;
  9465  001864  6A3E               	clrf	_ColumnAct^0,c
  9466                           
  9467                           ;LcTLCD.c: 129:    if (++RowAct >= 2) RowAct = 0;
  9468  001866  2A3F               	incf	_RowAct^0,f,c
  9469  001868  0E01               	movlw	1
  9470  00186A  643F               	cpfsgt	_RowAct^0,c
  9471  00186C  D001               	goto	l4357
  9472  00186E  6A3F               	clrf	_RowAct^0,c
  9473  001870                     l4357:
  9474                           
  9475                           ;LcTLCD.c: 130:    LcGotoXY(ColumnAct, RowAct);
  9476  001870  D80C               	call	PL74	;call to abstracted procedure
  9477  001872  ECFB  F00C         	call	_LcGotoXY
  9478  001876                     l4359:
  9479                           
  9480                           ;LcTLCD.c: 141:  if (RowAct == 1) {
  9481  001876  043F               	decf	_RowAct^0,w,c
  9482  001878  A4D8               	btfss	status,2,c
  9483  00187A  0012               	return	
  9484                           
  9485                           ;LcTLCD.c: 142:   if (ColumnAct >= 40) ColumnAct = 0;
  9486  00187C  0E27               	movlw	39
  9487  00187E  643E               	cpfsgt	_ColumnAct^0,c
  9488  001880  D001               	goto	l4365
  9489  001882  6A3E               	clrf	_ColumnAct^0,c
  9490  001884                     l4365:
  9491                           
  9492                           ;LcTLCD.c: 143:   LcGotoXY(ColumnAct, RowAct);
  9493  001884  D802               	call	PL74	;call to abstracted procedure
  9494  001886  EFFB  F00C         	goto	_LcGotoXY
  9495  00188A                     __end_of_LcPutChar:
  9496                           	callstack 0
  9497  00188A                     PL74:
  9498                           	callstack 24
  9499  00188A  C03F  F052         	movff	_RowAct,LcGotoXY@Row
  9500  00188E  503E               	movf	_ColumnAct^0,w,c
  9501  001890  0012               	return	
  9502  001892                     __end_ofPL74:
  9503                           	callstack 0
  9504                           
  9505 ;; *************** function _CantaData *****************
  9506 ;; Defined at:
  9507 ;;		line 182 in file "LcTLCD.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  Data            1    wreg     unsigned char 
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;  Data            1    7[COMRAM] unsigned char 
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  1    wreg      void 
  9514 ;; Registers used:
  9515 ;;		wreg, status,2, status,0, cstack
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMRAM   BANK0   BANK1
  9521 ;;      Params:         0       0       0
  9522 ;;      Locals:         1       0       0
  9523 ;;      Temps:          0       0       0
  9524 ;;      Totals:         1       0       0
  9525 ;;Total ram usage:        1 bytes
  9526 ;; Hardware stack levels used: 1
  9527 ;; Hardware stack levels required when called: 3
  9528 ;; This function calls:
  9529 ;;		_CantaPartAlta
  9530 ;;		_CantaPartBaixa
  9531 ;; This function is called by:
  9532 ;;		_LcPutChar
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text77
  9537  001956                     __ptext77:
  9538                           	callstack 0
  9539  001956                     _CantaData:
  9540                           	callstack 25
  9541                           
  9542                           ;incstack = 0
  9543                           ;CantaData@Data stored from wreg
  9544  001956  6E4C               	movwf	CantaData@Data^0,c
  9545                           
  9546                           ;LcTLCD.c: 183:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9547  001958  9694               	bcf	148,3,c	;volatile
  9548  00195A  9494               	bcf	148,2,c	;volatile
  9549  00195C  9294               	bcf	148,1,c	;volatile
  9550  00195E  9094               	bcf	148,0,c	;volatile
  9551                           
  9552                           ;LcTLCD.c: 184:  (LATCbits.LATC5 = 1);
  9553  001960  8A8B               	bsf	139,5,c	;volatile
  9554                           
  9555                           ;LcTLCD.c: 185:  (LATDbits.LATD7 = 0);
  9556  001962  9E8C               	bcf	140,7,c	;volatile
  9557                           
  9558                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9559  001964  888B               	bsf	139,4,c	;volatile
  9560                           
  9561                           ;LcTLCD.c: 187:  CantaPartAlta(Data);
  9562  001966  504C               	movf	CantaData@Data^0,w,c
  9563  001968  EC9E  F00B         	call	_CantaPartAlta
  9564                           
  9565                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 1);
  9566                           
  9567                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 0);
  9568                           
  9569                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  9570                           
  9571                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9572  00196C  D80B               	call	PL54	;call to abstracted procedure
  9573                           
  9574                           ;LcTLCD.c: 192:  CantaPartBaixa(Data);
  9575  00196E  504C               	movf	CantaData@Data^0,w,c
  9576  001970  EC6B  F00B         	call	_CantaPartBaixa
  9577                           
  9578                           ;LcTLCD.c: 193:  (LATCbits.LATC4 = 1);
  9579                           
  9580                           ;LcTLCD.c: 194:  (LATCbits.LATC4 = 0);
  9581                           
  9582                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9583  001974  D000               	goto	PL32	;call to abstracted procedure
  9584  001976                     __end_of_CantaData:
  9585                           	callstack 0
  9586  001976                     PL32:
  9587                           	callstack 24
  9588  001976  888B               	bsf	139,4,c	;volatile
  9589  001978  988B               	bcf	139,4,c	;volatile
  9590  00197A  8694               	bsf	148,3,c	;volatile
  9591  00197C  8494               	bsf	148,2,c	;volatile
  9592  00197E  8294               	bsf	148,1,c	;volatile
  9593  001980  8094               	bsf	148,0,c	;volatile
  9594  001982  0012               	return		;funcret
  9595  001984                     __end_ofPL32:
  9596                           	callstack 0
  9597  001984                     PL54:
  9598                           	callstack 24
  9599  001984  888B               	bsf	139,4,c	;volatile
  9600  001986  988B               	bcf	139,4,c	;volatile
  9601  001988  988B               	bcf	139,4,c	;volatile
  9602  00198A  888B               	bsf	139,4,c	;volatile
  9603  00198C  0012               	return	
  9604  00198E                     __end_ofPL54:
  9605                           	callstack 0
  9606                           
  9607 ;; *************** function _LcNewString *****************
  9608 ;; Defined at:
  9609 ;;		line 227 in file "LcTLCD.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9612 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
  9613 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(144), 
  9614 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  9615 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;		None
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  1    wreg      void 
  9620 ;; Registers used:
  9621 ;;		wreg, status,2, status,0
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMRAM   BANK0   BANK1
  9627 ;;      Params:         2       0       0
  9628 ;;      Locals:         0       0       0
  9629 ;;      Temps:          0       0       0
  9630 ;;      Totals:         2       0       0
  9631 ;;Total ram usage:        2 bytes
  9632 ;; Hardware stack levels used: 1
  9633 ;; Hardware stack levels required when called: 2
  9634 ;; This function calls:
  9635 ;;		Nothing
  9636 ;; This function is called by:
  9637 ;;		_menu
  9638 ;;		_GLCDMotor
  9639 ;;		_motorJoc
  9640 ;;		_motorSIO
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text78
  9645  001CB8                     __ptext78:
  9646                           	callstack 0
  9647  001CB8                     _LcNewString:
  9648                           	callstack 27
  9649                           
  9650                           ;LcTLCD.c: 228:     s_ptr = new_s;
  9651                           
  9652                           ;incstack = 0
  9653  001CB8  C04D  F00D         	movff	LcNewString@new_s,_s_ptr
  9654  001CBC  C04E  F00E         	movff	LcNewString@new_s+1,_s_ptr+1
  9655                           
  9656                           ;LcTLCD.c: 229:     nou_s = 1;
  9657  001CC0  8278               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9658  001CC2  0012               	return		;funcret
  9659  001CC4                     __end_of_LcNewString:
  9660                           	callstack 0
  9661                           
  9662 ;; *************** function _LcLliure *****************
  9663 ;; Defined at:
  9664 ;;		line 243 in file "LcTLCD.c"
  9665 ;; Parameters:    Size  Location     Type
  9666 ;;		None
  9667 ;; Auto vars:     Size  Location     Type
  9668 ;;		None
  9669 ;; Return value:  Size  Location     Type
  9670 ;;		None               void
  9671 ;; Registers used:
  9672 ;;		status,0
  9673 ;; Tracked objects:
  9674 ;;		On entry : 0/0
  9675 ;;		On exit  : 0/0
  9676 ;;		Unchanged: 0/0
  9677 ;; Data sizes:     COMRAM   BANK0   BANK1
  9678 ;;      Params:         0       0       0
  9679 ;;      Locals:         0       0       0
  9680 ;;      Temps:          0       0       0
  9681 ;;      Totals:         0       0       0
  9682 ;;Total ram usage:        0 bytes
  9683 ;; Hardware stack levels used: 1
  9684 ;; Hardware stack levels required when called: 2
  9685 ;; This function calls:
  9686 ;;		Nothing
  9687 ;; This function is called by:
  9688 ;;		_menu
  9689 ;;		_GLCDMotor
  9690 ;;		_motorJoc
  9691 ;;		_motorSIO
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text79
  9696  001CC4                     __ptext79:
  9697                           	callstack 0
  9698  001CC4                     _LcLliure:
  9699                           	callstack 27
  9700                           
  9701                           ;LcTLCD.c: 244:     return !nou_s;
  9702                           
  9703                           ;incstack = 0
  9704  001CC4  A278               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9705  001CC6  D002               	goto	l2141
  9706  001CC8  90D8               	bcf	status,0,c
  9707  001CCA  0012               	return	
  9708  001CCC                     l2141:
  9709  001CCC  80D8               	bsf	status,0,c
  9710  001CCE  0012               	return		;funcret
  9711  001CD0                     __end_of_LcLliure:
  9712                           	callstack 0
  9713                           
  9714 ;; *************** function _LcClear *****************
  9715 ;; Defined at:
  9716 ;;		line 84 in file "LcTLCD.c"
  9717 ;; Parameters:    Size  Location     Type
  9718 ;;		None
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;		None
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1
  9730 ;;      Params:         0       0       0
  9731 ;;      Locals:         0       0       0
  9732 ;;      Temps:          0       0       0
  9733 ;;      Totals:         0       0       0
  9734 ;;Total ram usage:        0 bytes
  9735 ;; Hardware stack levels used: 1
  9736 ;; Hardware stack levels required when called: 5
  9737 ;; This function calls:
  9738 ;;		_CantaIR
  9739 ;;		_Espera
  9740 ;;		_LcGotoXY
  9741 ;;		_WaitForBusy
  9742 ;; This function is called by:
  9743 ;;		_menu
  9744 ;;		_GLCDMotor
  9745 ;;		_motorSIO
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text80
  9750  001B12                     __ptext80:
  9751                           	callstack 0
  9752  001B12                     _LcClear:
  9753                           	callstack 24
  9754                           
  9755                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  9756                           
  9757                           ;incstack = 0
  9758  001B12  EC8C  F00C         	call	_WaitForBusy	;wreg free
  9759  001B16  0E01               	movlw	1
  9760  001B18  ECC8  F00D         	call	_CantaIR
  9761                           
  9762                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  9763  001B1C  D806               	call	PL64	;call to abstracted procedure
  9764  001B1E  EC9A  F00D         	call	_Espera
  9765                           
  9766                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  9767  001B22  0E00               	movlw	0
  9768  001B24  6E52               	movwf	LcGotoXY@Row^0,c
  9769  001B26  EFFB  F00C         	goto	_LcGotoXY
  9770  001B2A                     __end_of_LcClear:
  9771                           	callstack 0
  9772  001B2A                     PL64:
  9773                           	callstack 26
  9774  001B2A  6A52               	clrf	(Espera@ms+1)^0,c
  9775  001B2C  0E03               	movlw	3
  9776  001B2E  6E51               	movwf	Espera@ms^0,c
  9777  001B30  503D               	movf	_Timer^0,w,c
  9778  001B32  0012               	return	
  9779  001B34                     __end_ofPL64:
  9780                           	callstack 0
  9781                           
  9782 ;; *************** function _LcGotoXY *****************
  9783 ;; Defined at:
  9784 ;;		line 106 in file "LcTLCD.c"
  9785 ;; Parameters:    Size  Location     Type
  9786 ;;  Column          1    wreg     unsigned char 
  9787 ;;  Row             1   13[COMRAM] unsigned char 
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;  Column          1   18[COMRAM] unsigned char 
  9790 ;;  Fisics          2   14[COMRAM] int 
  9791 ;; Return value:  Size  Location     Type
  9792 ;;                  1    wreg      void 
  9793 ;; Registers used:
  9794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9795 ;; Tracked objects:
  9796 ;;		On entry : 0/0
  9797 ;;		On exit  : 0/0
  9798 ;;		Unchanged: 0/0
  9799 ;; Data sizes:     COMRAM   BANK0   BANK1
  9800 ;;      Params:         1       0       0
  9801 ;;      Locals:         5       0       0
  9802 ;;      Temps:          0       0       0
  9803 ;;      Totals:         6       0       0
  9804 ;;Total ram usage:        6 bytes
  9805 ;; Hardware stack levels used: 1
  9806 ;; Hardware stack levels required when called: 4
  9807 ;; This function calls:
  9808 ;;		_CantaIR
  9809 ;;		_WaitForBusy
  9810 ;; This function is called by:
  9811 ;;		_LcClear
  9812 ;;		_LcPutChar
  9813 ;;		_menu
  9814 ;;		_GLCDMotor
  9815 ;;		_motorJoc
  9816 ;;		_motorSIO
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           	psect	text81
  9821  0019F6                     __ptext81:
  9822                           	callstack 0
  9823  0019F6                     _LcGotoXY:
  9824                           	callstack 24
  9825                           
  9826                           ;incstack = 0
  9827                           ;LcGotoXY@Column stored from wreg
  9828  0019F6  6E57               	movwf	LcGotoXY@Column^0,c
  9829                           
  9830                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 111:  Fisics = Column + (!Row ? 0 : 0x40);
  9831  0019F8  5052               	movf	LcGotoXY@Row^0,w,c
  9832  0019FA  E004               	bz	l55
  9833  0019FC  6A56               	clrf	(_LcGotoXY$334+1)^0,c
  9834  0019FE  0E40               	movlw	64
  9835  001A00  6E55               	movwf	_LcGotoXY$334^0,c
  9836  001A02  D002               	goto	l4285
  9837  001A04                     l55:
  9838  001A04  6A55               	clrf	_LcGotoXY$334^0,c
  9839  001A06  6A56               	clrf	(_LcGotoXY$334+1)^0,c
  9840  001A08                     l4285:
  9841  001A08  5057               	movf	LcGotoXY@Column^0,w,c
  9842  001A0A  2455               	addwf	_LcGotoXY$334^0,w,c
  9843  001A0C  6E53               	movwf	LcGotoXY@Fisics^0,c
  9844  001A0E  0E00               	movlw	0
  9845  001A10  2056               	addwfc	(_LcGotoXY$334+1)^0,w,c
  9846  001A12  6E54               	movwf	(LcGotoXY@Fisics+1)^0,c
  9847                           
  9848                           ;LcTLCD.c: 113:  WaitForBusy();
  9849  001A14  EC8C  F00C         	call	_WaitForBusy	;wreg free
  9850                           
  9851                           ;LcTLCD.c: 114:  CantaIR(0x80 | Fisics);
  9852  001A18  5053               	movf	LcGotoXY@Fisics^0,w,c
  9853  001A1A  0980               	iorlw	128
  9854  001A1C  ECC8  F00D         	call	_CantaIR
  9855                           
  9856                           ;LcTLCD.c: 116:  RowAct = Row;
  9857  001A20  C052  F03F         	movff	LcGotoXY@Row,_RowAct
  9858                           
  9859                           ;LcTLCD.c: 117:  ColumnAct = Column;
  9860  001A24  C057  F03E         	movff	LcGotoXY@Column,_ColumnAct
  9861  001A28  0012               	return		;funcret
  9862  001A2A                     __end_of_LcGotoXY:
  9863                           	callstack 0
  9864                           
  9865 ;; *************** function _WaitForBusy *****************
  9866 ;; Defined at:
  9867 ;;		line 198 in file "LcTLCD.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;		None
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  Busy            1   12[COMRAM] unsigned char 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  1    wreg      void 
  9874 ;; Registers used:
  9875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMRAM   BANK0   BANK1
  9881 ;;      Params:         0       0       0
  9882 ;;      Locals:         1       0       0
  9883 ;;      Temps:          0       0       0
  9884 ;;      Totals:         1       0       0
  9885 ;;Total ram usage:        1 bytes
  9886 ;; Hardware stack levels used: 1
  9887 ;; Hardware stack levels required when called: 3
  9888 ;; This function calls:
  9889 ;;		_TiGetTics
  9890 ;;		_TiResetTics
  9891 ;; This function is called by:
  9892 ;;		_LcInit
  9893 ;;		_LcClear
  9894 ;;		_LcGotoXY
  9895 ;;		_LcPutChar
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           	psect	text82
  9900  001918                     __ptext82:
  9901                           	callstack 0
  9902  001918                     _WaitForBusy:
  9903                           	callstack 25
  9904                           
  9905                           ;LcTLCD.c: 199:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9906                           
  9907                           ;incstack = 0
  9908  001918  8694               	bsf	148,3,c	;volatile
  9909  00191A  8494               	bsf	148,2,c	;volatile
  9910  00191C  8294               	bsf	148,1,c	;volatile
  9911  00191E  8094               	bsf	148,0,c	;volatile
  9912                           
  9913                           ;LcTLCD.c: 200:  (LATCbits.LATC5 = 0);
  9914  001920  9A8B               	bcf	139,5,c	;volatile
  9915                           
  9916                           ;LcTLCD.c: 201:  (LATDbits.LATD7 = 1);
  9917  001922  8E8C               	bsf	140,7,c	;volatile
  9918                           
  9919                           ;LcTLCD.c: 202:  TiResetTics(Timer);
  9920  001924  503D               	movf	_Timer^0,w,c
  9921  001926  ECD6  F00D         	call	_TiResetTics
  9922  00192A                     l4253:
  9923                           
  9924                           ;LcTLCD.c: 204:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9925  00192A  888B               	bsf	139,4,c	;volatile
  9926  00192C  888B               	bsf	139,4,c	;volatile
  9927                           
  9928                           ;LcTLCD.c: 205:   Busy = (PORTCbits.RC3);
  9929  00192E  0E00               	movlw	0
  9930  001930  B682               	btfsc	130,3,c	;volatile
  9931  001932  0E01               	movlw	1
  9932  001934  6E51               	movwf	WaitForBusy@Busy^0,c
  9933                           
  9934                           ;LcTLCD.c: 206:   (LATCbits.LATC4 = 0);
  9935  001936  988B               	bcf	139,4,c	;volatile
  9936                           
  9937                           ;LcTLCD.c: 207:   (LATCbits.LATC4 = 0);
  9938  001938  988B               	bcf	139,4,c	;volatile
  9939                           
  9940                           ;LcTLCD.c: 208:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9941  00193A  888B               	bsf	139,4,c	;volatile
  9942  00193C  888B               	bsf	139,4,c	;volatile
  9943                           
  9944                           ;LcTLCD.c: 210:   (LATCbits.LATC4 = 0);
  9945  00193E  988B               	bcf	139,4,c	;volatile
  9946                           
  9947                           ;LcTLCD.c: 211:   (LATCbits.LATC4 = 0);
  9948  001940  988B               	bcf	139,4,c	;volatile
  9949                           
  9950                           ;LcTLCD.c: 212:   if (TiGetTics(Timer)) break;
  9951  001942  503D               	movf	_Timer^0,w,c
  9952  001944  EC52  F00D         	call	_TiGetTics
  9953  001948  504A               	movf	?_TiGetTics^0,w,c
  9954  00194A  104B               	iorwf	(?_TiGetTics+1)^0,w,c
  9955  00194C  E001               	bz	l4275
  9956  00194E  0012               	return	
  9957  001950                     l4275:
  9958                           
  9959                           ;LcTLCD.c: 213:  } while(Busy);
  9960  001950  5051               	movf	WaitForBusy@Busy^0,w,c
  9961  001952  E1EB               	bnz	l4253
  9962  001954  0012               	return		;funcret
  9963  001956                     __end_of_WaitForBusy:
  9964                           	callstack 0
  9965                           
  9966 ;; *************** function _CantaIR *****************
  9967 ;; Defined at:
  9968 ;;		line 166 in file "LcTLCD.c"
  9969 ;; Parameters:    Size  Location     Type
  9970 ;;  IR              1    wreg     unsigned char 
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;  IR              1    7[COMRAM] unsigned char 
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      void 
  9975 ;; Registers used:
  9976 ;;		wreg, status,2, status,0, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : 0/0
  9979 ;;		On exit  : 0/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMRAM   BANK0   BANK1
  9982 ;;      Params:         0       0       0
  9983 ;;      Locals:         1       0       0
  9984 ;;      Temps:          0       0       0
  9985 ;;      Totals:         1       0       0
  9986 ;;Total ram usage:        1 bytes
  9987 ;; Hardware stack levels used: 1
  9988 ;; Hardware stack levels required when called: 3
  9989 ;; This function calls:
  9990 ;;		_CantaPartAlta
  9991 ;;		_CantaPartBaixa
  9992 ;; This function is called by:
  9993 ;;		_LcScroll
  9994 ;;		_LcInit
  9995 ;;		_LcClear
  9996 ;;		_LcGotoXY
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           	psect	text83
 10001  001B90                     __ptext83:
 10002                           	callstack 0
 10003  001B90                     _CantaIR:
 10004                           	callstack 24
 10005                           
 10006                           ;incstack = 0
 10007                           ;CantaIR@IR stored from wreg
 10008  001B90  6E4C               	movwf	CantaIR@IR^0,c
 10009                           
 10010                           ;LcTLCD.c: 167:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10011  001B92  9694               	bcf	148,3,c	;volatile
 10012                           
 10013                           ;LcTLCD.c: 168:  (LATCbits.LATC5 = 0);
 10014                           
 10015                           ;LcTLCD.c: 169:  (LATDbits.LATD7 = 0);
 10016                           
 10017                           ;LcTLCD.c: 170:  (LATCbits.LATC4 = 1);
 10018  001B94  EC29  F00B         	call	PL40	;call to abstracted procedure
 10019                           
 10020                           ;LcTLCD.c: 171:  CantaPartAlta(IR);
 10021  001B98  504C               	movf	CantaIR@IR^0,w,c
 10022  001B9A  EC9E  F00B         	call	_CantaPartAlta
 10023                           
 10024                           ;LcTLCD.c: 172:  (LATCbits.LATC4 = 1);
 10025                           
 10026                           ;LcTLCD.c: 173:  (LATCbits.LATC4 = 0);
 10027                           
 10028                           ;LcTLCD.c: 174:  (LATCbits.LATC4 = 0);
 10029                           
 10030                           ;LcTLCD.c: 175:  (LATCbits.LATC4 = 1);
 10031  001B9E  ECC2  F00C         	call	PL54	;call to abstracted procedure
 10032                           
 10033                           ;LcTLCD.c: 176:  CantaPartBaixa(IR);
 10034  001BA2  504C               	movf	CantaIR@IR^0,w,c
 10035  001BA4  EC6B  F00B         	call	_CantaPartBaixa
 10036                           
 10037                           ;LcTLCD.c: 177:  (LATCbits.LATC4 = 1);
 10038                           
 10039                           ;LcTLCD.c: 178:  (LATCbits.LATC4 = 0);
 10040                           
 10041                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10042  001BA8  EFBB  F00C         	goto	PL32	;call to abstracted procedure
 10043  001BAC                     __end_of_CantaIR:
 10044                           	callstack 0
 10045                           
 10046 ;; *************** function _CantaPartBaixa *****************
 10047 ;; Defined at:
 10048 ;;		line 159 in file "LcTLCD.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;  c               1    wreg     unsigned char 
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;  c               1    6[COMRAM] unsigned char 
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, status,2, status,0
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1
 10062 ;;      Params:         0       0       0
 10063 ;;      Locals:         1       0       0
 10064 ;;      Temps:          1       0       0
 10065 ;;      Totals:         2       0       0
 10066 ;;Total ram usage:        2 bytes
 10067 ;; Hardware stack levels used: 1
 10068 ;; Hardware stack levels required when called: 2
 10069 ;; This function calls:
 10070 ;;		Nothing
 10071 ;; This function is called by:
 10072 ;;		_CantaIR
 10073 ;;		_CantaData
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077                           	psect	text84
 10078  0016D6                     __ptext84:
 10079                           	callstack 0
 10080  0016D6                     _CantaPartBaixa:
 10081                           	callstack 24
 10082                           
 10083                           ;incstack = 0
 10084                           ;CantaPartBaixa@c stored from wreg
 10085  0016D6  6E4B               	movwf	CantaPartBaixa@c^0,c
 10086                           
 10087                           ;LcTLCD.c: 160:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
 10088  0016D8  A64B               	btfss	CantaPartBaixa@c^0,3,c
 10089  0016DA  D003               	goto	u3640
 10090  0016DC  6A4A               	clrf	??_CantaPartBaixa^0,c
 10091  0016DE  2A4A               	incf	??_CantaPartBaixa^0,f,c
 10092  0016E0  D001               	goto	u3658
 10093  0016E2                     u3640:
 10094  0016E2  6A4A               	clrf	??_CantaPartBaixa^0,c
 10095  0016E4                     u3658:
 10096  0016E4  464A               	rlncf	??_CantaPartBaixa^0,f,c
 10097  0016E6  D825               	call	PL58	;call to abstracted procedure
 10098  0016E8  0BF7               	andlw	-9
 10099  0016EA  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10100  0016EC  6E8B               	movwf	139,c	;volatile
 10101                           
 10102                           ;LcTLCD.c: 161:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
 10103  0016EE  A44B               	btfss	CantaPartBaixa@c^0,2,c
 10104  0016F0  D003               	goto	u3660
 10105  0016F2  6A4A               	clrf	??_CantaPartBaixa^0,c
 10106  0016F4  2A4A               	incf	??_CantaPartBaixa^0,f,c
 10107  0016F6  D001               	goto	u3678
 10108  0016F8                     u3660:
 10109  0016F8  6A4A               	clrf	??_CantaPartBaixa^0,c
 10110  0016FA                     u3678:
 10111  0016FA  D81B               	call	PL58	;call to abstracted procedure
 10112  0016FC  0BFB               	andlw	-5
 10113  0016FE  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10114  001700  6E8B               	movwf	139,c	;volatile
 10115                           
 10116                           ;LcTLCD.c: 162:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
 10117  001702  A24B               	btfss	CantaPartBaixa@c^0,1,c
 10118  001704  D003               	goto	u3680
 10119  001706  6A4A               	clrf	??_CantaPartBaixa^0,c
 10120  001708  2A4A               	incf	??_CantaPartBaixa^0,f,c
 10121  00170A  D001               	goto	u3698
 10122  00170C                     u3680:
 10123  00170C  6A4A               	clrf	??_CantaPartBaixa^0,c
 10124  00170E                     u3698:
 10125  00170E  464A               	rlncf	??_CantaPartBaixa^0,f,c
 10126  001710  508B               	movf	139,w,c	;volatile
 10127  001712  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10128  001714  0BFD               	andlw	-3
 10129  001716  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10130  001718  6E8B               	movwf	139,c	;volatile
 10131                           
 10132                           ;LcTLCD.c: 163:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
 10133  00171A  A04B               	btfss	CantaPartBaixa@c^0,0,c
 10134  00171C  D003               	goto	u3700
 10135  00171E  6A4A               	clrf	??_CantaPartBaixa^0,c
 10136  001720  2A4A               	incf	??_CantaPartBaixa^0,f,c
 10137  001722  D001               	goto	u3718
 10138  001724                     u3700:
 10139  001724  6A4A               	clrf	??_CantaPartBaixa^0,c
 10140  001726                     u3718:
 10141  001726  508B               	movf	139,w,c	;volatile
 10142  001728  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10143  00172A  0BFE               	andlw	-2
 10144  00172C  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10145  00172E  6E8B               	movwf	139,c	;volatile
 10146  001730  0012               	return		;funcret
 10147  001732                     __end_of_CantaPartBaixa:
 10148                           	callstack 0
 10149  001732                     PL58:
 10150                           	callstack 24
 10151  001732  464A               	rlncf	??_CantaPartBaixa^0,f,c
 10152  001734  464A               	rlncf	??_CantaPartBaixa^0,f,c
 10153  001736  508B               	movf	139,w,c	;volatile
 10154  001738  184A               	xorwf	??_CantaPartBaixa^0,w,c
 10155  00173A  0012               	return	
 10156  00173C                     __end_ofPL58:
 10157                           	callstack 0
 10158                           
 10159 ;; *************** function _CantaPartAlta *****************
 10160 ;; Defined at:
 10161 ;;		line 152 in file "LcTLCD.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;  c               1    wreg     unsigned char 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  c               1    6[COMRAM] unsigned char 
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      void 
 10168 ;; Registers used:
 10169 ;;		wreg, status,2, status,0
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMRAM   BANK0   BANK1
 10175 ;;      Params:         0       0       0
 10176 ;;      Locals:         1       0       0
 10177 ;;      Temps:          1       0       0
 10178 ;;      Totals:         2       0       0
 10179 ;;Total ram usage:        2 bytes
 10180 ;; Hardware stack levels used: 1
 10181 ;; Hardware stack levels required when called: 2
 10182 ;; This function calls:
 10183 ;;		Nothing
 10184 ;; This function is called by:
 10185 ;;		_CantaIR
 10186 ;;		_CantaData
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text85
 10191  00173C                     __ptext85:
 10192                           	callstack 0
 10193  00173C                     _CantaPartAlta:
 10194                           	callstack 24
 10195                           
 10196                           ;incstack = 0
 10197                           ;CantaPartAlta@c stored from wreg
 10198  00173C  6E4B               	movwf	CantaPartAlta@c^0,c
 10199                           
 10200                           ;LcTLCD.c: 153:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10201  00173E  AE4B               	btfss	CantaPartAlta@c^0,7,c
 10202  001740  D003               	goto	u3560
 10203  001742  6A4A               	clrf	??_CantaPartAlta^0,c
 10204  001744  2A4A               	incf	??_CantaPartAlta^0,f,c
 10205  001746  D001               	goto	u3578
 10206  001748                     u3560:
 10207  001748  6A4A               	clrf	??_CantaPartAlta^0,c
 10208  00174A                     u3578:
 10209  00174A  464A               	rlncf	??_CantaPartAlta^0,f,c
 10210  00174C  D825               	call	PL68	;call to abstracted procedure
 10211  00174E  0BF7               	andlw	-9
 10212  001750  184A               	xorwf	??_CantaPartAlta^0,w,c
 10213  001752  6E8B               	movwf	139,c	;volatile
 10214                           
 10215                           ;LcTLCD.c: 154:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10216  001754  AC4B               	btfss	CantaPartAlta@c^0,6,c
 10217  001756  D003               	goto	u3580
 10218  001758  6A4A               	clrf	??_CantaPartAlta^0,c
 10219  00175A  2A4A               	incf	??_CantaPartAlta^0,f,c
 10220  00175C  D001               	goto	u3598
 10221  00175E                     u3580:
 10222  00175E  6A4A               	clrf	??_CantaPartAlta^0,c
 10223  001760                     u3598:
 10224  001760  D81B               	call	PL68	;call to abstracted procedure
 10225  001762  0BFB               	andlw	-5
 10226  001764  184A               	xorwf	??_CantaPartAlta^0,w,c
 10227  001766  6E8B               	movwf	139,c	;volatile
 10228                           
 10229                           ;LcTLCD.c: 155:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10230  001768  AA4B               	btfss	CantaPartAlta@c^0,5,c
 10231  00176A  D003               	goto	u3600
 10232  00176C  6A4A               	clrf	??_CantaPartAlta^0,c
 10233  00176E  2A4A               	incf	??_CantaPartAlta^0,f,c
 10234  001770  D001               	goto	u3618
 10235  001772                     u3600:
 10236  001772  6A4A               	clrf	??_CantaPartAlta^0,c
 10237  001774                     u3618:
 10238  001774  464A               	rlncf	??_CantaPartAlta^0,f,c
 10239  001776  508B               	movf	139,w,c	;volatile
 10240  001778  184A               	xorwf	??_CantaPartAlta^0,w,c
 10241  00177A  0BFD               	andlw	-3
 10242  00177C  184A               	xorwf	??_CantaPartAlta^0,w,c
 10243  00177E  6E8B               	movwf	139,c	;volatile
 10244                           
 10245                           ;LcTLCD.c: 156:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10246  001780  A84B               	btfss	CantaPartAlta@c^0,4,c
 10247  001782  D003               	goto	u3620
 10248  001784  6A4A               	clrf	??_CantaPartAlta^0,c
 10249  001786  2A4A               	incf	??_CantaPartAlta^0,f,c
 10250  001788  D001               	goto	u3638
 10251  00178A                     u3620:
 10252  00178A  6A4A               	clrf	??_CantaPartAlta^0,c
 10253  00178C                     u3638:
 10254  00178C  508B               	movf	139,w,c	;volatile
 10255  00178E  184A               	xorwf	??_CantaPartAlta^0,w,c
 10256  001790  0BFE               	andlw	-2
 10257  001792  184A               	xorwf	??_CantaPartAlta^0,w,c
 10258  001794  6E8B               	movwf	139,c	;volatile
 10259  001796  0012               	return		;funcret
 10260  001798                     __end_of_CantaPartAlta:
 10261                           	callstack 0
 10262  001798                     PL68:
 10263                           	callstack 24
 10264  001798  464A               	rlncf	??_CantaPartAlta^0,f,c
 10265  00179A  464A               	rlncf	??_CantaPartAlta^0,f,c
 10266  00179C  508B               	movf	139,w,c	;volatile
 10267  00179E  184A               	xorwf	??_CantaPartAlta^0,w,c
 10268  0017A0  0012               	return	
 10269  0017A2                     __end_ofPL68:
 10270                           	callstack 0
 10271                           
 10272 ;; *************** function _Espera *****************
 10273 ;; Defined at:
 10274 ;;		line 147 in file "LcTLCD.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;  Timer           1    wreg     unsigned char 
 10277 ;;  ms              2   12[COMRAM] int 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  Timer           1   15[COMRAM] unsigned char 
 10280 ;; Return value:  Size  Location     Type
 10281 ;;                  1    wreg      void 
 10282 ;; Registers used:
 10283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10284 ;; Tracked objects:
 10285 ;;		On entry : 0/0
 10286 ;;		On exit  : 0/0
 10287 ;;		Unchanged: 0/0
 10288 ;; Data sizes:     COMRAM   BANK0   BANK1
 10289 ;;      Params:         2       0       0
 10290 ;;      Locals:         1       0       0
 10291 ;;      Temps:          1       0       0
 10292 ;;      Totals:         4       0       0
 10293 ;;Total ram usage:        4 bytes
 10294 ;; Hardware stack levels used: 1
 10295 ;; Hardware stack levels required when called: 3
 10296 ;; This function calls:
 10297 ;;		_TiGetTics
 10298 ;;		_TiResetTics
 10299 ;; This function is called by:
 10300 ;;		_LcInit
 10301 ;;		_LcClear
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           	psect	text86
 10306  001B34                     __ptext86:
 10307                           	callstack 0
 10308  001B34                     _Espera:
 10309                           	callstack 25
 10310                           
 10311                           ;incstack = 0
 10312                           ;Espera@Timer stored from wreg
 10313  001B34  6E54               	movwf	Espera@Timer^0,c
 10314                           
 10315                           ;LcTLCD.c: 148:  TiResetTics(Timer);
 10316  001B36  5054               	movf	Espera@Timer^0,w,c
 10317  001B38  ECD6  F00D         	call	_TiResetTics
 10318  001B3C                     l4279:
 10319  001B3C  5054               	movf	Espera@Timer^0,w,c
 10320  001B3E  EC52  F00D         	call	_TiGetTics
 10321  001B42  5051               	movf	Espera@ms^0,w,c
 10322  001B44  5C4A               	subwf	?_TiGetTics^0,w,c
 10323  001B46  504B               	movf	(?_TiGetTics+1)^0,w,c
 10324  001B48  0A80               	xorlw	128
 10325  001B4A  6E53               	movwf	??_Espera^0,c
 10326  001B4C  5052               	movf	(Espera@ms+1)^0,w,c
 10327  001B4E  0A80               	xorlw	128
 10328  001B50  5853               	subwfb	??_Espera^0,w,c
 10329  001B52  E3F4               	bnc	l4279
 10330  001B54  0012               	return		;funcret
 10331  001B56                     __end_of_Espera:
 10332                           	callstack 0
 10333                           
 10334 ;; *************** function _TiResetTics *****************
 10335 ;; Defined at:
 10336 ;;		line 55 in file "TiTTimer.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;  Handle          1    wreg     unsigned char 
 10339 ;; Auto vars:     Size  Location     Type
 10340 ;;  Handle          1    5[COMRAM] unsigned char 
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  1    wreg      void 
 10343 ;; Registers used:
 10344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/0
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMRAM   BANK0   BANK1
 10350 ;;      Params:         0       0       0
 10351 ;;      Locals:         1       0       0
 10352 ;;      Temps:          0       0       0
 10353 ;;      Totals:         1       0       0
 10354 ;;Total ram usage:        1 bytes
 10355 ;; Hardware stack levels used: 1
 10356 ;; Hardware stack levels required when called: 2
 10357 ;; This function calls:
 10358 ;;		Nothing
 10359 ;; This function is called by:
 10360 ;;		_Espera
 10361 ;;		_WaitForBusy
 10362 ;;		_SMotor
 10363 ;;		_TeTeclat
 10364 ;;		_menu
 10365 ;;		_motorAltaveu
 10366 ;;		_GLCDMotor
 10367 ;;		_motorHora
 10368 ;;		_motorSIO
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           	psect	text87
 10373  001BAC                     __ptext87:
 10374                           	callstack 0
 10375  001BAC                     _TiResetTics:
 10376                           	callstack 27
 10377                           
 10378                           ;incstack = 0
 10379                           ;TiResetTics@Handle stored from wreg
 10380  001BAC  6E4A               	movwf	TiResetTics@Handle^0,c
 10381                           
 10382                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10383  001BAE  504A               	movf	TiResetTics@Handle^0,w,c
 10384  001BB0  D805               	call	PL28	;call to abstracted procedure
 10385  001BB2  C00B  FFDE         	movff	_h_Tics,postinc2
 10386  001BB6  C00C  FFDD         	movff	_h_Tics+1,postdec2
 10387  001BBA  0012               	return		;funcret
 10388  001BBC                     __end_of_TiResetTics:
 10389                           	callstack 0
 10390  001BBC                     PL28:
 10391                           	callstack 24
 10392  001BBC  0D03               	mullw	3
 10393  001BBE  50F3               	movf	243,w,c
 10394  001BC0  0F80               	addlw	low _s_Timers
 10395  001BC2  6ED9               	movwf	fsr2l,c
 10396  001BC4  6ADA               	clrf	fsr2h,c
 10397  001BC6  0012               	return	
 10398  001BC8                     __end_ofPL28:
 10399                           	callstack 0
 10400                           
 10401 ;; *************** function _TiGetTics *****************
 10402 ;; Defined at:
 10403 ;;		line 61 in file "TiTTimer.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;  Handle          1    wreg     unsigned char 
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;  Handle          1    9[COMRAM] unsigned char 
 10408 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  2    5[COMRAM] int 
 10411 ;; Registers used:
 10412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1
 10418 ;;      Params:         2       0       0
 10419 ;;      Locals:         3       0       0
 10420 ;;      Temps:          2       0       0
 10421 ;;      Totals:         7       0       0
 10422 ;;Total ram usage:        7 bytes
 10423 ;; Hardware stack levels used: 1
 10424 ;; Hardware stack levels required when called: 2
 10425 ;; This function calls:
 10426 ;;		Nothing
 10427 ;; This function is called by:
 10428 ;;		_Espera
 10429 ;;		_WaitForBusy
 10430 ;;		_SMotor
 10431 ;;		_TeTeclat
 10432 ;;		_menu
 10433 ;;		_motorAltaveu
 10434 ;;		_GLCDMotor
 10435 ;;		_motorHora
 10436 ;;		_motorSIO
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           	psect	text88
 10441  001AA4                     __ptext88:
 10442                           	callstack 0
 10443  001AA4                     _TiGetTics:
 10444                           	callstack 27
 10445                           
 10446                           ;incstack = 0
 10447                           ;TiGetTics@Handle stored from wreg
 10448  001AA4  6E4E               	movwf	TiGetTics@Handle^0,c
 10449                           
 10450                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10451  001AA6  C00B  F04F         	movff	_h_Tics,TiGetTics@actual	;volatile
 10452  001AAA  C00C  F050         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10453                           
 10454                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10455  001AAE  504E               	movf	TiGetTics@Handle^0,w,c
 10456  001AB0  ECDE  F00D         	call	PL28	;call to abstracted procedure
 10457  001AB4  CFDE F04C          	movff	postinc2,??_TiGetTics
 10458  001AB8  CFDD F04D          	movff	postdec2,??_TiGetTics+1
 10459  001ABC  504C               	movf	??_TiGetTics^0,w,c
 10460  001ABE  5C4F               	subwf	TiGetTics@actual^0,w,c	;volatile
 10461  001AC0  6E4A               	movwf	?_TiGetTics^0,c
 10462  001AC2  504D               	movf	(??_TiGetTics+1)^0,w,c
 10463  001AC4  5850               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10464  001AC6  6E4B               	movwf	(?_TiGetTics+1)^0,c
 10465  001AC8  0012               	return		;funcret
 10466  001ACA                     __end_of_TiGetTics:
 10467                           	callstack 0
 10468                           
 10469 ;; *************** function _GLCDInit *****************
 10470 ;; Defined at:
 10471 ;;		line 26 in file "GestioLCD.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;		None
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;		None
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      void 
 10478 ;; Registers used:
 10479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMRAM   BANK0   BANK1
 10485 ;;      Params:         0       0       0
 10486 ;;      Locals:         0       0       0
 10487 ;;      Temps:          0       0       0
 10488 ;;      Totals:         0       0       0
 10489 ;;Total ram usage:        0 bytes
 10490 ;; Hardware stack levels used: 1
 10491 ;; Hardware stack levels required when called: 3
 10492 ;; This function calls:
 10493 ;;		_TiGetTimer
 10494 ;; This function is called by:
 10495 ;;		_main
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           	psect	text89
 10500  001D62                     __ptext89:
 10501                           	callstack 0
 10502  001D62                     _GLCDInit:
 10503                           	callstack 27
 10504                           
 10505                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 10506                           
 10507                           ;incstack = 0
 10508  001D62  EC15  F00D         	call	_TiGetTimer	;wreg free
 10509  001D66  6E22               	movwf	_timerGLCD^0,c
 10510  001D68  0012               	return		;funcret
 10511  001D6A                     __end_of_GLCDInit:
 10512                           	callstack 0
 10513                           
 10514 ;; *************** function _TiGetTimer *****************
 10515 ;; Defined at:
 10516 ;;		line 70 in file "TiTTimer.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;		None
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;		None
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  1    wreg      unsigned char 
 10523 ;; Registers used:
 10524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMRAM   BANK0   BANK1
 10530 ;;      Params:         0       0       0
 10531 ;;      Locals:         0       0       0
 10532 ;;      Temps:          1       0       0
 10533 ;;      Totals:         1       0       0
 10534 ;;Total ram usage:        1 bytes
 10535 ;; Hardware stack levels used: 1
 10536 ;; Hardware stack levels required when called: 2
 10537 ;; This function calls:
 10538 ;;		Nothing
 10539 ;; This function is called by:
 10540 ;;		_LcInit
 10541 ;;		_Sinit
 10542 ;;		_TeInit
 10543 ;;		_Minit
 10544 ;;		_initAltaveu
 10545 ;;		_GLCDInit
 10546 ;;		_initHora
 10547 ;;		_initSIO
 10548 ;; This function uses a non-reentrant model
 10549 ;;
 10550                           
 10551                           	psect	text90
 10552  001A2A                     __ptext90:
 10553                           	callstack 0
 10554  001A2A                     _TiGetTimer:
 10555                           	callstack 27
 10556                           
 10557                           ;TiTTimer.c: 74:     counter=0;
 10558                           
 10559                           ;incstack = 0
 10560  001A2A  6A34               	clrf	_counter^0,c
 10561                           
 10562                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10563  001A2C  D005               	goto	l4325
 10564  001A2E                     l4317:
 10565                           
 10566                           ;TiTTimer.c: 76:         counter++;
 10567  001A2E  2A34               	incf	_counter^0,f,c
 10568                           
 10569                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10570  001A30  0E08               	movlw	8
 10571  001A32  1834               	xorwf	_counter^0,w,c
 10572  001A34  E101               	bnz	l4325
 10573  001A36  0CFF               	retlw	255
 10574  001A38                     l4325:
 10575                           
 10576                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10577  001A38  D807               	call	PL12	;call to abstracted procedure
 10578  001A3A  04DE               	decf	postinc2,w,c
 10579  001A3C  E0F8               	bz	l4317
 10580                           
 10581                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10582  001A3E  D804               	call	PL12	;call to abstracted procedure
 10583  001A40  0E01               	movlw	1
 10584  001A42  6EDF               	movwf	indf2,c
 10585                           
 10586                           ;TiTTimer.c: 80:     return (counter);
 10587  001A44  5034               	movf	_counter^0,w,c
 10588  001A46  0012               	return		;funcret
 10589  001A48                     __end_of_TiGetTimer:
 10590                           	callstack 0
 10591  001A48                     PL12:
 10592                           	callstack 28
 10593  001A48  5034               	movf	_counter^0,w,c
 10594  001A4A  0D03               	mullw	3
 10595  001A4C  50F3               	movf	243,w,c
 10596  001A4E  0F82               	addlw	low (_s_Timers+2)
 10597  001A50  6ED9               	movwf	fsr2l,c
 10598  001A52  6ADA               	clrf	fsr2h,c
 10599  001A54  0012               	return	
 10600  001A56                     __end_ofPL12:
 10601                           	callstack 0
 10602                           
 10603 ;; *************** function _CtoA *****************
 10604 ;; Defined at:
 10605 ;;		line 22 in file "CtoA.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;		None
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      void 
 10612 ;; Registers used:
 10613 ;;		wreg, status,2, status,0
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1
 10619 ;;      Params:         0       0       0
 10620 ;;      Locals:         0       0       0
 10621 ;;      Temps:          0       0       0
 10622 ;;      Totals:         0       0       0
 10623 ;;Total ram usage:        0 bytes
 10624 ;; Hardware stack levels used: 1
 10625 ;; Hardware stack levels required when called: 2
 10626 ;; This function calls:
 10627 ;;		Nothing
 10628 ;; This function is called by:
 10629 ;;		_main
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           	psect	text91
 10634  001AEE                     __ptext91:
 10635                           	callstack 0
 10636  001AEE                     _CtoA:
 10637                           	callstack 28
 10638                           
 10639                           ;CtoA.c: 23:     if (convertir != 250) {
 10640                           
 10641                           ;incstack = 0
 10642  001AEE  0EFA               	movlw	250
 10643  001AF0  185E               	xorwf	_convertir^0,w,c
 10644  001AF2  B4D8               	btfsc	status,2,c
 10645  001AF4  0012               	return	
 10646                           
 10647                           ;CtoA.c: 24:         if (convertir != 0){
 10648  001AF6  505E               	movf	_convertir^0,w,c
 10649  001AF8  E009               	bz	l3825
 10650                           
 10651                           ;CtoA.c: 25:             stringScore[1]++;
 10652  001AFA  2A74               	incf	(_stringScore+1)^0,f,c
 10653                           
 10654                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 10655  001AFC  0E3A               	movlw	58
 10656  001AFE  1874               	xorwf	(_stringScore+1)^0,w,c
 10657  001B00  E103               	bnz	l3823
 10658                           
 10659                           ;CtoA.c: 27:                 stringScore[1] = '0';
 10660  001B02  0E30               	movlw	48
 10661  001B04  6E74               	movwf	(_stringScore+1)^0,c
 10662                           
 10663                           ;CtoA.c: 28:                 stringScore[0]++;
 10664  001B06  2A73               	incf	_stringScore^0,f,c
 10665  001B08                     l3823:
 10666                           
 10667                           ;CtoA.c: 30:             convertir--;
 10668  001B08  065E               	decf	_convertir^0,f,c
 10669                           
 10670                           ;CtoA.c: 31:         } else {
 10671  001B0A  0012               	return	
 10672  001B0C                     l3825:
 10673                           
 10674                           ;CtoA.c: 32:             convertir = 250;
 10675  001B0C  0EFA               	movlw	250
 10676  001B0E  6E5E               	movwf	_convertir^0,c
 10677  001B10  0CFA               	retlw	250	;funcret
 10678  001B12                     __end_of_CtoA:
 10679                           	callstack 0
 10680                           
 10681 ;; *************** function _high_rsi *****************
 10682 ;; Defined at:
 10683 ;;		line 21 in file "main.c"
 10684 ;; Parameters:    Size  Location     Type
 10685 ;;		None
 10686 ;; Auto vars:     Size  Location     Type
 10687 ;;		None
 10688 ;; Return value:  Size  Location     Type
 10689 ;;                  1    wreg      void 
 10690 ;; Registers used:
 10691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10692 ;; Tracked objects:
 10693 ;;		On entry : 0/0
 10694 ;;		On exit  : 0/0
 10695 ;;		Unchanged: 0/0
 10696 ;; Data sizes:     COMRAM   BANK0   BANK1
 10697 ;;      Params:         0       0       0
 10698 ;;      Locals:         0       0       0
 10699 ;;      Temps:          4       0       0
 10700 ;;      Totals:         4       0       0
 10701 ;;Total ram usage:        4 bytes
 10702 ;; Hardware stack levels used: 1
 10703 ;; Hardware stack levels required when called: 1
 10704 ;; This function calls:
 10705 ;;		__TiRSITimer
 10706 ;; This function is called by:
 10707 ;;		Interrupt level 2
 10708 ;; This function uses a non-reentrant model
 10709 ;;
 10710                           
 10711                           	psect	intcode
 10712  000008                     __pintcode:
 10713                           	callstack 0
 10714  000008                     _high_rsi:
 10715                           	callstack 24
 10716                           
 10717                           ;incstack = 0
 10718  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10719  00000A  CFD9 F046          	movff	fsr2l,??_high_rsi
 10720  00000E  CFDA F047          	movff	fsr2h,??_high_rsi+1
 10721  000012  CFF3 F048          	movff	prodl,??_high_rsi+2
 10722  000016  CFF4 F049          	movff	prodh,??_high_rsi+3
 10723  00001A  EC49  F00C         	call	__TiRSITimer	;wreg free
 10724  00001E  C049  FFF4         	movff	??_high_rsi+3,prodh
 10725  000022  C048  FFF3         	movff	??_high_rsi+2,prodl
 10726  000026  C047  FFDA         	movff	??_high_rsi+1,fsr2h
 10727  00002A  C046  FFD9         	movff	??_high_rsi,fsr2l
 10728  00002E  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10729  000030  0011               	retfie		f
 10730  000032                     __end_of_high_rsi:
 10731                           	callstack 0
 10732                           
 10733 ;; *************** function __TiRSITimer *****************
 10734 ;; Defined at:
 10735 ;;		line 37 in file "TiTTimer.c"
 10736 ;; Parameters:    Size  Location     Type
 10737 ;;		None
 10738 ;; Auto vars:     Size  Location     Type
 10739 ;;		None
 10740 ;; Return value:  Size  Location     Type
 10741 ;;                  1    wreg      void 
 10742 ;; Registers used:
 10743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10744 ;; Tracked objects:
 10745 ;;		On entry : 0/0
 10746 ;;		On exit  : 0/0
 10747 ;;		Unchanged: 0/0
 10748 ;; Data sizes:     COMRAM   BANK0   BANK1
 10749 ;;      Params:         0       0       0
 10750 ;;      Locals:         0       0       0
 10751 ;;      Temps:          1       0       0
 10752 ;;      Totals:         1       0       0
 10753 ;;Total ram usage:        1 bytes
 10754 ;; Hardware stack levels used: 1
 10755 ;; This function calls:
 10756 ;;		Nothing
 10757 ;; This function is called by:
 10758 ;;		_high_rsi
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           
 10762                           	psect	text93
 10763  001892                     __ptext93:
 10764                           	callstack 0
 10765  001892                     __TiRSITimer:
 10766                           	callstack 0
 10767                           
 10768                           ;TiTTimer.c: 39:     TMR0H = 223;
 10769                           
 10770                           ;incstack = 0
 10771                           
 10772                           ;TiTTimer.c: 40:     TMR0L = 148;
 10773  001892  D81E               	call	PL60	;call to abstracted procedure
 10774                           
 10775                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 10776  001894  94F2               	bcf	242,2,c	;volatile
 10777                           
 10778                           ;TiTTimer.c: 42:     h_Tics++;
 10779  001896  4A0B               	infsnz	_h_Tics^0,f,c
 10780  001898  2A0C               	incf	(_h_Tics+1)^0,f,c
 10781                           
 10782                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 10783  00189A  0E48               	movlw	72
 10784  00189C  5C0B               	subwf	_h_Tics^0,w,c
 10785  00189E  0EEE               	movlw	238
 10786  0018A0  580C               	subwfb	(_h_Tics+1)^0,w,c
 10787  0018A2  A0D8               	btfss	status,0,c
 10788  0018A4  0012               	return	
 10789                           
 10790                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 10791  0018A6  6A34               	clrf	_counter^0,c
 10792  0018A8                     i2l4547:
 10793  0018A8  0E07               	movlw	7
 10794  0018AA  6434               	cpfsgt	_counter^0,c
 10795  0018AC  D001               	goto	i2l4551
 10796  0018AE  D00D               	goto	i2l370
 10797  0018B0                     i2l4551:
 10798                           
 10799                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 10800  0018B0  EC24  F00D         	call	PL12	;call to abstracted procedure
 10801  0018B4  04DE               	decf	postinc2,w,c
 10802  0018B6  E107               	bnz	i2l4555
 10803                           
 10804                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 10805  0018B8  5034               	movf	_counter^0,w,c
 10806  0018BA  ECDE  F00D         	call	PL28	;call to abstracted procedure
 10807  0018BE  500B               	movf	_h_Tics^0,w,c
 10808  0018C0  5EDE               	subwf	postinc2,f,c
 10809  0018C2  500C               	movf	(_h_Tics+1)^0,w,c
 10810  0018C4  5ADD               	subwfb	postdec2,f,c
 10811  0018C6                     i2l4555:
 10812                           
 10813                           ;TiTTimer.c: 50:         }
 10814  0018C6  2A34               	incf	_counter^0,f,c
 10815  0018C8  D7EF               	goto	i2l4547
 10816  0018CA                     i2l370:
 10817                           
 10818                           ;TiTTimer.c: 51:         h_Tics=0;
 10819  0018CA  6A0B               	clrf	_h_Tics^0,c
 10820  0018CC  6A0C               	clrf	(_h_Tics+1)^0,c
 10821  0018CE  0012               	return		;funcret
 10822  0018D0                     __end_of__TiRSITimer:
 10823                           	callstack 0
 10824  0018D0                     PL60:
 10825                           	callstack 28
 10826  0018D0  0EDF               	movlw	223
 10827  0018D2  6ED7               	movwf	215,c	;volatile
 10828  0018D4  0E94               	movlw	148
 10829  0018D6  6ED6               	movwf	214,c	;volatile
 10830  0018D8  0C94               	retlw	148
 10831  0018DA                     __end_ofPL60:
 10832                           	callstack 0
 10833                           
 10834                           	psect	rparam
 10835  0000                     
 10836                           	psect	temp
 10837  000079                     btemp:
 10838                           	callstack 0
 10839  000079                     	ds	1
 10840  0000                     int$flags	set	btemp
 10841  0000                     wtemp8	set	btemp+1
 10842  0000                     ttemp5	set	btemp+1
 10843  0000                     ttemp6	set	btemp+4
 10844  0000                     ttemp7	set	btemp+8
 10845                           
 10846                           	psect	idloc
 10847                           
 10848                           ;Config register IDLOC0 @ 0x200000
 10849                           ;	unspecified, using default values
 10850  200000                     	org	2097152
 10851  200000  FF                 	db	255
 10852                           
 10853                           ;Config register IDLOC1 @ 0x200001
 10854                           ;	unspecified, using default values
 10855  200001                     	org	2097153
 10856  200001  FF                 	db	255
 10857                           
 10858                           ;Config register IDLOC2 @ 0x200002
 10859                           ;	unspecified, using default values
 10860  200002                     	org	2097154
 10861  200002  FF                 	db	255
 10862                           
 10863                           ;Config register IDLOC3 @ 0x200003
 10864                           ;	unspecified, using default values
 10865  200003                     	org	2097155
 10866  200003  FF                 	db	255
 10867                           
 10868                           ;Config register IDLOC4 @ 0x200004
 10869                           ;	unspecified, using default values
 10870  200004                     	org	2097156
 10871  200004  FF                 	db	255
 10872                           
 10873                           ;Config register IDLOC5 @ 0x200005
 10874                           ;	unspecified, using default values
 10875  200005                     	org	2097157
 10876  200005  FF                 	db	255
 10877                           
 10878                           ;Config register IDLOC6 @ 0x200006
 10879                           ;	unspecified, using default values
 10880  200006                     	org	2097158
 10881  200006  FF                 	db	255
 10882                           
 10883                           ;Config register IDLOC7 @ 0x200007
 10884                           ;	unspecified, using default values
 10885  200007                     	org	2097159
 10886  200007  FF                 	db	255
 10887                           
 10888                           	psect	config
 10889                           
 10890                           ; Padding undefined space
 10891  300000                     	org	3145728
 10892  300000  FF                 	db	255
 10893                           
 10894                           ;Config register CONFIG1H @ 0x300001
 10895                           ;	Oscillator
 10896                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 10897                           ;	Fail-Safe Clock Monitor Enable bit
 10898                           ;	FCMEN = 0x0, unprogrammed default
 10899                           ;	Internal/External Oscillator Switchover bit
 10900                           ;	IESO = 0x0, unprogrammed default
 10901  300001                     	org	3145729
 10902  300001  06                 	db	6
 10903                           
 10904                           ;Config register CONFIG2L @ 0x300002
 10905                           ;	unspecified, using default values
 10906                           ;	Power-up Timer Enable bit
 10907                           ;	PWRT = 0x1, unprogrammed default
 10908                           ;	Brown-out Reset Enable bits
 10909                           ;	BOR = 0x3, unprogrammed default
 10910                           ;	Brown-out Reset Voltage bits
 10911                           ;	BORV = 0x3, unprogrammed default
 10912  300002                     	org	3145730
 10913  300002  1F                 	db	31
 10914                           
 10915                           ;Config register CONFIG2H @ 0x300003
 10916                           ;	Watchdog Timer Enable bit
 10917                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10918                           ;	Watchdog Timer Postscale Select bits
 10919                           ;	WDTPS = 0xF, unprogrammed default
 10920  300003                     	org	3145731
 10921  300003  1E                 	db	30
 10922                           
 10923                           ; Padding undefined space
 10924  300004                     	org	3145732
 10925  300004  FF                 	db	255
 10926                           
 10927                           ;Config register CONFIG3H @ 0x300005
 10928                           ;	CCP2 MUX bit
 10929                           ;	CCP2MX = 0x1, unprogrammed default
 10930                           ;	PORTB A/D Enable bit
 10931                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10932                           ;	Low-Power Timer1 Oscillator Enable bit
 10933                           ;	LPT1OSC = 0x0, unprogrammed default
 10934                           ;	MCLR Pin Enable bit
 10935                           ;	MCLRE = 0x1, unprogrammed default
 10936  300005                     	org	3145733
 10937  300005  81                 	db	129
 10938                           
 10939                           ;Config register CONFIG4L @ 0x300006
 10940                           ;	Stack Full/Underflow Reset Enable bit
 10941                           ;	STVREN = 0x1, unprogrammed default
 10942                           ;	Single-Supply ICSP Enable bit
 10943                           ;	LVP = OFF, Single-Supply ICSP disabled
 10944                           ;	Boot Block Size Select bits
 10945                           ;	BBSIZ = 0x0, unprogrammed default
 10946                           ;	Extended Instruction Set Enable bit
 10947                           ;	XINST = 0x0, unprogrammed default
 10948                           ;	Background Debugger Enable bit
 10949                           ;	DEBUG = 0x1, unprogrammed default
 10950  300006                     	org	3145734
 10951  300006  81                 	db	129
 10952                           
 10953                           ; Padding undefined space
 10954  300007                     	org	3145735
 10955  300007  FF                 	db	255
 10956                           
 10957                           ;Config register CONFIG5L @ 0x300008
 10958                           ;	unspecified, using default values
 10959                           ;	Code Protection bit
 10960                           ;	CP0 = 0x1, unprogrammed default
 10961                           ;	Code Protection bit
 10962                           ;	CP1 = 0x1, unprogrammed default
 10963  300008                     	org	3145736
 10964  300008  03                 	db	3
 10965                           
 10966                           ;Config register CONFIG5H @ 0x300009
 10967                           ;	unspecified, using default values
 10968                           ;	Boot Block Code Protection bitProtect Boot
 10969                           ;	CPB = 0x1, unprogrammed default
 10970                           ;	Data EEPROM Code Protection bit
 10971                           ;	CPD = 0x1, unprogrammed default
 10972  300009                     	org	3145737
 10973  300009  C0                 	db	192
 10974                           
 10975                           ;Config register CONFIG6L @ 0x30000A
 10976                           ;	unspecified, using default values
 10977                           ;	Write Protection bit
 10978                           ;	WRT0 = 0x1, unprogrammed default
 10979                           ;	Write Protection bit
 10980                           ;	WRT1 = 0x1, unprogrammed default
 10981  30000A                     	org	3145738
 10982  30000A  03                 	db	3
 10983                           
 10984                           ;Config register CONFIG6H @ 0x30000B
 10985                           ;	unspecified, using default values
 10986                           ;	Configuration Register Write Protection bit
 10987                           ;	WRTC = 0x1, unprogrammed default
 10988                           ;	Boot Block Write Protection bit
 10989                           ;	WRTB = 0x1, unprogrammed default
 10990                           ;	Data EEPROM Write Protection bit
 10991                           ;	WRTD = 0x1, unprogrammed default
 10992  30000B                     	org	3145739
 10993  30000B  E0                 	db	224
 10994                           
 10995                           ;Config register CONFIG7L @ 0x30000C
 10996                           ;	unspecified, using default values
 10997                           ;	Table Read Protection bit
 10998                           ;	EBTR0 = 0x1, unprogrammed default
 10999                           ;	Table Read Protection bit
 11000                           ;	EBTR1 = 0x1, unprogrammed default
 11001  30000C                     	org	3145740
 11002  30000C  03                 	db	3
 11003                           
 11004                           ;Config register CONFIG7H @ 0x30000D
 11005                           ;	unspecified, using default values
 11006                           ;	Boot Block Table Read Protection bit
 11007                           ;	EBTRB = 0x1, unprogrammed default
 11008  30000D                     	org	3145741
 11009  30000D  40                 	db	64
 11010                           tosu	equ	0xFFF
 11011                           tosh	equ	0xFFE
 11012                           tosl	equ	0xFFD
 11013                           stkptr	equ	0xFFC
 11014                           pclatu	equ	0xFFB
 11015                           pclath	equ	0xFFA
 11016                           pcl	equ	0xFF9
 11017                           tblptru	equ	0xFF8
 11018                           tblptrh	equ	0xFF7
 11019                           tblptrl	equ	0xFF6
 11020                           tablat	equ	0xFF5
 11021                           prodh	equ	0xFF4
 11022                           prodl	equ	0xFF3
 11023                           indf0	equ	0xFEF
 11024                           postinc0	equ	0xFEE
 11025                           postdec0	equ	0xFED
 11026                           preinc0	equ	0xFEC
 11027                           plusw0	equ	0xFEB
 11028                           fsr0h	equ	0xFEA
 11029                           fsr0l	equ	0xFE9
 11030                           wreg	equ	0xFE8
 11031                           indf1	equ	0xFE7
 11032                           postinc1	equ	0xFE6
 11033                           postdec1	equ	0xFE5
 11034                           preinc1	equ	0xFE4
 11035                           plusw1	equ	0xFE3
 11036                           fsr1h	equ	0xFE2
 11037                           fsr1l	equ	0xFE1
 11038                           bsr	equ	0xFE0
 11039                           indf2	equ	0xFDF
 11040                           postinc2	equ	0xFDE
 11041                           postdec2	equ	0xFDD
 11042                           preinc2	equ	0xFDC
 11043                           plusw2	equ	0xFDB
 11044                           fsr2h	equ	0xFDA
 11045                           fsr2l	equ	0xFD9
 11046                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    186
    Data        24
    BSS         264
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     25     120
    BANK0           128      0      52
    BANK1           256      0     144

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(CODE[11]), loginText(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(CODE[11]), loginText(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->___lbdiv
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39584
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9851
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   10738
                                             20 COMRAM     5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     612
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     348
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                4     4      0     484
                                              9 COMRAM     4     4      0
                            ___lbdiv
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             4     4      0      97
                                             12 COMRAM     4     4      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               4     4      0      82
                                             12 COMRAM     4     4      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               3     3      0    1103
                                             16 COMRAM     3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     ___lbdiv
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      90       6       56.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      34       4       40.6%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     19      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13C       7        0.0%
DATA                 0      0     13C       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 07 14:22:30 2022

               TiResetTics@Handle 004A                  _loginNOTRegister 03BF  
                               _i 002A                                 _j 0029  
                              PL2 0A00                                PL4 0A16  
                              PL6 0A2A                                PL8 11A8  
                              l55 1A04                  UgetUserName@quin 004C  
       ??_UcheckExistsNotFinished 004A         __size_of_llegirCharEEPROM 0010  
                             PL10 1066                               PL20 1352  
                             PL12 1A48                               PL30 0778  
                             PL22 1552                               PL14 0C7C  
                             PL40 1652                               PL32 1976  
                             PL24 0CB0                               PL16 0C98  
                             PL50 0792                               PL42 136A  
                             PL34 0782                               PL26 0E9C  
                             PL18 0CA4                               PL60 18D0  
                             PL52 0EA8                               PL44 0788  
                             PL36 1830                               PL28 1BBC  
                             PL70 0A40                               PL62 1660  
                             PL54 1984                               PL46 183E  
                             PL38 0A32                               PL80 07A8  
                             PL72 190E                               PL64 1B2A  
                             PL56 1088                               PL48 1904  
                             PL82 07B0                               PL74 188A  
                             PL66 142C                               PL58 1732  
                             PL84 0CC2                               PL76 079C  
                             PL68 1798                               PL78 07A2  
          __end_of_compareStrings 1904                               l603 0472  
                             l196 16A4                               l509 0090  
                             l720 1A9A                               l536 01C6  
                             l537 01D6                               l539 01E2  
                             l732 12E8                               l761 0A4C  
                             l930 0808                               l762 0A5E  
                             l764 0A6A                               l942 086C  
                             l766 0A74                               l960 094C  
                             l768 0AA2                               l793 0B94  
                             l769 0A98                               l849 14DA  
                             l962 0972                               l999 11E2  
                             u230 1600                               u250 1616  
                             u308 1644                               u270 162A  
                             u248 1602                               u290 1642  
                             u268 1618                               u288 162C  
                             _pos 002F                               _tmp 0033  
                ??_CantaPartBaixa 004A                               prod 000FF3  
                             wreg 000FE8       __size_of_calculateShowUsers 0004  
                     _ultimaTecla 006A                __size_of_GLCDMotor 0248  
                            l1000 11FC                              l1002 121E  
                            l1011 1274                              l1007 12A0  
                            l1008 1238                              l1009 1252  
                            l1148 144C                              l2141 1CCC  
                            l1270 0E06                              l1262 0D6E  
                            l2215 1C6C                              l2311 1C60  
                            l1255 0D46                              l2171 1C9C  
                            l2331 1AD4                              l3221 1268  
                            l3213 124E                              l2237 1C78  
                            l2343 1AE4                              l2337 1ADC  
                            l3235 128A                              l3245 128E  
                            l2365 1C54                              l2349 1AEC  
                            l3183 1212                              l3175 11F8  
                            l5031 14B0                              l5015 1472  
                            l5007 145C                              l5201 15B0  
                            l5025 149A                              l5009 1460  
                            l6011 10DA                              l5211 15CA  
                            l5115 0D88                              l4317 1A2E  
                            l4325 1A38                              l4253 192A  
                            l3197 1234                              l6005 10CA  
                            l5125 0DB8                              l5117 0D8E  
                            l6031 110A                              l6015 10E6  
                            l5311 0124                              l5231 0038  
                            l5223 15DC                              l5039 14BE  
                            l5135 0DEE                              l5047 0CCC  
                     _puntuacions 0098                              l6025 10FC  
                            l6017 10EC                              l6009 10D6  
                            l4441 18F0                              l5153 0E3A  
                            l5145 0E18                              l5073 0D0E  
                            l5065 0CFC                              l5057 0CE8  
                            l4275 1950                              l4435 18DC  
                            l5411 021A                              l5403 020A  
                            l5219 15D8                              l4285 1A08  
                            l4365 1884                              l4357 1870  
                            l4701 0FFA                              l6053 1140  
                            l6045 112A                              l6037 1118  
                            l4461 19D6                              l5501 0310  
                            l5341 017A                              l5325 0148  
                            l5253 007E                              l5237 004E  
                            l5173 156C                              l5077 0D18  
                            l5165 0E5C                              l3823 1B08  
                            l4279 1B3C                              l4359 1876  
                            l4615 0F12                              l4607 0EF4  
                            l6039 111C                              l5431 024E  
                            l5335 016C                              l5327 014E  
                            l5255 0084                              l5247 0070  
                            l5087 0D2E                              l5079 0D1E  
                            l3825 1B0C                              l4801 07BA  
                            l4625 0F38                              l6073 1174  
                            l6065 1162                              l6049 1136  
                            l4457 19D0                              l4473 19F2  
                            l5505 0328                              l5353 018A  
                            l5337 0172                              l4811 07DC  
                            l4491 1392                              l4715 101E  
                            l4651 0F72                              l4627 0F3C  
                            l6059 1154                              l4571 1A74  
                            l5419 0228                              l5371 01B2  
                            l5283 00E2                              l5275 00CA  
                            l5267 00AA                              l5195 15A4  
                            l4709 1010                              l4661 0F94  
                            l4645 0F60                              l4637 0F4A  
                            l6069 116A                              l4469 19EA  
                            l5525 035C                              l5461 02A0  
                            l5445 0274                              l5381 01D2  
                            l5293 0106                              l5285 00E8  
                            l5189 1598                              l4831 0814  
                            l4719 1026                              l4671 0FB2  
                            l4663 0F98                              l4591 0EC8  
                            l4583 0EB4                              l6079 117A  
                            l4567 1A6C                              l4751 12C6  
                            l5703 057E                              l5631 044C  
                            l5623 0428                              l5543 0380  
                            l5391 01F2                              l5295 010C  
                            l4921 08FC                              l4905 08C6  
                            l4825 07FE                              l4817 07EA  
                            l5641 047A                              l5617 041A  
                            l5609 040C                              l4915 08EC  
                            l4683 0FCE                              l4659 0F82  
                            l4739 1036                              l5651 04A4  
                            l5571 03BC                              l5491 02EA  
                            l5459 029A                              l5299 0114  
                            l5811 1520                              l5803 1508  
                            l4853 084A                              l4845 083E  
                            l5741 0634                              l5717 05BA  
                            l5493 02F0                              l5477 02C2  
                            l4943 0940                              l4935 092A  
                            l4695 0FF0                              l4679 0FCA  
                            l4783 1320                              l4767 12EA  
                            l4759 12D8                              l5903 0B3E  
                            l5751 0648                              l5743 063A  
                            l5719 05C0                              l5663 0504  
                            l5647 048C                              l5639 0474  
                            l5575 03C0                              l5559 039E  
                            l5823 1538                              l4777 1314  
                            l5913 0B54                              l5841 0A64  
                            l5729 0604                              l5673 051A  
                            l5657 04E4                              l5809 151C  
                            l4859 085C                              l5923 0B66  
                            l5683 0532                              l5675 0520  
                            l5659 04EA                              l5587 03D2  
                            l4965 097E                              l4957 096C  
                            l4949 0954                              l5933 0B92  
                            l5941 0B9E                              l5925 0B6A  
                            l5853 0A9C                              l5757 066C  
                            l5693 054A                              l5685 0538  
                            l5669 0510                              l4975 099A  
                            l4895 08A4                              l5919 0B5E  
                            l5767 0680                              l5599 03F2  
                            l5775 068C                              l5791 14F0  
                            l4969 0986                              l4889 0894  
                            l4985 09B4                              l5953 0BBE  
                            l5945 0BAC                              l5873 0AE6  
                            l5865 0AD4                              l5857 0AA8  
                            l5697 0552                              l4993 1438  
                            l4979 09A8                              l4899 08B0  
                            l5963 0BDA                              l5891 0B16  
                            l5859 0AAE                              l5965 0BE0  
                            l5885 0B06                              l5869 0AD8  
                            l5797 14FC                              l5959 0BD2  
                            l5985 0C28                              l5977 0C14  
                            l5889 0B10                              l5989 0C30  
                            l5997 0C44                              STR_1 1FF8  
                            STR_2 1FF1                              STR_3 1FD8  
                            STR_4 1FBF                              STR_5 1FAF  
                            STR_6 1FE9                              STR_7 1FCC  
                            STR_8 1FE1                              _LATD 000F8C  
                            u4130 0F6C                              u4050 0F08  
                            u3600 1772                              u4250 1000  
                            u4170 0FA4                              u3620 178A  
                            u3700 1724                              u4260 1016  
                            u6020 05B8                              u3560 1748  
                            u3640 16E2                              u6040 05D2  
                            u5400 01DC                              u3618 1774  
                            u3580 175E                              u3660 16F8  
                            u4460 0846                              u5420 01EA  
                            u3638 178C                              u3718 1726  
                            u4390 07E6                              u3910 180C  
                            u5350 0198                              u3680 170C  
                            u3920 1822                              u6240 0A6E  
                            u5280 0132                              u3578 174A  
                            u3658 16E4                              u4490 0864  
                            u3850 18F4                              u6260 0A94  
                            u3917 180A                              u3598 1760  
                            u3678 16FA                              u3870 19DA  
                            u3927 1820                              u6520 109C  
                            u3698 170E                              u3890 1422  
                            u6450 0BCC                              u4940 0D4E  
                            u4950 0D52                              u6528 109E  
                            u5930 050C                              u5780 03DE  
                            u4980 0DCE                              u5790 03E4  
                            _CtoA 1AEE                   ??_SsetNovaTecla 004A  
          __end_of_SIOcheckKrebut 1C58                              _cap1 03B7  
                            _Rows 0040                              _cap2 03B6  
                            _main 166A                              _hora 006D  
                            _menu 0036                              _nota 0026  
           getArrayShowUsers@quin 004C                   __end_of_HJugant 1D70  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 0079                   __end_of_JJuguem 1D0A  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 1B2A                              start 0032  
                 __end_of_CantaIR 1BAC                      ?_initAltaveu 0045  
                    ___param_bank 000000                       _stringScore 0073  
                __end_of_GLCDInit 1D6A          __size_of_SIONovaDireccio 0008  
                  _HClearNouSegon 1D8E                             ?_CtoA 0045  
              __size_of_CToAReset 0008                       Espera@Timer 0054  
                           ?_main 0045                             ?_menu 0045  
                 __end_of___lbdiv 19F6                             _EEADR 000FA9  
                   ??_TiInitTimer 004A                             _T0CON 000FD5  
                 ?_compareStrings 004A                             i2l370 18CA  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 17FA  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 0045                             _TXREG 000FAD  
                           _SMSon 1D70                             _TXSTA 000FAC  
                     _MNovaLletra 1D4A                             _Minit 1D52  
                __end_of_HGetTime 1D8E                             _Sinit 1D42  
                           _Timer 003D                             _Uinit 12B6  
                 __end_of_initSIO 1D1A                             _s_ptr 000D  
                           _score 0010                             _nou_s 03C1  
           __end_of_JoystickMotor 12B6                   _HActualitzaHora 198E  
     __size_of_escriureCharEEPROM 0026                    __pbitbssCOMRAM 03B0  
                           tablat 000FF5                       _LcNewString 1CB8  
                   ??_TiResetTics 004A                   ?_SIOcheckKrebut 0045  
              _UshowUsersCalculat 1C70                             ttemp5 007A  
                           ttemp6 007D                             ttemp7 0081  
                           status 000FD8                  ?_checkHoraAcabat 0045  
                           wtemp8 007A     __size_of_UcheckExistsGetError 0004  
              __size_of_HNouSegon 000C                   ___lbdiv@divisor 004A  
                __end_of_LcGotoXY 1A2A              CToAConverteix@numero 004A  
                 ___lbdiv@counter 004C                  __end_of_LcLliure 1CD0  
                   ??__TiRSITimer 0045                  __end_of_LcScroll 1D82  
                      _TiGetTimer 1A2A           EscriuPrimeraOrdre@ordre 004B  
                    __end_of_CtoA 1B12                  __end_of_JendGame 1DBA  
                     ?_SIOendGame 0045                   __initialization 17A2  
             ?_UshowUsersCalculat 0045                __size_of_CantaData 0020  
                    __end_of_main 16D6            __end_of_HClearNouSegon 1D92  
                    __end_of_menu 0778           ?_SIOHaAcabatPuntuacions 0045  
           __size_of_MNouJoystick 0008                      ?_playAltaveu 0045  
               __end_of_GLCDMotor 0A00                  __end_of_TeTeclat 11A8  
                   _indexNextUser 002C                            ??_CtoA 004A  
                          ??_main 005E                            ??_menu 0059  
              __size_of_LcPutChar 0040                     __activetblptr 000002  
                   _ultimaTeclaAD 0018            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 001A                  GLCDMotor@length2 0019  
                      _JnovaTecla 1CF2                  __end_of_UgetTop5 1C88  
                          ?_LcLCD 0045                            ?_SMSon 0045  
                    ?_CToAobtenir 004A                            ?_Minit 0045  
            ??_UshowUsersCalculat 004A                            ?_Sinit 0045  
                          ?_Uinit 0045                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 1A7E  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 004A                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 004A                __size_of_SiFerMenu 0004  
                       ??_LcClear 0058                         ??_CantaIR 004C  
                          i2l4551 18B0                            i2l4555 18C6  
                          i2l4547 18A8                    LcGotoXY@Fisics 0053  
                  LcGotoXY@Column 0057                     ??_WaitForBusy 0051  
              __size_of_TiGetTics 0026                            _SPBRGH 000FB0  
                  _sumaPulsacions 003C                 __end_of_CToAReset 1D12  
                          _SMSoff 1D76                SIONovaDireccio@num 004A  
                          _LcInit 1378                      _MNouJoystick 1D5A  
                  _UgetNumUsuaris 1D9A                            _SMotor 0EB2  
             escriureCharEEPROM@c 004B                            _TeInit 1D3A  
                          _Espera 1B34                      _LcGotoXY$334 0055  
                          _Krebut 03B0    __end_of_SIOHaAcabatPuntuacions 1DB2  
                          _RowAct 003F               __end_of_TiResetTics 1BBC  
                          Uinit@i 0051                            Uinit@k 0050  
                __end_of_high_rsi 0032                            _h_Tics 000B  
                 ?_HClearNouSegon 0045                         ??___lbdiv 004B  
                   ?_CToAHaAcabat 0045                  __end_of_initHora 1D22  
             __end_of__TiRSITimer 18D0                  __end_of_menuList 1F90  
                          clear_0 17C8                            clear_1 17D4  
                          clear_2 17E6                            _jugant 03B5  
                          _segons 0015                        _UenviaChar 1C2C  
                          isa$std 000001                  _llegirCharEEPROM 1C3C  
              __size_of_UgetScore 000C                        UenviaPas@c 004B  
     __size_of_EscriuPrimeraOrdre 0064                 __end_of_HNouSegon 1C64  
                       ??_initSIO 004B                      __pdataCOMRAM 005E  
          __size_of_CantaPartAlta 005C                  __end_of_motorSIO 0E9C  
              __size_of_UenviaPas 0010           __end_of_HActualitzaHora 19C2  
               ??_SIONovaDireccio 004A                  __end_of_motorJoc 14D8  
                    __mediumconst 1EF4                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                ??_CToAConverteix 004A                __size_of_UnewScore 000A  
             __size_of_SIOendGame 0004                 __end_of_CantaData 1976  
                    TeTeclat@cols 0036                  ___lbdiv@dividend 004B  
                       ?_GLCDInit 0045                     ?_UcheckExists 0045  
                      __accesstop 0080           __end_of__initialization 17EC  
          __end_of_UgetNumUsuaris 1D9E                 __end_of_LcPutChar 188A  
                   _JnovaDireccio 1CFA                  JnovaDireccio@dir 004A  
                   ___rparam_used 000001                     __end_of_LcLCD 1830  
                     ?_TiGetTimer 0045                     __end_of_SMSon 1D76  
               SIONovaTecla@tecla 004A                    __pcstackCOMRAM 0045  
                   __end_of_Minit 1D5A               __end_of_WaitForBusy 1956  
                   __end_of_Sinit 1D4A                     __end_of_Uinit 1352  
               __end_of_NoFerMenu 1DB6                         ?_HGetTime 004A  
                  ??_CToAHaAcabat 004A              __size_of_initAltaveu 0008  
               __end_of_URegister 1DAA                 __end_of_HnoJugant 1D8A  
               __end_of_SiFerMenu 1DAE                        __end_ofPL2 0A16  
                      __end_ofPL4 0A2A                        __end_ofPL6 0A32  
                      __end_ofPL8 11E0                  ___lbdiv@quotient 004D  
               __end_of_TiGetTics 1ACA                       _TiInitTimer 1A56  
                     ?_JnovaTecla 0045                           ??_LcLCD 0059  
                         ??_SMSon 004A                         ?_LcGotoXY 0052  
                       ?_LcLliure 0045                           ??_Minit 004B  
                       ?_LcScroll 0045                           ??_Sinit 004B  
                 JnovaTecla@tecla 004A                           ??_Uinit 004E  
            __size_of_init_eusart 0016                         ?_JendGame 0045  
                  ??_UcheckExists 004A               MNouJoystick@posicio 004A  
                      ??_GLCDInit 004B           __size_of_GLCDMostraMenu 000C  
                      __pbssBANK0 0080                        __pbssBANK1 0100  
                       ?_TeTeclat 0045                       _TiResetTics 1BAC  
                 ?_UgetNumUsuaris 0045                    ?_JnovaDireccio 0045  
                   ??_UmotorUsers 004F                 __end_of_UgetScore 1C94  
                   ?_JoystickInit 0045                           ?_SMSoff 0045  
                         ?_LcInit 0045                     _CantaPartAlta 173C  
                         ?_SMotor 0045                           ?_TeInit 0045  
                         ?_Espera 0051                 __end_of_UenviaPas 1C2C  
                     __TiRSITimer 1892               _indexNextUserStruct 002B  
                       ?_UgetTop5 0045                 __end_of_UnewScore 1CDA  
                      ??_HGetTime 004C                     ?_UgetUserName 004A  
                ??_compareStrings 004D                           _BAUDCON 000FB8  
                     ?_UenviaChar 004A              __size_of_playAltaveu 0004  
              __size_of_motorHora 0084            __size_of_MsetNovaTecla 0008  
      __end_of_calculateShowUsers 1D9A                           LcInit@i 0056  
                ?_HActualitzaHora 004A                        ??_LcGotoXY 0053  
                    ?_MNovaLletra 0045                        ??_LcLliure 004A  
                      ??_LcScroll 004D                  ??_SIOcheckKrebut 004A  
             __size_of_TiGetTimer 001E              __size_of_CToAobtenir 0004  
                      ??_JendGame 004A                           _HJugant 1D6A  
                       ?_high_rsi 0045                           _JJuguem 1D02  
                         _LcClear 1B12                           _CantaIR 1B90  
                    ?_LcNewString 004D                    ??_JoystickInit 004A  
                       ?_initHora 0045                        ??_TeTeclat 0051  
                     _WaitForBusy 1918                    ?_CantaPartAlta 0045  
           __end_of_SsetNovaTecla 1D32                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00B4                           __Hparam 0000  
                 __size_of_SMotor 01B4               __size_of_JnovaTecla 0008  
                 __size_of_TeInit 0008                   __size_of_Espera 0022  
                         __Lparam 0000                        ??_UgetTop5 004A  
                    ??_SIOendGame 004A                         ?_motorSIO 0045  
                       ?_motorJoc 0045                    ??_UgetUserName 004C  
               _getArrayShowUsers 1B74               __end_of_UmotorUsers 0C7C  
        ?_UcheckExistsNotFinished 0045                 __end_of_arrayZero 1EFF  
                         ___lbdiv 19C2                     ?_motorAltaveu 0045  
              ?_getArrayShowUsers 004A                           __pcinit 17A2  
    __end_of_UcheckExistsGetError 1DA2                           _ferMenu 03B9  
                      _init_ports 1B56                           __ramtop 0200  
                         __ptext0 166A                           __ptext1 0CCA  
                         __ptext2 1CD0                           __ptext3 1436  
                         __ptext4 1ACA                           __ptext5 1D82  
                         __ptext6 1C4C                           __ptext7 1CDA  
                         __ptext8 1CE2                           __ptext9 1CEA  
                       _T0CONbits 000FD5                         _GLCDMotor 07B8  
                       CantaIR@IR 004C                           _initSIO 1D12  
                         _counter 0034                           _horaTmp 0041  
          conversorJoystick@direc 004A               ??_getArrayShowUsers 004C  
                     UenviaChar@c 004B        __end_of_escriureCharEEPROM 1AA4  
               __end_of_loginText 1FAF                  LcNewString@new_s 004D  
                 WaitForBusy@Busy 0051                      _do_showUsers 03BC  
                         _userPtr 0009                 GLCDMostraMenu@num 004A  
              __end_of_SIOendGame 1D86                        ??_high_rsi 0046  
            __end_of_CToAHaAcabat 1DC2              end_of_initialization 17EC  
                         _usuaris 0100                     UgetScore@quin 004A  
                 ??_JnovaDireccio 004A                        ??_initHora 004B  
        __end_of_llegirCharEEPROM 1C4C           __size_of_CantaPartBaixa 005C  
                   __Lmediumconst 1EF4                   TiGetTics@Handle 004E  
                   _MsetNovaTecla 1D32               __size_of_UenviaChar 0010  
               _conversorJoystick 1ACA                 __end_of_motorHora 15EE  
                ??_HClearNouSegon 004A                        _novaLletra 0068  
       __end_of_getArrayShowUsers 1B90                ?_conversorJoystick 0045  
                 _usuariActualSIO 0061                        ??_motorSIO 0059  
                       _CToAReset 1D0A                        ??_motorJoc 0058  
                 TiGetTics@actual 004F                     ?_SIONovaTecla 0045  
                      GLCDMotor@j 001F                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 1CEA  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 0051  
        __size_of_checkHoraAcabat 000C                        _numUsuaris 002D  
            __end_of_UcheckExists 1DA6                     TeTeclat@files 0035  
             ??_conversorJoystick 004A                SIOStartGame@usuari 004A  
          __size_of_JoystickMotor 00D6                     TeTeclat@state 0037  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 0045                     ?_SIOStartGame 0045  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
     __size_of_UshowUsersCalculat 000C                         _HNouSegon 1C58  
               UnewScore@scoretmp 004A                    _GLCDMostraMenu 1CA0  
       __end_of_conversorJoystick 1AEE                   ??_CantaPartAlta 004A  
                  ?_MsetNovaTecla 0045                         _CantaData 1956  
               __size_of_GLCDInit 0008                       _UmotorUsers 0A4A  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 1CA0  
                  __end_of_SMSoff 1D7C                      ??_TiGetTimer 004A  
                  __end_of_LcInit 142C                    ??_SIONovaTecla 004A  
                      ?_CToAReset 0045                    __end_of_SMotor 1066  
            __end_of_teclaPremuda 1F9C                         _LcPutChar 184A  
                  __end_of_TeInit 1D42                 motorAltaveu@state 0023  
                  __end_of_Espera 1B56                    GLCDMotor@state 0020  
      __end_of_EscriuPrimeraOrdre 1652                 __size_of_HGetTime 0004  
                   __pidataCOMRAM 1BC8                       ?_init_ports 0045  
                       _NoFerMenu 1DB2                         _ColumnAct 003E  
            __end_of_JoystickInit 1C1C                    ??_SIOStartGame 004A  
                       _URegister 1DA6                         _HnoJugant 1D86  
                    ?_TiInitTimer 0045              __end_of_registerText 1FA7  
                    ??_JnovaTecla 004A                         _SiFerMenu 1DAA  
                     __end_ofPL10 1088                       __end_ofPL20 136A  
                     __end_ofPL12 1A56                       __end_ofPL30 0782  
                     __end_ofPL22 156A                       __end_ofPL14 0C98  
                     __end_ofPL40 1660                       __end_ofPL32 1984  
                     __end_ofPL24 0CC2                       __end_ofPL16 0CA4  
                     __end_ofPL50 079C                       __end_ofPL42 1378  
                     __end_ofPL34 0788                       __end_ofPL26 0EA8  
                     __end_ofPL18 0CB0                       __end_ofPL60 18DA  
                     __end_ofPL52 0EB2                       __end_ofPL44 0792  
                     __end_ofPL36 183E                       __end_ofPL28 1BC8  
                     __end_ofPL70 0A4A                       __end_ofPL62 166A  
                     __end_ofPL54 198E                       __end_ofPL46 184A  
                     __end_ofPL38 0A40                       __end_ofPL80 07B0  
                     __end_ofPL72 1918                       __end_ofPL64 1B34  
                     __end_ofPL56 1092                       __end_ofPL48 190E  
                     __end_ofPL82 07B8                       __end_ofPL74 1892  
                     __end_ofPL66 1436                       __end_ofPL58 173C  
                     __end_ofPL84 0CCA                       __end_ofPL76 07A2  
                     __end_ofPL68 17A2                       __end_ofPL78 07A8  
             start_initialization 17A2                         _TiGetTics 1AA4  
          __end_of_GLCDMostraMenu 1CAC                        ?_HNouSegon 0045  
                ??_UgetNumUsuaris 004A                  UmotorUsers@state 0027  
               __size_of_LcGotoXY 0034              __end_of_UgetUserName 1C0A  
              __end_of_TiGetTimer 1A48                     JJuguem@usuari 004A  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
               __size_of_LcScroll 0006                     _JoystickMotor 11E0  
               __size_of_JendGame 0004                      ?_TiResetTics 0045  
                      ?_CantaData 0045              _UcheckExistsGetError 1D9E  
         __end_of_SIONovaDireccio 1CF2              __size_of_LcNewString 000C  
                        ??_SMSoff 004A                          ??_LcInit 0055  
                       _NovaTecla 0069                 __size_of_TeTeclat 0116  
                        ??_SMotor 0051        __size_of_getArrayShowUsers 001C  
                        ??_TeInit 004B                      ?__TiRSITimer 0045  
                   ??_initAltaveu 004B                          ??_Espera 0053  
                       _UgetScore 1C88                __end_of_JnovaTecla 1CFA  
                      ?_LcPutChar 0045                         _UenviaPas 1C1C  
               __size_of_UgetTop5 000C                    motorHora@state 0014  
                    _menuDaltGLCD 0021                      ??_UenviaChar 004B  
                       _UnewScore 1CD0                        ?_NoFerMenu 0045  
                     ??_GLCDMotor 0059                        ?_URegister 0045  
                      ?_HnoJugant 0045                 ??_checkHoraAcabat 004A  
                   ??_init_eusart 004A                        ?_SiFerMenu 0045  
                     __pbssCOMRAM 0001             __size_of_CToAHaAcabat 0004  
                      ?_TiGetTics 004A                   ?_GLCDMostraMenu 0045  
                        ?_HJugant 0045                    ?_JoystickMotor 0045  
                 ??_MsetNovaTecla 004A              __end_of_motorAltaveu 1552  
                        ?_JJuguem 0045                          ?_LcClear 0045  
                        ?_CantaIR 0045        __size_of_conversorJoystick 0024  
              _calculateShowUsers 1D96                    _CantaPartBaixa 16D6  
        ??_SIOHaAcabatPuntuacions 004A             ?_UcheckExistsGetError 0045  
               __size_of_high_rsi 002A                      ?_WaitForBusy 0045  
             __size_of_init_ports 001E                MsetNovaTecla@tecla 004A  
              SsetNovaTecla@tecla 004A                __end_of_UenviaChar 1C3C  
         __size_of_CToAConverteix 000C                 __size_of_initHora 0008  
           __size_of_UcheckExists 0004               ?_calculateShowUsers 0045  
                      ?_UgetScore 0045                       ??_CToAReset 004A  
                       __pintcode 0008                     __pmediumconst 1EF4  
                        ?___lbdiv 004A                     ??_playAltaveu 004A  
                      ?_UenviaPas 004A                 __size_of_motorSIO 01D2  
               __size_of_motorJoc 00A2                   CantaPartBaixa@c 004B  
                    _CToAHaAcabat 1DBE               __end_of_initAltaveu 1D2A  
                      ?_UnewScore 0045                         _arrayZero 1EFD  
                        ?_initSIO 0045                         _convertir 005E  
                   ??_CToAobtenir 004C                    __size_of_LcLCD 0036  
                  __size_of_SMSon 0006              ??_calculateShowUsers 004A  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 1CEA                    __size_of_Sinit 0008  
                     ??_HNouSegon 004A                    __size_of_Uinit 009C  
                     _direccioSIO 0060                       _direccioJoc 0013  
          __end_of_CantaPartBaixa 1732                JoystickMotor@state 0017  
                        _GLCDInit 1D62                       _do_register 03BD  
             __end_of_init_eusart 1BF6                         _newString 03B8  
                    _UcheckExists 1DA2                         _loginText 1FA7  
                       _jugantSIO 03B1          __size_of_HActualitzaHora 0034  
                       _jugantJoc 03B2                      UgetTop5@quin 004A  
                     ??_CantaData 004C                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
               ?_llegirCharEEPROM 0045                     ?_MNouJoystick 0045  
                ?_SIONovaDireccio 0045              __end_of_SIOStartGame 1CE2  
                   UenviaChar@pos 004A                _escriureCharEEPROM 1A7E  
                       _novaTecla 006B                ??_llegirCharEEPROM 004A  
                   motorSIO@state 000F                          _PIR1bits 000F9E  
             __end_of_lletraInici 1EFD                       ??_LcPutChar 0058  
                       _timerGLCD 0022                         _motorHora 156A  
                        _RCONbits 000FD0                         _reproduir 03BA  
                        _HGetTime 1D8A             __size_of_JoystickInit 0012  
                       _timerHora 0016                         _timerMenu 0032  
             ?_escriureCharEEPROM 004A                       ??_NoFerMenu 004A  
                      _ADCON0bits 000FC2                       ??_URegister 004A  
                     ??_HnoJugant 004A                       ??_SiFerMenu 004A  
           __size_of_UgetUserName 0014               __end_of_playAltaveu 1D96  
          __size_of_SsetNovaTecla 0008                          Espera@ms 0051  
                       _zeroTecla 003A                          _LcGotoXY 19F6  
                  _usuariLoguejat 0066                          _LcLliure 1CC4  
                     ??_TiGetTics 004C           __size_of_compareStrings 002A  
             llegirCharEEPROM@pos 004A              __size_of_TiInitTimer 0028  
                        _LcScroll 1D7C                   ??_JoystickMotor 004B  
                   GLCDMotor@max1 0065                     GLCDMotor@max2 0064  
                   GLCDMotor@min1 001E                     GLCDMotor@min2 001D  
                    _teclaPremuda 1F90                          _JendGame 1DB6  
                       _usuariJoc 0063                       LcGotoXY@Row 0052  
                       copy_data0 17B6              ??_escriureCharEEPROM 004B  
                 ?_CantaPartBaixa 0045               __end_of_CToAobtenir 1DBE  
                __size_of_HJugant 0006            ??_UcheckExistsGetError 004A  
           escriureCharEEPROM@pos 004A                  __size_of_JJuguem 0008  
                __size_of_LcClear 0018                  __size_of_CantaIR 001C  
                        _TeTeclat 1092             __end_of_JnovaDireccio 1D02  
                  ??_MNouJoystick 004A                    _do_updateScore 03BB  
 __size_of_SIOHaAcabatPuntuacions 0004                      ?_UmotorUsers 0045  
                    _JoystickInit 1C0A                        _EECON1bits 000FA6  
                    _registerText 1F9C                       _indexUsuari 0030  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0010  
                   motorJoc@state 0012                          __Hrparam 0000  
                     _initAltaveu 1D22                       ??_UgetScore 004A  
                        _UgetTop5 1C7C                         menu@state 002E  
                        __Lrparam 0000                        ?_motorHora 0045  
            __size_of__TiRSITimer 003E                      _UgetUserName 1BF6  
                     ??_UenviaPas 004B                  __size_of___lbdiv 0034  
                    _novaDireccio 0067                       ??_UnewScore 004A  
                    ??_init_ports 004A               HActualitzaHora@nova 004A  
      __end_of_UshowUsersCalculat 1C7C                       _init_eusart 1BE0  
                __size_of_initSIO 0008             __size_of_motorAltaveu 007A  
                    _novaTeclaJOC 0062                      _novaTeclaSIO 005F  
                 _do_check_exists 03BE                          __ptext10 1D86  
                        __ptext11 1C58                _EscriuPrimeraOrdre 15EE  
                        __ptext20 1C64                          __ptext12 1D6A  
                        __ptext21 1D96                          __ptext13 1D8A  
                        __ptext30 1D9E                          __ptext22 1C70  
                        __ptext14 1D8E                          __ptext31 1DA2  
                        __ptext23 1BF6                          __ptext15 156A  
                        __ptext40 1CFA                          __ptext32 1DA6  
                        __ptext24 1C7C                          __ptext16 1D92  
                        __ptext41 1DB6                          __ptext33 1DAA  
                        __ptext25 1C88                          __ptext17 14D8  
                        __ptext50 1BE0                          __ptext42 1D02  
                        __ptext34 1D70                          __ptext26 1D9A  
                        __ptext18 0036                          __ptext51 1D12  
                        __ptext43 198E                          __ptext35 1D76  
                        __ptext27 1C1C                          __ptext19 1B74  
                        __ptext60 1A56                          __ptext52 1D1A  
                        __ptext44 1CA0                          __ptext36 1DAE  
                        __ptext28 1C2C                          __ptext61 1092  
                        __ptext53 1D22                          __ptext45 1DBA  
                        __ptext37 1DB2                          __ptext29 1C94  
                        __ptext70 1378                          __ptext62 1D2A  
                        __ptext54 0A4A                          __ptext46 1DBE  
                        __ptext38 1D7C                          __ptext71 15EE  
                        __ptext63 1D32                          __ptext55 1A7E  
                        __ptext47 1CAC                          __ptext39 1CF2  
                        __ptext80 1B12                          __ptext72 11E0  
                        __ptext64 1D3A                          __ptext56 18DA  
                        __ptext48 1D0A                          __ptext81 19F6  
                        __ptext73 1D5A                          __ptext65 1D42  
                        __ptext57 12B6                          __ptext49 1B56  
                        __ptext90 1A2A                          __ptext82 1918  
                        __ptext74 1C0A                          __ptext66 0EB2  
                        __ptext58 1C3C                          __ptext91 1AEE  
                        __ptext83 1B90                          __ptext75 07B8  
                        __ptext67 1D4A                          __ptext59 19C2  
                        __ptext84 16D6                          __ptext76 184A  
                        __ptext68 1D52                          __ptext93 1892  
                        __ptext85 173C                          __ptext77 1956  
                        __ptext69 17FA                          __ptext86 1B34  
                        __ptext78 1CB8                          __ptext87 1BAC  
                        __ptext79 1CC4                          __ptext88 1AA4  
                        __ptext89 1D62                    CantaPartAlta@c 004B  
                     _lletraASCII 006C                          _high_rsi 0008  
                        _copsNota 0024                          _s_Timers 0080  
                   __size_of_CtoA 0024                          _initHora 1D1A  
                     _lletraInici 1EF5                          _menuDalt 0031  
                        _menuList 1EFF               ?_EscriuPrimeraOrdre 0045  
                   __size_of_main 006C                     __size_of_menu 0742  
           __end_of_CantaPartAlta 1798                    _CToAConverteix 1CAC  
                   CantaData@Data 004C                          _tiTeclat 0038  
              __end_of_init_ports 1B74                          _setSMSon 03C0  
                   _SsetNovaTecla 1D2A              __size_of_WaitForBusy 003E  
                        _nouSegon 03B4                          _scoreUsr 0028  
                        _motorSIO 0CCA                 ??_HActualitzaHora 004B  
                        _motorJoc 1436                   _checkHoraAcabat 1C64  
                        _timerSIO 0011                          _timerSMS 003B  
                        isa$xinst 000000                          int$flags 0079  
                    UenviaPas@pos 004A                       _playAltaveu 1D92  
                    _motorAltaveu 14D8           __size_of_HClearNouSegon 0004  
          _SIOHaAcabatPuntuacions 1DAE              ??_EscriuPrimeraOrdre 004A  
                      LcInit@rows 0055                  ??_GLCDMostraMenu 004A  
           __size_of_SIONovaTecla 0008           _UcheckExistsNotFinished 1C94  
                      _INTCONbits 000FF2                     ??_MNovaLletra 004A  
                     _CToAobtenir 1DBA             __size_of_SIOStartGame 0008  
                   ??_LcNewString 004F                          intlevel2 0000  
                    _timerAltaveu 0025                    _arrayShowUsers 0001  
          __end_of_CToAConverteix 1CB8                        LcPutChar@c 0058  
                  ?_SsetNovaTecla 0045                 MNovaLletra@lletra 004A  
                 compareStrings@a 004A                   compareStrings@b 004B  
                     ??_motorHora 0051                      _SIONovaTecla 1CE2  
                     _tempsAcabat 03B3                       GLCDMotor@k1 001C  
                     GLCDMotor@k2 001B              __end_of_MNouJoystick 1D62  
                    _SIOStartGame 1CDA                    _compareStrings 18DA  
                     _tmpPassword 00A2               __end_of_MNovaLletra 1D52  
                 ?_CToAConverteix 0045             __end_of_MsetNovaTecla 1D3A  
         __end_of_checkHoraAcabat 1C70                       _tmpUsername 00AB  
                  _SIOcheckKrebut 1C4C                       SMotor@state 0039  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 1CC4  
            __size_of_UmotorUsers 0232                        _SIOendGame 1D82  
