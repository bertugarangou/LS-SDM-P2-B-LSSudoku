

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 09 12:05:10 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   115                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   116                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   118                           	psect	pa_nodes0,global,class=CODE,delta=1
   119  0000                     
   120                           ; Version 2.32
   121                           ; Generated 02/02/2021 GMT
   122                           ; 
   123                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution. Publication is not required when
   137                           ;        this file is used in an embedded application.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC18F4321 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155  0000                     
   156                           	psect	idataCOMRAM
   157  001FB9                     __pidataCOMRAM:
   158                           	callstack 0
   159                           
   160                           ;initializer for _arrayZero
   161  001FB9  30                 	db	48
   162  001FBA  20                 	db	32
   163                           
   164                           ;initializer for _convertir
   165  001FBB  FA                 	db	250
   166                           
   167                           ;initializer for _novaTeclaSIO
   168  001FBC  FF                 	db	255
   169                           
   170                           ;initializer for _direccioSIO
   171  001FBD  FF                 	db	255
   172                           
   173                           ;initializer for _usuariActualSIO
   174  001FBE  FF                 	db	255
   175                           
   176                           ;initializer for _novaTeclaJOC
   177  001FBF  FF                 	db	255
   178                           
   179                           ;initializer for _usuariJoc
   180  001FC0  FF                 	db	255
   181                           
   182                           ;initializer for GLCDMotor@max2
   183  001FC1  0F                 	db	15
   184                           
   185                           ;initializer for GLCDMotor@max1
   186  001FC2  0F                 	db	15
   187                           
   188                           ;initializer for _usuariLoguejat
   189  001FC3  FF                 	db	255
   190                           
   191                           ;initializer for _novaDireccio
   192  001FC4  FF                 	db	255
   193                           
   194                           ;initializer for _novaLletra
   195  001FC5  FF                 	db	255
   196                           
   197                           ;initializer for _NovaTecla
   198  001FC6  FF                 	db	255
   199                           
   200                           ;initializer for _ultimaTecla
   201  001FC7  FF                 	db	255
   202                           
   203                           ;initializer for _novaTecla
   204  001FC8  FF                 	db	255
   205                           
   206                           ;initializer for _lletraASCII
   207  001FC9  FF                 	db	255
   208                           
   209                           ;initializer for _hora
   210  001FCA  33                 	db	51
   211  001FCB  30                 	db	48
   212  001FCC  3A                 	db	58
   213  001FCD  30                 	db	48
   214  001FCE  30                 	db	48
   215  001FCF  00                 	db	0
   216                           
   217                           ;initializer for _stringScore
   218  001FD0  30                 	db	48
   219  001FD1  30                 	db	48
   220  001FD2  00                 	db	0
   221                           
   222                           	psect	idataBANK0
   223  001F9E                     __pidataBANK0:
   224                           	callstack 0
   225                           
   226                           ;initializer for _lletraInici
   227  001F9E  41                 	db	65
   228  001F9F  44                 	db	68
   229  001FA0  47                 	db	71
   230  001FA1  4A                 	db	74
   231  001FA2  4D                 	db	77
   232  001FA3  50                 	db	80
   233  001FA4  54                 	db	84
   234  001FA5  57                 	db	87
   235                           
   236                           ;initializer for _registerText
   237  001FA6  32                 	db	50
   238  001FA7  2E                 	db	46
   239  001FA8  52                 	db	82
   240  001FA9  45                 	db	69
   241  001FAA  47                 	db	71
   242  001FAB  49                 	db	73
   243  001FAC  53                 	db	83
   244  001FAD  54                 	db	84
   245  001FAE  45                 	db	69
   246  001FAF  52                 	db	82
   247  001FB0  00                 	db	0
   248                           
   249                           ;initializer for _loginText
   250  001FB1  31                 	db	49
   251  001FB2  2E                 	db	46
   252  001FB3  4C                 	db	76
   253  001FB4  4F                 	db	79
   254  001FB5  47                 	db	71
   255  001FB6  49                 	db	73
   256  001FB7  4E                 	db	78
   257  001FB8  00                 	db	0
   258                           
   259                           	psect	smallconst
   260  000200                     __psmallconst:
   261                           	callstack 0
   262  000200  00                 	db	0
   263  000201                     _menuList:
   264                           	callstack 0
   265  000201  31                 	db	49
   266  000202  2E                 	db	46
   267  000203  50                 	db	80
   268  000204  6C                 	db	108
   269  000205  61                 	db	97
   270  000206  79                 	db	121
   271  000207  20                 	db	32
   272  000208  61                 	db	97
   273  000209  20                 	db	32
   274  00020A  47                 	db	71
   275  00020B  61                 	db	97
   276  00020C  6D                 	db	109
   277  00020D  65                 	db	101
   278  00020E  00                 	db	0
   279  00020F  00                 	db	0
   280  000210  00                 	db	0
   281  000211  00                 	db	0
   282  000212  00                 	db	0
   283  000213  00                 	db	0
   284  000214  00                 	db	0
   285  000215  00                 	db	0
   286  000216  00                 	db	0
   287  000217  00                 	db	0
   288  000218  00                 	db	0
   289  000219  00                 	db	0
   290  00021A  00                 	db	0
   291  00021B  00                 	db	0
   292  00021C  00                 	db	0
   293  00021D  00                 	db	0
   294  00021E  32                 	db	50
   295  00021F  2E                 	db	46
   296  000220  4D                 	db	77
   297  000221  6F                 	db	111
   298  000222  64                 	db	100
   299  000223  69                 	db	105
   300  000224  66                 	db	102
   301  000225  79                 	db	121
   302  000226  20                 	db	32
   303  000227  54                 	db	84
   304  000228  69                 	db	105
   305  000229  6D                 	db	109
   306  00022A  65                 	db	101
   307  00022B  00                 	db	0
   308  00022C  00                 	db	0
   309  00022D  00                 	db	0
   310  00022E  00                 	db	0
   311  00022F  00                 	db	0
   312  000230  00                 	db	0
   313  000231  00                 	db	0
   314  000232  00                 	db	0
   315  000233  00                 	db	0
   316  000234  00                 	db	0
   317  000235  00                 	db	0
   318  000236  00                 	db	0
   319  000237  00                 	db	0
   320  000238  00                 	db	0
   321  000239  00                 	db	0
   322  00023A  00                 	db	0
   323  00023B  33                 	db	51
   324  00023C  2E                 	db	46
   325  00023D  53                 	db	83
   326  00023E  68                 	db	104
   327  00023F  6F                 	db	111
   328  000240  77                 	db	119
   329  000241  20                 	db	32
   330  000242  47                 	db	71
   331  000243  65                 	db	101
   332  000244  6E                 	db	110
   333  000245  65                 	db	101
   334  000246  72                 	db	114
   335  000247  61                 	db	97
   336  000248  6C                 	db	108
   337  000249  20                 	db	32
   338  00024A  54                 	db	84
   339  00024B  6F                 	db	111
   340  00024C  70                 	db	112
   341  00024D  20                 	db	32
   342  00024E  35                 	db	53
   343  00024F  20                 	db	32
   344  000250  53                 	db	83
   345  000251  63                 	db	99
   346  000252  6F                 	db	111
   347  000253  72                 	db	114
   348  000254  65                 	db	101
   349  000255  73                 	db	115
   350  000256  20                 	db	32
   351  000257  00                 	db	0
   352  000258  34                 	db	52
   353  000259  2E                 	db	46
   354  00025A  4C                 	db	76
   355  00025B  6F                 	db	111
   356  00025C  67                 	db	103
   357  00025D  6F                 	db	111
   358  00025E  75                 	db	117
   359  00025F  74                 	db	116
   360  000260  00                 	db	0
   361  000261  00                 	db	0
   362  000262  00                 	db	0
   363  000263  00                 	db	0
   364  000264  00                 	db	0
   365  000265  00                 	db	0
   366  000266  00                 	db	0
   367  000267  00                 	db	0
   368  000268  00                 	db	0
   369  000269  00                 	db	0
   370  00026A  00                 	db	0
   371  00026B  00                 	db	0
   372  00026C  00                 	db	0
   373  00026D  00                 	db	0
   374  00026E  00                 	db	0
   375  00026F  00                 	db	0
   376  000270  00                 	db	0
   377  000271  00                 	db	0
   378  000272  00                 	db	0
   379  000273  00                 	db	0
   380  000274  00                 	db	0
   381  000275  35                 	db	53
   382  000276  2E                 	db	46
   383  000277  53                 	db	83
   384  000278  68                 	db	104
   385  000279  6F                 	db	111
   386  00027A  77                 	db	119
   387  00027B  20                 	db	32
   388  00027C  41                 	db	65
   389  00027D  6C                 	db	108
   390  00027E  6C                 	db	108
   391  00027F  20                 	db	32
   392  000280  55                 	db	85
   393  000281  73                 	db	115
   394  000282  65                 	db	101
   395  000283  72                 	db	114
   396  000284  73                 	db	115
   397  000285  00                 	db	0
   398  000286  00                 	db	0
   399  000287  00                 	db	0
   400  000288  00                 	db	0
   401  000289  00                 	db	0
   402  00028A  00                 	db	0
   403  00028B  00                 	db	0
   404  00028C  00                 	db	0
   405  00028D  00                 	db	0
   406  00028E  00                 	db	0
   407  00028F  00                 	db	0
   408  000290  00                 	db	0
   409  000291  00                 	db	0
   410  000292                     __end_of_menuList:
   411                           	callstack 0
   412  000292                     _teclaPremuda:
   413                           	callstack 0
   414  000292  01                 	db	1
   415  000293  02                 	db	2
   416  000294  03                 	db	3
   417  000295  04                 	db	4
   418  000296  05                 	db	5
   419  000297  06                 	db	6
   420  000298  07                 	db	7
   421  000299  08                 	db	8
   422  00029A  09                 	db	9
   423  00029B  0A                 	db	10
   424  00029C  00                 	db	0
   425  00029D  0B                 	db	11
   426  00029E                     __end_of_teclaPremuda:
   427                           	callstack 0
   428  0000                     _PIR1bits	set	3998
   429  0000                     _RCREG	set	4014
   430  0000                     _TXREG	set	4013
   431  0000                     _TXSTAbits	set	4012
   432  0000                     _ADCON0bits	set	4034
   433  0000                     _ADRESH	set	4036
   434  0000                     _ADCON2	set	4032
   435  0000                     _ADCON1	set	4033
   436  0000                     _ADCON0	set	4034
   437  0000                     _EECON2	set	4007
   438  0000                     _EEDATA	set	4008
   439  0000                     _EEADR	set	4009
   440  0000                     _T0CONbits	set	4053
   441  0000                     _TMR0L	set	4054
   442  0000                     _TMR0H	set	4055
   443  0000                     _T0CON	set	4053
   444  0000                     _INTCONbits	set	4082
   445  0000                     _RCONbits	set	4048
   446  0000                     _PORTDbits	set	3971
   447  0000                     _SPBRG	set	4015
   448  0000                     _SPBRGH	set	4016
   449  0000                     _BAUDCON	set	4024
   450  0000                     _RCSTA	set	4011
   451  0000                     _TXSTA	set	4012
   452  0000                     _EECON1bits	set	4006
   453  0000                     _LATD	set	3980
   454  0000                     _TRISD	set	3989
   455  0000                     _TRISC	set	3988
   456  0000                     _LATBbits	set	3978
   457  0000                     _TRISB	set	3987
   458  0000                     _TRISA	set	3986
   459  0000                     _PORTCbits	set	3970
   460  0000                     _LATDbits	set	3980
   461  0000                     _LATCbits	set	3979
   462  0000                     _TRISDbits	set	3989
   463  0000                     _TRISCbits	set	3988
   464  00029E                     STR_5:
   465  00029E  54                 	db	84	;'T'
   466  00029F  49                 	db	73	;'I'
   467  0002A0  4D                 	db	77	;'M'
   468  0002A1  45                 	db	69	;'E'
   469  0002A2  20                 	db	32
   470  0002A3  52                 	db	82	;'R'
   471  0002A4  45                 	db	69	;'E'
   472  0002A5  4D                 	db	77	;'M'
   473  0002A6  41                 	db	65	;'A'
   474  0002A7  49                 	db	73	;'I'
   475  0002A8  4E                 	db	78	;'N'
   476  0002A9  49                 	db	73	;'I'
   477  0002AA  4E                 	db	78	;'N'
   478  0002AB  47                 	db	71	;'G'
   479  0002AC  3A                 	db	58	;':'
   480  0002AD  00                 	db	0
   481  0002AE                     STR_4:
   482  0002AE  4D                 	db	77	;'M'
   483  0002AF  6F                 	db	111	;'o'
   484  0002B0  64                 	db	100	;'d'
   485  0002B1  69                 	db	105	;'i'
   486  0002B2  66                 	db	102	;'f'
   487  0002B3  79                 	db	121	;'y'
   488  0002B4  20                 	db	32
   489  0002B5  54                 	db	84	;'T'
   490  0002B6  69                 	db	105	;'i'
   491  0002B7  6D                 	db	109	;'m'
   492  0002B8  65                 	db	101	;'e'
   493  0002B9  3A                 	db	58	;':'
   494  0002BA  00                 	db	0
   495  0002BB                     STR_7:
   496  0002BB  54                 	db	84	;'T'
   497  0002BC  49                 	db	73	;'I'
   498  0002BD  4D                 	db	77	;'M'
   499  0002BE  45                 	db	69	;'E'
   500  0002BF  20                 	db	32
   501  0002C0  4C                 	db	76	;'L'
   502  0002C1  45                 	db	69	;'E'
   503  0002C2  46                 	db	70	;'F'
   504  0002C3  54                 	db	84	;'T'
   505  0002C4  3A                 	db	58	;':'
   506  0002C5  20                 	db	32
   507  0002C6  00                 	db	0
   508  0002C7                     STR_3:
   509  0002C7  42                 	db	66	;'B'
   510  0002C8  59                 	db	89	;'Y'
   511  0002C9  45                 	db	69	;'E'
   512  0002CA  20                 	db	32
   513  0002CB  42                 	db	66	;'B'
   514  0002CC  59                 	db	89	;'Y'
   515  0002CD  45                 	db	69	;'E'
   516  0002CE  20                 	db	32
   517  0002CF  00                 	db	0
   518  0002D0                     STR_8:
   519  0002D0  53                 	db	83	;'S'
   520  0002D1  43                 	db	67	;'C'
   521  0002D2  4F                 	db	79	;'O'
   522  0002D3  52                 	db	82	;'R'
   523  0002D4  45                 	db	69	;'E'
   524  0002D5  3A                 	db	58	;':'
   525  0002D6  20                 	db	32
   526  0002D7  00                 	db	0
   527  0002D8                     STR_6:
   528  0002D8  45                 	db	69	;'E'
   529  0002D9  52                 	db	82	;'R'
   530  0002DA  52                 	db	82	;'R'
   531  0002DB  4F                 	db	79	;'O'
   532  0002DC  52                 	db	82	;'R'
   533  0002DD  53                 	db	83	;'S'
   534  0002DE  3A                 	db	58	;':'
   535  0002DF  00                 	db	0
   536  0002E0                     STR_2:
   537  0002E0  50                 	db	80	;'P'
   538  0002E1  53                 	db	83	;'S'
   539  0002E2  57                 	db	87	;'W'
   540  0002E3  44                 	db	68	;'D'
   541  0002E4  3A                 	db	58	;':'
   542  0002E5  20                 	db	32
   543  0002E6  00                 	db	0
   544  0002E7                     STR_1:
   545  0002E7  55                 	db	85	;'U'
   546  0002E8  53                 	db	83	;'S'
   547  0002E9  45                 	db	69	;'E'
   548  0002EA  52                 	db	82	;'R'
   549  0002EB  3A                 	db	58	;':'
   550  0002EC  20                 	db	32
   551  0002ED  00                 	db	0
   552  0002EE  00                 	db	0	; dummy byte at the end
   553  0000                     
   554                           ; #config settings
   555                           
   556                           	psect	cinit
   557  001A0C                     __pcinit:
   558                           	callstack 0
   559  001A0C                     start_initialization:
   560                           	callstack 0
   561  001A0C                     __initialization:
   562                           	callstack 0
   563                           
   564                           ; Initialize objects allocated to BANK0 (27 bytes)
   565                           ; load TBLPTR registers with __pidataBANK0
   566  001A0C  0E9E               	movlw	low __pidataBANK0
   567  001A0E  6EF6               	movwf	tblptrl,c
   568  001A10  0E1F               	movlw	high __pidataBANK0
   569  001A12  6EF7               	movwf	tblptrh,c
   570  001A14  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   571  001A16  6EF8               	movwf	tblptru,c
   572  001A18  EE00  F0BC         	lfsr	0,__pdataBANK0
   573  001A1C  EE10 F01B          	lfsr	1,27
   574  001A20                     copy_data0:
   575  001A20  0009               	tblrd		*+
   576  001A22  CFF5 FFEE          	movff	tablat,postinc0
   577  001A26  50E5               	movf	postdec1,w,c
   578  001A28  50E1               	movf	fsr1l,w,c
   579  001A2A  E1FA               	bnz	copy_data0
   580                           
   581                           ; Initialize objects allocated to COMRAM (26 bytes)
   582                           ; load TBLPTR registers with __pidataCOMRAM
   583  001A2C  0EB9               	movlw	low __pidataCOMRAM
   584  001A2E  6EF6               	movwf	tblptrl,c
   585  001A30  0E1F               	movlw	high __pidataCOMRAM
   586  001A32  6EF7               	movwf	tblptrh,c
   587  001A34  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   588  001A36  6EF8               	movwf	tblptru,c
   589  001A38  EE00  F045         	lfsr	0,__pdataCOMRAM
   590  001A3C  EE10 F01A          	lfsr	1,26
   591  001A40                     copy_data1:
   592  001A40  0009               	tblrd		*+
   593  001A42  CFF5 FFEE          	movff	tablat,postinc0
   594  001A46  50E5               	movf	postdec1,w,c
   595  001A48  50E1               	movf	fsr1l,w,c
   596  001A4A  E1FA               	bnz	copy_data1
   597                           
   598                           ; Clear objects allocated to BANK1 (144 bytes)
   599  001A4C  EE01  F000         	lfsr	0,__pbssBANK1
   600  001A50  0E90               	movlw	144
   601  001A52                     clear_0:
   602  001A52  6AEE               	clrf	postinc0,c
   603  001A54  06E8               	decf	wreg,f,c
   604  001A56  E1FD               	bnz	clear_0
   605                           
   606                           ; Clear objects allocated to BANK0 (60 bytes)
   607  001A58  EE00  F080         	lfsr	0,__pbssBANK0
   608  001A5C  0E3C               	movlw	60
   609  001A5E                     clear_1:
   610  001A5E  6AEE               	clrf	postinc0,c
   611  001A60  06E8               	decf	wreg,f,c
   612  001A62  E1FD               	bnz	clear_1
   613                           
   614                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   615  001A64  6A77               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   616  001A66  6A76               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   617  001A68  6A75               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   618                           
   619                           ; Clear objects allocated to COMRAM (68 bytes)
   620  001A6A  EE00  F001         	lfsr	0,__pbssCOMRAM
   621  001A6E  0E44               	movlw	68
   622  001A70                     clear_2:
   623  001A70  6AEE               	clrf	postinc0,c
   624  001A72  06E8               	decf	wreg,f,c
   625  001A74  E1FD               	bnz	clear_2
   626  001A76                     end_of_initialization:
   627                           	callstack 0
   628  001A76                     __end_of__initialization:
   629                           	callstack 0
   630  001A76  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   631  001A78  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   632  001A7A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   633  001A7C  6EF8               	movwf	tblptru,c
   634  001A7E  0100               	movlb	0
   635  001A80  EF42  F00D         	goto	_main	;jump to C main() function
   636                           
   637                           	psect	bitbssCOMRAM
   638  0003A8                     __pbitbssCOMRAM:
   639                           	callstack 0
   640  0003A8                     _hi_ha_hora_sio2:
   641                           	callstack 0
   642  0003A8                     	ds	1
   643  0003A9                     _Krebut:
   644                           	callstack 0
   645  0003A9                     	ds	1
   646  0003AA                     _jugantSIO:
   647                           	callstack 0
   648  0003AA                     	ds	1
   649  0003AB                     _jugantJoc:
   650                           	callstack 0
   651  0003AB                     	ds	1
   652  0003AC                     _tempsAcabat:
   653                           	callstack 0
   654  0003AC                     	ds	1
   655  0003AD                     _nouSegon:
   656                           	callstack 0
   657  0003AD                     	ds	1
   658  0003AE                     _jugant:
   659                           	callstack 0
   660  0003AE                     	ds	1
   661  0003AF                     _cap2:
   662                           	callstack 0
   663  0003AF                     	ds	1
   664  0003B0                     _cap1:
   665                           	callstack 0
   666  0003B0                     	ds	1
   667  0003B1                     _newString:
   668                           	callstack 0
   669  0003B1                     	ds	1
   670  0003B2                     _ferMenu:
   671                           	callstack 0
   672  0003B2                     	ds	1
   673  0003B3                     _reproduir:
   674                           	callstack 0
   675  0003B3                     	ds	1
   676  0003B4                     _do_updateScore:
   677                           	callstack 0
   678  0003B4                     	ds	1
   679  0003B5                     _do_showUsers:
   680                           	callstack 0
   681  0003B5                     	ds	1
   682  0003B6                     _do_register:
   683                           	callstack 0
   684  0003B6                     	ds	1
   685  0003B7                     _do_check_exists:
   686                           	callstack 0
   687  0003B7                     	ds	1
   688  0003B8                     _loginNOTRegister:
   689                           	callstack 0
   690  0003B8                     	ds	1
   691  0003B9                     _setSMSon:
   692                           	callstack 0
   693  0003B9                     	ds	1
   694  0003BA                     _nou_s:
   695                           	callstack 0
   696  0003BA                     	ds	1
   697                           
   698                           	psect	bssCOMRAM
   699  000001                     __pbssCOMRAM:
   700                           	callstack 0
   701  000001                     _horaTX:
   702                           	callstack 0
   703  000001                     	ds	6
   704  000007                     _userPtr:
   705                           	callstack 0
   706  000007                     	ds	2
   707  000009                     _h_Tics:
   708                           	callstack 0
   709  000009                     	ds	2
   710  00000B                     _s_ptr:
   711                           	callstack 0
   712  00000B                     	ds	2
   713  00000D                     motorSIO@state:
   714                           	callstack 0
   715  00000D                     	ds	1
   716  00000E                     _mask:
   717                           	callstack 0
   718  00000E                     	ds	1
   719  00000F                     _charActu:
   720                           	callstack 0
   721  00000F                     	ds	1
   722  000010                     _score:
   723                           	callstack 0
   724  000010                     	ds	1
   725  000011                     _timerSIO:
   726                           	callstack 0
   727  000011                     	ds	1
   728  000012                     motorJoc@state:
   729                           	callstack 0
   730  000012                     	ds	1
   731  000013                     _direccioJoc:
   732                           	callstack 0
   733  000013                     	ds	1
   734  000014                     motorHora@state:
   735                           	callstack 0
   736  000014                     	ds	1
   737  000015                     _segons:
   738                           	callstack 0
   739  000015                     	ds	1
   740  000016                     _timerHora:
   741                           	callstack 0
   742  000016                     	ds	1
   743  000017                     JoystickMotor@state:
   744                           	callstack 0
   745  000017                     	ds	1
   746  000018                     _ultimaTeclaAD:
   747                           	callstack 0
   748  000018                     	ds	1
   749  000019                     GLCDMotor@length2:
   750                           	callstack 0
   751  000019                     	ds	1
   752  00001A                     GLCDMotor@length1:
   753                           	callstack 0
   754  00001A                     	ds	1
   755  00001B                     GLCDMotor@k2:
   756                           	callstack 0
   757  00001B                     	ds	1
   758  00001C                     GLCDMotor@k1:
   759                           	callstack 0
   760  00001C                     	ds	1
   761  00001D                     GLCDMotor@min2:
   762                           	callstack 0
   763  00001D                     	ds	1
   764  00001E                     GLCDMotor@min1:
   765                           	callstack 0
   766  00001E                     	ds	1
   767  00001F                     GLCDMotor@j:
   768                           	callstack 0
   769  00001F                     	ds	1
   770  000020                     GLCDMotor@state:
   771                           	callstack 0
   772  000020                     	ds	1
   773  000021                     _menuDaltGLCD:
   774                           	callstack 0
   775  000021                     	ds	1
   776  000022                     _timerGLCD:
   777                           	callstack 0
   778  000022                     	ds	1
   779  000023                     motorAltaveu@state:
   780                           	callstack 0
   781  000023                     	ds	1
   782  000024                     _copsNota:
   783                           	callstack 0
   784  000024                     	ds	1
   785  000025                     _timerAltaveu:
   786                           	callstack 0
   787  000025                     	ds	1
   788  000026                     _nota:
   789                           	callstack 0
   790  000026                     	ds	1
   791  000027                     UmotorUsers@state:
   792                           	callstack 0
   793  000027                     	ds	1
   794  000028                     _scoreUsr:
   795                           	callstack 0
   796  000028                     	ds	1
   797  000029                     _j:
   798                           	callstack 0
   799  000029                     	ds	1
   800  00002A                     _i:
   801                           	callstack 0
   802  00002A                     	ds	1
   803  00002B                     _indexNextUserStruct:
   804                           	callstack 0
   805  00002B                     	ds	1
   806  00002C                     _indexNextUser:
   807                           	callstack 0
   808  00002C                     	ds	1
   809  00002D                     _numUsuaris:
   810                           	callstack 0
   811  00002D                     	ds	1
   812  00002E                     menu@state:
   813                           	callstack 0
   814  00002E                     	ds	1
   815  00002F                     _pos:
   816                           	callstack 0
   817  00002F                     	ds	1
   818  000030                     _indexUsuari:
   819                           	callstack 0
   820  000030                     	ds	1
   821  000031                     _menuDalt:
   822                           	callstack 0
   823  000031                     	ds	1
   824  000032                     _timerMenu:
   825                           	callstack 0
   826  000032                     	ds	1
   827  000033                     _tmp:
   828                           	callstack 0
   829  000033                     	ds	1
   830  000034                     _counter:
   831                           	callstack 0
   832  000034                     	ds	1
   833  000035                     TeTeclat@files:
   834                           	callstack 0
   835  000035                     	ds	1
   836  000036                     TeTeclat@cols:
   837                           	callstack 0
   838  000036                     	ds	1
   839  000037                     TeTeclat@state:
   840                           	callstack 0
   841  000037                     	ds	1
   842  000038                     _tiTeclat:
   843                           	callstack 0
   844  000038                     	ds	1
   845  000039                     SMotor@state:
   846                           	callstack 0
   847  000039                     	ds	1
   848  00003A                     _zeroTecla:
   849                           	callstack 0
   850  00003A                     	ds	1
   851  00003B                     _timerSMS:
   852                           	callstack 0
   853  00003B                     	ds	1
   854  00003C                     _sumaPulsacions:
   855                           	callstack 0
   856  00003C                     	ds	1
   857  00003D                     _Timer:
   858                           	callstack 0
   859  00003D                     	ds	1
   860  00003E                     _ColumnAct:
   861                           	callstack 0
   862  00003E                     	ds	1
   863  00003F                     _RowAct:
   864                           	callstack 0
   865  00003F                     	ds	1
   866  000040                     _Rows:
   867                           	callstack 0
   868  000040                     	ds	1
   869  000041                     _horaTmp:
   870                           	callstack 0
   871  000041                     	ds	4
   872                           
   873                           	psect	dataCOMRAM
   874  000045                     __pdataCOMRAM:
   875                           	callstack 0
   876  000045                     _arrayZero:
   877                           	callstack 0
   878  000045                     	ds	2
   879  000047                     _convertir:
   880                           	callstack 0
   881  000047                     	ds	1
   882  000048                     _novaTeclaSIO:
   883                           	callstack 0
   884  000048                     	ds	1
   885  000049                     _direccioSIO:
   886                           	callstack 0
   887  000049                     	ds	1
   888  00004A                     _usuariActualSIO:
   889                           	callstack 0
   890  00004A                     	ds	1
   891  00004B                     _novaTeclaJOC:
   892                           	callstack 0
   893  00004B                     	ds	1
   894  00004C                     _usuariJoc:
   895                           	callstack 0
   896  00004C                     	ds	1
   897  00004D                     GLCDMotor@max2:
   898                           	callstack 0
   899  00004D                     	ds	1
   900  00004E                     GLCDMotor@max1:
   901                           	callstack 0
   902  00004E                     	ds	1
   903  00004F                     _usuariLoguejat:
   904                           	callstack 0
   905  00004F                     	ds	1
   906  000050                     _novaDireccio:
   907                           	callstack 0
   908  000050                     	ds	1
   909  000051                     _novaLletra:
   910                           	callstack 0
   911  000051                     	ds	1
   912  000052                     _NovaTecla:
   913                           	callstack 0
   914  000052                     	ds	1
   915  000053                     _ultimaTecla:
   916                           	callstack 0
   917  000053                     	ds	1
   918  000054                     _novaTecla:
   919                           	callstack 0
   920  000054                     	ds	1
   921  000055                     _lletraASCII:
   922                           	callstack 0
   923  000055                     	ds	1
   924  000056                     _hora:
   925                           	callstack 0
   926  000056                     	ds	6
   927  00005C                     _stringScore:
   928                           	callstack 0
   929  00005C                     	ds	3
   930                           
   931                           	psect	bssBANK0
   932  000080                     __pbssBANK0:
   933                           	callstack 0
   934  000080                     _s_Timers:
   935                           	callstack 0
   936  000080                     	ds	24
   937  000098                     _puntuacions:
   938                           	callstack 0
   939  000098                     	ds	10
   940  0000A2                     _arrayShowUsers:
   941                           	callstack 0
   942  0000A2                     	ds	8
   943  0000AA                     _tmpPassword:
   944                           	callstack 0
   945  0000AA                     	ds	9
   946  0000B3                     _tmpUsername:
   947                           	callstack 0
   948  0000B3                     	ds	9
   949                           
   950                           	psect	dataBANK0
   951  0000BC                     __pdataBANK0:
   952                           	callstack 0
   953  0000BC                     _lletraInici:
   954                           	callstack 0
   955  0000BC                     	ds	8
   956  0000C4                     _registerText:
   957                           	callstack 0
   958  0000C4                     	ds	11
   959  0000CF                     _loginText:
   960                           	callstack 0
   961  0000CF                     	ds	8
   962                           
   963                           	psect	bssBANK1
   964  000100                     __pbssBANK1:
   965                           	callstack 0
   966  000100                     _usuaris:
   967                           	callstack 0
   968  000100                     	ds	144
   969                           
   970                           	psect	cstackBANK0
   971  0000D7                     __pcstackBANK0:
   972                           	callstack 0
   973  0000D7                     ??_menu:
   974                           
   975                           ; 1 bytes @ 0x0
   976  0000D7                     	ds	5
   977                           
   978                           	psect	cstackCOMRAM
   979  00005F                     __pcstackCOMRAM:
   980                           	callstack 0
   981  00005F                     
   982                           ; 1 bytes @ 0x0
   983  00005F                     	ds	1
   984  000060                     ??_high_rsi:
   985                           
   986                           ; 1 bytes @ 0x1
   987  000060                     	ds	4
   988  000064                     ??_EscriuPrimeraOrdre:
   989  000064                     ??_CantaPartAlta:
   990  000064                     ??_CantaPartBaixa:
   991  000064                     ?_TiGetTics:
   992                           	callstack 0
   993  000064                     ?_UgetUserName:
   994                           	callstack 0
   995  000064                     ?_getArrayShowUsers:
   996                           	callstack 0
   997  000064                     SsetNovaTecla@tecla:
   998                           	callstack 0
   999  000064                     TiResetTics@Handle:
  1000                           	callstack 0
  1001  000064                     MsetNovaTecla@tecla:
  1002                           	callstack 0
  1003  000064                     MNovaLletra@lletra:
  1004                           	callstack 0
  1005  000064                     MNouJoystick@posicio:
  1006                           	callstack 0
  1007  000064                     UenviaChar@pos:
  1008                           	callstack 0
  1009  000064                     UenviaPas@pos:
  1010                           	callstack 0
  1011  000064                     escriureCharEEPROM@pos:
  1012                           	callstack 0
  1013  000064                     llegirCharEEPROM@pos:
  1014                           	callstack 0
  1015  000064                     compareStrings@a:
  1016                           	callstack 0
  1017  000064                     UgetScore@quin:
  1018                           	callstack 0
  1019  000064                     UgetTop5@quin:
  1020                           	callstack 0
  1021  000064                     UnewScore@scoretmp:
  1022                           	callstack 0
  1023  000064                     GLCDMostraMenu@num:
  1024                           	callstack 0
  1025  000064                     HActualitzaHora@nova:
  1026                           	callstack 0
  1027  000064                     JJuguem@usuari:
  1028                           	callstack 0
  1029  000064                     JnovaTecla@tecla:
  1030                           	callstack 0
  1031  000064                     JnovaDireccio@dir:
  1032                           	callstack 0
  1033  000064                     conversorJoystick@direc:
  1034                           	callstack 0
  1035  000064                     SIONovaDireccio@num:
  1036                           	callstack 0
  1037  000064                     SIOStartGame@usuari:
  1038                           	callstack 0
  1039  000064                     SIONovaTecla@tecla:
  1040                           	callstack 0
  1041  000064                     CToAConverteix@numero:
  1042                           	callstack 0
  1043  000064                     ___lbdiv@divisor:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x5
  1047  000064                     	ds	1
  1048  000065                     ??_JoystickMotor:
  1049  000065                     CantaPartAlta@c:
  1050                           	callstack 0
  1051  000065                     CantaPartBaixa@c:
  1052                           	callstack 0
  1053  000065                     EscriuPrimeraOrdre@ordre:
  1054                           	callstack 0
  1055  000065                     UenviaChar@c:
  1056                           	callstack 0
  1057  000065                     UenviaPas@c:
  1058                           	callstack 0
  1059  000065                     escriureCharEEPROM@c:
  1060                           	callstack 0
  1061  000065                     ___lbdiv@dividend:
  1062                           	callstack 0
  1063  000065                     compareStrings@b:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x6
  1067  000065                     	ds	1
  1068  000066                     ??_TiGetTics:
  1069  000066                     CantaIR@IR:
  1070                           	callstack 0
  1071  000066                     CantaData@Data:
  1072                           	callstack 0
  1073  000066                     UgetUserName@quin:
  1074                           	callstack 0
  1075  000066                     getArrayShowUsers@quin:
  1076                           	callstack 0
  1077  000066                     ___lbdiv@counter:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x7
  1081  000066                     	ds	1
  1082  000067                     ??_compareStrings:
  1083  000067                     ___lbdiv@quotient:
  1084                           	callstack 0
  1085  000067                     LcNewString@new_s:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x8
  1089  000067                     	ds	1
  1090  000068                     ??_Uinit:
  1091  000068                     TiGetTics@Handle:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x9
  1095  000068                     	ds	1
  1096  000069                     ??_UmotorUsers:
  1097  000069                     TiGetTics@actual:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0xA
  1101  000069                     	ds	1
  1102  00006A                     Uinit@k:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0xB
  1106  00006A                     	ds	1
  1107  00006B                     ??_SMotor:
  1108  00006B                     ??_motorHora:
  1109  00006B                     ??_motorAltaveu:
  1110  00006B                     ??_TeTeclat:
  1111  00006B                     WaitForBusy@Busy:
  1112                           	callstack 0
  1113  00006B                     Uinit@k_1175:
  1114                           	callstack 0
  1115  00006B                     Espera@ms:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0xC
  1119  00006B                     	ds	1
  1120  00006C                     LcGotoXY@Row:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0xD
  1124  00006C                     	ds	1
  1125  00006D                     ??_Espera:
  1126  00006D                     LcGotoXY@Fisics:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0xE
  1130  00006D                     	ds	1
  1131  00006E                     Espera@Timer:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0xF
  1135  00006E                     	ds	1
  1136  00006F                     LcInit@rows:
  1137                           	callstack 0
  1138  00006F                     _LcGotoXY$334:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x10
  1142  00006F                     	ds	1
  1143  000070                     LcInit@i:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x11
  1147  000070                     	ds	1
  1148  000071                     LcGotoXY@Column:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x12
  1152  000071                     	ds	1
  1153  000072                     ??_motorJoc:
  1154  000072                     LcPutChar@c:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x13
  1158  000072                     	ds	1
  1159  000073                     ??_GLCDMotor:
  1160  000073                     ??_motorSIO:
  1161  000073                     
  1162                           ; 1 bytes @ 0x14
  1163  000073                     	ds	2
  1164  000075                     
  1165                           ; 1 bytes @ 0x16
  1166 ;;
  1167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1168 ;;
  1169 ;; *************** function _main *****************
  1170 ;; Defined at:
  1171 ;;		line 75 in file "main.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1
  1185 ;;      Params:         0       0       0
  1186 ;;      Locals:         0       0       0
  1187 ;;      Temps:          0       0       0
  1188 ;;      Totals:         0       0       0
  1189 ;;Total ram usage:        0 bytes
  1190 ;; Hardware stack levels required when called: 7
  1191 ;; This function calls:
  1192 ;;		_CtoA
  1193 ;;		_GLCDInit
  1194 ;;		_GLCDMotor
  1195 ;;		_JoystickInit
  1196 ;;		_JoystickMotor
  1197 ;;		_LcInit
  1198 ;;		_LcLCD
  1199 ;;		_Minit
  1200 ;;		_SMotor
  1201 ;;		_Sinit
  1202 ;;		_TeInit
  1203 ;;		_TeTeclat
  1204 ;;		_TiInitTimer
  1205 ;;		_Uinit
  1206 ;;		_UmotorUsers
  1207 ;;		_initAltaveu
  1208 ;;		_initHora
  1209 ;;		_initSIO
  1210 ;;		_init_eusart
  1211 ;;		_init_ports
  1212 ;;		_menu
  1213 ;;		_motorAltaveu
  1214 ;;		_motorHora
  1215 ;;		_motorJoc
  1216 ;;		_motorSIO
  1217 ;; This function is called by:
  1218 ;;		Startup code after reset
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text0
  1223  001A84                     __ptext0:
  1224                           	callstack 0
  1225  001A84                     _main:
  1226                           	callstack 24
  1227                           
  1228                           ;main.c: 76:     init_ports();
  1229                           
  1230                           ;incstack = 0
  1231  001A84  EC96  F00F         	call	_init_ports	;wreg free
  1232                           
  1233                           ;main.c: 77:     init_eusart();
  1234  001A88  ECEA  F00F         	call	_init_eusart	;wreg free
  1235                           
  1236                           ;main.c: 78:     TiInitTimer();
  1237  001A8C  ECF2  F00E         	call	_TiInitTimer	;wreg free
  1238                           
  1239                           ;main.c: 79:     TeInit();
  1240  001A90  ECB8  F000         	call	_TeInit	;wreg free
  1241                           
  1242                           ;main.c: 80:     Sinit();
  1243  001A94  ECBC  F000         	call	_Sinit	;wreg free
  1244                           
  1245                           ;main.c: 81:     SMotor();
  1246  001A98  EC41  F009         	call	_SMotor	;wreg free
  1247                           
  1248                           ;main.c: 83:     initAltaveu();
  1249  001A9C  ECAC  F000         	call	_initAltaveu	;wreg free
  1250                           
  1251                           ;main.c: 84:     GLCDInit();
  1252  001AA0  ECCC  F000         	call	_GLCDInit	;wreg free
  1253                           
  1254                           ;main.c: 85:     JoystickInit();
  1255  001AA4  EC25  F000         	call	_JoystickInit	;wreg free
  1256                           
  1257                           ;main.c: 86:     initHora();
  1258  001AA8  ECA8  F000         	call	_initHora	;wreg free
  1259                           
  1260                           ;main.c: 87:     initSIO();
  1261  001AAC  ECA4  F000         	call	_initSIO	;wreg free
  1262                           
  1263                           ;main.c: 89:     LcInit(2);
  1264  001AB0  0E02               	movlw	2
  1265  001AB2  EC8B  F00B         	call	_LcInit
  1266                           
  1267                           ;main.c: 90:     Uinit();
  1268  001AB6  ECB5  F00A         	call	_Uinit	;wreg free
  1269                           
  1270                           ;main.c: 91:     Minit();
  1271  001ABA  ECC4  F000         	call	_Minit	;wreg free
  1272  001ABE                     l7227:
  1273                           
  1274                           ;main.c: 93:         GLCDMotor();
  1275  001ABE  ECB3  F006         	call	_GLCDMotor	;wreg free
  1276                           
  1277                           ;main.c: 94:         motorJoc();
  1278  001AC2  ECEA  F00B         	call	_motorJoc	;wreg free
  1279                           
  1280                           ;main.c: 95:         motorSIO();
  1281  001AC6  EC39  F005         	call	_motorSIO	;wreg free
  1282                           
  1283                           ;main.c: 96:         motorHora();
  1284  001ACA  EC86  F00C         	call	_motorHora	;wreg free
  1285                           
  1286                           ;main.c: 97:         JoystickMotor();
  1287  001ACE  EC20  F00B         	call	_JoystickMotor	;wreg free
  1288                           
  1289                           ;main.c: 98:         menu();
  1290  001AD2  EC78  F001         	call	_menu	;wreg free
  1291                           
  1292                           ;main.c: 99:         CtoA();
  1293  001AD6  EC62  F00F         	call	_CtoA	;wreg free
  1294                           
  1295                           ;main.c: 100:         motorAltaveu();
  1296  001ADA  EC3D  F00C         	call	_motorAltaveu	;wreg free
  1297                           
  1298                           ;main.c: 101:         UmotorUsers();
  1299  001ADE  ECFF  F007         	call	_UmotorUsers	;wreg free
  1300                           
  1301                           ;main.c: 103:         TeTeclat();
  1302  001AE2  EC18  F00A         	call	_TeTeclat	;wreg free
  1303                           
  1304                           ;main.c: 104:         SMotor();
  1305  001AE6  EC41  F009         	call	_SMotor	;wreg free
  1306                           
  1307                           ;main.c: 105:         LcLCD();
  1308  001AEA  ECDE  F00D         	call	_LcLCD	;wreg free
  1309  001AEE  D7E7               	goto	l7227
  1310  001AF0                     __end_of_main:
  1311                           	callstack 0
  1312                           
  1313 ;; *************** function _motorSIO *****************
  1314 ;; Defined at:
  1315 ;;		line 49 in file "SIO.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;		None
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1
  1329 ;;      Params:         0       0       0
  1330 ;;      Locals:         0       0       0
  1331 ;;      Temps:          2       0       0
  1332 ;;      Totals:         2       0       0
  1333 ;;Total ram usage:        2 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; Hardware stack levels required when called: 6
  1336 ;; This function calls:
  1337 ;;		_CToAConverteix
  1338 ;;		_CToAHaAcabat
  1339 ;;		_CToAobtenir
  1340 ;;		_HGetTime
  1341 ;;		_LcClear
  1342 ;;		_LcGotoXY
  1343 ;;		_LcLliure
  1344 ;;		_LcNewString
  1345 ;;		_LcPutChar
  1346 ;;		_TiGetTics
  1347 ;;		_TiResetTics
  1348 ;;		_UgetUserName
  1349 ;;		_UnewScore
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text1
  1356  000A72                     __ptext1:
  1357                           	callstack 0
  1358  000A72                     _motorSIO:
  1359                           	callstack 24
  1360                           
  1361                           ;SIO.c: 50:     static char state = 0;;SIO.c: 52:  switch(state) {
  1362                           
  1363                           ;incstack = 0
  1364  000A72  D135               	goto	l5471
  1365  000A74                     l5289:
  1366                           
  1367                           ;SIO.c: 54:    if (usuariActualSIO > -1) {
  1368  000A74  BE4A               	btfsc	_usuariActualSIO^0,7,c
  1369  000A76  0012               	return	
  1370                           
  1371                           ;SIO.c: 55:     userPtr = UgetUserName(usuariActualSIO);
  1372  000A78  504A               	movf	_usuariActualSIO^0,w,c
  1373  000A7A  ECF5  F00F         	call	_UgetUserName
  1374  000A7E  C064  F007         	movff	?_UgetUserName,_userPtr
  1375  000A82  C065  F008         	movff	?_UgetUserName+1,_userPtr+1
  1376                           
  1377                           ;SIO.c: 56:     jugantSIO = 1;
  1378  000A86  8475               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1379                           
  1380                           ;SIO.c: 57:     Krebut = 0;
  1381  000A88  9275               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1382                           
  1383                           ;SIO.c: 58:     state = 1;
  1384  000A8A  0E01               	movlw	1
  1385  000A8C  6E0D               	movwf	motorSIO@state^0,c
  1386                           
  1387                           ;SIO.c: 60:   break;
  1388                           
  1389                           ;SIO.c: 59:    }
  1390  000A8E  0C01               	retlw	1
  1391  000A90                     l5299:
  1392                           
  1393                           ;SIO.c: 62:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1394  000A90  D94E               	call	PL28	;call to abstracted procedure
  1395  000A92  E108               	bnz	l5307
  1396  000A94  A2AC               	btfss	172,1,c	;volatile
  1397  000A96  D006               	goto	l5307
  1398                           
  1399                           ;SIO.c: 63:     TXREG = '\0';
  1400  000A98  6AAD               	clrf	173,c	;volatile
  1401                           
  1402                           ;SIO.c: 64:     novaTeclaSIO = 0;
  1403  000A9A  6A48               	clrf	_novaTeclaSIO^0,c
  1404                           
  1405                           ;SIO.c: 65:     LATBbits.LATB3 = 1;
  1406  000A9C  868A               	bsf	138,3,c	;volatile
  1407                           
  1408                           ;SIO.c: 66:     state = 2;
  1409  000A9E  0E02               	movlw	2
  1410  000AA0  6E0D               	movwf	motorSIO@state^0,c
  1411                           
  1412                           ;SIO.c: 67:    }
  1413  000AA2  0C02               	retlw	2
  1414  000AA4                     l5307:
  1415  000AA4  D944               	call	PL28	;call to abstracted procedure
  1416  000AA6  A4D8               	btfss	status,2,c
  1417  000AA8  A2AC               	btfss	172,1,c	;volatile
  1418  000AAA  0012               	return	
  1419                           
  1420                           ;SIO.c: 69:     TXREG = *userPtr;
  1421  000AAC  D940               	call	PL28	;call to abstracted procedure
  1422  000AAE  6EAD               	movwf	173,c	;volatile
  1423                           
  1424                           ;SIO.c: 70:     userPtr++;
  1425  000AB0  4A07               	infsnz	_userPtr^0,f,c
  1426  000AB2  2A08               	incf	(_userPtr+1)^0,f,c
  1427  000AB4  0012               	return	
  1428  000AB6                     l5315:
  1429                           
  1430                           ;SIO.c: 74:    if (RCREG == 'K') {
  1431  000AB6  0E4B               	movlw	75
  1432  000AB8  18AE               	xorwf	174,w,c
  1433  000ABA  A4D8               	btfss	status,2,c
  1434  000ABC  0012               	return	
  1435                           
  1436                           ;SIO.c: 75:     Krebut = 1;
  1437  000ABE  8275               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1438  000AC0                     l5319:
  1439                           
  1440                           ;SIO.c: 76:     state = 3;
  1441  000AC0  0E03               	movlw	3
  1442  000AC2  6E0D               	movwf	motorSIO@state^0,c
  1443  000AC4  0C03               	retlw	3
  1444  000AC6                     l5321:
  1445                           
  1446                           ;SIO.c: 80:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1447  000AC6  2849               	incf	_direccioSIO^0,w,c
  1448  000AC8  E006               	bz	l5329
  1449  000ACA  A2AC               	btfss	172,1,c	;volatile
  1450  000ACC  D004               	goto	l5329
  1451                           
  1452                           ;SIO.c: 81:     TXREG = direccioSIO;
  1453  000ACE  C049  FFAD         	movff	_direccioSIO,4013	;volatile
  1454                           
  1455                           ;SIO.c: 82:     direccioSIO = -1;
  1456  000AD2  6849               	setf	_direccioSIO^0,c
  1457  000AD4  D7F5               	goto	l5319
  1458  000AD6                     l5329:
  1459  000AD6  0E30               	movlw	48
  1460  000AD8  6448               	cpfsgt	_novaTeclaSIO^0,c
  1461  000ADA  D009               	goto	l1281
  1462  000ADC  0E3A               	movlw	58
  1463  000ADE  6048               	cpfslt	_novaTeclaSIO^0,c
  1464  000AE0  D006               	goto	l1281
  1465  000AE2  A2AC               	btfss	172,1,c	;volatile
  1466  000AE4  D004               	goto	l1281
  1467                           
  1468                           ;SIO.c: 86:     TXREG = novaTeclaSIO;
  1469  000AE6  C048  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1470                           
  1471                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1472  000AEA  6A48               	clrf	_novaTeclaSIO^0,c
  1473  000AEC  D7E9               	goto	l5319
  1474  000AEE                     l1281:
  1475  000AEE  B475               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1476  000AF0  D002               	goto	u5120
  1477  000AF2  B2AC               	btfsc	172,1,c	;volatile
  1478  000AF4  D002               	goto	u5130
  1479  000AF6                     u5120:
  1480  000AF6  AA9E               	btfss	158,5,c	;volatile
  1481  000AF8  D00D               	goto	l1283
  1482  000AFA                     u5130:
  1483                           
  1484                           ;SIO.c: 91:     LcClear();
  1485  000AFA  EC74  F00F         	call	_LcClear	;wreg free
  1486                           
  1487                           ;SIO.c: 92:     LcNewString("ERRORS:");
  1488  000AFE  0ED8               	movlw	low STR_6
  1489  000B00  EC12  F005         	call	PL10	;call to abstracted procedure
  1490  000B04  EC77  F000         	call	_LcNewString	;wreg free
  1491                           
  1492                           ;SIO.c: 93:     TXREG = 'F';
  1493  000B08  0E46               	movlw	70
  1494  000B0A  6EAD               	movwf	173,c	;volatile
  1495                           
  1496                           ;SIO.c: 94:     novaTeclaSIO = 0;
  1497  000B0C  6A48               	clrf	_novaTeclaSIO^0,c
  1498                           
  1499                           ;SIO.c: 95:     state = 4;
  1500  000B0E  0E04               	movlw	4
  1501  000B10  6E0D               	movwf	motorSIO@state^0,c
  1502                           
  1503                           ;SIO.c: 96:    }
  1504  000B12  0C04               	retlw	4
  1505  000B14                     l1283:
  1506  000B14  A075               	btfss	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1507  000B16  0012               	return	
  1508                           
  1509                           ;SIO.c: 98:     horaTX[0] = HGetTime()[0];
  1510  000B18  ECE2  F000         	call	_HGetTime	;wreg free
  1511  000B1C  6ED9               	movwf	fsr2l,c
  1512  000B1E  6ADA               	clrf	fsr2h,c
  1513  000B20  50DF               	movf	indf2,w,c
  1514  000B22  6E01               	movwf	_horaTX^0,c
  1515                           
  1516                           ;SIO.c: 99:                 horaTX[1] = HGetTime()[1];
  1517  000B24  ECE2  F000         	call	_HGetTime	;wreg free
  1518  000B28  D919               	call	PL82	;call to abstracted procedure
  1519  000B2A  6E02               	movwf	(_horaTX+1)^0,c
  1520                           
  1521                           ;SIO.c: 100:                 horaTX[2] = HGetTime()[2];
  1522  000B2C  ECE2  F000         	call	_HGetTime	;wreg free
  1523  000B30  D904               	call	PL52	;call to abstracted procedure
  1524  000B32  6E03               	movwf	(_horaTX+2)^0,c
  1525                           
  1526                           ;SIO.c: 101:                 horaTX[3] = HGetTime()[3];
  1527  000B34  ECE2  F000         	call	_HGetTime	;wreg free
  1528  000B38  D906               	call	PL54	;call to abstracted procedure
  1529  000B3A  6E04               	movwf	(_horaTX+3)^0,c
  1530                           
  1531                           ;SIO.c: 102:                 horaTX[4] = HGetTime()[4];
  1532  000B3C  ECE2  F000         	call	_HGetTime	;wreg free
  1533  000B40  6ED9               	movwf	fsr2l,c
  1534  000B42  6ADA               	clrf	fsr2h,c
  1535  000B44  0E04               	movlw	4
  1536  000B46  26D9               	addwf	fsr2l,f,c
  1537  000B48  50DF               	movf	indf2,w,c
  1538  000B4A  6E05               	movwf	(_horaTX+4)^0,c
  1539                           
  1540                           ;SIO.c: 103:     horaTX[5] = '_';
  1541  000B4C  0E5F               	movlw	95
  1542  000B4E  6E06               	movwf	(_horaTX+5)^0,c
  1543                           
  1544                           ;SIO.c: 104:     mask = 1;
  1545  000B50  0E01               	movlw	1
  1546  000B52  6E0E               	movwf	_mask^0,c
  1547                           
  1548                           ;SIO.c: 105:     TiResetTics(timerSIO);
  1549  000B54  5011               	movf	_timerSIO^0,w,c
  1550  000B56  ECC1  F00F         	call	_TiResetTics
  1551                           
  1552                           ;SIO.c: 106:     charActu = 0;
  1553  000B5A  6A0F               	clrf	_charActu^0,c
  1554  000B5C                     l5369:
  1555                           
  1556                           ;SIO.c: 107:     state = 10;
  1557  000B5C  0E0A               	movlw	10
  1558  000B5E  6E0D               	movwf	motorSIO@state^0,c
  1559  000B60  0C0A               	retlw	10
  1560  000B62                     l1290:
  1561                           
  1562                           ;SIO.c: 111:    if (PIR1bits.RCIF) {
  1563  000B62  AA9E               	btfss	158,5,c	;volatile
  1564  000B64  0012               	return	
  1565                           
  1566                           ;SIO.c: 112:     score = RCREG;
  1567  000B66  CFAE F010          	movff	4014,_score	;volatile
  1568                           
  1569                           ;SIO.c: 113:     UnewScore(score);
  1570  000B6A  5010               	movf	_score^0,w,c
  1571  000B6C  EC83  F000         	call	_UnewScore
  1572                           
  1573                           ;SIO.c: 114:     CToAConverteix(score);
  1574  000B70  5010               	movf	_score^0,w,c
  1575  000B72  EC71  F000         	call	_CToAConverteix
  1576                           
  1577                           ;SIO.c: 115:     TiResetTics(timerSIO);
  1578  000B76  5011               	movf	_timerSIO^0,w,c
  1579  000B78  ECC1  F00F         	call	_TiResetTics
  1580  000B7C                     l5377:
  1581                           
  1582                           ;SIO.c: 116:     state = 5;
  1583  000B7C  0E05               	movlw	5
  1584  000B7E  6E0D               	movwf	motorSIO@state^0,c
  1585  000B80  0C05               	retlw	5
  1586  000B82                     l5379:
  1587                           
  1588                           ;SIO.c: 121:    if (TiGetTics(timerSIO) > 2490) {
  1589  000B82  5011               	movf	_timerSIO^0,w,c
  1590  000B84  EC19  F00F         	call	_TiGetTics
  1591  000B88  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1592  000B8A  D00F               	goto	l5387
  1593  000B8C  0EBB               	movlw	187
  1594  000B8E  5C64               	subwf	?_TiGetTics^0,w,c
  1595  000B90  0E09               	movlw	9
  1596  000B92  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1597  000B94  E30A               	bnc	l5387
  1598                           
  1599                           ;SIO.c: 122:     LcClear();
  1600  000B96  EC74  F00F         	call	_LcClear	;wreg free
  1601                           
  1602                           ;SIO.c: 123:     LcNewString("TIME LEFT: ");
  1603  000B9A  0EBB               	movlw	low STR_7
  1604  000B9C  EC12  F005         	call	PL10	;call to abstracted procedure
  1605  000BA0  EC77  F000         	call	_LcNewString	;wreg free
  1606                           
  1607                           ;SIO.c: 124:     state = 7;
  1608  000BA4  0E07               	movlw	7
  1609  000BA6  6E0D               	movwf	motorSIO@state^0,c
  1610                           
  1611                           ;SIO.c: 125:    }
  1612  000BA8  0C07               	retlw	7
  1613  000BAA                     l5387:
  1614  000BAA  5011               	movf	_timerSIO^0,w,c
  1615  000BAC  EC19  F00F         	call	_TiGetTics
  1616  000BB0  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1617  000BB2  D006               	goto	u5170
  1618  000BB4  0EBA               	movlw	186
  1619  000BB6  5C64               	subwf	?_TiGetTics^0,w,c
  1620  000BB8  0E09               	movlw	9
  1621  000BBA  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1622  000BBC  B0D8               	btfsc	status,0,c
  1623  000BBE  0012               	return	
  1624  000BC0                     u5170:
  1625  000BC0  AA9E               	btfss	158,5,c	;volatile
  1626  000BC2  0012               	return	
  1627  000BC4  EC7D  F000         	call	_LcLliure	;wreg free
  1628  000BC8  A0D8               	btfss	status,0,c
  1629  000BCA  0012               	return	
  1630                           
  1631                           ;SIO.c: 127:     LcGotoXY(0,1);
  1632  000BCC  EC1D  F005         	call	PL36	;call to abstracted procedure
  1633  000BD0  ECC2  F00E         	call	_LcGotoXY
  1634                           
  1635                           ;SIO.c: 128:     LcPutChar(RCREG);
  1636  000BD4  50AE               	movf	174,w,c	;volatile
  1637  000BD6  EC06  F00E         	call	_LcPutChar
  1638                           
  1639                           ;SIO.c: 129:     state = 6;
  1640  000BDA  0E06               	movlw	6
  1641  000BDC  6E0D               	movwf	motorSIO@state^0,c
  1642  000BDE  0C06               	retlw	6
  1643  000BE0                     l5397:
  1644                           
  1645                           ;SIO.c: 133:    if (LcLliure()) {
  1646  000BE0  EC7D  F000         	call	_LcLliure	;wreg free
  1647  000BE4  A0D8               	btfss	status,0,c
  1648  000BE6  0012               	return	
  1649                           
  1650                           ;SIO.c: 134:     LcNewString(HGetTime());
  1651  000BE8  ECE2  F000         	call	_HGetTime	;wreg free
  1652  000BEC  D8B2               	call	PL58	;call to abstracted procedure
  1653  000BEE  EC77  F000         	call	_LcNewString	;wreg free
  1654                           
  1655                           ;SIO.c: 135:     state = 8;
  1656  000BF2  0E08               	movlw	8
  1657  000BF4  6E0D               	movwf	motorSIO@state^0,c
  1658  000BF6  0C08               	retlw	8
  1659  000BF8                     l1298:
  1660                           
  1661                           ;SIO.c: 139:    if (PIR1bits.RCIF) {
  1662  000BF8  AA9E               	btfss	158,5,c	;volatile
  1663  000BFA  0012               	return	
  1664                           
  1665                           ;SIO.c: 140:     LcPutChar(RCREG);
  1666  000BFC  50AE               	movf	174,w,c	;volatile
  1667  000BFE  EC06  F00E         	call	_LcPutChar
  1668                           
  1669                           ;SIO.c: 141:     TiResetTics(timerSIO);
  1670  000C02  5011               	movf	_timerSIO^0,w,c
  1671  000C04  ECC1  F00F         	call	_TiResetTics
  1672  000C08  D7B9               	goto	l5377
  1673  000C0A                     l5407:
  1674                           
  1675                           ;SIO.c: 146:    if (LcLliure()) {
  1676  000C0A  EC7D  F000         	call	_LcLliure	;wreg free
  1677  000C0E  A0D8               	btfss	status,0,c
  1678  000C10  0012               	return	
  1679                           
  1680                           ;SIO.c: 147:     LcGotoXY(0,1);
  1681  000C12  EC1D  F005         	call	PL36	;call to abstracted procedure
  1682  000C16  ECC2  F00E         	call	_LcGotoXY
  1683                           
  1684                           ;SIO.c: 148:     LcNewString("SCORE: ");
  1685  000C1A  0ED0               	movlw	low STR_8
  1686  000C1C  EC12  F005         	call	PL10	;call to abstracted procedure
  1687  000C20  EC77  F000         	call	_LcNewString	;wreg free
  1688                           
  1689                           ;SIO.c: 149:     state = 9;
  1690  000C24  0E09               	movlw	9
  1691  000C26  6E0D               	movwf	motorSIO@state^0,c
  1692  000C28  0C09               	retlw	9
  1693  000C2A                     l5415:
  1694                           
  1695                           ;SIO.c: 153:    if (LcLliure() && CToAHaAcabat() == 250) {
  1696  000C2A  EC7D  F000         	call	_LcLliure	;wreg free
  1697  000C2E  A0D8               	btfss	status,0,c
  1698  000C30  0012               	return	
  1699  000C32  ECFC  F000         	call	_CToAHaAcabat	;wreg free
  1700  000C36  0AFA               	xorlw	250
  1701  000C38  A4D8               	btfss	status,2,c
  1702  000C3A  0012               	return	
  1703                           
  1704                           ;SIO.c: 154:     LcNewString(CToAobtenir());
  1705  000C3C  ECFA  F000         	call	_CToAobtenir	;wreg free
  1706  000C40  D888               	call	PL58	;call to abstracted procedure
  1707  000C42  EC77  F000         	call	_LcNewString	;wreg free
  1708                           
  1709                           ;SIO.c: 155:     usuariActualSIO = -1;
  1710  000C46  684A               	setf	_usuariActualSIO^0,c
  1711                           
  1712                           ;SIO.c: 156:     state = 0;
  1713  000C48  6A0D               	clrf	motorSIO@state^0,c
  1714  000C4A  0012               	return	
  1715  000C4C                     l5425:
  1716                           
  1717                           ;SIO.c: 160:    if (charActu == 6) {
  1718  000C4C  0E06               	movlw	6
  1719  000C4E  180F               	xorwf	_charActu^0,w,c
  1720  000C50  E102               	bnz	l5431
  1721                           
  1722                           ;SIO.c: 161:     hi_ha_hora_sio2 = 0;
  1723  000C52  9075               	bcf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1724  000C54  D735               	goto	l5319
  1725  000C56                     l5431:
  1726  000C56  0E06               	movlw	6
  1727  000C58  600F               	cpfslt	_charActu^0,c
  1728  000C5A  0C06               	retlw	6
  1729  000C5C  5011               	movf	_timerSIO^0,w,c
  1730  000C5E  EC19  F00F         	call	_TiGetTics
  1731  000C62  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1732  000C64  0012               	return	
  1733  000C66  5065               	movf	(?_TiGetTics+1)^0,w,c
  1734  000C68  E103               	bnz	u5270
  1735  000C6A  0464               	decf	?_TiGetTics^0,w,c
  1736  000C6C  A0D8               	btfss	status,0,c
  1737  000C6E  0012               	return	
  1738  000C70                     u5270:
  1739                           
  1740                           ;SIO.c: 165:     LATBbits.LATB1 = 0;
  1741  000C70  928A               	bcf	138,1,c	;volatile
  1742                           
  1743                           ;SIO.c: 166:     TiResetTics(timerSIO);
  1744  000C72  5011               	movf	_timerSIO^0,w,c
  1745  000C74  ECC1  F00F         	call	_TiResetTics
  1746  000C78                     l5439:
  1747                           
  1748                           ;SIO.c: 167:     state = 11;
  1749  000C78  0E0B               	movlw	11
  1750  000C7A  6E0D               	movwf	motorSIO@state^0,c
  1751  000C7C  0C0B               	retlw	11
  1752  000C7E                     l5441:
  1753                           
  1754                           ;SIO.c: 171:    if (mask < 1 && TiGetTics(timerSIO) > 0) {
  1755  000C7E  500E               	movf	_mask^0,w,c
  1756  000C80  E111               	bnz	l5455
  1757  000C82  5011               	movf	_timerSIO^0,w,c
  1758  000C84  EC19  F00F         	call	_TiGetTics
  1759  000C88  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1760  000C8A  D00C               	goto	l5455
  1761  000C8C  5065               	movf	(?_TiGetTics+1)^0,w,c
  1762  000C8E  E102               	bnz	u5290
  1763  000C90  0464               	decf	?_TiGetTics^0,w,c
  1764  000C92  E308               	bnc	l5455
  1765  000C94                     u5290:
  1766                           
  1767                           ;SIO.c: 172:     mask = 1;
  1768  000C94  0E01               	movlw	1
  1769  000C96  6E0E               	movwf	_mask^0,c
  1770                           
  1771                           ;SIO.c: 173:     charActu++;
  1772  000C98  2A0F               	incf	_charActu^0,f,c
  1773                           
  1774                           ;SIO.c: 174:     LATBbits.LATB1 = 1;
  1775  000C9A  828A               	bsf	138,1,c	;volatile
  1776                           
  1777                           ;SIO.c: 175:     TiResetTics(timerSIO);
  1778  000C9C  5011               	movf	_timerSIO^0,w,c
  1779  000C9E  ECC1  F00F         	call	_TiResetTics
  1780  000CA2  D75C               	goto	l5369
  1781  000CA4                     l5455:
  1782  000CA4  5011               	movf	_timerSIO^0,w,c
  1783  000CA6  EC19  F00F         	call	_TiGetTics
  1784  000CAA  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1785  000CAC  0012               	return	
  1786  000CAE  5065               	movf	(?_TiGetTics+1)^0,w,c
  1787  000CB0  E103               	bnz	u5300
  1788  000CB2  0464               	decf	?_TiGetTics^0,w,c
  1789  000CB4  A0D8               	btfss	status,0,c
  1790  000CB6  0012               	return	
  1791  000CB8                     u5300:
  1792  000CB8  500E               	movf	_mask^0,w,c
  1793  000CBA  B4D8               	btfsc	status,2,c
  1794  000CBC  0012               	return	
  1795                           
  1796                           ;SIO.c: 179:     if(mask & horaTX[charActu]){
  1797  000CBE  500F               	movf	_charActu^0,w,c
  1798  000CC0  0F01               	addlw	low _horaTX
  1799  000CC2  6ED9               	movwf	fsr2l,c
  1800  000CC4  6ADA               	clrf	fsr2h,c
  1801  000CC6  50DF               	movf	indf2,w,c
  1802  000CC8  140E               	andwf	_mask^0,w,c
  1803  000CCA  E002               	bz	l1312
  1804                           
  1805                           ;SIO.c: 180:        LATBbits.LATB1 = 1;
  1806  000CCC  828A               	bsf	138,1,c	;volatile
  1807                           
  1808                           ;SIO.c: 181:       }else{
  1809  000CCE  D001               	goto	l5463
  1810  000CD0                     l1312:
  1811                           
  1812                           ;SIO.c: 182:        LATBbits.LATB1 = 0;
  1813  000CD0  928A               	bcf	138,1,c	;volatile
  1814  000CD2                     l5463:
  1815                           
  1816                           ;SIO.c: 184:       mask = mask<<1;
  1817  000CD2  90D8               	bcf	status,0,c
  1818  000CD4  360E               	rlcf	_mask^0,f,c
  1819                           
  1820                           ;SIO.c: 185:     TiResetTics(timerSIO);
  1821  000CD6  5011               	movf	_timerSIO^0,w,c
  1822  000CD8  ECC1  F00F         	call	_TiResetTics
  1823  000CDC  D7CD               	goto	l5439
  1824  000CDE                     l5471:
  1825  000CDE  500D               	movf	motorSIO@state^0,w,c
  1826  000CE0  6E73               	movwf	??_motorSIO^0,c
  1827  000CE2  6A74               	clrf	(??_motorSIO+1)^0,c
  1828                           
  1829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1830                           ; Switch size 1, requested type "space"
  1831                           ; Number of cases is 1, Range of values is 0 to 0
  1832                           ; switch strategies available:
  1833                           ; Name         Instructions Cycles
  1834                           ; simple_byte            4     3 (average)
  1835                           ;	Chosen strategy is simple_byte
  1836  000CE4  5074               	movf	(??_motorSIO+1)^0,w,c
  1837  000CE6  A4D8               	btfss	status,2,c
  1838  000CE8  0012               	return	
  1839                           
  1840                           ; Switch size 1, requested type "space"
  1841                           ; Number of cases is 12, Range of values is 0 to 11
  1842                           ; switch strategies available:
  1843                           ; Name         Instructions Cycles
  1844                           ; simple_byte           37    19 (average)
  1845                           ;	Chosen strategy is simple_byte
  1846  000CEA  5073               	movf	??_motorSIO^0,w,c
  1847  000CEC  E101 D6C2          	bz	l5289
  1848  000CF0  0A01               	xorlw	1	; case 1
  1849  000CF2  E101 D6CD          	bz	l5299
  1850  000CF6  0A03               	xorlw	3	; case 2
  1851  000CF8  E101 D6DD          	bz	l5315
  1852  000CFC  0A01               	xorlw	1	; case 3
  1853  000CFE  E101 D6E2          	bz	l5321
  1854  000D02  0A07               	xorlw	7	; case 4
  1855  000D04  E101 D72D          	bz	l1290
  1856  000D08  0A01               	xorlw	1	; case 5
  1857  000D0A  E101 D73A          	bz	l5379
  1858  000D0E  0A03               	xorlw	3	; case 6
  1859  000D10  E101 D772          	bz	l1298
  1860  000D14  0A01               	xorlw	1	; case 7
  1861  000D16  E101 D763          	bz	l5397
  1862  000D1A  0A0F               	xorlw	15	; case 8
  1863  000D1C  E101 D775          	bz	l5407
  1864  000D20  0A01               	xorlw	1	; case 9
  1865  000D22  E083               	bz	l5415
  1866  000D24  0A03               	xorlw	3	; case 10
  1867  000D26  E092               	bz	l5425
  1868  000D28  0A01               	xorlw	1	; case 11
  1869  000D2A  E0A9               	bz	l5441
  1870  000D2C  0012               	return		;funcret
  1871  000D2E                     __end_of_motorSIO:
  1872                           	callstack 0
  1873  000D2E                     PL28:
  1874                           	callstack 24
  1875  000D2E  C007  FFD9         	movff	_userPtr,fsr2l
  1876  000D32  C008  FFDA         	movff	_userPtr+1,fsr2h
  1877  000D36  50DF               	movf	indf2,w,c
  1878  000D38  0012               	return	
  1879  000D3A                     __end_ofPL28:
  1880                           	callstack 0
  1881  000D3A                     PL52:
  1882                           	callstack 27
  1883  000D3A  6ED9               	movwf	fsr2l,c
  1884  000D3C  6ADA               	clrf	fsr2h,c
  1885  000D3E  0E02               	movlw	2
  1886  000D40  26D9               	addwf	fsr2l,f,c
  1887  000D42  50DF               	movf	indf2,w,c
  1888  000D44  0012               	return	
  1889  000D46                     __end_ofPL52:
  1890                           	callstack 0
  1891  000D46                     PL54:
  1892                           	callstack 27
  1893  000D46  6ED9               	movwf	fsr2l,c
  1894  000D48  6ADA               	clrf	fsr2h,c
  1895  000D4A  0E03               	movlw	3
  1896  000D4C  26D9               	addwf	fsr2l,f,c
  1897  000D4E  50DF               	movf	indf2,w,c
  1898  000D50  0012               	return	
  1899  000D52                     __end_ofPL54:
  1900                           	callstack 0
  1901  000D52                     PL58:
  1902                           	callstack 24
  1903  000D52  6E73               	movwf	??_motorSIO^0,c
  1904  000D54  C073  F067         	movff	??_motorSIO,LcNewString@new_s
  1905  000D58  6A68               	clrf	(LcNewString@new_s+1)^0,c
  1906  000D5A  0012               	return	
  1907  000D5C                     __end_ofPL58:
  1908                           	callstack 0
  1909  000D5C                     PL82:
  1910                           	callstack 27
  1911  000D5C  6ED9               	movwf	fsr2l,c
  1912  000D5E  6ADA               	clrf	fsr2h,c
  1913  000D60  2AD9               	incf	fsr2l,f,c
  1914  000D62  50DF               	movf	indf2,w,c
  1915  000D64  0012               	return	
  1916  000D66                     __end_ofPL82:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function _UnewScore *****************
  1920 ;; Defined at:
  1921 ;;		line 290 in file "Usuaris.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  scoretmp        1    wreg     unsigned char 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1
  1935 ;;      Params:         0       0       0
  1936 ;;      Locals:         1       0       0
  1937 ;;      Temps:          0       0       0
  1938 ;;      Totals:         1       0       0
  1939 ;;Total ram usage:        1 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; Hardware stack levels required when called: 2
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_motorSIO
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text2
  1950  000106                     __ptext2:
  1951                           	callstack 0
  1952  000106                     _UnewScore:
  1953                           	callstack 27
  1954                           
  1955                           ;incstack = 0
  1956                           ;UnewScore@scoretmp stored from wreg
  1957  000106  6E64               	movwf	UnewScore@scoretmp^0,c
  1958                           
  1959                           ;Usuaris.c: 291:     scoreUsr = scoretmp;
  1960  000108  C064  F028         	movff	UnewScore@scoretmp,_scoreUsr
  1961                           
  1962                           ;Usuaris.c: 292:     do_updateScore = 1;
  1963  00010C  8876               	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1964  00010E  0012               	return		;funcret
  1965  000110                     __end_of_UnewScore:
  1966                           	callstack 0
  1967                           
  1968 ;; *************** function _motorJoc *****************
  1969 ;; Defined at:
  1970 ;;		line 44 in file "Joc.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1
  1984 ;;      Params:         0       0       0
  1985 ;;      Locals:         0       0       0
  1986 ;;      Temps:          2       0       0
  1987 ;;      Totals:         2       0       0
  1988 ;;Total ram usage:        2 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 5
  1991 ;; This function calls:
  1992 ;;		_HClearNouSegon
  1993 ;;		_HGetTime
  1994 ;;		_HJugant
  1995 ;;		_HNouSegon
  1996 ;;		_HnoJugant
  1997 ;;		_LcGotoXY
  1998 ;;		_LcLliure
  1999 ;;		_LcNewString
  2000 ;;		_SIOEnviaHora
  2001 ;;		_SIONovaDireccio
  2002 ;;		_SIONovaTecla
  2003 ;;		_SIOStartGame
  2004 ;;		_SIOcheckKrebut
  2005 ;;		_SIOendGame
  2006 ;;		_conversorJoystick
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text3
  2013  0017D4                     __ptext3:
  2014                           	callstack 0
  2015  0017D4                     _motorJoc:
  2016                           	callstack 25
  2017                           
  2018                           ;Joc.c: 45:     static char state = 0;;Joc.c: 47:  switch(state) {
  2019                           
  2020                           ;incstack = 0
  2021  0017D4  D045               	goto	l5281
  2022  0017D6                     l5235:
  2023                           
  2024                           ;Joc.c: 49:    if (usuariJoc != -1) {
  2025  0017D6  284C               	incf	_usuariJoc^0,w,c
  2026  0017D8  B4D8               	btfsc	status,2,c
  2027  0017DA  0012               	return	
  2028                           
  2029                           ;Joc.c: 50:     SIOStartGame(usuariJoc);
  2030  0017DC  504C               	movf	_usuariJoc^0,w,c
  2031  0017DE  EC88  F000         	call	_SIOStartGame
  2032                           
  2033                           ;Joc.c: 51:     jugantJoc = 1;
  2034  0017E2  8675               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2035                           
  2036                           ;Joc.c: 52:     state = 2;
  2037  0017E4  0E02               	movlw	2
  2038  0017E6  6E12               	movwf	motorJoc@state^0,c
  2039                           
  2040                           ;Joc.c: 54:   break;
  2041                           
  2042                           ;Joc.c: 53:    }
  2043  0017E8  0C02               	retlw	2
  2044  0017EA                     l1163:
  2045                           
  2046                           ;Joc.c: 56:    if (!jugantJoc) {
  2047  0017EA  B675               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2048  0017EC  D008               	goto	l5251
  2049                           
  2050                           ;Joc.c: 57:     usuariJoc = -1;
  2051  0017EE  684C               	setf	_usuariJoc^0,c
  2052                           
  2053                           ;Joc.c: 58:     HnoJugant();
  2054  0017F0  ECE0  F000         	call	_HnoJugant	;wreg free
  2055                           
  2056                           ;Joc.c: 59:     SIOendGame();
  2057  0017F4  ECDC  F000         	call	_SIOendGame	;wreg free
  2058                           
  2059                           ;Joc.c: 60:     LATBbits.LATB3 = 0;
  2060  0017F8  968A               	bcf	138,3,c	;volatile
  2061  0017FA                     l5249:
  2062                           
  2063                           ;Joc.c: 61:     state--;
  2064  0017FA  0612               	decf	motorJoc@state^0,f,c
  2065                           
  2066                           ;Joc.c: 62:    }
  2067  0017FC  0012               	return	
  2068  0017FE                     l5251:
  2069  0017FE  BE13               	btfsc	_direccioJoc^0,7,c
  2070  001800  D007               	goto	l5257
  2071                           
  2072                           ;Joc.c: 64:     SIONovaDireccio(conversorJoystick(direccioJoc));
  2073  001802  5013               	movf	_direccioJoc^0,w,c
  2074  001804  EC2C  F00F         	call	_conversorJoystick
  2075  001808  EC90  F000         	call	_SIONovaDireccio
  2076                           
  2077                           ;Joc.c: 65:     direccioJoc = -1;
  2078  00180C  6813               	setf	_direccioJoc^0,c
  2079                           
  2080                           ;Joc.c: 66:    }
  2081  00180E  0012               	return	
  2082  001810                     l5257:
  2083  001810  EC53  F000         	call	_HNouSegon	;wreg free
  2084  001814  E311               	bnc	l5267
  2085  001816  EC7D  F000         	call	_LcLliure	;wreg free
  2086  00181A  E30E               	bnc	l5267
  2087                           
  2088                           ;Joc.c: 68:     HClearNouSegon();
  2089  00181C  ECE4  F000         	call	_HClearNouSegon	;wreg free
  2090                           
  2091                           ;Joc.c: 69:     LcGotoXY(0,1);
  2092  001820  EC1D  F005         	call	PL36	;call to abstracted procedure
  2093  001824  ECC2  F00E         	call	_LcGotoXY
  2094                           
  2095                           ;Joc.c: 70:     LcNewString(HGetTime());
  2096  001828  ECE2  F000         	call	_HGetTime	;wreg free
  2097  00182C  6E72               	movwf	??_motorJoc^0,c
  2098  00182E  C072  F067         	movff	??_motorJoc,LcNewString@new_s
  2099  001832  6A68               	clrf	(LcNewString@new_s+1)^0,c
  2100  001834  EF77  F000         	goto	_LcNewString	;wreg free
  2101  001838                     l5267:
  2102  001838  504B               	movf	_novaTeclaJOC^0,w,c
  2103  00183A  0A80               	xorlw	128
  2104  00183C  0F7F               	addlw	-129
  2105  00183E  A0D8               	btfss	status,0,c
  2106  001840  0012               	return	
  2107                           
  2108                           ;Joc.c: 73:     SIONovaTecla(novaTeclaJOC+48);
  2109  001842  504B               	movf	_novaTeclaJOC^0,w,c
  2110  001844  0F30               	addlw	48
  2111  001846  EC8C  F000         	call	_SIONovaTecla
  2112                           
  2113                           ;Joc.c: 74:     novaTeclaJOC = -1;
  2114  00184A  684B               	setf	_novaTeclaJOC^0,c
  2115  00184C  0012               	return	
  2116  00184E                     l5273:
  2117                           
  2118                           ;Joc.c: 78:    if (SIOcheckKrebut()) {
  2119  00184E  EC4D  F000         	call	_SIOcheckKrebut	;wreg free
  2120  001852  A0D8               	btfss	status,0,c
  2121  001854  0012               	return	
  2122                           
  2123                           ;Joc.c: 79:     HJugant();
  2124  001856  ECD0  F000         	call	_HJugant	;wreg free
  2125                           
  2126                           ;Joc.c: 80:                 SIOEnviaHora();
  2127  00185A  ECDE  F000         	call	_SIOEnviaHora	;wreg free
  2128  00185E  D7CD               	goto	l5249
  2129  001860                     l5281:
  2130  001860  5012               	movf	motorJoc@state^0,w,c
  2131  001862  6E72               	movwf	??_motorJoc^0,c
  2132  001864  6A73               	clrf	(??_motorJoc+1)^0,c
  2133                           
  2134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2135                           ; Switch size 1, requested type "space"
  2136                           ; Number of cases is 1, Range of values is 0 to 0
  2137                           ; switch strategies available:
  2138                           ; Name         Instructions Cycles
  2139                           ; simple_byte            4     3 (average)
  2140                           ;	Chosen strategy is simple_byte
  2141  001866  5073               	movf	(??_motorJoc+1)^0,w,c
  2142  001868  A4D8               	btfss	status,2,c
  2143  00186A  0012               	return	
  2144                           
  2145                           ; Switch size 1, requested type "space"
  2146                           ; Number of cases is 3, Range of values is 0 to 2
  2147                           ; switch strategies available:
  2148                           ; Name         Instructions Cycles
  2149                           ; simple_byte           10     6 (average)
  2150                           ;	Chosen strategy is simple_byte
  2151  00186C  5072               	movf	??_motorJoc^0,w,c
  2152  00186E  E0B3               	bz	l5235
  2153  001870  0A01               	xorlw	1	; case 1
  2154  001872  E0BB               	bz	l1163
  2155  001874  0A03               	xorlw	3	; case 2
  2156  001876  E0EB               	bz	l5273
  2157  001878  0012               	return		;funcret
  2158  00187A                     __end_of_motorJoc:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _conversorJoystick *****************
  2162 ;; Defined at:
  2163 ;;		line 27 in file "Joc.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  direc           1    wreg     unsigned char 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  direc           1    5[COMRAM] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      unsigned char 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1
  2177 ;;      Params:         0       0       0
  2178 ;;      Locals:         1       0       0
  2179 ;;      Temps:          0       0       0
  2180 ;;      Totals:         1       0       0
  2181 ;;Total ram usage:        1 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; Hardware stack levels required when called: 2
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_motorJoc
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text4
  2192  001E58                     __ptext4:
  2193                           	callstack 0
  2194  001E58                     _conversorJoystick:
  2195                           	callstack 27
  2196                           
  2197                           ;incstack = 0
  2198                           ;conversorJoystick@direc stored from wreg
  2199  001E58  6E64               	movwf	conversorJoystick@direc^0,c
  2200                           
  2201                           ;Joc.c: 29:     if (direc==2) {
  2202  001E5A  0E02               	movlw	2
  2203  001E5C  1864               	xorwf	conversorJoystick@direc^0,w,c
  2204  001E5E  E101               	bnz	l2377
  2205                           
  2206                           ;Joc.c: 30:         return 'W';
  2207  001E60  0C57               	retlw	87
  2208  001E62                     l2377:
  2209                           
  2210                           ;Joc.c: 32:     if (direc==6) {
  2211  001E62  0E06               	movlw	6
  2212  001E64  1864               	xorwf	conversorJoystick@direc^0,w,c
  2213  001E66  E101               	bnz	l2383
  2214                           
  2215                           ;Joc.c: 33:         return 'D';
  2216  001E68  0C44               	retlw	68
  2217  001E6A                     l2383:
  2218                           
  2219                           ;Joc.c: 35:     if (direc==8) {
  2220  001E6A  0E08               	movlw	8
  2221  001E6C  1864               	xorwf	conversorJoystick@direc^0,w,c
  2222  001E6E  E101               	bnz	l2389
  2223                           
  2224                           ;Joc.c: 36:         return 'S';
  2225  001E70  0C53               	retlw	83
  2226  001E72                     l2389:
  2227                           
  2228                           ;Joc.c: 38:     if (direc==4) {
  2229  001E72  0E04               	movlw	4
  2230  001E74  1864               	xorwf	conversorJoystick@direc^0,w,c
  2231  001E76  E101               	bnz	l2395
  2232                           
  2233                           ;Joc.c: 39:         return 'A';
  2234  001E78  0C41               	retlw	65
  2235  001E7A                     l2395:
  2236                           
  2237                           ;Joc.c: 41:     return 0;
  2238  001E7A  0C00               	retlw	0	;funcret
  2239  001E7C                     __end_of_conversorJoystick:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _SIOendGame *****************
  2243 ;; Defined at:
  2244 ;;		line 27 in file "SIO.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		None
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1
  2258 ;;      Params:         0       0       0
  2259 ;;      Locals:         0       0       0
  2260 ;;      Temps:          0       0       0
  2261 ;;      Totals:         0       0       0
  2262 ;;Total ram usage:        0 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 2
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_motorJoc
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text5
  2273  0001B8                     __ptext5:
  2274                           	callstack 0
  2275  0001B8                     _SIOendGame:
  2276                           	callstack 27
  2277                           
  2278                           ;SIO.c: 28:     jugantSIO = 0;
  2279                           
  2280                           ;incstack = 0
  2281  0001B8  9475               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2282  0001BA  0012               	return		;funcret
  2283  0001BC                     __end_of_SIOendGame:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function _SIOcheckKrebut *****************
  2287 ;; Defined at:
  2288 ;;		line 30 in file "SIO.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;		None               void
  2295 ;; Registers used:
  2296 ;;		status,0
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1
  2302 ;;      Params:         0       0       0
  2303 ;;      Locals:         0       0       0
  2304 ;;      Temps:          0       0       0
  2305 ;;      Totals:         0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used: 1
  2308 ;; Hardware stack levels required when called: 2
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_motorJoc
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text6
  2317  00009A                     __ptext6:
  2318                           	callstack 0
  2319  00009A                     _SIOcheckKrebut:
  2320                           	callstack 27
  2321                           
  2322                           ;SIO.c: 31:     return Krebut;
  2323                           
  2324                           ;incstack = 0
  2325  00009A  B275               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2326  00009C  D002               	goto	l2411
  2327  00009E  90D8               	bcf	status,0,c
  2328  0000A0  0012               	return	
  2329  0000A2                     l2411:
  2330  0000A2  80D8               	bsf	status,0,c
  2331  0000A4  0012               	return		;funcret
  2332  0000A6                     __end_of_SIOcheckKrebut:
  2333                           	callstack 0
  2334                           
  2335 ;; *************** function _SIOStartGame *****************
  2336 ;; Defined at:
  2337 ;;		line 37 in file "SIO.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  usuari          1    wreg     unsigned char 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  usuari          1    5[COMRAM] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1
  2351 ;;      Params:         0       0       0
  2352 ;;      Locals:         1       0       0
  2353 ;;      Temps:          0       0       0
  2354 ;;      Totals:         1       0       0
  2355 ;;Total ram usage:        1 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 2
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_motorJoc
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text7
  2366  000110                     __ptext7:
  2367                           	callstack 0
  2368  000110                     _SIOStartGame:
  2369                           	callstack 27
  2370                           
  2371                           ;incstack = 0
  2372                           ;SIOStartGame@usuari stored from wreg
  2373  000110  6E64               	movwf	SIOStartGame@usuari^0,c
  2374                           
  2375                           ;SIO.c: 38:     usuariActualSIO = usuari;
  2376  000112  C064  F04A         	movff	SIOStartGame@usuari,_usuariActualSIO
  2377  000116  0012               	return		;funcret
  2378  000118                     __end_of_SIOStartGame:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function _SIONovaTecla *****************
  2382 ;; Defined at:
  2383 ;;		line 46 in file "SIO.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  tecla           1    wreg     char 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  tecla           1    5[COMRAM] char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1
  2397 ;;      Params:         0       0       0
  2398 ;;      Locals:         1       0       0
  2399 ;;      Temps:          0       0       0
  2400 ;;      Totals:         1       0       0
  2401 ;;Total ram usage:        1 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 2
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_motorJoc
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text8
  2412  000118                     __ptext8:
  2413                           	callstack 0
  2414  000118                     _SIONovaTecla:
  2415                           	callstack 27
  2416                           
  2417                           ;incstack = 0
  2418                           ;SIONovaTecla@tecla stored from wreg
  2419  000118  6E64               	movwf	SIONovaTecla@tecla^0,c
  2420                           
  2421                           ;SIO.c: 47:     novaTeclaSIO = tecla;
  2422  00011A  C064  F048         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2423  00011E  0012               	return		;funcret
  2424  000120                     __end_of_SIONovaTecla:
  2425                           	callstack 0
  2426                           
  2427 ;; *************** function _SIONovaDireccio *****************
  2428 ;; Defined at:
  2429 ;;		line 33 in file "SIO.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  num             1    wreg     unsigned char 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  num             1    5[COMRAM] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1
  2443 ;;      Params:         0       0       0
  2444 ;;      Locals:         1       0       0
  2445 ;;      Temps:          0       0       0
  2446 ;;      Totals:         1       0       0
  2447 ;;Total ram usage:        1 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 2
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_motorJoc
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text9
  2458  000120                     __ptext9:
  2459                           	callstack 0
  2460  000120                     _SIONovaDireccio:
  2461                           	callstack 27
  2462                           
  2463                           ;incstack = 0
  2464                           ;SIONovaDireccio@num stored from wreg
  2465  000120  6E64               	movwf	SIONovaDireccio@num^0,c
  2466                           
  2467                           ;SIO.c: 34:     direccioSIO = num;
  2468  000122  C064  F049         	movff	SIONovaDireccio@num,_direccioSIO
  2469  000126  0012               	return		;funcret
  2470  000128                     __end_of_SIONovaDireccio:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _SIOEnviaHora *****************
  2474 ;; Defined at:
  2475 ;;		line 40 in file "SIO.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		None
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1
  2489 ;;      Params:         0       0       0
  2490 ;;      Locals:         0       0       0
  2491 ;;      Temps:          0       0       0
  2492 ;;      Totals:         0       0       0
  2493 ;;Total ram usage:        0 bytes
  2494 ;; Hardware stack levels used: 1
  2495 ;; Hardware stack levels required when called: 2
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		_motorJoc
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text10
  2504  0001BC                     __ptext10:
  2505                           	callstack 0
  2506  0001BC                     _SIOEnviaHora:
  2507                           	callstack 27
  2508                           
  2509                           ;SIO.c: 41:     hi_ha_hora_sio2 = 1;
  2510                           
  2511                           ;incstack = 0
  2512  0001BC  8075               	bsf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  2513  0001BE  0012               	return		;funcret
  2514  0001C0                     __end_of_SIOEnviaHora:
  2515                           	callstack 0
  2516                           
  2517 ;; *************** function _HnoJugant *****************
  2518 ;; Defined at:
  2519 ;;		line 35 in file "Hora.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		None
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1
  2533 ;;      Params:         0       0       0
  2534 ;;      Locals:         0       0       0
  2535 ;;      Temps:          0       0       0
  2536 ;;      Totals:         0       0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 2
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_motorJoc
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text11
  2548  0001C0                     __ptext11:
  2549                           	callstack 0
  2550  0001C0                     _HnoJugant:
  2551                           	callstack 27
  2552                           
  2553                           ;Hora.c: 36:     jugant = 0;
  2554                           
  2555                           ;incstack = 0
  2556  0001C0  9C75               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2557  0001C2  0012               	return		;funcret
  2558  0001C4                     __end_of_HnoJugant:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _HNouSegon *****************
  2562 ;; Defined at:
  2563 ;;		line 23 in file "Hora.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;		None               void
  2570 ;; Registers used:
  2571 ;;		status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1
  2577 ;;      Params:         0       0       0
  2578 ;;      Locals:         0       0       0
  2579 ;;      Temps:          0       0       0
  2580 ;;      Totals:         0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 2
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_motorJoc
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text12
  2592  0000A6                     __ptext12:
  2593                           	callstack 0
  2594  0000A6                     _HNouSegon:
  2595                           	callstack 27
  2596                           
  2597                           ;Hora.c: 24:     return nouSegon;
  2598                           
  2599                           ;incstack = 0
  2600  0000A6  BA75               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2601  0000A8  D002               	goto	l2357
  2602  0000AA  90D8               	bcf	status,0,c
  2603  0000AC  0012               	return	
  2604  0000AE                     l2357:
  2605  0000AE  80D8               	bsf	status,0,c
  2606  0000B0  0012               	return		;funcret
  2607  0000B2                     __end_of_HNouSegon:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _HJugant *****************
  2611 ;; Defined at:
  2612 ;;		line 38 in file "Hora.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		None
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1
  2626 ;;      Params:         0       0       0
  2627 ;;      Locals:         0       0       0
  2628 ;;      Temps:          0       0       0
  2629 ;;      Totals:         0       0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 2
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_motorJoc
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text13
  2641  0001A0                     __ptext13:
  2642                           	callstack 0
  2643  0001A0                     _HJugant:
  2644                           	callstack 27
  2645                           
  2646                           ;Hora.c: 39:     jugant = 1;
  2647                           
  2648                           ;incstack = 0
  2649  0001A0  8C75               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2650                           
  2651                           ;Hora.c: 40:     tempsAcabat = 0;
  2652  0001A2  9875               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2653  0001A4  0012               	return		;funcret
  2654  0001A6                     __end_of_HJugant:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _HGetTime *****************
  2658 ;; Defined at:
  2659 ;;		line 31 in file "Hora.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      PTR unsigned char 
  2666 ;; Registers used:
  2667 ;;		wreg
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1
  2673 ;;      Params:         2       0       0
  2674 ;;      Locals:         0       0       0
  2675 ;;      Temps:          0       0       0
  2676 ;;      Totals:         2       0       0
  2677 ;;Total ram usage:        2 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 2
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_motorJoc
  2684 ;;		_motorSIO
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text14
  2689  0001C4                     __ptext14:
  2690                           	callstack 0
  2691  0001C4                     _HGetTime:
  2692                           	callstack 27
  2693                           
  2694                           ;Hora.c: 32:     return hora;
  2695                           
  2696                           ;incstack = 0
  2697  0001C4  0E56               	movlw	_hora& (0+255)
  2698  0001C6  0012               	return		;funcret
  2699  0001C8                     __end_of_HGetTime:
  2700                           	callstack 0
  2701                           
  2702 ;; *************** function _HClearNouSegon *****************
  2703 ;; Defined at:
  2704 ;;		line 27 in file "Hora.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		None
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1
  2718 ;;      Params:         0       0       0
  2719 ;;      Locals:         0       0       0
  2720 ;;      Temps:          0       0       0
  2721 ;;      Totals:         0       0       0
  2722 ;;Total ram usage:        0 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 2
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_motorJoc
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text15
  2733  0001C8                     __ptext15:
  2734                           	callstack 0
  2735  0001C8                     _HClearNouSegon:
  2736                           	callstack 27
  2737                           
  2738                           ;Hora.c: 28:     nouSegon = 0;
  2739                           
  2740                           ;incstack = 0
  2741  0001C8  9A75               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2742  0001CA  0012               	return		;funcret
  2743  0001CC                     __end_of_HClearNouSegon:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function _motorHora *****************
  2747 ;; Defined at:
  2748 ;;		line 46 in file "Hora.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1
  2762 ;;      Params:         0       0       0
  2763 ;;      Locals:         0       0       0
  2764 ;;      Temps:          2       0       0
  2765 ;;      Totals:         2       0       0
  2766 ;;Total ram usage:        2 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 3
  2769 ;; This function calls:
  2770 ;;		_TiGetTics
  2771 ;;		_TiResetTics
  2772 ;;		_playAltaveu
  2773 ;; This function is called by:
  2774 ;;		_main
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text16
  2779  00190C                     __ptext16:
  2780                           	callstack 0
  2781  00190C                     _motorHora:
  2782                           	callstack 27
  2783                           
  2784                           ;Hora.c: 47:  static char state = 0;;Hora.c: 49:  switch(state) {
  2785                           
  2786                           ;incstack = 0
  2787  00190C  D038               	goto	l5529
  2788  00190E                     l5479:
  2789                           
  2790                           ;Hora.c: 51:    if (TiGetTics(timerHora) >= 1205) {
  2791  00190E  5016               	movf	_timerHora^0,w,c
  2792  001910  EC19  F00F         	call	_TiGetTics
  2793  001914  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  2794  001916  0012               	return	
  2795  001918  ECFA  F007         	call	PL70	;call to abstracted procedure
  2796  00191C  A0D8               	btfss	status,0,c
  2797  00191E  0012               	return	
  2798                           
  2799                           ;Hora.c: 52:     TiResetTics(timerHora);
  2800  001920  5016               	movf	_timerHora^0,w,c
  2801  001922  ECC1  F00F         	call	_TiResetTics
  2802                           
  2803                           ;Hora.c: 53:     if(jugant){
  2804  001926  AC75               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2805  001928  D028               	goto	l5525
  2806                           
  2807                           ;Hora.c: 54:       nouSegon = 1;
  2808  00192A  8A75               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2809                           
  2810                           ;Hora.c: 56:      hora[4]--;
  2811  00192C  065A               	decf	(_hora+4)^0,f,c
  2812                           
  2813                           ;Hora.c: 57:      if(hora[4] == ('0'-1)){
  2814  00192E  0E2F               	movlw	47
  2815  001930  185A               	xorwf	(_hora+4)^0,w,c
  2816  001932  E103               	bnz	l5495
  2817                           
  2818                           ;Hora.c: 58:       hora[4] = '9';
  2819  001934  0E39               	movlw	57
  2820  001936  6E5A               	movwf	(_hora+4)^0,c
  2821                           
  2822                           ;Hora.c: 59:       hora[3]--;
  2823  001938  0659               	decf	(_hora+3)^0,f,c
  2824  00193A                     l5495:
  2825                           
  2826                           ;Hora.c: 62:      if(hora[3] == ('0'-1)){
  2827  00193A  0E2F               	movlw	47
  2828  00193C  1859               	xorwf	(_hora+3)^0,w,c
  2829  00193E  E103               	bnz	l5501
  2830                           
  2831                           ;Hora.c: 63:       hora[3] = '5';
  2832  001940  0E35               	movlw	53
  2833  001942  6E59               	movwf	(_hora+3)^0,c
  2834                           
  2835                           ;Hora.c: 64:       hora[1]--;
  2836  001944  0657               	decf	(_hora+1)^0,f,c
  2837  001946                     l5501:
  2838                           
  2839                           ;Hora.c: 67:      if(hora[1] == ('0'-1)){
  2840  001946  0E2F               	movlw	47
  2841  001948  1857               	xorwf	(_hora+1)^0,w,c
  2842  00194A  E103               	bnz	l5507
  2843                           
  2844                           ;Hora.c: 68:       hora[1] = '9';
  2845  00194C  0E39               	movlw	57
  2846  00194E  6E57               	movwf	(_hora+1)^0,c
  2847                           
  2848                           ;Hora.c: 69:       hora[0]--;
  2849  001950  0656               	decf	_hora^0,f,c
  2850  001952                     l5507:
  2851                           
  2852                           ;Hora.c: 72:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2853  001952  0E30               	movlw	48
  2854  001954  1856               	xorwf	_hora^0,w,c
  2855  001956  E10A               	bnz	l5517
  2856  001958  0E30               	movlw	48
  2857  00195A  1857               	xorwf	(_hora+1)^0,w,c
  2858  00195C  E107               	bnz	l5517
  2859  00195E  0E30               	movlw	48
  2860  001960  1859               	xorwf	(_hora+3)^0,w,c
  2861  001962  E104               	bnz	l5517
  2862  001964  0E30               	movlw	48
  2863  001966  185A               	xorwf	(_hora+4)^0,w,c
  2864  001968  E101               	bnz	l5517
  2865                           
  2866                           ;Hora.c: 73:       tempsAcabat = 1;
  2867  00196A  8875               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2868  00196C                     l5517:
  2869                           
  2870                           ;Hora.c: 76:      segons++;
  2871  00196C  2A15               	incf	_segons^0,f,c
  2872                           
  2873                           ;Hora.c: 77:      if(segons > 59){
  2874  00196E  0E3B               	movlw	59
  2875  001970  6415               	cpfsgt	_segons^0,c
  2876  001972  D003               	goto	l5525
  2877                           
  2878                           ;Hora.c: 78:       playAltaveu();
  2879  001974  ECE6  F000         	call	_playAltaveu	;wreg free
  2880                           
  2881                           ;Hora.c: 79:       segons = 0;
  2882  001978  6A15               	clrf	_segons^0,c
  2883  00197A                     l5525:
  2884                           
  2885                           ;Hora.c: 82:     state = 0;
  2886  00197A  6A14               	clrf	motorHora@state^0,c
  2887  00197C  0012               	return	
  2888  00197E                     l5529:
  2889  00197E  5014               	movf	motorHora@state^0,w,c
  2890  001980  6E6B               	movwf	??_motorHora^0,c
  2891  001982  6A6C               	clrf	(??_motorHora+1)^0,c
  2892                           
  2893                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2894                           ; Switch size 1, requested type "space"
  2895                           ; Number of cases is 1, Range of values is 0 to 0
  2896                           ; switch strategies available:
  2897                           ; Name         Instructions Cycles
  2898                           ; simple_byte            4     3 (average)
  2899                           ;	Chosen strategy is simple_byte
  2900  001984  506C               	movf	(??_motorHora+1)^0,w,c
  2901  001986  A4D8               	btfss	status,2,c
  2902  001988  0012               	return	
  2903                           
  2904                           ; Switch size 1, requested type "space"
  2905                           ; Number of cases is 1, Range of values is 0 to 0
  2906                           ; switch strategies available:
  2907                           ; Name         Instructions Cycles
  2908                           ; simple_byte            4     3 (average)
  2909                           ;	Chosen strategy is simple_byte
  2910  00198A  506B               	movf	??_motorHora^0,w,c
  2911  00198C  E0C0               	bz	l5479
  2912  00198E  0012               	return		;funcret
  2913  001990                     __end_of_motorHora:
  2914                           	callstack 0
  2915                           
  2916 ;; *************** function _playAltaveu *****************
  2917 ;; Defined at:
  2918 ;;		line 13 in file "Altaveu.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		None
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1
  2932 ;;      Params:         0       0       0
  2933 ;;      Locals:         0       0       0
  2934 ;;      Temps:          0       0       0
  2935 ;;      Totals:         0       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 2
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_motorHora
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text17
  2947  0001CC                     __ptext17:
  2948                           	callstack 0
  2949  0001CC                     _playAltaveu:
  2950                           	callstack 27
  2951                           
  2952                           ;Altaveu.c: 14:     reproduir = 1;
  2953                           
  2954                           ;incstack = 0
  2955  0001CC  8676               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2956  0001CE  0012               	return		;funcret
  2957  0001D0                     __end_of_playAltaveu:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _motorAltaveu *****************
  2961 ;; Defined at:
  2962 ;;		line 16 in file "Altaveu.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1
  2976 ;;      Params:         0       0       0
  2977 ;;      Locals:         0       0       0
  2978 ;;      Temps:          3       0       0
  2979 ;;      Totals:         3       0       0
  2980 ;;Total ram usage:        3 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 3
  2983 ;; This function calls:
  2984 ;;		_TiGetTics
  2985 ;;		_TiResetTics
  2986 ;; This function is called by:
  2987 ;;		_main
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text18
  2992  00187A                     __ptext18:
  2993                           	callstack 0
  2994  00187A                     _motorAltaveu:
  2995                           	callstack 27
  2996                           
  2997                           ;Altaveu.c: 17: static char state = 0;;Altaveu.c: 19:  switch(state) {
  2998                           
  2999                           ;incstack = 0
  3000  00187A  D02F               	goto	l6131
  3001  00187C                     l862:
  3002                           
  3003                           ;Altaveu.c: 21:    if (reproduir) {
  3004  00187C  A676               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  3005  00187E  0012               	return	
  3006                           
  3007                           ;Altaveu.c: 22:     nota = 1;
  3008  001880  0E01               	movlw	1
  3009  001882  6E26               	movwf	_nota^0,c
  3010                           
  3011                           ;Altaveu.c: 23:     copsNota = 0;
  3012  001884  6A24               	clrf	_copsNota^0,c
  3013                           
  3014                           ;Altaveu.c: 24:     TiResetTics(timerAltaveu);
  3015  001886  5025               	movf	_timerAltaveu^0,w,c
  3016  001888  ECC1  F00F         	call	_TiResetTics
  3017                           
  3018                           ;Altaveu.c: 25:     state = 1;
  3019  00188C  0E01               	movlw	1
  3020  00188E  6E23               	movwf	motorAltaveu@state^0,c
  3021  001890  0C01               	retlw	1
  3022  001892                     l6099:
  3023                           
  3024                           ;Altaveu.c: 29:    if (nota > 5) {
  3025  001892  0E05               	movlw	5
  3026  001894  6426               	cpfsgt	_nota^0,c
  3027  001896  D003               	goto	l6105
  3028                           
  3029                           ;Altaveu.c: 30:     reproduir = 0;
  3030  001898  9676               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  3031                           
  3032                           ;Altaveu.c: 31:     state--;
  3033  00189A  0623               	decf	motorAltaveu@state^0,f,c
  3034                           
  3035                           ;Altaveu.c: 32:    }
  3036  00189C  0C05               	retlw	5
  3037  00189E                     l6105:
  3038  00189E  0EA8               	movlw	168
  3039  0018A0  1824               	xorwf	_copsNota^0,w,c
  3040  0018A2  E103               	bnz	l6111
  3041                           
  3042                           ;Altaveu.c: 34:     nota++;
  3043  0018A4  2A26               	incf	_nota^0,f,c
  3044                           
  3045                           ;Altaveu.c: 35:     copsNota = 0;
  3046  0018A6  6A24               	clrf	_copsNota^0,c
  3047                           
  3048                           ;Altaveu.c: 36:    }
  3049  0018A8  0012               	return	
  3050  0018AA                     l6111:
  3051  0018AA  5025               	movf	_timerAltaveu^0,w,c
  3052  0018AC  EC19  F00F         	call	_TiGetTics
  3053  0018B0  D821               	call	PL24	;call to abstracted procedure
  3054  0018B2  B0D8               	btfsc	status,0,c
  3055  0018B4  0012               	return	
  3056                           
  3057                           ;Altaveu.c: 38:     LATBbits.LB0 = 1;
  3058  0018B6  808A               	bsf	138,0,c	;volatile
  3059                           
  3060                           ;Altaveu.c: 39:     TiResetTics(timerAltaveu);
  3061  0018B8  5025               	movf	_timerAltaveu^0,w,c
  3062  0018BA  ECC1  F00F         	call	_TiResetTics
  3063  0018BE                     l6117:
  3064                           
  3065                           ;Altaveu.c: 40:     state++;
  3066  0018BE  2A23               	incf	motorAltaveu@state^0,f,c
  3067  0018C0  0012               	return	
  3068  0018C2                     l6119:
  3069                           
  3070                           ;Altaveu.c: 44:    if (TiGetTics(timerAltaveu) > nota) {
  3071  0018C2  5025               	movf	_timerAltaveu^0,w,c
  3072  0018C4  EC19  F00F         	call	_TiGetTics
  3073  0018C8  D815               	call	PL24	;call to abstracted procedure
  3074  0018CA  B0D8               	btfsc	status,0,c
  3075  0018CC  0012               	return	
  3076                           
  3077                           ;Altaveu.c: 45:     LATBbits.LB0 = 0;
  3078  0018CE  908A               	bcf	138,0,c	;volatile
  3079                           
  3080                           ;Altaveu.c: 46:     TiResetTics(timerAltaveu);
  3081  0018D0  5025               	movf	_timerAltaveu^0,w,c
  3082  0018D2  ECC1  F00F         	call	_TiResetTics
  3083                           
  3084                           ;Altaveu.c: 47:     copsNota++;
  3085  0018D6  2A24               	incf	_copsNota^0,f,c
  3086  0018D8  D7F2               	goto	l6117
  3087  0018DA                     l6131:
  3088  0018DA  5023               	movf	motorAltaveu@state^0,w,c
  3089  0018DC  6E6B               	movwf	??_motorAltaveu^0,c
  3090  0018DE  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  3091                           
  3092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3093                           ; Switch size 1, requested type "space"
  3094                           ; Number of cases is 1, Range of values is 0 to 0
  3095                           ; switch strategies available:
  3096                           ; Name         Instructions Cycles
  3097                           ; simple_byte            4     3 (average)
  3098                           ;	Chosen strategy is simple_byte
  3099  0018E0  506C               	movf	(??_motorAltaveu+1)^0,w,c
  3100  0018E2  A4D8               	btfss	status,2,c
  3101  0018E4  0012               	return	
  3102                           
  3103                           ; Switch size 1, requested type "space"
  3104                           ; Number of cases is 3, Range of values is 0 to 2
  3105                           ; switch strategies available:
  3106                           ; Name         Instructions Cycles
  3107                           ; simple_byte           10     6 (average)
  3108                           ;	Chosen strategy is simple_byte
  3109  0018E6  506B               	movf	??_motorAltaveu^0,w,c
  3110  0018E8  E0C9               	bz	l862
  3111  0018EA  0A01               	xorlw	1	; case 1
  3112  0018EC  E0D2               	bz	l6099
  3113  0018EE  0A03               	xorlw	3	; case 2
  3114  0018F0  E0E8               	bz	l6119
  3115  0018F2  0012               	return		;funcret
  3116  0018F4                     __end_of_motorAltaveu:
  3117                           	callstack 0
  3118  0018F4                     PL24:
  3119                           	callstack 27
  3120  0018F4  5026               	movf	_nota^0,w,c
  3121  0018F6  6E6B               	movwf	??_motorAltaveu^0,c
  3122  0018F8  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  3123  0018FA  5064               	movf	?_TiGetTics^0,w,c
  3124  0018FC  5C6B               	subwf	??_motorAltaveu^0,w,c
  3125  0018FE  506C               	movf	(??_motorAltaveu+1)^0,w,c
  3126  001900  0A80               	xorlw	128
  3127  001902  6E6D               	movwf	(??_motorAltaveu+2)^0,c
  3128  001904  5065               	movf	(?_TiGetTics+1)^0,w,c
  3129  001906  0A80               	xorlw	128
  3130  001908  586D               	subwfb	(??_motorAltaveu+2)^0,w,c
  3131  00190A  0012               	return	
  3132  00190C                     __end_ofPL24:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _menu *****************
  3136 ;; Defined at:
  3137 ;;		line 42 in file "Menu.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1
  3151 ;;      Params:         0       0       0
  3152 ;;      Locals:         0       0       0
  3153 ;;      Temps:          0       5       0
  3154 ;;      Totals:         0       5       0
  3155 ;;Total ram usage:        5 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 6
  3158 ;; This function calls:
  3159 ;;		_CToAConverteix
  3160 ;;		_CToAHaAcabat
  3161 ;;		_CToAobtenir
  3162 ;;		_GLCDMostraMenu
  3163 ;;		_HActualitzaHora
  3164 ;;		_JJuguem
  3165 ;;		_JendGame
  3166 ;;		_JnovaDireccio
  3167 ;;		_JnovaTecla
  3168 ;;		_LcClear
  3169 ;;		_LcGotoXY
  3170 ;;		_LcLliure
  3171 ;;		_LcNewString
  3172 ;;		_LcPutChar
  3173 ;;		_LcScroll
  3174 ;;		_NoFerMenu
  3175 ;;		_SIOHaAcabatPuntuacions
  3176 ;;		_SMSoff
  3177 ;;		_SMSon
  3178 ;;		_SiFerMenu
  3179 ;;		_TiGetTics
  3180 ;;		_TiResetTics
  3181 ;;		_URegister
  3182 ;;		_UcheckExists
  3183 ;;		_UcheckExistsGetError
  3184 ;;		_UcheckExistsNotFinished
  3185 ;;		_UenviaChar
  3186 ;;		_UenviaPas
  3187 ;;		_UgetNumUsuaris
  3188 ;;		_UgetScore
  3189 ;;		_UgetTop5
  3190 ;;		_UgetUserName
  3191 ;;		_UshowUsersCalculat
  3192 ;;		_calculateShowUsers
  3193 ;;		_checkHoraAcabat
  3194 ;;		_getArrayShowUsers
  3195 ;;		_miraPassword
  3196 ;; This function is called by:
  3197 ;;		_main
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text19
  3202  0002F0                     __ptext19:
  3203                           	callstack 0
  3204  0002F0                     _menu:
  3205                           	callstack 24
  3206                           
  3207                           ;Menu.c: 43:  static char state = 0;;Menu.c: 44:  switch(state) {
  3208                           
  3209                           ;incstack = 0
  3210  0002F0  D322               	goto	l7193
  3211  0002F2                     l6647:
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;Menu.c: 46:    LcClear();
  3215  0002F2  EC74  F00F         	call	_LcClear	;wreg free
  3216                           
  3217                           ;Menu.c: 47:    LcNewString(loginText);
  3218  0002F6  0ECF               	movlw	low _loginText
  3219  0002F8  6E67               	movwf	LcNewString@new_s^0,c
  3220  0002FA  6A68               	clrf	(LcNewString@new_s+1)^0,c
  3221  0002FC  EC77  F000         	call	_LcNewString	;wreg free
  3222                           
  3223                           ;Menu.c: 48:    state = 1;
  3224  000300  0E01               	movlw	1
  3225  000302  6E2E               	movwf	menu@state^0,c
  3226                           
  3227                           ;Menu.c: 49:   break;
  3228  000304  0C01               	retlw	1
  3229  000306                     l6653:
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;Menu.c: 51:    if (LcLliure()) {
  3233  000306  EC7D  F000         	call	_LcLliure	;wreg free
  3234  00030A  A0D8               	btfss	status,0,c
  3235  00030C  0012               	return	
  3236                           
  3237                           ;Menu.c: 52:     LcGotoXY(0,1);
  3238  00030E  DB95               	call	PL36	;call to abstracted procedure
  3239  000310  ECC2  F00E         	call	_LcGotoXY
  3240                           
  3241                           ;Menu.c: 53:     LcNewString(registerText);
  3242  000314  0EC4               	movlw	low _registerText
  3243  000316  6E67               	movwf	LcNewString@new_s^0,c
  3244  000318  6A68               	clrf	(LcNewString@new_s+1)^0,c
  3245  00031A  EC77  F000         	call	_LcNewString	;wreg free
  3246                           
  3247                           ;Menu.c: 54:     NovaTecla = -1;
  3248  00031E  6852               	setf	_NovaTecla^0,c
  3249                           
  3250                           ;Menu.c: 55:     state = 2;
  3251  000320  0E02               	movlw	2
  3252  000322  6E2E               	movwf	menu@state^0,c
  3253                           
  3254                           ;Menu.c: 57:   break;
  3255                           
  3256                           ;Menu.c: 56:    }
  3257  000324  0C02               	retlw	2
  3258  000326                     l6663:
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;Menu.c: 59:    if (NovaTecla == 1) {
  3262  000326  0452               	decf	_NovaTecla^0,w,c
  3263  000328  E104               	bnz	l6669
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;Menu.c: 60:     loginNOTRegister = 1;
  3267  00032A  8077               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3268  00032C                     l6667:
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;Menu.c: 61:     state = 3;
  3272  00032C  0E03               	movlw	3
  3273  00032E  6E2E               	movwf	menu@state^0,c
  3274                           
  3275                           ;Menu.c: 62:    }
  3276  000330  0C03               	retlw	3
  3277  000332                     l6669:
  3278                           
  3279                           ; BSR set to: 0
  3280  000332  0E02               	movlw	2
  3281  000334  1852               	xorwf	_NovaTecla^0,w,c
  3282  000336  A4D8               	btfss	status,2,c
  3283  000338  0012               	return	
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;Menu.c: 64:     loginNOTRegister = 0;
  3287  00033A  9077               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3288  00033C  D7F7               	goto	l6667
  3289  00033E                     l511:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;Menu.c: 69:    NovaTecla = -1;
  3293  00033E  6852               	setf	_NovaTecla^0,c
  3294                           
  3295                           ;Menu.c: 70:    novaLletra = -1;
  3296  000340  6851               	setf	_novaLletra^0,c
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;Menu.c: 71:    LcClear();
  3300  000342  EC74  F00F         	call	_LcClear	;wreg free
  3301                           
  3302                           ;Menu.c: 72:    LcNewString("USER: ");
  3303  000346  0EE7               	movlw	low STR_1
  3304  000348  DB6D               	call	PL10	;call to abstracted procedure
  3305  00034A  EC77  F000         	call	_LcNewString	;wreg free
  3306                           
  3307                           ;Menu.c: 73:    state = 4;
  3308  00034E  0E04               	movlw	4
  3309  000350  6E2E               	movwf	menu@state^0,c
  3310                           
  3311                           ;Menu.c: 74:   break;
  3312  000352  0C04               	retlw	4
  3313  000354                     l6681:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;Menu.c: 76:    if (LcLliure()) {
  3317  000354  EC7D  F000         	call	_LcLliure	;wreg free
  3318  000358  A0D8               	btfss	status,0,c
  3319  00035A  0012               	return	
  3320                           
  3321                           ;Menu.c: 77:     LcGotoXY(0,1);
  3322  00035C  DB6E               	call	PL36	;call to abstracted procedure
  3323  00035E  ECC2  F00E         	call	_LcGotoXY
  3324                           
  3325                           ;Menu.c: 78:     LcNewString("PSWD: ");
  3326  000362  0EE0               	movlw	low STR_2
  3327  000364  DB5F               	call	PL10	;call to abstracted procedure
  3328  000366  EC77  F000         	call	_LcNewString	;wreg free
  3329                           
  3330                           ;Menu.c: 79:     state = 5;
  3331  00036A  0E05               	movlw	5
  3332  00036C  6E2E               	movwf	menu@state^0,c
  3333  00036E  0C05               	retlw	5
  3334  000370                     l6689:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;Menu.c: 83:    if (LcLliure()) {
  3338  000370  EC7D  F000         	call	_LcLliure	;wreg free
  3339  000374  A0D8               	btfss	status,0,c
  3340  000376  0012               	return	
  3341                           
  3342                           ;Menu.c: 84:     LcGotoXY(6,0);
  3343  000378  0E00               	movlw	0
  3344  00037A  6E6C               	movwf	LcGotoXY@Row^0,c
  3345  00037C  0E06               	movlw	6
  3346  00037E  ECC2  F00E         	call	_LcGotoXY
  3347                           
  3348                           ;Menu.c: 85:     SMSon();
  3349  000382  ECD3  F000         	call	_SMSon	;wreg free
  3350                           
  3351                           ;Menu.c: 86:     tmp =0;
  3352  000386  6A33               	clrf	_tmp^0,c
  3353  000388                     l6697:
  3354                           
  3355                           ;Menu.c: 87:     state = 6;
  3356  000388  0E06               	movlw	6
  3357  00038A  6E2E               	movwf	menu@state^0,c
  3358  00038C  0C06               	retlw	6
  3359  00038E                     l6699:
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;Menu.c: 91:    if (novaLletra > 31 && NovaTecla != 10) {
  3363  00038E  5051               	movf	_novaLletra^0,w,c
  3364  000390  0A80               	xorlw	128
  3365  000392  0F60               	addlw	-160
  3366  000394  E30E               	bnc	l6709
  3367                           
  3368                           ; BSR set to: 0
  3369  000396  0E0A               	movlw	10
  3370  000398  1852               	xorwf	_NovaTecla^0,w,c
  3371  00039A  E00B               	bz	l6709
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;Menu.c: 92:     LcPutChar(novaLletra);
  3375  00039C  5051               	movf	_novaLletra^0,w,c
  3376  00039E  EC06  F00E         	call	_LcPutChar
  3377                           
  3378                           ;Menu.c: 93:     UenviaChar(novaLletra,tmp);
  3379  0003A2  C033  F064         	movff	_tmp,UenviaChar@pos
  3380  0003A6  5051               	movf	_novaLletra^0,w,c
  3381  0003A8  EC36  F000         	call	_UenviaChar
  3382  0003AC                     l6707:
  3383                           
  3384                           ;Menu.c: 94:     state = 7;
  3385  0003AC  0E07               	movlw	7
  3386  0003AE  6E2E               	movwf	menu@state^0,c
  3387                           
  3388                           ;Menu.c: 95:    }
  3389  0003B0  0C07               	retlw	7
  3390  0003B2                     l6709:
  3391                           
  3392                           ; BSR set to: 0
  3393  0003B2  0E0B               	movlw	11
  3394  0003B4  1852               	xorwf	_NovaTecla^0,w,c
  3395  0003B6  E0FA               	bz	l6707
  3396  0003B8  0012               	return	
  3397  0003BA                     l6713:
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;Menu.c: 101:    if (tmp != 7 && NovaTecla != 11) {
  3401  0003BA  0E07               	movlw	7
  3402  0003BC  1833               	xorwf	_tmp^0,w,c
  3403  0003BE  E005               	bz	l6725
  3404                           
  3405                           ; BSR set to: 0
  3406  0003C0  0E0B               	movlw	11
  3407  0003C2  1852               	xorwf	_NovaTecla^0,w,c
  3408  0003C4  E002               	bz	l6725
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;Menu.c: 102:     tmp++;
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;Menu.c: 103:     NovaTecla = -1;
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;Menu.c: 104:     novaLletra = -1;
  3418  0003C6  DB51               	call	PL96	;call to abstracted procedure
  3419  0003C8  D7DF               	goto	l6697
  3420  0003CA                     l6725:
  3421                           
  3422                           ; BSR set to: 0
  3423  0003CA  0E07               	movlw	7
  3424  0003CC  1833               	xorwf	_tmp^0,w,c
  3425  0003CE  E004               	bz	u7080
  3426                           
  3427                           ; BSR set to: 0
  3428  0003D0  0E0B               	movlw	11
  3429  0003D2  1852               	xorwf	_NovaTecla^0,w,c
  3430  0003D4  A4D8               	btfss	status,2,c
  3431  0003D6  0012               	return	
  3432  0003D8                     u7080:
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;Menu.c: 108:     LcGotoXY(6,1);
  3436  0003D8  0E01               	movlw	1
  3437  0003DA  6E6C               	movwf	LcGotoXY@Row^0,c
  3438  0003DC  0E06               	movlw	6
  3439  0003DE  ECC2  F00E         	call	_LcGotoXY
  3440                           
  3441                           ;Menu.c: 109:     UenviaChar('\0',tmp);
  3442  0003E2  C033  F064         	movff	_tmp,UenviaChar@pos
  3443  0003E6  0E00               	movlw	0
  3444  0003E8  EC36  F000         	call	_UenviaChar
  3445                           
  3446                           ;Menu.c: 110:     NovaTecla = -1;
  3447                           
  3448                           ;Menu.c: 111:     novaLletra = -1;
  3449                           
  3450                           ;Menu.c: 112:     tmp = 0;
  3451  0003EC  DB3A               	call	PL94	;call to abstracted procedure
  3452  0003EE                     l6739:
  3453                           
  3454                           ;Menu.c: 113:     state = 8;
  3455  0003EE  0E08               	movlw	8
  3456  0003F0  6E2E               	movwf	menu@state^0,c
  3457  0003F2  0C08               	retlw	8
  3458  0003F4                     l6741:
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;Menu.c: 117:    if (novaLletra > 31 && NovaTecla != 10) {
  3462  0003F4  5051               	movf	_novaLletra^0,w,c
  3463  0003F6  0A80               	xorlw	128
  3464  0003F8  0F60               	addlw	-160
  3465  0003FA  E30E               	bnc	l6751
  3466                           
  3467                           ; BSR set to: 0
  3468  0003FC  0E0A               	movlw	10
  3469  0003FE  1852               	xorwf	_NovaTecla^0,w,c
  3470  000400  E00B               	bz	l6751
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;Menu.c: 118:     LcPutChar(novaLletra);
  3474  000402  5051               	movf	_novaLletra^0,w,c
  3475  000404  EC06  F00E         	call	_LcPutChar
  3476                           
  3477                           ;Menu.c: 119:     UenviaPas(novaLletra,tmp);
  3478  000408  C033  F064         	movff	_tmp,UenviaPas@pos
  3479  00040C  5051               	movf	_novaLletra^0,w,c
  3480  00040E  EC2E  F000         	call	_UenviaPas
  3481  000412                     l6749:
  3482                           
  3483                           ;Menu.c: 120:     state = 9;
  3484  000412  0E09               	movlw	9
  3485  000414  6E2E               	movwf	menu@state^0,c
  3486                           
  3487                           ;Menu.c: 121:    }
  3488  000416  0C09               	retlw	9
  3489  000418                     l6751:
  3490                           
  3491                           ; BSR set to: 0
  3492  000418  0E0B               	movlw	11
  3493  00041A  1852               	xorwf	_NovaTecla^0,w,c
  3494  00041C  E0FA               	bz	l6749
  3495  00041E  0012               	return	
  3496  000420                     l6755:
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;Menu.c: 127:    if (tmp != 7 && NovaTecla != 11) {
  3500  000420  0E07               	movlw	7
  3501  000422  1833               	xorwf	_tmp^0,w,c
  3502  000424  E005               	bz	l6767
  3503                           
  3504                           ; BSR set to: 0
  3505  000426  0E0B               	movlw	11
  3506  000428  1852               	xorwf	_NovaTecla^0,w,c
  3507  00042A  E002               	bz	l6767
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;Menu.c: 128:     tmp++;
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;Menu.c: 129:     NovaTecla = -1;
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;Menu.c: 130:     novaLletra = -1;
  3517  00042C  DB1E               	call	PL96	;call to abstracted procedure
  3518  00042E  D7DF               	goto	l6739
  3519  000430                     l6767:
  3520                           
  3521                           ; BSR set to: 0
  3522  000430  0E07               	movlw	7
  3523  000432  1833               	xorwf	_tmp^0,w,c
  3524  000434  E004               	bz	u7150
  3525                           
  3526                           ; BSR set to: 0
  3527  000436  0E0B               	movlw	11
  3528  000438  1852               	xorwf	_NovaTecla^0,w,c
  3529  00043A  A4D8               	btfss	status,2,c
  3530  00043C  0012               	return	
  3531  00043E                     u7150:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;Menu.c: 134:     UenviaPas('\0',tmp);
  3535  00043E  C033  F064         	movff	_tmp,UenviaPas@pos
  3536  000442  0E00               	movlw	0
  3537  000444  EC2E  F000         	call	_UenviaPas
  3538                           
  3539                           ;Menu.c: 135:     NovaTecla = -1;
  3540                           
  3541                           ;Menu.c: 136:     novaLletra = -1;
  3542                           
  3543                           ;Menu.c: 137:     tmp = 0;
  3544  000448  DB0C               	call	PL94	;call to abstracted procedure
  3545                           
  3546                           ;Menu.c: 138:     UcheckExists();
  3547  00044A  ECEE  F000         	call	_UcheckExists	;wreg free
  3548                           
  3549                           ;Menu.c: 139:     SMSoff();
  3550  00044E  ECD6  F000         	call	_SMSoff	;wreg free
  3551                           
  3552                           ;Menu.c: 140:     state = 10;
  3553  000452  0E0A               	movlw	10
  3554  000454  6E2E               	movwf	menu@state^0,c
  3555  000456  0C0A               	retlw	10
  3556  000458                     l6785:
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;Menu.c: 144:    if (!UcheckExistsNotFinished()) {
  3560  000458  EC65  F000         	call	_UcheckExistsNotFinished	;wreg free
  3561  00045C  B0D8               	btfsc	status,0,c
  3562  00045E  0012               	return	
  3563                           
  3564                           ;Menu.c: 145:     indexUsuari = UcheckExistsGetError();
  3565  000460  ECEC  F000         	call	_UcheckExistsGetError	;wreg free
  3566  000464  6E30               	movwf	_indexUsuari^0,c
  3567                           
  3568                           ;Menu.c: 146:     state = 11;
  3569  000466  0E0B               	movlw	11
  3570  000468  6E2E               	movwf	menu@state^0,c
  3571  00046A  0C0B               	retlw	11
  3572  00046C                     l538:
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;Menu.c: 150:    if (!loginNOTRegister && indexUsuari == -1) {
  3576  00046C  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3577  00046E  D006               	goto	l539
  3578                           
  3579                           ; BSR set to: 0
  3580  000470  2830               	incf	_indexUsuari^0,w,c
  3581  000472  E104               	bnz	l539
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;Menu.c: 151:     URegister();
  3585  000474  ECF0  F000         	call	_URegister	;wreg free
  3586  000478                     l6795:
  3587                           
  3588                           ;Menu.c: 152:     state = 0;
  3589  000478  6A2E               	clrf	menu@state^0,c
  3590                           
  3591                           ;Menu.c: 153:    }
  3592  00047A  0012               	return	
  3593  00047C                     l539:
  3594                           
  3595                           ; BSR set to: 0
  3596  00047C  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3597                           
  3598                           ; BSR set to: 0
  3599  00047E  BE30               	btfsc	_indexUsuari^0,7,c
  3600  000480  D006               	goto	l541
  3601                           
  3602                           ; BSR set to: 0
  3603  000482  EC3E  F00F         	call	_miraPassword	;wreg free
  3604  000486  E303               	bnc	l541
  3605  000488                     u7210:
  3606                           
  3607                           ;Menu.c: 155:     state = 12;
  3608  000488  0E0C               	movlw	12
  3609  00048A  6E2E               	movwf	menu@state^0,c
  3610                           
  3611                           ;Menu.c: 156:    }
  3612  00048C  0C0C               	retlw	12
  3613  00048E                     l541:
  3614  00048E  A077               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3615  000490  D002               	goto	u7230
  3616  000492  2830               	incf	_indexUsuari^0,w,c
  3617  000494  E0F1               	bz	l6795
  3618  000496                     u7230:
  3619  000496  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3620  000498  D002               	goto	u7250
  3621  00049A  AE30               	btfss	_indexUsuari^0,7,c
  3622  00049C  D7ED               	goto	l6795
  3623  00049E                     u7250:
  3624  00049E  EC3E  F00F         	call	_miraPassword	;wreg free
  3625  0004A2  E3EA               	bnc	l6795
  3626  0004A4  0012               	return	
  3627  0004A6                     l6809:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;Menu.c: 162:    LcClear();
  3631  0004A6  EC74  F00F         	call	_LcClear	;wreg free
  3632                           
  3633                           ;Menu.c: 163:    SiFerMenu();
  3634  0004AA  ECF2  F000         	call	_SiFerMenu	;wreg free
  3635                           
  3636                           ;Menu.c: 164:    GLCDMostraMenu(menuDalt);
  3637  0004AE  5031               	movf	_menuDalt^0,w,c
  3638  0004B0  EC6B  F000         	call	_GLCDMostraMenu
  3639                           
  3640                           ;Menu.c: 165:    novaDireccio = -1;
  3641  0004B4  6850               	setf	_novaDireccio^0,c
  3642                           
  3643                           ;Menu.c: 166:    NovaTecla = -1;
  3644  0004B6  6852               	setf	_NovaTecla^0,c
  3645                           
  3646                           ;Menu.c: 167:    state = 13;
  3647  0004B8  0E0D               	movlw	13
  3648  0004BA  6E2E               	movwf	menu@state^0,c
  3649                           
  3650                           ;Menu.c: 168:   break;
  3651  0004BC  0C0D               	retlw	13
  3652  0004BE                     l6821:
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;Menu.c: 170:    if (novaDireccio == 8) {
  3656  0004BE  0E08               	movlw	8
  3657  0004C0  1850               	xorwf	_novaDireccio^0,w,c
  3658  0004C2  E105               	bnz	l6829
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;Menu.c: 171:     if(menuDalt < 4) menuDalt++;
  3662  0004C4  0E04               	movlw	4
  3663  0004C6  6031               	cpfslt	_menuDalt^0,c
  3664  0004C8  D7DF               	goto	u7210
  3665                           
  3666                           ; BSR set to: 0
  3667  0004CA  2A31               	incf	_menuDalt^0,f,c
  3668  0004CC  D7DD               	goto	u7210
  3669  0004CE                     l6829:
  3670                           
  3671                           ; BSR set to: 0
  3672  0004CE  0E02               	movlw	2
  3673  0004D0  1850               	xorwf	_novaDireccio^0,w,c
  3674  0004D2  E104               	bnz	l6837
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;Menu.c: 175:     if(menuDalt > 0) menuDalt--;
  3678  0004D4  5031               	movf	_menuDalt^0,w,c
  3679  0004D6  E0D8               	bz	u7210
  3680                           
  3681                           ; BSR set to: 0
  3682  0004D8  0631               	decf	_menuDalt^0,f,c
  3683  0004DA  D7D6               	goto	u7210
  3684  0004DC                     l6837:
  3685                           
  3686                           ; BSR set to: 0
  3687  0004DC  0E0B               	movlw	11
  3688  0004DE  1852               	xorwf	_NovaTecla^0,w,c
  3689  0004E0  E10E               	bnz	l6849
  3690                           
  3691                           ; BSR set to: 0
  3692  0004E2  0E03               	movlw	3
  3693  0004E4  1831               	xorwf	_menuDalt^0,w,c
  3694  0004E6  E10B               	bnz	l6849
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;Menu.c: 179:     NoFerMenu();
  3698  0004E8  ECF6  F000         	call	_NoFerMenu	;wreg free
  3699                           
  3700                           ;Menu.c: 180:     LcClear();
  3701  0004EC  EC74  F00F         	call	_LcClear	;wreg free
  3702                           
  3703                           ;Menu.c: 181:     LcNewString("BYE BYE ");
  3704  0004F0  0EC7               	movlw	low STR_3
  3705  0004F2  DA98               	call	PL10	;call to abstracted procedure
  3706  0004F4  EC77  F000         	call	_LcNewString	;wreg free
  3707                           
  3708                           ;Menu.c: 182:     state = 14;
  3709  0004F8  0E0E               	movlw	14
  3710  0004FA  6E2E               	movwf	menu@state^0,c
  3711                           
  3712                           ;Menu.c: 183:    }
  3713  0004FC  0C0E               	retlw	14
  3714  0004FE                     l6849:
  3715                           
  3716                           ; BSR set to: 0
  3717  0004FE  0E0B               	movlw	11
  3718  000500  1852               	xorwf	_NovaTecla^0,w,c
  3719  000502  E10E               	bnz	l6863
  3720                           
  3721                           ; BSR set to: 0
  3722  000504  0431               	decf	_menuDalt^0,w,c
  3723  000506  E10C               	bnz	l6863
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;Menu.c: 185:     LcClear();
  3727  000508  EC74  F00F         	call	_LcClear	;wreg free
  3728                           
  3729                           ;Menu.c: 186:     NoFerMenu();
  3730  00050C  ECF6  F000         	call	_NoFerMenu	;wreg free
  3731                           
  3732                           ;Menu.c: 187:     LcNewString("Modify Time:");
  3733  000510  0EAE               	movlw	low STR_4
  3734  000512  DA88               	call	PL10	;call to abstracted procedure
  3735  000514  EC77  F000         	call	_LcNewString	;wreg free
  3736                           
  3737                           ;Menu.c: 188:     NovaTecla = -1;
  3738  000518  6852               	setf	_NovaTecla^0,c
  3739                           
  3740                           ;Menu.c: 189:     state = 16;
  3741  00051A  0E10               	movlw	16
  3742  00051C  6E2E               	movwf	menu@state^0,c
  3743                           
  3744                           ;Menu.c: 190:    }
  3745  00051E  0C10               	retlw	16
  3746  000520                     l6863:
  3747                           
  3748                           ; BSR set to: 0
  3749  000520  5031               	movf	_menuDalt^0,w,c
  3750  000522  E112               	bnz	l6879
  3751                           
  3752                           ; BSR set to: 0
  3753  000524  0E0B               	movlw	11
  3754  000526  1852               	xorwf	_NovaTecla^0,w,c
  3755  000528  E10F               	bnz	l6879
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;Menu.c: 192:     NoFerMenu();
  3759  00052A  ECF6  F000         	call	_NoFerMenu	;wreg free
  3760                           
  3761                           ;Menu.c: 193:     NovaTecla = -1;
  3762  00052E  6852               	setf	_NovaTecla^0,c
  3763                           
  3764                           ;Menu.c: 194:     LcClear();
  3765  000530  EC74  F00F         	call	_LcClear	;wreg free
  3766                           
  3767                           ;Menu.c: 195:     LcNewString("TIME REMAINING:");
  3768  000534  0E9E               	movlw	low STR_5
  3769  000536  DA76               	call	PL10	;call to abstracted procedure
  3770  000538  EC77  F000         	call	_LcNewString	;wreg free
  3771                           
  3772                           ;Menu.c: 196:     JJuguem(indexUsuari);
  3773  00053C  5030               	movf	_indexUsuari^0,w,c
  3774  00053E  EC9C  F000         	call	_JJuguem
  3775  000542                     l6877:
  3776                           
  3777                           ;Menu.c: 197:     state = 21;
  3778  000542  0E15               	movlw	21
  3779  000544  6E2E               	movwf	menu@state^0,c
  3780                           
  3781                           ;Menu.c: 198:    }
  3782  000546  0C15               	retlw	21
  3783  000548                     l6879:
  3784                           
  3785                           ; BSR set to: 0
  3786  000548  0E0B               	movlw	11
  3787  00054A  1852               	xorwf	_NovaTecla^0,w,c
  3788  00054C  E10E               	bnz	l6895
  3789                           
  3790                           ; BSR set to: 0
  3791  00054E  0E04               	movlw	4
  3792  000550  1831               	xorwf	_menuDalt^0,w,c
  3793  000552  E10B               	bnz	l6895
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;Menu.c: 200:     NoFerMenu();
  3797  000554  ECF6  F000         	call	_NoFerMenu	;wreg free
  3798                           
  3799                           ;Menu.c: 201:     LcClear();
  3800  000558  EC74  F00F         	call	_LcClear	;wreg free
  3801                           
  3802                           ;Menu.c: 202:     menuDalt = 0;
  3803  00055C  6A31               	clrf	_menuDalt^0,c
  3804                           
  3805                           ;Menu.c: 203:     NovaTecla = -1;
  3806  00055E  6852               	setf	_NovaTecla^0,c
  3807                           
  3808                           ;Menu.c: 204:     calculateShowUsers();
  3809  000560  ECE8  F000         	call	_calculateShowUsers	;wreg free
  3810                           
  3811                           ;Menu.c: 205:     state = 30;
  3812  000564  0E1E               	movlw	30
  3813  000566  6E2E               	movwf	menu@state^0,c
  3814                           
  3815                           ;Menu.c: 206:    }
  3816  000568  0C1E               	retlw	30
  3817  00056A                     l6895:
  3818                           
  3819                           ; BSR set to: 0
  3820  00056A  0E0B               	movlw	11
  3821  00056C  1852               	xorwf	_NovaTecla^0,w,c
  3822  00056E  A4D8               	btfss	status,2,c
  3823  000570  0012               	return	
  3824                           
  3825                           ; BSR set to: 0
  3826  000572  0E02               	movlw	2
  3827  000574  1831               	xorwf	_menuDalt^0,w,c
  3828  000576  A4D8               	btfss	status,2,c
  3829  000578  0012               	return	
  3830                           
  3831                           ; BSR set to: 0
  3832  00057A  0E00               	movlw	0
  3833  00057C  EC1B  F000         	call	_UgetTop5
  3834  000580  0AFF               	xorlw	255
  3835  000582  B4D8               	btfsc	status,2,c
  3836  000584  0012               	return	
  3837                           
  3838                           ;Menu.c: 208:     NoFerMenu();
  3839  000586  ECF6  F000         	call	_NoFerMenu	;wreg free
  3840                           
  3841                           ;Menu.c: 209:     LcClear();
  3842  00058A  EC74  F00F         	call	_LcClear	;wreg free
  3843                           
  3844                           ;Menu.c: 210:     menuDalt = 0;
  3845  00058E  6A31               	clrf	_menuDalt^0,c
  3846                           
  3847                           ;Menu.c: 211:     NovaTecla = -1;
  3848  000590  6852               	setf	_NovaTecla^0,c
  3849  000592                     l6909:
  3850                           
  3851                           ;Menu.c: 212:     state = 31;
  3852  000592  0E1F               	movlw	31
  3853  000594  6E2E               	movwf	menu@state^0,c
  3854  000596  0C1F               	retlw	31
  3855  000598                     l6911:
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;Menu.c: 216:    if (LcLliure()) {
  3859  000598  EC7D  F000         	call	_LcLliure	;wreg free
  3860  00059C  A0D8               	btfss	status,0,c
  3861  00059E  0012               	return	
  3862                           
  3863                           ;Menu.c: 217:     LcNewString(UgetUserName(indexUsuari));
  3864  0005A0  5030               	movf	_indexUsuari^0,w,c
  3865  0005A2  ECF5  F00F         	call	_UgetUserName
  3866  0005A6  DA4C               	call	PL46	;call to abstracted procedure
  3867  0005A8  EC77  F000         	call	_LcNewString	;wreg free
  3868                           
  3869                           ;Menu.c: 218:     TiResetTics(timerMenu);
  3870  0005AC  5032               	movf	_timerMenu^0,w,c
  3871  0005AE  ECC1  F00F         	call	_TiResetTics
  3872                           
  3873                           ;Menu.c: 219:     state = 15;
  3874  0005B2  0E0F               	movlw	15
  3875  0005B4  6E2E               	movwf	menu@state^0,c
  3876  0005B6  0C0F               	retlw	15
  3877  0005B8                     l6919:
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;Menu.c: 223:    if (TiGetTics(timerMenu) > 2410) {
  3881  0005B8  5032               	movf	_timerMenu^0,w,c
  3882  0005BA  EC19  F00F         	call	_TiGetTics
  3883  0005BE  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  3884  0005C0  0012               	return	
  3885  0005C2  0E6B               	movlw	107
  3886  0005C4  5C64               	subwf	?_TiGetTics^0,w,c
  3887  0005C6  0E09               	movlw	9
  3888  0005C8  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  3889  0005CA  E301 D755          	bc	l6795
  3890  0005CE  0012               	return	
  3891  0005D0                     l6923:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;Menu.c: 228:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3895  0005D0  EC7D  F000         	call	_LcLliure	;wreg free
  3896  0005D4  E347               	bnc	l6989
  3897  0005D6  BE52               	btfsc	_NovaTecla^0,7,c
  3898  0005D8  D045               	goto	l6989
  3899  0005DA  5052               	movf	_NovaTecla^0,w,c
  3900  0005DC  0A80               	xorlw	128
  3901  0005DE  0F76               	addlw	-138
  3902  0005E0  E241               	bc	l6989
  3903                           
  3904                           ;Menu.c: 229:     LcGotoXY(0,1);
  3905  0005E2  DA2B               	call	PL36	;call to abstracted procedure
  3906  0005E4  ECC2  F00E         	call	_LcGotoXY
  3907                           
  3908                           ;Menu.c: 230:     horaTmp[0] = NovaTecla+48;
  3909  0005E8  5052               	movf	_NovaTecla^0,w,c
  3910  0005EA  0F30               	addlw	48
  3911  0005EC  6E41               	movwf	_horaTmp^0,c
  3912                           
  3913                           ;Menu.c: 231:     LcPutChar(horaTmp[0]);
  3914  0005EE  5041               	movf	_horaTmp^0,w,c
  3915  0005F0  EC06  F00E         	call	_LcPutChar
  3916                           
  3917                           ;Menu.c: 232:     NovaTecla = -1;
  3918  0005F4  6852               	setf	_NovaTecla^0,c
  3919                           
  3920                           ;Menu.c: 233:     state = 17;
  3921  0005F6  0E11               	movlw	17
  3922  0005F8                     L1:
  3923  0005F8  6E2E               	movwf	menu@state^0,c
  3924                           
  3925                           ;Menu.c: 234:    }
  3926  0005FA  0012               	return	
  3927  0005FC                     L2:
  3928  0005FC  1852               	xorwf	_NovaTecla^0,w,c
  3929  0005FE  E101 D743          	bz	u7210
  3930  000602  0012               	return	
  3931  000604                     l6943:
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;Menu.c: 240:    if (NovaTecla > -1 && NovaTecla < 10) {
  3935  000604  BE52               	btfsc	_NovaTecla^0,7,c
  3936  000606  D02E               	goto	l6989
  3937                           
  3938                           ; BSR set to: 0
  3939  000608  5052               	movf	_NovaTecla^0,w,c
  3940  00060A  0A80               	xorlw	128
  3941  00060C  0F76               	addlw	-138
  3942  00060E  E22A               	bc	l6989
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;Menu.c: 241:     horaTmp[1] = NovaTecla+48;
  3946  000610  5052               	movf	_NovaTecla^0,w,c
  3947  000612  0F30               	addlw	48
  3948  000614  6E42               	movwf	(_horaTmp+1)^0,c
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;Menu.c: 242:     LcPutChar(horaTmp[1]);
  3952  000616  5042               	movf	(_horaTmp+1)^0,w,c
  3953  000618  EC06  F00E         	call	_LcPutChar
  3954                           
  3955                           ;Menu.c: 243:     NovaTecla = -1;
  3956  00061C  6852               	setf	_NovaTecla^0,c
  3957                           
  3958                           ;Menu.c: 244:     LcPutChar(':');
  3959  00061E  0E3A               	movlw	58
  3960  000620  EC06  F00E         	call	_LcPutChar
  3961                           
  3962                           ;Menu.c: 245:     state = 18;
  3963  000624  0E12               	movlw	18
  3964  000626  D7E8               	goto	L1
  3965  000628                     l6961:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;Menu.c: 252:    if (NovaTecla > -1 && NovaTecla < 10) {
  3969  000628  BE52               	btfsc	_NovaTecla^0,7,c
  3970  00062A  D01C               	goto	l6989
  3971                           
  3972                           ; BSR set to: 0
  3973  00062C  5052               	movf	_NovaTecla^0,w,c
  3974  00062E  0A80               	xorlw	128
  3975  000630  0F76               	addlw	-138
  3976  000632  E218               	bc	l6989
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;Menu.c: 253:     horaTmp[2] = NovaTecla+48;
  3980  000634  5052               	movf	_NovaTecla^0,w,c
  3981  000636  0F30               	addlw	48
  3982  000638  6E43               	movwf	(_horaTmp+2)^0,c
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;Menu.c: 254:     LcPutChar(horaTmp[2]);
  3986  00063A  5043               	movf	(_horaTmp+2)^0,w,c
  3987  00063C  EC06  F00E         	call	_LcPutChar
  3988                           
  3989                           ;Menu.c: 255:     NovaTecla = -1;
  3990  000640  6852               	setf	_NovaTecla^0,c
  3991                           
  3992                           ;Menu.c: 256:     state = 19;
  3993  000642  0E13               	movlw	19
  3994  000644  D7D9               	goto	L1
  3995  000646                     l6977:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;Menu.c: 263:    if (NovaTecla > -1 && NovaTecla < 10) {
  3999  000646  BE52               	btfsc	_NovaTecla^0,7,c
  4000  000648  D00D               	goto	l6989
  4001                           
  4002                           ; BSR set to: 0
  4003  00064A  5052               	movf	_NovaTecla^0,w,c
  4004  00064C  0A80               	xorlw	128
  4005  00064E  0F76               	addlw	-138
  4006  000650  E209               	bc	l6989
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;Menu.c: 264:     horaTmp[3] = NovaTecla+48;
  4010  000652  5052               	movf	_NovaTecla^0,w,c
  4011  000654  0F30               	addlw	48
  4012  000656  6E44               	movwf	(_horaTmp+3)^0,c
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;Menu.c: 265:     LcPutChar(horaTmp[3]);
  4016  000658  5044               	movf	(_horaTmp+3)^0,w,c
  4017  00065A  EC06  F00E         	call	_LcPutChar
  4018                           
  4019                           ;Menu.c: 266:     NovaTecla = -1;
  4020  00065E  6852               	setf	_NovaTecla^0,c
  4021                           
  4022                           ;Menu.c: 267:     state = 20;
  4023  000660  0E14               	movlw	20
  4024  000662  D7CA               	goto	L1
  4025  000664                     l6989:
  4026                           
  4027                           ; BSR set to: 0
  4028  000664  0E0A               	movlw	10
  4029  000666  D7CA               	goto	L2
  4030  000668                     l6993:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;Menu.c: 274:    if (NovaTecla == 11) {
  4034  000668  0E0B               	movlw	11
  4035  00066A  1852               	xorwf	_NovaTecla^0,w,c
  4036  00066C  E1FB               	bnz	l6989
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;Menu.c: 275:     HActualitzaHora(horaTmp);
  4040  00066E  0E41               	movlw	low _horaTmp
  4041  000670  6E64               	movwf	HActualitzaHora@nova^0,c
  4042  000672  EC50  F00F         	call	_HActualitzaHora	;wreg free
  4043                           
  4044                           ;Menu.c: 276:     NovaTecla = -1;
  4045  000676  6852               	setf	_NovaTecla^0,c
  4046  000678  D707               	goto	u7210
  4047  00067A                     l7005:
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;Menu.c: 284:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  4051  00067A  0E0A               	movlw	10
  4052  00067C  1852               	xorwf	_NovaTecla^0,w,c
  4053  00067E  E103               	bnz	u7600
  4054                           
  4055                           ; BSR set to: 0
  4056  000680  EC7D  F000         	call	_LcLliure	;wreg free
  4057  000684  E203               	bc	u7610
  4058  000686                     u7600:
  4059  000686  EC59  F000         	call	_checkHoraAcabat	;wreg free
  4060  00068A  E307               	bnc	l7017
  4061  00068C                     u7610:
  4062                           
  4063                           ;Menu.c: 285:     LcClear();
  4064  00068C  EC74  F00F         	call	_LcClear	;wreg free
  4065                           
  4066                           ;Menu.c: 286:     JendGame();
  4067  000690  ECF8  F000         	call	_JendGame	;wreg free
  4068                           
  4069                           ;Menu.c: 287:     state = 22;
  4070  000694  0E16               	movlw	22
  4071  000696  6E2E               	movwf	menu@state^0,c
  4072                           
  4073                           ;Menu.c: 288:    }
  4074  000698  0C16               	retlw	22
  4075  00069A                     l7017:
  4076  00069A  5052               	movf	_NovaTecla^0,w,c
  4077  00069C  0A80               	xorlw	128
  4078  00069E  0F7F               	addlw	-129
  4079  0006A0  E309               	bnc	l7027
  4080  0006A2  5052               	movf	_NovaTecla^0,w,c
  4081  0006A4  0A80               	xorlw	128
  4082  0006A6  0F76               	addlw	-138
  4083  0006A8  E205               	bc	l7027
  4084                           
  4085                           ;Menu.c: 290:     JnovaTecla(NovaTecla);
  4086  0006AA  5052               	movf	_NovaTecla^0,w,c
  4087  0006AC  EC94  F000         	call	_JnovaTecla
  4088                           
  4089                           ;Menu.c: 291:     NovaTecla = -1;
  4090  0006B0  6852               	setf	_NovaTecla^0,c
  4091  0006B2  D747               	goto	l6877
  4092  0006B4                     l7027:
  4093  0006B4  BE50               	btfsc	_novaDireccio^0,7,c
  4094  0006B6  0012               	return	
  4095                           
  4096                           ;Menu.c: 295:     JnovaDireccio(novaDireccio);
  4097  0006B8  5050               	movf	_novaDireccio^0,w,c
  4098  0006BA  EC98  F000         	call	_JnovaDireccio
  4099                           
  4100                           ;Menu.c: 296:     novaDireccio = -1;
  4101  0006BE  6850               	setf	_novaDireccio^0,c
  4102  0006C0  D740               	goto	l6877
  4103  0006C2                     l7035:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;Menu.c: 301:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  4107  0006C2  ECF4  F000         	call	_SIOHaAcabatPuntuacions	;wreg free
  4108  0006C6  0900               	iorlw	0
  4109  0006C8  B4D8               	btfsc	status,2,c
  4110  0006CA  0012               	return	
  4111  0006CC  0E0B               	movlw	11
  4112  0006CE  D796               	goto	L2
  4113  0006D0                     l7041:
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;Menu.c: 306:    if (LcLliure()) {
  4117  0006D0  EC7D  F000         	call	_LcLliure	;wreg free
  4118  0006D4  A0D8               	btfss	status,0,c
  4119  0006D6  0012               	return	
  4120                           
  4121                           ;Menu.c: 307:     LcGotoXY(0,0);
  4122  0006D8  0E00               	movlw	0
  4123  0006DA  6E6C               	movwf	LcGotoXY@Row^0,c
  4124  0006DC  ECC2  F00E         	call	_LcGotoXY
  4125                           
  4126                           ;Menu.c: 308:     LcNewString(getArrayShowUsers(menuDalt));
  4127  0006E0  5031               	movf	_menuDalt^0,w,c
  4128  0006E2  ECA5  F00F         	call	_getArrayShowUsers
  4129  0006E6  D9A4               	call	PL32	;call to abstracted procedure
  4130  0006E8  EC77  F000         	call	_LcNewString	;wreg free
  4131                           
  4132                           ;Menu.c: 309:     menuDalt++;
  4133  0006EC  2A31               	incf	_menuDalt^0,f,c
  4134                           
  4135                           ;Menu.c: 310:     state = 24;
  4136  0006EE  0E18               	movlw	24
  4137  0006F0  6E2E               	movwf	menu@state^0,c
  4138  0006F2  0C18               	retlw	24
  4139  0006F4                     l7049:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;Menu.c: 314:    if (LcLliure()) {
  4143  0006F4  EC7D  F000         	call	_LcLliure	;wreg free
  4144  0006F8  A0D8               	btfss	status,0,c
  4145  0006FA  0012               	return	
  4146                           
  4147                           ;Menu.c: 315:     if (menuDalt < UgetNumUsuaris()){
  4148  0006FC  ECEA  F000         	call	_UgetNumUsuaris	;wreg free
  4149  000700  6031               	cpfslt	_menuDalt^0,c
  4150  000702  D00B               	goto	l607
  4151                           
  4152                           ;Menu.c: 316:       LcGotoXY(0,1);
  4153  000704  D99A               	call	PL36	;call to abstracted procedure
  4154  000706  ECC2  F00E         	call	_LcGotoXY
  4155                           
  4156                           ;Menu.c: 317:       LcNewString(getArrayShowUsers(menuDalt));
  4157  00070A  5031               	movf	_menuDalt^0,w,c
  4158  00070C  ECA5  F00F         	call	_getArrayShowUsers
  4159  000710  D98F               	call	PL32	;call to abstracted procedure
  4160  000712  EC77  F000         	call	_LcNewString	;wreg free
  4161                           
  4162                           ;Menu.c: 318:       menuDalt++;
  4163  000716  2A31               	incf	_menuDalt^0,f,c
  4164                           
  4165                           ;Menu.c: 319:     } else {
  4166  000718  D001               	goto	l7057
  4167  00071A                     l607:
  4168                           
  4169                           ;Menu.c: 320:       menuDalt = 0;
  4170  00071A  6A31               	clrf	_menuDalt^0,c
  4171  00071C                     l7057:
  4172                           
  4173                           ;Menu.c: 322:     state = 25;
  4174  00071C  0E19               	movlw	25
  4175  00071E  6E2E               	movwf	menu@state^0,c
  4176  000720  0C19               	retlw	25
  4177  000722                     l7059:
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;Menu.c: 326:    if (LcLliure()) {
  4181  000722  EC7D  F000         	call	_LcLliure	;wreg free
  4182  000726  A0D8               	btfss	status,0,c
  4183  000728  0012               	return	
  4184                           
  4185                           ;Menu.c: 327:     if (menuDalt == UgetNumUsuaris()){
  4186  00072A  ECEA  F000         	call	_UgetNumUsuaris	;wreg free
  4187  00072E  1831               	xorwf	_menuDalt^0,w,c
  4188  000730  E101               	bnz	l7065
  4189                           
  4190                           ;Menu.c: 328:       menuDalt = 0;
  4191  000732  6A31               	clrf	_menuDalt^0,c
  4192  000734                     l7065:
  4193                           
  4194                           ;Menu.c: 330:     LcGotoXY(16,0);
  4195  000734  D993               	call	PL92	;call to abstracted procedure
  4196  000736  ECC2  F00E         	call	_LcGotoXY
  4197                           
  4198                           ;Menu.c: 331:     LcNewString(getArrayShowUsers(menuDalt));
  4199  00073A  5031               	movf	_menuDalt^0,w,c
  4200  00073C  ECA5  F00F         	call	_getArrayShowUsers
  4201  000740  D977               	call	PL32	;call to abstracted procedure
  4202  000742  EC77  F000         	call	_LcNewString	;wreg free
  4203                           
  4204                           ;Menu.c: 332:     state = 26;
  4205  000746  0E1A               	movlw	26
  4206  000748  6E2E               	movwf	menu@state^0,c
  4207  00074A  0C1A               	retlw	26
  4208  00074C                     l7069:
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;Menu.c: 336:    if (LcLliure()) {
  4212  00074C  EC7D  F000         	call	_LcLliure	;wreg free
  4213  000750  A0D8               	btfss	status,0,c
  4214  000752  0012               	return	
  4215                           
  4216                           ;Menu.c: 337:     if (menuDalt+1 < UgetNumUsuaris()){
  4217  000754  ECEA  F000         	call	_UgetNumUsuaris	;wreg free
  4218  000758  0100               	movlb	0	; () banked
  4219  00075A  6FD7               	movwf	??_menu& (0+255),b
  4220  00075C  6BD8               	clrf	(??_menu+1)& (0+255),b
  4221  00075E  5031               	movf	_menuDalt^0,w,c
  4222  000760  6FD9               	movwf	(??_menu+2)& (0+255),b
  4223  000762  6BDA               	clrf	(??_menu+3)& (0+255),b
  4224  000764  2BD9               	incf	(??_menu+2)& (0+255),f,b
  4225  000766  0E00               	movlw	0
  4226  000768  23DA               	addwfc	(??_menu+3)& (0+255),f,b
  4227  00076A  51D7               	movf	??_menu& (0+255),w,b
  4228  00076C  5DD9               	subwf	(??_menu+2)& (0+255),w,b
  4229  00076E  51DA               	movf	(??_menu+3)& (0+255),w,b
  4230  000770  0A80               	xorlw	128
  4231  000772  6FDB               	movwf	(??_menu+4)& (0+255),b
  4232  000774  51D8               	movf	(??_menu+1)& (0+255),w,b
  4233  000776  0A80               	xorlw	128
  4234  000778  59DB               	subwfb	(??_menu+4)& (0+255),w,b
  4235  00077A  E209               	bc	l7075
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;Menu.c: 338:       LcGotoXY(16,1);
  4239  00077C  D96C               	call	PL90	;call to abstracted procedure
  4240  00077E  ECC2  F00E         	call	_LcGotoXY
  4241                           
  4242                           ;Menu.c: 339:       LcNewString(getArrayShowUsers(menuDalt+1));
  4243  000782  2831               	incf	_menuDalt^0,w,c
  4244  000784  ECA5  F00F         	call	_getArrayShowUsers
  4245  000788  D953               	call	PL32	;call to abstracted procedure
  4246  00078A  EC77  F000         	call	_LcNewString	;wreg free
  4247  00078E                     l7075:
  4248                           
  4249                           ;Menu.c: 341:     state = 27;
  4250  00078E  0E1B               	movlw	27
  4251  000790  6E2E               	movwf	menu@state^0,c
  4252  000792  0C1B               	retlw	27
  4253  000794                     l7077:
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;Menu.c: 345:    if (TiGetTics(timerMenu) > 1205) {
  4257  000794  5032               	movf	_timerMenu^0,w,c
  4258  000796  EC19  F00F         	call	_TiGetTics
  4259  00079A  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  4260  00079C  D008               	goto	l7081
  4261  00079E  0EB6               	movlw	182
  4262  0007A0  5C64               	subwf	?_TiGetTics^0,w,c
  4263  0007A2  0E04               	movlw	4
  4264  0007A4  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4265  0007A6  E303               	bnc	l7081
  4266                           
  4267                           ;Menu.c: 346:     state = 29;
  4268  0007A8  0E1D               	movlw	29
  4269  0007AA  6E2E               	movwf	menu@state^0,c
  4270                           
  4271                           ;Menu.c: 347:    }
  4272  0007AC  0C1D               	retlw	29
  4273  0007AE                     l7081:
  4274  0007AE  0E0B               	movlw	11
  4275  0007B0  1852               	xorwf	_NovaTecla^0,w,c
  4276  0007B2  A4D8               	btfss	status,2,c
  4277  0007B4  0012               	return	
  4278  0007B6                     u7750:
  4279                           
  4280                           ;Menu.c: 349:     menuDalt = 0;
  4281  0007B6  6A31               	clrf	_menuDalt^0,c
  4282  0007B8  D667               	goto	u7210
  4283  0007BA                     l7087:
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;Menu.c: 354:    if (pos > 15) {
  4287  0007BA  0E0F               	movlw	15
  4288  0007BC  642F               	cpfsgt	_pos^0,c
  4289  0007BE  D005               	goto	l7093
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;Menu.c: 355:     LcClear();
  4293  0007C0  EC74  F00F         	call	_LcClear	;wreg free
  4294  0007C4                     l7091:
  4295                           
  4296                           ;Menu.c: 356:     state = 23;
  4297  0007C4  0E17               	movlw	23
  4298  0007C6  6E2E               	movwf	menu@state^0,c
  4299                           
  4300                           ;Menu.c: 357:    }
  4301  0007C8  0C17               	retlw	23
  4302  0007CA                     l7093:
  4303                           
  4304                           ; BSR set to: 0
  4305  0007CA  0E10               	movlw	16
  4306  0007CC  602F               	cpfslt	_pos^0,c
  4307  0007CE  0C10               	retlw	16
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;Menu.c: 359:     TiResetTics(timerMenu);
  4311  0007D0  5032               	movf	_timerMenu^0,w,c
  4312  0007D2  ECC1  F00F         	call	_TiResetTics
  4313                           
  4314                           ;Menu.c: 360:     LcScroll();
  4315  0007D6  ECD9  F000         	call	_LcScroll	;wreg free
  4316                           
  4317                           ;Menu.c: 361:     pos++;
  4318  0007DA  2A2F               	incf	_pos^0,f,c
  4319  0007DC                     l7101:
  4320                           
  4321                           ;Menu.c: 362:     state = 28;
  4322  0007DC  0E1C               	movlw	28
  4323  0007DE  6E2E               	movwf	menu@state^0,c
  4324  0007E0  0C1C               	retlw	28
  4325  0007E2                     l7103:
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;Menu.c: 366:    if (LcLliure()) {
  4329  0007E2  EC7D  F000         	call	_LcLliure	;wreg free
  4330  0007E6  A0D8               	btfss	status,0,c
  4331  0007E8  0012               	return	
  4332                           
  4333                           ;Menu.c: 367:     TiResetTics(timerMenu);
  4334  0007EA  5032               	movf	_timerMenu^0,w,c
  4335  0007EC  ECC1  F00F         	call	_TiResetTics
  4336                           
  4337                           ;Menu.c: 368:     pos = 0;
  4338  0007F0  6A2F               	clrf	_pos^0,c
  4339  0007F2  D7F4               	goto	l7101
  4340  0007F4                     l7111:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;Menu.c: 373:    if (UshowUsersCalculat()) {
  4344  0007F4  EC5F  F000         	call	_UshowUsersCalculat	;wreg free
  4345  0007F8  E2E5               	bc	l7091
  4346  0007FA  0012               	return	
  4347  0007FC                     l7115:
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;Menu.c: 378:    if (LcLliure()) {
  4351  0007FC  EC7D  F000         	call	_LcLliure	;wreg free
  4352  000800  A0D8               	btfss	status,0,c
  4353  000802  0012               	return	
  4354                           
  4355                           ;Menu.c: 379:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4356  000804  5031               	movf	_menuDalt^0,w,c
  4357  000806  EC1B  F000         	call	_UgetTop5
  4358  00080A  ECF5  F00F         	call	_UgetUserName
  4359  00080E  D918               	call	PL46	;call to abstracted procedure
  4360  000810  EC77  F000         	call	_LcNewString	;wreg free
  4361                           
  4362                           ;Menu.c: 380:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4363  000814  5031               	movf	_menuDalt^0,w,c
  4364  000816  EC1B  F000         	call	_UgetTop5
  4365  00081A  EC46  F000         	call	_UgetScore
  4366  00081E  EC71  F000         	call	_CToAConverteix
  4367                           
  4368                           ;Menu.c: 381:     state = 32;
  4369  000822  0E20               	movlw	32
  4370  000824  6E2E               	movwf	menu@state^0,c
  4371  000826  0C20               	retlw	32
  4372  000828                     l7121:
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;Menu.c: 385:    if (CToAHaAcabat() == 250 && LcLliure()) {
  4376  000828  ECFC  F000         	call	_CToAHaAcabat	;wreg free
  4377  00082C  0AFA               	xorlw	250
  4378  00082E  A4D8               	btfss	status,2,c
  4379  000830  0012               	return	
  4380  000832  EC7D  F000         	call	_LcLliure	;wreg free
  4381  000836  A0D8               	btfss	status,0,c
  4382  000838  0012               	return	
  4383                           
  4384                           ;Menu.c: 386:     LcPutChar(':');
  4385  00083A  0E3A               	movlw	58
  4386  00083C  EC06  F00E         	call	_LcPutChar
  4387                           
  4388                           ;Menu.c: 387:     LcGotoXY(0,1);
  4389  000840  D8FC               	call	PL36	;call to abstracted procedure
  4390  000842  ECC2  F00E         	call	_LcGotoXY
  4391                           
  4392                           ;Menu.c: 388:     LcNewString(CToAobtenir());
  4393  000846  ECFA  F000         	call	_CToAobtenir	;wreg free
  4394  00084A  D8FF               	call	PL50	;call to abstracted procedure
  4395  00084C  EC77  F000         	call	_LcNewString	;wreg free
  4396                           
  4397                           ;Menu.c: 389:     menuDalt++;
  4398  000850  2A31               	incf	_menuDalt^0,f,c
  4399                           
  4400                           ;Menu.c: 390:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  4401  000852  0E05               	movlw	5
  4402  000854  1831               	xorwf	_menuDalt^0,w,c
  4403  000856  E005               	bz	u7840
  4404  000858  5031               	movf	_menuDalt^0,w,c
  4405  00085A  EC1B  F000         	call	_UgetTop5
  4406  00085E  0AFF               	xorlw	255
  4407  000860  E101               	bnz	l7135
  4408  000862                     u7840:
  4409  000862  6A31               	clrf	_menuDalt^0,c
  4410  000864                     l7135:
  4411                           
  4412                           ;Menu.c: 391:     state = 34;
  4413  000864  0E22               	movlw	34
  4414  000866  6E2E               	movwf	menu@state^0,c
  4415  000868  0C22               	retlw	34
  4416  00086A                     l7137:
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;Menu.c: 395:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  4420  00086A  5031               	movf	_menuDalt^0,w,c
  4421  00086C  EC1B  F000         	call	_UgetTop5
  4422  000870  0AFF               	xorlw	255
  4423  000872  E104               	bnz	u7860
  4424  000874  0E05               	movlw	5
  4425  000876  1831               	xorwf	_menuDalt^0,w,c
  4426  000878  B4D8               	btfsc	status,2,c
  4427  00087A  0012               	return	
  4428  00087C                     u7860:
  4429  00087C  EC7D  F000         	call	_LcLliure	;wreg free
  4430  000880  A0D8               	btfss	status,0,c
  4431  000882  0012               	return	
  4432                           
  4433                           ;Menu.c: 396:     LcGotoXY(16,0);
  4434  000884  D8EB               	call	PL92	;call to abstracted procedure
  4435  000886  ECC2  F00E         	call	_LcGotoXY
  4436                           
  4437                           ;Menu.c: 397:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4438  00088A  5031               	movf	_menuDalt^0,w,c
  4439  00088C  EC1B  F000         	call	_UgetTop5
  4440  000890  ECF5  F00F         	call	_UgetUserName
  4441  000894  D8D5               	call	PL46	;call to abstracted procedure
  4442  000896  EC77  F000         	call	_LcNewString	;wreg free
  4443                           
  4444                           ;Menu.c: 398:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4445  00089A  5031               	movf	_menuDalt^0,w,c
  4446  00089C  EC1B  F000         	call	_UgetTop5
  4447  0008A0  EC46  F000         	call	_UgetScore
  4448  0008A4  EC71  F000         	call	_CToAConverteix
  4449                           
  4450                           ;Menu.c: 399:     state = 35;
  4451  0008A8  0E23               	movlw	35
  4452  0008AA  6E2E               	movwf	menu@state^0,c
  4453  0008AC  0C23               	retlw	35
  4454  0008AE                     l7147:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;Menu.c: 403:    if (LcLliure() && CToAHaAcabat() == 250) {
  4458  0008AE  EC7D  F000         	call	_LcLliure	;wreg free
  4459  0008B2  A0D8               	btfss	status,0,c
  4460  0008B4  0012               	return	
  4461  0008B6  ECFC  F000         	call	_CToAHaAcabat	;wreg free
  4462  0008BA  0AFA               	xorlw	250
  4463  0008BC  A4D8               	btfss	status,2,c
  4464  0008BE  0012               	return	
  4465                           
  4466                           ;Menu.c: 404:     LcPutChar(':');
  4467  0008C0  0E3A               	movlw	58
  4468  0008C2  EC06  F00E         	call	_LcPutChar
  4469                           
  4470                           ;Menu.c: 405:     LcGotoXY(16,1);
  4471  0008C6  D8C7               	call	PL90	;call to abstracted procedure
  4472  0008C8  ECC2  F00E         	call	_LcGotoXY
  4473                           
  4474                           ;Menu.c: 406:     LcNewString(CToAobtenir());
  4475  0008CC  ECFA  F000         	call	_CToAobtenir	;wreg free
  4476  0008D0  D8BC               	call	PL50	;call to abstracted procedure
  4477  0008D2  EC77  F000         	call	_LcNewString	;wreg free
  4478                           
  4479                           ;Menu.c: 407:     pos = 0;
  4480  0008D6  6A2F               	clrf	_pos^0,c
  4481                           
  4482                           ;Menu.c: 408:     TiResetTics(timerMenu);
  4483  0008D8  5032               	movf	_timerMenu^0,w,c
  4484  0008DA  ECC1  F00F         	call	_TiResetTics
  4485  0008DE                     l7159:
  4486                           
  4487                           ;Menu.c: 409:     state = 37;
  4488  0008DE  0E25               	movlw	37
  4489  0008E0  6E2E               	movwf	menu@state^0,c
  4490  0008E2  0C25               	retlw	37
  4491  0008E4                     l7161:
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;Menu.c: 413:    if (NovaTecla == 11 && LcLliure()) {
  4495  0008E4  0E0B               	movlw	11
  4496  0008E6  1852               	xorwf	_NovaTecla^0,w,c
  4497  0008E8  E104               	bnz	l7169
  4498                           
  4499                           ; BSR set to: 0
  4500  0008EA  EC7D  F000         	call	_LcLliure	;wreg free
  4501  0008EE  E301 D762          	bc	u7750
  4502  0008F2                     l7169:
  4503  0008F2  5032               	movf	_timerMenu^0,w,c
  4504  0008F4  EC19  F00F         	call	_TiGetTics
  4505  0008F8  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  4506  0008FA  0012               	return	
  4507  0008FC  0E91               	movlw	145
  4508  0008FE  5C64               	subwf	?_TiGetTics^0,w,c
  4509  000900  0E01               	movlw	1
  4510  000902  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4511  000904  A0D8               	btfss	status,0,c
  4512  000906  0012               	return	
  4513  000908  EC7D  F000         	call	_LcLliure	;wreg free
  4514  00090C  A0D8               	btfss	status,0,c
  4515  00090E  0012               	return	
  4516                           
  4517                           ;Menu.c: 418:     state = 38;
  4518  000910  0E26               	movlw	38
  4519  000912  6E2E               	movwf	menu@state^0,c
  4520  000914  0C26               	retlw	38
  4521  000916                     l7175:
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;Menu.c: 422:    if (pos < 16) {
  4525  000916  0E10               	movlw	16
  4526  000918  602F               	cpfslt	_pos^0,c
  4527  00091A  D007               	goto	l7185
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;Menu.c: 423:     TiResetTics(timerMenu);
  4531  00091C  5032               	movf	_timerMenu^0,w,c
  4532  00091E  ECC1  F00F         	call	_TiResetTics
  4533                           
  4534                           ;Menu.c: 424:     LcScroll();
  4535  000922  ECD9  F000         	call	_LcScroll	;wreg free
  4536                           
  4537                           ;Menu.c: 425:     pos++;
  4538  000926  2A2F               	incf	_pos^0,f,c
  4539  000928  D7DA               	goto	l7159
  4540  00092A                     l7185:
  4541                           
  4542                           ; BSR set to: 0
  4543  00092A  0E0F               	movlw	15
  4544  00092C  642F               	cpfsgt	_pos^0,c
  4545  00092E  0C0F               	retlw	15
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;Menu.c: 429:     LcClear();
  4549  000930  EC74  F00F         	call	_LcClear	;wreg free
  4550  000934  D62E               	goto	l6909
  4551  000936                     l7193:
  4552  000936  502E               	movf	menu@state^0,w,c
  4553  000938  0100               	movlb	0	; () banked
  4554  00093A  6FD7               	movwf	??_menu& (0+255),b
  4555  00093C  6BD8               	clrf	(??_menu+1)& (0+255),b
  4556                           
  4557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4558                           ; Switch size 1, requested type "space"
  4559                           ; Number of cases is 1, Range of values is 0 to 0
  4560                           ; switch strategies available:
  4561                           ; Name         Instructions Cycles
  4562                           ; simple_byte            4     3 (average)
  4563                           ;	Chosen strategy is simple_byte
  4564  00093E  51D8               	movf	(??_menu+1)& (0+255),w,b
  4565  000940  A4D8               	btfss	status,2,c
  4566  000942  0012               	return	
  4567                           
  4568                           ; BSR set to: 0
  4569                           ; Switch size 1, requested type "space"
  4570                           ; Number of cases is 37, Range of values is 0 to 38
  4571                           ; switch strategies available:
  4572                           ; Name         Instructions Cycles
  4573                           ; simple_byte          112    57 (average)
  4574                           ;	Chosen strategy is simple_byte
  4575  000944  51D7               	movf	??_menu& (0+255),w,b
  4576  000946  E101 D4D4          	bz	l6647
  4577  00094A  0A01               	xorlw	1	; case 1
  4578  00094C  E101 D4DB          	bz	l6653
  4579  000950  0A03               	xorlw	3	; case 2
  4580  000952  E101 D4E8          	bz	l6663
  4581  000956  0A01               	xorlw	1	; case 3
  4582  000958  E101 D4F1          	bz	l511
  4583  00095C  0A07               	xorlw	7	; case 4
  4584  00095E  E101 D4F9          	bz	l6681
  4585  000962  0A01               	xorlw	1	; case 5
  4586  000964  E101 D504          	bz	l6689
  4587  000968  0A03               	xorlw	3	; case 6
  4588  00096A  E101 D510          	bz	l6699
  4589  00096E  0A01               	xorlw	1	; case 7
  4590  000970  E101 D523          	bz	l6713
  4591  000974  0A0F               	xorlw	15	; case 8
  4592  000976  E101 D53D          	bz	l6741
  4593  00097A  0A01               	xorlw	1	; case 9
  4594  00097C  E101 D550          	bz	l6755
  4595  000980  0A03               	xorlw	3	; case 10
  4596  000982  E101 D569          	bz	l6785
  4597  000986  0A01               	xorlw	1	; case 11
  4598  000988  E101 D570          	bz	l538
  4599  00098C  0A07               	xorlw	7	; case 12
  4600  00098E  E101 D58A          	bz	l6809
  4601  000992  0A01               	xorlw	1	; case 13
  4602  000994  E101 D593          	bz	l6821
  4603  000998  0A03               	xorlw	3	; case 14
  4604  00099A  E101 D5FD          	bz	l6911
  4605  00099E  0A01               	xorlw	1	; case 15
  4606  0009A0  E101 D60A          	bz	l6919
  4607  0009A4  0A1F               	xorlw	31	; case 16
  4608  0009A6  E101 D613          	bz	l6923
  4609  0009AA  0A01               	xorlw	1	; case 17
  4610  0009AC  E101 D62A          	bz	l6943
  4611  0009B0  0A03               	xorlw	3	; case 18
  4612  0009B2  E101 D639          	bz	l6961
  4613  0009B6  0A01               	xorlw	1	; case 19
  4614  0009B8  E101 D645          	bz	l6977
  4615  0009BC  0A07               	xorlw	7	; case 20
  4616  0009BE  E101 D653          	bz	l6993
  4617  0009C2  0A01               	xorlw	1	; case 21
  4618  0009C4  E101 D659          	bz	l7005
  4619  0009C8  0A03               	xorlw	3	; case 22
  4620  0009CA  E101 D67A          	bz	l7035
  4621  0009CE  0A01               	xorlw	1	; case 23
  4622  0009D0  E101 D67E          	bz	l7041
  4623  0009D4  0A0F               	xorlw	15	; case 24
  4624  0009D6  E101 D68D          	bz	l7049
  4625  0009DA  0A01               	xorlw	1	; case 25
  4626  0009DC  E101 D6A1          	bz	l7059
  4627  0009E0  0A03               	xorlw	3	; case 26
  4628  0009E2  E101 D6B3          	bz	l7069
  4629  0009E6  0A01               	xorlw	1	; case 27
  4630  0009E8  E101 D6FB          	bz	l7103
  4631  0009EC  0A07               	xorlw	7	; case 28
  4632  0009EE  E101 D6D1          	bz	l7077
  4633  0009F2  0A01               	xorlw	1	; case 29
  4634  0009F4  E101 D6E1          	bz	l7087
  4635  0009F8  0A03               	xorlw	3	; case 30
  4636  0009FA  E101 D6FB          	bz	l7111
  4637  0009FE  0A01               	xorlw	1	; case 31
  4638  000A00  E101 D6FC          	bz	l7115
  4639  000A04  0A3F               	xorlw	63	; case 32
  4640  000A06  E101 D70F          	bz	l7121
  4641  000A0A  0A02               	xorlw	2	; case 34
  4642  000A0C  E101 D72D          	bz	l7137
  4643  000A10  0A01               	xorlw	1	; case 35
  4644  000A12  E101 D74C          	bz	l7147
  4645  000A16  0A06               	xorlw	6	; case 37
  4646  000A18  E101 D764          	bz	l7161
  4647  000A1C  0A03               	xorlw	3	; case 38
  4648  000A1E  E101 D77A          	bz	l7175
  4649  000A22  0012               	return		;funcret
  4650  000A24                     __end_of_menu:
  4651                           	callstack 0
  4652  000A24                     PL10:
  4653                           	callstack 24
  4654  000A24  6E67               	movwf	LcNewString@new_s^0,c
  4655  000A26  5067               	movf	LcNewString@new_s^0,w,c
  4656  000A28  A4D8               	btfss	status,2,c
  4657  000A2A  0E02               	movlw	high __smallconst
  4658  000A2C  6E68               	movwf	(LcNewString@new_s+1)^0,c
  4659  000A2E  0012               	return	
  4660  000A30                     __end_ofPL10:
  4661                           	callstack 0
  4662  000A30                     PL32:
  4663                           	callstack 24
  4664  000A30  C064  F067         	movff	?_getArrayShowUsers,LcNewString@new_s
  4665  000A34  C065  F068         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4666  000A38  0012               	return	
  4667  000A3A                     __end_ofPL32:
  4668                           	callstack 0
  4669  000A3A                     PL36:
  4670                           	callstack 24
  4671  000A3A  0E01               	movlw	1
  4672  000A3C  6E6C               	movwf	LcGotoXY@Row^0,c
  4673  000A3E  0C00               	retlw	0
  4674  000A40                     __end_ofPL36:
  4675                           	callstack 0
  4676  000A40                     PL46:
  4677                           	callstack 24
  4678  000A40  C064  F067         	movff	?_UgetUserName,LcNewString@new_s
  4679  000A44  C065  F068         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4680  000A48  0012               	return	
  4681  000A4A                     __end_ofPL46:
  4682                           	callstack 0
  4683  000A4A                     PL50:
  4684                           	callstack 24
  4685  000A4A  0100               	movlb	0	; () banked
  4686  000A4C  6FD7               	movwf	??_menu& (0+255),b
  4687  000A4E  C0D7  F067         	movff	??_menu,LcNewString@new_s
  4688  000A52  6A68               	clrf	(LcNewString@new_s+1)^0,c
  4689  000A54  0012               	return	
  4690  000A56                     __end_ofPL50:
  4691                           	callstack 0
  4692  000A56                     PL90:
  4693                           	callstack 24
  4694  000A56  0E01               	movlw	1
  4695  000A58  6E6C               	movwf	LcGotoXY@Row^0,c
  4696  000A5A  0C10               	retlw	16
  4697  000A5C                     __end_ofPL90:
  4698                           	callstack 0
  4699  000A5C                     PL92:
  4700                           	callstack 24
  4701  000A5C  0E00               	movlw	0
  4702  000A5E  6E6C               	movwf	LcGotoXY@Row^0,c
  4703  000A60  0C10               	retlw	16
  4704  000A62                     __end_ofPL92:
  4705                           	callstack 0
  4706  000A62                     PL94:
  4707                           	callstack 24
  4708  000A62  6852               	setf	_NovaTecla^0,c
  4709  000A64  6851               	setf	_novaLletra^0,c
  4710  000A66  6A33               	clrf	_tmp^0,c
  4711  000A68  0012               	return	
  4712  000A6A                     __end_ofPL94:
  4713                           	callstack 0
  4714  000A6A                     PL96:
  4715                           	callstack 24
  4716  000A6A  2A33               	incf	_tmp^0,f,c
  4717  000A6C  6852               	setf	_NovaTecla^0,c
  4718  000A6E  6851               	setf	_novaLletra^0,c
  4719  000A70  0012               	return	
  4720  000A72                     __end_ofPL96:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function _miraPassword *****************
  4724 ;; Defined at:
  4725 ;;		line 295 in file "Usuaris.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;		None               void
  4732 ;; Registers used:
  4733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1
  4739 ;;      Params:         0       0       0
  4740 ;;      Locals:         0       0       0
  4741 ;;      Temps:          0       0       0
  4742 ;;      Totals:         0       0       0
  4743 ;;Total ram usage:        0 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 3
  4746 ;; This function calls:
  4747 ;;		_compareStrings
  4748 ;; This function is called by:
  4749 ;;		_menu
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text20
  4754  001E7C                     __ptext20:
  4755                           	callstack 0
  4756  001E7C                     _miraPassword:
  4757                           	callstack 26
  4758                           
  4759                           ;Usuaris.c: 296:     return !compareStrings(tmpPassword, usuaris[usuariLoguejat].passwor
      +                          d);
  4760                           
  4761                           ;incstack = 0
  4762  001E7C  0EAA               	movlw	low _tmpPassword
  4763  001E7E  6E64               	movwf	compareStrings@a^0,c
  4764  001E80  504F               	movf	_usuariLoguejat^0,w,c
  4765  001E82  0D12               	mullw	18
  4766  001E84  0E09               	movlw	low (_usuaris+9)
  4767  001E86  24F3               	addwf	243,w,c
  4768  001E88  6E65               	movwf	compareStrings@b^0,c
  4769  001E8A  0E01               	movlw	high (_usuaris+9)
  4770  001E8C  20F4               	addwfc	prodh,w,c
  4771  001E8E  6E66               	movwf	(compareStrings@b+1)^0,c
  4772  001E90  EC4E  F00E         	call	_compareStrings	;wreg free
  4773  001E94  0900               	iorlw	0
  4774  001E96  E002               	bz	l4559
  4775  001E98  90D8               	bcf	status,0,c
  4776  001E9A  0012               	return	
  4777  001E9C                     l4559:
  4778  001E9C  80D8               	bsf	status,0,c
  4779  001E9E  0012               	return		;funcret
  4780  001EA0                     __end_of_miraPassword:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function _getArrayShowUsers *****************
  4784 ;; Defined at:
  4785 ;;		line 61 in file "Usuaris.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  quin            1    wreg     unsigned char 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  quin            1    7[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  2    5[COMRAM] PTR unsigned char 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1
  4799 ;;      Params:         2       0       0
  4800 ;;      Locals:         1       0       0
  4801 ;;      Temps:          0       0       0
  4802 ;;      Totals:         3       0       0
  4803 ;;Total ram usage:        3 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 2
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_menu
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text21
  4814  001F4A                     __ptext21:
  4815                           	callstack 0
  4816  001F4A                     _getArrayShowUsers:
  4817                           	callstack 27
  4818                           
  4819                           ;incstack = 0
  4820                           ;getArrayShowUsers@quin stored from wreg
  4821  001F4A  6E66               	movwf	getArrayShowUsers@quin^0,c
  4822                           
  4823                           ;Usuaris.c: 62:     return usuaris[arrayShowUsers[quin]].username;
  4824  001F4C  5066               	movf	getArrayShowUsers@quin^0,w,c
  4825  001F4E  0FA2               	addlw	low _arrayShowUsers
  4826  001F50  6ED9               	movwf	fsr2l,c
  4827  001F52  6ADA               	clrf	fsr2h,c
  4828  001F54  50DF               	movf	indf2,w,c
  4829  001F56  0D12               	mullw	18
  4830  001F58  0E00               	movlw	low _usuaris
  4831  001F5A  24F3               	addwf	243,w,c
  4832  001F5C  6E64               	movwf	?_getArrayShowUsers^0,c
  4833  001F5E  0E01               	movlw	high _usuaris
  4834  001F60  20F4               	addwfc	prodh,w,c
  4835  001F62  6E65               	movwf	(?_getArrayShowUsers+1)^0,c
  4836  001F64  0012               	return		;funcret
  4837  001F66                     __end_of_getArrayShowUsers:
  4838                           	callstack 0
  4839                           
  4840 ;; *************** function _checkHoraAcabat *****************
  4841 ;; Defined at:
  4842 ;;		line 42 in file "Hora.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;		None
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;		None               void
  4849 ;; Registers used:
  4850 ;;		status,0
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1
  4856 ;;      Params:         0       0       0
  4857 ;;      Locals:         0       0       0
  4858 ;;      Temps:          0       0       0
  4859 ;;      Totals:         0       0       0
  4860 ;;Total ram usage:        0 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; Hardware stack levels required when called: 2
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_menu
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text22
  4871  0000B2                     __ptext22:
  4872                           	callstack 0
  4873  0000B2                     _checkHoraAcabat:
  4874                           	callstack 27
  4875                           
  4876                           ;Hora.c: 43:     return tempsAcabat;
  4877                           
  4878                           ;incstack = 0
  4879  0000B2  B875               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4880  0000B4  D002               	goto	l4597
  4881  0000B6  90D8               	bcf	status,0,c
  4882  0000B8  0012               	return	
  4883  0000BA                     l4597:
  4884  0000BA  80D8               	bsf	status,0,c
  4885  0000BC  0012               	return		;funcret
  4886  0000BE                     __end_of_checkHoraAcabat:
  4887                           	callstack 0
  4888                           
  4889 ;; *************** function _calculateShowUsers *****************
  4890 ;; Defined at:
  4891 ;;		line 137 in file "Usuaris.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		None
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1
  4905 ;;      Params:         0       0       0
  4906 ;;      Locals:         0       0       0
  4907 ;;      Temps:          0       0       0
  4908 ;;      Totals:         0       0       0
  4909 ;;Total ram usage:        0 bytes
  4910 ;; Hardware stack levels used: 1
  4911 ;; Hardware stack levels required when called: 2
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_menu
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text23
  4920  0001D0                     __ptext23:
  4921                           	callstack 0
  4922  0001D0                     _calculateShowUsers:
  4923                           	callstack 27
  4924                           
  4925                           ;Usuaris.c: 138:     do_showUsers = 1;
  4926                           
  4927                           ;incstack = 0
  4928  0001D0  8A76               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4929  0001D2  0012               	return		;funcret
  4930  0001D4                     __end_of_calculateShowUsers:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function _UshowUsersCalculat *****************
  4934 ;; Defined at:
  4935 ;;		line 140 in file "Usuaris.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;		None               void
  4942 ;; Registers used:
  4943 ;;		status,0
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1
  4949 ;;      Params:         0       0       0
  4950 ;;      Locals:         0       0       0
  4951 ;;      Temps:          0       0       0
  4952 ;;      Totals:         0       0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used: 1
  4955 ;; Hardware stack levels required when called: 2
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_menu
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text24
  4964  0000BE                     __ptext24:
  4965                           	callstack 0
  4966  0000BE                     _UshowUsersCalculat:
  4967                           	callstack 27
  4968                           
  4969                           ;Usuaris.c: 141:     return !do_showUsers;
  4970                           
  4971                           ;incstack = 0
  4972  0000BE  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4973  0000C0  D002               	goto	l4623
  4974  0000C2  90D8               	bcf	status,0,c
  4975  0000C4  0012               	return	
  4976  0000C6                     l4623:
  4977  0000C6  80D8               	bsf	status,0,c
  4978  0000C8  0012               	return		;funcret
  4979  0000CA                     __end_of_UshowUsersCalculat:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function _UgetUserName *****************
  4983 ;; Defined at:
  4984 ;;		line 57 in file "Usuaris.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  quin            1    wreg     unsigned char 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  quin            1    7[COMRAM] unsigned char 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  2    5[COMRAM] PTR unsigned char 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0, prodl, prodh
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1
  4998 ;;      Params:         2       0       0
  4999 ;;      Locals:         1       0       0
  5000 ;;      Temps:          0       0       0
  5001 ;;      Totals:         3       0       0
  5002 ;;Total ram usage:        3 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 2
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_menu
  5009 ;;		_motorSIO
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text25
  5014  001FEA                     __ptext25:
  5015                           	callstack 0
  5016  001FEA                     _UgetUserName:
  5017                           	callstack 27
  5018                           
  5019                           ;incstack = 0
  5020                           ;UgetUserName@quin stored from wreg
  5021  001FEA  6E66               	movwf	UgetUserName@quin^0,c
  5022                           
  5023                           ;Usuaris.c: 58:     return usuaris[quin].username;
  5024  001FEC  5066               	movf	UgetUserName@quin^0,w,c
  5025  001FEE  0D12               	mullw	18
  5026  001FF0  0E00               	movlw	low _usuaris
  5027  001FF2  24F3               	addwf	243,w,c
  5028  001FF4  6E64               	movwf	?_UgetUserName^0,c
  5029  001FF6  0E01               	movlw	high _usuaris
  5030  001FF8  20F4               	addwfc	prodh,w,c
  5031  001FFA  6E65               	movwf	(?_UgetUserName+1)^0,c
  5032  001FFC  0012               	return		;funcret
  5033  001FFE                     __end_of_UgetUserName:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function _UgetTop5 *****************
  5037 ;; Defined at:
  5038 ;;		line 287 in file "Usuaris.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  quin            1    wreg     unsigned char 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  quin            1    5[COMRAM] unsigned char 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      char 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1
  5052 ;;      Params:         0       0       0
  5053 ;;      Locals:         1       0       0
  5054 ;;      Temps:          0       0       0
  5055 ;;      Totals:         1       0       0
  5056 ;;Total ram usage:        1 bytes
  5057 ;; Hardware stack levels used: 1
  5058 ;; Hardware stack levels required when called: 2
  5059 ;; This function calls:
  5060 ;;		Nothing
  5061 ;; This function is called by:
  5062 ;;		_menu
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text26
  5067  000036                     __ptext26:
  5068                           	callstack 0
  5069  000036                     _UgetTop5:
  5070                           	callstack 27
  5071                           
  5072                           ;incstack = 0
  5073                           ;UgetTop5@quin stored from wreg
  5074  000036  6E64               	movwf	UgetTop5@quin^0,c
  5075                           
  5076                           ;Usuaris.c: 288:     return puntuacions[quin].indexStruct;
  5077  000038  5064               	movf	UgetTop5@quin^0,w,c
  5078  00003A  0D02               	mullw	2
  5079  00003C  50F3               	movf	243,w,c
  5080  00003E  0F98               	addlw	low _puntuacions
  5081  000040  D000               	goto	PL80	;call to abstracted procedure
  5082  000042                     __end_of_UgetTop5:
  5083                           	callstack 0
  5084  000042                     PL80:
  5085                           	callstack 27
  5086  000042  6ED9               	movwf	fsr2l,c
  5087  000044  6ADA               	clrf	fsr2h,c
  5088  000046  50DF               	movf	indf2,w,c
  5089  000048  0012               	return		;funcret
  5090  00004A                     __end_ofPL80:
  5091                           	callstack 0
  5092                           
  5093 ;; *************** function _UgetScore *****************
  5094 ;; Defined at:
  5095 ;;		line 284 in file "Usuaris.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  quin            1    wreg     unsigned char 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  quin            1    5[COMRAM] unsigned char 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      unsigned char 
  5102 ;; Registers used:
  5103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1
  5109 ;;      Params:         0       0       0
  5110 ;;      Locals:         1       0       0
  5111 ;;      Temps:          0       0       0
  5112 ;;      Totals:         1       0       0
  5113 ;;Total ram usage:        1 bytes
  5114 ;; Hardware stack levels used: 1
  5115 ;; Hardware stack levels required when called: 2
  5116 ;; This function calls:
  5117 ;;		Nothing
  5118 ;; This function is called by:
  5119 ;;		_menu
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text27
  5124  00008C                     __ptext27:
  5125                           	callstack 0
  5126  00008C                     _UgetScore:
  5127                           	callstack 27
  5128                           
  5129                           ;incstack = 0
  5130                           ;UgetScore@quin stored from wreg
  5131  00008C  6E64               	movwf	UgetScore@quin^0,c
  5132                           
  5133                           ;Usuaris.c: 285:     return puntuacions[quin].score;
  5134  00008E  5064               	movf	UgetScore@quin^0,w,c
  5135  000090  0D02               	mullw	2
  5136  000092  50F3               	movf	243,w,c
  5137  000094  0F99               	addlw	low (_puntuacions+1)
  5138  000096  EF21  F000         	goto	PL80	;call to abstracted procedure
  5139  00009A                     __end_of_UgetScore:
  5140                           	callstack 0
  5141                           
  5142 ;; *************** function _UgetNumUsuaris *****************
  5143 ;; Defined at:
  5144 ;;		line 33 in file "Usuaris.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;		None
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;		None
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  1    wreg      unsigned char 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1
  5158 ;;      Params:         0       0       0
  5159 ;;      Locals:         0       0       0
  5160 ;;      Temps:          0       0       0
  5161 ;;      Totals:         0       0       0
  5162 ;;Total ram usage:        0 bytes
  5163 ;; Hardware stack levels used: 1
  5164 ;; Hardware stack levels required when called: 2
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_menu
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text28
  5173  0001D4                     __ptext28:
  5174                           	callstack 0
  5175  0001D4                     _UgetNumUsuaris:
  5176                           	callstack 27
  5177                           
  5178                           ;Usuaris.c: 34:     return numUsuaris;
  5179                           
  5180                           ;incstack = 0
  5181  0001D4  502D               	movf	_numUsuaris^0,w,c
  5182  0001D6  0012               	return		;funcret
  5183  0001D8                     __end_of_UgetNumUsuaris:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function _UenviaPas *****************
  5187 ;; Defined at:
  5188 ;;		line 49 in file "Usuaris.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  c               1    wreg     unsigned char 
  5191 ;;  pos             1    5[COMRAM] unsigned char 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  c               1    6[COMRAM] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1
  5203 ;;      Params:         1       0       0
  5204 ;;      Locals:         1       0       0
  5205 ;;      Temps:          0       0       0
  5206 ;;      Totals:         2       0       0
  5207 ;;Total ram usage:        2 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; Hardware stack levels required when called: 2
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_menu
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text29
  5218  00005C                     __ptext29:
  5219                           	callstack 0
  5220  00005C                     _UenviaPas:
  5221                           	callstack 27
  5222                           
  5223                           ;incstack = 0
  5224                           ;UenviaPas@c stored from wreg
  5225  00005C  6E65               	movwf	UenviaPas@c^0,c
  5226                           
  5227                           ;Usuaris.c: 50:     tmpPassword[pos] = c;
  5228  00005E  5064               	movf	UenviaPas@pos^0,w,c
  5229  000060  0FAA               	addlw	low _tmpPassword
  5230  000062  6ED9               	movwf	fsr2l,c
  5231  000064  6ADA               	clrf	fsr2h,c
  5232  000066  C065  FFDF         	movff	UenviaPas@c,indf2
  5233  00006A  0012               	return		;funcret
  5234  00006C                     __end_of_UenviaPas:
  5235                           	callstack 0
  5236                           
  5237 ;; *************** function _UenviaChar *****************
  5238 ;; Defined at:
  5239 ;;		line 46 in file "Usuaris.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  c               1    wreg     unsigned char 
  5242 ;;  pos             1    5[COMRAM] unsigned char 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  c               1    6[COMRAM] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1
  5254 ;;      Params:         1       0       0
  5255 ;;      Locals:         1       0       0
  5256 ;;      Temps:          0       0       0
  5257 ;;      Totals:         2       0       0
  5258 ;;Total ram usage:        2 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 2
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_menu
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text30
  5269  00006C                     __ptext30:
  5270                           	callstack 0
  5271  00006C                     _UenviaChar:
  5272                           	callstack 27
  5273                           
  5274                           ;incstack = 0
  5275                           ;UenviaChar@c stored from wreg
  5276  00006C  6E65               	movwf	UenviaChar@c^0,c
  5277                           
  5278                           ;Usuaris.c: 47:     tmpUsername[pos] = c;
  5279  00006E  5064               	movf	UenviaChar@pos^0,w,c
  5280  000070  0FB3               	addlw	low _tmpUsername
  5281  000072  6ED9               	movwf	fsr2l,c
  5282  000074  6ADA               	clrf	fsr2h,c
  5283  000076  C065  FFDF         	movff	UenviaChar@c,indf2
  5284  00007A  0012               	return		;funcret
  5285  00007C                     __end_of_UenviaChar:
  5286                           	callstack 0
  5287                           
  5288 ;; *************** function _UcheckExistsNotFinished *****************
  5289 ;; Defined at:
  5290 ;;		line 40 in file "Usuaris.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;		None
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;		None
  5295 ;; Return value:  Size  Location     Type
  5296 ;;		None               void
  5297 ;; Registers used:
  5298 ;;		status,0
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1
  5304 ;;      Params:         0       0       0
  5305 ;;      Locals:         0       0       0
  5306 ;;      Temps:          0       0       0
  5307 ;;      Totals:         0       0       0
  5308 ;;Total ram usage:        0 bytes
  5309 ;; Hardware stack levels used: 1
  5310 ;; Hardware stack levels required when called: 2
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_menu
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text31
  5319  0000CA                     __ptext31:
  5320                           	callstack 0
  5321  0000CA                     _UcheckExistsNotFinished:
  5322                           	callstack 27
  5323                           
  5324                           ;Usuaris.c: 41:     return do_check_exists;
  5325                           
  5326                           ;incstack = 0
  5327  0000CA  BE76               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5328  0000CC  D002               	goto	l4545
  5329  0000CE  90D8               	bcf	status,0,c
  5330  0000D0  0012               	return	
  5331  0000D2                     l4545:
  5332  0000D2  80D8               	bsf	status,0,c
  5333  0000D4  0012               	return		;funcret
  5334  0000D6                     __end_of_UcheckExistsNotFinished:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _UcheckExistsGetError *****************
  5338 ;; Defined at:
  5339 ;;		line 43 in file "Usuaris.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      char 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1
  5353 ;;      Params:         0       0       0
  5354 ;;      Locals:         0       0       0
  5355 ;;      Temps:          0       0       0
  5356 ;;      Totals:         0       0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used: 1
  5359 ;; Hardware stack levels required when called: 2
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_menu
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text32
  5368  0001D8                     __ptext32:
  5369                           	callstack 0
  5370  0001D8                     _UcheckExistsGetError:
  5371                           	callstack 27
  5372                           
  5373                           ;Usuaris.c: 44:     return usuariLoguejat;
  5374                           
  5375                           ;incstack = 0
  5376  0001D8  504F               	movf	_usuariLoguejat^0,w,c
  5377  0001DA  0012               	return		;funcret
  5378  0001DC                     __end_of_UcheckExistsGetError:
  5379                           	callstack 0
  5380                           
  5381 ;; *************** function _UcheckExists *****************
  5382 ;; Defined at:
  5383 ;;		line 37 in file "Usuaris.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;		None
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;		None
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      void 
  5390 ;; Registers used:
  5391 ;;		None
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1
  5397 ;;      Params:         0       0       0
  5398 ;;      Locals:         0       0       0
  5399 ;;      Temps:          0       0       0
  5400 ;;      Totals:         0       0       0
  5401 ;;Total ram usage:        0 bytes
  5402 ;; Hardware stack levels used: 1
  5403 ;; Hardware stack levels required when called: 2
  5404 ;; This function calls:
  5405 ;;		Nothing
  5406 ;; This function is called by:
  5407 ;;		_menu
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text33
  5412  0001DC                     __ptext33:
  5413                           	callstack 0
  5414  0001DC                     _UcheckExists:
  5415                           	callstack 27
  5416                           
  5417                           ;Usuaris.c: 38:     do_check_exists = 1;
  5418                           
  5419                           ;incstack = 0
  5420  0001DC  8E76               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5421  0001DE  0012               	return		;funcret
  5422  0001E0                     __end_of_UcheckExists:
  5423                           	callstack 0
  5424                           
  5425 ;; *************** function _URegister *****************
  5426 ;; Defined at:
  5427 ;;		line 53 in file "Usuaris.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;		None
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  1    wreg      void 
  5434 ;; Registers used:
  5435 ;;		None
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1
  5441 ;;      Params:         0       0       0
  5442 ;;      Locals:         0       0       0
  5443 ;;      Temps:          0       0       0
  5444 ;;      Totals:         0       0       0
  5445 ;;Total ram usage:        0 bytes
  5446 ;; Hardware stack levels used: 1
  5447 ;; Hardware stack levels required when called: 2
  5448 ;; This function calls:
  5449 ;;		Nothing
  5450 ;; This function is called by:
  5451 ;;		_menu
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text34
  5456  0001E0                     __ptext34:
  5457                           	callstack 0
  5458  0001E0                     _URegister:
  5459                           	callstack 27
  5460                           
  5461                           ;Usuaris.c: 54:     do_register = 1;
  5462                           
  5463                           ;incstack = 0
  5464  0001E0  8C76               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5465  0001E2  0012               	return		;funcret
  5466  0001E4                     __end_of_URegister:
  5467                           	callstack 0
  5468                           
  5469 ;; *************** function _SiFerMenu *****************
  5470 ;; Defined at:
  5471 ;;		line 19 in file "GestioLCD.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		None
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1
  5485 ;;      Params:         0       0       0
  5486 ;;      Locals:         0       0       0
  5487 ;;      Temps:          0       0       0
  5488 ;;      Totals:         0       0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used: 1
  5491 ;; Hardware stack levels required when called: 2
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_menu
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text35
  5500  0001E4                     __ptext35:
  5501                           	callstack 0
  5502  0001E4                     _SiFerMenu:
  5503                           	callstack 27
  5504                           
  5505                           ;GestioLCD.c: 20:     ferMenu = 1;
  5506                           
  5507                           ;incstack = 0
  5508  0001E4  8476               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5509  0001E6  0012               	return		;funcret
  5510  0001E8                     __end_of_SiFerMenu:
  5511                           	callstack 0
  5512                           
  5513 ;; *************** function _SMSon *****************
  5514 ;; Defined at:
  5515 ;;		line 128 in file "Ssms.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		None
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMRAM   BANK0   BANK1
  5529 ;;      Params:         0       0       0
  5530 ;;      Locals:         0       0       0
  5531 ;;      Temps:          0       0       0
  5532 ;;      Totals:         0       0       0
  5533 ;;Total ram usage:        0 bytes
  5534 ;; Hardware stack levels used: 1
  5535 ;; Hardware stack levels required when called: 2
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_menu
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text36
  5544  0001A6                     __ptext36:
  5545                           	callstack 0
  5546  0001A6                     _SMSon:
  5547                           	callstack 27
  5548                           
  5549                           ;Ssms.c: 129:     setSMSon = 1;
  5550                           
  5551                           ;incstack = 0
  5552  0001A6  8277               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5553                           
  5554                           ;Ssms.c: 130:     novaTecla = -1;
  5555  0001A8  6854               	setf	_novaTecla^0,c
  5556  0001AA  0012               	return		;funcret
  5557  0001AC                     __end_of_SMSon:
  5558                           	callstack 0
  5559                           
  5560 ;; *************** function _SMSoff *****************
  5561 ;; Defined at:
  5562 ;;		line 133 in file "Ssms.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;		None
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;		None
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		None
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1
  5576 ;;      Params:         0       0       0
  5577 ;;      Locals:         0       0       0
  5578 ;;      Temps:          0       0       0
  5579 ;;      Totals:         0       0       0
  5580 ;;Total ram usage:        0 bytes
  5581 ;; Hardware stack levels used: 1
  5582 ;; Hardware stack levels required when called: 2
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_menu
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text37
  5591  0001AC                     __ptext37:
  5592                           	callstack 0
  5593  0001AC                     _SMSoff:
  5594                           	callstack 27
  5595                           
  5596                           ;Ssms.c: 134:     setSMSon = 0;
  5597                           
  5598                           ;incstack = 0
  5599  0001AC  9277               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5600                           
  5601                           ;Ssms.c: 135:     novaTecla = -1;
  5602  0001AE  6854               	setf	_novaTecla^0,c
  5603  0001B0  0012               	return		;funcret
  5604  0001B2                     __end_of_SMSoff:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5608 ;; Defined at:
  5609 ;;		line 43 in file "SIO.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      char 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1
  5623 ;;      Params:         0       0       0
  5624 ;;      Locals:         0       0       0
  5625 ;;      Temps:          0       0       0
  5626 ;;      Totals:         0       0       0
  5627 ;;Total ram usage:        0 bytes
  5628 ;; Hardware stack levels used: 1
  5629 ;; Hardware stack levels required when called: 2
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_menu
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text38
  5638  0001E8                     __ptext38:
  5639                           	callstack 0
  5640  0001E8                     _SIOHaAcabatPuntuacions:
  5641                           	callstack 27
  5642                           
  5643                           ;SIO.c: 44:     return usuariActualSIO;
  5644                           
  5645                           ;incstack = 0
  5646  0001E8  504A               	movf	_usuariActualSIO^0,w,c
  5647  0001EA  0012               	return		;funcret
  5648  0001EC                     __end_of_SIOHaAcabatPuntuacions:
  5649                           	callstack 0
  5650                           
  5651 ;; *************** function _NoFerMenu *****************
  5652 ;; Defined at:
  5653 ;;		line 22 in file "GestioLCD.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;		None
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		None
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1
  5667 ;;      Params:         0       0       0
  5668 ;;      Locals:         0       0       0
  5669 ;;      Temps:          0       0       0
  5670 ;;      Totals:         0       0       0
  5671 ;;Total ram usage:        0 bytes
  5672 ;; Hardware stack levels used: 1
  5673 ;; Hardware stack levels required when called: 2
  5674 ;; This function calls:
  5675 ;;		Nothing
  5676 ;; This function is called by:
  5677 ;;		_menu
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text39
  5682  0001EC                     __ptext39:
  5683                           	callstack 0
  5684  0001EC                     _NoFerMenu:
  5685                           	callstack 27
  5686                           
  5687                           ;GestioLCD.c: 23:     ferMenu = 0;
  5688                           
  5689                           ;incstack = 0
  5690  0001EC  9476               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5691  0001EE  0012               	return		;funcret
  5692  0001F0                     __end_of_NoFerMenu:
  5693                           	callstack 0
  5694                           
  5695 ;; *************** function _LcScroll *****************
  5696 ;; Defined at:
  5697 ;;		line 37 in file "LcTLCD.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;		None
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;		None
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      void 
  5704 ;; Registers used:
  5705 ;;		wreg, status,2, status,0, cstack
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMRAM   BANK0   BANK1
  5711 ;;      Params:         0       0       0
  5712 ;;      Locals:         0       0       0
  5713 ;;      Temps:          0       0       0
  5714 ;;      Totals:         0       0       0
  5715 ;;Total ram usage:        0 bytes
  5716 ;; Hardware stack levels used: 1
  5717 ;; Hardware stack levels required when called: 4
  5718 ;; This function calls:
  5719 ;;		_CantaIR
  5720 ;; This function is called by:
  5721 ;;		_menu
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text40
  5726  0001B2                     __ptext40:
  5727                           	callstack 0
  5728  0001B2                     _LcScroll:
  5729                           	callstack 25
  5730                           
  5731                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5732                           
  5733                           ;incstack = 0
  5734  0001B2  0E18               	movlw	24
  5735  0001B4  EFB3  F00F         	goto	_CantaIR
  5736  0001B8                     __end_of_LcScroll:
  5737                           	callstack 0
  5738                           
  5739 ;; *************** function _JnovaTecla *****************
  5740 ;; Defined at:
  5741 ;;		line 16 in file "Joc.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  tecla           1    wreg     char 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  tecla           1    5[COMRAM] char 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      void 
  5748 ;; Registers used:
  5749 ;;		wreg
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1
  5755 ;;      Params:         0       0       0
  5756 ;;      Locals:         1       0       0
  5757 ;;      Temps:          0       0       0
  5758 ;;      Totals:         1       0       0
  5759 ;;Total ram usage:        1 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; Hardware stack levels required when called: 2
  5762 ;; This function calls:
  5763 ;;		Nothing
  5764 ;; This function is called by:
  5765 ;;		_menu
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           	psect	text41
  5770  000128                     __ptext41:
  5771                           	callstack 0
  5772  000128                     _JnovaTecla:
  5773                           	callstack 27
  5774                           
  5775                           ;incstack = 0
  5776                           ;JnovaTecla@tecla stored from wreg
  5777  000128  6E64               	movwf	JnovaTecla@tecla^0,c
  5778                           
  5779                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5780  00012A  C064  F04B         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5781  00012E  0012               	return		;funcret
  5782  000130                     __end_of_JnovaTecla:
  5783                           	callstack 0
  5784                           
  5785 ;; *************** function _JnovaDireccio *****************
  5786 ;; Defined at:
  5787 ;;		line 19 in file "Joc.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  dir             1    wreg     unsigned char 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;  dir             1    5[COMRAM] unsigned char 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      void 
  5794 ;; Registers used:
  5795 ;;		wreg
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1
  5801 ;;      Params:         0       0       0
  5802 ;;      Locals:         1       0       0
  5803 ;;      Temps:          0       0       0
  5804 ;;      Totals:         1       0       0
  5805 ;;Total ram usage:        1 bytes
  5806 ;; Hardware stack levels used: 1
  5807 ;; Hardware stack levels required when called: 2
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_menu
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text42
  5816  000130                     __ptext42:
  5817                           	callstack 0
  5818  000130                     _JnovaDireccio:
  5819                           	callstack 27
  5820                           
  5821                           ;incstack = 0
  5822                           ;JnovaDireccio@dir stored from wreg
  5823  000130  6E64               	movwf	JnovaDireccio@dir^0,c
  5824                           
  5825                           ;Joc.c: 20:     direccioJoc = dir;
  5826  000132  C064  F013         	movff	JnovaDireccio@dir,_direccioJoc
  5827  000136  0012               	return		;funcret
  5828  000138                     __end_of_JnovaDireccio:
  5829                           	callstack 0
  5830                           
  5831 ;; *************** function _JendGame *****************
  5832 ;; Defined at:
  5833 ;;		line 23 in file "Joc.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;		None
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;		None
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1    wreg      void 
  5840 ;; Registers used:
  5841 ;;		None
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1
  5847 ;;      Params:         0       0       0
  5848 ;;      Locals:         0       0       0
  5849 ;;      Temps:          0       0       0
  5850 ;;      Totals:         0       0       0
  5851 ;;Total ram usage:        0 bytes
  5852 ;; Hardware stack levels used: 1
  5853 ;; Hardware stack levels required when called: 2
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_menu
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text43
  5862  0001F0                     __ptext43:
  5863                           	callstack 0
  5864  0001F0                     _JendGame:
  5865                           	callstack 27
  5866                           
  5867                           ;Joc.c: 24:     jugantJoc = 0;
  5868                           
  5869                           ;incstack = 0
  5870  0001F0  9675               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5871  0001F2  0012               	return		;funcret
  5872  0001F4                     __end_of_JendGame:
  5873                           	callstack 0
  5874                           
  5875 ;; *************** function _JJuguem *****************
  5876 ;; Defined at:
  5877 ;;		line 13 in file "Joc.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  usuari          1    wreg     unsigned char 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  usuari          1    5[COMRAM] unsigned char 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1
  5891 ;;      Params:         0       0       0
  5892 ;;      Locals:         1       0       0
  5893 ;;      Temps:          0       0       0
  5894 ;;      Totals:         1       0       0
  5895 ;;Total ram usage:        1 bytes
  5896 ;; Hardware stack levels used: 1
  5897 ;; Hardware stack levels required when called: 2
  5898 ;; This function calls:
  5899 ;;		Nothing
  5900 ;; This function is called by:
  5901 ;;		_menu
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text44
  5906  000138                     __ptext44:
  5907                           	callstack 0
  5908  000138                     _JJuguem:
  5909                           	callstack 27
  5910                           
  5911                           ;incstack = 0
  5912                           ;JJuguem@usuari stored from wreg
  5913  000138  6E64               	movwf	JJuguem@usuari^0,c
  5914                           
  5915                           ;Joc.c: 14:     usuariJoc = usuari;
  5916  00013A  C064  F04C         	movff	JJuguem@usuari,_usuariJoc
  5917  00013E  0012               	return		;funcret
  5918  000140                     __end_of_JJuguem:
  5919                           	callstack 0
  5920                           
  5921 ;; *************** function _HActualitzaHora *****************
  5922 ;; Defined at:
  5923 ;;		line 16 in file "Hora.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5926 ;;		 -> horaTmp(4), 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;		None
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  1    wreg      void 
  5931 ;; Registers used:
  5932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1
  5938 ;;      Params:         1       0       0
  5939 ;;      Locals:         0       0       0
  5940 ;;      Temps:          0       0       0
  5941 ;;      Totals:         1       0       0
  5942 ;;Total ram usage:        1 bytes
  5943 ;; Hardware stack levels used: 1
  5944 ;; Hardware stack levels required when called: 2
  5945 ;; This function calls:
  5946 ;;		Nothing
  5947 ;; This function is called by:
  5948 ;;		_menu
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text45
  5953  001EA0                     __ptext45:
  5954                           	callstack 0
  5955  001EA0                     _HActualitzaHora:
  5956                           	callstack 27
  5957                           
  5958                           ;Hora.c: 17:     hora[0] = nova[0];
  5959                           
  5960                           ;incstack = 0
  5961  001EA0  5064               	movf	HActualitzaHora@nova^0,w,c
  5962  001EA2  6ED9               	movwf	fsr2l,c
  5963  001EA4  6ADA               	clrf	fsr2h,c
  5964  001EA6  50DF               	movf	indf2,w,c
  5965  001EA8  6E56               	movwf	_hora^0,c
  5966                           
  5967                           ;Hora.c: 18:     hora[1] = nova[1];
  5968  001EAA  5064               	movf	HActualitzaHora@nova^0,w,c
  5969  001EAC  ECAE  F006         	call	PL82	;call to abstracted procedure
  5970  001EB0  6E57               	movwf	(_hora+1)^0,c
  5971                           
  5972                           ;Hora.c: 19:     hora[3] = nova[2];
  5973  001EB2  5064               	movf	HActualitzaHora@nova^0,w,c
  5974  001EB4  EC9D  F006         	call	PL52	;call to abstracted procedure
  5975  001EB8  6E59               	movwf	(_hora+3)^0,c
  5976                           
  5977                           ;Hora.c: 20:     hora[4] = nova[3];
  5978  001EBA  5064               	movf	HActualitzaHora@nova^0,w,c
  5979  001EBC  ECA3  F006         	call	PL54	;call to abstracted procedure
  5980  001EC0  6E5A               	movwf	(_hora+4)^0,c
  5981  001EC2  0012               	return		;funcret
  5982  001EC4                     __end_of_HActualitzaHora:
  5983                           	callstack 0
  5984                           
  5985 ;; *************** function _GLCDMostraMenu *****************
  5986 ;; Defined at:
  5987 ;;		line 30 in file "GestioLCD.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;  num             1    wreg     unsigned char 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  num             1    5[COMRAM] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1
  6001 ;;      Params:         0       0       0
  6002 ;;      Locals:         1       0       0
  6003 ;;      Temps:          0       0       0
  6004 ;;      Totals:         1       0       0
  6005 ;;Total ram usage:        1 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 2
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_menu
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text46
  6016  0000D6                     __ptext46:
  6017                           	callstack 0
  6018  0000D6                     _GLCDMostraMenu:
  6019                           	callstack 27
  6020                           
  6021                           ;incstack = 0
  6022                           ;GLCDMostraMenu@num stored from wreg
  6023  0000D6  6E64               	movwf	GLCDMostraMenu@num^0,c
  6024                           
  6025                           ;GestioLCD.c: 31:     newString = 1;
  6026  0000D8  8276               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  6027                           
  6028                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  6029  0000DA  C064  F021         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  6030                           
  6031                           ;GestioLCD.c: 33:     ferMenu = 1;
  6032  0000DE  8476               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  6033  0000E0  0012               	return		;funcret
  6034  0000E2                     __end_of_GLCDMostraMenu:
  6035                           	callstack 0
  6036                           
  6037 ;; *************** function _CToAobtenir *****************
  6038 ;; Defined at:
  6039 ;;		line 7 in file "CtoA.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      PTR unsigned char 
  6046 ;; Registers used:
  6047 ;;		wreg
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1
  6053 ;;      Params:         2       0       0
  6054 ;;      Locals:         0       0       0
  6055 ;;      Temps:          0       0       0
  6056 ;;      Totals:         2       0       0
  6057 ;;Total ram usage:        2 bytes
  6058 ;; Hardware stack levels used: 1
  6059 ;; Hardware stack levels required when called: 2
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_menu
  6064 ;;		_motorSIO
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text47
  6069  0001F4                     __ptext47:
  6070                           	callstack 0
  6071  0001F4                     _CToAobtenir:
  6072                           	callstack 27
  6073                           
  6074                           ;CtoA.c: 8:     return stringScore;
  6075                           
  6076                           ;incstack = 0
  6077  0001F4  0E5C               	movlw	_stringScore& (0+255)
  6078  0001F6  0012               	return		;funcret
  6079  0001F8                     __end_of_CToAobtenir:
  6080                           	callstack 0
  6081                           
  6082 ;; *************** function _CToAHaAcabat *****************
  6083 ;; Defined at:
  6084 ;;		line 10 in file "CtoA.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;		None
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      unsigned char 
  6091 ;; Registers used:
  6092 ;;		wreg, status,2
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1
  6098 ;;      Params:         0       0       0
  6099 ;;      Locals:         0       0       0
  6100 ;;      Temps:          0       0       0
  6101 ;;      Totals:         0       0       0
  6102 ;;Total ram usage:        0 bytes
  6103 ;; Hardware stack levels used: 1
  6104 ;; Hardware stack levels required when called: 2
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_menu
  6109 ;;		_motorSIO
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text48
  6114  0001F8                     __ptext48:
  6115                           	callstack 0
  6116  0001F8                     _CToAHaAcabat:
  6117                           	callstack 27
  6118                           
  6119                           ;CtoA.c: 11:     return convertir;
  6120                           
  6121                           ;incstack = 0
  6122  0001F8  5047               	movf	_convertir^0,w,c
  6123  0001FA  0012               	return		;funcret
  6124  0001FC                     __end_of_CToAHaAcabat:
  6125                           	callstack 0
  6126                           
  6127 ;; *************** function _CToAConverteix *****************
  6128 ;; Defined at:
  6129 ;;		line 14 in file "CtoA.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  numero          1    wreg     unsigned char 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  numero          1    5[COMRAM] unsigned char 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2, cstack
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1
  6143 ;;      Params:         0       0       0
  6144 ;;      Locals:         1       0       0
  6145 ;;      Temps:          0       0       0
  6146 ;;      Totals:         1       0       0
  6147 ;;Total ram usage:        1 bytes
  6148 ;; Hardware stack levels used: 1
  6149 ;; Hardware stack levels required when called: 3
  6150 ;; This function calls:
  6151 ;;		_CToAReset
  6152 ;; This function is called by:
  6153 ;;		_menu
  6154 ;;		_motorSIO
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           	psect	text49
  6159  0000E2                     __ptext49:
  6160                           	callstack 0
  6161  0000E2                     _CToAConverteix:
  6162                           	callstack 26
  6163                           
  6164                           ;incstack = 0
  6165                           ;CToAConverteix@numero stored from wreg
  6166  0000E2  6E64               	movwf	CToAConverteix@numero^0,c
  6167                           
  6168                           ;CtoA.c: 15:     CToAReset();
  6169  0000E4  ECA0  F000         	call	_CToAReset	;wreg free
  6170                           
  6171                           ;CtoA.c: 16:     convertir = numero;
  6172  0000E8  C064  F047         	movff	CToAConverteix@numero,_convertir
  6173  0000EC  0012               	return		;funcret
  6174  0000EE                     __end_of_CToAConverteix:
  6175                           	callstack 0
  6176                           
  6177 ;; *************** function _CToAReset *****************
  6178 ;; Defined at:
  6179 ;;		line 18 in file "CtoA.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;		None
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1    wreg      void 
  6186 ;; Registers used:
  6187 ;;		wreg, status,2
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1
  6193 ;;      Params:         0       0       0
  6194 ;;      Locals:         0       0       0
  6195 ;;      Temps:          0       0       0
  6196 ;;      Totals:         0       0       0
  6197 ;;Total ram usage:        0 bytes
  6198 ;; Hardware stack levels used: 1
  6199 ;; Hardware stack levels required when called: 2
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_CToAConverteix
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text50
  6208  000140                     __ptext50:
  6209                           	callstack 0
  6210  000140                     _CToAReset:
  6211                           	callstack 26
  6212                           
  6213                           ;CtoA.c: 19:     stringScore[0] = '0';
  6214                           
  6215                           ;incstack = 0
  6216  000140  0E30               	movlw	48
  6217  000142  6E5C               	movwf	_stringScore^0,c
  6218                           
  6219                           ;CtoA.c: 20:     stringScore[1] = '0';
  6220  000144  6E5D               	movwf	(_stringScore+1)^0,c
  6221  000146  0C30               	retlw	48	;funcret
  6222  000148                     __end_of_CToAReset:
  6223                           	callstack 0
  6224                           
  6225 ;; *************** function _init_ports *****************
  6226 ;; Defined at:
  6227 ;;		line 24 in file "main.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;		None
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;		None
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      void 
  6234 ;; Registers used:
  6235 ;;		wreg, status,2
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMRAM   BANK0   BANK1
  6241 ;;      Params:         0       0       0
  6242 ;;      Locals:         0       0       0
  6243 ;;      Temps:          0       0       0
  6244 ;;      Totals:         0       0       0
  6245 ;;Total ram usage:        0 bytes
  6246 ;; Hardware stack levels used: 1
  6247 ;; Hardware stack levels required when called: 2
  6248 ;; This function calls:
  6249 ;;		Nothing
  6250 ;; This function is called by:
  6251 ;;		_main
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text51
  6256  001F2C                     __ptext51:
  6257                           	callstack 0
  6258  001F2C                     _init_ports:
  6259                           	callstack 28
  6260                           
  6261                           ;incstack = 0
  6262  001F2C  0E03               	movlw	3
  6263  001F2E  6E92               	movwf	146,c	;volatile
  6264  001F30  0EE0               	movlw	224
  6265  001F32  6E93               	movwf	147,c	;volatile
  6266  001F34  968A               	bcf	138,3,c	;volatile
  6267  001F36  908A               	bcf	138,0,c	;volatile
  6268  001F38  828A               	bsf	138,1,c	;volatile
  6269                           
  6270                           ;main.c: 48:     TRISC = 0xC0;
  6271  001F3A  0EC0               	movlw	192
  6272  001F3C  6E94               	movwf	148,c	;volatile
  6273                           
  6274                           ;main.c: 58:     TRISD = 0x8F;
  6275  001F3E  0E8F               	movlw	143
  6276  001F40  6E95               	movwf	149,c	;volatile
  6277                           
  6278                           ;main.c: 59:     LATD = 0x00;
  6279  001F42  6A8C               	clrf	140,c	;volatile
  6280                           
  6281                           ;main.c: 62:     EECON1bits.EEPGD = 1;
  6282  001F44  8EA6               	bsf	166,7,c	;volsfr
  6283                           
  6284                           ;main.c: 63:     EECON1bits.CFGS = 0;
  6285  001F46  9CA6               	bcf	166,6,c	;volsfr
  6286  001F48  0012               	return		;funcret
  6287  001F4A                     __end_of_init_ports:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function _init_eusart *****************
  6291 ;; Defined at:
  6292 ;;		line 66 in file "main.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;		None
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		wreg, status,2
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1
  6306 ;;      Params:         0       0       0
  6307 ;;      Locals:         0       0       0
  6308 ;;      Temps:          0       0       0
  6309 ;;      Totals:         0       0       0
  6310 ;;Total ram usage:        0 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 2
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_main
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text52
  6321  001FD4                     __ptext52:
  6322                           	callstack 0
  6323  001FD4                     _init_eusart:
  6324                           	callstack 28
  6325                           
  6326                           ;main.c: 67:     TXSTA = 0x24;
  6327                           
  6328                           ;incstack = 0
  6329  001FD4  0E24               	movlw	36
  6330  001FD6  6EAC               	movwf	172,c	;volatile
  6331                           
  6332                           ;main.c: 68:     RCSTA = 0x90;
  6333  001FD8  0E90               	movlw	144
  6334  001FDA  6EAB               	movwf	171,c	;volatile
  6335                           
  6336                           ;main.c: 69:     BAUDCON = 0x08;
  6337  001FDC  0E08               	movlw	8
  6338  001FDE  6EB8               	movwf	184,c	;volatile
  6339                           
  6340                           ;main.c: 70:     SPBRGH = 0x04;
  6341  001FE0  0E04               	movlw	4
  6342  001FE2  6EB0               	movwf	176,c	;volatile
  6343                           
  6344                           ;main.c: 71:     SPBRG = 0x10;
  6345  001FE4  0E10               	movlw	16
  6346  001FE6  6EAF               	movwf	175,c	;volatile
  6347  001FE8  0C10               	retlw	16	;funcret
  6348  001FEA                     __end_of_init_eusart:
  6349                           	callstack 0
  6350                           
  6351 ;; *************** function _initSIO *****************
  6352 ;; Defined at:
  6353 ;;		line 23 in file "SIO.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;		None
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;		None
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  1    wreg      void 
  6360 ;; Registers used:
  6361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1
  6367 ;;      Params:         0       0       0
  6368 ;;      Locals:         0       0       0
  6369 ;;      Temps:          0       0       0
  6370 ;;      Totals:         0       0       0
  6371 ;;Total ram usage:        0 bytes
  6372 ;; Hardware stack levels used: 1
  6373 ;; Hardware stack levels required when called: 3
  6374 ;; This function calls:
  6375 ;;		_TiGetTimer
  6376 ;; This function is called by:
  6377 ;;		_main
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           	psect	text53
  6382  000148                     __ptext53:
  6383                           	callstack 0
  6384  000148                     _initSIO:
  6385                           	callstack 27
  6386                           
  6387                           ;SIO.c: 24:     timerSIO = TiGetTimer();
  6388                           
  6389                           ;incstack = 0
  6390  000148  ECDC  F00E         	call	_TiGetTimer	;wreg free
  6391  00014C  6E11               	movwf	_timerSIO^0,c
  6392  00014E  0012               	return		;funcret
  6393  000150                     __end_of_initSIO:
  6394                           	callstack 0
  6395                           
  6396 ;; *************** function _initHora *****************
  6397 ;; Defined at:
  6398 ;;		line 12 in file "Hora.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;		None
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;		None
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  1    wreg      void 
  6405 ;; Registers used:
  6406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1
  6412 ;;      Params:         0       0       0
  6413 ;;      Locals:         0       0       0
  6414 ;;      Temps:          0       0       0
  6415 ;;      Totals:         0       0       0
  6416 ;;Total ram usage:        0 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; Hardware stack levels required when called: 3
  6419 ;; This function calls:
  6420 ;;		_TiGetTimer
  6421 ;; This function is called by:
  6422 ;;		_main
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text54
  6427  000150                     __ptext54:
  6428                           	callstack 0
  6429  000150                     _initHora:
  6430                           	callstack 27
  6431                           
  6432                           ;Hora.c: 13:     timerHora = TiGetTimer();
  6433                           
  6434                           ;incstack = 0
  6435  000150  ECDC  F00E         	call	_TiGetTimer	;wreg free
  6436  000154  6E16               	movwf	_timerHora^0,c
  6437  000156  0012               	return		;funcret
  6438  000158                     __end_of_initHora:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function _initAltaveu *****************
  6442 ;; Defined at:
  6443 ;;		line 10 in file "Altaveu.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;		None
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1
  6457 ;;      Params:         0       0       0
  6458 ;;      Locals:         0       0       0
  6459 ;;      Temps:          0       0       0
  6460 ;;      Totals:         0       0       0
  6461 ;;Total ram usage:        0 bytes
  6462 ;; Hardware stack levels used: 1
  6463 ;; Hardware stack levels required when called: 3
  6464 ;; This function calls:
  6465 ;;		_TiGetTimer
  6466 ;; This function is called by:
  6467 ;;		_main
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text55
  6472  000158                     __ptext55:
  6473                           	callstack 0
  6474  000158                     _initAltaveu:
  6475                           	callstack 27
  6476                           
  6477                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  6478                           
  6479                           ;incstack = 0
  6480  000158  ECDC  F00E         	call	_TiGetTimer	;wreg free
  6481  00015C  6E25               	movwf	_timerAltaveu^0,c
  6482  00015E  0012               	return		;funcret
  6483  000160                     __end_of_initAltaveu:
  6484                           	callstack 0
  6485                           
  6486 ;; *************** function _UmotorUsers *****************
  6487 ;; Defined at:
  6488 ;;		line 144 in file "Usuaris.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;		None
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  1    wreg      void 
  6495 ;; Registers used:
  6496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1
  6502 ;;      Params:         0       0       0
  6503 ;;      Locals:         0       0       0
  6504 ;;      Temps:          2       0       0
  6505 ;;      Totals:         2       0       0
  6506 ;;Total ram usage:        2 bytes
  6507 ;; Hardware stack levels used: 1
  6508 ;; Hardware stack levels required when called: 3
  6509 ;; This function calls:
  6510 ;;		_compareStrings
  6511 ;;		_escriureCharEEPROM
  6512 ;; This function is called by:
  6513 ;;		_main
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text56
  6518  000FFE                     __ptext56:
  6519                           	callstack 0
  6520  000FFE                     _UmotorUsers:
  6521                           	callstack 27
  6522                           
  6523                           ;Usuaris.c: 145:     static char state = 0;;Usuaris.c: 147:  switch(state) {
  6524                           
  6525                           ;incstack = 0
  6526  000FFE  D0FD               	goto	l6307
  6527  001000                     l767:
  6528                           
  6529                           ;Usuaris.c: 149:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  6530  001000  AE76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6531  001002  BC76               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6532  001004  D006               	goto	l768
  6533  001006  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6534  001008  B876               	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6535  00100A  D003               	goto	l768
  6536                           
  6537                           ;Usuaris.c: 150:     i = 0;
  6538  00100C  6A2A               	clrf	_i^0,c
  6539                           
  6540                           ;Usuaris.c: 151:     j = 0;
  6541  00100E  6A29               	clrf	_j^0,c
  6542                           
  6543                           ;Usuaris.c: 152:    }
  6544  001010  0012               	return	
  6545  001012                     l768:
  6546  001012  AE76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6547  001014  D004               	goto	l770
  6548                           
  6549                           ;Usuaris.c: 154:     usuariLoguejat = -1;
  6550  001016  684F               	setf	_usuariLoguejat^0,c
  6551  001018                     l6149:
  6552                           
  6553                           ;Usuaris.c: 155:     state = 1;
  6554  001018  0E01               	movlw	1
  6555  00101A  6E27               	movwf	UmotorUsers@state^0,c
  6556                           
  6557                           ;Usuaris.c: 156:    }
  6558  00101C  0C01               	retlw	1
  6559  00101E                     l770:
  6560  00101E  AC76               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6561  001020  D00B               	goto	l772
  6562                           
  6563                           ;Usuaris.c: 158:     if(numUsuaris != 8) numUsuaris++;
  6564  001022  0E08               	movlw	8
  6565  001024  182D               	xorwf	_numUsuaris^0,w,c
  6566  001026  E001               	bz	l6155
  6567  001028  2A2D               	incf	_numUsuaris^0,f,c
  6568  00102A                     l6155:
  6569                           
  6570                           ;Usuaris.c: 160:     escriureCharEEPROM(numUsuaris,0);
  6571  00102A  6A64               	clrf	escriureCharEEPROM@pos^0,c
  6572  00102C  502D               	movf	_numUsuaris^0,w,c
  6573  00102E  EC06  F00F         	call	_escriureCharEEPROM
  6574  001032                     l6157:
  6575                           
  6576                           ;Usuaris.c: 161:     state = 2;
  6577  001032  0E02               	movlw	2
  6578  001034  6E27               	movwf	UmotorUsers@state^0,c
  6579                           
  6580                           ;Usuaris.c: 162:    }
  6581  001036  0C02               	retlw	2
  6582  001038                     l772:
  6583  001038  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6584  00103A  D016               	goto	l775
  6585                           
  6586                           ;Usuaris.c: 164:     arrayShowUsers[0] = usuariLoguejat;
  6587  00103C  C04F  F0A2         	movff	_usuariLoguejat,_arrayShowUsers
  6588                           
  6589                           ;Usuaris.c: 165:     arrayShowUsers[1] = -1;
  6590  001040  0100               	movlb	0	; () banked
  6591  001042  69A3               	setf	(_arrayShowUsers+1)& (0+255),b
  6592                           
  6593                           ;Usuaris.c: 166:     arrayShowUsers[2] = -1;
  6594  001044  69A4               	setf	(_arrayShowUsers+2)& (0+255),b
  6595                           
  6596                           ;Usuaris.c: 167:     arrayShowUsers[3] = -1;
  6597  001046  69A5               	setf	(_arrayShowUsers+3)& (0+255),b
  6598                           
  6599                           ;Usuaris.c: 168:     arrayShowUsers[4] = -1;
  6600  001048  69A6               	setf	(_arrayShowUsers+4)& (0+255),b
  6601                           
  6602                           ;Usuaris.c: 169:     arrayShowUsers[5] = -1;
  6603  00104A  69A7               	setf	(_arrayShowUsers+5)& (0+255),b
  6604                           
  6605                           ;Usuaris.c: 170:     arrayShowUsers[6] = -1;
  6606  00104C  69A8               	setf	(_arrayShowUsers+6)& (0+255),b
  6607                           
  6608                           ;Usuaris.c: 171:     arrayShowUsers[7] = -1;
  6609  00104E  69A9               	setf	(_arrayShowUsers+7)& (0+255),b
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;Usuaris.c: 172:     i = 1;
  6613  001050  0E01               	movlw	1
  6614  001052  6E2A               	movwf	_i^0,c
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;Usuaris.c: 173:     if(numUsuaris < 7) {
  6618  001054  0E07               	movlw	7
  6619  001056  602D               	cpfslt	_numUsuaris^0,c
  6620  001058  D002               	goto	l776
  6621  00105A                     u6550:
  6622                           
  6623                           ;Usuaris.c: 174:       j = 0;
  6624  00105A  6A29               	clrf	_j^0,c
  6625                           
  6626                           ;Usuaris.c: 175:     }
  6627  00105C  D002               	goto	l6167
  6628  00105E                     l776:
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;Usuaris.c: 177:       j = indexNextUserStruct;
  6632  00105E  C02B  F029         	movff	_indexNextUserStruct,_j
  6633  001062                     l6167:
  6634                           
  6635                           ;Usuaris.c: 179:     state = 5;
  6636  001062  0E05               	movlw	5
  6637  001064  6E27               	movwf	UmotorUsers@state^0,c
  6638                           
  6639                           ;Usuaris.c: 180:    }
  6640  001066  0C05               	retlw	5
  6641  001068                     l775:
  6642  001068  A876               	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6643  00106A  0012               	return	
  6644                           
  6645                           ;Usuaris.c: 182:     do_updateScore = 0;
  6646  00106C  9876               	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6647  00106E                     l6171:
  6648                           
  6649                           ;Usuaris.c: 183:     state = 6;
  6650  00106E  0E06               	movlw	6
  6651  001070  6E27               	movwf	UmotorUsers@state^0,c
  6652  001072  0C06               	retlw	6
  6653  001074                     l6173:
  6654                           
  6655                           ;Usuaris.c: 187:    if (i < numUsuaris) {
  6656  001074  502D               	movf	_numUsuaris^0,w,c
  6657  001076  5C2A               	subwf	_i^0,w,c
  6658  001078  E212               	bc	l6183
  6659                           
  6660                           ;Usuaris.c: 188:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6661  00107A  0EB3               	movlw	low _tmpUsername
  6662  00107C  6E64               	movwf	compareStrings@a^0,c
  6663  00107E  502A               	movf	_i^0,w,c
  6664  001080  0D12               	mullw	18
  6665  001082  0E00               	movlw	low _usuaris
  6666  001084  24F3               	addwf	243,w,c
  6667  001086  6E65               	movwf	compareStrings@b^0,c
  6668  001088  0E01               	movlw	high _usuaris
  6669  00108A  20F4               	addwfc	prodh,w,c
  6670  00108C  6E66               	movwf	(compareStrings@b+1)^0,c
  6671  00108E  EC4E  F00E         	call	_compareStrings	;wreg free
  6672  001092  0900               	iorlw	0
  6673  001094  E102               	bnz	l6179
  6674                           
  6675                           ;Usuaris.c: 189:      usuariLoguejat = i;
  6676  001096  C02A  F04F         	movff	_i,_usuariLoguejat
  6677  00109A                     l6179:
  6678                           
  6679                           ;Usuaris.c: 192:     i++;
  6680  00109A  2A2A               	incf	_i^0,f,c
  6681  00109C  D7BD               	goto	l6149
  6682  00109E                     l6183:
  6683  00109E  502D               	movf	_numUsuaris^0,w,c
  6684  0010A0  182A               	xorwf	_i^0,w,c
  6685  0010A2  A4D8               	btfss	status,2,c
  6686  0010A4  0012               	return	
  6687                           
  6688                           ;Usuaris.c: 196:     do_check_exists = 0;
  6689  0010A6  9E76               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6690                           
  6691                           ;Usuaris.c: 197:     state = 0;
  6692  0010A8  6A27               	clrf	UmotorUsers@state^0,c
  6693  0010AA  0012               	return	
  6694  0010AC                     l6187:
  6695                           
  6696                           ;Usuaris.c: 201:    if (i < 9) {
  6697  0010AC  0E09               	movlw	9
  6698  0010AE  602A               	cpfslt	_i^0,c
  6699  0010B0  D00D               	goto	l6199
  6700                           
  6701                           ;Usuaris.c: 202:     escriureCharEEPROM(tmpUsername[i],indexNextUser);
  6702  0010B2  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6703  0010B6  502A               	movf	_i^0,w,c
  6704  0010B8  0FB3               	addlw	low _tmpUsername
  6705  0010BA  D8DF               	call	PL60	;call to abstracted procedure
  6706  0010BC  EC06  F00F         	call	_escriureCharEEPROM
  6707                           
  6708                           ;Usuaris.c: 203:     indexNextUser++;
  6709  0010C0  2A2C               	incf	_indexNextUser^0,f,c
  6710                           
  6711                           ;Usuaris.c: 204:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6712  0010C2  502A               	movf	_i^0,w,c
  6713  0010C4  0FB3               	addlw	low _tmpUsername
  6714  0010C6  D8D0               	call	PL26	;call to abstracted procedure
  6715                           
  6716                           ;Usuaris.c: 205:     i++;
  6717  0010C8  D8B3               	call	PL18	;call to abstracted procedure
  6718  0010CA  D7B3               	goto	l6157
  6719  0010CC                     l6199:
  6720  0010CC  0E08               	movlw	8
  6721  0010CE  642A               	cpfsgt	_i^0,c
  6722  0010D0  0C08               	retlw	8
  6723                           
  6724                           ;Usuaris.c: 209:     i = 0;
  6725  0010D2  6A2A               	clrf	_i^0,c
  6726  0010D4                     l6203:
  6727                           
  6728                           ;Usuaris.c: 210:     state = 3;
  6729  0010D4  0E03               	movlw	3
  6730  0010D6  6E27               	movwf	UmotorUsers@state^0,c
  6731  0010D8  0C03               	retlw	3
  6732  0010DA                     l6205:
  6733                           
  6734                           ;Usuaris.c: 214:    if (i < 9) {
  6735  0010DA  0E09               	movlw	9
  6736  0010DC  602A               	cpfslt	_i^0,c
  6737  0010DE  D011               	goto	l6217
  6738                           
  6739                           ;Usuaris.c: 215:     escriureCharEEPROM(tmpPassword[i],indexNextUser);
  6740  0010E0  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6741  0010E4  502A               	movf	_i^0,w,c
  6742  0010E6  0FAA               	addlw	low _tmpPassword
  6743  0010E8  D8C8               	call	PL60	;call to abstracted procedure
  6744  0010EA  EC06  F00F         	call	_escriureCharEEPROM
  6745                           
  6746                           ;Usuaris.c: 216:     indexNextUser++;
  6747  0010EE  2A2C               	incf	_indexNextUser^0,f,c
  6748                           
  6749                           ;Usuaris.c: 217:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6750  0010F0  502A               	movf	_i^0,w,c
  6751  0010F2  0FAA               	addlw	low _tmpPassword
  6752  0010F4  D8B9               	call	PL26	;call to abstracted procedure
  6753  0010F6  0E09               	movlw	9
  6754  0010F8  2669               	addwf	??_UmotorUsers^0,f,c
  6755  0010FA  0E00               	movlw	0
  6756  0010FC  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  6757                           
  6758                           ;Usuaris.c: 218:     i++;
  6759  0010FE  D898               	call	PL18	;call to abstracted procedure
  6760  001100  D7E9               	goto	l6203
  6761  001102                     l6217:
  6762  001102  0E08               	movlw	8
  6763  001104  642A               	cpfsgt	_i^0,c
  6764  001106  0C08               	retlw	8
  6765                           
  6766                           ;Usuaris.c: 222:     do_register = 0;
  6767  001108  9C76               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6768                           
  6769                           ;Usuaris.c: 223:     if(indexNextUser == 159) indexNextUser = 16;
  6770  00110A  0E9F               	movlw	159
  6771  00110C  182C               	xorwf	_indexNextUser^0,w,c
  6772  00110E  E102               	bnz	l6225
  6773  001110  0E10               	movlw	16
  6774  001112  6E2C               	movwf	_indexNextUser^0,c
  6775  001114                     l6225:
  6776                           
  6777                           ;Usuaris.c: 224:     indexNextUserStruct++;
  6778  001114  2A2B               	incf	_indexNextUserStruct^0,f,c
  6779                           
  6780                           ;Usuaris.c: 225:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6781  001116  0E08               	movlw	8
  6782  001118  182B               	xorwf	_indexNextUserStruct^0,w,c
  6783  00111A  E101               	bnz	l6231
  6784  00111C  6A2B               	clrf	_indexNextUserStruct^0,c
  6785  00111E                     l6231:
  6786                           
  6787                           ;Usuaris.c: 226:     escriureCharEEPROM(indexNextUser,1);
  6788  00111E  0E01               	movlw	1
  6789  001120  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6790  001122  502C               	movf	_indexNextUser^0,w,c
  6791  001124  EC06  F00F         	call	_escriureCharEEPROM
  6792  001128                     l6233:
  6793                           
  6794                           ;Usuaris.c: 227:     state = 0;
  6795  001128  6A27               	clrf	UmotorUsers@state^0,c
  6796  00112A  0012               	return	
  6797  00112C                     l6235:
  6798                           
  6799                           ;Usuaris.c: 231:    if (i < numUsuaris) {
  6800  00112C  502D               	movf	_numUsuaris^0,w,c
  6801  00112E  5C2A               	subwf	_i^0,w,c
  6802  001130  E217               	bc	l6251
  6803                           
  6804                           ;Usuaris.c: 232:     if(j != usuariLoguejat){
  6805  001132  C04F  F069         	movff	_usuariLoguejat,??_UmotorUsers
  6806  001136  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6807  001138  BE69               	btfsc	??_UmotorUsers^0,7,c
  6808  00113A  066A               	decf	(??_UmotorUsers+1)^0,f,c
  6809  00113C  5029               	movf	_j^0,w,c
  6810  00113E  1869               	xorwf	??_UmotorUsers^0,w,c
  6811  001140  106A               	iorwf	(??_UmotorUsers+1)^0,w,c
  6812  001142  E008               	bz	l6243
  6813                           
  6814                           ;Usuaris.c: 233:       arrayShowUsers[i] = j;
  6815  001144  502A               	movf	_i^0,w,c
  6816  001146  0FA2               	addlw	low _arrayShowUsers
  6817  001148  6ED9               	movwf	fsr2l,c
  6818  00114A  6ADA               	clrf	fsr2h,c
  6819  00114C  C029  FFDF         	movff	_j,indf2
  6820                           
  6821                           ;Usuaris.c: 234:      i++;
  6822  001150  2A2A               	incf	_i^0,f,c
  6823                           
  6824                           ;Usuaris.c: 235:     }else{
  6825  001152  D001               	goto	l799
  6826  001154                     l6243:
  6827                           
  6828                           ;Usuaris.c: 236:       j++;
  6829  001154  2A29               	incf	_j^0,f,c
  6830  001156                     l799:
  6831                           
  6832                           ;Usuaris.c: 238:     j++;
  6833  001156  2A29               	incf	_j^0,f,c
  6834                           
  6835                           ;Usuaris.c: 239:     if(j > 7) j=0;
  6836  001158  0E07               	movlw	7
  6837  00115A  6429               	cpfsgt	_j^0,c
  6838  00115C  D782               	goto	l6167
  6839  00115E  D77D               	goto	u6550
  6840  001160                     l6251:
  6841  001160  502D               	movf	_numUsuaris^0,w,c
  6842  001162  182A               	xorwf	_i^0,w,c
  6843  001164  A4D8               	btfss	status,2,c
  6844  001166  0012               	return	
  6845                           
  6846                           ;Usuaris.c: 243:     do_showUsers = 0;
  6847  001168  9A76               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6848                           
  6849                           ;Usuaris.c: 244:     state = 0;
  6850  00116A  6A27               	clrf	UmotorUsers@state^0,c
  6851  00116C  0012               	return	
  6852  00116E                     l6255:
  6853                           
  6854                           ;Usuaris.c: 248:    if (i < 5 && puntuacions[i].indexStruct != -1) {
  6855  00116E  0E05               	movlw	5
  6856  001170  602A               	cpfslt	_i^0,c
  6857  001172  D005               	goto	l6263
  6858  001174  D86B               	call	PL20	;call to abstracted procedure
  6859  001176  28DE               	incf	postinc2,w,c
  6860  001178  E002               	bz	l6263
  6861                           
  6862                           ;Usuaris.c: 249:     i++;
  6863  00117A  2A2A               	incf	_i^0,f,c
  6864  00117C  D778               	goto	l6171
  6865  00117E                     l6263:
  6866  00117E  0E05               	movlw	5
  6867  001180  602A               	cpfslt	_i^0,c
  6868  001182  D006               	goto	l6269
  6869  001184  D863               	call	PL20	;call to abstracted procedure
  6870  001186  28DE               	incf	postinc2,w,c
  6871  001188  E103               	bnz	l6269
  6872  00118A                     u6730:
  6873                           
  6874                           ;Usuaris.c: 253:     state = 7;
  6875  00118A  0E07               	movlw	7
  6876  00118C  6E27               	movwf	UmotorUsers@state^0,c
  6877                           
  6878                           ;Usuaris.c: 254:    }
  6879  00118E  0C07               	retlw	7
  6880  001190                     l6269:
  6881  001190  0E04               	movlw	4
  6882  001192  642A               	cpfsgt	_i^0,c
  6883  001194  0C04               	retlw	4
  6884                           
  6885                           ;Usuaris.c: 256:     i = 0;
  6886  001196  6A2A               	clrf	_i^0,c
  6887  001198                     l6273:
  6888                           
  6889                           ;Usuaris.c: 257:     state = 8;
  6890  001198  0E08               	movlw	8
  6891  00119A  6E27               	movwf	UmotorUsers@state^0,c
  6892  00119C  0C08               	retlw	8
  6893  00119E                     l6275:
  6894                           
  6895                           ;Usuaris.c: 261:    puntuacions[i].score = scoreUsr;
  6896  00119E  D85D               	call	PL22	;call to abstracted procedure
  6897  0011A0  C028  FFDF         	movff	_scoreUsr,indf2
  6898                           
  6899                           ;Usuaris.c: 262:    puntuacions[i].indexStruct = usuariLoguejat;
  6900  0011A4  D853               	call	PL20	;call to abstracted procedure
  6901  0011A6  C04F  FFDF         	movff	_usuariLoguejat,indf2
  6902                           
  6903                           ;Usuaris.c: 263:    i = i+i;
  6904  0011AA  0E02               	movlw	2
  6905  0011AC  022A               	mulwf	_i^0,c
  6906  0011AE  50F3               	movf	prodl,w,c
  6907  0011B0  6E2A               	movwf	_i^0,c
  6908                           
  6909                           ;Usuaris.c: 264:    escriureCharEEPROM(usuariLoguejat,200+i);
  6910  0011B2  502A               	movf	_i^0,w,c
  6911  0011B4  0FC8               	addlw	200
  6912  0011B6  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6913  0011B8  504F               	movf	_usuariLoguejat^0,w,c
  6914  0011BA  EC06  F00F         	call	_escriureCharEEPROM
  6915                           
  6916                           ;Usuaris.c: 265:    i++;
  6917  0011BE  2A2A               	incf	_i^0,f,c
  6918                           
  6919                           ;Usuaris.c: 266:    escriureCharEEPROM(scoreUsr,200+i);
  6920  0011C0  502A               	movf	_i^0,w,c
  6921  0011C2  0FC8               	addlw	200
  6922  0011C4  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6923  0011C6  5028               	movf	_scoreUsr^0,w,c
  6924  0011C8  EC06  F00F         	call	_escriureCharEEPROM
  6925  0011CC  D7AD               	goto	l6233
  6926  0011CE                     l6287:
  6927                           
  6928                           ;Usuaris.c: 270:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  6929  0011CE  D845               	call	PL22	;call to abstracted procedure
  6930  0011D0  5028               	movf	_scoreUsr^0,w,c
  6931  0011D2  5CDE               	subwf	postinc2,w,c
  6932  0011D4  E305               	bnc	l6295
  6933  0011D6  0E05               	movlw	5
  6934  0011D8  602A               	cpfslt	_i^0,c
  6935  0011DA  D002               	goto	l6295
  6936                           
  6937                           ;Usuaris.c: 271:     i++;
  6938  0011DC  2A2A               	incf	_i^0,f,c
  6939  0011DE  D7DC               	goto	l6273
  6940  0011E0                     l6295:
  6941  0011E0  0E04               	movlw	4
  6942  0011E2  642A               	cpfsgt	_i^0,c
  6943  0011E4  D001               	goto	l6299
  6944  0011E6  D7A0               	goto	l6233
  6945  0011E8                     l6299:
  6946  0011E8  D838               	call	PL22	;call to abstracted procedure
  6947  0011EA  5028               	movf	_scoreUsr^0,w,c
  6948  0011EC  5CDE               	subwf	postinc2,w,c
  6949  0011EE  B0D8               	btfsc	status,0,c
  6950  0011F0  0012               	return	
  6951  0011F2  0E05               	movlw	5
  6952  0011F4  602A               	cpfslt	_i^0,c
  6953  0011F6  0C05               	retlw	5
  6954  0011F8  D7C8               	goto	u6730
  6955  0011FA                     l6307:
  6956  0011FA  5027               	movf	UmotorUsers@state^0,w,c
  6957  0011FC  6E69               	movwf	??_UmotorUsers^0,c
  6958  0011FE  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6959                           
  6960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6961                           ; Switch size 1, requested type "space"
  6962                           ; Number of cases is 1, Range of values is 0 to 0
  6963                           ; switch strategies available:
  6964                           ; Name         Instructions Cycles
  6965                           ; simple_byte            4     3 (average)
  6966                           ;	Chosen strategy is simple_byte
  6967  001200  506A               	movf	(??_UmotorUsers+1)^0,w,c
  6968  001202  A4D8               	btfss	status,2,c
  6969  001204  0012               	return	
  6970                           
  6971                           ; Switch size 1, requested type "space"
  6972                           ; Number of cases is 8, Range of values is 0 to 8
  6973                           ; switch strategies available:
  6974                           ; Name         Instructions Cycles
  6975                           ; simple_byte           25    13 (average)
  6976                           ;	Chosen strategy is simple_byte
  6977  001206  5069               	movf	??_UmotorUsers^0,w,c
  6978  001208  E101 D6FA          	bz	l767
  6979  00120C  0A01               	xorlw	1	; case 1
  6980  00120E  E101 D731          	bz	l6173
  6981  001212  0A03               	xorlw	3	; case 2
  6982  001214  E101 D74A          	bz	l6187
  6983  001218  0A01               	xorlw	1	; case 3
  6984  00121A  E101 D75E          	bz	l6205
  6985  00121E  0A06               	xorlw	6	; case 5
  6986  001220  E085               	bz	l6235
  6987  001222  0A03               	xorlw	3	; case 6
  6988  001224  E0A4               	bz	l6255
  6989  001226  0A01               	xorlw	1	; case 7
  6990  001228  E0BA               	bz	l6275
  6991  00122A  0A0F               	xorlw	15	; case 8
  6992  00122C  E0D0               	bz	l6287
  6993  00122E  0012               	return		;funcret
  6994  001230                     __end_of_UmotorUsers:
  6995                           	callstack 0
  6996  001230                     PL18:
  6997                           	callstack 27
  6998  001230  50F3               	movf	243,w,c
  6999  001232  2669               	addwf	??_UmotorUsers^0,f,c
  7000  001234  50F4               	movf	244,w,c
  7001  001236  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  7002  001238  502A               	movf	_i^0,w,c
  7003  00123A  2469               	addwf	??_UmotorUsers^0,w,c
  7004  00123C  6EE1               	movwf	fsr1l,c
  7005  00123E  0E00               	movlw	0
  7006  001240  206A               	addwfc	(??_UmotorUsers+1)^0,w,c
  7007  001242  6EE2               	movwf	fsr1h,c
  7008  001244  CFDF FFE7          	movff	indf2,indf1
  7009  001248  2A2A               	incf	_i^0,f,c
  7010  00124A  0012               	return	
  7011  00124C                     __end_ofPL18:
  7012                           	callstack 0
  7013  00124C                     PL20:
  7014                           	callstack 27
  7015  00124C  502A               	movf	_i^0,w,c
  7016  00124E  0D02               	mullw	2
  7017  001250  50F3               	movf	243,w,c
  7018  001252  0F98               	addlw	low _puntuacions
  7019  001254  6ED9               	movwf	fsr2l,c
  7020  001256  6ADA               	clrf	fsr2h,c
  7021  001258  0012               	return	
  7022  00125A                     __end_ofPL20:
  7023                           	callstack 0
  7024  00125A                     PL22:
  7025                           	callstack 27
  7026  00125A  502A               	movf	_i^0,w,c
  7027  00125C  0D02               	mullw	2
  7028  00125E  50F3               	movf	243,w,c
  7029  001260  0F99               	addlw	low (_puntuacions+1)
  7030  001262  6ED9               	movwf	fsr2l,c
  7031  001264  6ADA               	clrf	fsr2h,c
  7032  001266  0012               	return	
  7033  001268                     __end_ofPL22:
  7034                           	callstack 0
  7035  001268                     PL26:
  7036                           	callstack 27
  7037  001268  6ED9               	movwf	fsr2l,c
  7038  00126A  6ADA               	clrf	fsr2h,c
  7039  00126C  502B               	movf	_indexNextUserStruct^0,w,c
  7040  00126E  0D12               	mullw	18
  7041  001270  0E00               	movlw	low _usuaris
  7042  001272  6E69               	movwf	??_UmotorUsers^0,c
  7043  001274  0E01               	movlw	high _usuaris
  7044  001276  6E6A               	movwf	(??_UmotorUsers+1)^0,c
  7045  001278  0012               	return	
  7046  00127A                     __end_ofPL26:
  7047                           	callstack 0
  7048  00127A                     PL60:
  7049                           	callstack 27
  7050  00127A  6ED9               	movwf	fsr2l,c
  7051  00127C  6ADA               	clrf	fsr2h,c
  7052  00127E  50DF               	movf	indf2,w,c
  7053  001280  0012               	return	
  7054  001282                     __end_ofPL60:
  7055                           	callstack 0
  7056                           
  7057 ;; *************** function _escriureCharEEPROM *****************
  7058 ;; Defined at:
  7059 ;;		line 64 in file "Usuaris.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  c               1    wreg     unsigned char 
  7062 ;;  pos             1    5[COMRAM] unsigned char 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  c               1    6[COMRAM] unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1    wreg      void 
  7067 ;; Registers used:
  7068 ;;		wreg, status,2
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1
  7074 ;;      Params:         1       0       0
  7075 ;;      Locals:         1       0       0
  7076 ;;      Temps:          0       0       0
  7077 ;;      Totals:         2       0       0
  7078 ;;Total ram usage:        2 bytes
  7079 ;; Hardware stack levels used: 1
  7080 ;; Hardware stack levels required when called: 2
  7081 ;; This function calls:
  7082 ;;		Nothing
  7083 ;; This function is called by:
  7084 ;;		_UmotorUsers
  7085 ;; This function uses a non-reentrant model
  7086 ;;
  7087                           
  7088                           	psect	text57
  7089  001E0C                     __ptext57:
  7090                           	callstack 0
  7091  001E0C                     _escriureCharEEPROM:
  7092                           	callstack 27
  7093                           
  7094                           ;incstack = 0
  7095                           ;escriureCharEEPROM@c stored from wreg
  7096  001E0C  6E65               	movwf	escriureCharEEPROM@c^0,c
  7097                           
  7098                           ;Usuaris.c: 65:     EEADR = pos;
  7099  001E0E  C064  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  7100                           
  7101                           ;Usuaris.c: 66:     EEDATA = c;
  7102  001E12  C065  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  7103                           
  7104                           ;Usuaris.c: 67:     EECON1bits.EEPGD = 0;
  7105  001E16  9EA6               	bcf	166,7,c	;volsfr
  7106                           
  7107                           ;Usuaris.c: 68:     EECON1bits.CFGS = 0;
  7108  001E18  9CA6               	bcf	166,6,c	;volsfr
  7109                           
  7110                           ;Usuaris.c: 69:     EECON1bits.WREN = 1;
  7111  001E1A  84A6               	bsf	166,2,c	;volsfr
  7112                           
  7113                           ;Usuaris.c: 70:     INTCONbits.GIE = 0;
  7114  001E1C  9EF2               	bcf	242,7,c	;volatile
  7115                           
  7116                           ;Usuaris.c: 71:     EECON2 = 85;
  7117  001E1E  0E55               	movlw	85
  7118  001E20  6EA7               	movwf	167,c	;volsfr
  7119                           
  7120                           ;Usuaris.c: 72:     EECON2 = 170;
  7121  001E22  0EAA               	movlw	170
  7122  001E24  6EA7               	movwf	167,c	;volsfr
  7123                           
  7124                           ;Usuaris.c: 73:     EECON1bits.WR = 1;
  7125  001E26  82A6               	bsf	166,1,c	;volsfr
  7126  001E28                     l724:
  7127  001E28  B2A6               	btfsc	166,1,c	;volsfr
  7128  001E2A  D7FE               	goto	l724
  7129                           
  7130                           ;Usuaris.c: 75:     INTCONbits.GIE = 1;
  7131  001E2C  8EF2               	bsf	242,7,c	;volatile
  7132                           
  7133                           ;Usuaris.c: 76:     EECON1bits.WREN = 0;
  7134  001E2E  94A6               	bcf	166,2,c	;volsfr
  7135  001E30  0012               	return		;funcret
  7136  001E32                     __end_of_escriureCharEEPROM:
  7137                           	callstack 0
  7138                           
  7139 ;; *************** function _compareStrings *****************
  7140 ;; Defined at:
  7141 ;;		line 128 in file "Usuaris.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  a               1    5[COMRAM] PTR const unsigned char 
  7144 ;;		 -> tmpPassword(9), tmpUsername(9), 
  7145 ;;  b               2    6[COMRAM] PTR const unsigned char 
  7146 ;;		 -> usuaris.password(9), usuaris.username(9), usuaris(144), 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      unsigned char 
  7151 ;; Registers used:
  7152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1
  7158 ;;      Params:         3       0       0
  7159 ;;      Locals:         0       0       0
  7160 ;;      Temps:          2       0       0
  7161 ;;      Totals:         5       0       0
  7162 ;;Total ram usage:        5 bytes
  7163 ;; Hardware stack levels used: 1
  7164 ;; Hardware stack levels required when called: 2
  7165 ;; This function calls:
  7166 ;;		Nothing
  7167 ;; This function is called by:
  7168 ;;		_UmotorUsers
  7169 ;;		_miraPassword
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text58
  7174  001C9C                     __ptext58:
  7175                           	callstack 0
  7176  001C9C                     _compareStrings:
  7177                           	callstack 26
  7178                           
  7179                           ;Usuaris.c: 129:     while (*a){
  7180                           
  7181                           ;incstack = 0
  7182  001C9C  D00A               	goto	l4455
  7183  001C9E                     l4449:
  7184                           
  7185                           ;Usuaris.c: 130:         if (*a != *b)break;
  7186  001C9E  D813               	call	PL56	;call to abstracted procedure
  7187  001CA0  5064               	movf	compareStrings@a^0,w,c
  7188  001CA2  6EE1               	movwf	fsr1l,c
  7189  001CA4  6AE2               	clrf	fsr1h,c
  7190  001CA6  50DE               	movf	postinc2,w,c
  7191  001CA8  18E6               	xorwf	postinc1,w,c
  7192  001CAA  E105               	bnz	u3890
  7193                           
  7194                           ;Usuaris.c: 131:         a++;
  7195  001CAC  2A64               	incf	compareStrings@a^0,f,c
  7196                           
  7197                           ;Usuaris.c: 132:         b++;
  7198  001CAE  4A65               	infsnz	compareStrings@b^0,f,c
  7199  001CB0  2A66               	incf	(compareStrings@b+1)^0,f,c
  7200  001CB2                     l4455:
  7201                           
  7202                           ;Usuaris.c: 129:     while (*a){
  7203  001CB2  D80E               	call	PL72	;call to abstracted procedure
  7204  001CB4  E1F4               	bnz	l4449
  7205  001CB6                     u3890:
  7206                           
  7207                           ;Usuaris.c: 134:     return *(const unsigned char*)a - *(const unsigned char*)b;
  7208  001CB6  D807               	call	PL56	;call to abstracted procedure
  7209  001CB8  50DF               	movf	indf2,w,c
  7210  001CBA  6E67               	movwf	??_compareStrings^0,c
  7211  001CBC  D809               	call	PL72	;call to abstracted procedure
  7212  001CBE  6E68               	movwf	(??_compareStrings+1)^0,c
  7213  001CC0  5067               	movf	??_compareStrings^0,w,c
  7214  001CC2  5C68               	subwf	(??_compareStrings+1)^0,w,c
  7215  001CC4  0012               	return		;funcret
  7216  001CC6                     __end_of_compareStrings:
  7217                           	callstack 0
  7218  001CC6                     PL56:
  7219                           	callstack 26
  7220  001CC6  C065  FFD9         	movff	compareStrings@b,fsr2l
  7221  001CCA  C066  FFDA         	movff	compareStrings@b+1,fsr2h
  7222  001CCE  0012               	return	
  7223  001CD0                     __end_ofPL56:
  7224                           	callstack 0
  7225  001CD0                     PL72:
  7226                           	callstack 26
  7227  001CD0  5064               	movf	compareStrings@a^0,w,c
  7228  001CD2  6ED9               	movwf	fsr2l,c
  7229  001CD4  6ADA               	clrf	fsr2h,c
  7230  001CD6  50DF               	movf	indf2,w,c
  7231  001CD8  0012               	return	
  7232  001CDA                     __end_ofPL72:
  7233                           	callstack 0
  7234                           
  7235 ;; *************** function _Uinit *****************
  7236 ;; Defined at:
  7237 ;;		line 85 in file "Usuaris.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;		None
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;  k               1   12[COMRAM] unsigned char 
  7242 ;;  k               1   11[COMRAM] unsigned char 
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  1    wreg      void 
  7245 ;; Registers used:
  7246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMRAM   BANK0   BANK1
  7252 ;;      Params:         0       0       0
  7253 ;;      Locals:         2       0       0
  7254 ;;      Temps:          2       0       0
  7255 ;;      Totals:         4       0       0
  7256 ;;Total ram usage:        4 bytes
  7257 ;; Hardware stack levels used: 1
  7258 ;; Hardware stack levels required when called: 3
  7259 ;; This function calls:
  7260 ;;		___lbdiv
  7261 ;;		_llegirCharEEPROM
  7262 ;; This function is called by:
  7263 ;;		_main
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text59
  7268  00156A                     __ptext59:
  7269                           	callstack 0
  7270  00156A                     _Uinit:
  7271                           	callstack 27
  7272                           
  7273                           ;Usuaris.c: 89:     i = 0;
  7274                           
  7275                           ;incstack = 0
  7276  00156A  6A2A               	clrf	_i^0,c
  7277                           
  7278                           ;Usuaris.c: 94:     numUsuaris = llegirCharEEPROM(0);
  7279  00156C  0E00               	movlw	0
  7280  00156E  EC3E  F000         	call	_llegirCharEEPROM
  7281  001572  6E2D               	movwf	_numUsuaris^0,c
  7282                           
  7283                           ;Usuaris.c: 96:     if(numUsuaris > 8) numUsuaris = 0;
  7284  001574  0E08               	movlw	8
  7285  001576  642D               	cpfsgt	_numUsuaris^0,c
  7286  001578  D001               	goto	l4987
  7287  00157A  6A2D               	clrf	_numUsuaris^0,c
  7288  00157C                     l4987:
  7289                           
  7290                           ;Usuaris.c: 100:     i++;
  7291  00157C  2A2A               	incf	_i^0,f,c
  7292                           
  7293                           ;Usuaris.c: 101:     indexNextUser = llegirCharEEPROM(1);
  7294  00157E  0E01               	movlw	1
  7295  001580  EC3E  F000         	call	_llegirCharEEPROM
  7296  001584  6E2C               	movwf	_indexNextUser^0,c
  7297                           
  7298                           ;Usuaris.c: 102:     if(indexNextUser == 255) indexNextUser = 2;
  7299  001586  282C               	incf	_indexNextUser^0,w,c
  7300  001588  E102               	bnz	l4995
  7301  00158A  0E02               	movlw	2
  7302  00158C  6E2C               	movwf	_indexNextUser^0,c
  7303  00158E                     l4995:
  7304                           
  7305                           ;Usuaris.c: 103:     indexNextUserStruct = indexNextUser/18;
  7306  00158E  0E12               	movlw	18
  7307  001590  6E64               	movwf	___lbdiv@divisor^0,c
  7308  001592  502C               	movf	_indexNextUser^0,w,c
  7309  001594  ECA8  F00E         	call	___lbdiv
  7310  001598  6E2B               	movwf	_indexNextUserStruct^0,c
  7311                           
  7312                           ;Usuaris.c: 104:     i++;
  7313  00159A  2A2A               	incf	_i^0,f,c
  7314                           
  7315                           ;Usuaris.c: 105:     for(j = 0;j<numUsuaris;j++){
  7316  00159C  6A29               	clrf	_j^0,c
  7317  00159E  D01F               	goto	l5027
  7318  0015A0                     l736:
  7319                           
  7320                           ;Usuaris.c: 106:         for(unsigned char k = 0; k<9; k++){
  7321  0015A0  6A6A               	clrf	Uinit@k^0,c
  7322  0015A2                     l5005:
  7323                           
  7324                           ;Usuaris.c: 107:             usuaris[j].username[k] = llegirCharEEPROM(i);
  7325  0015A2  D83B               	call	PL40	;call to abstracted procedure
  7326  0015A4  D848               	call	PL62	;call to abstracted procedure
  7327  0015A6  506A               	movf	Uinit@k^0,w,c
  7328  0015A8  D83F               	call	PL44	;call to abstracted procedure
  7329  0015AA  EC3E  F000         	call	_llegirCharEEPROM
  7330  0015AE  6EDF               	movwf	indf2,c
  7331                           
  7332                           ;Usuaris.c: 108:             i++;
  7333  0015B0  2A2A               	incf	_i^0,f,c
  7334                           
  7335                           ;Usuaris.c: 109:         }
  7336  0015B2  2A6A               	incf	Uinit@k^0,f,c
  7337  0015B4  0E08               	movlw	8
  7338  0015B6  646A               	cpfsgt	Uinit@k^0,c
  7339  0015B8  D7F4               	goto	l5005
  7340                           
  7341                           ;Usuaris.c: 110:         for(unsigned char k = 0; k<9;k++){
  7342  0015BA  6A6B               	clrf	Uinit@k_1175^0,c
  7343  0015BC                     l5017:
  7344                           
  7345                           ;Usuaris.c: 111:             usuaris[j].password[k] = llegirCharEEPROM(i);
  7346  0015BC  D82E               	call	PL40	;call to abstracted procedure
  7347  0015BE  0E09               	movlw	9
  7348  0015C0  2668               	addwf	??_Uinit^0,f,c
  7349  0015C2  0E00               	movlw	0
  7350  0015C4  2269               	addwfc	(??_Uinit+1)^0,f,c
  7351  0015C6  D837               	call	PL62	;call to abstracted procedure
  7352  0015C8  506B               	movf	Uinit@k_1175^0,w,c
  7353  0015CA  D82E               	call	PL44	;call to abstracted procedure
  7354  0015CC  EC3E  F000         	call	_llegirCharEEPROM
  7355  0015D0  6EDF               	movwf	indf2,c
  7356                           
  7357                           ;Usuaris.c: 112:             i++;
  7358  0015D2  2A2A               	incf	_i^0,f,c
  7359                           
  7360                           ;Usuaris.c: 113:         }
  7361  0015D4  2A6B               	incf	Uinit@k_1175^0,f,c
  7362  0015D6  0E08               	movlw	8
  7363  0015D8  646B               	cpfsgt	Uinit@k_1175^0,c
  7364  0015DA  D7F0               	goto	l5017
  7365                           
  7366                           ;Usuaris.c: 114:     }
  7367  0015DC  2A29               	incf	_j^0,f,c
  7368  0015DE                     l5027:
  7369  0015DE  502D               	movf	_numUsuaris^0,w,c
  7370  0015E0  5C29               	subwf	_j^0,w,c
  7371  0015E2  E3DE               	bnc	l736
  7372                           
  7373                           ;Usuaris.c: 120:     puntuacions[0].indexStruct = -1;
  7374  0015E4  0100               	movlb	0	; () banked
  7375  0015E6  6998               	setf	_puntuacions& (0+255),b
  7376                           
  7377                           ;Usuaris.c: 121:     for(i = 0; i<5; i++){
  7378  0015E8  6A2A               	clrf	_i^0,c
  7379  0015EA                     l5029:
  7380  0015EA  0E04               	movlw	4
  7381  0015EC  642A               	cpfsgt	_i^0,c
  7382  0015EE  D001               	goto	l5033
  7383  0015F0  0C04               	retlw	4
  7384  0015F2                     l5033:
  7385                           
  7386                           ;Usuaris.c: 122:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  7387  0015F2  EC26  F009         	call	PL20	;call to abstracted procedure
  7388  0015F6  502A               	movf	_i^0,w,c
  7389  0015F8  0D02               	mullw	2
  7390  0015FA  50F3               	movf	243,w,c
  7391  0015FC  0FC8               	addlw	200
  7392  0015FE  EC3E  F000         	call	_llegirCharEEPROM
  7393  001602  6EDF               	movwf	indf2,c
  7394                           
  7395                           ;Usuaris.c: 123:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  7396  001604  EC2D  F009         	call	PL22	;call to abstracted procedure
  7397  001608  502A               	movf	_i^0,w,c
  7398  00160A  0D02               	mullw	2
  7399  00160C  50F3               	movf	243,w,c
  7400  00160E  0FC9               	addlw	201
  7401  001610  EC3E  F000         	call	_llegirCharEEPROM
  7402  001614  6EDF               	movwf	indf2,c
  7403                           
  7404                           ;Usuaris.c: 124:     }
  7405  001616  2A2A               	incf	_i^0,f,c
  7406  001618  D7E8               	goto	l5029
  7407  00161A                     __end_of_Uinit:
  7408                           	callstack 0
  7409  00161A                     PL40:
  7410                           	callstack 27
  7411  00161A  5029               	movf	_j^0,w,c
  7412  00161C  0D12               	mullw	18
  7413  00161E  0E00               	movlw	low _usuaris
  7414  001620  6E68               	movwf	??_Uinit^0,c
  7415  001622  0E01               	movlw	high _usuaris
  7416  001624  6E69               	movwf	(??_Uinit+1)^0,c
  7417  001626  0012               	return	
  7418  001628                     __end_ofPL40:
  7419                           	callstack 0
  7420  001628                     PL44:
  7421                           	callstack 27
  7422  001628  2468               	addwf	??_Uinit^0,w,c
  7423  00162A  6ED9               	movwf	fsr2l,c
  7424  00162C  0E00               	movlw	0
  7425  00162E  2069               	addwfc	(??_Uinit+1)^0,w,c
  7426  001630  6EDA               	movwf	fsr2h,c
  7427  001632  502A               	movf	_i^0,w,c
  7428  001634  0012               	return	
  7429  001636                     __end_ofPL44:
  7430                           	callstack 0
  7431  001636                     PL62:
  7432                           	callstack 27
  7433  001636  50F3               	movf	243,w,c
  7434  001638  2668               	addwf	??_Uinit^0,f,c
  7435  00163A  50F4               	movf	244,w,c
  7436  00163C  2269               	addwfc	(??_Uinit+1)^0,f,c
  7437  00163E  0012               	return	
  7438  001640                     __end_ofPL62:
  7439                           	callstack 0
  7440                           
  7441 ;; *************** function _llegirCharEEPROM *****************
  7442 ;; Defined at:
  7443 ;;		line 78 in file "Usuaris.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  pos             1    wreg     unsigned char 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;  pos             1    5[COMRAM] unsigned char 
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  1    wreg      unsigned char 
  7450 ;; Registers used:
  7451 ;;		wreg, status,2
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1
  7457 ;;      Params:         0       0       0
  7458 ;;      Locals:         1       0       0
  7459 ;;      Temps:          0       0       0
  7460 ;;      Totals:         1       0       0
  7461 ;;Total ram usage:        1 bytes
  7462 ;; Hardware stack levels used: 1
  7463 ;; Hardware stack levels required when called: 2
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_Uinit
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text60
  7472  00007C                     __ptext60:
  7473                           	callstack 0
  7474  00007C                     _llegirCharEEPROM:
  7475                           	callstack 27
  7476                           
  7477                           ;incstack = 0
  7478                           ;llegirCharEEPROM@pos stored from wreg
  7479  00007C  6E64               	movwf	llegirCharEEPROM@pos^0,c
  7480                           
  7481                           ;Usuaris.c: 79:     EEADR = pos;
  7482  00007E  C064  FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  7483                           
  7484                           ;Usuaris.c: 80:     EECON1bits.EEPGD = 0;
  7485  000082  9EA6               	bcf	166,7,c	;volsfr
  7486                           
  7487                           ;Usuaris.c: 81:     EECON1bits.CFGS = 0;
  7488  000084  9CA6               	bcf	166,6,c	;volsfr
  7489                           
  7490                           ;Usuaris.c: 82:     EECON1bits.RD = 1;
  7491  000086  80A6               	bsf	166,0,c	;volsfr
  7492                           
  7493                           ;Usuaris.c: 83:     return EEDATA;
  7494  000088  50A8               	movf	168,w,c	;volatile
  7495  00008A  0012               	return		;funcret
  7496  00008C                     __end_of_llegirCharEEPROM:
  7497                           	callstack 0
  7498                           
  7499 ;; *************** function ___lbdiv *****************
  7500 ;; Defined at:
  7501 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lbdiv.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  dividend        1    wreg     unsigned char 
  7504 ;;  divisor         1    5[COMRAM] unsigned char 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  dividend        1    6[COMRAM] unsigned char 
  7507 ;;  quotient        1    8[COMRAM] unsigned char 
  7508 ;;  counter         1    7[COMRAM] unsigned char 
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  1    wreg      unsigned char 
  7511 ;; Registers used:
  7512 ;;		wreg, status,2, status,0
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1
  7518 ;;      Params:         1       0       0
  7519 ;;      Locals:         3       0       0
  7520 ;;      Temps:          0       0       0
  7521 ;;      Totals:         4       0       0
  7522 ;;Total ram usage:        4 bytes
  7523 ;; Hardware stack levels used: 1
  7524 ;; Hardware stack levels required when called: 2
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_Uinit
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text61
  7533  001D50                     __ptext61:
  7534                           	callstack 0
  7535  001D50                     ___lbdiv:
  7536                           	callstack 27
  7537                           
  7538                           ;incstack = 0
  7539                           ;___lbdiv@dividend stored from wreg
  7540  001D50  6E65               	movwf	___lbdiv@dividend^0,c
  7541  001D52  6A67               	clrf	___lbdiv@quotient^0,c
  7542  001D54  5064               	movf	___lbdiv@divisor^0,w,c
  7543  001D56  E014               	bz	l4699
  7544  001D58  0E01               	movlw	1
  7545  001D5A  6E66               	movwf	___lbdiv@counter^0,c
  7546  001D5C  D003               	goto	l4687
  7547  001D5E                     l4683:
  7548  001D5E  90D8               	bcf	status,0,c
  7549  001D60  3664               	rlcf	___lbdiv@divisor^0,f,c
  7550  001D62  2A66               	incf	___lbdiv@counter^0,f,c
  7551  001D64                     l4687:
  7552  001D64  AE64               	btfss	___lbdiv@divisor^0,7,c
  7553  001D66  D7FB               	goto	l4683
  7554  001D68                     u4040:
  7555  001D68  90D8               	bcf	status,0,c
  7556  001D6A  3667               	rlcf	___lbdiv@quotient^0,f,c
  7557  001D6C  5064               	movf	___lbdiv@divisor^0,w,c
  7558  001D6E  5C65               	subwf	___lbdiv@dividend^0,w,c
  7559  001D70  E303               	bnc	l4695
  7560  001D72  5064               	movf	___lbdiv@divisor^0,w,c
  7561  001D74  5E65               	subwf	___lbdiv@dividend^0,f,c
  7562  001D76  8067               	bsf	___lbdiv@quotient^0,0,c
  7563  001D78                     l4695:
  7564  001D78  90D8               	bcf	status,0,c
  7565  001D7A  3264               	rrcf	___lbdiv@divisor^0,f,c
  7566  001D7C  2E66               	decfsz	___lbdiv@counter^0,f,c
  7567  001D7E  D7F4               	goto	u4040
  7568  001D80                     l4699:
  7569  001D80  5067               	movf	___lbdiv@quotient^0,w,c
  7570  001D82  0012               	return		;funcret
  7571  001D84                     __end_of___lbdiv:
  7572                           	callstack 0
  7573                           
  7574 ;; *************** function _TiInitTimer *****************
  7575 ;; Defined at:
  7576 ;;		line 18 in file "TiTTimer.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;		None
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;		None
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  1    wreg      void 
  7583 ;; Registers used:
  7584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMRAM   BANK0   BANK1
  7590 ;;      Params:         0       0       0
  7591 ;;      Locals:         0       0       0
  7592 ;;      Temps:          0       0       0
  7593 ;;      Totals:         0       0       0
  7594 ;;Total ram usage:        0 bytes
  7595 ;; Hardware stack levels used: 1
  7596 ;; Hardware stack levels required when called: 2
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_main
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604                           	psect	text62
  7605  001DE4                     __ptext62:
  7606                           	callstack 0
  7607  001DE4                     _TiInitTimer:
  7608                           	callstack 28
  7609                           
  7610                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7611                           
  7612                           ;incstack = 0
  7613  001DE4  9ED0               	bcf	208,7,c	;volatile
  7614                           
  7615                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7616  001DE6  8EF2               	bsf	242,7,c	;volatile
  7617                           
  7618                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7619  001DE8  8CF2               	bsf	242,6,c	;volatile
  7620                           
  7621                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7622  001DEA  8AF2               	bsf	242,5,c	;volatile
  7623                           
  7624                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7625  001DEC  94F2               	bcf	242,2,c	;volatile
  7626                           
  7627                           ;TiTTimer.c: 25:     T0CON = 136;
  7628  001DEE  0E88               	movlw	136
  7629  001DF0  6ED5               	movwf	213,c	;volatile
  7630                           
  7631                           ;TiTTimer.c: 27:     TMR0H = 223;
  7632                           
  7633                           ;TiTTimer.c: 28:     TMR0L = 148;
  7634  001DF2  EC49  F00E         	call	PL84	;call to abstracted procedure
  7635                           
  7636                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7637  001DF6  8ED5               	bsf	213,7,c	;volatile
  7638                           
  7639                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  7640  001DF8  6A34               	clrf	_counter^0,c
  7641  001DFA                     l4793:
  7642  001DFA  0E07               	movlw	7
  7643  001DFC  6434               	cpfsgt	_counter^0,c
  7644  001DFE  D001               	goto	l4797
  7645  001E00  0C07               	retlw	7
  7646  001E02                     l4797:
  7647                           
  7648                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7649  001E02  ECEB  F00E         	call	PL16	;call to abstracted procedure
  7650  001E06  6ADF               	clrf	indf2,c
  7651                           
  7652                           ;TiTTimer.c: 33:     }
  7653  001E08  2A34               	incf	_counter^0,f,c
  7654  001E0A  D7F7               	goto	l4793
  7655  001E0C                     __end_of_TiInitTimer:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function _TeTeclat *****************
  7659 ;; Defined at:
  7660 ;;		line 21 in file "TeTeclat.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;		None
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;		None
  7665 ;; Return value:  Size  Location     Type
  7666 ;;                  1    wreg      void 
  7667 ;; Registers used:
  7668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/0
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMRAM   BANK0   BANK1
  7674 ;;      Params:         0       0       0
  7675 ;;      Locals:         0       0       0
  7676 ;;      Temps:          3       0       0
  7677 ;;      Totals:         3       0       0
  7678 ;;Total ram usage:        3 bytes
  7679 ;; Hardware stack levels used: 1
  7680 ;; Hardware stack levels required when called: 3
  7681 ;; This function calls:
  7682 ;;		_MsetNovaTecla
  7683 ;;		_SsetNovaTecla
  7684 ;;		_TiGetTics
  7685 ;;		_TiResetTics
  7686 ;; This function is called by:
  7687 ;;		_main
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text63
  7692  001430                     __ptext63:
  7693                           	callstack 0
  7694  001430                     _TeTeclat:
  7695                           	callstack 27
  7696                           
  7697                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7698                           
  7699                           ;incstack = 0
  7700  001430  A083               	btfss	131,0,c	;volatile
  7701  001432  D003               	goto	u6800
  7702  001434  6A6B               	clrf	??_TeTeclat^0,c
  7703  001436  2A6B               	incf	??_TeTeclat^0,f,c
  7704  001438  D001               	goto	u6808
  7705  00143A                     u6800:
  7706  00143A  6A6B               	clrf	??_TeTeclat^0,c
  7707  00143C                     u6808:
  7708  00143C  0E01               	movlw	1
  7709  00143E  A283               	btfss	131,1,c	;volatile
  7710  001440  0E00               	movlw	0
  7711  001442  0D02               	mullw	2
  7712  001444  CFF3 F06C          	movff	prodl,??_TeTeclat+1
  7713  001448  0E01               	movlw	1
  7714  00144A  A483               	btfss	131,2,c	;volatile
  7715  00144C  0E00               	movlw	0
  7716  00144E  0D03               	mullw	3
  7717  001450  CFF3 F06D          	movff	prodl,??_TeTeclat+2
  7718  001454  0E01               	movlw	1
  7719  001456  A683               	btfss	131,3,c	;volatile
  7720  001458  0E00               	movlw	0
  7721  00145A  0D04               	mullw	4
  7722  00145C  50F3               	movf	243,w,c
  7723  00145E  246D               	addwf	(??_TeTeclat+2)^0,w,c
  7724  001460  246C               	addwf	(??_TeTeclat+1)^0,w,c
  7725  001462  246B               	addwf	??_TeTeclat^0,w,c
  7726  001464  6E35               	movwf	TeTeclat@files^0,c
  7727                           
  7728                           ;TeTeclat.c: 26:  switch(state) {
  7729  001466  D05A               	goto	l6389
  7730  001468                     l6315:
  7731                           
  7732                           ;TeTeclat.c: 28:    if (files==0) {
  7733  001468  5035               	movf	TeTeclat@files^0,w,c
  7734  00146A  E106               	bnz	l6321
  7735                           
  7736                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  7737  00146C  888C               	bsf	140,4,c	;volatile
  7738                           
  7739                           ;TeTeclat.c: 30:     LATDbits.LD5=0;
  7740  00146E  9A8C               	bcf	140,5,c	;volatile
  7741                           
  7742                           ;TeTeclat.c: 31:     LATDbits.LD6=0;
  7743  001470  9C8C               	bcf	140,6,c	;volatile
  7744                           
  7745                           ;TeTeclat.c: 32:     cols=0;
  7746  001472  6A36               	clrf	TeTeclat@cols^0,c
  7747  001474                     l6319:
  7748                           
  7749                           ;TeTeclat.c: 33:     state++;
  7750  001474  2A37               	incf	TeTeclat@state^0,f,c
  7751                           
  7752                           ;TeTeclat.c: 34:    }
  7753  001476  0012               	return	
  7754  001478                     l6321:
  7755  001478  5035               	movf	TeTeclat@files^0,w,c
  7756  00147A  B4D8               	btfsc	status,2,c
  7757  00147C  0012               	return	
  7758                           
  7759                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  7760  00147E  5038               	movf	_tiTeclat^0,w,c
  7761  001480  ECC1  F00F         	call	_TiResetTics
  7762  001484                     l6325:
  7763                           
  7764                           ;TeTeclat.c: 37:     state = 3;
  7765  001484  0E03               	movlw	3
  7766  001486  6E37               	movwf	TeTeclat@state^0,c
  7767  001488  0C03               	retlw	3
  7768  00148A                     l6327:
  7769                           
  7770                           ;TeTeclat.c: 41:    if (files==0) {
  7771  00148A  5035               	movf	TeTeclat@files^0,w,c
  7772  00148C  E106               	bnz	l6335
  7773                           
  7774                           ;TeTeclat.c: 42:     LATDbits.LD4=0;
  7775  00148E  988C               	bcf	140,4,c	;volatile
  7776                           
  7777                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  7778  001490  8A8C               	bsf	140,5,c	;volatile
  7779                           
  7780                           ;TeTeclat.c: 44:     LATDbits.LD6=0;
  7781  001492  9C8C               	bcf	140,6,c	;volatile
  7782                           
  7783                           ;TeTeclat.c: 45:     cols=1;
  7784  001494  0E01               	movlw	1
  7785  001496  6E36               	movwf	TeTeclat@cols^0,c
  7786  001498  D7ED               	goto	l6319
  7787  00149A                     l6335:
  7788  00149A  5035               	movf	TeTeclat@files^0,w,c
  7789  00149C  B4D8               	btfsc	status,2,c
  7790  00149E  0012               	return	
  7791                           
  7792                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  7793  0014A0  5038               	movf	_tiTeclat^0,w,c
  7794  0014A2  ECC1  F00F         	call	_TiResetTics
  7795  0014A6  D7EE               	goto	l6325
  7796  0014A8                     l6341:
  7797                           
  7798                           ;TeTeclat.c: 54:    if (files==0) {
  7799  0014A8  5035               	movf	TeTeclat@files^0,w,c
  7800  0014AA  E107               	bnz	l6349
  7801                           
  7802                           ;TeTeclat.c: 55:     LATDbits.LD4=0;
  7803  0014AC  988C               	bcf	140,4,c	;volatile
  7804                           
  7805                           ;TeTeclat.c: 56:     LATDbits.LD5=0;
  7806  0014AE  9A8C               	bcf	140,5,c	;volatile
  7807                           
  7808                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  7809  0014B0  8C8C               	bsf	140,6,c	;volatile
  7810                           
  7811                           ;TeTeclat.c: 58:     cols=2;
  7812  0014B2  0E02               	movlw	2
  7813  0014B4  6E36               	movwf	TeTeclat@cols^0,c
  7814  0014B6                     l6347:
  7815                           
  7816                           ;TeTeclat.c: 59:     state = 0;
  7817  0014B6  6A37               	clrf	TeTeclat@state^0,c
  7818                           
  7819                           ;TeTeclat.c: 60:    }
  7820  0014B8  0012               	return	
  7821  0014BA                     l6349:
  7822  0014BA  5035               	movf	TeTeclat@files^0,w,c
  7823  0014BC  B4D8               	btfsc	status,2,c
  7824  0014BE  0012               	return	
  7825                           
  7826                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  7827  0014C0  5038               	movf	_tiTeclat^0,w,c
  7828  0014C2  ECC1  F00F         	call	_TiResetTics
  7829  0014C6  D7D6               	goto	l6319
  7830  0014C8                     l6355:
  7831                           
  7832                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  7833  0014C8  5038               	movf	_tiTeclat^0,w,c
  7834  0014CA  EC19  F00F         	call	_TiGetTics
  7835  0014CE  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  7836  0014D0  0012               	return	
  7837  0014D2  D7D0               	goto	l6319
  7838  0014D4                     l6359:
  7839                           
  7840                           ;TeTeclat.c: 72:    if (files==0) {
  7841  0014D4  5035               	movf	TeTeclat@files^0,w,c
  7842  0014D6  E103               	bnz	l6363
  7843                           
  7844                           ;TeTeclat.c: 73:     state = 1;
  7845  0014D8  0E01               	movlw	1
  7846  0014DA  6E37               	movwf	TeTeclat@state^0,c
  7847                           
  7848                           ;TeTeclat.c: 74:    }
  7849  0014DC  0C01               	retlw	1
  7850  0014DE                     l6363:
  7851  0014DE  5035               	movf	TeTeclat@files^0,w,c
  7852  0014E0  B4D8               	btfsc	status,2,c
  7853  0014E2  0012               	return	
  7854                           
  7855                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7856  0014E4  D837               	call	PL14	;call to abstracted procedure
  7857  0014E6  D831               	call	PL6	;call to abstracted procedure
  7858  0014E8  ECB4  F000         	call	_MsetNovaTecla
  7859                           
  7860                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7861  0014EC  D833               	call	PL14	;call to abstracted procedure
  7862  0014EE  D82D               	call	PL6	;call to abstracted procedure
  7863  0014F0  ECB0  F000         	call	_SsetNovaTecla
  7864  0014F4  D7BF               	goto	l6319
  7865  0014F6                     l6369:
  7866                           
  7867                           ;TeTeclat.c: 82:    if (files==0) {
  7868  0014F6  5035               	movf	TeTeclat@files^0,w,c
  7869  0014F8  A4D8               	btfss	status,2,c
  7870  0014FA  0012               	return	
  7871                           
  7872                           ;TeTeclat.c: 83:     TiResetTics(tiTeclat);
  7873  0014FC  5038               	movf	_tiTeclat^0,w,c
  7874  0014FE  ECC1  F00F         	call	_TiResetTics
  7875  001502  D7B8               	goto	l6319
  7876  001504                     l6375:
  7877                           
  7878                           ;TeTeclat.c: 88:    if (TiGetTics(tiTeclat)>=0) {
  7879  001504  5038               	movf	_tiTeclat^0,w,c
  7880  001506  EC19  F00F         	call	_TiGetTics
  7881  00150A  D7E1               	goto	L3
  7882  00150C                     l6379:
  7883                           
  7884                           ;TeTeclat.c: 93:    if (files!=0) {
  7885  00150C  5035               	movf	TeTeclat@files^0,w,c
  7886  00150E  E003               	bz	l6383
  7887                           
  7888                           ;TeTeclat.c: 94:     state = 5;
  7889  001510  0E05               	movlw	5
  7890  001512  6E37               	movwf	TeTeclat@state^0,c
  7891                           
  7892                           ;TeTeclat.c: 95:    }
  7893  001514  0C05               	retlw	5
  7894  001516                     l6383:
  7895  001516  5035               	movf	TeTeclat@files^0,w,c
  7896  001518  E0CE               	bz	l6347
  7897  00151A  0012               	return	
  7898  00151C                     l6389:
  7899  00151C  5037               	movf	TeTeclat@state^0,w,c
  7900  00151E  6E6B               	movwf	??_TeTeclat^0,c
  7901  001520  6A6C               	clrf	(??_TeTeclat+1)^0,c
  7902                           
  7903                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7904                           ; Switch size 1, requested type "space"
  7905                           ; Number of cases is 1, Range of values is 0 to 0
  7906                           ; switch strategies available:
  7907                           ; Name         Instructions Cycles
  7908                           ; simple_byte            4     3 (average)
  7909                           ;	Chosen strategy is simple_byte
  7910  001522  506C               	movf	(??_TeTeclat+1)^0,w,c
  7911  001524  A4D8               	btfss	status,2,c
  7912  001526  0012               	return	
  7913                           
  7914                           ; Switch size 1, requested type "space"
  7915                           ; Number of cases is 8, Range of values is 0 to 7
  7916                           ; switch strategies available:
  7917                           ; Name         Instructions Cycles
  7918                           ; simple_byte           25    13 (average)
  7919                           ;	Chosen strategy is simple_byte
  7920  001528  506B               	movf	??_TeTeclat^0,w,c
  7921  00152A  E09E               	bz	l6315
  7922  00152C  0A01               	xorlw	1	; case 1
  7923  00152E  E0AD               	bz	l6327
  7924  001530  0A03               	xorlw	3	; case 2
  7925  001532  E0BA               	bz	l6341
  7926  001534  0A01               	xorlw	1	; case 3
  7927  001536  E0C8               	bz	l6355
  7928  001538  0A07               	xorlw	7	; case 4
  7929  00153A  E0CC               	bz	l6359
  7930  00153C  0A01               	xorlw	1	; case 5
  7931  00153E  E0DB               	bz	l6369
  7932  001540  0A03               	xorlw	3	; case 6
  7933  001542  E0E0               	bz	l6375
  7934  001544  0A01               	xorlw	1	; case 7
  7935  001546  E0E2               	bz	l6379
  7936  001548  0012               	return		;funcret
  7937  00154A                     __end_of_TeTeclat:
  7938                           	callstack 0
  7939  00154A                     PL6:
  7940                           	callstack 27
  7941  00154A  0E02               	movlw	high __smallconst
  7942  00154C  6EF7               	movwf	tblptrh,c
  7943  00154E                     	endif
  7944  00154E                     	if	0	;tblptru may be non-zero
  7945  00154E                     	endif
  7946  00154E                     	if	0	;tblptru may be non-zero
  7947  00154E                     	endif
  7948  00154E  0008               	tblrd		*
  7949  001550  50F5               	movf	tablat,w,c
  7950  001552  0012               	return	
  7951  001554                     __end_ofPL6:
  7952                           	callstack 0
  7953  001554                     PL14:
  7954                           	callstack 27
  7955  001554  5035               	movf	TeTeclat@files^0,w,c
  7956  001556  0D03               	mullw	3
  7957  001558  50F3               	movf	243,w,c
  7958  00155A  0F92               	addlw	low _teclaPremuda
  7959  00155C  2436               	addwf	TeTeclat@cols^0,w,c
  7960  00155E  6E6B               	movwf	??_TeTeclat^0,c
  7961  001560  0EFD               	movlw	253
  7962  001562  266B               	addwf	??_TeTeclat^0,f,c
  7963  001564  C06B  FFF6         	movff	??_TeTeclat,tblptrl
  7964  001568                     	if	1	;There is more than 1 active tblptr byte
  7965  001568  0CFD               	retlw	253
  7966  00156A                     __end_ofPL14:
  7967                           	callstack 0
  7968                           
  7969 ;; *************** function _SsetNovaTecla *****************
  7970 ;; Defined at:
  7971 ;;		line 124 in file "Ssms.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  tecla           1    wreg     unsigned char 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  tecla           1    5[COMRAM] unsigned char 
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  1    wreg      void 
  7978 ;; Registers used:
  7979 ;;		wreg
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMRAM   BANK0   BANK1
  7985 ;;      Params:         0       0       0
  7986 ;;      Locals:         1       0       0
  7987 ;;      Temps:          0       0       0
  7988 ;;      Totals:         1       0       0
  7989 ;;Total ram usage:        1 bytes
  7990 ;; Hardware stack levels used: 1
  7991 ;; Hardware stack levels required when called: 2
  7992 ;; This function calls:
  7993 ;;		Nothing
  7994 ;; This function is called by:
  7995 ;;		_TeTeclat
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text64
  8000  000160                     __ptext64:
  8001                           	callstack 0
  8002  000160                     _SsetNovaTecla:
  8003                           	callstack 27
  8004                           
  8005                           ;incstack = 0
  8006                           ;SsetNovaTecla@tecla stored from wreg
  8007  000160  6E64               	movwf	SsetNovaTecla@tecla^0,c
  8008                           
  8009                           ;Ssms.c: 125:     novaTecla = tecla;
  8010  000162  C064  F054         	movff	SsetNovaTecla@tecla,_novaTecla
  8011  000166  0012               	return		;funcret
  8012  000168                     __end_of_SsetNovaTecla:
  8013                           	callstack 0
  8014                           
  8015 ;; *************** function _MsetNovaTecla *****************
  8016 ;; Defined at:
  8017 ;;		line 31 in file "Menu.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  tecla           1    wreg     unsigned char 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  tecla           1    5[COMRAM] unsigned char 
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  1    wreg      void 
  8024 ;; Registers used:
  8025 ;;		wreg
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1
  8031 ;;      Params:         0       0       0
  8032 ;;      Locals:         1       0       0
  8033 ;;      Temps:          0       0       0
  8034 ;;      Totals:         1       0       0
  8035 ;;Total ram usage:        1 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; Hardware stack levels required when called: 2
  8038 ;; This function calls:
  8039 ;;		Nothing
  8040 ;; This function is called by:
  8041 ;;		_TeTeclat
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text65
  8046  000168                     __ptext65:
  8047                           	callstack 0
  8048  000168                     _MsetNovaTecla:
  8049                           	callstack 27
  8050                           
  8051                           ;incstack = 0
  8052                           ;MsetNovaTecla@tecla stored from wreg
  8053  000168  6E64               	movwf	MsetNovaTecla@tecla^0,c
  8054                           
  8055                           ;Menu.c: 32:     NovaTecla = tecla;
  8056  00016A  C064  F052         	movff	MsetNovaTecla@tecla,_NovaTecla
  8057  00016E  0012               	return		;funcret
  8058  000170                     __end_of_MsetNovaTecla:
  8059                           	callstack 0
  8060                           
  8061 ;; *************** function _TeInit *****************
  8062 ;; Defined at:
  8063 ;;		line 17 in file "TeTeclat.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1
  8077 ;;      Params:         0       0       0
  8078 ;;      Locals:         0       0       0
  8079 ;;      Temps:          0       0       0
  8080 ;;      Totals:         0       0       0
  8081 ;;Total ram usage:        0 bytes
  8082 ;; Hardware stack levels used: 1
  8083 ;; Hardware stack levels required when called: 3
  8084 ;; This function calls:
  8085 ;;		_TiGetTimer
  8086 ;; This function is called by:
  8087 ;;		_main
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text66
  8092  000170                     __ptext66:
  8093                           	callstack 0
  8094  000170                     _TeInit:
  8095                           	callstack 27
  8096                           
  8097                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  8098                           
  8099                           ;incstack = 0
  8100  000170  ECDC  F00E         	call	_TiGetTimer	;wreg free
  8101  000174  6E38               	movwf	_tiTeclat^0,c
  8102  000176  0012               	return		;funcret
  8103  000178                     __end_of_TeInit:
  8104                           	callstack 0
  8105                           
  8106 ;; *************** function _Sinit *****************
  8107 ;; Defined at:
  8108 ;;		line 18 in file "Ssms.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;		None
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;		None
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  1    wreg      void 
  8115 ;; Registers used:
  8116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1
  8122 ;;      Params:         0       0       0
  8123 ;;      Locals:         0       0       0
  8124 ;;      Temps:          0       0       0
  8125 ;;      Totals:         0       0       0
  8126 ;;Total ram usage:        0 bytes
  8127 ;; Hardware stack levels used: 1
  8128 ;; Hardware stack levels required when called: 3
  8129 ;; This function calls:
  8130 ;;		_TiGetTimer
  8131 ;; This function is called by:
  8132 ;;		_main
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           	psect	text67
  8137  000178                     __ptext67:
  8138                           	callstack 0
  8139  000178                     _Sinit:
  8140                           	callstack 27
  8141                           
  8142                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  8143                           
  8144                           ;incstack = 0
  8145  000178  ECDC  F00E         	call	_TiGetTimer	;wreg free
  8146  00017C  6E3B               	movwf	_timerSMS^0,c
  8147  00017E  0012               	return		;funcret
  8148  000180                     __end_of_Sinit:
  8149                           	callstack 0
  8150                           
  8151 ;; *************** function _SMotor *****************
  8152 ;; Defined at:
  8153 ;;		line 22 in file "Ssms.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;		None
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;		None
  8158 ;; Return value:  Size  Location     Type
  8159 ;;                  1    wreg      void 
  8160 ;; Registers used:
  8161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8162 ;; Tracked objects:
  8163 ;;		On entry : 0/0
  8164 ;;		On exit  : 0/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMRAM   BANK0   BANK1
  8167 ;;      Params:         0       0       0
  8168 ;;      Locals:         0       0       0
  8169 ;;      Temps:          2       0       0
  8170 ;;      Totals:         2       0       0
  8171 ;;Total ram usage:        2 bytes
  8172 ;; Hardware stack levels used: 1
  8173 ;; Hardware stack levels required when called: 3
  8174 ;; This function calls:
  8175 ;;		_MNovaLletra
  8176 ;;		_TiGetTics
  8177 ;;		_TiResetTics
  8178 ;; This function is called by:
  8179 ;;		_main
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text68
  8184  001282                     __ptext68:
  8185                           	callstack 0
  8186  001282                     _SMotor:
  8187                           	callstack 27
  8188                           
  8189                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  8190                           
  8191                           ;incstack = 0
  8192  001282  D0BA               	goto	l4965
  8193  001284                     l4809:
  8194                           
  8195                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  8196  001284  2854               	incf	_novaTecla^0,w,c
  8197  001286  E008               	bz	l4817
  8198  001288  A277               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8199  00128A  D006               	goto	l4817
  8200                           
  8201                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  8202  00128C  503B               	movf	_timerSMS^0,w,c
  8203  00128E  ECC1  F00F         	call	_TiResetTics
  8204                           
  8205                           ;Ssms.c: 29:     state = 3;
  8206  001292  0E03               	movlw	3
  8207  001294  6E39               	movwf	SMotor@state^0,c
  8208                           
  8209                           ;Ssms.c: 30:    }
  8210  001296  0C03               	retlw	3
  8211  001298                     l4817:
  8212  001298  2854               	incf	_novaTecla^0,w,c
  8213  00129A  A4D8               	btfss	status,2,c
  8214  00129C  0012               	return	
  8215  00129E  503B               	movf	_timerSMS^0,w,c
  8216  0012A0  EC19  F00F         	call	_TiGetTics
  8217  0012A4  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  8218  0012A6  0012               	return	
  8219  0012A8  D8BE               	call	PL76	;call to abstracted procedure
  8220  0012AA  A0D8               	btfss	status,0,c
  8221  0012AC  0012               	return	
  8222  0012AE  2855               	incf	_lletraASCII^0,w,c
  8223  0012B0  A4D8               	btfss	status,2,c
  8224  0012B2  A277               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8225  0012B4  0012               	return	
  8226                           
  8227                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  8228  0012B6  5055               	movf	_lletraASCII^0,w,c
  8229  0012B8  ECC0  F000         	call	_MNovaLletra
  8230                           
  8231                           ;Ssms.c: 33:     lletraASCII = -1;
  8232  0012BC  6855               	setf	_lletraASCII^0,c
  8233                           
  8234                           ;Ssms.c: 34:     ultimaTecla = -1;
  8235  0012BE  6853               	setf	_ultimaTecla^0,c
  8236                           
  8237                           ;Ssms.c: 35:     zeroTecla = 0;
  8238  0012C0  6A3A               	clrf	_zeroTecla^0,c
  8239  0012C2  0012               	return	
  8240  0012C4                     l4833:
  8241                           
  8242                           ;Ssms.c: 39:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  8243  0012C4  5053               	movf	_ultimaTecla^0,w,c
  8244  0012C6  1854               	xorwf	_novaTecla^0,w,c
  8245  0012C8  E10C               	bnz	l4841
  8246  0012CA  503B               	movf	_timerSMS^0,w,c
  8247  0012CC  EC19  F00F         	call	_TiGetTics
  8248  0012D0  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  8249  0012D2  D002               	goto	u4220
  8250  0012D4  D8A8               	call	PL76	;call to abstracted procedure
  8251  0012D6  E205               	bc	l4841
  8252  0012D8                     u4220:
  8253                           
  8254                           ;Ssms.c: 40:     novaTecla = -1;
  8255  0012D8  6854               	setf	_novaTecla^0,c
  8256                           
  8257                           ;Ssms.c: 41:     sumaPulsacions++;
  8258  0012DA  2A3C               	incf	_sumaPulsacions^0,f,c
  8259                           
  8260                           ;Ssms.c: 42:     lletraASCII++;
  8261  0012DC  2A55               	incf	_lletraASCII^0,f,c
  8262                           
  8263                           ;Ssms.c: 43:     state++;
  8264  0012DE  2A39               	incf	SMotor@state^0,f,c
  8265                           
  8266                           ;Ssms.c: 44:    }
  8267  0012E0  0012               	return	
  8268  0012E2                     l4841:
  8269  0012E2  2854               	incf	_novaTecla^0,w,c
  8270  0012E4  B4D8               	btfsc	status,2,c
  8271  0012E6  0012               	return	
  8272  0012E8  5053               	movf	_ultimaTecla^0,w,c
  8273  0012EA  1854               	xorwf	_novaTecla^0,w,c
  8274  0012EC  B4D8               	btfsc	status,2,c
  8275  0012EE  0012               	return	
  8276                           
  8277                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  8278  0012F0  5055               	movf	_lletraASCII^0,w,c
  8279  0012F2  ECC0  F000         	call	_MNovaLletra
  8280                           
  8281                           ;Ssms.c: 47:     if(novaTecla != 0){
  8282  0012F6  5054               	movf	_novaTecla^0,w,c
  8283  0012F8  E005               	bz	l4851
  8284                           
  8285                           ;Ssms.c: 48:       lletraASCII = lletraInici[novaTecla-2];
  8286  0012FA  5054               	movf	_novaTecla^0,w,c
  8287  0012FC  0FBA               	addlw	low (_lletraInici+254)
  8288  0012FE  EC3D  F009         	call	PL60	;call to abstracted procedure
  8289  001302  D001               	goto	L4
  8290  001304                     l4851:
  8291                           
  8292                           ;Ssms.c: 50:       lletraASCII = '0';
  8293  001304  0E30               	movlw	48
  8294  001306                     L4:
  8295  001306  6E55               	movwf	_lletraASCII^0,c
  8296                           
  8297                           ;Ssms.c: 52:     zeroTecla=0;
  8298  001308  6A3A               	clrf	_zeroTecla^0,c
  8299                           
  8300                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  8301  00130A  C054  F053         	movff	_novaTecla,_ultimaTecla
  8302                           
  8303                           ;Ssms.c: 54:     sumaPulsacions = 0;
  8304  00130E  6A3C               	clrf	_sumaPulsacions^0,c
  8305                           
  8306                           ;Ssms.c: 55:     novaTecla = -1;
  8307  001310  6854               	setf	_novaTecla^0,c
  8308                           
  8309                           ;Ssms.c: 56:     state--;
  8310  001312  0639               	decf	SMotor@state^0,f,c
  8311  001314  0012               	return	
  8312  001316                     l4863:
  8313                           
  8314                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  8315  001316  0E07               	movlw	7
  8316  001318  1853               	xorwf	_ultimaTecla^0,w,c
  8317  00131A  E008               	bz	l4871
  8318  00131C  0E09               	movlw	9
  8319  00131E  1853               	xorwf	_ultimaTecla^0,w,c
  8320  001320  E005               	bz	l4871
  8321  001322  5053               	movf	_ultimaTecla^0,w,c
  8322  001324  E003               	bz	l4871
  8323                           
  8324                           ;Ssms.c: 61:     state = 5;
  8325  001326  0E05               	movlw	5
  8326  001328  6E39               	movwf	SMotor@state^0,c
  8327                           
  8328                           ;Ssms.c: 62:    }
  8329  00132A  0C05               	retlw	5
  8330  00132C                     l4871:
  8331  00132C  0E07               	movlw	7
  8332  00132E  1853               	xorwf	_ultimaTecla^0,w,c
  8333  001330  E003               	bz	u4300
  8334  001332  0E09               	movlw	9
  8335  001334  1853               	xorwf	_ultimaTecla^0,w,c
  8336  001336  E103               	bnz	l4877
  8337  001338                     u4300:
  8338                           
  8339                           ;Ssms.c: 64:     state = 6;
  8340  001338  0E06               	movlw	6
  8341  00133A  6E39               	movwf	SMotor@state^0,c
  8342                           
  8343                           ;Ssms.c: 65:    }
  8344  00133C  0C06               	retlw	6
  8345  00133E                     l4877:
  8346  00133E  5053               	movf	_ultimaTecla^0,w,c
  8347  001340  A4D8               	btfss	status,2,c
  8348  001342  0012               	return	
  8349                           
  8350                           ;Ssms.c: 67:     zeroTecla++;
  8351  001344  2A3A               	incf	_zeroTecla^0,f,c
  8352                           
  8353                           ;Ssms.c: 68:     if(zeroTecla == 2) zeroTecla = 0;
  8354  001346  0E02               	movlw	2
  8355  001348  183A               	xorwf	_zeroTecla^0,w,c
  8356  00134A  E101               	bnz	l4885
  8357  00134C  6A3A               	clrf	_zeroTecla^0,c
  8358  00134E                     l4885:
  8359                           
  8360                           ;Ssms.c: 69:     lletraASCII = arrayZero[zeroTecla];
  8361  00134E  503A               	movf	_zeroTecla^0,w,c
  8362  001350  0F45               	addlw	low _arrayZero
  8363  001352  EC3D  F009         	call	PL60	;call to abstracted procedure
  8364  001356  6E55               	movwf	_lletraASCII^0,c
  8365  001358                     l4887:
  8366                           
  8367                           ;Ssms.c: 70:     state = 0;
  8368  001358  6A39               	clrf	SMotor@state^0,c
  8369  00135A  0012               	return	
  8370  00135C                     l4889:
  8371                           
  8372                           ;Ssms.c: 74:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  8373  00135C  5054               	movf	_novaTecla^0,w,c
  8374  00135E  0A80               	xorlw	128
  8375  001360  0F7E               	addlw	-130
  8376  001362  E202               	bc	u4340
  8377  001364  5054               	movf	_novaTecla^0,w,c
  8378  001366  E107               	bnz	l4897
  8379  001368                     u4340:
  8380  001368  5054               	movf	_novaTecla^0,w,c
  8381  00136A  0A80               	xorlw	128
  8382  00136C  0F76               	addlw	-138
  8383  00136E  E203               	bc	l4897
  8384                           
  8385                           ;Ssms.c: 75:     state = 1;
  8386  001370  0E01               	movlw	1
  8387  001372  6E39               	movwf	SMotor@state^0,c
  8388                           
  8389                           ;Ssms.c: 76:    }
  8390  001374  0C01               	retlw	1
  8391  001376                     l4897:
  8392  001376  5054               	movf	_novaTecla^0,w,c
  8393  001378  E00C               	bz	l4909
  8394  00137A  5054               	movf	_novaTecla^0,w,c
  8395  00137C  0A80               	xorlw	128
  8396  00137E  0F7E               	addlw	-130
  8397  001380  E208               	bc	l4909
  8398  001382  2855               	incf	_lletraASCII^0,w,c
  8399  001384  E106               	bnz	l4909
  8400                           
  8401                           ;Ssms.c: 78:     MNovaLletra(novaTecla+48);
  8402  001386  5054               	movf	_novaTecla^0,w,c
  8403  001388  0F30               	addlw	48
  8404  00138A  ECC0  F000         	call	_MNovaLletra
  8405  00138E                     l4905:
  8406                           
  8407                           ;Ssms.c: 79:     novaTecla = -1;
  8408  00138E  6854               	setf	_novaTecla^0,c
  8409  001390  D7E3               	goto	l4887
  8410  001392                     l4909:
  8411  001392  5054               	movf	_novaTecla^0,w,c
  8412  001394  B4D8               	btfsc	status,2,c
  8413  001396  0012               	return	
  8414  001398  5054               	movf	_novaTecla^0,w,c
  8415  00139A  0A80               	xorlw	128
  8416  00139C  0F7E               	addlw	-130
  8417  00139E  B0D8               	btfsc	status,0,c
  8418  0013A0  0012               	return	
  8419  0013A2  2855               	incf	_lletraASCII^0,w,c
  8420  0013A4  B4D8               	btfsc	status,2,c
  8421  0013A6  0012               	return	
  8422                           
  8423                           ;Ssms.c: 83:     MNovaLletra(lletraASCII);
  8424  0013A8  5055               	movf	_lletraASCII^0,w,c
  8425  0013AA  ECC0  F000         	call	_MNovaLletra
  8426                           
  8427                           ;Ssms.c: 84:     lletraASCII = -1;
  8428  0013AE  6855               	setf	_lletraASCII^0,c
  8429                           
  8430                           ;Ssms.c: 85:     state++;
  8431  0013B0  2A39               	incf	SMotor@state^0,f,c
  8432  0013B2  0012               	return	
  8433  0013B4                     l4921:
  8434                           
  8435                           ;Ssms.c: 89:    MNovaLletra(novaTecla+48);
  8436  0013B4  5054               	movf	_novaTecla^0,w,c
  8437  0013B6  0F30               	addlw	48
  8438  0013B8  ECC0  F000         	call	_MNovaLletra
  8439  0013BC  D7E8               	goto	l4905
  8440  0013BE                     l4927:
  8441                           
  8442                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  8443  0013BE  0E04               	movlw	4
  8444  0013C0  183C               	xorwf	_sumaPulsacions^0,w,c
  8445  0013C2  E108               	bnz	l4935
  8446  0013C4                     u4420:
  8447                           
  8448                           ;Ssms.c: 95:     lletraASCII = lletraInici[ultimaTecla-2];
  8449  0013C4  5053               	movf	_ultimaTecla^0,w,c
  8450  0013C6  0FBA               	addlw	low (_lletraInici+254)
  8451  0013C8  6ED9               	movwf	fsr2l,c
  8452  0013CA  6ADA               	clrf	fsr2h,c
  8453  0013CC  50DF               	movf	indf2,w,c
  8454  0013CE  6E55               	movwf	_lletraASCII^0,c
  8455                           
  8456                           ;Ssms.c: 96:     sumaPulsacions = 0;
  8457  0013D0  6A3C               	clrf	_sumaPulsacions^0,c
  8458  0013D2  D7C2               	goto	l4887
  8459  0013D4                     l4935:
  8460  0013D4  0E03               	movlw	3
  8461  0013D6  183C               	xorwf	_sumaPulsacions^0,w,c
  8462  0013D8  E103               	bnz	l4941
  8463  0013DA                     u4430:
  8464                           
  8465                           ;Ssms.c: 100:     lletraASCII = ultimaTecla+48;
  8466  0013DA  5053               	movf	_ultimaTecla^0,w,c
  8467  0013DC  0F30               	addlw	48
  8468  0013DE  D7BB               	goto	L5
  8469  0013E0                     l4941:
  8470  0013E0  0E03               	movlw	3
  8471  0013E2  603C               	cpfslt	_sumaPulsacions^0,c
  8472  0013E4  0012               	return	
  8473  0013E6  D7B8               	goto	l4887
  8474  0013E8                     l4945:
  8475                           
  8476                           ;Ssms.c: 108:    if (sumaPulsacions == 4) {
  8477  0013E8  0E04               	movlw	4
  8478  0013EA  183C               	xorwf	_sumaPulsacions^0,w,c
  8479  0013EC  E0F6               	bz	u4430
  8480  0013EE  0E05               	movlw	5
  8481  0013F0  183C               	xorwf	_sumaPulsacions^0,w,c
  8482  0013F2  E0E8               	bz	u4420
  8483  0013F4  0E04               	movlw	4
  8484  0013F6  D7F5               	goto	L6
  8485  0013F8                     l4965:
  8486  0013F8  5039               	movf	SMotor@state^0,w,c
  8487  0013FA  6E6B               	movwf	??_SMotor^0,c
  8488  0013FC  6A6C               	clrf	(??_SMotor+1)^0,c
  8489                           
  8490                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8491                           ; Switch size 1, requested type "space"
  8492                           ; Number of cases is 1, Range of values is 0 to 0
  8493                           ; switch strategies available:
  8494                           ; Name         Instructions Cycles
  8495                           ; simple_byte            4     3 (average)
  8496                           ;	Chosen strategy is simple_byte
  8497  0013FE  506C               	movf	(??_SMotor+1)^0,w,c
  8498  001400  A4D8               	btfss	status,2,c
  8499  001402  0012               	return	
  8500                           
  8501                           ; Switch size 1, requested type "space"
  8502                           ; Number of cases is 7, Range of values is 0 to 6
  8503                           ; switch strategies available:
  8504                           ; Name         Instructions Cycles
  8505                           ; simple_byte           22    12 (average)
  8506                           ;	Chosen strategy is simple_byte
  8507  001404  506B               	movf	??_SMotor^0,w,c
  8508  001406  E101 D73D          	bz	l4809
  8509  00140A  0A01               	xorlw	1	; case 1
  8510  00140C  E101 D75A          	bz	l4833
  8511  001410  0A03               	xorlw	3	; case 2
  8512  001412  E081               	bz	l4863
  8513  001414  0A01               	xorlw	1	; case 3
  8514  001416  E0A2               	bz	l4889
  8515  001418  0A07               	xorlw	7	; case 4
  8516  00141A  E0CC               	bz	l4921
  8517  00141C  0A01               	xorlw	1	; case 5
  8518  00141E  E0CF               	bz	l4927
  8519  001420  0A03               	xorlw	3	; case 6
  8520  001422  E0E2               	bz	l4945
  8521  001424  0012               	return		;funcret
  8522  001426                     __end_of_SMotor:
  8523                           	callstack 0
  8524  001426                     PL76:
  8525                           	callstack 27
  8526  001426  0E5A               	movlw	90
  8527  001428  5C64               	subwf	?_TiGetTics^0,w,c
  8528  00142A  0E02               	movlw	2
  8529  00142C  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  8530  00142E  0012               	return	
  8531  001430                     __end_ofPL76:
  8532                           	callstack 0
  8533                           
  8534 ;; *************** function _MNovaLletra *****************
  8535 ;; Defined at:
  8536 ;;		line 35 in file "Menu.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  lletra          1    wreg     unsigned char 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;  lletra          1    5[COMRAM] unsigned char 
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1    wreg      void 
  8543 ;; Registers used:
  8544 ;;		wreg
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1
  8550 ;;      Params:         0       0       0
  8551 ;;      Locals:         1       0       0
  8552 ;;      Temps:          0       0       0
  8553 ;;      Totals:         1       0       0
  8554 ;;Total ram usage:        1 bytes
  8555 ;; Hardware stack levels used: 1
  8556 ;; Hardware stack levels required when called: 2
  8557 ;; This function calls:
  8558 ;;		Nothing
  8559 ;; This function is called by:
  8560 ;;		_SMotor
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text69
  8565  000180                     __ptext69:
  8566                           	callstack 0
  8567  000180                     _MNovaLletra:
  8568                           	callstack 27
  8569                           
  8570                           ;incstack = 0
  8571                           ;MNovaLletra@lletra stored from wreg
  8572  000180  6E64               	movwf	MNovaLletra@lletra^0,c
  8573                           
  8574                           ;Menu.c: 36:     novaLletra = lletra;
  8575  000182  C064  F051         	movff	MNovaLletra@lletra,_novaLletra
  8576  000186  0012               	return		;funcret
  8577  000188                     __end_of_MNovaLletra:
  8578                           	callstack 0
  8579                           
  8580 ;; *************** function _Minit *****************
  8581 ;; Defined at:
  8582 ;;		line 28 in file "Menu.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;		None
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;		None
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1
  8596 ;;      Params:         0       0       0
  8597 ;;      Locals:         0       0       0
  8598 ;;      Temps:          0       0       0
  8599 ;;      Totals:         0       0       0
  8600 ;;Total ram usage:        0 bytes
  8601 ;; Hardware stack levels used: 1
  8602 ;; Hardware stack levels required when called: 3
  8603 ;; This function calls:
  8604 ;;		_TiGetTimer
  8605 ;; This function is called by:
  8606 ;;		_main
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text70
  8611  000188                     __ptext70:
  8612                           	callstack 0
  8613  000188                     _Minit:
  8614                           	callstack 27
  8615                           
  8616                           ;Menu.c: 29:     timerMenu = TiGetTimer();
  8617                           
  8618                           ;incstack = 0
  8619  000188  ECDC  F00E         	call	_TiGetTimer	;wreg free
  8620  00018C  6E32               	movwf	_timerMenu^0,c
  8621  00018E  0012               	return		;funcret
  8622  000190                     __end_of_Minit:
  8623                           	callstack 0
  8624                           
  8625 ;; *************** function _LcLCD *****************
  8626 ;; Defined at:
  8627 ;;		line 232 in file "LcTLCD.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;		None
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;		None
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      void 
  8634 ;; Registers used:
  8635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1
  8641 ;;      Params:         0       0       0
  8642 ;;      Locals:         0       0       0
  8643 ;;      Temps:          0       0       0
  8644 ;;      Totals:         0       0       0
  8645 ;;Total ram usage:        0 bytes
  8646 ;; Hardware stack levels used: 1
  8647 ;; Hardware stack levels required when called: 6
  8648 ;; This function calls:
  8649 ;;		_LcPutChar
  8650 ;; This function is called by:
  8651 ;;		_main
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text71
  8656  001BBC                     __ptext71:
  8657                           	callstack 0
  8658  001BBC                     _LcLCD:
  8659                           	callstack 24
  8660                           
  8661                           ;LcTLCD.c: 233:     if(nou_s == 1){
  8662                           
  8663                           ;incstack = 0
  8664  001BBC  A477               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8665  001BBE  0012               	return	
  8666                           
  8667                           ;LcTLCD.c: 234:         LcPutChar(*s_ptr);
  8668  001BC0  D818               	call	PL38	;call to abstracted procedure
  8669  001BC2  64F7               	cpfsgt	tblptrh,c
  8670  001BC4  D003               	bra	u4087
  8671  001BC6  0008               	tblrd		*
  8672  001BC8  50F5               	movf	tablat,w,c
  8673  001BCA  D001               	bra	u4080
  8674  001BCC                     u4087:
  8675  001BCC  D819               	call	PL48	;call to abstracted procedure
  8676  001BCE                     u4080:
  8677  001BCE  EC06  F00E         	call	_LcPutChar
  8678                           
  8679                           ;LcTLCD.c: 235:         s_ptr++;
  8680  001BD2  4A0B               	infsnz	_s_ptr^0,f,c
  8681  001BD4  2A0C               	incf	(_s_ptr+1)^0,f,c
  8682                           
  8683                           ;LcTLCD.c: 236:         if(*s_ptr == '\0'){
  8684  001BD6  D80D               	call	PL38	;call to abstracted procedure
  8685  001BD8  64F7               	cpfsgt	tblptrh,c
  8686  001BDA  D003               	bra	u4097
  8687  001BDC  0008               	tblrd		*
  8688  001BDE  50F5               	movf	tablat,w,c
  8689  001BE0  D001               	bra	u4090
  8690  001BE2                     u4097:
  8691  001BE2  D80E               	call	PL48	;call to abstracted procedure
  8692  001BE4                     u4090:
  8693  001BE4  0900               	iorlw	0
  8694  001BE6  A4D8               	btfss	status,2,c
  8695  001BE8  0012               	return	
  8696                           
  8697                           ;LcTLCD.c: 237:             nou_s = 0;
  8698  001BEA  9477               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8699                           
  8700                           ;LcTLCD.c: 238:             s_ptr=0;
  8701  001BEC  6A0B               	clrf	_s_ptr^0,c
  8702  001BEE  6A0C               	clrf	(_s_ptr+1)^0,c
  8703  001BF0  0012               	return		;funcret
  8704  001BF2                     __end_of_LcLCD:
  8705                           	callstack 0
  8706  001BF2                     PL38:
  8707                           	callstack 24
  8708  001BF2  C00B  FFF6         	movff	_s_ptr,tblptrl
  8709  001BF6  C00C  FFF7         	movff	_s_ptr+1,tblptrh
  8710  001BFA  6AF8               	clrf	tblptru,c
  8711  001BFC  0E01               	movlw	(high __ramtop+-1)
  8712  001BFE  0012               	return	
  8713  001C00                     __end_ofPL38:
  8714                           	callstack 0
  8715  001C00                     PL48:
  8716                           	callstack 24
  8717  001C00  CFF6 FFE1          	movff	tblptrl,fsr1l
  8718  001C04  CFF7 FFE2          	movff	tblptrh,fsr1h
  8719  001C08  50E7               	movf	indf1,w,c
  8720  001C0A  0012               	return	
  8721  001C0C                     __end_ofPL48:
  8722                           	callstack 0
  8723                           
  8724 ;; *************** function _LcInit *****************
  8725 ;; Defined at:
  8726 ;;		line 41 in file "LcTLCD.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  rows            1    wreg     unsigned char 
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;  rows            1   16[COMRAM] unsigned char 
  8731 ;;  i               2   17[COMRAM] int 
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      void 
  8734 ;; Registers used:
  8735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1
  8741 ;;      Params:         0       0       0
  8742 ;;      Locals:         3       0       0
  8743 ;;      Temps:          0       0       0
  8744 ;;      Totals:         3       0       0
  8745 ;;Total ram usage:        3 bytes
  8746 ;; Hardware stack levels used: 1
  8747 ;; Hardware stack levels required when called: 4
  8748 ;; This function calls:
  8749 ;;		_CantaIR
  8750 ;;		_EscriuPrimeraOrdre
  8751 ;;		_Espera
  8752 ;;		_TiGetTimer
  8753 ;;		_WaitForBusy
  8754 ;; This function is called by:
  8755 ;;		_main
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759                           	psect	text72
  8760  001716                     __ptext72:
  8761                           	callstack 0
  8762  001716                     _LcInit:
  8763                           	callstack 26
  8764                           
  8765                           ;incstack = 0
  8766                           ;LcInit@rows stored from wreg
  8767  001716  6E6F               	movwf	LcInit@rows^0,c
  8768                           
  8769                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  8770  001718  ECDC  F00E         	call	_TiGetTimer	;wreg free
  8771  00171C  6E3D               	movwf	_Timer^0,c
  8772                           
  8773                           ;LcTLCD.c: 49:  Rows = rows;
  8774  00171E  C06F  F040         	movff	LcInit@rows,_Rows
  8775                           
  8776                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  8777  001722  6A3E               	clrf	_ColumnAct^0,c
  8778  001724  6A3F               	clrf	_RowAct^0,c
  8779                           
  8780                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8781  001726  9894               	bcf	148,4,c	;volatile
  8782  001728  9E95               	bcf	149,7,c	;volatile
  8783  00172A  9A94               	bcf	148,5,c	;volatile
  8784                           
  8785                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  8786  00172C  6A70               	clrf	LcInit@i^0,c
  8787  00172E  6A71               	clrf	(LcInit@i+1)^0,c
  8788  001730                     l4717:
  8789                           
  8790                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  8791  001730  6A6C               	clrf	(Espera@ms+1)^0,c
  8792  001732  0E64               	movlw	100
  8793  001734  6E6B               	movwf	Espera@ms^0,c
  8794  001736  503D               	movf	_Timer^0,w,c
  8795  001738  EC85  F00F         	call	_Espera
  8796                           
  8797                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  8798  00173C  0E03               	movlw	3
  8799  00173E  ECC8  F00C         	call	_EscriuPrimeraOrdre
  8800                           
  8801                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  8802  001742  6A6C               	clrf	(Espera@ms+1)^0,c
  8803  001744  0E05               	movlw	5
  8804  001746  6E6B               	movwf	Espera@ms^0,c
  8805  001748  503D               	movf	_Timer^0,w,c
  8806  00174A  EC85  F00F         	call	_Espera
  8807                           
  8808                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  8809  00174E  0E03               	movlw	3
  8810  001750  ECC8  F00C         	call	_EscriuPrimeraOrdre
  8811                           
  8812                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8813  001754  D83A               	call	PL66	;call to abstracted procedure
  8814  001756  EC85  F00F         	call	_Espera
  8815                           
  8816                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  8817  00175A  0E03               	movlw	3
  8818  00175C  ECC8  F00C         	call	_EscriuPrimeraOrdre
  8819                           
  8820                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  8821  001760  D834               	call	PL66	;call to abstracted procedure
  8822  001762  EC85  F00F         	call	_Espera
  8823                           
  8824                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  8825  001766  0E02               	movlw	2
  8826  001768  ECC8  F00C         	call	_EscriuPrimeraOrdre
  8827                           
  8828                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  8829  00176C  6A6C               	clrf	(Espera@ms+1)^0,c
  8830  00176E  0E04               	movlw	4
  8831  001770  6E6B               	movwf	Espera@ms^0,c
  8832  001772  503D               	movf	_Timer^0,w,c
  8833  001774  EC85  F00F         	call	_Espera
  8834                           
  8835                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  8836  001778  0E28               	movlw	40
  8837  00177A  ECB3  F00F         	call	_CantaIR
  8838                           
  8839                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  8840  00177E  EC6D  F00E         	call	_WaitForBusy	;wreg free
  8841  001782  0E08               	movlw	8
  8842  001784  ECB3  F00F         	call	_CantaIR
  8843                           
  8844                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  8845  001788  EC6D  F00E         	call	_WaitForBusy	;wreg free
  8846  00178C  0E01               	movlw	1
  8847  00178E  ECB3  F00F         	call	_CantaIR
  8848                           
  8849                           ;LcTLCD.c: 71:   Espera(Timer,3);
  8850  001792  EC80  F00F         	call	PL64	;call to abstracted procedure
  8851  001796  EC85  F00F         	call	_Espera
  8852                           
  8853                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  8854  00179A  EC6D  F00E         	call	_WaitForBusy	;wreg free
  8855  00179E  0E06               	movlw	6
  8856  0017A0  ECB3  F00F         	call	_CantaIR
  8857                           
  8858                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  8859  0017A4  EC6D  F00E         	call	_WaitForBusy	;wreg free
  8860  0017A8  0E0F               	movlw	15
  8861  0017AA  ECB3  F00F         	call	_CantaIR
  8862                           
  8863                           ;LcTLCD.c: 74:  }
  8864  0017AE  4A70               	infsnz	LcInit@i^0,f,c
  8865  0017B0  2A71               	incf	(LcInit@i+1)^0,f,c
  8866  0017B2  BE71               	btfsc	(LcInit@i+1)^0,7,c
  8867  0017B4  D7BD               	goto	l4717
  8868  0017B6  5071               	movf	(LcInit@i+1)^0,w,c
  8869  0017B8  E103               	bnz	u4060
  8870  0017BA  0E02               	movlw	2
  8871  0017BC  5C70               	subwf	LcInit@i^0,w,c
  8872  0017BE  E3B8               	bnc	l4717
  8873  0017C0                     u4060:
  8874                           
  8875                           ;LcTLCD.c: 80:     WaitForBusy();
  8876  0017C0  EC6D  F00E         	call	_WaitForBusy	;wreg free
  8877                           
  8878                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  8879  0017C4  0E0C               	movlw	12
  8880  0017C6  EFB3  F00F         	goto	_CantaIR
  8881  0017CA                     __end_of_LcInit:
  8882                           	callstack 0
  8883  0017CA                     PL66:
  8884                           	callstack 26
  8885  0017CA  6A6C               	clrf	(Espera@ms+1)^0,c
  8886  0017CC  0E01               	movlw	1
  8887  0017CE  6E6B               	movwf	Espera@ms^0,c
  8888  0017D0  503D               	movf	_Timer^0,w,c
  8889  0017D2  0012               	return	
  8890  0017D4                     __end_ofPL66:
  8891                           	callstack 0
  8892                           
  8893 ;; *************** function _EscriuPrimeraOrdre *****************
  8894 ;; Defined at:
  8895 ;;		line 216 in file "LcTLCD.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;  ordre           1    wreg     unsigned char 
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;  ordre           1    6[COMRAM] unsigned char 
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  1    wreg      void 
  8902 ;; Registers used:
  8903 ;;		wreg, status,2, status,0
  8904 ;; Tracked objects:
  8905 ;;		On entry : 0/0
  8906 ;;		On exit  : 0/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMRAM   BANK0   BANK1
  8909 ;;      Params:         0       0       0
  8910 ;;      Locals:         1       0       0
  8911 ;;      Temps:          1       0       0
  8912 ;;      Totals:         2       0       0
  8913 ;;Total ram usage:        2 bytes
  8914 ;; Hardware stack levels used: 1
  8915 ;; Hardware stack levels required when called: 2
  8916 ;; This function calls:
  8917 ;;		Nothing
  8918 ;; This function is called by:
  8919 ;;		_LcInit
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text73
  8924  001990                     __ptext73:
  8925                           	callstack 0
  8926  001990                     _EscriuPrimeraOrdre:
  8927                           	callstack 27
  8928                           
  8929                           ;incstack = 0
  8930                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8931  001990  6E65               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8932                           
  8933                           ;LcTLCD.c: 218:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8934  001992  9694               	bcf	148,3,c	;volatile
  8935                           
  8936                           ;LcTLCD.c: 219:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8937  001994  D82F               	call	PL42	;call to abstracted procedure
  8938  001996  888B               	bsf	139,4,c	;volatile
  8939                           
  8940                           ;LcTLCD.c: 220:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8941  001998  A665               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8942  00199A  D003               	goto	u250
  8943  00199C  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8944  00199E  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8945  0019A0  D001               	goto	u268
  8946  0019A2                     u250:
  8947  0019A2  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8948  0019A4                     u268:
  8949  0019A4  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8950  0019A6  D82D               	call	PL86	;call to abstracted procedure
  8951  0019A8  0BF7               	andlw	-9
  8952  0019AA  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8953  0019AC  6E8B               	movwf	139,c	;volatile
  8954                           
  8955                           ;LcTLCD.c: 221:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8956  0019AE  A465               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8957  0019B0  D003               	goto	u270
  8958  0019B2  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8959  0019B4  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8960  0019B6  D001               	goto	u288
  8961  0019B8                     u270:
  8962  0019B8  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8963  0019BA                     u288:
  8964  0019BA  D823               	call	PL86	;call to abstracted procedure
  8965  0019BC  0BFB               	andlw	-5
  8966  0019BE  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8967  0019C0  6E8B               	movwf	139,c	;volatile
  8968                           
  8969                           ;LcTLCD.c: 222:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8970  0019C2  A265               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8971  0019C4  D003               	goto	u290
  8972  0019C6  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8973  0019C8  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8974  0019CA  D001               	goto	u308
  8975  0019CC                     u290:
  8976  0019CC  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8977  0019CE                     u308:
  8978  0019CE  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8979  0019D0  508B               	movf	139,w,c	;volatile
  8980  0019D2  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8981  0019D4  0BFD               	andlw	-3
  8982  0019D6  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8983  0019D8  6E8B               	movwf	139,c	;volatile
  8984                           
  8985                           ;LcTLCD.c: 223:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8986  0019DA  A065               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8987  0019DC  D003               	goto	u310
  8988  0019DE  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8989  0019E0  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8990  0019E2  D001               	goto	u328
  8991  0019E4                     u310:
  8992  0019E4  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8993  0019E6                     u328:
  8994  0019E6  508B               	movf	139,w,c	;volatile
  8995  0019E8  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8996  0019EA  0BFE               	andlw	-2
  8997  0019EC  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8998  0019EE  6E8B               	movwf	139,c	;volatile
  8999                           
  9000                           ;LcTLCD.c: 224:  (LATCbits.LATC4 = 0);
  9001  0019F0  988B               	bcf	139,4,c	;volatile
  9002  0019F2  0012               	return		;funcret
  9003  0019F4                     __end_of_EscriuPrimeraOrdre:
  9004                           	callstack 0
  9005  0019F4                     PL42:
  9006                           	callstack 24
  9007  0019F4  9494               	bcf	148,2,c	;volatile
  9008  0019F6  9294               	bcf	148,1,c	;volatile
  9009  0019F8  9094               	bcf	148,0,c	;volatile
  9010  0019FA  9A8B               	bcf	139,5,c	;volatile
  9011  0019FC  9E8C               	bcf	140,7,c	;volatile
  9012  0019FE  888B               	bsf	139,4,c	;volatile
  9013  001A00  0012               	return	
  9014  001A02                     __end_ofPL42:
  9015                           	callstack 0
  9016  001A02                     PL86:
  9017                           	callstack 27
  9018  001A02  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  9019  001A04  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  9020  001A06  508B               	movf	139,w,c	;volatile
  9021  001A08  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  9022  001A0A  0012               	return	
  9023  001A0C                     __end_ofPL86:
  9024                           	callstack 0
  9025                           
  9026 ;; *************** function _JoystickMotor *****************
  9027 ;; Defined at:
  9028 ;;		line 18 in file "Joystick.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;		None
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;		None
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  1    wreg      void 
  9035 ;; Registers used:
  9036 ;;		wreg, status,2, status,0, cstack
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMRAM   BANK0   BANK1
  9042 ;;      Params:         0       0       0
  9043 ;;      Locals:         0       0       0
  9044 ;;      Temps:          2       0       0
  9045 ;;      Totals:         2       0       0
  9046 ;;Total ram usage:        2 bytes
  9047 ;; Hardware stack levels used: 1
  9048 ;; Hardware stack levels required when called: 3
  9049 ;; This function calls:
  9050 ;;		_MNouJoystick
  9051 ;; This function is called by:
  9052 ;;		_main
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           	psect	text74
  9057  001640                     __ptext74:
  9058                           	callstack 0
  9059  001640                     _JoystickMotor:
  9060                           	callstack 27
  9061                           
  9062                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  9063                           
  9064                           ;incstack = 0
  9065  001640  D056               	goto	l3373
  9066  001642                     l1012:
  9067                           
  9068                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9069  001642  B2C2               	btfsc	194,1,c	;volatile
  9070  001644  D00B               	goto	l1013
  9071  001646  0EC8               	movlw	200
  9072  001648  60C4               	cpfslt	196,c	;volatile
  9073  00164A  D008               	goto	l1013
  9074  00164C  0E32               	movlw	50
  9075  00164E  64C4               	cpfsgt	196,c	;volatile
  9076  001650  D005               	goto	l1013
  9077                           
  9078                           ;Joystick.c: 23:     ADCON0 = 0x07;
  9079  001652  0E07               	movlw	7
  9080  001654  6EC2               	movwf	194,c	;volatile
  9081                           
  9082                           ;Joystick.c: 24:                 cap1 = 1;
  9083  001656  8076               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  9084  001658                     l3303:
  9085                           
  9086                           ;Joystick.c: 25:     state++;
  9087  001658  2A17               	incf	JoystickMotor@state^0,f,c
  9088                           
  9089                           ;Joystick.c: 26:    }
  9090  00165A  D052               	goto	l1020
  9091  00165C                     l1013:
  9092  00165C  B2C2               	btfsc	194,1,c	;volatile
  9093  00165E  D00F               	goto	l1015
  9094  001660  0EC7               	movlw	199
  9095  001662  64C4               	cpfsgt	196,c	;volatile
  9096  001664  D00C               	goto	l1015
  9097                           
  9098                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  9099  001666  0E02               	movlw	2
  9100  001668  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9101  00166A  E003               	bz	l3311
  9102  00166C  0E02               	movlw	2
  9103  00166E  ECC8  F000         	call	_MNouJoystick
  9104  001672                     l3311:
  9105                           
  9106                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  9107  001672  0E02               	movlw	2
  9108  001674  6E18               	movwf	_ultimaTeclaAD^0,c
  9109                           
  9110                           ;Joystick.c: 30:     ADCON0 = 0x07;
  9111  001676  0E07               	movlw	7
  9112  001678  6EC2               	movwf	194,c	;volatile
  9113                           
  9114                           ;Joystick.c: 31:                 cap1 = 0;
  9115  00167A  9076               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  9116  00167C  D7ED               	goto	l3303
  9117  00167E                     l1015:
  9118  00167E  B2C2               	btfsc	194,1,c	;volatile
  9119  001680  D03F               	goto	l1020
  9120  001682  0E33               	movlw	51
  9121  001684  60C4               	cpfslt	196,c	;volatile
  9122  001686  D03C               	goto	l1020
  9123                           
  9124                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  9125  001688  0E08               	movlw	8
  9126  00168A  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9127  00168C  E003               	bz	l3325
  9128  00168E  0E08               	movlw	8
  9129  001690  ECC8  F000         	call	_MNouJoystick
  9130  001694                     l3325:
  9131                           
  9132                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  9133  001694  0E08               	movlw	8
  9134  001696  D7EE               	goto	L7
  9135  001698                     l1021:
  9136                           
  9137                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9138  001698  B2C2               	btfsc	194,1,c	;volatile
  9139  00169A  D00B               	goto	l1022
  9140  00169C  0EC8               	movlw	200
  9141  00169E  60C4               	cpfslt	196,c	;volatile
  9142  0016A0  D008               	goto	l1022
  9143  0016A2  0E32               	movlw	50
  9144  0016A4  64C4               	cpfsgt	196,c	;volatile
  9145  0016A6  D005               	goto	l1022
  9146                           
  9147                           ;Joystick.c: 44:     ADCON0 = 0x03;
  9148  0016A8  0E03               	movlw	3
  9149  0016AA  6EC2               	movwf	194,c	;volatile
  9150                           
  9151                           ;Joystick.c: 45:                 cap2 = 1;
  9152  0016AC  8E75               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  9153  0016AE                     l3341:
  9154                           
  9155                           ;Joystick.c: 46:     state--;
  9156  0016AE  0617               	decf	JoystickMotor@state^0,f,c
  9157                           
  9158                           ;Joystick.c: 47:    }
  9159  0016B0  D027               	goto	l1020
  9160  0016B2                     l1022:
  9161  0016B2  B2C2               	btfsc	194,1,c	;volatile
  9162  0016B4  D00F               	goto	l1024
  9163  0016B6  0EC7               	movlw	199
  9164  0016B8  64C4               	cpfsgt	196,c	;volatile
  9165  0016BA  D00C               	goto	l1024
  9166                           
  9167                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  9168  0016BC  0E06               	movlw	6
  9169  0016BE  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9170  0016C0  E003               	bz	l3349
  9171  0016C2  0E06               	movlw	6
  9172  0016C4  ECC8  F000         	call	_MNouJoystick
  9173  0016C8                     l3349:
  9174                           
  9175                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  9176  0016C8  0E06               	movlw	6
  9177  0016CA  6E18               	movwf	_ultimaTeclaAD^0,c
  9178                           
  9179                           ;Joystick.c: 51:     ADCON0 = 0x03;
  9180  0016CC  0E03               	movlw	3
  9181  0016CE  6EC2               	movwf	194,c	;volatile
  9182                           
  9183                           ;Joystick.c: 52:                 cap2 = 0;
  9184  0016D0  9E75               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  9185  0016D2  D7ED               	goto	l3341
  9186  0016D4                     l1024:
  9187  0016D4  B2C2               	btfsc	194,1,c	;volatile
  9188  0016D6  D014               	goto	l1020
  9189  0016D8  0E33               	movlw	51
  9190  0016DA  60C4               	cpfslt	196,c	;volatile
  9191  0016DC  D011               	goto	l1020
  9192                           
  9193                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  9194  0016DE  0E04               	movlw	4
  9195  0016E0  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9196  0016E2  E003               	bz	l3363
  9197  0016E4  0E04               	movlw	4
  9198  0016E6  ECC8  F000         	call	_MNouJoystick
  9199  0016EA                     l3363:
  9200                           
  9201                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  9202  0016EA  0E04               	movlw	4
  9203  0016EC  D7EE               	goto	L8
  9204  0016EE                     l3373:
  9205  0016EE  5017               	movf	JoystickMotor@state^0,w,c
  9206  0016F0  6E65               	movwf	??_JoystickMotor^0,c
  9207  0016F2  6A66               	clrf	(??_JoystickMotor+1)^0,c
  9208                           
  9209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9210                           ; Switch size 1, requested type "space"
  9211                           ; Number of cases is 1, Range of values is 0 to 0
  9212                           ; switch strategies available:
  9213                           ; Name         Instructions Cycles
  9214                           ; simple_byte            4     3 (average)
  9215                           ;	Chosen strategy is simple_byte
  9216  0016F4  5066               	movf	(??_JoystickMotor+1)^0,w,c
  9217  0016F6  E104               	bnz	l1020
  9218                           
  9219                           ; Switch size 1, requested type "space"
  9220                           ; Number of cases is 2, Range of values is 0 to 1
  9221                           ; switch strategies available:
  9222                           ; Name         Instructions Cycles
  9223                           ; simple_byte            7     4 (average)
  9224                           ;	Chosen strategy is simple_byte
  9225  0016F8  5065               	movf	??_JoystickMotor^0,w,c
  9226  0016FA  E0A3               	bz	l1012
  9227  0016FC  0A01               	xorlw	1	; case 1
  9228  0016FE  E0CC               	bz	l1021
  9229  001700                     l1020:
  9230                           
  9231                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  9232  001700  B076               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  9233  001702  AE75               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  9234  001704  0012               	return	
  9235  001706  5018               	movf	_ultimaTeclaAD^0,w,c
  9236  001708  B4D8               	btfsc	status,2,c
  9237  00170A  0012               	return	
  9238                           
  9239                           ;Joystick.c: 66:         MNouJoystick(-1);
  9240  00170C  0EFF               	movlw	255
  9241  00170E  ECC8  F000         	call	_MNouJoystick
  9242                           
  9243                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  9244  001712  6818               	setf	_ultimaTeclaAD^0,c
  9245  001714  0012               	return		;funcret
  9246  001716                     __end_of_JoystickMotor:
  9247                           	callstack 0
  9248                           
  9249 ;; *************** function _MNouJoystick *****************
  9250 ;; Defined at:
  9251 ;;		line 38 in file "Menu.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  posicio         1    wreg     char 
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;  posicio         1    5[COMRAM] char 
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1
  9265 ;;      Params:         0       0       0
  9266 ;;      Locals:         1       0       0
  9267 ;;      Temps:          0       0       0
  9268 ;;      Totals:         1       0       0
  9269 ;;Total ram usage:        1 bytes
  9270 ;; Hardware stack levels used: 1
  9271 ;; Hardware stack levels required when called: 2
  9272 ;; This function calls:
  9273 ;;		Nothing
  9274 ;; This function is called by:
  9275 ;;		_JoystickMotor
  9276 ;; This function uses a non-reentrant model
  9277 ;;
  9278                           
  9279                           	psect	text75
  9280  000190                     __ptext75:
  9281                           	callstack 0
  9282  000190                     _MNouJoystick:
  9283                           	callstack 27
  9284                           
  9285                           ;incstack = 0
  9286                           ;MNouJoystick@posicio stored from wreg
  9287  000190  6E64               	movwf	MNouJoystick@posicio^0,c
  9288                           
  9289                           ;Menu.c: 39:     novaDireccio = posicio;
  9290  000192  C064  F050         	movff	MNouJoystick@posicio,_novaDireccio
  9291  000196  0012               	return		;funcret
  9292  000198                     __end_of_MNouJoystick:
  9293                           	callstack 0
  9294                           
  9295 ;; *************** function _JoystickInit *****************
  9296 ;; Defined at:
  9297 ;;		line 12 in file "Joystick.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;		None
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;		None
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  1    wreg      void 
  9304 ;; Registers used:
  9305 ;;		wreg, status,2
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 0/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMRAM   BANK0   BANK1
  9311 ;;      Params:         0       0       0
  9312 ;;      Locals:         0       0       0
  9313 ;;      Temps:          0       0       0
  9314 ;;      Totals:         0       0       0
  9315 ;;Total ram usage:        0 bytes
  9316 ;; Hardware stack levels used: 1
  9317 ;; Hardware stack levels required when called: 2
  9318 ;; This function calls:
  9319 ;;		Nothing
  9320 ;; This function is called by:
  9321 ;;		_main
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           	psect	text76
  9326  00004A                     __ptext76:
  9327                           	callstack 0
  9328  00004A                     _JoystickInit:
  9329                           	callstack 28
  9330                           
  9331                           ;Joystick.c: 13:     ADCON0 = 0x01;
  9332                           
  9333                           ;incstack = 0
  9334  00004A  0E01               	movlw	1
  9335  00004C  6EC2               	movwf	194,c	;volatile
  9336                           
  9337                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  9338  00004E  0E0D               	movlw	13
  9339  000050  6EC1               	movwf	193,c	;volatile
  9340                           
  9341                           ;Joystick.c: 15:     ADCON2 = 0x09;
  9342  000052  0E09               	movlw	9
  9343  000054  6EC0               	movwf	192,c	;volatile
  9344                           
  9345                           ;Joystick.c: 16:     ADRESH = 127;
  9346  000056  0E7F               	movlw	127
  9347  000058  6EC4               	movwf	196,c	;volatile
  9348  00005A  0C7F               	retlw	127	;funcret
  9349  00005C                     __end_of_JoystickInit:
  9350                           	callstack 0
  9351                           
  9352 ;; *************** function _GLCDMotor *****************
  9353 ;; Defined at:
  9354 ;;		line 36 in file "GestioLCD.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;		None
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;		None
  9359 ;; Return value:  Size  Location     Type
  9360 ;;                  1    wreg      void 
  9361 ;; Registers used:
  9362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMRAM   BANK0   BANK1
  9368 ;;      Params:         0       0       0
  9369 ;;      Locals:         0       0       0
  9370 ;;      Temps:          2       0       0
  9371 ;;      Totals:         2       0       0
  9372 ;;Total ram usage:        2 bytes
  9373 ;; Hardware stack levels used: 1
  9374 ;; Hardware stack levels required when called: 6
  9375 ;; This function calls:
  9376 ;;		_LcClear
  9377 ;;		_LcGotoXY
  9378 ;;		_LcLliure
  9379 ;;		_LcNewString
  9380 ;;		_LcPutChar
  9381 ;;		_TiGetTics
  9382 ;;		_TiResetTics
  9383 ;; This function is called by:
  9384 ;;		_main
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           	psect	text77
  9389  000D66                     __ptext77:
  9390                           	callstack 0
  9391  000D66                     _GLCDMotor:
  9392                           	callstack 24
  9393                           
  9394                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  9395                           
  9396                           ;incstack = 0
  9397  000D66  D10B               	goto	l5227
  9398  000D68                     l5043:
  9399                           
  9400                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  9401  000D68  0E11               	movlw	17
  9402  000D6A  601A               	cpfslt	GLCDMotor@length1^0,c
  9403  000D6C  D010               	goto	l5053
  9404  000D6E  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9405  000D70  D00E               	goto	l5053
  9406                           
  9407                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  9408  000D72  0E00               	movlw	0
  9409  000D74  6E6C               	movwf	LcGotoXY@Row^0,c
  9410  000D76  ECC2  F00E         	call	_LcGotoXY
  9411                           
  9412                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  9413  000D7A  D932               	call	PL8	;call to abstracted procedure
  9414  000D7C  6E73               	movwf	??_GLCDMotor^0,c
  9415  000D7E  C073  F067         	movff	??_GLCDMotor,LcNewString@new_s
  9416  000D82  D933               	call	PL12	;call to abstracted procedure
  9417  000D84  EC77  F000         	call	_LcNewString	;wreg free
  9418                           
  9419                           ;GestioLCD.c: 53:     state = 5;
  9420  000D88  0E05               	movlw	5
  9421  000D8A  6E20               	movwf	GLCDMotor@state^0,c
  9422                           
  9423                           ;GestioLCD.c: 54:    }
  9424  000D8C  0C05               	retlw	5
  9425  000D8E                     l5053:
  9426  000D8E  0E10               	movlw	16
  9427  000D90  641A               	cpfsgt	GLCDMotor@length1^0,c
  9428  000D92  0C10               	retlw	16
  9429  000D94  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9430  000D96  0C10               	retlw	16
  9431  000D98                     u4570:
  9432                           
  9433                           ;GestioLCD.c: 56:     state++;
  9434  000D98  2A20               	incf	GLCDMotor@state^0,f,c
  9435  000D9A  0012               	return	
  9436  000D9C                     l5059:
  9437                           
  9438                           ;GestioLCD.c: 60:    if (j>=16) {
  9439  000D9C  0E0F               	movlw	15
  9440  000D9E  641F               	cpfsgt	GLCDMotor@j^0,c
  9441  000DA0  D014               	goto	l5073
  9442                           
  9443                           ;GestioLCD.c: 61:     min1++;
  9444  000DA2  2A1E               	incf	GLCDMotor@min1^0,f,c
  9445                           
  9446                           ;GestioLCD.c: 62:     max1++;
  9447  000DA4  2A4E               	incf	GLCDMotor@max1^0,f,c
  9448                           
  9449                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  9450  000DA6  D91C               	call	PL8	;call to abstracted procedure
  9451  000DA8  244E               	addwf	GLCDMotor@max1^0,w,c
  9452  000DAA  6E73               	movwf	??_GLCDMotor^0,c
  9453  000DAC  D90E               	call	PL2	;call to abstracted procedure
  9454  000DAE  E101               	bnz	l5067
  9455  000DB0  6A4E               	clrf	GLCDMotor@max1^0,c
  9456  000DB2                     l5067:
  9457                           
  9458                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  9459  000DB2  D916               	call	PL8	;call to abstracted procedure
  9460  000DB4  241E               	addwf	GLCDMotor@min1^0,w,c
  9461  000DB6  6E73               	movwf	??_GLCDMotor^0,c
  9462  000DB8  D908               	call	PL2	;call to abstracted procedure
  9463  000DBA  E101               	bnz	l943
  9464  000DBC  6A1E               	clrf	GLCDMotor@min1^0,c
  9465  000DBE                     l943:
  9466                           
  9467                           ;GestioLCD.c: 65:     j=0;
  9468  000DBE  6A1F               	clrf	GLCDMotor@j^0,c
  9469                           
  9470                           ;GestioLCD.c: 66:     k1=min1;
  9471  000DC0  C01E  F01C         	movff	GLCDMotor@min1,GLCDMotor@k1
  9472                           
  9473                           ;GestioLCD.c: 67:     state = 6;
  9474  000DC4  0E06               	movlw	6
  9475  000DC6  6E20               	movwf	GLCDMotor@state^0,c
  9476                           
  9477                           ;GestioLCD.c: 68:    }
  9478  000DC8  0C06               	retlw	6
  9479  000DCA                     l5073:
  9480  000DCA  0E10               	movlw	16
  9481  000DCC  601F               	cpfslt	GLCDMotor@j^0,c
  9482  000DCE  0C10               	retlw	16
  9483                           
  9484                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  9485  000DD0  0E00               	movlw	0
  9486  000DD2  6E6C               	movwf	LcGotoXY@Row^0,c
  9487  000DD4  501F               	movf	GLCDMotor@j^0,w,c
  9488  000DD6  ECC2  F00E         	call	_LcGotoXY
  9489                           
  9490                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  9491  000DDA  D902               	call	PL8	;call to abstracted procedure
  9492  000DDC  241C               	addwf	GLCDMotor@k1^0,w,c
  9493  000DDE  6E73               	movwf	??_GLCDMotor^0,c
  9494  000DE0  D8F4               	call	PL2	;call to abstracted procedure
  9495  000DE2  EC06  F00E         	call	_LcPutChar
  9496                           
  9497                           ;GestioLCD.c: 72:     j++;
  9498  000DE6  2A1F               	incf	GLCDMotor@j^0,f,c
  9499                           
  9500                           ;GestioLCD.c: 73:     k1++;
  9501  000DE8  2A1C               	incf	GLCDMotor@k1^0,f,c
  9502                           
  9503                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  9504  000DEA  D8FA               	call	PL8	;call to abstracted procedure
  9505  000DEC  241C               	addwf	GLCDMotor@k1^0,w,c
  9506  000DEE  6E73               	movwf	??_GLCDMotor^0,c
  9507  000DF0  D8EC               	call	PL2	;call to abstracted procedure
  9508  000DF2  B4D8               	btfsc	status,2,c
  9509  000DF4  6A1C               	clrf	GLCDMotor@k1^0,c
  9510  000DF6  0012               	return	
  9511  000DF8                     l5087:
  9512                           
  9513                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  9514  000DF8  0E04               	movlw	4
  9515  000DFA  6021               	cpfslt	_menuDaltGLCD^0,c
  9516  000DFC  D010               	goto	u4670
  9517  000DFE  D7CC               	goto	u4570
  9518  000E00                     u4640:
  9519                           
  9520                           ;GestioLCD.c: 82:     state = 0;
  9521  000E00  6A20               	clrf	GLCDMotor@state^0,c
  9522  000E02  0012               	return	
  9523  000E04                     l5095:
  9524                           
  9525                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  9526  000E04  EC7D  F000         	call	_LcLliure	;wreg free
  9527  000E08  E306               	bnc	l5101
  9528  000E0A  0E04               	movlw	4
  9529  000E0C  6021               	cpfslt	_menuDaltGLCD^0,c
  9530  000E0E  D003               	goto	l5101
  9531                           
  9532                           ;GestioLCD.c: 87:     state = 7;
  9533  000E10  0E07               	movlw	7
  9534  000E12  6E20               	movwf	GLCDMotor@state^0,c
  9535                           
  9536                           ;GestioLCD.c: 88:    }
  9537  000E14  0C07               	retlw	7
  9538  000E16                     l5101:
  9539  000E16  EC7D  F000         	call	_LcLliure	;wreg free
  9540  000E1A  A0D8               	btfss	status,0,c
  9541  000E1C  0012               	return	
  9542  000E1E                     u4670:
  9543  000E1E  0E03               	movlw	3
  9544  000E20  6421               	cpfsgt	_menuDaltGLCD^0,c
  9545  000E22  0C03               	retlw	3
  9546  000E24  D7ED               	goto	u4640
  9547  000E26                     l955:
  9548                           
  9549                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  9550  000E26  B276               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9551  000E28  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9552  000E2A  0012               	return	
  9553                           
  9554                           ;GestioLCD.c: 95:     length1 = 0;
  9555  000E2C  6A1A               	clrf	GLCDMotor@length1^0,c
  9556                           
  9557                           ;GestioLCD.c: 96:     length2 = 0;
  9558  000E2E  6A19               	clrf	GLCDMotor@length2^0,c
  9559                           
  9560                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  9561  000E30  0E00               	movlw	0
  9562  000E32  6E6C               	movwf	LcGotoXY@Row^0,c
  9563  000E34  ECC2  F00E         	call	_LcGotoXY
  9564                           
  9565                           ;GestioLCD.c: 98:     min1 = 0;
  9566  000E38  6A1E               	clrf	GLCDMotor@min1^0,c
  9567                           
  9568                           ;GestioLCD.c: 99:     max1 = 15;
  9569  000E3A  0E0F               	movlw	15
  9570  000E3C  6E4E               	movwf	GLCDMotor@max1^0,c
  9571                           
  9572                           ;GestioLCD.c: 100:     min2 = 0;
  9573  000E3E  6A1D               	clrf	GLCDMotor@min2^0,c
  9574                           
  9575                           ;GestioLCD.c: 101:     max2 = 15;
  9576  000E40  0E0F               	movlw	15
  9577  000E42  6E4D               	movwf	GLCDMotor@max2^0,c
  9578                           
  9579                           ;GestioLCD.c: 102:     j = 0;
  9580  000E44  6A1F               	clrf	GLCDMotor@j^0,c
  9581                           
  9582                           ;GestioLCD.c: 103:     k1 = 0;
  9583  000E46  6A1C               	clrf	GLCDMotor@k1^0,c
  9584                           
  9585                           ;GestioLCD.c: 104:     k2 = 0;
  9586  000E48  6A1B               	clrf	GLCDMotor@k2^0,c
  9587                           
  9588                           ;GestioLCD.c: 105:     newString = 0;
  9589  000E4A  9276               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  9590  000E4C  D7A5               	goto	u4570
  9591  000E4E                     l5131:
  9592                           
  9593                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  9594  000E4E  D8C8               	call	PL8	;call to abstracted procedure
  9595  000E50  241A               	addwf	GLCDMotor@length1^0,w,c
  9596  000E52  6E73               	movwf	??_GLCDMotor^0,c
  9597  000E54  D8BA               	call	PL2	;call to abstracted procedure
  9598  000E56  E104               	bnz	l5137
  9599  000E58  0E03               	movlw	3
  9600  000E5A  6421               	cpfsgt	_menuDaltGLCD^0,c
  9601  000E5C  D001               	goto	l5137
  9602  000E5E  D79C               	goto	u4570
  9603  000E60                     l5137:
  9604  000E60  D8BF               	call	PL8	;call to abstracted procedure
  9605  000E62  241A               	addwf	GLCDMotor@length1^0,w,c
  9606  000E64  6E73               	movwf	??_GLCDMotor^0,c
  9607  000E66  D8B1               	call	PL2	;call to abstracted procedure
  9608  000E68  E002               	bz	l5141
  9609                           
  9610                           ;GestioLCD.c: 114:     length1++;
  9611  000E6A  2A1A               	incf	GLCDMotor@length1^0,f,c
  9612                           
  9613                           ;GestioLCD.c: 115:    }
  9614  000E6C  0012               	return	
  9615  000E6E                     l5141:
  9616  000E6E  0E04               	movlw	4
  9617  000E70  6021               	cpfslt	_menuDaltGLCD^0,c
  9618  000E72  0C04               	retlw	4
  9619  000E74  D8B5               	call	PL8	;call to abstracted procedure
  9620  000E76  241A               	addwf	GLCDMotor@length1^0,w,c
  9621  000E78  6E73               	movwf	??_GLCDMotor^0,c
  9622  000E7A  D8A7               	call	PL2	;call to abstracted procedure
  9623  000E7C  A4D8               	btfss	status,2,c
  9624  000E7E  0012               	return	
  9625                           
  9626                           ;GestioLCD.c: 117:     state = 13;
  9627  000E80  0E0D               	movlw	13
  9628  000E82  6E20               	movwf	GLCDMotor@state^0,c
  9629  000E84  0C0D               	retlw	13
  9630  000E86                     l5147:
  9631                           
  9632                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  9633  000E86  0E11               	movlw	17
  9634  000E88  6019               	cpfslt	GLCDMotor@length2^0,c
  9635  000E8A  D015               	goto	l5157
  9636  000E8C  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9637  000E8E  D013               	goto	l5157
  9638                           
  9639                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  9640  000E90  EC1D  F005         	call	PL36	;call to abstracted procedure
  9641  000E94  ECC2  F00E         	call	_LcGotoXY
  9642                           
  9643                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  9644  000E98  5021               	movf	_menuDaltGLCD^0,w,c
  9645  000E9A  0D1D               	mullw	29
  9646  000E9C  CFF3 F073          	movff	prodl,??_GLCDMotor
  9647  000EA0  0E1D               	movlw	29
  9648  000EA2  2673               	addwf	??_GLCDMotor^0,f,c
  9649  000EA4  5073               	movf	??_GLCDMotor^0,w,c
  9650  000EA6  0F01               	addlw	low _menuList
  9651  000EA8  6E74               	movwf	(??_GLCDMotor+1)^0,c
  9652  000EAA  C074  F067         	movff	??_GLCDMotor+1,LcNewString@new_s
  9653  000EAE  D89D               	call	PL12	;call to abstracted procedure
  9654  000EB0  EC77  F000         	call	_LcNewString	;wreg free
  9655  000EB4  D771               	goto	u4570
  9656  000EB6                     l5157:
  9657  000EB6  0E10               	movlw	16
  9658  000EB8  6419               	cpfsgt	GLCDMotor@length2^0,c
  9659  000EBA  0C10               	retlw	16
  9660  000EBC  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9661  000EBE  0C10               	retlw	16
  9662                           
  9663                           ;GestioLCD.c: 127:     state = 9;
  9664  000EC0  0E09               	movlw	9
  9665  000EC2  6E20               	movwf	GLCDMotor@state^0,c
  9666  000EC4  0C09               	retlw	9
  9667  000EC6                     l5163:
  9668                           
  9669                           ;GestioLCD.c: 131:    if (j<16) {
  9670  000EC6  0E10               	movlw	16
  9671  000EC8  601F               	cpfslt	GLCDMotor@j^0,c
  9672  000ECA  D014               	goto	l5177
  9673                           
  9674                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  9675  000ECC  0E01               	movlw	1
  9676  000ECE  6E6C               	movwf	LcGotoXY@Row^0,c
  9677  000ED0  501F               	movf	GLCDMotor@j^0,w,c
  9678  000ED2  ECC2  F00E         	call	_LcGotoXY
  9679                           
  9680                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  9681  000ED6  D884               	call	PL8	;call to abstracted procedure
  9682  000ED8  241B               	addwf	GLCDMotor@k2^0,w,c
  9683  000EDA  D87E               	call	PL4	;call to abstracted procedure
  9684  000EDC  D876               	call	PL2	;call to abstracted procedure
  9685  000EDE  EC06  F00E         	call	_LcPutChar
  9686                           
  9687                           ;GestioLCD.c: 134:     j++;
  9688  000EE2  2A1F               	incf	GLCDMotor@j^0,f,c
  9689                           
  9690                           ;GestioLCD.c: 135:     k2++;
  9691  000EE4  2A1B               	incf	GLCDMotor@k2^0,f,c
  9692                           
  9693                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  9694  000EE6  D87C               	call	PL8	;call to abstracted procedure
  9695  000EE8  241B               	addwf	GLCDMotor@k2^0,w,c
  9696  000EEA  D876               	call	PL4	;call to abstracted procedure
  9697  000EEC  D86E               	call	PL2	;call to abstracted procedure
  9698  000EEE  B4D8               	btfsc	status,2,c
  9699  000EF0  6A1B               	clrf	GLCDMotor@k2^0,c
  9700  000EF2  0012               	return	
  9701  000EF4                     l5177:
  9702  000EF4  0E0F               	movlw	15
  9703  000EF6  641F               	cpfsgt	GLCDMotor@j^0,c
  9704  000EF8  0C0F               	retlw	15
  9705                           
  9706                           ;GestioLCD.c: 139:     min2++;
  9707  000EFA  2A1D               	incf	GLCDMotor@min2^0,f,c
  9708                           
  9709                           ;GestioLCD.c: 140:     max2++;
  9710  000EFC  2A4D               	incf	GLCDMotor@max2^0,f,c
  9711                           
  9712                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  9713  000EFE  D870               	call	PL8	;call to abstracted procedure
  9714  000F00  244D               	addwf	GLCDMotor@max2^0,w,c
  9715  000F02  D86A               	call	PL4	;call to abstracted procedure
  9716  000F04  D862               	call	PL2	;call to abstracted procedure
  9717  000F06  E101               	bnz	l5185
  9718  000F08  6A4D               	clrf	GLCDMotor@max2^0,c
  9719  000F0A                     l5185:
  9720                           
  9721                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  9722  000F0A  D86A               	call	PL8	;call to abstracted procedure
  9723  000F0C  241D               	addwf	GLCDMotor@min2^0,w,c
  9724  000F0E  D864               	call	PL4	;call to abstracted procedure
  9725  000F10  D85C               	call	PL2	;call to abstracted procedure
  9726  000F12  E101               	bnz	l973
  9727  000F14  6A1D               	clrf	GLCDMotor@min2^0,c
  9728  000F16                     l973:
  9729                           
  9730                           ;GestioLCD.c: 143:     j=0;
  9731  000F16  6A1F               	clrf	GLCDMotor@j^0,c
  9732                           
  9733                           ;GestioLCD.c: 144:     k2=min2;
  9734  000F18  C01D  F01B         	movff	GLCDMotor@min2,GLCDMotor@k2
  9735  000F1C  D73D               	goto	u4570
  9736  000F1E                     l5191:
  9737                           
  9738                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  9739  000F1E  5022               	movf	_timerGLCD^0,w,c
  9740  000F20  EC19  F00F         	call	_TiGetTics
  9741  000F24  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  9742  000F26  D00A               	goto	l975
  9743  000F28  D865               	call	PL70	;call to abstracted procedure
  9744  000F2A  E308               	bnc	l975
  9745  000F2C  A276               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9746  000F2E  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9747  000F30  D005               	goto	l975
  9748                           
  9749                           ;GestioLCD.c: 150:     LcClear();
  9750  000F32  EC74  F00F         	call	_LcClear	;wreg free
  9751  000F36                     l5199:
  9752                           
  9753                           ;GestioLCD.c: 151:     state = 2;
  9754  000F36  0E02               	movlw	2
  9755  000F38  6E20               	movwf	GLCDMotor@state^0,c
  9756                           
  9757                           ;GestioLCD.c: 152:    }
  9758  000F3A  0C02               	retlw	2
  9759  000F3C                     l975:
  9760  000F3C  B276               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9761  000F3E  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9762  000F40  0012               	return	
  9763                           
  9764                           ;GestioLCD.c: 154:     LcClear();
  9765  000F42  EC74  F00F         	call	_LcClear	;wreg free
  9766  000F46  D75C               	goto	u4640
  9767  000F48                     l5207:
  9768                           
  9769                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9770  000F48  5022               	movf	_timerGLCD^0,w,c
  9771  000F4A  ECC1  F00F         	call	_TiResetTics
  9772  000F4E  D724               	goto	u4570
  9773  000F50                     l5211:
  9774                           
  9775                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9776  000F50  EC7D  F000         	call	_LcLliure	;wreg free
  9777  000F54  A0D8               	btfss	status,0,c
  9778  000F56  0012               	return	
  9779                           
  9780                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9781  000F58  5022               	movf	_timerGLCD^0,w,c
  9782  000F5A  ECC1  F00F         	call	_TiResetTics
  9783                           
  9784                           ;GestioLCD.c: 165:     state = 11;
  9785  000F5E  0E0B               	movlw	11
  9786  000F60  6E20               	movwf	GLCDMotor@state^0,c
  9787  000F62  0C0B               	retlw	11
  9788  000F64                     l5217:
  9789                           
  9790                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  9791  000F64  D83D               	call	PL8	;call to abstracted procedure
  9792  000F66  2419               	addwf	GLCDMotor@length2^0,w,c
  9793  000F68  D837               	call	PL4	;call to abstracted procedure
  9794  000F6A  D82F               	call	PL2	;call to abstracted procedure
  9795  000F6C  E002               	bz	l5221
  9796                           
  9797                           ;GestioLCD.c: 170:     length2++;
  9798  000F6E  2A19               	incf	GLCDMotor@length2^0,f,c
  9799                           
  9800                           ;GestioLCD.c: 171:    }
  9801  000F70  0012               	return	
  9802  000F72                     l5221:
  9803  000F72  D836               	call	PL8	;call to abstracted procedure
  9804  000F74  2419               	addwf	GLCDMotor@length2^0,w,c
  9805  000F76  D830               	call	PL4	;call to abstracted procedure
  9806  000F78  D828               	call	PL2	;call to abstracted procedure
  9807  000F7A  E0DD               	bz	l5199
  9808  000F7C  0012               	return	
  9809  000F7E                     l5227:
  9810  000F7E  5020               	movf	GLCDMotor@state^0,w,c
  9811  000F80  6E73               	movwf	??_GLCDMotor^0,c
  9812  000F82  6A74               	clrf	(??_GLCDMotor+1)^0,c
  9813                           
  9814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9815                           ; Switch size 1, requested type "space"
  9816                           ; Number of cases is 1, Range of values is 0 to 0
  9817                           ; switch strategies available:
  9818                           ; Name         Instructions Cycles
  9819                           ; simple_byte            4     3 (average)
  9820                           ;	Chosen strategy is simple_byte
  9821  000F84  5074               	movf	(??_GLCDMotor+1)^0,w,c
  9822  000F86  A4D8               	btfss	status,2,c
  9823  000F88  0012               	return	
  9824                           
  9825                           ; Switch size 1, requested type "space"
  9826                           ; Number of cases is 12, Range of values is 0 to 13
  9827                           ; switch strategies available:
  9828                           ; Name         Instructions Cycles
  9829                           ; simple_byte           37    19 (average)
  9830                           ;	Chosen strategy is simple_byte
  9831  000F8A  5073               	movf	??_GLCDMotor^0,w,c
  9832  000F8C  E101 D74B          	bz	l955
  9833  000F90  0A01               	xorlw	1	; case 1
  9834  000F92  E101 D75C          	bz	l5131
  9835  000F96  0A03               	xorlw	3	; case 2
  9836  000F98  E101 D6E6          	bz	l5043
  9837  000F9C  0A01               	xorlw	1	; case 3
  9838  000F9E  E101 D6FD          	bz	l5059
  9839  000FA2  0A06               	xorlw	6	; case 5
  9840  000FA4  E101 D72E          	bz	l5095
  9841  000FA8  0A03               	xorlw	3	; case 6
  9842  000FAA  E101 D725          	bz	l5087
  9843  000FAE  0A01               	xorlw	1	; case 7
  9844  000FB0  E101 D769          	bz	l5147
  9845  000FB4  0A0F               	xorlw	15	; case 8
  9846  000FB6  E0CC               	bz	l5211
  9847  000FB8  0A01               	xorlw	1	; case 9
  9848  000FBA  E085               	bz	l5163
  9849  000FBC  0A03               	xorlw	3	; case 10
  9850  000FBE  E0C4               	bz	l5207
  9851  000FC0  0A01               	xorlw	1	; case 11
  9852  000FC2  E0AD               	bz	l5191
  9853  000FC4  0A06               	xorlw	6	; case 13
  9854  000FC6  E0CE               	bz	l5217
  9855  000FC8  0012               	return		;funcret
  9856  000FCA                     __end_of_GLCDMotor:
  9857                           	callstack 0
  9858  000FCA                     PL2:
  9859                           	callstack 24
  9860  000FCA  C073  FFF6         	movff	??_GLCDMotor,tblptrl
  9861  000FCE                     	if	1	;There is more than 1 active tblptr byte
  9862  000FCE  0E02               	movlw	high __smallconst
  9863  000FD0  6EF7               	movwf	tblptrh,c
  9864  000FD2                     	endif
  9865  000FD2                     	if	0	;tblptru may be non-zero
  9866  000FD2                     	endif
  9867  000FD2                     	if	0	;tblptru may be non-zero
  9868  000FD2                     	endif
  9869  000FD2  0008               	tblrd		*
  9870  000FD4  50F5               	movf	tablat,w,c
  9871  000FD6  0012               	return	
  9872  000FD8                     __end_ofPL2:
  9873                           	callstack 0
  9874  000FD8                     PL4:
  9875                           	callstack 24
  9876  000FD8  6E73               	movwf	??_GLCDMotor^0,c
  9877  000FDA  0E1D               	movlw	29
  9878  000FDC  2673               	addwf	??_GLCDMotor^0,f,c
  9879  000FDE  0C1D               	retlw	29
  9880  000FE0                     __end_ofPL4:
  9881                           	callstack 0
  9882  000FE0                     PL8:
  9883                           	callstack 24
  9884  000FE0  5021               	movf	_menuDaltGLCD^0,w,c
  9885  000FE2  0D1D               	mullw	29
  9886  000FE4  50F3               	movf	243,w,c
  9887  000FE6  0F01               	addlw	low _menuList
  9888  000FE8  0012               	return	
  9889  000FEA                     __end_ofPL8:
  9890                           	callstack 0
  9891  000FEA                     PL12:
  9892                           	callstack 24
  9893  000FEA  5067               	movf	LcNewString@new_s^0,w,c
  9894  000FEC  A4D8               	btfss	status,2,c
  9895  000FEE  0E02               	movlw	high __smallconst
  9896  000FF0  6E68               	movwf	(LcNewString@new_s+1)^0,c
  9897  000FF2  0012               	return	
  9898  000FF4                     __end_ofPL12:
  9899                           	callstack 0
  9900  000FF4                     PL70:
  9901                           	callstack 27
  9902  000FF4  0EB5               	movlw	181
  9903  000FF6  5C64               	subwf	?_TiGetTics^0,w,c
  9904  000FF8  0E04               	movlw	4
  9905  000FFA  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  9906  000FFC  0012               	return	
  9907  000FFE                     __end_ofPL70:
  9908                           	callstack 0
  9909                           
  9910 ;; *************** function _LcPutChar *****************
  9911 ;; Defined at:
  9912 ;;		line 120 in file "LcTLCD.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;  c               1    wreg     unsigned char 
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;  c               1   19[COMRAM] unsigned char 
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  1    wreg      void 
  9919 ;; Registers used:
  9920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMRAM   BANK0   BANK1
  9926 ;;      Params:         0       0       0
  9927 ;;      Locals:         1       0       0
  9928 ;;      Temps:          0       0       0
  9929 ;;      Totals:         1       0       0
  9930 ;;Total ram usage:        1 bytes
  9931 ;; Hardware stack levels used: 1
  9932 ;; Hardware stack levels required when called: 5
  9933 ;; This function calls:
  9934 ;;		_CantaData
  9935 ;;		_LcGotoXY
  9936 ;;		_WaitForBusy
  9937 ;; This function is called by:
  9938 ;;		_LcLCD
  9939 ;;		_menu
  9940 ;;		_GLCDMotor
  9941 ;;		_motorSIO
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text78
  9946  001C0C                     __ptext78:
  9947                           	callstack 0
  9948  001C0C                     _LcPutChar:
  9949                           	callstack 24
  9950                           
  9951                           ;incstack = 0
  9952                           ;LcPutChar@c stored from wreg
  9953  001C0C  6E72               	movwf	LcPutChar@c^0,c
  9954                           
  9955                           ;LcTLCD.c: 122:  WaitForBusy(); CantaData(c);
  9956  001C0E  EC6D  F00E         	call	_WaitForBusy	;wreg free
  9957  001C12  5072               	movf	LcPutChar@c^0,w,c
  9958  001C14  EC8C  F00E         	call	_CantaData
  9959                           
  9960                           ;LcTLCD.c: 124:  ++ColumnAct;
  9961  001C18  2A3E               	incf	_ColumnAct^0,f,c
  9962                           
  9963                           ;LcTLCD.c: 126:  if (Rows == 2) {
  9964  001C1A  0E02               	movlw	2
  9965  001C1C  1840               	xorwf	_Rows^0,w,c
  9966  001C1E  E10C               	bnz	l4509
  9967                           
  9968                           ;LcTLCD.c: 127:   if (ColumnAct >= 40) {
  9969  001C20  0E27               	movlw	39
  9970  001C22  643E               	cpfsgt	_ColumnAct^0,c
  9971  001C24  D009               	goto	l4509
  9972                           
  9973                           ;LcTLCD.c: 128:    ColumnAct = 0;
  9974  001C26  6A3E               	clrf	_ColumnAct^0,c
  9975                           
  9976                           ;LcTLCD.c: 129:    if (++RowAct >= 2) RowAct = 0;
  9977  001C28  2A3F               	incf	_RowAct^0,f,c
  9978  001C2A  0E01               	movlw	1
  9979  001C2C  643F               	cpfsgt	_RowAct^0,c
  9980  001C2E  D001               	goto	l4507
  9981  001C30  6A3F               	clrf	_RowAct^0,c
  9982  001C32                     l4507:
  9983                           
  9984                           ;LcTLCD.c: 130:    LcGotoXY(ColumnAct, RowAct);
  9985  001C32  D80C               	call	PL88	;call to abstracted procedure
  9986  001C34  ECC2  F00E         	call	_LcGotoXY
  9987  001C38                     l4509:
  9988                           
  9989                           ;LcTLCD.c: 141:  if (RowAct == 1) {
  9990  001C38  043F               	decf	_RowAct^0,w,c
  9991  001C3A  A4D8               	btfss	status,2,c
  9992  001C3C  0012               	return	
  9993                           
  9994                           ;LcTLCD.c: 142:   if (ColumnAct >= 40) ColumnAct = 0;
  9995  001C3E  0E27               	movlw	39
  9996  001C40  643E               	cpfsgt	_ColumnAct^0,c
  9997  001C42  D001               	goto	l4515
  9998  001C44  6A3E               	clrf	_ColumnAct^0,c
  9999  001C46                     l4515:
 10000                           
 10001                           ;LcTLCD.c: 143:   LcGotoXY(ColumnAct, RowAct);
 10002  001C46  D802               	call	PL88	;call to abstracted procedure
 10003  001C48  EFC2  F00E         	goto	_LcGotoXY
 10004  001C4C                     __end_of_LcPutChar:
 10005                           	callstack 0
 10006  001C4C                     PL88:
 10007                           	callstack 24
 10008  001C4C  C03F  F06C         	movff	_RowAct,LcGotoXY@Row
 10009  001C50  503E               	movf	_ColumnAct^0,w,c
 10010  001C52  0012               	return	
 10011  001C54                     __end_ofPL88:
 10012                           	callstack 0
 10013                           
 10014 ;; *************** function _CantaData *****************
 10015 ;; Defined at:
 10016 ;;		line 182 in file "LcTLCD.c"
 10017 ;; Parameters:    Size  Location     Type
 10018 ;;  Data            1    wreg     unsigned char 
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;  Data            1    7[COMRAM] unsigned char 
 10021 ;; Return value:  Size  Location     Type
 10022 ;;                  1    wreg      void 
 10023 ;; Registers used:
 10024 ;;		wreg, status,2, status,0, cstack
 10025 ;; Tracked objects:
 10026 ;;		On entry : 0/0
 10027 ;;		On exit  : 0/0
 10028 ;;		Unchanged: 0/0
 10029 ;; Data sizes:     COMRAM   BANK0   BANK1
 10030 ;;      Params:         0       0       0
 10031 ;;      Locals:         1       0       0
 10032 ;;      Temps:          0       0       0
 10033 ;;      Totals:         1       0       0
 10034 ;;Total ram usage:        1 bytes
 10035 ;; Hardware stack levels used: 1
 10036 ;; Hardware stack levels required when called: 3
 10037 ;; This function calls:
 10038 ;;		_CantaPartAlta
 10039 ;;		_CantaPartBaixa
 10040 ;; This function is called by:
 10041 ;;		_LcPutChar
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045                           	psect	text79
 10046  001D18                     __ptext79:
 10047                           	callstack 0
 10048  001D18                     _CantaData:
 10049                           	callstack 25
 10050                           
 10051                           ;incstack = 0
 10052                           ;CantaData@Data stored from wreg
 10053  001D18  6E66               	movwf	CantaData@Data^0,c
 10054                           
 10055                           ;LcTLCD.c: 183:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10056  001D1A  9694               	bcf	148,3,c	;volatile
 10057  001D1C  9494               	bcf	148,2,c	;volatile
 10058  001D1E  9294               	bcf	148,1,c	;volatile
 10059  001D20  9094               	bcf	148,0,c	;volatile
 10060                           
 10061                           ;LcTLCD.c: 184:  (LATCbits.LATC5 = 1);
 10062  001D22  8A8B               	bsf	139,5,c	;volatile
 10063                           
 10064                           ;LcTLCD.c: 185:  (LATDbits.LATD7 = 0);
 10065  001D24  9E8C               	bcf	140,7,c	;volatile
 10066                           
 10067                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
 10068  001D26  888B               	bsf	139,4,c	;volatile
 10069                           
 10070                           ;LcTLCD.c: 187:  CantaPartAlta(Data);
 10071  001D28  5066               	movf	CantaData@Data^0,w,c
 10072  001D2A  ECAB  F00D         	call	_CantaPartAlta
 10073                           
 10074                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 1);
 10075                           
 10076                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 0);
 10077                           
 10078                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
 10079                           
 10080                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
 10081  001D2E  D80B               	call	PL74	;call to abstracted procedure
 10082                           
 10083                           ;LcTLCD.c: 192:  CantaPartBaixa(Data);
 10084  001D30  5066               	movf	CantaData@Data^0,w,c
 10085  001D32  EC78  F00D         	call	_CantaPartBaixa
 10086                           
 10087                           ;LcTLCD.c: 193:  (LATCbits.LATC4 = 1);
 10088                           
 10089                           ;LcTLCD.c: 194:  (LATCbits.LATC4 = 0);
 10090                           
 10091                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10092  001D36  D000               	goto	PL34	;call to abstracted procedure
 10093  001D38                     __end_of_CantaData:
 10094                           	callstack 0
 10095  001D38                     PL34:
 10096                           	callstack 24
 10097  001D38  888B               	bsf	139,4,c	;volatile
 10098  001D3A  988B               	bcf	139,4,c	;volatile
 10099  001D3C  8694               	bsf	148,3,c	;volatile
 10100  001D3E  8494               	bsf	148,2,c	;volatile
 10101  001D40  8294               	bsf	148,1,c	;volatile
 10102  001D42  8094               	bsf	148,0,c	;volatile
 10103  001D44  0012               	return		;funcret
 10104  001D46                     __end_ofPL34:
 10105                           	callstack 0
 10106  001D46                     PL74:
 10107                           	callstack 24
 10108  001D46  888B               	bsf	139,4,c	;volatile
 10109  001D48  988B               	bcf	139,4,c	;volatile
 10110  001D4A  988B               	bcf	139,4,c	;volatile
 10111  001D4C  888B               	bsf	139,4,c	;volatile
 10112  001D4E  0012               	return	
 10113  001D50                     __end_ofPL74:
 10114                           	callstack 0
 10115                           
 10116 ;; *************** function _LcNewString *****************
 10117 ;; Defined at:
 10118 ;;		line 227 in file "LcTLCD.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;  new_s           2    8[COMRAM] PTR unsigned char 
 10121 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
 10122 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(144), 
 10123 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
 10124 ;;		 -> STR_1(7), registerText(11), loginText(8), 
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;		None
 10127 ;; Return value:  Size  Location     Type
 10128 ;;                  1    wreg      void 
 10129 ;; Registers used:
 10130 ;;		wreg, status,2, status,0
 10131 ;; Tracked objects:
 10132 ;;		On entry : 0/0
 10133 ;;		On exit  : 0/0
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMRAM   BANK0   BANK1
 10136 ;;      Params:         2       0       0
 10137 ;;      Locals:         0       0       0
 10138 ;;      Temps:          0       0       0
 10139 ;;      Totals:         2       0       0
 10140 ;;Total ram usage:        2 bytes
 10141 ;; Hardware stack levels used: 1
 10142 ;; Hardware stack levels required when called: 2
 10143 ;; This function calls:
 10144 ;;		Nothing
 10145 ;; This function is called by:
 10146 ;;		_menu
 10147 ;;		_GLCDMotor
 10148 ;;		_motorJoc
 10149 ;;		_motorSIO
 10150 ;; This function uses a non-reentrant model
 10151 ;;
 10152                           
 10153                           	psect	text80
 10154  0000EE                     __ptext80:
 10155                           	callstack 0
 10156  0000EE                     _LcNewString:
 10157                           	callstack 27
 10158                           
 10159                           ;LcTLCD.c: 228:     s_ptr = new_s;
 10160                           
 10161                           ;incstack = 0
 10162  0000EE  C067  F00B         	movff	LcNewString@new_s,_s_ptr
 10163  0000F2  C068  F00C         	movff	LcNewString@new_s+1,_s_ptr+1
 10164                           
 10165                           ;LcTLCD.c: 229:     nou_s = 1;
 10166  0000F6  8477               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10167  0000F8  0012               	return		;funcret
 10168  0000FA                     __end_of_LcNewString:
 10169                           	callstack 0
 10170                           
 10171 ;; *************** function _LcLliure *****************
 10172 ;; Defined at:
 10173 ;;		line 243 in file "LcTLCD.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;		None
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;		None
 10178 ;; Return value:  Size  Location     Type
 10179 ;;		None               void
 10180 ;; Registers used:
 10181 ;;		status,0
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1
 10187 ;;      Params:         0       0       0
 10188 ;;      Locals:         0       0       0
 10189 ;;      Temps:          0       0       0
 10190 ;;      Totals:         0       0       0
 10191 ;;Total ram usage:        0 bytes
 10192 ;; Hardware stack levels used: 1
 10193 ;; Hardware stack levels required when called: 2
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_menu
 10198 ;;		_GLCDMotor
 10199 ;;		_motorJoc
 10200 ;;		_motorSIO
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           	psect	text81
 10205  0000FA                     __ptext81:
 10206                           	callstack 0
 10207  0000FA                     _LcLliure:
 10208                           	callstack 27
 10209                           
 10210                           ;LcTLCD.c: 244:     return !nou_s;
 10211                           
 10212                           ;incstack = 0
 10213  0000FA  A477               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10214  0000FC  D002               	goto	l4525
 10215  0000FE  90D8               	bcf	status,0,c
 10216  000100  0012               	return	
 10217  000102                     l4525:
 10218  000102  80D8               	bsf	status,0,c
 10219  000104  0012               	return		;funcret
 10220  000106                     __end_of_LcLliure:
 10221                           	callstack 0
 10222                           
 10223 ;; *************** function _LcClear *****************
 10224 ;; Defined at:
 10225 ;;		line 84 in file "LcTLCD.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;		None
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;		None
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMRAM   BANK0   BANK1
 10239 ;;      Params:         0       0       0
 10240 ;;      Locals:         0       0       0
 10241 ;;      Temps:          0       0       0
 10242 ;;      Totals:         0       0       0
 10243 ;;Total ram usage:        0 bytes
 10244 ;; Hardware stack levels used: 1
 10245 ;; Hardware stack levels required when called: 5
 10246 ;; This function calls:
 10247 ;;		_CantaIR
 10248 ;;		_Espera
 10249 ;;		_LcGotoXY
 10250 ;;		_WaitForBusy
 10251 ;; This function is called by:
 10252 ;;		_menu
 10253 ;;		_GLCDMotor
 10254 ;;		_motorSIO
 10255 ;; This function uses a non-reentrant model
 10256 ;;
 10257                           
 10258                           	psect	text82
 10259  001EE8                     __ptext82:
 10260                           	callstack 0
 10261  001EE8                     _LcClear:
 10262                           	callstack 24
 10263                           
 10264                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
 10265                           
 10266                           ;incstack = 0
 10267  001EE8  EC6D  F00E         	call	_WaitForBusy	;wreg free
 10268  001EEC  0E01               	movlw	1
 10269  001EEE  ECB3  F00F         	call	_CantaIR
 10270                           
 10271                           ;LcTLCD.c: 88:  Espera(Timer, 3);
 10272  001EF2  D806               	call	PL64	;call to abstracted procedure
 10273  001EF4  EC85  F00F         	call	_Espera
 10274                           
 10275                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
 10276  001EF8  0E00               	movlw	0
 10277  001EFA  6E6C               	movwf	LcGotoXY@Row^0,c
 10278  001EFC  EFC2  F00E         	goto	_LcGotoXY
 10279  001F00                     __end_of_LcClear:
 10280                           	callstack 0
 10281  001F00                     PL64:
 10282                           	callstack 26
 10283  001F00  6A6C               	clrf	(Espera@ms+1)^0,c
 10284  001F02  0E03               	movlw	3
 10285  001F04  6E6B               	movwf	Espera@ms^0,c
 10286  001F06  503D               	movf	_Timer^0,w,c
 10287  001F08  0012               	return	
 10288  001F0A                     __end_ofPL64:
 10289                           	callstack 0
 10290                           
 10291 ;; *************** function _LcGotoXY *****************
 10292 ;; Defined at:
 10293 ;;		line 106 in file "LcTLCD.c"
 10294 ;; Parameters:    Size  Location     Type
 10295 ;;  Column          1    wreg     unsigned char 
 10296 ;;  Row             1   13[COMRAM] unsigned char 
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;  Column          1   18[COMRAM] unsigned char 
 10299 ;;  Fisics          2   14[COMRAM] int 
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  1    wreg      void 
 10302 ;; Registers used:
 10303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10304 ;; Tracked objects:
 10305 ;;		On entry : 0/0
 10306 ;;		On exit  : 0/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMRAM   BANK0   BANK1
 10309 ;;      Params:         1       0       0
 10310 ;;      Locals:         5       0       0
 10311 ;;      Temps:          0       0       0
 10312 ;;      Totals:         6       0       0
 10313 ;;Total ram usage:        6 bytes
 10314 ;; Hardware stack levels used: 1
 10315 ;; Hardware stack levels required when called: 4
 10316 ;; This function calls:
 10317 ;;		_CantaIR
 10318 ;;		_WaitForBusy
 10319 ;; This function is called by:
 10320 ;;		_LcClear
 10321 ;;		_LcPutChar
 10322 ;;		_menu
 10323 ;;		_GLCDMotor
 10324 ;;		_motorJoc
 10325 ;;		_motorSIO
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           	psect	text83
 10330  001D84                     __ptext83:
 10331                           	callstack 0
 10332  001D84                     _LcGotoXY:
 10333                           	callstack 24
 10334                           
 10335                           ;incstack = 0
 10336                           ;LcGotoXY@Column stored from wreg
 10337  001D84  6E71               	movwf	LcGotoXY@Column^0,c
 10338                           
 10339                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 111:  Fisics = Column + (!Row ? 0 : 0x40);
 10340  001D86  506C               	movf	LcGotoXY@Row^0,w,c
 10341  001D88  E004               	bz	l55
 10342  001D8A  6A70               	clrf	(_LcGotoXY$334+1)^0,c
 10343  001D8C  0E40               	movlw	64
 10344  001D8E  6E6F               	movwf	_LcGotoXY$334^0,c
 10345  001D90  D002               	goto	l4419
 10346  001D92                     l55:
 10347  001D92  6A6F               	clrf	_LcGotoXY$334^0,c
 10348  001D94  6A70               	clrf	(_LcGotoXY$334+1)^0,c
 10349  001D96                     l4419:
 10350  001D96  5071               	movf	LcGotoXY@Column^0,w,c
 10351  001D98  246F               	addwf	_LcGotoXY$334^0,w,c
 10352  001D9A  6E6D               	movwf	LcGotoXY@Fisics^0,c
 10353  001D9C  0E00               	movlw	0
 10354  001D9E  2070               	addwfc	(_LcGotoXY$334+1)^0,w,c
 10355  001DA0  6E6E               	movwf	(LcGotoXY@Fisics+1)^0,c
 10356                           
 10357                           ;LcTLCD.c: 113:  WaitForBusy();
 10358  001DA2  EC6D  F00E         	call	_WaitForBusy	;wreg free
 10359                           
 10360                           ;LcTLCD.c: 114:  CantaIR(0x80 | Fisics);
 10361  001DA6  506D               	movf	LcGotoXY@Fisics^0,w,c
 10362  001DA8  0980               	iorlw	128
 10363  001DAA  ECB3  F00F         	call	_CantaIR
 10364                           
 10365                           ;LcTLCD.c: 116:  RowAct = Row;
 10366  001DAE  C06C  F03F         	movff	LcGotoXY@Row,_RowAct
 10367                           
 10368                           ;LcTLCD.c: 117:  ColumnAct = Column;
 10369  001DB2  C071  F03E         	movff	LcGotoXY@Column,_ColumnAct
 10370  001DB6  0012               	return		;funcret
 10371  001DB8                     __end_of_LcGotoXY:
 10372                           	callstack 0
 10373                           
 10374 ;; *************** function _WaitForBusy *****************
 10375 ;; Defined at:
 10376 ;;		line 198 in file "LcTLCD.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;		None
 10379 ;; Auto vars:     Size  Location     Type
 10380 ;;  Busy            1   12[COMRAM] unsigned char 
 10381 ;; Return value:  Size  Location     Type
 10382 ;;                  1    wreg      void 
 10383 ;; Registers used:
 10384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10385 ;; Tracked objects:
 10386 ;;		On entry : 0/0
 10387 ;;		On exit  : 0/0
 10388 ;;		Unchanged: 0/0
 10389 ;; Data sizes:     COMRAM   BANK0   BANK1
 10390 ;;      Params:         0       0       0
 10391 ;;      Locals:         1       0       0
 10392 ;;      Temps:          0       0       0
 10393 ;;      Totals:         1       0       0
 10394 ;;Total ram usage:        1 bytes
 10395 ;; Hardware stack levels used: 1
 10396 ;; Hardware stack levels required when called: 3
 10397 ;; This function calls:
 10398 ;;		_TiGetTics
 10399 ;;		_TiResetTics
 10400 ;; This function is called by:
 10401 ;;		_LcInit
 10402 ;;		_LcClear
 10403 ;;		_LcGotoXY
 10404 ;;		_LcPutChar
 10405 ;; This function uses a non-reentrant model
 10406 ;;
 10407                           
 10408                           	psect	text84
 10409  001CDA                     __ptext84:
 10410                           	callstack 0
 10411  001CDA                     _WaitForBusy:
 10412                           	callstack 25
 10413                           
 10414                           ;LcTLCD.c: 199:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10415                           
 10416                           ;incstack = 0
 10417  001CDA  8694               	bsf	148,3,c	;volatile
 10418  001CDC  8494               	bsf	148,2,c	;volatile
 10419  001CDE  8294               	bsf	148,1,c	;volatile
 10420  001CE0  8094               	bsf	148,0,c	;volatile
 10421                           
 10422                           ;LcTLCD.c: 200:  (LATCbits.LATC5 = 0);
 10423  001CE2  9A8B               	bcf	139,5,c	;volatile
 10424                           
 10425                           ;LcTLCD.c: 201:  (LATDbits.LATD7 = 1);
 10426  001CE4  8E8C               	bsf	140,7,c	;volatile
 10427                           
 10428                           ;LcTLCD.c: 202:  TiResetTics(Timer);
 10429  001CE6  503D               	movf	_Timer^0,w,c
 10430  001CE8  ECC1  F00F         	call	_TiResetTics
 10431  001CEC                     l4387:
 10432                           
 10433                           ;LcTLCD.c: 204:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10434  001CEC  888B               	bsf	139,4,c	;volatile
 10435  001CEE  888B               	bsf	139,4,c	;volatile
 10436                           
 10437                           ;LcTLCD.c: 205:   Busy = (PORTCbits.RC3);
 10438  001CF0  0E00               	movlw	0
 10439  001CF2  B682               	btfsc	130,3,c	;volatile
 10440  001CF4  0E01               	movlw	1
 10441  001CF6  6E6B               	movwf	WaitForBusy@Busy^0,c
 10442                           
 10443                           ;LcTLCD.c: 206:   (LATCbits.LATC4 = 0);
 10444  001CF8  988B               	bcf	139,4,c	;volatile
 10445                           
 10446                           ;LcTLCD.c: 207:   (LATCbits.LATC4 = 0);
 10447  001CFA  988B               	bcf	139,4,c	;volatile
 10448                           
 10449                           ;LcTLCD.c: 208:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10450  001CFC  888B               	bsf	139,4,c	;volatile
 10451  001CFE  888B               	bsf	139,4,c	;volatile
 10452                           
 10453                           ;LcTLCD.c: 210:   (LATCbits.LATC4 = 0);
 10454  001D00  988B               	bcf	139,4,c	;volatile
 10455                           
 10456                           ;LcTLCD.c: 211:   (LATCbits.LATC4 = 0);
 10457  001D02  988B               	bcf	139,4,c	;volatile
 10458                           
 10459                           ;LcTLCD.c: 212:   if (TiGetTics(Timer)) break;
 10460  001D04  503D               	movf	_Timer^0,w,c
 10461  001D06  EC19  F00F         	call	_TiGetTics
 10462  001D0A  5064               	movf	?_TiGetTics^0,w,c
 10463  001D0C  1065               	iorwf	(?_TiGetTics+1)^0,w,c
 10464  001D0E  E001               	bz	l4409
 10465  001D10  0012               	return	
 10466  001D12                     l4409:
 10467                           
 10468                           ;LcTLCD.c: 213:  } while(Busy);
 10469  001D12  506B               	movf	WaitForBusy@Busy^0,w,c
 10470  001D14  E1EB               	bnz	l4387
 10471  001D16  0012               	return		;funcret
 10472  001D18                     __end_of_WaitForBusy:
 10473                           	callstack 0
 10474                           
 10475 ;; *************** function _CantaIR *****************
 10476 ;; Defined at:
 10477 ;;		line 166 in file "LcTLCD.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  IR              1    wreg     unsigned char 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;  IR              1    7[COMRAM] unsigned char 
 10482 ;; Return value:  Size  Location     Type
 10483 ;;                  1    wreg      void 
 10484 ;; Registers used:
 10485 ;;		wreg, status,2, status,0, cstack
 10486 ;; Tracked objects:
 10487 ;;		On entry : 0/0
 10488 ;;		On exit  : 0/0
 10489 ;;		Unchanged: 0/0
 10490 ;; Data sizes:     COMRAM   BANK0   BANK1
 10491 ;;      Params:         0       0       0
 10492 ;;      Locals:         1       0       0
 10493 ;;      Temps:          0       0       0
 10494 ;;      Totals:         1       0       0
 10495 ;;Total ram usage:        1 bytes
 10496 ;; Hardware stack levels used: 1
 10497 ;; Hardware stack levels required when called: 3
 10498 ;; This function calls:
 10499 ;;		_CantaPartAlta
 10500 ;;		_CantaPartBaixa
 10501 ;; This function is called by:
 10502 ;;		_LcScroll
 10503 ;;		_LcInit
 10504 ;;		_LcClear
 10505 ;;		_LcGotoXY
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509                           	psect	text85
 10510  001F66                     __ptext85:
 10511                           	callstack 0
 10512  001F66                     _CantaIR:
 10513                           	callstack 24
 10514                           
 10515                           ;incstack = 0
 10516                           ;CantaIR@IR stored from wreg
 10517  001F66  6E66               	movwf	CantaIR@IR^0,c
 10518                           
 10519                           ;LcTLCD.c: 167:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10520  001F68  9694               	bcf	148,3,c	;volatile
 10521                           
 10522                           ;LcTLCD.c: 168:  (LATCbits.LATC5 = 0);
 10523                           
 10524                           ;LcTLCD.c: 169:  (LATDbits.LATD7 = 0);
 10525                           
 10526                           ;LcTLCD.c: 170:  (LATCbits.LATC4 = 1);
 10527  001F6A  ECFA  F00C         	call	PL42	;call to abstracted procedure
 10528                           
 10529                           ;LcTLCD.c: 171:  CantaPartAlta(IR);
 10530  001F6E  5066               	movf	CantaIR@IR^0,w,c
 10531  001F70  ECAB  F00D         	call	_CantaPartAlta
 10532                           
 10533                           ;LcTLCD.c: 172:  (LATCbits.LATC4 = 1);
 10534                           
 10535                           ;LcTLCD.c: 173:  (LATCbits.LATC4 = 0);
 10536                           
 10537                           ;LcTLCD.c: 174:  (LATCbits.LATC4 = 0);
 10538                           
 10539                           ;LcTLCD.c: 175:  (LATCbits.LATC4 = 1);
 10540  001F74  ECA3  F00E         	call	PL74	;call to abstracted procedure
 10541                           
 10542                           ;LcTLCD.c: 176:  CantaPartBaixa(IR);
 10543  001F78  5066               	movf	CantaIR@IR^0,w,c
 10544  001F7A  EC78  F00D         	call	_CantaPartBaixa
 10545                           
 10546                           ;LcTLCD.c: 177:  (LATCbits.LATC4 = 1);
 10547                           
 10548                           ;LcTLCD.c: 178:  (LATCbits.LATC4 = 0);
 10549                           
 10550                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10551  001F7E  EF9C  F00E         	goto	PL34	;call to abstracted procedure
 10552  001F82                     __end_of_CantaIR:
 10553                           	callstack 0
 10554                           
 10555 ;; *************** function _CantaPartBaixa *****************
 10556 ;; Defined at:
 10557 ;;		line 159 in file "LcTLCD.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;  c               1    wreg     unsigned char 
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;  c               1    6[COMRAM] unsigned char 
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  1    wreg      void 
 10564 ;; Registers used:
 10565 ;;		wreg, status,2, status,0
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMRAM   BANK0   BANK1
 10571 ;;      Params:         0       0       0
 10572 ;;      Locals:         1       0       0
 10573 ;;      Temps:          1       0       0
 10574 ;;      Totals:         2       0       0
 10575 ;;Total ram usage:        2 bytes
 10576 ;; Hardware stack levels used: 1
 10577 ;; Hardware stack levels required when called: 2
 10578 ;; This function calls:
 10579 ;;		Nothing
 10580 ;; This function is called by:
 10581 ;;		_CantaIR
 10582 ;;		_CantaData
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text86
 10587  001AF0                     __ptext86:
 10588                           	callstack 0
 10589  001AF0                     _CantaPartBaixa:
 10590                           	callstack 24
 10591                           
 10592                           ;incstack = 0
 10593                           ;CantaPartBaixa@c stored from wreg
 10594  001AF0  6E65               	movwf	CantaPartBaixa@c^0,c
 10595                           
 10596                           ;LcTLCD.c: 160:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
 10597  001AF2  A665               	btfss	CantaPartBaixa@c^0,3,c
 10598  001AF4  D003               	goto	u3760
 10599  001AF6  6A64               	clrf	??_CantaPartBaixa^0,c
 10600  001AF8  2A64               	incf	??_CantaPartBaixa^0,f,c
 10601  001AFA  D001               	goto	u3778
 10602  001AFC                     u3760:
 10603  001AFC  6A64               	clrf	??_CantaPartBaixa^0,c
 10604  001AFE                     u3778:
 10605  001AFE  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10606  001B00  D825               	call	PL78	;call to abstracted procedure
 10607  001B02  0BF7               	andlw	-9
 10608  001B04  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10609  001B06  6E8B               	movwf	139,c	;volatile
 10610                           
 10611                           ;LcTLCD.c: 161:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
 10612  001B08  A465               	btfss	CantaPartBaixa@c^0,2,c
 10613  001B0A  D003               	goto	u3780
 10614  001B0C  6A64               	clrf	??_CantaPartBaixa^0,c
 10615  001B0E  2A64               	incf	??_CantaPartBaixa^0,f,c
 10616  001B10  D001               	goto	u3798
 10617  001B12                     u3780:
 10618  001B12  6A64               	clrf	??_CantaPartBaixa^0,c
 10619  001B14                     u3798:
 10620  001B14  D81B               	call	PL78	;call to abstracted procedure
 10621  001B16  0BFB               	andlw	-5
 10622  001B18  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10623  001B1A  6E8B               	movwf	139,c	;volatile
 10624                           
 10625                           ;LcTLCD.c: 162:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
 10626  001B1C  A265               	btfss	CantaPartBaixa@c^0,1,c
 10627  001B1E  D003               	goto	u3800
 10628  001B20  6A64               	clrf	??_CantaPartBaixa^0,c
 10629  001B22  2A64               	incf	??_CantaPartBaixa^0,f,c
 10630  001B24  D001               	goto	u3818
 10631  001B26                     u3800:
 10632  001B26  6A64               	clrf	??_CantaPartBaixa^0,c
 10633  001B28                     u3818:
 10634  001B28  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10635  001B2A  508B               	movf	139,w,c	;volatile
 10636  001B2C  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10637  001B2E  0BFD               	andlw	-3
 10638  001B30  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10639  001B32  6E8B               	movwf	139,c	;volatile
 10640                           
 10641                           ;LcTLCD.c: 163:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
 10642  001B34  A065               	btfss	CantaPartBaixa@c^0,0,c
 10643  001B36  D003               	goto	u3820
 10644  001B38  6A64               	clrf	??_CantaPartBaixa^0,c
 10645  001B3A  2A64               	incf	??_CantaPartBaixa^0,f,c
 10646  001B3C  D001               	goto	u3838
 10647  001B3E                     u3820:
 10648  001B3E  6A64               	clrf	??_CantaPartBaixa^0,c
 10649  001B40                     u3838:
 10650  001B40  508B               	movf	139,w,c	;volatile
 10651  001B42  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10652  001B44  0BFE               	andlw	-2
 10653  001B46  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10654  001B48  6E8B               	movwf	139,c	;volatile
 10655  001B4A  0012               	return		;funcret
 10656  001B4C                     __end_of_CantaPartBaixa:
 10657                           	callstack 0
 10658  001B4C                     PL78:
 10659                           	callstack 24
 10660  001B4C  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10661  001B4E  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10662  001B50  508B               	movf	139,w,c	;volatile
 10663  001B52  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10664  001B54  0012               	return	
 10665  001B56                     __end_ofPL78:
 10666                           	callstack 0
 10667                           
 10668 ;; *************** function _CantaPartAlta *****************
 10669 ;; Defined at:
 10670 ;;		line 152 in file "LcTLCD.c"
 10671 ;; Parameters:    Size  Location     Type
 10672 ;;  c               1    wreg     unsigned char 
 10673 ;; Auto vars:     Size  Location     Type
 10674 ;;  c               1    6[COMRAM] unsigned char 
 10675 ;; Return value:  Size  Location     Type
 10676 ;;                  1    wreg      void 
 10677 ;; Registers used:
 10678 ;;		wreg, status,2, status,0
 10679 ;; Tracked objects:
 10680 ;;		On entry : 0/0
 10681 ;;		On exit  : 0/0
 10682 ;;		Unchanged: 0/0
 10683 ;; Data sizes:     COMRAM   BANK0   BANK1
 10684 ;;      Params:         0       0       0
 10685 ;;      Locals:         1       0       0
 10686 ;;      Temps:          1       0       0
 10687 ;;      Totals:         2       0       0
 10688 ;;Total ram usage:        2 bytes
 10689 ;; Hardware stack levels used: 1
 10690 ;; Hardware stack levels required when called: 2
 10691 ;; This function calls:
 10692 ;;		Nothing
 10693 ;; This function is called by:
 10694 ;;		_CantaIR
 10695 ;;		_CantaData
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           	psect	text87
 10700  001B56                     __ptext87:
 10701                           	callstack 0
 10702  001B56                     _CantaPartAlta:
 10703                           	callstack 24
 10704                           
 10705                           ;incstack = 0
 10706                           ;CantaPartAlta@c stored from wreg
 10707  001B56  6E65               	movwf	CantaPartAlta@c^0,c
 10708                           
 10709                           ;LcTLCD.c: 153:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10710  001B58  AE65               	btfss	CantaPartAlta@c^0,7,c
 10711  001B5A  D003               	goto	u3680
 10712  001B5C  6A64               	clrf	??_CantaPartAlta^0,c
 10713  001B5E  2A64               	incf	??_CantaPartAlta^0,f,c
 10714  001B60  D001               	goto	u3698
 10715  001B62                     u3680:
 10716  001B62  6A64               	clrf	??_CantaPartAlta^0,c
 10717  001B64                     u3698:
 10718  001B64  4664               	rlncf	??_CantaPartAlta^0,f,c
 10719  001B66  D825               	call	PL68	;call to abstracted procedure
 10720  001B68  0BF7               	andlw	-9
 10721  001B6A  1864               	xorwf	??_CantaPartAlta^0,w,c
 10722  001B6C  6E8B               	movwf	139,c	;volatile
 10723                           
 10724                           ;LcTLCD.c: 154:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10725  001B6E  AC65               	btfss	CantaPartAlta@c^0,6,c
 10726  001B70  D003               	goto	u3700
 10727  001B72  6A64               	clrf	??_CantaPartAlta^0,c
 10728  001B74  2A64               	incf	??_CantaPartAlta^0,f,c
 10729  001B76  D001               	goto	u3718
 10730  001B78                     u3700:
 10731  001B78  6A64               	clrf	??_CantaPartAlta^0,c
 10732  001B7A                     u3718:
 10733  001B7A  D81B               	call	PL68	;call to abstracted procedure
 10734  001B7C  0BFB               	andlw	-5
 10735  001B7E  1864               	xorwf	??_CantaPartAlta^0,w,c
 10736  001B80  6E8B               	movwf	139,c	;volatile
 10737                           
 10738                           ;LcTLCD.c: 155:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10739  001B82  AA65               	btfss	CantaPartAlta@c^0,5,c
 10740  001B84  D003               	goto	u3720
 10741  001B86  6A64               	clrf	??_CantaPartAlta^0,c
 10742  001B88  2A64               	incf	??_CantaPartAlta^0,f,c
 10743  001B8A  D001               	goto	u3738
 10744  001B8C                     u3720:
 10745  001B8C  6A64               	clrf	??_CantaPartAlta^0,c
 10746  001B8E                     u3738:
 10747  001B8E  4664               	rlncf	??_CantaPartAlta^0,f,c
 10748  001B90  508B               	movf	139,w,c	;volatile
 10749  001B92  1864               	xorwf	??_CantaPartAlta^0,w,c
 10750  001B94  0BFD               	andlw	-3
 10751  001B96  1864               	xorwf	??_CantaPartAlta^0,w,c
 10752  001B98  6E8B               	movwf	139,c	;volatile
 10753                           
 10754                           ;LcTLCD.c: 156:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10755  001B9A  A865               	btfss	CantaPartAlta@c^0,4,c
 10756  001B9C  D003               	goto	u3740
 10757  001B9E  6A64               	clrf	??_CantaPartAlta^0,c
 10758  001BA0  2A64               	incf	??_CantaPartAlta^0,f,c
 10759  001BA2  D001               	goto	u3758
 10760  001BA4                     u3740:
 10761  001BA4  6A64               	clrf	??_CantaPartAlta^0,c
 10762  001BA6                     u3758:
 10763  001BA6  508B               	movf	139,w,c	;volatile
 10764  001BA8  1864               	xorwf	??_CantaPartAlta^0,w,c
 10765  001BAA  0BFE               	andlw	-2
 10766  001BAC  1864               	xorwf	??_CantaPartAlta^0,w,c
 10767  001BAE  6E8B               	movwf	139,c	;volatile
 10768  001BB0  0012               	return		;funcret
 10769  001BB2                     __end_of_CantaPartAlta:
 10770                           	callstack 0
 10771  001BB2                     PL68:
 10772                           	callstack 24
 10773  001BB2  4664               	rlncf	??_CantaPartAlta^0,f,c
 10774  001BB4  4664               	rlncf	??_CantaPartAlta^0,f,c
 10775  001BB6  508B               	movf	139,w,c	;volatile
 10776  001BB8  1864               	xorwf	??_CantaPartAlta^0,w,c
 10777  001BBA  0012               	return	
 10778  001BBC                     __end_ofPL68:
 10779                           	callstack 0
 10780                           
 10781 ;; *************** function _Espera *****************
 10782 ;; Defined at:
 10783 ;;		line 147 in file "LcTLCD.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;  Timer           1    wreg     unsigned char 
 10786 ;;  ms              2   12[COMRAM] int 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;  Timer           1   15[COMRAM] unsigned char 
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      void 
 10791 ;; Registers used:
 10792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMRAM   BANK0   BANK1
 10798 ;;      Params:         2       0       0
 10799 ;;      Locals:         1       0       0
 10800 ;;      Temps:          1       0       0
 10801 ;;      Totals:         4       0       0
 10802 ;;Total ram usage:        4 bytes
 10803 ;; Hardware stack levels used: 1
 10804 ;; Hardware stack levels required when called: 3
 10805 ;; This function calls:
 10806 ;;		_TiGetTics
 10807 ;;		_TiResetTics
 10808 ;; This function is called by:
 10809 ;;		_LcInit
 10810 ;;		_LcClear
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           	psect	text88
 10815  001F0A                     __ptext88:
 10816                           	callstack 0
 10817  001F0A                     _Espera:
 10818                           	callstack 25
 10819                           
 10820                           ;incstack = 0
 10821                           ;Espera@Timer stored from wreg
 10822  001F0A  6E6E               	movwf	Espera@Timer^0,c
 10823                           
 10824                           ;LcTLCD.c: 148:  TiResetTics(Timer);
 10825  001F0C  506E               	movf	Espera@Timer^0,w,c
 10826  001F0E  ECC1  F00F         	call	_TiResetTics
 10827  001F12                     l4413:
 10828  001F12  506E               	movf	Espera@Timer^0,w,c
 10829  001F14  EC19  F00F         	call	_TiGetTics
 10830  001F18  506B               	movf	Espera@ms^0,w,c
 10831  001F1A  5C64               	subwf	?_TiGetTics^0,w,c
 10832  001F1C  5065               	movf	(?_TiGetTics+1)^0,w,c
 10833  001F1E  0A80               	xorlw	128
 10834  001F20  6E6D               	movwf	??_Espera^0,c
 10835  001F22  506C               	movf	(Espera@ms+1)^0,w,c
 10836  001F24  0A80               	xorlw	128
 10837  001F26  586D               	subwfb	??_Espera^0,w,c
 10838  001F28  E3F4               	bnc	l4413
 10839  001F2A  0012               	return		;funcret
 10840  001F2C                     __end_of_Espera:
 10841                           	callstack 0
 10842                           
 10843 ;; *************** function _TiResetTics *****************
 10844 ;; Defined at:
 10845 ;;		line 55 in file "TiTTimer.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;  Handle          1    wreg     unsigned char 
 10848 ;; Auto vars:     Size  Location     Type
 10849 ;;  Handle          1    5[COMRAM] unsigned char 
 10850 ;; Return value:  Size  Location     Type
 10851 ;;                  1    wreg      void 
 10852 ;; Registers used:
 10853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10854 ;; Tracked objects:
 10855 ;;		On entry : 0/0
 10856 ;;		On exit  : 0/0
 10857 ;;		Unchanged: 0/0
 10858 ;; Data sizes:     COMRAM   BANK0   BANK1
 10859 ;;      Params:         0       0       0
 10860 ;;      Locals:         1       0       0
 10861 ;;      Temps:          0       0       0
 10862 ;;      Totals:         1       0       0
 10863 ;;Total ram usage:        1 bytes
 10864 ;; Hardware stack levels used: 1
 10865 ;; Hardware stack levels required when called: 2
 10866 ;; This function calls:
 10867 ;;		Nothing
 10868 ;; This function is called by:
 10869 ;;		_Espera
 10870 ;;		_WaitForBusy
 10871 ;;		_SMotor
 10872 ;;		_TeTeclat
 10873 ;;		_menu
 10874 ;;		_motorAltaveu
 10875 ;;		_GLCDMotor
 10876 ;;		_motorHora
 10877 ;;		_motorSIO
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           	psect	text89
 10882  001F82                     __ptext89:
 10883                           	callstack 0
 10884  001F82                     _TiResetTics:
 10885                           	callstack 27
 10886                           
 10887                           ;incstack = 0
 10888                           ;TiResetTics@Handle stored from wreg
 10889  001F82  6E64               	movwf	TiResetTics@Handle^0,c
 10890                           
 10891                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10892  001F84  5064               	movf	TiResetTics@Handle^0,w,c
 10893  001F86  D805               	call	PL30	;call to abstracted procedure
 10894  001F88  C009  FFDE         	movff	_h_Tics,postinc2
 10895  001F8C  C00A  FFDD         	movff	_h_Tics+1,postdec2
 10896  001F90  0012               	return		;funcret
 10897  001F92                     __end_of_TiResetTics:
 10898                           	callstack 0
 10899  001F92                     PL30:
 10900                           	callstack 24
 10901  001F92  0D03               	mullw	3
 10902  001F94  50F3               	movf	243,w,c
 10903  001F96  0F80               	addlw	low _s_Timers
 10904  001F98  6ED9               	movwf	fsr2l,c
 10905  001F9A  6ADA               	clrf	fsr2h,c
 10906  001F9C  0012               	return	
 10907  001F9E                     __end_ofPL30:
 10908                           	callstack 0
 10909                           
 10910 ;; *************** function _TiGetTics *****************
 10911 ;; Defined at:
 10912 ;;		line 61 in file "TiTTimer.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  Handle          1    wreg     unsigned char 
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  Handle          1    9[COMRAM] unsigned char 
 10917 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  2    5[COMRAM] int 
 10920 ;; Registers used:
 10921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMRAM   BANK0   BANK1
 10927 ;;      Params:         2       0       0
 10928 ;;      Locals:         3       0       0
 10929 ;;      Temps:          2       0       0
 10930 ;;      Totals:         7       0       0
 10931 ;;Total ram usage:        7 bytes
 10932 ;; Hardware stack levels used: 1
 10933 ;; Hardware stack levels required when called: 2
 10934 ;; This function calls:
 10935 ;;		Nothing
 10936 ;; This function is called by:
 10937 ;;		_Espera
 10938 ;;		_WaitForBusy
 10939 ;;		_SMotor
 10940 ;;		_TeTeclat
 10941 ;;		_menu
 10942 ;;		_motorAltaveu
 10943 ;;		_GLCDMotor
 10944 ;;		_motorHora
 10945 ;;		_motorSIO
 10946 ;; This function uses a non-reentrant model
 10947 ;;
 10948                           
 10949                           	psect	text90
 10950  001E32                     __ptext90:
 10951                           	callstack 0
 10952  001E32                     _TiGetTics:
 10953                           	callstack 27
 10954                           
 10955                           ;incstack = 0
 10956                           ;TiGetTics@Handle stored from wreg
 10957  001E32  6E68               	movwf	TiGetTics@Handle^0,c
 10958                           
 10959                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10960  001E34  C009  F069         	movff	_h_Tics,TiGetTics@actual	;volatile
 10961  001E38  C00A  F06A         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10962                           
 10963                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10964  001E3C  5068               	movf	TiGetTics@Handle^0,w,c
 10965  001E3E  ECC9  F00F         	call	PL30	;call to abstracted procedure
 10966  001E42  CFDE F066          	movff	postinc2,??_TiGetTics
 10967  001E46  CFDD F067          	movff	postdec2,??_TiGetTics+1
 10968  001E4A  5066               	movf	??_TiGetTics^0,w,c
 10969  001E4C  5C69               	subwf	TiGetTics@actual^0,w,c	;volatile
 10970  001E4E  6E64               	movwf	?_TiGetTics^0,c
 10971  001E50  5067               	movf	(??_TiGetTics+1)^0,w,c
 10972  001E52  586A               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10973  001E54  6E65               	movwf	(?_TiGetTics+1)^0,c
 10974  001E56  0012               	return		;funcret
 10975  001E58                     __end_of_TiGetTics:
 10976                           	callstack 0
 10977                           
 10978 ;; *************** function _GLCDInit *****************
 10979 ;; Defined at:
 10980 ;;		line 26 in file "GestioLCD.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;		None
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;		None
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  1    wreg      void 
 10987 ;; Registers used:
 10988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMRAM   BANK0   BANK1
 10994 ;;      Params:         0       0       0
 10995 ;;      Locals:         0       0       0
 10996 ;;      Temps:          0       0       0
 10997 ;;      Totals:         0       0       0
 10998 ;;Total ram usage:        0 bytes
 10999 ;; Hardware stack levels used: 1
 11000 ;; Hardware stack levels required when called: 3
 11001 ;; This function calls:
 11002 ;;		_TiGetTimer
 11003 ;; This function is called by:
 11004 ;;		_main
 11005 ;; This function uses a non-reentrant model
 11006 ;;
 11007                           
 11008                           	psect	text91
 11009  000198                     __ptext91:
 11010                           	callstack 0
 11011  000198                     _GLCDInit:
 11012                           	callstack 27
 11013                           
 11014                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 11015                           
 11016                           ;incstack = 0
 11017  000198  ECDC  F00E         	call	_TiGetTimer	;wreg free
 11018  00019C  6E22               	movwf	_timerGLCD^0,c
 11019  00019E  0012               	return		;funcret
 11020  0001A0                     __end_of_GLCDInit:
 11021                           	callstack 0
 11022                           
 11023 ;; *************** function _TiGetTimer *****************
 11024 ;; Defined at:
 11025 ;;		line 70 in file "TiTTimer.c"
 11026 ;; Parameters:    Size  Location     Type
 11027 ;;		None
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;		None
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  1    wreg      unsigned char 
 11032 ;; Registers used:
 11033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11034 ;; Tracked objects:
 11035 ;;		On entry : 0/0
 11036 ;;		On exit  : 0/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMRAM   BANK0   BANK1
 11039 ;;      Params:         0       0       0
 11040 ;;      Locals:         0       0       0
 11041 ;;      Temps:          1       0       0
 11042 ;;      Totals:         1       0       0
 11043 ;;Total ram usage:        1 bytes
 11044 ;; Hardware stack levels used: 1
 11045 ;; Hardware stack levels required when called: 2
 11046 ;; This function calls:
 11047 ;;		Nothing
 11048 ;; This function is called by:
 11049 ;;		_LcInit
 11050 ;;		_Sinit
 11051 ;;		_TeInit
 11052 ;;		_Minit
 11053 ;;		_initAltaveu
 11054 ;;		_GLCDInit
 11055 ;;		_initHora
 11056 ;;		_initSIO
 11057 ;; This function uses a non-reentrant model
 11058 ;;
 11059                           
 11060                           	psect	text92
 11061  001DB8                     __ptext92:
 11062                           	callstack 0
 11063  001DB8                     _TiGetTimer:
 11064                           	callstack 27
 11065                           
 11066                           ;TiTTimer.c: 74:     counter=0;
 11067                           
 11068                           ;incstack = 0
 11069  001DB8  6A34               	clrf	_counter^0,c
 11070                           
 11071                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 11072  001DBA  D005               	goto	l4475
 11073  001DBC                     l4467:
 11074                           
 11075                           ;TiTTimer.c: 76:         counter++;
 11076  001DBC  2A34               	incf	_counter^0,f,c
 11077                           
 11078                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 11079  001DBE  0E08               	movlw	8
 11080  001DC0  1834               	xorwf	_counter^0,w,c
 11081  001DC2  E101               	bnz	l4475
 11082  001DC4  0CFF               	retlw	255
 11083  001DC6                     l4475:
 11084                           
 11085                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 11086  001DC6  D807               	call	PL16	;call to abstracted procedure
 11087  001DC8  04DE               	decf	postinc2,w,c
 11088  001DCA  E0F8               	bz	l4467
 11089                           
 11090                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 11091  001DCC  D804               	call	PL16	;call to abstracted procedure
 11092  001DCE  0E01               	movlw	1
 11093  001DD0  6EDF               	movwf	indf2,c
 11094                           
 11095                           ;TiTTimer.c: 80:     return (counter);
 11096  001DD2  5034               	movf	_counter^0,w,c
 11097  001DD4  0012               	return		;funcret
 11098  001DD6                     __end_of_TiGetTimer:
 11099                           	callstack 0
 11100  001DD6                     PL16:
 11101                           	callstack 28
 11102  001DD6  5034               	movf	_counter^0,w,c
 11103  001DD8  0D03               	mullw	3
 11104  001DDA  50F3               	movf	243,w,c
 11105  001DDC  0F82               	addlw	low (_s_Timers+2)
 11106  001DDE  6ED9               	movwf	fsr2l,c
 11107  001DE0  6ADA               	clrf	fsr2h,c
 11108  001DE2  0012               	return	
 11109  001DE4                     __end_ofPL16:
 11110                           	callstack 0
 11111                           
 11112 ;; *************** function _CtoA *****************
 11113 ;; Defined at:
 11114 ;;		line 22 in file "CtoA.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;		None
 11117 ;; Auto vars:     Size  Location     Type
 11118 ;;		None
 11119 ;; Return value:  Size  Location     Type
 11120 ;;                  1    wreg      void 
 11121 ;; Registers used:
 11122 ;;		wreg, status,2, status,0
 11123 ;; Tracked objects:
 11124 ;;		On entry : 0/0
 11125 ;;		On exit  : 0/0
 11126 ;;		Unchanged: 0/0
 11127 ;; Data sizes:     COMRAM   BANK0   BANK1
 11128 ;;      Params:         0       0       0
 11129 ;;      Locals:         0       0       0
 11130 ;;      Temps:          0       0       0
 11131 ;;      Totals:         0       0       0
 11132 ;;Total ram usage:        0 bytes
 11133 ;; Hardware stack levels used: 1
 11134 ;; Hardware stack levels required when called: 2
 11135 ;; This function calls:
 11136 ;;		Nothing
 11137 ;; This function is called by:
 11138 ;;		_main
 11139 ;; This function uses a non-reentrant model
 11140 ;;
 11141                           
 11142                           	psect	text93
 11143  001EC4                     __ptext93:
 11144                           	callstack 0
 11145  001EC4                     _CtoA:
 11146                           	callstack 28
 11147                           
 11148                           ;CtoA.c: 23:     if (convertir != 250) {
 11149                           
 11150                           ;incstack = 0
 11151  001EC4  0EFA               	movlw	250
 11152  001EC6  1847               	xorwf	_convertir^0,w,c
 11153  001EC8  B4D8               	btfsc	status,2,c
 11154  001ECA  0012               	return	
 11155                           
 11156                           ;CtoA.c: 24:         if (convertir != 0){
 11157  001ECC  5047               	movf	_convertir^0,w,c
 11158  001ECE  E009               	bz	l3955
 11159                           
 11160                           ;CtoA.c: 25:             stringScore[1]++;
 11161  001ED0  2A5D               	incf	(_stringScore+1)^0,f,c
 11162                           
 11163                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 11164  001ED2  0E3A               	movlw	58
 11165  001ED4  185D               	xorwf	(_stringScore+1)^0,w,c
 11166  001ED6  E103               	bnz	l3953
 11167                           
 11168                           ;CtoA.c: 27:                 stringScore[1] = '0';
 11169  001ED8  0E30               	movlw	48
 11170  001EDA  6E5D               	movwf	(_stringScore+1)^0,c
 11171                           
 11172                           ;CtoA.c: 28:                 stringScore[0]++;
 11173  001EDC  2A5C               	incf	_stringScore^0,f,c
 11174  001EDE                     l3953:
 11175                           
 11176                           ;CtoA.c: 30:             convertir--;
 11177  001EDE  0647               	decf	_convertir^0,f,c
 11178                           
 11179                           ;CtoA.c: 31:         } else {
 11180  001EE0  0012               	return	
 11181  001EE2                     l3955:
 11182                           
 11183                           ;CtoA.c: 32:             convertir = 250;
 11184  001EE2  0EFA               	movlw	250
 11185  001EE4  6E47               	movwf	_convertir^0,c
 11186  001EE6  0CFA               	retlw	250	;funcret
 11187  001EE8                     __end_of_CtoA:
 11188                           	callstack 0
 11189                           
 11190 ;; *************** function _high_rsi *****************
 11191 ;; Defined at:
 11192 ;;		line 20 in file "main.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;		None
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;		None
 11197 ;; Return value:  Size  Location     Type
 11198 ;;                  1    wreg      void 
 11199 ;; Registers used:
 11200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11201 ;; Tracked objects:
 11202 ;;		On entry : 0/0
 11203 ;;		On exit  : 0/0
 11204 ;;		Unchanged: 0/0
 11205 ;; Data sizes:     COMRAM   BANK0   BANK1
 11206 ;;      Params:         0       0       0
 11207 ;;      Locals:         0       0       0
 11208 ;;      Temps:          4       0       0
 11209 ;;      Totals:         4       0       0
 11210 ;;Total ram usage:        4 bytes
 11211 ;; Hardware stack levels used: 1
 11212 ;; Hardware stack levels required when called: 1
 11213 ;; This function calls:
 11214 ;;		__TiRSITimer
 11215 ;; This function is called by:
 11216 ;;		Interrupt level 2
 11217 ;; This function uses a non-reentrant model
 11218 ;;
 11219                           
 11220                           	psect	intcode
 11221  000008                     __pintcode:
 11222                           	callstack 0
 11223  000008                     _high_rsi:
 11224                           	callstack 24
 11225                           
 11226                           ;incstack = 0
 11227  000008  8278               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11228  00000A  CFD9 F060          	movff	fsr2l,??_high_rsi
 11229  00000E  CFDA F061          	movff	fsr2h,??_high_rsi+1
 11230  000012  CFF3 F062          	movff	prodl,??_high_rsi+2
 11231  000016  CFF4 F063          	movff	prodh,??_high_rsi+3
 11232  00001A  EC2A  F00E         	call	__TiRSITimer	;wreg free
 11233  00001E  C063  FFF4         	movff	??_high_rsi+3,prodh
 11234  000022  C062  FFF3         	movff	??_high_rsi+2,prodl
 11235  000026  C061  FFDA         	movff	??_high_rsi+1,fsr2h
 11236  00002A  C060  FFD9         	movff	??_high_rsi,fsr2l
 11237  00002E  9278               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11238  000030  0011               	retfie		f
 11239  000032                     __end_of_high_rsi:
 11240                           	callstack 0
 11241                           
 11242 ;; *************** function __TiRSITimer *****************
 11243 ;; Defined at:
 11244 ;;		line 37 in file "TiTTimer.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;		None
 11247 ;; Auto vars:     Size  Location     Type
 11248 ;;		None
 11249 ;; Return value:  Size  Location     Type
 11250 ;;                  1    wreg      void 
 11251 ;; Registers used:
 11252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11253 ;; Tracked objects:
 11254 ;;		On entry : 0/0
 11255 ;;		On exit  : 0/0
 11256 ;;		Unchanged: 0/0
 11257 ;; Data sizes:     COMRAM   BANK0   BANK1
 11258 ;;      Params:         0       0       0
 11259 ;;      Locals:         0       0       0
 11260 ;;      Temps:          1       0       0
 11261 ;;      Totals:         1       0       0
 11262 ;;Total ram usage:        1 bytes
 11263 ;; Hardware stack levels used: 1
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_high_rsi
 11268 ;; This function uses a non-reentrant model
 11269 ;;
 11270                           
 11271                           	psect	text95
 11272  001C54                     __ptext95:
 11273                           	callstack 0
 11274  001C54                     __TiRSITimer:
 11275                           	callstack 0
 11276                           
 11277                           ;TiTTimer.c: 39:     TMR0H = 223;
 11278                           
 11279                           ;incstack = 0
 11280                           
 11281                           ;TiTTimer.c: 40:     TMR0L = 148;
 11282  001C54  D81E               	call	PL84	;call to abstracted procedure
 11283                           
 11284                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 11285  001C56  94F2               	bcf	242,2,c	;volatile
 11286                           
 11287                           ;TiTTimer.c: 42:     h_Tics++;
 11288  001C58  4A09               	infsnz	_h_Tics^0,f,c
 11289  001C5A  2A0A               	incf	(_h_Tics+1)^0,f,c
 11290                           
 11291                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 11292  001C5C  0E48               	movlw	72
 11293  001C5E  5C09               	subwf	_h_Tics^0,w,c
 11294  001C60  0EEE               	movlw	238
 11295  001C62  580A               	subwfb	(_h_Tics+1)^0,w,c
 11296  001C64  A0D8               	btfss	status,0,c
 11297  001C66  0012               	return	
 11298                           
 11299                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 11300  001C68  6A34               	clrf	_counter^0,c
 11301  001C6A                     i2l4773:
 11302  001C6A  0E07               	movlw	7
 11303  001C6C  6434               	cpfsgt	_counter^0,c
 11304  001C6E  D001               	goto	i2l4777
 11305  001C70  D00D               	goto	i2l370
 11306  001C72                     i2l4777:
 11307                           
 11308                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 11309  001C72  ECEB  F00E         	call	PL16	;call to abstracted procedure
 11310  001C76  04DE               	decf	postinc2,w,c
 11311  001C78  E107               	bnz	i2l4781
 11312                           
 11313                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 11314  001C7A  5034               	movf	_counter^0,w,c
 11315  001C7C  ECC9  F00F         	call	PL30	;call to abstracted procedure
 11316  001C80  5009               	movf	_h_Tics^0,w,c
 11317  001C82  5EDE               	subwf	postinc2,f,c
 11318  001C84  500A               	movf	(_h_Tics+1)^0,w,c
 11319  001C86  5ADD               	subwfb	postdec2,f,c
 11320  001C88                     i2l4781:
 11321                           
 11322                           ;TiTTimer.c: 50:         }
 11323  001C88  2A34               	incf	_counter^0,f,c
 11324  001C8A  D7EF               	goto	i2l4773
 11325  001C8C                     i2l370:
 11326                           
 11327                           ;TiTTimer.c: 51:         h_Tics=0;
 11328  001C8C  6A09               	clrf	_h_Tics^0,c
 11329  001C8E  6A0A               	clrf	(_h_Tics+1)^0,c
 11330  001C90  0012               	return		;funcret
 11331  001C92                     __end_of__TiRSITimer:
 11332                           	callstack 0
 11333  001C92                     PL84:
 11334                           	callstack 28
 11335  001C92  0EDF               	movlw	223
 11336  001C94  6ED7               	movwf	215,c	;volatile
 11337  001C96  0E94               	movlw	148
 11338  001C98  6ED6               	movwf	214,c	;volatile
 11339  001C9A  0C94               	retlw	148
 11340  001C9C                     __end_ofPL84:
 11341                           	callstack 0
 11342                           
 11343                           	psect	rparam
 11344  0000                     
 11345                           	psect	temp
 11346  000078                     btemp:
 11347                           	callstack 0
 11348  000078                     	ds	1
 11349  0000                     int$flags	set	btemp
 11350  0000                     wtemp8	set	btemp+1
 11351  0000                     ttemp5	set	btemp+1
 11352  0000                     ttemp6	set	btemp+4
 11353  0000                     ttemp7	set	btemp+8
 11354                           
 11355                           	psect	idloc
 11356                           
 11357                           ;Config register IDLOC0 @ 0x200000
 11358                           ;	unspecified, using default values
 11359  200000                     	org	2097152
 11360  200000  FF                 	db	255
 11361                           
 11362                           ;Config register IDLOC1 @ 0x200001
 11363                           ;	unspecified, using default values
 11364  200001                     	org	2097153
 11365  200001  FF                 	db	255
 11366                           
 11367                           ;Config register IDLOC2 @ 0x200002
 11368                           ;	unspecified, using default values
 11369  200002                     	org	2097154
 11370  200002  FF                 	db	255
 11371                           
 11372                           ;Config register IDLOC3 @ 0x200003
 11373                           ;	unspecified, using default values
 11374  200003                     	org	2097155
 11375  200003  FF                 	db	255
 11376                           
 11377                           ;Config register IDLOC4 @ 0x200004
 11378                           ;	unspecified, using default values
 11379  200004                     	org	2097156
 11380  200004  FF                 	db	255
 11381                           
 11382                           ;Config register IDLOC5 @ 0x200005
 11383                           ;	unspecified, using default values
 11384  200005                     	org	2097157
 11385  200005  FF                 	db	255
 11386                           
 11387                           ;Config register IDLOC6 @ 0x200006
 11388                           ;	unspecified, using default values
 11389  200006                     	org	2097158
 11390  200006  FF                 	db	255
 11391                           
 11392                           ;Config register IDLOC7 @ 0x200007
 11393                           ;	unspecified, using default values
 11394  200007                     	org	2097159
 11395  200007  FF                 	db	255
 11396                           
 11397                           	psect	config
 11398                           
 11399                           ; Padding undefined space
 11400  300000                     	org	3145728
 11401  300000  FF                 	db	255
 11402                           
 11403                           ;Config register CONFIG1H @ 0x300001
 11404                           ;	Oscillator
 11405                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 11406                           ;	Fail-Safe Clock Monitor Enable bit
 11407                           ;	FCMEN = 0x0, unprogrammed default
 11408                           ;	Internal/External Oscillator Switchover bit
 11409                           ;	IESO = 0x0, unprogrammed default
 11410  300001                     	org	3145729
 11411  300001  06                 	db	6
 11412                           
 11413                           ;Config register CONFIG2L @ 0x300002
 11414                           ;	unspecified, using default values
 11415                           ;	Power-up Timer Enable bit
 11416                           ;	PWRT = 0x1, unprogrammed default
 11417                           ;	Brown-out Reset Enable bits
 11418                           ;	BOR = 0x3, unprogrammed default
 11419                           ;	Brown-out Reset Voltage bits
 11420                           ;	BORV = 0x3, unprogrammed default
 11421  300002                     	org	3145730
 11422  300002  1F                 	db	31
 11423                           
 11424                           ;Config register CONFIG2H @ 0x300003
 11425                           ;	Watchdog Timer Enable bit
 11426                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11427                           ;	Watchdog Timer Postscale Select bits
 11428                           ;	WDTPS = 0xF, unprogrammed default
 11429  300003                     	org	3145731
 11430  300003  1E                 	db	30
 11431                           
 11432                           ; Padding undefined space
 11433  300004                     	org	3145732
 11434  300004  FF                 	db	255
 11435                           
 11436                           ;Config register CONFIG3H @ 0x300005
 11437                           ;	CCP2 MUX bit
 11438                           ;	CCP2MX = 0x1, unprogrammed default
 11439                           ;	PORTB A/D Enable bit
 11440                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 11441                           ;	Low-Power Timer1 Oscillator Enable bit
 11442                           ;	LPT1OSC = 0x0, unprogrammed default
 11443                           ;	MCLR Pin Enable bit
 11444                           ;	MCLRE = 0x1, unprogrammed default
 11445  300005                     	org	3145733
 11446  300005  81                 	db	129
 11447                           
 11448                           ;Config register CONFIG4L @ 0x300006
 11449                           ;	Stack Full/Underflow Reset Enable bit
 11450                           ;	STVREN = 0x1, unprogrammed default
 11451                           ;	Single-Supply ICSP Enable bit
 11452                           ;	LVP = OFF, Single-Supply ICSP disabled
 11453                           ;	Boot Block Size Select bits
 11454                           ;	BBSIZ = 0x0, unprogrammed default
 11455                           ;	Extended Instruction Set Enable bit
 11456                           ;	XINST = 0x0, unprogrammed default
 11457                           ;	Background Debugger Enable bit
 11458                           ;	DEBUG = 0x1, unprogrammed default
 11459  300006                     	org	3145734
 11460  300006  81                 	db	129
 11461                           
 11462                           ; Padding undefined space
 11463  300007                     	org	3145735
 11464  300007  FF                 	db	255
 11465                           
 11466                           ;Config register CONFIG5L @ 0x300008
 11467                           ;	unspecified, using default values
 11468                           ;	Code Protection bit
 11469                           ;	CP0 = 0x1, unprogrammed default
 11470                           ;	Code Protection bit
 11471                           ;	CP1 = 0x1, unprogrammed default
 11472  300008                     	org	3145736
 11473  300008  03                 	db	3
 11474                           
 11475                           ;Config register CONFIG5H @ 0x300009
 11476                           ;	unspecified, using default values
 11477                           ;	Boot Block Code Protection bitProtect Boot
 11478                           ;	CPB = 0x1, unprogrammed default
 11479                           ;	Data EEPROM Code Protection bit
 11480                           ;	CPD = 0x1, unprogrammed default
 11481  300009                     	org	3145737
 11482  300009  C0                 	db	192
 11483                           
 11484                           ;Config register CONFIG6L @ 0x30000A
 11485                           ;	unspecified, using default values
 11486                           ;	Write Protection bit
 11487                           ;	WRT0 = 0x1, unprogrammed default
 11488                           ;	Write Protection bit
 11489                           ;	WRT1 = 0x1, unprogrammed default
 11490  30000A                     	org	3145738
 11491  30000A  03                 	db	3
 11492                           
 11493                           ;Config register CONFIG6H @ 0x30000B
 11494                           ;	unspecified, using default values
 11495                           ;	Configuration Register Write Protection bit
 11496                           ;	WRTC = 0x1, unprogrammed default
 11497                           ;	Boot Block Write Protection bit
 11498                           ;	WRTB = 0x1, unprogrammed default
 11499                           ;	Data EEPROM Write Protection bit
 11500                           ;	WRTD = 0x1, unprogrammed default
 11501  30000B                     	org	3145739
 11502  30000B  E0                 	db	224
 11503                           
 11504                           ;Config register CONFIG7L @ 0x30000C
 11505                           ;	unspecified, using default values
 11506                           ;	Table Read Protection bit
 11507                           ;	EBTR0 = 0x1, unprogrammed default
 11508                           ;	Table Read Protection bit
 11509                           ;	EBTR1 = 0x1, unprogrammed default
 11510  30000C                     	org	3145740
 11511  30000C  03                 	db	3
 11512                           
 11513                           ;Config register CONFIG7H @ 0x30000D
 11514                           ;	unspecified, using default values
 11515                           ;	Boot Block Table Read Protection bit
 11516                           ;	EBTRB = 0x1, unprogrammed default
 11517  30000D                     	org	3145741
 11518  30000D  40                 	db	64
 11519                           tosu	equ	0xFFF
 11520                           tosh	equ	0xFFE
 11521                           tosl	equ	0xFFD
 11522                           stkptr	equ	0xFFC
 11523                           pclatu	equ	0xFFB
 11524                           pclath	equ	0xFFA
 11525                           pcl	equ	0xFF9
 11526                           tblptru	equ	0xFF8
 11527                           tblptrh	equ	0xFF7
 11528                           tblptrl	equ	0xFF6
 11529                           tablat	equ	0xFF5
 11530                           prodh	equ	0xFF4
 11531                           prodl	equ	0xFF3
 11532                           indf0	equ	0xFEF
 11533                           postinc0	equ	0xFEE
 11534                           postdec0	equ	0xFED
 11535                           preinc0	equ	0xFEC
 11536                           plusw0	equ	0xFEB
 11537                           fsr0h	equ	0xFEA
 11538                           fsr0l	equ	0xFE9
 11539                           wreg	equ	0xFE8
 11540                           indf1	equ	0xFE7
 11541                           postinc1	equ	0xFE6
 11542                           postdec1	equ	0xFE5
 11543                           preinc1	equ	0xFE4
 11544                           plusw1	equ	0xFE3
 11545                           fsr1h	equ	0xFE2
 11546                           fsr1l	equ	0xFE1
 11547                           bsr	equ	0xFE0
 11548                           indf2	equ	0xFDF
 11549                           postinc2	equ	0xFDE
 11550                           postdec2	equ	0xFDD
 11551                           preinc2	equ	0xFDC
 11552                           plusw2	equ	0xFDB
 11553                           fsr2h	equ	0xFDA
 11554                           fsr2l	equ	0xFD9
 11555                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    157
    Data        53
    BSS         272
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     119
    BANK0           128      5      92
    BANK1           256      0     144

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 144
		 -> usuaris.password(BANK1[9]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpPassword(BANK0[9]), tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_motorSIO
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _miraPassword->_compareStrings
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->___lbdiv
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40265
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9858
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                       _SIOEnviaHora
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOEnviaHora                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   11189
                                              0 BANK0      5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
                       _miraPassword
 ---------------------------------------------------------------------------------
 (2) _miraPassword                                         0     0      0     416
                     _compareStrings
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      22
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     916
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     500
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _compareStrings                                       5     2      3     416
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                4     4      0     396
                                              9 COMRAM     4     4      0
                            ___lbdiv
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               3     3      0    1103
                                             16 COMRAM     3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     ___lbdiv
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
     _miraPassword
       _compareStrings
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIOEnviaHora
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      90       6       56.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      5C       4       71.9%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     16      77       1       94.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     163       7        0.0%
DATA                 0      0     163       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 09 12:05:10 2022

               TiResetTics@Handle 0064                  _loginNOTRegister 03B8  
                               _i 002A                                 _j 0029  
                              PL2 0FCA                                PL4 0FD8  
                              PL6 154A                                PL8 0FE0  
                              l55 1D92                  UgetUserName@quin 0066  
       ??_UcheckExistsNotFinished 0064         __size_of_llegirCharEEPROM 0010  
                             PL10 0A24                               PL20 124C  
                             PL12 0FEA                               PL30 1F92  
                             PL22 125A                               PL14 1554  
                             PL40 161A                               PL32 0A30  
                             PL24 18F4                               PL16 1DD6  
                             PL50 0A4A                               PL42 19F4  
                             PL34 1D38                               PL26 1268  
                             PL18 1230                               PL60 127A  
                             PL52 0D3A                               PL44 1628  
                             PL36 0A3A                               PL28 0D2E  
                             PL70 0FF4                               PL62 1636  
                             PL54 0D46                               PL46 0A40  
                             PL38 1BF2                               PL80 0042  
                             PL72 1CD0                               PL64 1F00  
                             PL56 1CC6                               PL48 1C00  
                             PL90 0A56                               PL82 0D5C  
                             PL74 1D46                               PL66 17CA  
                             PL58 0D52                               PL92 0A5C  
                             PL84 1C92                               PL76 1426  
                             PL68 1BB2                               PL94 0A62  
                             PL86 1A02                               PL78 1B4C  
                             PL96 0A6A                               PL88 1C4C  
          __end_of_compareStrings 1CC6                               l511 033E  
                             l541 048E                               l607 071A  
                             l538 046C                               l539 047C  
                             l724 1E28                               l736 15A0  
                             l770 101E                               l772 1038  
                             l862 187C                               l943 0DBE  
                             l775 1068                               l767 1000  
                             l776 105E                               l768 1012  
                             l955 0E26                               l973 0F16  
                             l975 0F3C                               l799 1156  
                             u310 19E4                               u250 19A2  
                             u308 19CE                               u270 19B8  
                             u328 19E6                               u290 19CC  
                             u268 19A4                               u288 19BA  
                             _pos 002F                               _tmp 0033  
                ??_CantaPartBaixa 0064                               prod 000FF3  
                             wreg 000FE8       __size_of_calculateShowUsers 0004  
                     _ultimaTecla 0053                __size_of_GLCDMotor 0264  
                            l1020 1700                              l1012 1642  
                            l1021 1698                              l1013 165C  
                            l1022 16B2                              l1015 167E  
                            l1024 16D4                              l1312 0CD0  
                            l1163 17EA                              l1281 0AEE  
                            l1290 0B62                              l2411 00A2  
                            l1283 0B14                              l3311 1672  
                            l3303 1658                              l1298 0BF8  
                            l5101 0E16                              l3341 16AE  
                            l3325 1694                              l5005 15A2  
                            l2357 00AE                              l2383 1E6A  
                            l5033 15F2                              l5017 15BC  
                            l2377 1E62                              l5211 0F50  
                            l5131 0E4E                              l5043 0D68  
                            l3363 16EA                              l5027 15DE  
                            l2395 1E7A                              l4413 1F12  
                            l5221 0F72                              l5141 0E6E  
                            l5053 0D8E                              l3349 16C8  
                            l3373 16EE                              l5029 15EA  
                            l2389 1E72                              l5207 0F48  
                            l6111 18AA                       _puntuacions 0098  
                            l4409 1D12                              l5217 0F64  
                            l5137 0E60                              l5073 0DCA  
                            l6105 189E                              l5321 0AC6  
                            l4419 1D96                              l4515 1C46  
                            l4507 1C32                              l5163 0EC6  
                            l5147 0E86                              l5067 0DB2  
                            l5059 0D9C                              l5227 0F7E  
                            l6203 10D4                              l6131 18DA  
                            l5251 17FE                              l5235 17D6  
                            l5315 0AB6                              l5307 0AA4  
                            l4525 0102                              l4509 1C38  
                            l5157 0EB6                              l6205 10DA  
                            l7101 07DC                              l7005 067A  
                            l6117 18BE                              l5501 1946  
                            l5191 0F1E                              l5095 0E04  
                            l5087 0DF8                              l4455 1CB2  
                            l6231 111E                              l4623 00C6  
                            l7111 07F4                              l7103 07E2  
                            l6119 18C2                              l5431 0C56  
                            l5415 0C2A                              l5407 0C0A  
                            l5319 0AC0                              l5185 0F0A  
                            l5177 0EF4                              l6321 1478  
                            l4449 1C9E                              l6233 1128  
                            l6225 1114                              l6217 1102  
                            l4545 00D2                              l7121 0828  
                            l7041 06D0                              l7017 069A  
                            l5273 184E                              l5257 1810  
                            l5249 17FA                              l5281 1860  
                            l5441 0C7E                              l5425 0C4C  
                            l5329 0AD6                              l4467 1DBC  
                            l4475 1DC6                              l4387 1CEC  
                            l6315 1468                              l6243 1154  
                            l6251 1160                              l6235 112C  
                            l6171 106E                              l6155 102A  
                            l6307 11FA                              l7115 07FC  
                            l7035 06C2                              l7027 06B4  
                            l5507 1952                              l5267 1838  
                            l4717 1730                              l6341 14A8  
                            l6325 1484                              l6173 1074  
                            l6157 1032                              l6149 1018  
                            l5517 196C                              l5525 197A  
                            l5199 0F36                              l6335 149A  
                            l6327 148A                              l6319 1474  
                            l6263 117E                              l6255 116E  
                            l6183 109E                              l6167 1062  
                            l4559 1E9C                              l7135 0864  
                            l5463 0CD2                              l5455 0CA4  
                            l5439 0C78                              l5471 0CDE  
                            l3953 1EDE                              l4921 13B4  
                            l4905 138E                              l4841 12E2  
                            l4833 12C4                              l4817 1298  
                            l4809 1284                              l6273 1198  
                            l7161 08E4                              l7137 086A  
                            l7081 07AE                              l7065 0734  
                            l7057 071C                              l7049 06F4  
                            l5529 197E                              l5377 0B7C  
                            l5369 0B5C                              l5289 0A74  
                            l3955 1EE2                              l4851 1304  
                            l6363 14DE                              l6355 14C8  
                            l6347 14B6                              l4683 1D5E  
                            l6275 119E                              l6187 10AC  
                            l6179 109A                              l7147 08AE  
                            l7091 07C4                              l7075 078E  
                            l7059 0722                              l6099 1892  
                            l5387 0BAA                              l5379 0B82  
                            l5299 0A90                              l7227 1ABE  
                            l4941 13E0                              l4909 1392  
                            l6349 14BA                              l6269 1190  
                            l4597 00BA                              l7093 07CA  
                            l7077 0794                              l7069 074C  
                            l5397 0BE0                              l4935 13D4  
                            l4927 13BE                              l4871 132C  
                            l4863 1316                              l6383 1516  
                            l6375 1504                              l6359 14D4  
                            l4695 1D78                              l4687 1D64  
                            l6295 11E0                              l6287 11CE  
                            l6199 10CC                              l7175 0916  
                            l7159 08DE                              l7087 07BA  
                            l5495 193A                              l5479 190E  
                            l4945 13E8                              l6369 14F6  
                            l4793 1DFA                              l7185 092A  
                            l7169 08F2                              l6713 03BA  
                            l7193 0936                              l6379 150C  
                            l4699 1D80                              l6299 11E8  
                            l6707 03AC                              l4885 134E  
                            l4877 133E                              l4965 13F8  
                            l6389 151C                              l4797 1E02  
                            l6821 04BE                              l6741 03F4  
                            l6725 03CA                              l6709 03B2  
                            l6653 0306                              l4887 1358  
                            l6911 0598                              l6751 0418  
                            l6663 0326                              l6647 02F2  
                            l4897 1376                              l4889 135C  
                            l6809 04A6                              l6681 0354  
                            l4995 158E                              l4987 157C  
                            l6923 05D0                              l6755 0420  
                            l6739 03EE                              l6667 032C  
                            l6909 0592                              l6837 04DC  
                            l6829 04CE                              l6749 0412  
                            l6669 0332                              l6943 0604  
                            l6919 05B8                              l6863 0520  
                            l6767 0430                              l6961 0628  
                            l6849 04FE                              l6785 0458  
                            l6697 0388                              l6689 0370  
                            l6795 0478                              l6699 038E  
                            l6877 0542                              l6895 056A  
                            l6879 0548                              l6993 0668  
                            l6977 0646                              l6989 0664  
                            STR_1 02E7                              STR_2 02E0  
                            STR_3 02C7                              STR_4 02AE  
                            STR_5 029E                              STR_6 02D8  
                            STR_7 02BB                              STR_8 02D0  
                            _LATD 000F8C                              u4040 1D68  
                            u4060 17C0                              u4300 1338  
                            u4220 12D8                              u4080 1BCE  
                            u5120 0AF6                              u4090 1BE4  
                            u5130 0AFA                              u3700 1B78  
                            u4420 13C4                              u4340 1368  
                            u5300 0CB8                              u4430 13DA  
                            u4087 1BCC                              u3720 1B8C  
                            u3800 1B26                              u4097 1BE2  
                            u5170 0BC0                              u3740 1BA4  
                            u3820 1B3E                              u3718 1B7A  
                            u5270 0C70                              u3680 1B62  
                            u3760 1AFC                              u4640 0E00  
                            u3738 1B8E                              u3818 1B28  
                            u4570 0D98                              u7210 0488  
                            u5290 0C94                              u3780 1B12  
                            u3758 1BA6                              u3838 1B40  
                            u4670 0E1E                              u7230 0496  
                            u7150 043E                              u7080 03D8  
                            u3698 1B64                              u3778 1AFE  
                            u3890 1CB6                              u7250 049E  
                            u3798 1B14                              u6550 105A  
                            u6800 143A                              u7600 0686  
                            u6730 118A                              u7610 068C  
                            u6808 143C                              u7750 07B6  
                            u7840 0862                              u7860 087C  
                            _CtoA 1EC4                   ??_SsetNovaTecla 0064  
          __end_of_SIOcheckKrebut 00A6                              _cap1 03B0  
                            _Rows 0040                              _cap2 03AF  
                            _main 1A84                              _mask 000E  
                            _hora 0056                              _menu 02F0  
                            _nota 0026             getArrayShowUsers@quin 0066  
                 __end_of_HJugant 01A6                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0078  
                 __end_of_JJuguem 0140                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 1F00  
                            start 0032                   __end_of_CantaIR 1F82  
                    ?_initAltaveu 005F                      ___param_bank 000000  
                     _stringScore 005C                  __end_of_GLCDInit 01A0  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 01C8  
                           ?_CtoA 005F                __size_of_CToAReset 0008  
                     Espera@Timer 006E                             ?_main 005F  
                           ?_menu 005F                   __end_of___lbdiv 1D84  
                           _EEADR 000FA9                     ??_TiInitTimer 0064  
                           _T0CON 000FD5                   ?_compareStrings 0064  
                           i2l370 1C8C                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _LcLCD 1BBC                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                      ?_init_eusart 005F  
                           _TXREG 000FAD                             _SMSon 01A6  
                           _TXSTA 000FAC                       _MNovaLletra 0180  
                           _Minit 0188                  __end_of_HGetTime 01C8  
                           _Sinit 0178                             _Timer 003D  
                           _Uinit 156A                   __end_of_initSIO 0150  
                           _s_ptr 000B                             _score 0010  
                           _nou_s 03BA             __end_of_JoystickMotor 1716  
                 _HActualitzaHora 1EA0       __size_of_escriureCharEEPROM 0026  
                  __pbitbssCOMRAM 03A8                             tablat 000FF5  
                     _LcNewString 00EE                     ??_TiResetTics 0064  
                 ?_SIOcheckKrebut 005F                _UshowUsersCalculat 00BE  
                           ttemp5 0079                             ttemp6 007C  
                           ttemp7 0080                             status 000FD8  
                ?_checkHoraAcabat 005F                             wtemp8 0079  
   __size_of_UcheckExistsGetError 0004                __size_of_HNouSegon 000C  
                 ___lbdiv@divisor 0064                  __end_of_LcGotoXY 1DB8  
            CToAConverteix@numero 0064                   ___lbdiv@counter 0066  
                __end_of_LcLliure 0106                     ??__TiRSITimer 005F  
                __end_of_LcScroll 01B8                        _TiGetTimer 1DB8  
         EscriuPrimeraOrdre@ordre 0065                      __end_of_CtoA 1EE8  
                __end_of_JendGame 01F4                       ?_SIOendGame 005F  
                 __initialization 1A0C               ?_UshowUsersCalculat 005F  
              __size_of_CantaData 0020                      __end_of_main 1AF0  
          __end_of_HClearNouSegon 01CC                      __end_of_menu 0A24  
         ?_SIOHaAcabatPuntuacions 005F             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 005F                 __end_of_GLCDMotor 0FCA  
                __end_of_TeTeclat 154A                     _indexNextUser 002C  
                 _hi_ha_hora_sio2 03A8                            ??_CtoA 0064  
                          ??_main 0075                            ??_menu 00D7  
              __size_of_LcPutChar 0040                     __activetblptr 000002  
                   _ultimaTeclaAD 0018            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 001A                  GLCDMotor@length2 0019  
                      _JnovaTecla 0128                  __end_of_UgetTop5 0042  
                          ?_LcLCD 005F                            ?_SMSon 005F  
                    ?_CToAobtenir 0064                            ?_Minit 005F  
            ??_UshowUsersCalculat 0064                            ?_Sinit 005F  
                          ?_Uinit 005F                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 1E0C  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 0064                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 0064                __size_of_SiFerMenu 0004  
                       ??_LcClear 0072                         ??_CantaIR 0066  
                          i2l4781 1C88                            i2l4773 1C6A  
                          i2l4777 1C72                    LcGotoXY@Fisics 006D  
                  LcGotoXY@Column 0071                     ??_WaitForBusy 006B  
              __size_of_TiGetTics 0026                            _SPBRGH 000FB0  
                  _sumaPulsacions 003C                 __end_of_CToAReset 0148  
                          _SMSoff 01AC                SIONovaDireccio@num 0064  
                          _LcInit 1716                      _MNouJoystick 0190  
                  _UgetNumUsuaris 01D4                            _SMotor 1282  
             escriureCharEEPROM@c 0065                            _TeInit 0170  
                          _Espera 1F0A                      _LcGotoXY$334 006F  
                          _Krebut 03A9    __end_of_SIOHaAcabatPuntuacions 01EC  
                          _RowAct 003F                     ?_miraPassword 005F  
             __end_of_TiResetTics 1F92                            Uinit@k 006A  
                __end_of_high_rsi 0032                            _h_Tics 0009  
                 ?_HClearNouSegon 005F                         ??___lbdiv 0065  
                   ?_CToAHaAcabat 005F                  __end_of_initHora 0158  
             __end_of__TiRSITimer 1C92                            _horaTX 0001  
                __end_of_menuList 0292                            clear_0 1A52  
                          clear_1 1A5E                            clear_2 1A70  
                          _jugant 03AE                            _segons 0015  
                      _UenviaChar 006C                            isa$std 000001  
                _llegirCharEEPROM 007C                __size_of_UgetScore 000E  
                      UenviaPas@c 0065       __size_of_EscriuPrimeraOrdre 0064  
               __end_of_HNouSegon 00B2                         ??_initSIO 0065  
                    __pdataCOMRAM 0045            __size_of_CantaPartAlta 005C  
                __end_of_motorSIO 0D2E                __size_of_UenviaPas 0010  
         __end_of_HActualitzaHora 1EC4                 ??_SIONovaDireccio 0064  
                __end_of_motorJoc 187A                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  ??_CToAConverteix 0064  
              __size_of_UnewScore 000A               __size_of_SIOendGame 0004  
               __end_of_CantaData 1D38                      TeTeclat@cols 0036  
                ___lbdiv@dividend 0065                         ?_GLCDInit 005F  
                   ?_UcheckExists 005F                        __accesstop 0080  
         __end_of__initialization 1A76            __end_of_UgetNumUsuaris 01D8  
               __end_of_LcPutChar 1C4C                     _JnovaDireccio 0130  
                JnovaDireccio@dir 0064                     ___rparam_used 000001  
                  ??_miraPassword 0069                     __end_of_LcLCD 1BF2  
                     ?_TiGetTimer 005F                     __end_of_SMSon 01AC  
               SIONovaTecla@tecla 0064                    __pcstackCOMRAM 005F  
                   __end_of_Minit 0190               __end_of_WaitForBusy 1D18  
                   __end_of_Sinit 0180                     __end_of_Uinit 161A  
               __end_of_NoFerMenu 01F0                         ?_HGetTime 0064  
                    __pidataBANK0 1F9E                    ??_CToAHaAcabat 0064  
            __size_of_initAltaveu 0008                 __end_of_URegister 01E4  
               __end_of_HnoJugant 01C4                 __end_of_SiFerMenu 01E8  
                      __end_ofPL2 0FD8                        __end_ofPL4 0FE0  
                      __end_ofPL6 1554                        __end_ofPL8 0FEA  
                ___lbdiv@quotient 0067                 __end_of_TiGetTics 1E58  
                     _TiInitTimer 1DE4                       ?_JnovaTecla 005F  
                         ??_LcLCD 0073                           ??_SMSon 0064  
                       ?_LcGotoXY 006C                         ?_LcLliure 005F  
                         ??_Minit 0065                         ?_LcScroll 005F  
                         ??_Sinit 0065                   JnovaTecla@tecla 0064  
                         ??_Uinit 0068              __size_of_init_eusart 0016  
                       ?_JendGame 005F                    ??_UcheckExists 0064  
             MNouJoystick@posicio 0064                        ??_GLCDInit 0065  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100                         ?_TeTeclat 005F  
                     _TiResetTics 1F82                   ?_UgetNumUsuaris 005F  
                  ?_JnovaDireccio 005F                     ??_UmotorUsers 0069  
               __end_of_UgetScore 009A                     ?_JoystickInit 005F  
                         ?_SMSoff 005F                           ?_LcInit 005F  
                   _CantaPartAlta 1B56                           ?_SMotor 005F  
                         ?_TeInit 005F                           ?_Espera 006B  
               __end_of_UenviaPas 006C                       __TiRSITimer 1C54  
             _indexNextUserStruct 002B                         ?_UgetTop5 005F  
               __end_of_UnewScore 0110                        ??_HGetTime 0066  
                   ?_UgetUserName 0064                  ??_compareStrings 0067  
                         _BAUDCON 000FB8                       ?_UenviaChar 0064  
            __size_of_playAltaveu 0004                __size_of_motorHora 0084  
          __size_of_MsetNovaTecla 0008        __end_of_calculateShowUsers 01D4  
                         LcInit@i 0070                  ?_HActualitzaHora 0064  
                      ??_LcGotoXY 006D                      ?_MNovaLletra 005F  
                      ??_LcLliure 0064                        ??_LcScroll 0067  
                ??_SIOcheckKrebut 0064               __size_of_TiGetTimer 001E  
            __size_of_CToAobtenir 0004                        ??_JendGame 0064  
                         _HJugant 01A0                         ?_high_rsi 005F  
                         _JJuguem 0138                           _LcClear 1EE8  
                         _CantaIR 1F66                      ?_LcNewString 0067  
                  ??_JoystickInit 0064                         ?_initHora 005F  
                      ??_TeTeclat 006B                       _WaitForBusy 1CDA  
                  ?_CantaPartAlta 005F             __end_of_SsetNovaTecla 0168  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00B4  
                         __Hparam 0000                   __size_of_SMotor 01A4  
             __size_of_JnovaTecla 0008                   __size_of_TeInit 0008  
                 __size_of_Espera 0022                           __Lparam 0000  
                      ??_UgetTop5 0064                      ??_SIOendGame 0064  
                       ?_motorSIO 005F                         ?_motorJoc 005F  
                  ??_UgetUserName 0066                 _getArrayShowUsers 1F4A  
             __end_of_UmotorUsers 1230          ?_UcheckExistsNotFinished 005F  
                         ___lbdiv 1D50                     ?_motorAltaveu 005F  
                    __psmallconst 0200                ?_getArrayShowUsers 0064  
                         __pcinit 1A0C      __end_of_UcheckExistsGetError 01DC  
                         _ferMenu 03B2                        _init_ports 1F2C  
                         __ramtop 0200                           __ptext0 1A84  
                         __ptext1 0A72                           __ptext2 0106  
                         __ptext3 17D4                           __ptext4 1E58  
                         __ptext5 01B8                           __ptext6 009A  
                         __ptext7 0110                           __ptext8 0118  
                         __ptext9 0120                         _T0CONbits 000FD5  
                       _GLCDMotor 0D66                         CantaIR@IR 0066  
                         _initSIO 0148                           _counter 0034  
                         _horaTmp 0041            conversorJoystick@direc 0064  
             ??_getArrayShowUsers 0066                       UenviaChar@c 0065  
                   ?_SIOEnviaHora 005F              __end_of_miraPassword 1EA0  
      __end_of_escriureCharEEPROM 1E32                  LcNewString@new_s 0067  
                 WaitForBusy@Busy 006B                       Uinit@k_1175 006B  
                    _do_showUsers 03B5                           _userPtr 0007  
               GLCDMostraMenu@num 0064                __end_of_SIOendGame 01BC  
                      ??_high_rsi 0060              __end_of_CToAHaAcabat 01FC  
            end_of_initialization 1A76                           _usuaris 0100  
                   UgetScore@quin 0064                   ??_JnovaDireccio 0064  
                      ??_initHora 0065          __end_of_llegirCharEEPROM 008C  
         __size_of_CantaPartBaixa 005C                     __Lmediumconst 0000  
                 TiGetTics@Handle 0068                     _MsetNovaTecla 0168  
             __size_of_UenviaChar 0010                 _conversorJoystick 1E58  
               __end_of_motorHora 1990                  ??_HClearNouSegon 0064  
                      _novaLletra 0051         __end_of_getArrayShowUsers 1F66  
              ?_conversorJoystick 005F                   _usuariActualSIO 004A  
                      ??_motorSIO 0073                         _CToAReset 0140  
                      ??_motorJoc 0072                   TiGetTics@actual 0069  
                   ?_SIONovaTecla 005F                        GLCDMotor@j 001F  
                         postdec1 000FE5                           postdec2 000FDD  
                 _SIONovaDireccio 0120                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 006B          __size_of_checkHoraAcabat 000C  
                      _numUsuaris 002D              __end_of_UcheckExists 01E0  
                   TeTeclat@files 0035               ??_conversorJoystick 0064  
              SIOStartGame@usuari 0064            __size_of_JoystickMotor 00D6  
                   TeTeclat@state 0037                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 005F  
                   ?_SIOStartGame 005F                    ??_SIOEnviaHora 0064  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
     __size_of_UshowUsersCalculat 000C                         _HNouSegon 00A6  
               UnewScore@scoretmp 0064                    _GLCDMostraMenu 00D6  
       __end_of_conversorJoystick 1E7C                   ??_CantaPartAlta 0064  
                  ?_MsetNovaTecla 005F                         _CantaData 1D18  
               __size_of_GLCDInit 0008                       _UmotorUsers 0FFE  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 00D6  
                  __end_of_SMSoff 01B2                      ??_TiGetTimer 0064  
                  __end_of_LcInit 17CA                    ??_SIONovaTecla 0064  
                      ?_CToAReset 005F                    __end_of_SMotor 1426  
            __end_of_teclaPremuda 029E                         _LcPutChar 1C0C  
                  __end_of_TeInit 0178                 motorAltaveu@state 0023  
                  __end_of_Espera 1F2C                    GLCDMotor@state 0020  
      __end_of_EscriuPrimeraOrdre 19F4                 __size_of_HGetTime 0004  
                   __pidataCOMRAM 1FB9                       ?_init_ports 005F  
                       _NoFerMenu 01EC                         _ColumnAct 003E  
            __end_of_JoystickInit 005C                    ??_SIOStartGame 0064  
                       _URegister 01E0                         _HnoJugant 01C0  
                    ?_TiInitTimer 005F                      ??_JnovaTecla 0064  
                       _SiFerMenu 01E4                       __end_ofPL10 0A30  
                     __end_ofPL20 125A                       __end_ofPL12 0FF4  
                     __end_ofPL30 1F9E                       __end_ofPL22 1268  
                     __end_ofPL14 156A                       __end_ofPL40 1628  
                     __end_ofPL32 0A3A                       __end_ofPL24 190C  
                     __end_ofPL16 1DE4                       __end_ofPL50 0A56  
                     __end_ofPL42 1A02                       __end_ofPL34 1D46  
                     __end_ofPL26 127A                       __end_ofPL18 124C  
                     __end_ofPL60 1282                       __end_ofPL52 0D46  
                     __end_ofPL44 1636                       __end_ofPL36 0A40  
                     __end_ofPL28 0D3A                       __end_ofPL70 0FFE  
                     __end_ofPL62 1640                       __end_ofPL54 0D52  
                     __end_ofPL46 0A4A                       __end_ofPL38 1C00  
                     __end_ofPL80 004A                       __end_ofPL72 1CDA  
                     __end_ofPL64 1F0A                       __end_ofPL56 1CD0  
                     __end_ofPL48 1C0C                       __end_ofPL90 0A5C  
                     __end_ofPL82 0D66                       __end_ofPL74 1D50  
                     __end_ofPL66 17D4                       __end_ofPL58 0D5C  
                     __end_ofPL92 0A62                       __end_ofPL84 1C9C  
                     __end_ofPL76 1430                       __end_ofPL68 1BBC  
                     __end_ofPL94 0A6A                       __end_ofPL86 1A0C  
                     __end_ofPL78 1B56                       __end_ofPL96 0A72  
                     __end_ofPL88 1C54               start_initialization 1A0C  
                       _TiGetTics 1E32            __end_of_GLCDMostraMenu 00E2  
                      ?_HNouSegon 005F                  ??_UgetNumUsuaris 0064  
                UmotorUsers@state 0027                 __size_of_LcGotoXY 0034  
            __end_of_UgetUserName 1FFE                __end_of_TiGetTimer 1DD6  
                   JJuguem@usuari 0064              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                 __size_of_LcScroll 0006  
                   _JoystickMotor 1640                 __size_of_JendGame 0004  
                    ?_TiResetTics 005F                        ?_CantaData 005F  
            _UcheckExistsGetError 01D8           __end_of_SIONovaDireccio 0128  
            __size_of_LcNewString 000C                          ??_SMSoff 0064  
                        ??_LcInit 006F                         _NovaTecla 0052  
               __size_of_TeTeclat 011A                          ??_SMotor 006B  
      __size_of_getArrayShowUsers 001C                          ??_TeInit 0065  
                    ?__TiRSITimer 005F                     ??_initAltaveu 0065  
                        ??_Espera 006D                         _UgetScore 008C  
              __end_of_JnovaTecla 0130                        ?_LcPutChar 005F  
                       _UenviaPas 005C                 __size_of_UgetTop5 000C  
                     __pdataBANK0 00BC                    motorHora@state 0014  
                    _menuDaltGLCD 0021                      ??_UenviaChar 0065  
                       _UnewScore 0106                        ?_NoFerMenu 005F  
           __size_of_miraPassword 0024                       ??_GLCDMotor 0073  
                      ?_URegister 005F                        ?_HnoJugant 005F  
               ??_checkHoraAcabat 0064                     ??_init_eusart 0064  
                      ?_SiFerMenu 005F                       __pbssCOMRAM 0001  
           __size_of_CToAHaAcabat 0004                     __pcstackBANK0 00D7  
                      ?_TiGetTics 0064                   ?_GLCDMostraMenu 005F  
                        ?_HJugant 005F                    ?_JoystickMotor 005F  
                 ??_MsetNovaTecla 0064              __end_of_motorAltaveu 18F4  
                        ?_JJuguem 005F                          ?_LcClear 005F  
                        ?_CantaIR 005F        __size_of_conversorJoystick 0024  
              _calculateShowUsers 01D0                    _CantaPartBaixa 1AF0  
        ??_SIOHaAcabatPuntuacions 0064             ?_UcheckExistsGetError 005F  
               __size_of_high_rsi 002A                      ?_WaitForBusy 005F  
             __size_of_init_ports 001E                MsetNovaTecla@tecla 0064  
              SsetNovaTecla@tecla 0064                __end_of_UenviaChar 007C  
         __size_of_CToAConverteix 000C                 __size_of_initHora 0008  
           __size_of_UcheckExists 0004               ?_calculateShowUsers 005F  
                      ?_UgetScore 005F                       ??_CToAReset 0064  
            __end_of_SIOEnviaHora 01C0                      _miraPassword 1E7C  
                       __pintcode 0008                          ?___lbdiv 0064  
                   ??_playAltaveu 0064                        ?_UenviaPas 0064  
               __size_of_motorSIO 02BC                 __size_of_motorJoc 00A6  
                 CantaPartBaixa@c 0065                      _CToAHaAcabat 01F8  
             __end_of_initAltaveu 0160                        ?_UnewScore 005F  
                       _arrayZero 0045                          ?_initSIO 005F  
                     __smallconst 0200                         _convertir 0047  
                   ??_CToAobtenir 0066                    __size_of_LcLCD 0036  
                  __size_of_SMSon 0006              ??_calculateShowUsers 0064  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 0120                    __size_of_Sinit 0008  
                     ??_HNouSegon 0064                    __size_of_Uinit 00B0  
                     _direccioSIO 0049                       _direccioJoc 0013  
          __end_of_CantaPartBaixa 1B4C                JoystickMotor@state 0017  
                        _GLCDInit 0198                       _do_register 03B6  
             __end_of_init_eusart 1FEA                         _newString 03B1  
                    _UcheckExists 01DC                         _loginText 00CF  
                       _jugantSIO 03AA          __size_of_HActualitzaHora 0024  
                       _jugantJoc 03AB                      UgetTop5@quin 0064  
                     ??_CantaData 0066                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
               ?_llegirCharEEPROM 005F                     ?_MNouJoystick 005F  
                ?_SIONovaDireccio 005F              __end_of_SIOStartGame 0118  
                   UenviaChar@pos 0064                _escriureCharEEPROM 1E0C  
                       _novaTecla 0054                ??_llegirCharEEPROM 0064  
                   motorSIO@state 000D                          _PIR1bits 000F9E  
                     ??_LcPutChar 0072                         _timerGLCD 0022  
                       _motorHora 190C                          _RCONbits 000FD0  
                       _reproduir 03B3                          _HGetTime 01C4  
           __size_of_JoystickInit 0012                         _timerHora 0016  
                       _timerMenu 0032               ?_escriureCharEEPROM 0064  
                     ??_NoFerMenu 0064                        _ADCON0bits 000FC2  
                     ??_URegister 0064                       ??_HnoJugant 0064  
                     ??_SiFerMenu 0064             __size_of_UgetUserName 0014  
             __end_of_playAltaveu 01D0            __size_of_SsetNovaTecla 0008  
                        Espera@ms 006B                         _zeroTecla 003A  
                        _LcGotoXY 1D84                    _usuariLoguejat 004F  
                        _LcLliure 00FA                       ??_TiGetTics 0066  
         __size_of_compareStrings 002A               llegirCharEEPROM@pos 0064  
            __size_of_TiInitTimer 0028                          _LcScroll 01B2  
                 ??_JoystickMotor 0065                     GLCDMotor@max1 004E  
                   GLCDMotor@max2 004D                     GLCDMotor@min1 001E  
                   GLCDMotor@min2 001D                      _teclaPremuda 0292  
                        _JendGame 01F0                         _usuariJoc 004C  
                     LcGotoXY@Row 006C                         copy_data0 1A20  
                       copy_data1 1A40              ??_escriureCharEEPROM 0065  
                 ?_CantaPartBaixa 005F               __end_of_CToAobtenir 01F8  
                __size_of_HJugant 0006            ??_UcheckExistsGetError 0064  
           escriureCharEEPROM@pos 0064                  __size_of_JJuguem 0008  
                __size_of_LcClear 0018                  __size_of_CantaIR 001C  
                        _TeTeclat 1430             __end_of_JnovaDireccio 0138  
                  ??_MNouJoystick 0064                    _do_updateScore 03B4  
 __size_of_SIOHaAcabatPuntuacions 0004                      ?_UmotorUsers 005F  
                    _JoystickInit 004A                        _EECON1bits 000FA6  
                    _registerText 00C4                       _indexUsuari 0030  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0010  
                   motorJoc@state 0012                          __Hrparam 0000  
                     _initAltaveu 0158                       ??_UgetScore 0064  
                        _UgetTop5 0036                         menu@state 002E  
                        __Lrparam 0000                        ?_motorHora 005F  
            __size_of__TiRSITimer 003E                      _UgetUserName 1FEA  
                     ??_UenviaPas 0065                  __size_of___lbdiv 0034  
                    _novaDireccio 0050                       ??_UnewScore 0064  
                    ??_init_ports 0064               HActualitzaHora@nova 0064  
      __end_of_UshowUsersCalculat 00CA                          _charActu 000F  
                     _init_eusart 1FD4                  __size_of_initSIO 0008  
           __size_of_motorAltaveu 007A                      _novaTeclaJOC 004B  
                    _novaTeclaSIO 0048                   _do_check_exists 03B7  
                        __ptext10 01BC                          __ptext11 01C0  
              _EscriuPrimeraOrdre 1990                          __ptext20 1E7C  
                        __ptext12 00A6                          __ptext21 1F4A  
                        __ptext13 01A0                          __ptext30 006C  
                        __ptext22 00B2                          __ptext14 01C4  
                        __ptext31 00CA                          __ptext23 01D0  
                        __ptext15 01C8                          __ptext40 01B2  
                        __ptext32 01D8                          __ptext24 00BE  
                        __ptext16 190C                          __ptext41 0128  
                        __ptext33 01DC                          __ptext25 1FEA  
                        __ptext17 01CC                          __ptext50 0140  
                        __ptext42 0130                          __ptext34 01E0  
                        __ptext26 0036                          __ptext18 187A  
                        __ptext51 1F2C                          __ptext43 01F0  
                        __ptext35 01E4                          __ptext27 008C  
                        __ptext19 02F0                          __ptext60 007C  
                        __ptext52 1FD4                          __ptext44 0138  
                        __ptext36 01A6                          __ptext28 01D4  
                        __ptext61 1D50                          __ptext53 0148  
                        __ptext45 1EA0                          __ptext37 01AC  
                        __ptext29 005C                          __ptext70 0188  
                        __ptext62 1DE4                          __ptext54 0150  
                        __ptext46 00D6                          __ptext38 01E8  
                        __ptext71 1BBC                          __ptext63 1430  
                        __ptext55 0158                          __ptext47 01F4  
                        __ptext39 01EC                          __ptext80 00EE  
                        __ptext72 1716                          __ptext64 0160  
                        __ptext56 0FFE                          __ptext48 01F8  
                        __ptext81 00FA                          __ptext73 1990  
                        __ptext65 0168                          __ptext57 1E0C  
                        __ptext49 00E2                          __ptext90 1E32  
                        __ptext82 1EE8                          __ptext74 1640  
                        __ptext66 0170                          __ptext58 1C9C  
                        __ptext91 0198                          __ptext83 1D84  
                        __ptext75 0190                          __ptext67 0178  
                        __ptext59 156A                          __ptext92 1DB8  
                        __ptext84 1CDA                          __ptext76 004A  
                        __ptext68 1282                          __ptext93 1EC4  
                        __ptext85 1F66                          __ptext77 0D66  
                        __ptext69 0180                          __ptext86 1AF0  
                        __ptext78 1C0C                          __ptext95 1C54  
                        __ptext87 1B56                          __ptext79 1D18  
                        __ptext88 1F0A                          __ptext89 1F82  
                  CantaPartAlta@c 0065                       _lletraASCII 0055  
                        _high_rsi 0008                          _copsNota 0024  
                        _s_Timers 0080                     __size_of_CtoA 0024  
                        _initHora 0150                       _lletraInici 00BC  
                        _menuDalt 0031             __size_of_SIOEnviaHora 0004  
                        _menuList 0201               ?_EscriuPrimeraOrdre 005F  
                   __size_of_main 006C                     __size_of_menu 0734  
           __end_of_CantaPartAlta 1BB2                    _CToAConverteix 00E2  
                   CantaData@Data 0066                          _tiTeclat 0038  
              __end_of_init_ports 1F4A                          _setSMSon 03B9  
                   _SsetNovaTecla 0160              __size_of_WaitForBusy 003E  
                        _nouSegon 03AD                          _scoreUsr 0028  
                        _motorSIO 0A72                 ??_HActualitzaHora 0065  
                        _motorJoc 17D4                   _checkHoraAcabat 00B2  
                        _timerSIO 0011                          _timerSMS 003B  
                        isa$xinst 000000                          int$flags 0078  
                    UenviaPas@pos 0064                       _playAltaveu 01CC  
                    _motorAltaveu 187A           __size_of_HClearNouSegon 0004  
          _SIOHaAcabatPuntuacions 01E8              ??_EscriuPrimeraOrdre 0064  
                      LcInit@rows 006F                  ??_GLCDMostraMenu 0064  
           __size_of_SIONovaTecla 0008           _UcheckExistsNotFinished 00CA  
                      _INTCONbits 000FF2                     ??_MNovaLletra 0064  
                     _CToAobtenir 01F4                      _SIOEnviaHora 01BC  
           __size_of_SIOStartGame 0008                     ??_LcNewString 0069  
                        intlevel2 0000                      _timerAltaveu 0025  
                  _arrayShowUsers 00A2            __end_of_CToAConverteix 00EE  
                      LcPutChar@c 0072                    ?_SsetNovaTecla 005F  
               MNovaLletra@lletra 0064                   compareStrings@a 0064  
                 compareStrings@b 0065                       ??_motorHora 006B  
                    _SIONovaTecla 0118                       _tempsAcabat 03AC  
                     GLCDMotor@k1 001C                       GLCDMotor@k2 001B  
            __end_of_MNouJoystick 0198                      _SIOStartGame 0110  
                  _compareStrings 1C9C                       _tmpPassword 00AA  
             __end_of_MNovaLletra 0188                   ?_CToAConverteix 005F  
           __end_of_MsetNovaTecla 0170           __end_of_checkHoraAcabat 00BE  
                     _tmpUsername 00B3                    _SIOcheckKrebut 009A  
                     SMotor@state 0039           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 00FA              __size_of_UmotorUsers 0232  
                      _SIOendGame 01B8  
