

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue May 10 12:48:45 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   115                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   116                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   118                           	psect	pa_nodes0,global,class=CODE,delta=1
   119  0000                     
   120                           ; Version 2.32
   121                           ; Generated 02/02/2021 GMT
   122                           ; 
   123                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution. Publication is not required when
   137                           ;        this file is used in an embedded application.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC18F4321 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155  0000                     
   156                           	psect	idataCOMRAM
   157  001F77                     __pidataCOMRAM:
   158                           	callstack 0
   159                           
   160                           ;initializer for _arrayZero
   161  001F77  30                 	db	48
   162  001F78  20                 	db	32
   163                           
   164                           ;initializer for _convertir
   165  001F79  FA                 	db	250
   166                           
   167                           ;initializer for _novaTeclaSIO
   168  001F7A  FF                 	db	255
   169                           
   170                           ;initializer for _direccioSIO
   171  001F7B  FF                 	db	255
   172                           
   173                           ;initializer for _usuariActualSIO
   174  001F7C  FF                 	db	255
   175                           
   176                           ;initializer for _novaTeclaJOC
   177  001F7D  FF                 	db	255
   178                           
   179                           ;initializer for _usuariJoc
   180  001F7E  FF                 	db	255
   181                           
   182                           ;initializer for GLCDMotor@max2
   183  001F7F  0F                 	db	15
   184                           
   185                           ;initializer for GLCDMotor@max1
   186  001F80  0F                 	db	15
   187                           
   188                           ;initializer for _usuariLoguejat
   189  001F81  FF                 	db	255
   190                           
   191                           ;initializer for _novaDireccio
   192  001F82  FF                 	db	255
   193                           
   194                           ;initializer for _novaLletra
   195  001F83  FF                 	db	255
   196                           
   197                           ;initializer for _NovaTecla
   198  001F84  FF                 	db	255
   199                           
   200                           ;initializer for _ultimaTecla
   201  001F85  FF                 	db	255
   202                           
   203                           ;initializer for _novaTecla
   204  001F86  FF                 	db	255
   205                           
   206                           ;initializer for _lletraASCII
   207  001F87  FF                 	db	255
   208                           
   209                           ;initializer for _hora
   210  001F88  33                 	db	51
   211  001F89  30                 	db	48
   212  001F8A  3A                 	db	58
   213  001F8B  30                 	db	48
   214  001F8C  30                 	db	48
   215  001F8D  00                 	db	0
   216                           
   217                           ;initializer for _stringScore
   218  001F8E  30                 	db	48
   219  001F8F  30                 	db	48
   220  001F90  00                 	db	0
   221                           
   222                           	psect	idataBANK0
   223  001F5C                     __pidataBANK0:
   224                           	callstack 0
   225                           
   226                           ;initializer for _lletraInici
   227  001F5C  41                 	db	65
   228  001F5D  44                 	db	68
   229  001F5E  47                 	db	71
   230  001F5F  4A                 	db	74
   231  001F60  4D                 	db	77
   232  001F61  50                 	db	80
   233  001F62  54                 	db	84
   234  001F63  57                 	db	87
   235                           
   236                           ;initializer for _registerText
   237  001F64  32                 	db	50
   238  001F65  2E                 	db	46
   239  001F66  52                 	db	82
   240  001F67  45                 	db	69
   241  001F68  47                 	db	71
   242  001F69  49                 	db	73
   243  001F6A  53                 	db	83
   244  001F6B  54                 	db	84
   245  001F6C  45                 	db	69
   246  001F6D  52                 	db	82
   247  001F6E  00                 	db	0
   248                           
   249                           ;initializer for _loginText
   250  001F6F  31                 	db	49
   251  001F70  2E                 	db	46
   252  001F71  4C                 	db	76
   253  001F72  4F                 	db	79
   254  001F73  47                 	db	71
   255  001F74  49                 	db	73
   256  001F75  4E                 	db	78
   257  001F76  00                 	db	0
   258                           
   259                           	psect	smallconst
   260  000200                     __psmallconst:
   261                           	callstack 0
   262  000200  00                 	db	0
   263  000201                     _menuList:
   264                           	callstack 0
   265  000201  31                 	db	49
   266  000202  2E                 	db	46
   267  000203  50                 	db	80
   268  000204  6C                 	db	108
   269  000205  61                 	db	97
   270  000206  79                 	db	121
   271  000207  20                 	db	32
   272  000208  61                 	db	97
   273  000209  20                 	db	32
   274  00020A  47                 	db	71
   275  00020B  61                 	db	97
   276  00020C  6D                 	db	109
   277  00020D  65                 	db	101
   278  00020E  00                 	db	0
   279  00020F  00                 	db	0
   280  000210  00                 	db	0
   281  000211  00                 	db	0
   282  000212  00                 	db	0
   283  000213  00                 	db	0
   284  000214  00                 	db	0
   285  000215  00                 	db	0
   286  000216  00                 	db	0
   287  000217  00                 	db	0
   288  000218  00                 	db	0
   289  000219  00                 	db	0
   290  00021A  00                 	db	0
   291  00021B  00                 	db	0
   292  00021C  00                 	db	0
   293  00021D  00                 	db	0
   294  00021E  32                 	db	50
   295  00021F  2E                 	db	46
   296  000220  4D                 	db	77
   297  000221  6F                 	db	111
   298  000222  64                 	db	100
   299  000223  69                 	db	105
   300  000224  66                 	db	102
   301  000225  79                 	db	121
   302  000226  20                 	db	32
   303  000227  54                 	db	84
   304  000228  69                 	db	105
   305  000229  6D                 	db	109
   306  00022A  65                 	db	101
   307  00022B  00                 	db	0
   308  00022C  00                 	db	0
   309  00022D  00                 	db	0
   310  00022E  00                 	db	0
   311  00022F  00                 	db	0
   312  000230  00                 	db	0
   313  000231  00                 	db	0
   314  000232  00                 	db	0
   315  000233  00                 	db	0
   316  000234  00                 	db	0
   317  000235  00                 	db	0
   318  000236  00                 	db	0
   319  000237  00                 	db	0
   320  000238  00                 	db	0
   321  000239  00                 	db	0
   322  00023A  00                 	db	0
   323  00023B  33                 	db	51
   324  00023C  2E                 	db	46
   325  00023D  53                 	db	83
   326  00023E  68                 	db	104
   327  00023F  6F                 	db	111
   328  000240  77                 	db	119
   329  000241  20                 	db	32
   330  000242  47                 	db	71
   331  000243  65                 	db	101
   332  000244  6E                 	db	110
   333  000245  65                 	db	101
   334  000246  72                 	db	114
   335  000247  61                 	db	97
   336  000248  6C                 	db	108
   337  000249  20                 	db	32
   338  00024A  54                 	db	84
   339  00024B  6F                 	db	111
   340  00024C  70                 	db	112
   341  00024D  20                 	db	32
   342  00024E  35                 	db	53
   343  00024F  20                 	db	32
   344  000250  53                 	db	83
   345  000251  63                 	db	99
   346  000252  6F                 	db	111
   347  000253  72                 	db	114
   348  000254  65                 	db	101
   349  000255  73                 	db	115
   350  000256  20                 	db	32
   351  000257  00                 	db	0
   352  000258  34                 	db	52
   353  000259  2E                 	db	46
   354  00025A  4C                 	db	76
   355  00025B  6F                 	db	111
   356  00025C  67                 	db	103
   357  00025D  6F                 	db	111
   358  00025E  75                 	db	117
   359  00025F  74                 	db	116
   360  000260  00                 	db	0
   361  000261  00                 	db	0
   362  000262  00                 	db	0
   363  000263  00                 	db	0
   364  000264  00                 	db	0
   365  000265  00                 	db	0
   366  000266  00                 	db	0
   367  000267  00                 	db	0
   368  000268  00                 	db	0
   369  000269  00                 	db	0
   370  00026A  00                 	db	0
   371  00026B  00                 	db	0
   372  00026C  00                 	db	0
   373  00026D  00                 	db	0
   374  00026E  00                 	db	0
   375  00026F  00                 	db	0
   376  000270  00                 	db	0
   377  000271  00                 	db	0
   378  000272  00                 	db	0
   379  000273  00                 	db	0
   380  000274  00                 	db	0
   381  000275  35                 	db	53
   382  000276  2E                 	db	46
   383  000277  53                 	db	83
   384  000278  68                 	db	104
   385  000279  6F                 	db	111
   386  00027A  77                 	db	119
   387  00027B  20                 	db	32
   388  00027C  41                 	db	65
   389  00027D  6C                 	db	108
   390  00027E  6C                 	db	108
   391  00027F  20                 	db	32
   392  000280  55                 	db	85
   393  000281  73                 	db	115
   394  000282  65                 	db	101
   395  000283  72                 	db	114
   396  000284  73                 	db	115
   397  000285  00                 	db	0
   398  000286  00                 	db	0
   399  000287  00                 	db	0
   400  000288  00                 	db	0
   401  000289  00                 	db	0
   402  00028A  00                 	db	0
   403  00028B  00                 	db	0
   404  00028C  00                 	db	0
   405  00028D  00                 	db	0
   406  00028E  00                 	db	0
   407  00028F  00                 	db	0
   408  000290  00                 	db	0
   409  000291  00                 	db	0
   410  000292                     __end_of_menuList:
   411                           	callstack 0
   412  000292                     _teclaPremuda:
   413                           	callstack 0
   414  000292  01                 	db	1
   415  000293  02                 	db	2
   416  000294  03                 	db	3
   417  000295  04                 	db	4
   418  000296  05                 	db	5
   419  000297  06                 	db	6
   420  000298  07                 	db	7
   421  000299  08                 	db	8
   422  00029A  09                 	db	9
   423  00029B  0A                 	db	10
   424  00029C  00                 	db	0
   425  00029D  0B                 	db	11
   426  00029E                     __end_of_teclaPremuda:
   427                           	callstack 0
   428  0000                     _PIR1bits	set	3998
   429  0000                     _RCREG	set	4014
   430  0000                     _TXREG	set	4013
   431  0000                     _TXSTAbits	set	4012
   432  0000                     _ADCON0bits	set	4034
   433  0000                     _ADRESH	set	4036
   434  0000                     _ADCON2	set	4032
   435  0000                     _ADCON1	set	4033
   436  0000                     _ADCON0	set	4034
   437  0000                     _EECON2	set	4007
   438  0000                     _EEDATA	set	4008
   439  0000                     _EEADR	set	4009
   440  0000                     _T0CONbits	set	4053
   441  0000                     _TMR0L	set	4054
   442  0000                     _TMR0H	set	4055
   443  0000                     _T0CON	set	4053
   444  0000                     _INTCONbits	set	4082
   445  0000                     _RCONbits	set	4048
   446  0000                     _PORTDbits	set	3971
   447  0000                     _SPBRG	set	4015
   448  0000                     _SPBRGH	set	4016
   449  0000                     _BAUDCON	set	4024
   450  0000                     _RCSTA	set	4011
   451  0000                     _TXSTA	set	4012
   452  0000                     _EECON1bits	set	4006
   453  0000                     _LATD	set	3980
   454  0000                     _TRISD	set	3989
   455  0000                     _TRISC	set	3988
   456  0000                     _LATBbits	set	3978
   457  0000                     _TRISB	set	3987
   458  0000                     _TRISA	set	3986
   459  0000                     _PORTCbits	set	3970
   460  0000                     _LATDbits	set	3980
   461  0000                     _LATCbits	set	3979
   462  0000                     _TRISDbits	set	3989
   463  0000                     _TRISCbits	set	3988
   464  00029E                     STR_5:
   465  00029E  54                 	db	84	;'T'
   466  00029F  49                 	db	73	;'I'
   467  0002A0  4D                 	db	77	;'M'
   468  0002A1  45                 	db	69	;'E'
   469  0002A2  20                 	db	32
   470  0002A3  52                 	db	82	;'R'
   471  0002A4  45                 	db	69	;'E'
   472  0002A5  4D                 	db	77	;'M'
   473  0002A6  41                 	db	65	;'A'
   474  0002A7  49                 	db	73	;'I'
   475  0002A8  4E                 	db	78	;'N'
   476  0002A9  49                 	db	73	;'I'
   477  0002AA  4E                 	db	78	;'N'
   478  0002AB  47                 	db	71	;'G'
   479  0002AC  3A                 	db	58	;':'
   480  0002AD  00                 	db	0
   481  0002AE                     STR_4:
   482  0002AE  4D                 	db	77	;'M'
   483  0002AF  6F                 	db	111	;'o'
   484  0002B0  64                 	db	100	;'d'
   485  0002B1  69                 	db	105	;'i'
   486  0002B2  66                 	db	102	;'f'
   487  0002B3  79                 	db	121	;'y'
   488  0002B4  20                 	db	32
   489  0002B5  54                 	db	84	;'T'
   490  0002B6  69                 	db	105	;'i'
   491  0002B7  6D                 	db	109	;'m'
   492  0002B8  65                 	db	101	;'e'
   493  0002B9  3A                 	db	58	;':'
   494  0002BA  00                 	db	0
   495  0002BB                     STR_7:
   496  0002BB  54                 	db	84	;'T'
   497  0002BC  49                 	db	73	;'I'
   498  0002BD  4D                 	db	77	;'M'
   499  0002BE  45                 	db	69	;'E'
   500  0002BF  20                 	db	32
   501  0002C0  4C                 	db	76	;'L'
   502  0002C1  45                 	db	69	;'E'
   503  0002C2  46                 	db	70	;'F'
   504  0002C3  54                 	db	84	;'T'
   505  0002C4  3A                 	db	58	;':'
   506  0002C5  20                 	db	32
   507  0002C6  00                 	db	0
   508  0002C7                     STR_3:
   509  0002C7  42                 	db	66	;'B'
   510  0002C8  59                 	db	89	;'Y'
   511  0002C9  45                 	db	69	;'E'
   512  0002CA  20                 	db	32
   513  0002CB  42                 	db	66	;'B'
   514  0002CC  59                 	db	89	;'Y'
   515  0002CD  45                 	db	69	;'E'
   516  0002CE  20                 	db	32
   517  0002CF  00                 	db	0
   518  0002D0                     STR_8:
   519  0002D0  53                 	db	83	;'S'
   520  0002D1  43                 	db	67	;'C'
   521  0002D2  4F                 	db	79	;'O'
   522  0002D3  52                 	db	82	;'R'
   523  0002D4  45                 	db	69	;'E'
   524  0002D5  3A                 	db	58	;':'
   525  0002D6  20                 	db	32
   526  0002D7  00                 	db	0
   527  0002D8                     STR_6:
   528  0002D8  45                 	db	69	;'E'
   529  0002D9  52                 	db	82	;'R'
   530  0002DA  52                 	db	82	;'R'
   531  0002DB  4F                 	db	79	;'O'
   532  0002DC  52                 	db	82	;'R'
   533  0002DD  53                 	db	83	;'S'
   534  0002DE  3A                 	db	58	;':'
   535  0002DF  00                 	db	0
   536  0002E0                     STR_2:
   537  0002E0  50                 	db	80	;'P'
   538  0002E1  53                 	db	83	;'S'
   539  0002E2  57                 	db	87	;'W'
   540  0002E3  44                 	db	68	;'D'
   541  0002E4  3A                 	db	58	;':'
   542  0002E5  20                 	db	32
   543  0002E6  00                 	db	0
   544  0002E7                     STR_1:
   545  0002E7  55                 	db	85	;'U'
   546  0002E8  53                 	db	83	;'S'
   547  0002E9  45                 	db	69	;'E'
   548  0002EA  52                 	db	82	;'R'
   549  0002EB  3A                 	db	58	;':'
   550  0002EC  20                 	db	32
   551  0002ED  00                 	db	0
   552  0002EE  00                 	db	0	; dummy byte at the end
   553  0000                     
   554                           ; #config settings
   555                           
   556                           	psect	cinit
   557  0019CE                     __pcinit:
   558                           	callstack 0
   559  0019CE                     start_initialization:
   560                           	callstack 0
   561  0019CE                     __initialization:
   562                           	callstack 0
   563                           
   564                           ; Initialize objects allocated to BANK0 (27 bytes)
   565                           ; load TBLPTR registers with __pidataBANK0
   566  0019CE  0E5C               	movlw	low __pidataBANK0
   567  0019D0  6EF6               	movwf	tblptrl,c
   568  0019D2  0E1F               	movlw	high __pidataBANK0
   569  0019D4  6EF7               	movwf	tblptrh,c
   570  0019D6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   571  0019D8  6EF8               	movwf	tblptru,c
   572  0019DA  EE00  F0BC         	lfsr	0,__pdataBANK0
   573  0019DE  EE10 F01B          	lfsr	1,27
   574  0019E2                     copy_data0:
   575  0019E2  0009               	tblrd		*+
   576  0019E4  CFF5 FFEE          	movff	tablat,postinc0
   577  0019E8  50E5               	movf	postdec1,w,c
   578  0019EA  50E1               	movf	fsr1l,w,c
   579  0019EC  E1FA               	bnz	copy_data0
   580                           
   581                           ; Initialize objects allocated to COMRAM (26 bytes)
   582                           ; load TBLPTR registers with __pidataCOMRAM
   583  0019EE  0E77               	movlw	low __pidataCOMRAM
   584  0019F0  6EF6               	movwf	tblptrl,c
   585  0019F2  0E1F               	movlw	high __pidataCOMRAM
   586  0019F4  6EF7               	movwf	tblptrh,c
   587  0019F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   588  0019F8  6EF8               	movwf	tblptru,c
   589  0019FA  EE00  F045         	lfsr	0,__pdataCOMRAM
   590  0019FE  EE10 F01A          	lfsr	1,26
   591  001A02                     copy_data1:
   592  001A02  0009               	tblrd		*+
   593  001A04  CFF5 FFEE          	movff	tablat,postinc0
   594  001A08  50E5               	movf	postdec1,w,c
   595  001A0A  50E1               	movf	fsr1l,w,c
   596  001A0C  E1FA               	bnz	copy_data1
   597                           
   598                           ; Clear objects allocated to BANK1 (144 bytes)
   599  001A0E  EE01  F000         	lfsr	0,__pbssBANK1
   600  001A12  0E90               	movlw	144
   601  001A14                     clear_0:
   602  001A14  6AEE               	clrf	postinc0,c
   603  001A16  06E8               	decf	wreg,f,c
   604  001A18  E1FD               	bnz	clear_0
   605                           
   606                           ; Clear objects allocated to BANK0 (60 bytes)
   607  001A1A  EE00  F080         	lfsr	0,__pbssBANK0
   608  001A1E  0E3C               	movlw	60
   609  001A20                     clear_1:
   610  001A20  6AEE               	clrf	postinc0,c
   611  001A22  06E8               	decf	wreg,f,c
   612  001A24  E1FD               	bnz	clear_1
   613                           
   614                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   615  001A26  6A77               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   616  001A28  6A76               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   617  001A2A  6A75               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   618                           
   619                           ; Clear objects allocated to COMRAM (68 bytes)
   620  001A2C  EE00  F001         	lfsr	0,__pbssCOMRAM
   621  001A30  0E44               	movlw	68
   622  001A32                     clear_2:
   623  001A32  6AEE               	clrf	postinc0,c
   624  001A34  06E8               	decf	wreg,f,c
   625  001A36  E1FD               	bnz	clear_2
   626  001A38                     end_of_initialization:
   627                           	callstack 0
   628  001A38                     __end_of__initialization:
   629                           	callstack 0
   630  001A38  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   631  001A3A  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   632  001A3C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   633  001A3E  6EF8               	movwf	tblptru,c
   634  001A40  0100               	movlb	0
   635  001A42  EF23  F00D         	goto	_main	;jump to C main() function
   636                           
   637                           	psect	bitbssCOMRAM
   638  0003A8                     __pbitbssCOMRAM:
   639                           	callstack 0
   640  0003A8                     _hi_ha_hora_sio2:
   641                           	callstack 0
   642  0003A8                     	ds	1
   643  0003A9                     _Krebut:
   644                           	callstack 0
   645  0003A9                     	ds	1
   646  0003AA                     _jugantSIO:
   647                           	callstack 0
   648  0003AA                     	ds	1
   649  0003AB                     _jugantJoc:
   650                           	callstack 0
   651  0003AB                     	ds	1
   652  0003AC                     _tempsAcabat:
   653                           	callstack 0
   654  0003AC                     	ds	1
   655  0003AD                     _nouSegon:
   656                           	callstack 0
   657  0003AD                     	ds	1
   658  0003AE                     _jugant:
   659                           	callstack 0
   660  0003AE                     	ds	1
   661  0003AF                     _cap2:
   662                           	callstack 0
   663  0003AF                     	ds	1
   664  0003B0                     _cap1:
   665                           	callstack 0
   666  0003B0                     	ds	1
   667  0003B1                     _newString:
   668                           	callstack 0
   669  0003B1                     	ds	1
   670  0003B2                     _ferMenu:
   671                           	callstack 0
   672  0003B2                     	ds	1
   673  0003B3                     _reproduir:
   674                           	callstack 0
   675  0003B3                     	ds	1
   676  0003B4                     _do_updateScore:
   677                           	callstack 0
   678  0003B4                     	ds	1
   679  0003B5                     _do_showUsers:
   680                           	callstack 0
   681  0003B5                     	ds	1
   682  0003B6                     _do_register:
   683                           	callstack 0
   684  0003B6                     	ds	1
   685  0003B7                     _do_check_exists:
   686                           	callstack 0
   687  0003B7                     	ds	1
   688  0003B8                     _loginNOTRegister:
   689                           	callstack 0
   690  0003B8                     	ds	1
   691  0003B9                     _setSMSon:
   692                           	callstack 0
   693  0003B9                     	ds	1
   694  0003BA                     _nou_s:
   695                           	callstack 0
   696  0003BA                     	ds	1
   697                           
   698                           	psect	bssCOMRAM
   699  000001                     __pbssCOMRAM:
   700                           	callstack 0
   701  000001                     _horaTX:
   702                           	callstack 0
   703  000001                     	ds	6
   704  000007                     _userPtr:
   705                           	callstack 0
   706  000007                     	ds	2
   707  000009                     _h_Tics:
   708                           	callstack 0
   709  000009                     	ds	2
   710  00000B                     _s_ptr:
   711                           	callstack 0
   712  00000B                     	ds	2
   713  00000D                     motorSIO@state:
   714                           	callstack 0
   715  00000D                     	ds	1
   716  00000E                     _mask:
   717                           	callstack 0
   718  00000E                     	ds	1
   719  00000F                     _charActu:
   720                           	callstack 0
   721  00000F                     	ds	1
   722  000010                     _score:
   723                           	callstack 0
   724  000010                     	ds	1
   725  000011                     _timerSIO:
   726                           	callstack 0
   727  000011                     	ds	1
   728  000012                     motorJoc@state:
   729                           	callstack 0
   730  000012                     	ds	1
   731  000013                     _direccioJoc:
   732                           	callstack 0
   733  000013                     	ds	1
   734  000014                     motorHora@state:
   735                           	callstack 0
   736  000014                     	ds	1
   737  000015                     _segons:
   738                           	callstack 0
   739  000015                     	ds	1
   740  000016                     _timerHora:
   741                           	callstack 0
   742  000016                     	ds	1
   743  000017                     JoystickMotor@state:
   744                           	callstack 0
   745  000017                     	ds	1
   746  000018                     _ultimaTeclaAD:
   747                           	callstack 0
   748  000018                     	ds	1
   749  000019                     GLCDMotor@length2:
   750                           	callstack 0
   751  000019                     	ds	1
   752  00001A                     GLCDMotor@length1:
   753                           	callstack 0
   754  00001A                     	ds	1
   755  00001B                     GLCDMotor@k2:
   756                           	callstack 0
   757  00001B                     	ds	1
   758  00001C                     GLCDMotor@k1:
   759                           	callstack 0
   760  00001C                     	ds	1
   761  00001D                     GLCDMotor@min2:
   762                           	callstack 0
   763  00001D                     	ds	1
   764  00001E                     GLCDMotor@min1:
   765                           	callstack 0
   766  00001E                     	ds	1
   767  00001F                     GLCDMotor@j:
   768                           	callstack 0
   769  00001F                     	ds	1
   770  000020                     GLCDMotor@state:
   771                           	callstack 0
   772  000020                     	ds	1
   773  000021                     _menuDaltGLCD:
   774                           	callstack 0
   775  000021                     	ds	1
   776  000022                     _timerGLCD:
   777                           	callstack 0
   778  000022                     	ds	1
   779  000023                     motorAltaveu@state:
   780                           	callstack 0
   781  000023                     	ds	1
   782  000024                     _copsNota:
   783                           	callstack 0
   784  000024                     	ds	1
   785  000025                     _timerAltaveu:
   786                           	callstack 0
   787  000025                     	ds	1
   788  000026                     _nota:
   789                           	callstack 0
   790  000026                     	ds	1
   791  000027                     UmotorUsers@state:
   792                           	callstack 0
   793  000027                     	ds	1
   794  000028                     _scoreUsr:
   795                           	callstack 0
   796  000028                     	ds	1
   797  000029                     _j:
   798                           	callstack 0
   799  000029                     	ds	1
   800  00002A                     _i:
   801                           	callstack 0
   802  00002A                     	ds	1
   803  00002B                     _indexNextUserStruct:
   804                           	callstack 0
   805  00002B                     	ds	1
   806  00002C                     _indexNextUser:
   807                           	callstack 0
   808  00002C                     	ds	1
   809  00002D                     _numUsuaris:
   810                           	callstack 0
   811  00002D                     	ds	1
   812  00002E                     menu@state:
   813                           	callstack 0
   814  00002E                     	ds	1
   815  00002F                     _pos:
   816                           	callstack 0
   817  00002F                     	ds	1
   818  000030                     _indexUsuari:
   819                           	callstack 0
   820  000030                     	ds	1
   821  000031                     _menuDalt:
   822                           	callstack 0
   823  000031                     	ds	1
   824  000032                     _timerMenu:
   825                           	callstack 0
   826  000032                     	ds	1
   827  000033                     _tmp:
   828                           	callstack 0
   829  000033                     	ds	1
   830  000034                     _counter:
   831                           	callstack 0
   832  000034                     	ds	1
   833  000035                     TeTeclat@files:
   834                           	callstack 0
   835  000035                     	ds	1
   836  000036                     TeTeclat@cols:
   837                           	callstack 0
   838  000036                     	ds	1
   839  000037                     TeTeclat@state:
   840                           	callstack 0
   841  000037                     	ds	1
   842  000038                     _tiTeclat:
   843                           	callstack 0
   844  000038                     	ds	1
   845  000039                     SMotor@state:
   846                           	callstack 0
   847  000039                     	ds	1
   848  00003A                     _zeroTecla:
   849                           	callstack 0
   850  00003A                     	ds	1
   851  00003B                     _timerSMS:
   852                           	callstack 0
   853  00003B                     	ds	1
   854  00003C                     _sumaPulsacions:
   855                           	callstack 0
   856  00003C                     	ds	1
   857  00003D                     _Timer:
   858                           	callstack 0
   859  00003D                     	ds	1
   860  00003E                     _ColumnAct:
   861                           	callstack 0
   862  00003E                     	ds	1
   863  00003F                     _RowAct:
   864                           	callstack 0
   865  00003F                     	ds	1
   866  000040                     _Rows:
   867                           	callstack 0
   868  000040                     	ds	1
   869  000041                     _horaTmp:
   870                           	callstack 0
   871  000041                     	ds	4
   872                           
   873                           	psect	dataCOMRAM
   874  000045                     __pdataCOMRAM:
   875                           	callstack 0
   876  000045                     _arrayZero:
   877                           	callstack 0
   878  000045                     	ds	2
   879  000047                     _convertir:
   880                           	callstack 0
   881  000047                     	ds	1
   882  000048                     _novaTeclaSIO:
   883                           	callstack 0
   884  000048                     	ds	1
   885  000049                     _direccioSIO:
   886                           	callstack 0
   887  000049                     	ds	1
   888  00004A                     _usuariActualSIO:
   889                           	callstack 0
   890  00004A                     	ds	1
   891  00004B                     _novaTeclaJOC:
   892                           	callstack 0
   893  00004B                     	ds	1
   894  00004C                     _usuariJoc:
   895                           	callstack 0
   896  00004C                     	ds	1
   897  00004D                     GLCDMotor@max2:
   898                           	callstack 0
   899  00004D                     	ds	1
   900  00004E                     GLCDMotor@max1:
   901                           	callstack 0
   902  00004E                     	ds	1
   903  00004F                     _usuariLoguejat:
   904                           	callstack 0
   905  00004F                     	ds	1
   906  000050                     _novaDireccio:
   907                           	callstack 0
   908  000050                     	ds	1
   909  000051                     _novaLletra:
   910                           	callstack 0
   911  000051                     	ds	1
   912  000052                     _NovaTecla:
   913                           	callstack 0
   914  000052                     	ds	1
   915  000053                     _ultimaTecla:
   916                           	callstack 0
   917  000053                     	ds	1
   918  000054                     _novaTecla:
   919                           	callstack 0
   920  000054                     	ds	1
   921  000055                     _lletraASCII:
   922                           	callstack 0
   923  000055                     	ds	1
   924  000056                     _hora:
   925                           	callstack 0
   926  000056                     	ds	6
   927  00005C                     _stringScore:
   928                           	callstack 0
   929  00005C                     	ds	3
   930                           
   931                           	psect	bssBANK0
   932  000080                     __pbssBANK0:
   933                           	callstack 0
   934  000080                     _s_Timers:
   935                           	callstack 0
   936  000080                     	ds	24
   937  000098                     _puntuacions:
   938                           	callstack 0
   939  000098                     	ds	10
   940  0000A2                     _arrayShowUsers:
   941                           	callstack 0
   942  0000A2                     	ds	8
   943  0000AA                     _tmpPassword:
   944                           	callstack 0
   945  0000AA                     	ds	9
   946  0000B3                     _tmpUsername:
   947                           	callstack 0
   948  0000B3                     	ds	9
   949                           
   950                           	psect	dataBANK0
   951  0000BC                     __pdataBANK0:
   952                           	callstack 0
   953  0000BC                     _lletraInici:
   954                           	callstack 0
   955  0000BC                     	ds	8
   956  0000C4                     _registerText:
   957                           	callstack 0
   958  0000C4                     	ds	11
   959  0000CF                     _loginText:
   960                           	callstack 0
   961  0000CF                     	ds	8
   962                           
   963                           	psect	bssBANK1
   964  000100                     __pbssBANK1:
   965                           	callstack 0
   966  000100                     _usuaris:
   967                           	callstack 0
   968  000100                     	ds	144
   969                           
   970                           	psect	cstackBANK0
   971  0000D7                     __pcstackBANK0:
   972                           	callstack 0
   973  0000D7                     ??_menu:
   974                           
   975                           ; 1 bytes @ 0x0
   976  0000D7                     	ds	5
   977                           
   978                           	psect	cstackCOMRAM
   979  00005F                     __pcstackCOMRAM:
   980                           	callstack 0
   981  00005F                     
   982                           ; 1 bytes @ 0x0
   983  00005F                     	ds	1
   984  000060                     ??_high_rsi:
   985                           
   986                           ; 1 bytes @ 0x1
   987  000060                     	ds	4
   988  000064                     ??_EscriuPrimeraOrdre:
   989  000064                     ??_CantaPartAlta:
   990  000064                     ??_CantaPartBaixa:
   991  000064                     ?_TiGetTics:
   992                           	callstack 0
   993  000064                     ?_UgetUserName:
   994                           	callstack 0
   995  000064                     ?_getArrayShowUsers:
   996                           	callstack 0
   997  000064                     SsetNovaTecla@tecla:
   998                           	callstack 0
   999  000064                     TiResetTics@Handle:
  1000                           	callstack 0
  1001  000064                     MsetNovaTecla@tecla:
  1002                           	callstack 0
  1003  000064                     MNovaLletra@lletra:
  1004                           	callstack 0
  1005  000064                     MNouJoystick@posicio:
  1006                           	callstack 0
  1007  000064                     UenviaChar@pos:
  1008                           	callstack 0
  1009  000064                     UenviaPas@pos:
  1010                           	callstack 0
  1011  000064                     escriureCharEEPROM@pos:
  1012                           	callstack 0
  1013  000064                     llegirCharEEPROM@pos:
  1014                           	callstack 0
  1015  000064                     compareStrings@a:
  1016                           	callstack 0
  1017  000064                     UgetScore@quin:
  1018                           	callstack 0
  1019  000064                     UgetTop5@quin:
  1020                           	callstack 0
  1021  000064                     UnewScore@scoretmp:
  1022                           	callstack 0
  1023  000064                     GLCDMostraMenu@num:
  1024                           	callstack 0
  1025  000064                     HActualitzaHora@nova:
  1026                           	callstack 0
  1027  000064                     JJuguem@usuari:
  1028                           	callstack 0
  1029  000064                     JnovaTecla@tecla:
  1030                           	callstack 0
  1031  000064                     JnovaDireccio@dir:
  1032                           	callstack 0
  1033  000064                     conversorJoystick@direc:
  1034                           	callstack 0
  1035  000064                     SIONovaDireccio@num:
  1036                           	callstack 0
  1037  000064                     SIOStartGame@usuari:
  1038                           	callstack 0
  1039  000064                     SIONovaTecla@tecla:
  1040                           	callstack 0
  1041  000064                     CToAConverteix@numero:
  1042                           	callstack 0
  1043  000064                     ___lbdiv@divisor:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x5
  1047  000064                     	ds	1
  1048  000065                     ??_JoystickMotor:
  1049  000065                     CantaPartAlta@c:
  1050                           	callstack 0
  1051  000065                     CantaPartBaixa@c:
  1052                           	callstack 0
  1053  000065                     EscriuPrimeraOrdre@ordre:
  1054                           	callstack 0
  1055  000065                     UenviaChar@c:
  1056                           	callstack 0
  1057  000065                     UenviaPas@c:
  1058                           	callstack 0
  1059  000065                     escriureCharEEPROM@c:
  1060                           	callstack 0
  1061  000065                     ___lbdiv@dividend:
  1062                           	callstack 0
  1063  000065                     compareStrings@b:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x6
  1067  000065                     	ds	1
  1068  000066                     ??_TiGetTics:
  1069  000066                     CantaIR@IR:
  1070                           	callstack 0
  1071  000066                     CantaData@Data:
  1072                           	callstack 0
  1073  000066                     UgetUserName@quin:
  1074                           	callstack 0
  1075  000066                     getArrayShowUsers@quin:
  1076                           	callstack 0
  1077  000066                     ___lbdiv@counter:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x7
  1081  000066                     	ds	1
  1082  000067                     ??_compareStrings:
  1083  000067                     ___lbdiv@quotient:
  1084                           	callstack 0
  1085  000067                     LcNewString@new_s:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x8
  1089  000067                     	ds	1
  1090  000068                     ??_Uinit:
  1091  000068                     TiGetTics@Handle:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x9
  1095  000068                     	ds	1
  1096  000069                     ??_UmotorUsers:
  1097  000069                     TiGetTics@actual:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0xA
  1101  000069                     	ds	1
  1102  00006A                     Uinit@k:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0xB
  1106  00006A                     	ds	1
  1107  00006B                     ??_motorHora:
  1108  00006B                     ??_motorAltaveu:
  1109  00006B                     ??_TeTeclat:
  1110  00006B                     ??_SMotor:
  1111  00006B                     WaitForBusy@Busy:
  1112                           	callstack 0
  1113  00006B                     Uinit@k_1175:
  1114                           	callstack 0
  1115  00006B                     Espera@ms:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0xC
  1119  00006B                     	ds	1
  1120  00006C                     LcGotoXY@Row:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0xD
  1124  00006C                     	ds	1
  1125  00006D                     ??_Espera:
  1126  00006D                     LcGotoXY@Fisics:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0xE
  1130  00006D                     	ds	1
  1131  00006E                     Espera@Timer:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0xF
  1135  00006E                     	ds	1
  1136  00006F                     LcInit@rows:
  1137                           	callstack 0
  1138  00006F                     _LcGotoXY$334:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x10
  1142  00006F                     	ds	1
  1143  000070                     LcInit@i:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x11
  1147  000070                     	ds	1
  1148  000071                     LcGotoXY@Column:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x12
  1152  000071                     	ds	1
  1153  000072                     ??_motorJoc:
  1154  000072                     LcPutChar@c:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x13
  1158  000072                     	ds	1
  1159  000073                     ??_GLCDMotor:
  1160  000073                     ??_motorSIO:
  1161  000073                     
  1162                           ; 1 bytes @ 0x14
  1163  000073                     	ds	2
  1164  000075                     
  1165                           ; 1 bytes @ 0x16
  1166 ;;
  1167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1168 ;;
  1169 ;; *************** function _main *****************
  1170 ;; Defined at:
  1171 ;;		line 75 in file "main.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1
  1185 ;;      Params:         0       0       0
  1186 ;;      Locals:         0       0       0
  1187 ;;      Temps:          0       0       0
  1188 ;;      Totals:         0       0       0
  1189 ;;Total ram usage:        0 bytes
  1190 ;; Hardware stack levels required when called: 7
  1191 ;; This function calls:
  1192 ;;		_CtoA
  1193 ;;		_GLCDInit
  1194 ;;		_GLCDMotor
  1195 ;;		_JoystickInit
  1196 ;;		_JoystickMotor
  1197 ;;		_LcInit
  1198 ;;		_LcLCD
  1199 ;;		_Minit
  1200 ;;		_SMotor
  1201 ;;		_Sinit
  1202 ;;		_TeInit
  1203 ;;		_TeTeclat
  1204 ;;		_TiInitTimer
  1205 ;;		_Uinit
  1206 ;;		_UmotorUsers
  1207 ;;		_initAltaveu
  1208 ;;		_initHora
  1209 ;;		_initSIO
  1210 ;;		_init_eusart
  1211 ;;		_init_ports
  1212 ;;		_menu
  1213 ;;		_motorAltaveu
  1214 ;;		_motorHora
  1215 ;;		_motorJoc
  1216 ;;		_motorSIO
  1217 ;; This function is called by:
  1218 ;;		Startup code after reset
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text0
  1223  001A46                     __ptext0:
  1224                           	callstack 0
  1225  001A46                     _main:
  1226                           	callstack 24
  1227                           
  1228                           ;main.c: 76:     init_ports();
  1229                           
  1230                           ;incstack = 0
  1231  001A46  EC75  F00F         	call	_init_ports	;wreg free
  1232                           
  1233                           ;main.c: 77:     init_eusart();
  1234  001A4A  ECC9  F00F         	call	_init_eusart	;wreg free
  1235                           
  1236                           ;main.c: 78:     TiInitTimer();
  1237  001A4E  ECD1  F00E         	call	_TiInitTimer	;wreg free
  1238                           
  1239                           ;main.c: 79:     TeInit();
  1240  001A52  EC96  F000         	call	_TeInit	;wreg free
  1241                           
  1242                           ;main.c: 80:     Sinit();
  1243  001A56  EC9A  F000         	call	_Sinit	;wreg free
  1244                           
  1245                           ;main.c: 82:     initAltaveu();
  1246  001A5A  EC8A  F000         	call	_initAltaveu	;wreg free
  1247                           
  1248                           ;main.c: 83:     GLCDInit();
  1249  001A5E  ECAA  F000         	call	_GLCDInit	;wreg free
  1250                           
  1251                           ;main.c: 84:     JoystickInit();
  1252  001A62  ECE8  F00F         	call	_JoystickInit	;wreg free
  1253                           
  1254                           ;main.c: 85:     initHora();
  1255  001A66  EC86  F000         	call	_initHora	;wreg free
  1256                           
  1257                           ;main.c: 86:     initSIO();
  1258  001A6A  EC82  F000         	call	_initSIO	;wreg free
  1259                           
  1260                           ;main.c: 88:     LcInit(2);
  1261  001A6E  0E02               	movlw	2
  1262  001A70  EC6D  F00B         	call	_LcInit
  1263                           
  1264                           ;main.c: 89:     Uinit();
  1265  001A74  EC97  F00A         	call	_Uinit	;wreg free
  1266                           
  1267                           ;main.c: 90:     Minit();
  1268  001A78  ECA2  F000         	call	_Minit	;wreg free
  1269  001A7C                     l7165:
  1270                           
  1271                           ;main.c: 92:         GLCDMotor();
  1272  001A7C  ECA2  F006         	call	_GLCDMotor	;wreg free
  1273                           
  1274                           ;main.c: 93:         motorJoc();
  1275  001A80  ECCC  F00B         	call	_motorJoc	;wreg free
  1276                           
  1277                           ;main.c: 94:         motorSIO();
  1278  001A84  EC39  F005         	call	_motorSIO	;wreg free
  1279                           
  1280                           ;main.c: 95:         motorHora();
  1281  001A88  EC67  F00C         	call	_motorHora	;wreg free
  1282                           
  1283                           ;main.c: 96:         JoystickMotor();
  1284  001A8C  EC02  F00B         	call	_JoystickMotor	;wreg free
  1285                           
  1286                           ;main.c: 97:         menu();
  1287  001A90  EC78  F001         	call	_menu	;wreg free
  1288                           
  1289                           ;main.c: 98:         CtoA();
  1290  001A94  EC41  F00F         	call	_CtoA	;wreg free
  1291                           
  1292                           ;main.c: 99:         motorAltaveu();
  1293  001A98  EC1E  F00C         	call	_motorAltaveu	;wreg free
  1294                           
  1295                           ;main.c: 100:         UmotorUsers();
  1296  001A9C  ECEE  F007         	call	_UmotorUsers	;wreg free
  1297                           
  1298                           ;main.c: 102:         TeTeclat();
  1299  001AA0  ECFA  F009         	call	_TeTeclat	;wreg free
  1300                           
  1301                           ;main.c: 103:         SMotor();
  1302  001AA4  EC23  F009         	call	_SMotor	;wreg free
  1303                           
  1304                           ;main.c: 104:         LcLCD();
  1305  001AA8  ECBD  F00D         	call	_LcLCD	;wreg free
  1306  001AAC  D7E7               	goto	l7165
  1307  001AAE                     __end_of_main:
  1308                           	callstack 0
  1309                           
  1310 ;; *************** function _motorSIO *****************
  1311 ;; Defined at:
  1312 ;;		line 50 in file "SIO.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1
  1326 ;;      Params:         0       0       0
  1327 ;;      Locals:         0       0       0
  1328 ;;      Temps:          2       0       0
  1329 ;;      Totals:         2       0       0
  1330 ;;Total ram usage:        2 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; Hardware stack levels required when called: 6
  1333 ;; This function calls:
  1334 ;;		_CToAConverteix
  1335 ;;		_CToAHaAcabat
  1336 ;;		_CToAobtenir
  1337 ;;		_HGetTime
  1338 ;;		_LcClear
  1339 ;;		_LcGotoXY
  1340 ;;		_LcLliure
  1341 ;;		_LcNewString
  1342 ;;		_LcPutChar
  1343 ;;		_TiGetTics
  1344 ;;		_TiResetTics
  1345 ;;		_UgetUserName
  1346 ;;		_UnewScore
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text1
  1353  000A72                     __ptext1:
  1354                           	callstack 0
  1355  000A72                     _motorSIO:
  1356                           	callstack 24
  1357                           
  1358                           ;SIO.c: 51:     static char state = 0;;SIO.c: 53:  switch(state) {
  1359                           
  1360                           ;incstack = 0
  1361  000A72  D124               	goto	l5275
  1362  000A74                     l5099:
  1363                           
  1364                           ;SIO.c: 55:    if (usuariActualSIO > -1) {
  1365  000A74  BE4A               	btfsc	_usuariActualSIO^0,7,c
  1366  000A76  0012               	return	
  1367                           
  1368                           ;SIO.c: 56:     userPtr = UgetUserName(usuariActualSIO);
  1369  000A78  504A               	movf	_usuariActualSIO^0,w,c
  1370  000A7A  ECD4  F00F         	call	_UgetUserName
  1371  000A7E  C064  F007         	movff	?_UgetUserName,_userPtr
  1372  000A82  C065  F008         	movff	?_UgetUserName+1,_userPtr+1
  1373                           
  1374                           ;SIO.c: 57:     jugantSIO = 1;
  1375  000A86  8475               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1376                           
  1377                           ;SIO.c: 58:     Krebut = 0;
  1378  000A88  9275               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1379  000A8A                     l5107:
  1380                           
  1381                           ;SIO.c: 59:     state++;
  1382  000A8A  2A0D               	incf	motorSIO@state^0,f,c
  1383                           
  1384                           ;SIO.c: 61:   break;
  1385                           
  1386                           ;SIO.c: 60:    }
  1387  000A8C  0012               	return	
  1388  000A8E                     l5109:
  1389                           
  1390                           ;SIO.c: 63:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1391  000A8E  D93E               	call	PL26	;call to abstracted procedure
  1392  000A90  E104               	bnz	l5117
  1393  000A92  A2AC               	btfss	172,1,c	;volatile
  1394  000A94  D002               	goto	l5117
  1395                           
  1396                           ;SIO.c: 64:     TXREG = '\0';
  1397  000A96  6AAD               	clrf	173,c	;volatile
  1398  000A98  D032               	goto	l5153
  1399  000A9A                     l5117:
  1400  000A9A  D938               	call	PL26	;call to abstracted procedure
  1401  000A9C  A4D8               	btfss	status,2,c
  1402  000A9E  A2AC               	btfss	172,1,c	;volatile
  1403  000AA0  0012               	return	
  1404                           
  1405                           ;SIO.c: 69:     TXREG = *userPtr;
  1406  000AA2  D934               	call	PL26	;call to abstracted procedure
  1407  000AA4  6EAD               	movwf	173,c	;volatile
  1408                           
  1409                           ;SIO.c: 70:     userPtr++;
  1410  000AA6  4A07               	infsnz	_userPtr^0,f,c
  1411  000AA8  2A08               	incf	(_userPtr+1)^0,f,c
  1412  000AAA  0012               	return	
  1413  000AAC                     l5125:
  1414                           
  1415                           ;SIO.c: 74:    if (RCREG == 'K') {
  1416  000AAC  0E4B               	movlw	75
  1417  000AAE  18AE               	xorwf	174,w,c
  1418  000AB0  A4D8               	btfss	status,2,c
  1419  000AB2  0012               	return	
  1420                           
  1421                           ;SIO.c: 75:     Krebut = 1;
  1422  000AB4  8275               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1423  000AB6  D7E9               	goto	l5107
  1424  000AB8                     l5131:
  1425                           
  1426                           ;SIO.c: 80:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1427  000AB8  2849               	incf	_direccioSIO^0,w,c
  1428  000ABA  E006               	bz	l5137
  1429  000ABC  A2AC               	btfss	172,1,c	;volatile
  1430  000ABE  D004               	goto	l5137
  1431                           
  1432                           ;SIO.c: 81:     TXREG = direccioSIO;
  1433  000AC0  C049  FFAD         	movff	_direccioSIO,4013	;volatile
  1434                           
  1435                           ;SIO.c: 82:     direccioSIO = -1;
  1436  000AC4  6849               	setf	_direccioSIO^0,c
  1437                           
  1438                           ;SIO.c: 84:    }
  1439  000AC6  0012               	return	
  1440  000AC8                     l5137:
  1441  000AC8  0E30               	movlw	48
  1442  000ACA  6448               	cpfsgt	_novaTeclaSIO^0,c
  1443  000ACC  D009               	goto	l1281
  1444  000ACE  0E3A               	movlw	58
  1445  000AD0  6048               	cpfslt	_novaTeclaSIO^0,c
  1446  000AD2  D006               	goto	l1281
  1447  000AD4  A2AC               	btfss	172,1,c	;volatile
  1448  000AD6  D004               	goto	l1281
  1449                           
  1450                           ;SIO.c: 86:     TXREG = novaTeclaSIO;
  1451  000AD8  C048  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1452                           
  1453                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1454  000ADC  6A48               	clrf	_novaTeclaSIO^0,c
  1455                           
  1456                           ;SIO.c: 89:    }
  1457  000ADE  0012               	return	
  1458  000AE0                     l1281:
  1459  000AE0  B475               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1460  000AE2  D002               	goto	u4790
  1461  000AE4  B2AC               	btfsc	172,1,c	;volatile
  1462  000AE6  D002               	goto	u4800
  1463  000AE8                     u4790:
  1464  000AE8  AA9E               	btfss	158,5,c	;volatile
  1465  000AEA  D00B               	goto	l1283
  1466  000AEC                     u4800:
  1467                           
  1468                           ;SIO.c: 91:     LcClear();
  1469  000AEC  EC53  F00F         	call	_LcClear	;wreg free
  1470                           
  1471                           ;SIO.c: 92:     LcNewString("ERRORS:");
  1472  000AF0  0ED8               	movlw	low STR_6
  1473  000AF2  EC12  F005         	call	PL10	;call to abstracted procedure
  1474  000AF6  EC55  F000         	call	_LcNewString	;wreg free
  1475                           
  1476                           ;SIO.c: 93:     TXREG = 'F';
  1477  000AFA  0E46               	movlw	70
  1478  000AFC  6EAD               	movwf	173,c	;volatile
  1479  000AFE                     l5153:
  1480                           
  1481                           ;SIO.c: 94:     novaTeclaSIO = 0;
  1482  000AFE  6A48               	clrf	_novaTeclaSIO^0,c
  1483  000B00  D7C4               	goto	l5107
  1484  000B02                     l1283:
  1485  000B02  A075               	btfss	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1486  000B04  0012               	return	
  1487                           
  1488                           ;SIO.c: 98:     horaTX[0] = HGetTime()[0];
  1489  000B06  ECC0  F000         	call	_HGetTime	;wreg free
  1490  000B0A  6ED9               	movwf	fsr2l,c
  1491  000B0C  6ADA               	clrf	fsr2h,c
  1492  000B0E  50DF               	movf	indf2,w,c
  1493  000B10  6E01               	movwf	_horaTX^0,c
  1494                           
  1495                           ;SIO.c: 99:                 horaTX[1] = HGetTime()[1];
  1496  000B12  ECC0  F000         	call	_HGetTime	;wreg free
  1497  000B16  D911               	call	PL68	;call to abstracted procedure
  1498  000B18  6E02               	movwf	(_horaTX+1)^0,c
  1499                           
  1500                           ;SIO.c: 100:                 horaTX[2] = HGetTime()[2];
  1501  000B1A  ECC0  F000         	call	_HGetTime	;wreg free
  1502  000B1E  D8FC               	call	PL50	;call to abstracted procedure
  1503  000B20  6E03               	movwf	(_horaTX+2)^0,c
  1504                           
  1505                           ;SIO.c: 101:                 horaTX[3] = HGetTime()[3];
  1506  000B22  ECC0  F000         	call	_HGetTime	;wreg free
  1507  000B26  D8FE               	call	PL52	;call to abstracted procedure
  1508  000B28  6E04               	movwf	(_horaTX+3)^0,c
  1509                           
  1510                           ;SIO.c: 102:                 horaTX[4] = HGetTime()[4];
  1511  000B2A  ECC0  F000         	call	_HGetTime	;wreg free
  1512  000B2E  6ED9               	movwf	fsr2l,c
  1513  000B30  6ADA               	clrf	fsr2h,c
  1514  000B32  0E04               	movlw	4
  1515  000B34  26D9               	addwf	fsr2l,f,c
  1516  000B36  50DF               	movf	indf2,w,c
  1517  000B38  6E05               	movwf	(_horaTX+4)^0,c
  1518                           
  1519                           ;SIO.c: 103:     horaTX[5] = newLineChar;
  1520  000B3A  0E0D               	movlw	13
  1521  000B3C  6E06               	movwf	(_horaTX+5)^0,c
  1522                           
  1523                           ;SIO.c: 104:     mask = 1;
  1524  000B3E  0E01               	movlw	1
  1525  000B40  6E0E               	movwf	_mask^0,c
  1526                           
  1527                           ;SIO.c: 105:     TiResetTics(timerSIO);
  1528  000B42  5011               	movf	_timerSIO^0,w,c
  1529  000B44  ECA0  F00F         	call	_TiResetTics
  1530                           
  1531                           ;SIO.c: 106:     charActu = 0;
  1532  000B48  6A0F               	clrf	_charActu^0,c
  1533                           
  1534                           ;SIO.c: 107:     state = 10;
  1535  000B4A  0E0A               	movlw	10
  1536  000B4C  6E0D               	movwf	motorSIO@state^0,c
  1537  000B4E  0C0A               	retlw	10
  1538  000B50                     l1290:
  1539                           
  1540                           ;SIO.c: 111:    if (PIR1bits.RCIF) {
  1541  000B50  AA9E               	btfss	158,5,c	;volatile
  1542  000B52  0012               	return	
  1543                           
  1544                           ;SIO.c: 112:     score = RCREG;
  1545  000B54  CFAE F010          	movff	4014,_score	;volatile
  1546                           
  1547                           ;SIO.c: 113:     UnewScore(score);
  1548  000B58  5010               	movf	_score^0,w,c
  1549  000B5A  EC61  F000         	call	_UnewScore
  1550                           
  1551                           ;SIO.c: 114:     CToAConverteix(score);
  1552  000B5E  5010               	movf	_score^0,w,c
  1553  000B60  EC4F  F000         	call	_CToAConverteix
  1554                           
  1555                           ;SIO.c: 115:     TiResetTics(timerSIO);
  1556  000B64  5011               	movf	_timerSIO^0,w,c
  1557  000B66  ECA0  F00F         	call	_TiResetTics
  1558  000B6A  D78F               	goto	l5107
  1559  000B6C                     l5185:
  1560                           
  1561                           ;SIO.c: 120:    if (TiGetTics(timerSIO) > 2490) {
  1562  000B6C  5011               	movf	_timerSIO^0,w,c
  1563  000B6E  ECF8  F00E         	call	_TiGetTics
  1564  000B72  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1565  000B74  D00F               	goto	l5193
  1566  000B76  0EBB               	movlw	187
  1567  000B78  5C64               	subwf	?_TiGetTics^0,w,c
  1568  000B7A  0E09               	movlw	9
  1569  000B7C  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1570  000B7E  E30A               	bnc	l5193
  1571                           
  1572                           ;SIO.c: 121:     LcClear();
  1573  000B80  EC53  F00F         	call	_LcClear	;wreg free
  1574                           
  1575                           ;SIO.c: 122:     LcNewString("TIME LEFT: ");
  1576  000B84  0EBB               	movlw	low STR_7
  1577  000B86  EC12  F005         	call	PL10	;call to abstracted procedure
  1578  000B8A  EC55  F000         	call	_LcNewString	;wreg free
  1579                           
  1580                           ;SIO.c: 123:     state = 7;
  1581  000B8E  0E07               	movlw	7
  1582  000B90  6E0D               	movwf	motorSIO@state^0,c
  1583                           
  1584                           ;SIO.c: 124:    }
  1585  000B92  0C07               	retlw	7
  1586  000B94                     l5193:
  1587  000B94  5011               	movf	_timerSIO^0,w,c
  1588  000B96  ECF8  F00E         	call	_TiGetTics
  1589  000B9A  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1590  000B9C  D006               	goto	u4840
  1591  000B9E  0EBA               	movlw	186
  1592  000BA0  5C64               	subwf	?_TiGetTics^0,w,c
  1593  000BA2  0E09               	movlw	9
  1594  000BA4  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1595  000BA6  B0D8               	btfsc	status,0,c
  1596  000BA8  0012               	return	
  1597  000BAA                     u4840:
  1598  000BAA  AA9E               	btfss	158,5,c	;volatile
  1599  000BAC  0012               	return	
  1600  000BAE  EC5B  F000         	call	_LcLliure	;wreg free
  1601  000BB2  A0D8               	btfss	status,0,c
  1602  000BB4  0012               	return	
  1603                           
  1604                           ;SIO.c: 126:     LcGotoXY(0,1);
  1605  000BB6  EC1D  F005         	call	PL34	;call to abstracted procedure
  1606  000BBA  ECA1  F00E         	call	_LcGotoXY
  1607                           
  1608                           ;SIO.c: 127:     LcPutChar(RCREG);
  1609  000BBE  50AE               	movf	174,w,c	;volatile
  1610  000BC0  ECE5  F00D         	call	_LcPutChar
  1611  000BC4  D762               	goto	l5107
  1612  000BC6                     l5203:
  1613                           
  1614                           ;SIO.c: 132:    if (LcLliure()) {
  1615  000BC6  EC5B  F000         	call	_LcLliure	;wreg free
  1616  000BCA  A0D8               	btfss	status,0,c
  1617  000BCC  0012               	return	
  1618                           
  1619                           ;SIO.c: 133:     LcNewString(HGetTime());
  1620  000BCE  ECC0  F000         	call	_HGetTime	;wreg free
  1621  000BD2  D8AE               	call	PL56	;call to abstracted procedure
  1622  000BD4  EC55  F000         	call	_LcNewString	;wreg free
  1623  000BD8  D758               	goto	l5107
  1624  000BDA                     l1298:
  1625                           
  1626                           ;SIO.c: 138:    if (PIR1bits.RCIF) {
  1627  000BDA  AA9E               	btfss	158,5,c	;volatile
  1628  000BDC  0012               	return	
  1629                           
  1630                           ;SIO.c: 139:     LcPutChar(RCREG);
  1631  000BDE  50AE               	movf	174,w,c	;volatile
  1632  000BE0  ECE5  F00D         	call	_LcPutChar
  1633                           
  1634                           ;SIO.c: 140:     TiResetTics(timerSIO);
  1635  000BE4  5011               	movf	_timerSIO^0,w,c
  1636  000BE6  ECA0  F00F         	call	_TiResetTics
  1637  000BEA                     l5211:
  1638                           
  1639                           ;SIO.c: 141:     state--;
  1640  000BEA  060D               	decf	motorSIO@state^0,f,c
  1641  000BEC  0012               	return	
  1642  000BEE                     l5213:
  1643                           
  1644                           ;SIO.c: 145:    if (LcLliure()) {
  1645  000BEE  EC5B  F000         	call	_LcLliure	;wreg free
  1646  000BF2  A0D8               	btfss	status,0,c
  1647  000BF4  0012               	return	
  1648                           
  1649                           ;SIO.c: 146:     LcGotoXY(0,1);
  1650  000BF6  EC1D  F005         	call	PL34	;call to abstracted procedure
  1651  000BFA  ECA1  F00E         	call	_LcGotoXY
  1652                           
  1653                           ;SIO.c: 147:     LcNewString("SCORE: ");
  1654  000BFE  0ED0               	movlw	low STR_8
  1655  000C00  EC12  F005         	call	PL10	;call to abstracted procedure
  1656  000C04  EC55  F000         	call	_LcNewString	;wreg free
  1657  000C08  D740               	goto	l5107
  1658  000C0A                     l5221:
  1659                           
  1660                           ;SIO.c: 152:    if (LcLliure() && CToAHaAcabat() == 250) {
  1661  000C0A  EC5B  F000         	call	_LcLliure	;wreg free
  1662  000C0E  A0D8               	btfss	status,0,c
  1663  000C10  0012               	return	
  1664  000C12  ECDA  F000         	call	_CToAHaAcabat	;wreg free
  1665  000C16  0AFA               	xorlw	250
  1666  000C18  A4D8               	btfss	status,2,c
  1667  000C1A  0012               	return	
  1668                           
  1669                           ;SIO.c: 153:     LcNewString(CToAobtenir());
  1670  000C1C  ECD8  F000         	call	_CToAobtenir	;wreg free
  1671  000C20  D887               	call	PL56	;call to abstracted procedure
  1672  000C22  EC55  F000         	call	_LcNewString	;wreg free
  1673                           
  1674                           ;SIO.c: 154:     usuariActualSIO = -1;
  1675  000C26  684A               	setf	_usuariActualSIO^0,c
  1676                           
  1677                           ;SIO.c: 155:     state = 0;
  1678  000C28  6A0D               	clrf	motorSIO@state^0,c
  1679  000C2A  0012               	return	
  1680  000C2C                     l5231:
  1681                           
  1682                           ;SIO.c: 159:    if (charActu == 6) {
  1683  000C2C  0E06               	movlw	6
  1684  000C2E  180F               	xorwf	_charActu^0,w,c
  1685  000C30  E104               	bnz	l5237
  1686                           
  1687                           ;SIO.c: 160:     hi_ha_hora_sio2 = 0;
  1688  000C32  9075               	bcf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  1689                           
  1690                           ;SIO.c: 161:     state = 3;
  1691  000C34  0E03               	movlw	3
  1692  000C36  6E0D               	movwf	motorSIO@state^0,c
  1693                           
  1694                           ;SIO.c: 162:    }
  1695  000C38  0C03               	retlw	3
  1696  000C3A                     l5237:
  1697  000C3A  0E06               	movlw	6
  1698  000C3C  600F               	cpfslt	_charActu^0,c
  1699  000C3E  0C06               	retlw	6
  1700  000C40  5011               	movf	_timerSIO^0,w,c
  1701  000C42  ECF8  F00E         	call	_TiGetTics
  1702  000C46  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1703  000C48  0012               	return	
  1704  000C4A  5065               	movf	(?_TiGetTics+1)^0,w,c
  1705  000C4C  E103               	bnz	u4940
  1706  000C4E  0464               	decf	?_TiGetTics^0,w,c
  1707  000C50  A0D8               	btfss	status,0,c
  1708  000C52  0012               	return	
  1709  000C54                     u4940:
  1710                           
  1711                           ;SIO.c: 164:     LATBbits.LATB1 = 0;
  1712  000C54  928A               	bcf	138,1,c	;volatile
  1713                           
  1714                           ;SIO.c: 165:     TiResetTics(timerSIO);
  1715  000C56  5011               	movf	_timerSIO^0,w,c
  1716  000C58  ECA0  F00F         	call	_TiResetTics
  1717  000C5C  D716               	goto	l5107
  1718  000C5E                     l5247:
  1719                           
  1720                           ;SIO.c: 171:    if (mask < 1 && TiGetTics(timerSIO) > 0) {
  1721  000C5E  500E               	movf	_mask^0,w,c
  1722  000C60  E111               	bnz	l5261
  1723  000C62  5011               	movf	_timerSIO^0,w,c
  1724  000C64  ECF8  F00E         	call	_TiGetTics
  1725  000C68  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1726  000C6A  D00C               	goto	l5261
  1727  000C6C  5065               	movf	(?_TiGetTics+1)^0,w,c
  1728  000C6E  E102               	bnz	u4960
  1729  000C70  0464               	decf	?_TiGetTics^0,w,c
  1730  000C72  E308               	bnc	l5261
  1731  000C74                     u4960:
  1732                           
  1733                           ;SIO.c: 172:     mask = 1;
  1734  000C74  0E01               	movlw	1
  1735  000C76  6E0E               	movwf	_mask^0,c
  1736                           
  1737                           ;SIO.c: 173:     charActu++;
  1738  000C78  2A0F               	incf	_charActu^0,f,c
  1739                           
  1740                           ;SIO.c: 174:     LATBbits.LATB1 = 1;
  1741  000C7A  828A               	bsf	138,1,c	;volatile
  1742                           
  1743                           ;SIO.c: 175:     TiResetTics(timerSIO);
  1744  000C7C  5011               	movf	_timerSIO^0,w,c
  1745  000C7E  ECA0  F00F         	call	_TiResetTics
  1746  000C82  D7B3               	goto	l5211
  1747  000C84                     l5261:
  1748  000C84  5011               	movf	_timerSIO^0,w,c
  1749  000C86  ECF8  F00E         	call	_TiGetTics
  1750  000C8A  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1751  000C8C  0012               	return	
  1752  000C8E  5065               	movf	(?_TiGetTics+1)^0,w,c
  1753  000C90  E103               	bnz	u4970
  1754  000C92  0464               	decf	?_TiGetTics^0,w,c
  1755  000C94  A0D8               	btfss	status,0,c
  1756  000C96  0012               	return	
  1757  000C98                     u4970:
  1758  000C98  500E               	movf	_mask^0,w,c
  1759  000C9A  B4D8               	btfsc	status,2,c
  1760  000C9C  0012               	return	
  1761                           
  1762                           ;SIO.c: 179:     if(mask & horaTX[charActu]){
  1763  000C9E  500F               	movf	_charActu^0,w,c
  1764  000CA0  0F01               	addlw	low _horaTX
  1765  000CA2  6ED9               	movwf	fsr2l,c
  1766  000CA4  6ADA               	clrf	fsr2h,c
  1767  000CA6  50DF               	movf	indf2,w,c
  1768  000CA8  140E               	andwf	_mask^0,w,c
  1769  000CAA  E002               	bz	l1312
  1770                           
  1771                           ;SIO.c: 180:        LATBbits.LATB1 = 1;
  1772  000CAC  828A               	bsf	138,1,c	;volatile
  1773                           
  1774                           ;SIO.c: 181:       }else{
  1775  000CAE  D001               	goto	l5269
  1776  000CB0                     l1312:
  1777                           
  1778                           ;SIO.c: 182:        LATBbits.LATB1 = 0;
  1779  000CB0  928A               	bcf	138,1,c	;volatile
  1780  000CB2                     l5269:
  1781                           
  1782                           ;SIO.c: 184:       mask = mask<<1;
  1783  000CB2  90D8               	bcf	status,0,c
  1784  000CB4  360E               	rlcf	_mask^0,f,c
  1785                           
  1786                           ;SIO.c: 185:     TiResetTics(timerSIO);
  1787  000CB6  5011               	movf	_timerSIO^0,w,c
  1788  000CB8  EFA0  F00F         	goto	_TiResetTics
  1789  000CBC                     l5275:
  1790  000CBC  500D               	movf	motorSIO@state^0,w,c
  1791  000CBE  6E73               	movwf	??_motorSIO^0,c
  1792  000CC0  6A74               	clrf	(??_motorSIO+1)^0,c
  1793                           
  1794                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1795                           ; Switch size 1, requested type "space"
  1796                           ; Number of cases is 1, Range of values is 0 to 0
  1797                           ; switch strategies available:
  1798                           ; Name         Instructions Cycles
  1799                           ; simple_byte            4     3 (average)
  1800                           ;	Chosen strategy is simple_byte
  1801  000CC2  5074               	movf	(??_motorSIO+1)^0,w,c
  1802  000CC4  A4D8               	btfss	status,2,c
  1803  000CC6  0012               	return	
  1804                           
  1805                           ; Switch size 1, requested type "space"
  1806                           ; Number of cases is 12, Range of values is 0 to 11
  1807                           ; switch strategies available:
  1808                           ; Name         Instructions Cycles
  1809                           ; simple_byte           37    19 (average)
  1810                           ;	Chosen strategy is simple_byte
  1811  000CC8  5073               	movf	??_motorSIO^0,w,c
  1812  000CCA  E101 D6D3          	bz	l5099
  1813  000CCE  0A01               	xorlw	1	; case 1
  1814  000CD0  E101 D6DD          	bz	l5109
  1815  000CD4  0A03               	xorlw	3	; case 2
  1816  000CD6  E101 D6E9          	bz	l5125
  1817  000CDA  0A01               	xorlw	1	; case 3
  1818  000CDC  E101 D6EC          	bz	l5131
  1819  000CE0  0A07               	xorlw	7	; case 4
  1820  000CE2  E101 D735          	bz	l1290
  1821  000CE6  0A01               	xorlw	1	; case 5
  1822  000CE8  E101 D740          	bz	l5185
  1823  000CEC  0A03               	xorlw	3	; case 6
  1824  000CEE  E101 D774          	bz	l1298
  1825  000CF2  0A01               	xorlw	1	; case 7
  1826  000CF4  E101 D767          	bz	l5203
  1827  000CF8  0A0F               	xorlw	15	; case 8
  1828  000CFA  E101 D778          	bz	l5213
  1829  000CFE  0A01               	xorlw	1	; case 9
  1830  000D00  E084               	bz	l5221
  1831  000D02  0A03               	xorlw	3	; case 10
  1832  000D04  E093               	bz	l5231
  1833  000D06  0A01               	xorlw	1	; case 11
  1834  000D08  E0AA               	bz	l5247
  1835  000D0A  0012               	return		;funcret
  1836  000D0C                     __end_of_motorSIO:
  1837                           	callstack 0
  1838  000D0C                     PL26:
  1839                           	callstack 24
  1840  000D0C  C007  FFD9         	movff	_userPtr,fsr2l
  1841  000D10  C008  FFDA         	movff	_userPtr+1,fsr2h
  1842  000D14  50DF               	movf	indf2,w,c
  1843  000D16  0012               	return	
  1844  000D18                     __end_ofPL26:
  1845                           	callstack 0
  1846  000D18                     PL50:
  1847                           	callstack 27
  1848  000D18  6ED9               	movwf	fsr2l,c
  1849  000D1A  6ADA               	clrf	fsr2h,c
  1850  000D1C  0E02               	movlw	2
  1851  000D1E  26D9               	addwf	fsr2l,f,c
  1852  000D20  50DF               	movf	indf2,w,c
  1853  000D22  0012               	return	
  1854  000D24                     __end_ofPL50:
  1855                           	callstack 0
  1856  000D24                     PL52:
  1857                           	callstack 27
  1858  000D24  6ED9               	movwf	fsr2l,c
  1859  000D26  6ADA               	clrf	fsr2h,c
  1860  000D28  0E03               	movlw	3
  1861  000D2A  26D9               	addwf	fsr2l,f,c
  1862  000D2C  50DF               	movf	indf2,w,c
  1863  000D2E  0012               	return	
  1864  000D30                     __end_ofPL52:
  1865                           	callstack 0
  1866  000D30                     PL56:
  1867                           	callstack 24
  1868  000D30  6E73               	movwf	??_motorSIO^0,c
  1869  000D32  C073  F067         	movff	??_motorSIO,LcNewString@new_s
  1870  000D36  6A68               	clrf	(LcNewString@new_s+1)^0,c
  1871  000D38  0012               	return	
  1872  000D3A                     __end_ofPL56:
  1873                           	callstack 0
  1874  000D3A                     PL68:
  1875                           	callstack 27
  1876  000D3A  6ED9               	movwf	fsr2l,c
  1877  000D3C  6ADA               	clrf	fsr2h,c
  1878  000D3E  2AD9               	incf	fsr2l,f,c
  1879  000D40  50DF               	movf	indf2,w,c
  1880  000D42  0012               	return	
  1881  000D44                     __end_ofPL68:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _UnewScore *****************
  1885 ;; Defined at:
  1886 ;;		line 292 in file "Usuaris.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  scoretmp        1    wreg     unsigned char 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1
  1900 ;;      Params:         0       0       0
  1901 ;;      Locals:         1       0       0
  1902 ;;      Temps:          0       0       0
  1903 ;;      Totals:         1       0       0
  1904 ;;Total ram usage:        1 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 2
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_motorSIO
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text2
  1915  0000C2                     __ptext2:
  1916                           	callstack 0
  1917  0000C2                     _UnewScore:
  1918                           	callstack 27
  1919                           
  1920                           ;incstack = 0
  1921                           ;UnewScore@scoretmp stored from wreg
  1922  0000C2  6E64               	movwf	UnewScore@scoretmp^0,c
  1923                           
  1924                           ;Usuaris.c: 293:     scoreUsr = scoretmp;
  1925  0000C4  C064  F028         	movff	UnewScore@scoretmp,_scoreUsr
  1926                           
  1927                           ;Usuaris.c: 294:     do_updateScore = 1;
  1928  0000C8  8876               	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1929  0000CA  0012               	return		;funcret
  1930  0000CC                     __end_of_UnewScore:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _motorJoc *****************
  1934 ;; Defined at:
  1935 ;;		line 44 in file "Joc.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1
  1949 ;;      Params:         0       0       0
  1950 ;;      Locals:         0       0       0
  1951 ;;      Temps:          2       0       0
  1952 ;;      Totals:         2       0       0
  1953 ;;Total ram usage:        2 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 5
  1956 ;; This function calls:
  1957 ;;		_HClearNouSegon
  1958 ;;		_HGetTime
  1959 ;;		_HJugant
  1960 ;;		_HNouSegon
  1961 ;;		_HnoJugant
  1962 ;;		_LcGotoXY
  1963 ;;		_LcLliure
  1964 ;;		_LcNewString
  1965 ;;		_SIOEnviaHora
  1966 ;;		_SIONovaDireccio
  1967 ;;		_SIONovaTecla
  1968 ;;		_SIOStartGame
  1969 ;;		_SIOcheckKrebut
  1970 ;;		_SIOendGame
  1971 ;;		_conversorJoystick
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text3
  1978  001798                     __ptext3:
  1979                           	callstack 0
  1980  001798                     _motorJoc:
  1981                           	callstack 25
  1982                           
  1983                           ;Joc.c: 45:     static char state = 0;;Joc.c: 47:  switch(state) {
  1984                           
  1985                           ;incstack = 0
  1986  001798  D044               	goto	l5091
  1987  00179A                     l5045:
  1988                           
  1989                           ;Joc.c: 49:    if (usuariJoc != -1) {
  1990  00179A  284C               	incf	_usuariJoc^0,w,c
  1991  00179C  B4D8               	btfsc	status,2,c
  1992  00179E  0012               	return	
  1993                           
  1994                           ;Joc.c: 50:     SIOStartGame(usuariJoc);
  1995  0017A0  504C               	movf	_usuariJoc^0,w,c
  1996  0017A2  EC66  F000         	call	_SIOStartGame
  1997                           
  1998                           ;Joc.c: 51:     jugantJoc = 1;
  1999  0017A6  8675               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2000                           
  2001                           ;Joc.c: 52:     state = 2;
  2002  0017A8  0E02               	movlw	2
  2003  0017AA  6E12               	movwf	motorJoc@state^0,c
  2004                           
  2005                           ;Joc.c: 54:   break;
  2006                           
  2007                           ;Joc.c: 53:    }
  2008  0017AC  0C02               	retlw	2
  2009  0017AE                     l1161:
  2010                           
  2011                           ;Joc.c: 56:    if (!jugantJoc) {
  2012  0017AE  B675               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2013  0017B0  D007               	goto	l5059
  2014                           
  2015                           ;Joc.c: 57:     usuariJoc = -1;
  2016  0017B2  684C               	setf	_usuariJoc^0,c
  2017                           
  2018                           ;Joc.c: 58:     HnoJugant();
  2019  0017B4  ECBE  F000         	call	_HnoJugant	;wreg free
  2020                           
  2021                           ;Joc.c: 59:     SIOendGame();
  2022  0017B8  ECBA  F000         	call	_SIOendGame	;wreg free
  2023  0017BC                     l5057:
  2024                           
  2025                           ;Joc.c: 61:     state--;
  2026  0017BC  0612               	decf	motorJoc@state^0,f,c
  2027                           
  2028                           ;Joc.c: 62:    }
  2029  0017BE  0012               	return	
  2030  0017C0                     l5059:
  2031  0017C0  BE13               	btfsc	_direccioJoc^0,7,c
  2032  0017C2  D007               	goto	l5065
  2033                           
  2034                           ;Joc.c: 64:     SIONovaDireccio(conversorJoystick(direccioJoc));
  2035  0017C4  5013               	movf	_direccioJoc^0,w,c
  2036  0017C6  EC0B  F00F         	call	_conversorJoystick
  2037  0017CA  EC6E  F000         	call	_SIONovaDireccio
  2038                           
  2039                           ;Joc.c: 65:     direccioJoc = -1;
  2040  0017CE  6813               	setf	_direccioJoc^0,c
  2041                           
  2042                           ;Joc.c: 66:    }
  2043  0017D0  0012               	return	
  2044  0017D2                     l5065:
  2045  0017D2  EC31  F000         	call	_HNouSegon	;wreg free
  2046  0017D6  E313               	bnc	l5077
  2047  0017D8  EC5B  F000         	call	_LcLliure	;wreg free
  2048  0017DC  E310               	bnc	l5077
  2049                           
  2050                           ;Joc.c: 68:     HClearNouSegon();
  2051  0017DE  ECC2  F000         	call	_HClearNouSegon	;wreg free
  2052                           
  2053                           ;Joc.c: 69:     LcGotoXY(0,1);
  2054  0017E2  EC1D  F005         	call	PL34	;call to abstracted procedure
  2055  0017E6  ECA1  F00E         	call	_LcGotoXY
  2056                           
  2057                           ;Joc.c: 70:     LcNewString(HGetTime());
  2058  0017EA  ECC0  F000         	call	_HGetTime	;wreg free
  2059  0017EE  6E72               	movwf	??_motorJoc^0,c
  2060  0017F0  C072  F067         	movff	??_motorJoc,LcNewString@new_s
  2061  0017F4  6A68               	clrf	(LcNewString@new_s+1)^0,c
  2062  0017F6  EC55  F000         	call	_LcNewString	;wreg free
  2063                           
  2064                           ;Joc.c: 71:                 SIOEnviaHora();
  2065  0017FA  EFBC  F000         	goto	_SIOEnviaHora	;wreg free
  2066  0017FE                     l5077:
  2067  0017FE  504B               	movf	_novaTeclaJOC^0,w,c
  2068  001800  0A80               	xorlw	128
  2069  001802  0F7F               	addlw	-129
  2070  001804  A0D8               	btfss	status,0,c
  2071  001806  0012               	return	
  2072                           
  2073                           ;Joc.c: 75:     SIONovaTecla(novaTeclaJOC+48);
  2074  001808  504B               	movf	_novaTeclaJOC^0,w,c
  2075  00180A  0F30               	addlw	48
  2076  00180C  EC6A  F000         	call	_SIONovaTecla
  2077                           
  2078                           ;Joc.c: 76:     novaTeclaJOC = -1;
  2079  001810  684B               	setf	_novaTeclaJOC^0,c
  2080  001812  0012               	return	
  2081  001814                     l5083:
  2082                           
  2083                           ;Joc.c: 80:    if (SIOcheckKrebut()) {
  2084  001814  EC2B  F000         	call	_SIOcheckKrebut	;wreg free
  2085  001818  A0D8               	btfss	status,0,c
  2086  00181A  0012               	return	
  2087                           
  2088                           ;Joc.c: 81:     HJugant();
  2089  00181C  ECAE  F000         	call	_HJugant	;wreg free
  2090  001820  D7CD               	goto	l5057
  2091  001822                     l5091:
  2092  001822  5012               	movf	motorJoc@state^0,w,c
  2093  001824  6E72               	movwf	??_motorJoc^0,c
  2094  001826  6A73               	clrf	(??_motorJoc+1)^0,c
  2095                           
  2096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2097                           ; Switch size 1, requested type "space"
  2098                           ; Number of cases is 1, Range of values is 0 to 0
  2099                           ; switch strategies available:
  2100                           ; Name         Instructions Cycles
  2101                           ; simple_byte            4     3 (average)
  2102                           ;	Chosen strategy is simple_byte
  2103  001828  5073               	movf	(??_motorJoc+1)^0,w,c
  2104  00182A  A4D8               	btfss	status,2,c
  2105  00182C  0012               	return	
  2106                           
  2107                           ; Switch size 1, requested type "space"
  2108                           ; Number of cases is 3, Range of values is 0 to 2
  2109                           ; switch strategies available:
  2110                           ; Name         Instructions Cycles
  2111                           ; simple_byte           10     6 (average)
  2112                           ;	Chosen strategy is simple_byte
  2113  00182E  5072               	movf	??_motorJoc^0,w,c
  2114  001830  E0B4               	bz	l5045
  2115  001832  0A01               	xorlw	1	; case 1
  2116  001834  E0BC               	bz	l1161
  2117  001836  0A03               	xorlw	3	; case 2
  2118  001838  E0ED               	bz	l5083
  2119  00183A  0012               	return		;funcret
  2120  00183C                     __end_of_motorJoc:
  2121                           	callstack 0
  2122                           
  2123 ;; *************** function _conversorJoystick *****************
  2124 ;; Defined at:
  2125 ;;		line 27 in file "Joc.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  direc           1    wreg     unsigned char 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  direc           1    5[COMRAM] unsigned char 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      unsigned char 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1
  2139 ;;      Params:         0       0       0
  2140 ;;      Locals:         1       0       0
  2141 ;;      Temps:          0       0       0
  2142 ;;      Totals:         1       0       0
  2143 ;;Total ram usage:        1 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; Hardware stack levels required when called: 2
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_motorJoc
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text4
  2154  001E16                     __ptext4:
  2155                           	callstack 0
  2156  001E16                     _conversorJoystick:
  2157                           	callstack 27
  2158                           
  2159                           ;incstack = 0
  2160                           ;conversorJoystick@direc stored from wreg
  2161  001E16  6E64               	movwf	conversorJoystick@direc^0,c
  2162                           
  2163                           ;Joc.c: 29:     if (direc==2) {
  2164  001E18  0E02               	movlw	2
  2165  001E1A  1864               	xorwf	conversorJoystick@direc^0,w,c
  2166  001E1C  E101               	bnz	l2377
  2167                           
  2168                           ;Joc.c: 30:         return 'W';
  2169  001E1E  0C57               	retlw	87
  2170  001E20                     l2377:
  2171                           
  2172                           ;Joc.c: 32:     if (direc==6) {
  2173  001E20  0E06               	movlw	6
  2174  001E22  1864               	xorwf	conversorJoystick@direc^0,w,c
  2175  001E24  E101               	bnz	l2383
  2176                           
  2177                           ;Joc.c: 33:         return 'D';
  2178  001E26  0C44               	retlw	68
  2179  001E28                     l2383:
  2180                           
  2181                           ;Joc.c: 35:     if (direc==8) {
  2182  001E28  0E08               	movlw	8
  2183  001E2A  1864               	xorwf	conversorJoystick@direc^0,w,c
  2184  001E2C  E101               	bnz	l2389
  2185                           
  2186                           ;Joc.c: 36:         return 'S';
  2187  001E2E  0C53               	retlw	83
  2188  001E30                     l2389:
  2189                           
  2190                           ;Joc.c: 38:     if (direc==4) {
  2191  001E30  0E04               	movlw	4
  2192  001E32  1864               	xorwf	conversorJoystick@direc^0,w,c
  2193  001E34  E101               	bnz	l2395
  2194                           
  2195                           ;Joc.c: 39:         return 'A';
  2196  001E36  0C41               	retlw	65
  2197  001E38                     l2395:
  2198                           
  2199                           ;Joc.c: 41:     return 0;
  2200  001E38  0C00               	retlw	0	;funcret
  2201  001E3A                     __end_of_conversorJoystick:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function _SIOendGame *****************
  2205 ;; Defined at:
  2206 ;;		line 28 in file "SIO.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		None
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1
  2220 ;;      Params:         0       0       0
  2221 ;;      Locals:         0       0       0
  2222 ;;      Temps:          0       0       0
  2223 ;;      Totals:         0       0       0
  2224 ;;Total ram usage:        0 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; Hardware stack levels required when called: 2
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_motorJoc
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text5
  2235  000174                     __ptext5:
  2236                           	callstack 0
  2237  000174                     _SIOendGame:
  2238                           	callstack 27
  2239                           
  2240                           ;SIO.c: 29:     jugantSIO = 0;
  2241                           
  2242                           ;incstack = 0
  2243  000174  9475               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2244  000176  0012               	return		;funcret
  2245  000178                     __end_of_SIOendGame:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function _SIOcheckKrebut *****************
  2249 ;; Defined at:
  2250 ;;		line 31 in file "SIO.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;		None               void
  2257 ;; Registers used:
  2258 ;;		status,0
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1
  2264 ;;      Params:         0       0       0
  2265 ;;      Locals:         0       0       0
  2266 ;;      Temps:          0       0       0
  2267 ;;      Totals:         0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 2
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_motorJoc
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text6
  2279  000056                     __ptext6:
  2280                           	callstack 0
  2281  000056                     _SIOcheckKrebut:
  2282                           	callstack 27
  2283                           
  2284                           ;SIO.c: 32:     return Krebut;
  2285                           
  2286                           ;incstack = 0
  2287  000056  B275               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2288  000058  D002               	goto	l2413
  2289  00005A  90D8               	bcf	status,0,c
  2290  00005C  0012               	return	
  2291  00005E                     l2413:
  2292  00005E  80D8               	bsf	status,0,c
  2293  000060  0012               	return		;funcret
  2294  000062                     __end_of_SIOcheckKrebut:
  2295                           	callstack 0
  2296                           
  2297 ;; *************** function _SIOStartGame *****************
  2298 ;; Defined at:
  2299 ;;		line 38 in file "SIO.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  usuari          1    wreg     unsigned char 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  usuari          1    5[COMRAM] unsigned char 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1
  2313 ;;      Params:         0       0       0
  2314 ;;      Locals:         1       0       0
  2315 ;;      Temps:          0       0       0
  2316 ;;      Totals:         1       0       0
  2317 ;;Total ram usage:        1 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; Hardware stack levels required when called: 2
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_motorJoc
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text7
  2328  0000CC                     __ptext7:
  2329                           	callstack 0
  2330  0000CC                     _SIOStartGame:
  2331                           	callstack 27
  2332                           
  2333                           ;incstack = 0
  2334                           ;SIOStartGame@usuari stored from wreg
  2335  0000CC  6E64               	movwf	SIOStartGame@usuari^0,c
  2336                           
  2337                           ;SIO.c: 39:     usuariActualSIO = usuari;
  2338  0000CE  C064  F04A         	movff	SIOStartGame@usuari,_usuariActualSIO
  2339  0000D2  0012               	return		;funcret
  2340  0000D4                     __end_of_SIOStartGame:
  2341                           	callstack 0
  2342                           
  2343 ;; *************** function _SIONovaTecla *****************
  2344 ;; Defined at:
  2345 ;;		line 47 in file "SIO.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  tecla           1    wreg     char 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  tecla           1    5[COMRAM] char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1
  2359 ;;      Params:         0       0       0
  2360 ;;      Locals:         1       0       0
  2361 ;;      Temps:          0       0       0
  2362 ;;      Totals:         1       0       0
  2363 ;;Total ram usage:        1 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; Hardware stack levels required when called: 2
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_motorJoc
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text8
  2374  0000D4                     __ptext8:
  2375                           	callstack 0
  2376  0000D4                     _SIONovaTecla:
  2377                           	callstack 27
  2378                           
  2379                           ;incstack = 0
  2380                           ;SIONovaTecla@tecla stored from wreg
  2381  0000D4  6E64               	movwf	SIONovaTecla@tecla^0,c
  2382                           
  2383                           ;SIO.c: 48:     novaTeclaSIO = tecla;
  2384  0000D6  C064  F048         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2385  0000DA  0012               	return		;funcret
  2386  0000DC                     __end_of_SIONovaTecla:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _SIONovaDireccio *****************
  2390 ;; Defined at:
  2391 ;;		line 34 in file "SIO.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  num             1    wreg     unsigned char 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  num             1    5[COMRAM] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1
  2405 ;;      Params:         0       0       0
  2406 ;;      Locals:         1       0       0
  2407 ;;      Temps:          0       0       0
  2408 ;;      Totals:         1       0       0
  2409 ;;Total ram usage:        1 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 2
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_motorJoc
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text9
  2420  0000DC                     __ptext9:
  2421                           	callstack 0
  2422  0000DC                     _SIONovaDireccio:
  2423                           	callstack 27
  2424                           
  2425                           ;incstack = 0
  2426                           ;SIONovaDireccio@num stored from wreg
  2427  0000DC  6E64               	movwf	SIONovaDireccio@num^0,c
  2428                           
  2429                           ;SIO.c: 35:     direccioSIO = num;
  2430  0000DE  C064  F049         	movff	SIONovaDireccio@num,_direccioSIO
  2431  0000E2  0012               	return		;funcret
  2432  0000E4                     __end_of_SIONovaDireccio:
  2433                           	callstack 0
  2434                           
  2435 ;; *************** function _SIOEnviaHora *****************
  2436 ;; Defined at:
  2437 ;;		line 41 in file "SIO.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		None
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1
  2451 ;;      Params:         0       0       0
  2452 ;;      Locals:         0       0       0
  2453 ;;      Temps:          0       0       0
  2454 ;;      Totals:         0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 2
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_motorJoc
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text10
  2466  000178                     __ptext10:
  2467                           	callstack 0
  2468  000178                     _SIOEnviaHora:
  2469                           	callstack 27
  2470                           
  2471                           ;SIO.c: 42:     hi_ha_hora_sio2 = 1;
  2472                           
  2473                           ;incstack = 0
  2474  000178  8075               	bsf	(_hi_ha_hora_sio2/(0+8))^0,_hi_ha_hora_sio2& (0+7),c
  2475  00017A  0012               	return		;funcret
  2476  00017C                     __end_of_SIOEnviaHora:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _HnoJugant *****************
  2480 ;; Defined at:
  2481 ;;		line 35 in file "Hora.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		None
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1
  2495 ;;      Params:         0       0       0
  2496 ;;      Locals:         0       0       0
  2497 ;;      Temps:          0       0       0
  2498 ;;      Totals:         0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 2
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_motorJoc
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text11
  2510  00017C                     __ptext11:
  2511                           	callstack 0
  2512  00017C                     _HnoJugant:
  2513                           	callstack 27
  2514                           
  2515                           ;Hora.c: 36:     jugant = 0;
  2516                           
  2517                           ;incstack = 0
  2518  00017C  9C75               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2519  00017E  0012               	return		;funcret
  2520  000180                     __end_of_HnoJugant:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function _HNouSegon *****************
  2524 ;; Defined at:
  2525 ;;		line 23 in file "Hora.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;		None               void
  2532 ;; Registers used:
  2533 ;;		status,0
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1
  2539 ;;      Params:         0       0       0
  2540 ;;      Locals:         0       0       0
  2541 ;;      Temps:          0       0       0
  2542 ;;      Totals:         0       0       0
  2543 ;;Total ram usage:        0 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 2
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_motorJoc
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text12
  2554  000062                     __ptext12:
  2555                           	callstack 0
  2556  000062                     _HNouSegon:
  2557                           	callstack 27
  2558                           
  2559                           ;Hora.c: 24:     return nouSegon;
  2560                           
  2561                           ;incstack = 0
  2562  000062  BA75               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2563  000064  D002               	goto	l2357
  2564  000066  90D8               	bcf	status,0,c
  2565  000068  0012               	return	
  2566  00006A                     l2357:
  2567  00006A  80D8               	bsf	status,0,c
  2568  00006C  0012               	return		;funcret
  2569  00006E                     __end_of_HNouSegon:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function _HJugant *****************
  2573 ;; Defined at:
  2574 ;;		line 38 in file "Hora.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		None
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1
  2588 ;;      Params:         0       0       0
  2589 ;;      Locals:         0       0       0
  2590 ;;      Temps:          0       0       0
  2591 ;;      Totals:         0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 2
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_motorJoc
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text13
  2603  00015C                     __ptext13:
  2604                           	callstack 0
  2605  00015C                     _HJugant:
  2606                           	callstack 27
  2607                           
  2608                           ;Hora.c: 39:     jugant = 1;
  2609                           
  2610                           ;incstack = 0
  2611  00015C  8C75               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2612                           
  2613                           ;Hora.c: 40:     tempsAcabat = 0;
  2614  00015E  9875               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2615  000160  0012               	return		;funcret
  2616  000162                     __end_of_HJugant:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _HGetTime *****************
  2620 ;; Defined at:
  2621 ;;		line 31 in file "Hora.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      PTR unsigned char 
  2628 ;; Registers used:
  2629 ;;		wreg
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1
  2635 ;;      Params:         2       0       0
  2636 ;;      Locals:         0       0       0
  2637 ;;      Temps:          0       0       0
  2638 ;;      Totals:         2       0       0
  2639 ;;Total ram usage:        2 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 2
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_motorJoc
  2646 ;;		_motorSIO
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text14
  2651  000180                     __ptext14:
  2652                           	callstack 0
  2653  000180                     _HGetTime:
  2654                           	callstack 27
  2655                           
  2656                           ;Hora.c: 32:     return hora;
  2657                           
  2658                           ;incstack = 0
  2659  000180  0E56               	movlw	_hora& (0+255)
  2660  000182  0012               	return		;funcret
  2661  000184                     __end_of_HGetTime:
  2662                           	callstack 0
  2663                           
  2664 ;; *************** function _HClearNouSegon *****************
  2665 ;; Defined at:
  2666 ;;		line 27 in file "Hora.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		None
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1
  2680 ;;      Params:         0       0       0
  2681 ;;      Locals:         0       0       0
  2682 ;;      Temps:          0       0       0
  2683 ;;      Totals:         0       0       0
  2684 ;;Total ram usage:        0 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; Hardware stack levels required when called: 2
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_motorJoc
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text15
  2695  000184                     __ptext15:
  2696                           	callstack 0
  2697  000184                     _HClearNouSegon:
  2698                           	callstack 27
  2699                           
  2700                           ;Hora.c: 28:     nouSegon = 0;
  2701                           
  2702                           ;incstack = 0
  2703  000184  9A75               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2704  000186  0012               	return		;funcret
  2705  000188                     __end_of_HClearNouSegon:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _motorHora *****************
  2709 ;; Defined at:
  2710 ;;		line 46 in file "Hora.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1
  2724 ;;      Params:         0       0       0
  2725 ;;      Locals:         0       0       0
  2726 ;;      Temps:          2       0       0
  2727 ;;      Totals:         2       0       0
  2728 ;;Total ram usage:        2 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 3
  2731 ;; This function calls:
  2732 ;;		_TiGetTics
  2733 ;;		_TiResetTics
  2734 ;;		_playAltaveu
  2735 ;; This function is called by:
  2736 ;;		_main
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text16
  2741  0018CE                     __ptext16:
  2742                           	callstack 0
  2743  0018CE                     _motorHora:
  2744                           	callstack 27
  2745                           
  2746                           ;Hora.c: 47:  static char state = 0;;Hora.c: 49:  switch(state) {
  2747                           
  2748                           ;incstack = 0
  2749  0018CE  D038               	goto	l5333
  2750  0018D0                     l5283:
  2751                           
  2752                           ;Hora.c: 51:    if (TiGetTics(timerHora) >= 1205) {
  2753  0018D0  5016               	movf	_timerHora^0,w,c
  2754  0018D2  ECF8  F00E         	call	_TiGetTics
  2755  0018D6  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  2756  0018D8  0012               	return	
  2757  0018DA  ECE9  F007         	call	PL82	;call to abstracted procedure
  2758  0018DE  A0D8               	btfss	status,0,c
  2759  0018E0  0012               	return	
  2760                           
  2761                           ;Hora.c: 52:     TiResetTics(timerHora);
  2762  0018E2  5016               	movf	_timerHora^0,w,c
  2763  0018E4  ECA0  F00F         	call	_TiResetTics
  2764                           
  2765                           ;Hora.c: 53:     if(jugant){
  2766  0018E8  AC75               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2767  0018EA  D028               	goto	l5329
  2768                           
  2769                           ;Hora.c: 54:       nouSegon = 1;
  2770  0018EC  8A75               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2771                           
  2772                           ;Hora.c: 56:      hora[4]--;
  2773  0018EE  065A               	decf	(_hora+4)^0,f,c
  2774                           
  2775                           ;Hora.c: 57:      if(hora[4] == ('0'-1)){
  2776  0018F0  0E2F               	movlw	47
  2777  0018F2  185A               	xorwf	(_hora+4)^0,w,c
  2778  0018F4  E103               	bnz	l5299
  2779                           
  2780                           ;Hora.c: 58:       hora[4] = '9';
  2781  0018F6  0E39               	movlw	57
  2782  0018F8  6E5A               	movwf	(_hora+4)^0,c
  2783                           
  2784                           ;Hora.c: 59:       hora[3]--;
  2785  0018FA  0659               	decf	(_hora+3)^0,f,c
  2786  0018FC                     l5299:
  2787                           
  2788                           ;Hora.c: 62:      if(hora[3] == ('0'-1)){
  2789  0018FC  0E2F               	movlw	47
  2790  0018FE  1859               	xorwf	(_hora+3)^0,w,c
  2791  001900  E103               	bnz	l5305
  2792                           
  2793                           ;Hora.c: 63:       hora[3] = '5';
  2794  001902  0E35               	movlw	53
  2795  001904  6E59               	movwf	(_hora+3)^0,c
  2796                           
  2797                           ;Hora.c: 64:       hora[1]--;
  2798  001906  0657               	decf	(_hora+1)^0,f,c
  2799  001908                     l5305:
  2800                           
  2801                           ;Hora.c: 67:      if(hora[1] == ('0'-1)){
  2802  001908  0E2F               	movlw	47
  2803  00190A  1857               	xorwf	(_hora+1)^0,w,c
  2804  00190C  E103               	bnz	l5311
  2805                           
  2806                           ;Hora.c: 68:       hora[1] = '9';
  2807  00190E  0E39               	movlw	57
  2808  001910  6E57               	movwf	(_hora+1)^0,c
  2809                           
  2810                           ;Hora.c: 69:       hora[0]--;
  2811  001912  0656               	decf	_hora^0,f,c
  2812  001914                     l5311:
  2813                           
  2814                           ;Hora.c: 72:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2815  001914  0E30               	movlw	48
  2816  001916  1856               	xorwf	_hora^0,w,c
  2817  001918  E10A               	bnz	l5321
  2818  00191A  0E30               	movlw	48
  2819  00191C  1857               	xorwf	(_hora+1)^0,w,c
  2820  00191E  E107               	bnz	l5321
  2821  001920  0E30               	movlw	48
  2822  001922  1859               	xorwf	(_hora+3)^0,w,c
  2823  001924  E104               	bnz	l5321
  2824  001926  0E30               	movlw	48
  2825  001928  185A               	xorwf	(_hora+4)^0,w,c
  2826  00192A  E101               	bnz	l5321
  2827                           
  2828                           ;Hora.c: 73:       tempsAcabat = 1;
  2829  00192C  8875               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2830  00192E                     l5321:
  2831                           
  2832                           ;Hora.c: 76:      segons++;
  2833  00192E  2A15               	incf	_segons^0,f,c
  2834                           
  2835                           ;Hora.c: 77:      if(segons > 59){
  2836  001930  0E3B               	movlw	59
  2837  001932  6415               	cpfsgt	_segons^0,c
  2838  001934  D003               	goto	l5329
  2839                           
  2840                           ;Hora.c: 78:       playAltaveu();
  2841  001936  ECC4  F000         	call	_playAltaveu	;wreg free
  2842                           
  2843                           ;Hora.c: 79:       segons = 0;
  2844  00193A  6A15               	clrf	_segons^0,c
  2845  00193C                     l5329:
  2846                           
  2847                           ;Hora.c: 82:     state = 0;
  2848  00193C  6A14               	clrf	motorHora@state^0,c
  2849  00193E  0012               	return	
  2850  001940                     l5333:
  2851  001940  5014               	movf	motorHora@state^0,w,c
  2852  001942  6E6B               	movwf	??_motorHora^0,c
  2853  001944  6A6C               	clrf	(??_motorHora+1)^0,c
  2854                           
  2855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2856                           ; Switch size 1, requested type "space"
  2857                           ; Number of cases is 1, Range of values is 0 to 0
  2858                           ; switch strategies available:
  2859                           ; Name         Instructions Cycles
  2860                           ; simple_byte            4     3 (average)
  2861                           ;	Chosen strategy is simple_byte
  2862  001946  506C               	movf	(??_motorHora+1)^0,w,c
  2863  001948  A4D8               	btfss	status,2,c
  2864  00194A  0012               	return	
  2865                           
  2866                           ; Switch size 1, requested type "space"
  2867                           ; Number of cases is 1, Range of values is 0 to 0
  2868                           ; switch strategies available:
  2869                           ; Name         Instructions Cycles
  2870                           ; simple_byte            4     3 (average)
  2871                           ;	Chosen strategy is simple_byte
  2872  00194C  506B               	movf	??_motorHora^0,w,c
  2873  00194E  E0C0               	bz	l5283
  2874  001950  0012               	return		;funcret
  2875  001952                     __end_of_motorHora:
  2876                           	callstack 0
  2877                           
  2878 ;; *************** function _playAltaveu *****************
  2879 ;; Defined at:
  2880 ;;		line 13 in file "Altaveu.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		None
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1
  2894 ;;      Params:         0       0       0
  2895 ;;      Locals:         0       0       0
  2896 ;;      Temps:          0       0       0
  2897 ;;      Totals:         0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used: 1
  2900 ;; Hardware stack levels required when called: 2
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_motorHora
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text17
  2909  000188                     __ptext17:
  2910                           	callstack 0
  2911  000188                     _playAltaveu:
  2912                           	callstack 27
  2913                           
  2914                           ;Altaveu.c: 14:     reproduir = 1;
  2915                           
  2916                           ;incstack = 0
  2917  000188  8676               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2918  00018A  0012               	return		;funcret
  2919  00018C                     __end_of_playAltaveu:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _motorAltaveu *****************
  2923 ;; Defined at:
  2924 ;;		line 16 in file "Altaveu.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1
  2938 ;;      Params:         0       0       0
  2939 ;;      Locals:         0       0       0
  2940 ;;      Temps:          3       0       0
  2941 ;;      Totals:         3       0       0
  2942 ;;Total ram usage:        3 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 3
  2945 ;; This function calls:
  2946 ;;		_TiGetTics
  2947 ;;		_TiResetTics
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text18
  2954  00183C                     __ptext18:
  2955                           	callstack 0
  2956  00183C                     _motorAltaveu:
  2957                           	callstack 27
  2958                           
  2959                           ;Altaveu.c: 17: static char state = 0;;Altaveu.c: 19:  switch(state) {
  2960                           
  2961                           ;incstack = 0
  2962  00183C  D02F               	goto	l5935
  2963  00183E                     l862:
  2964                           
  2965                           ;Altaveu.c: 21:    if (reproduir) {
  2966  00183E  A676               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2967  001840  0012               	return	
  2968                           
  2969                           ;Altaveu.c: 22:     nota = 1;
  2970  001842  0E01               	movlw	1
  2971  001844  6E26               	movwf	_nota^0,c
  2972                           
  2973                           ;Altaveu.c: 23:     copsNota = 0;
  2974  001846  6A24               	clrf	_copsNota^0,c
  2975                           
  2976                           ;Altaveu.c: 24:     TiResetTics(timerAltaveu);
  2977  001848  5025               	movf	_timerAltaveu^0,w,c
  2978  00184A  ECA0  F00F         	call	_TiResetTics
  2979                           
  2980                           ;Altaveu.c: 25:     state = 1;
  2981  00184E  0E01               	movlw	1
  2982  001850  6E23               	movwf	motorAltaveu@state^0,c
  2983  001852  0C01               	retlw	1
  2984  001854                     l5903:
  2985                           
  2986                           ;Altaveu.c: 29:    if (nota > 5) {
  2987  001854  0E05               	movlw	5
  2988  001856  6426               	cpfsgt	_nota^0,c
  2989  001858  D003               	goto	l5909
  2990                           
  2991                           ;Altaveu.c: 30:     reproduir = 0;
  2992  00185A  9676               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2993  00185C                     l5907:
  2994                           
  2995                           ;Altaveu.c: 31:     state--;
  2996  00185C  0623               	decf	motorAltaveu@state^0,f,c
  2997                           
  2998                           ;Altaveu.c: 32:    }
  2999  00185E  0012               	return	
  3000  001860                     l5909:
  3001  001860  0EA8               	movlw	168
  3002  001862  1824               	xorwf	_copsNota^0,w,c
  3003  001864  E103               	bnz	l5915
  3004                           
  3005                           ;Altaveu.c: 34:     nota++;
  3006  001866  2A26               	incf	_nota^0,f,c
  3007                           
  3008                           ;Altaveu.c: 35:     copsNota = 0;
  3009  001868  6A24               	clrf	_copsNota^0,c
  3010                           
  3011                           ;Altaveu.c: 36:    }
  3012  00186A  0012               	return	
  3013  00186C                     l5915:
  3014  00186C  5025               	movf	_timerAltaveu^0,w,c
  3015  00186E  ECF8  F00E         	call	_TiGetTics
  3016  001872  D821               	call	PL22	;call to abstracted procedure
  3017  001874  B0D8               	btfsc	status,0,c
  3018  001876  0012               	return	
  3019                           
  3020                           ;Altaveu.c: 38:     LATBbits.LB0 = 1;
  3021  001878  808A               	bsf	138,0,c	;volatile
  3022                           
  3023                           ;Altaveu.c: 39:     TiResetTics(timerAltaveu);
  3024  00187A  5025               	movf	_timerAltaveu^0,w,c
  3025  00187C  ECA0  F00F         	call	_TiResetTics
  3026                           
  3027                           ;Altaveu.c: 40:     state++;
  3028  001880  2A23               	incf	motorAltaveu@state^0,f,c
  3029  001882  0012               	return	
  3030  001884                     l5923:
  3031                           
  3032                           ;Altaveu.c: 44:    if (TiGetTics(timerAltaveu) > nota) {
  3033  001884  5025               	movf	_timerAltaveu^0,w,c
  3034  001886  ECF8  F00E         	call	_TiGetTics
  3035  00188A  D815               	call	PL22	;call to abstracted procedure
  3036  00188C  B0D8               	btfsc	status,0,c
  3037  00188E  0012               	return	
  3038                           
  3039                           ;Altaveu.c: 45:     LATBbits.LB0 = 0;
  3040  001890  908A               	bcf	138,0,c	;volatile
  3041                           
  3042                           ;Altaveu.c: 46:     TiResetTics(timerAltaveu);
  3043  001892  5025               	movf	_timerAltaveu^0,w,c
  3044  001894  ECA0  F00F         	call	_TiResetTics
  3045                           
  3046                           ;Altaveu.c: 47:     copsNota++;
  3047  001898  2A24               	incf	_copsNota^0,f,c
  3048  00189A  D7E0               	goto	l5907
  3049  00189C                     l5935:
  3050  00189C  5023               	movf	motorAltaveu@state^0,w,c
  3051  00189E  6E6B               	movwf	??_motorAltaveu^0,c
  3052  0018A0  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  3053                           
  3054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3055                           ; Switch size 1, requested type "space"
  3056                           ; Number of cases is 1, Range of values is 0 to 0
  3057                           ; switch strategies available:
  3058                           ; Name         Instructions Cycles
  3059                           ; simple_byte            4     3 (average)
  3060                           ;	Chosen strategy is simple_byte
  3061  0018A2  506C               	movf	(??_motorAltaveu+1)^0,w,c
  3062  0018A4  A4D8               	btfss	status,2,c
  3063  0018A6  0012               	return	
  3064                           
  3065                           ; Switch size 1, requested type "space"
  3066                           ; Number of cases is 3, Range of values is 0 to 2
  3067                           ; switch strategies available:
  3068                           ; Name         Instructions Cycles
  3069                           ; simple_byte           10     6 (average)
  3070                           ;	Chosen strategy is simple_byte
  3071  0018A8  506B               	movf	??_motorAltaveu^0,w,c
  3072  0018AA  E0C9               	bz	l862
  3073  0018AC  0A01               	xorlw	1	; case 1
  3074  0018AE  E0D2               	bz	l5903
  3075  0018B0  0A03               	xorlw	3	; case 2
  3076  0018B2  E0E8               	bz	l5923
  3077  0018B4  0012               	return		;funcret
  3078  0018B6                     __end_of_motorAltaveu:
  3079                           	callstack 0
  3080  0018B6                     PL22:
  3081                           	callstack 27
  3082  0018B6  5026               	movf	_nota^0,w,c
  3083  0018B8  6E6B               	movwf	??_motorAltaveu^0,c
  3084  0018BA  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  3085  0018BC  5064               	movf	?_TiGetTics^0,w,c
  3086  0018BE  5C6B               	subwf	??_motorAltaveu^0,w,c
  3087  0018C0  506C               	movf	(??_motorAltaveu+1)^0,w,c
  3088  0018C2  0A80               	xorlw	128
  3089  0018C4  6E6D               	movwf	(??_motorAltaveu+2)^0,c
  3090  0018C6  5065               	movf	(?_TiGetTics+1)^0,w,c
  3091  0018C8  0A80               	xorlw	128
  3092  0018CA  586D               	subwfb	(??_motorAltaveu+2)^0,w,c
  3093  0018CC  0012               	return	
  3094  0018CE                     __end_ofPL22:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _menu *****************
  3098 ;; Defined at:
  3099 ;;		line 42 in file "Menu.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1
  3113 ;;      Params:         0       0       0
  3114 ;;      Locals:         0       0       0
  3115 ;;      Temps:          0       5       0
  3116 ;;      Totals:         0       5       0
  3117 ;;Total ram usage:        5 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 6
  3120 ;; This function calls:
  3121 ;;		_CToAConverteix
  3122 ;;		_CToAHaAcabat
  3123 ;;		_CToAobtenir
  3124 ;;		_GLCDMostraMenu
  3125 ;;		_HActualitzaHora
  3126 ;;		_JJuguem
  3127 ;;		_JendGame
  3128 ;;		_JnovaDireccio
  3129 ;;		_JnovaTecla
  3130 ;;		_LcClear
  3131 ;;		_LcGotoXY
  3132 ;;		_LcLliure
  3133 ;;		_LcNewString
  3134 ;;		_LcPutChar
  3135 ;;		_LcScroll
  3136 ;;		_NoFerMenu
  3137 ;;		_SIOHaAcabatPuntuacions
  3138 ;;		_SMSoff
  3139 ;;		_SMSon
  3140 ;;		_SiFerMenu
  3141 ;;		_TiGetTics
  3142 ;;		_TiResetTics
  3143 ;;		_URegister
  3144 ;;		_UcheckExists
  3145 ;;		_UcheckExistsGetError
  3146 ;;		_UcheckExistsNotFinished
  3147 ;;		_UenviaChar
  3148 ;;		_UenviaPas
  3149 ;;		_UgetNumUsuaris
  3150 ;;		_UgetScore
  3151 ;;		_UgetTop5
  3152 ;;		_UgetUserName
  3153 ;;		_UshowUsersCalculat
  3154 ;;		_calculateShowUsers
  3155 ;;		_checkHoraAcabat
  3156 ;;		_getArrayShowUsers
  3157 ;;		_miraPassword
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text19
  3164  0002F0                     __ptext19:
  3165                           	callstack 0
  3166  0002F0                     _menu:
  3167                           	callstack 24
  3168                           
  3169                           ;Menu.c: 43:  static char state = 0;;Menu.c: 44:  switch(state) {
  3170                           
  3171                           ;incstack = 0
  3172  0002F0  D322               	goto	l7141
  3173  0002F2                     l6595:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;Menu.c: 46:    LcClear();
  3177  0002F2  EC53  F00F         	call	_LcClear	;wreg free
  3178                           
  3179                           ;Menu.c: 47:    LcNewString(loginText);
  3180  0002F6  0ECF               	movlw	low _loginText
  3181  0002F8  6E67               	movwf	LcNewString@new_s^0,c
  3182  0002FA  6A68               	clrf	(LcNewString@new_s+1)^0,c
  3183  0002FC  EC55  F000         	call	_LcNewString	;wreg free
  3184                           
  3185                           ;Menu.c: 48:    state = 1;
  3186  000300  0E01               	movlw	1
  3187  000302  6E2E               	movwf	menu@state^0,c
  3188                           
  3189                           ;Menu.c: 49:   break;
  3190  000304  0C01               	retlw	1
  3191  000306                     l6601:
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;Menu.c: 51:    if (LcLliure()) {
  3195  000306  EC5B  F000         	call	_LcLliure	;wreg free
  3196  00030A  A0D8               	btfss	status,0,c
  3197  00030C  0012               	return	
  3198                           
  3199                           ;Menu.c: 52:     LcGotoXY(0,1);
  3200  00030E  DB95               	call	PL34	;call to abstracted procedure
  3201  000310  ECA1  F00E         	call	_LcGotoXY
  3202                           
  3203                           ;Menu.c: 53:     LcNewString(registerText);
  3204  000314  0EC4               	movlw	low _registerText
  3205  000316  6E67               	movwf	LcNewString@new_s^0,c
  3206  000318  6A68               	clrf	(LcNewString@new_s+1)^0,c
  3207  00031A  EC55  F000         	call	_LcNewString	;wreg free
  3208                           
  3209                           ;Menu.c: 54:     NovaTecla = -1;
  3210  00031E  6852               	setf	_NovaTecla^0,c
  3211                           
  3212                           ;Menu.c: 55:     state = 2;
  3213  000320  0E02               	movlw	2
  3214  000322  6E2E               	movwf	menu@state^0,c
  3215                           
  3216                           ;Menu.c: 57:   break;
  3217                           
  3218                           ;Menu.c: 56:    }
  3219  000324  0C02               	retlw	2
  3220  000326                     l6611:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;Menu.c: 59:    if (NovaTecla == 1) {
  3224  000326  0452               	decf	_NovaTecla^0,w,c
  3225  000328  E104               	bnz	l6617
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;Menu.c: 60:     loginNOTRegister = 1;
  3229  00032A  8077               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3230  00032C                     l6615:
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;Menu.c: 61:     state = 3;
  3234  00032C  0E03               	movlw	3
  3235  00032E  6E2E               	movwf	menu@state^0,c
  3236                           
  3237                           ;Menu.c: 62:    }
  3238  000330  0C03               	retlw	3
  3239  000332                     l6617:
  3240                           
  3241                           ; BSR set to: 0
  3242  000332  0E02               	movlw	2
  3243  000334  1852               	xorwf	_NovaTecla^0,w,c
  3244  000336  A4D8               	btfss	status,2,c
  3245  000338  0012               	return	
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;Menu.c: 64:     loginNOTRegister = 0;
  3249  00033A  9077               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3250  00033C  D7F7               	goto	l6615
  3251  00033E                     l511:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;Menu.c: 69:    NovaTecla = -1;
  3255  00033E  6852               	setf	_NovaTecla^0,c
  3256                           
  3257                           ;Menu.c: 70:    novaLletra = -1;
  3258  000340  6851               	setf	_novaLletra^0,c
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;Menu.c: 71:    LcClear();
  3262  000342  EC53  F00F         	call	_LcClear	;wreg free
  3263                           
  3264                           ;Menu.c: 72:    LcNewString("USER: ");
  3265  000346  0EE7               	movlw	low STR_1
  3266  000348  DB6D               	call	PL10	;call to abstracted procedure
  3267  00034A  EC55  F000         	call	_LcNewString	;wreg free
  3268                           
  3269                           ;Menu.c: 73:    state = 4;
  3270  00034E  0E04               	movlw	4
  3271  000350  6E2E               	movwf	menu@state^0,c
  3272                           
  3273                           ;Menu.c: 74:   break;
  3274  000352  0C04               	retlw	4
  3275  000354                     l6629:
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;Menu.c: 76:    if (LcLliure()) {
  3279  000354  EC5B  F000         	call	_LcLliure	;wreg free
  3280  000358  A0D8               	btfss	status,0,c
  3281  00035A  0012               	return	
  3282                           
  3283                           ;Menu.c: 77:     LcGotoXY(0,1);
  3284  00035C  DB6E               	call	PL34	;call to abstracted procedure
  3285  00035E  ECA1  F00E         	call	_LcGotoXY
  3286                           
  3287                           ;Menu.c: 78:     LcNewString("PSWD: ");
  3288  000362  0EE0               	movlw	low STR_2
  3289  000364  DB5F               	call	PL10	;call to abstracted procedure
  3290  000366  EC55  F000         	call	_LcNewString	;wreg free
  3291                           
  3292                           ;Menu.c: 79:     state = 5;
  3293  00036A  0E05               	movlw	5
  3294  00036C  6E2E               	movwf	menu@state^0,c
  3295  00036E  0C05               	retlw	5
  3296  000370                     l6637:
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;Menu.c: 83:    if (LcLliure()) {
  3300  000370  EC5B  F000         	call	_LcLliure	;wreg free
  3301  000374  A0D8               	btfss	status,0,c
  3302  000376  0012               	return	
  3303                           
  3304                           ;Menu.c: 84:     LcGotoXY(6,0);
  3305  000378  0E00               	movlw	0
  3306  00037A  6E6C               	movwf	LcGotoXY@Row^0,c
  3307  00037C  0E06               	movlw	6
  3308  00037E  ECA1  F00E         	call	_LcGotoXY
  3309                           
  3310                           ;Menu.c: 85:     SMSon();
  3311  000382  ECB1  F000         	call	_SMSon	;wreg free
  3312                           
  3313                           ;Menu.c: 86:     tmp =0;
  3314  000386  6A33               	clrf	_tmp^0,c
  3315  000388                     l6645:
  3316                           
  3317                           ;Menu.c: 87:     state = 6;
  3318  000388  0E06               	movlw	6
  3319  00038A  6E2E               	movwf	menu@state^0,c
  3320  00038C  0C06               	retlw	6
  3321  00038E                     l6647:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;Menu.c: 91:    if (novaLletra > 31 && NovaTecla != 10) {
  3325  00038E  5051               	movf	_novaLletra^0,w,c
  3326  000390  0A80               	xorlw	128
  3327  000392  0F60               	addlw	-160
  3328  000394  E30E               	bnc	l6657
  3329                           
  3330                           ; BSR set to: 0
  3331  000396  0E0A               	movlw	10
  3332  000398  1852               	xorwf	_NovaTecla^0,w,c
  3333  00039A  E00B               	bz	l6657
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;Menu.c: 92:     LcPutChar(novaLletra);
  3337  00039C  5051               	movf	_novaLletra^0,w,c
  3338  00039E  ECE5  F00D         	call	_LcPutChar
  3339                           
  3340                           ;Menu.c: 93:     UenviaChar(novaLletra,tmp);
  3341  0003A2  C033  F064         	movff	_tmp,UenviaChar@pos
  3342  0003A6  5051               	movf	_novaLletra^0,w,c
  3343  0003A8  EC1B  F000         	call	_UenviaChar
  3344  0003AC                     l6655:
  3345                           
  3346                           ;Menu.c: 94:     state = 7;
  3347  0003AC  0E07               	movlw	7
  3348  0003AE  6E2E               	movwf	menu@state^0,c
  3349                           
  3350                           ;Menu.c: 95:    }
  3351  0003B0  0C07               	retlw	7
  3352  0003B2                     l6657:
  3353                           
  3354                           ; BSR set to: 0
  3355  0003B2  0E0B               	movlw	11
  3356  0003B4  1852               	xorwf	_NovaTecla^0,w,c
  3357  0003B6  E0FA               	bz	l6655
  3358  0003B8  0012               	return	
  3359  0003BA                     l6661:
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;Menu.c: 101:    if (tmp != 7 && NovaTecla != 11) {
  3363  0003BA  0E07               	movlw	7
  3364  0003BC  1833               	xorwf	_tmp^0,w,c
  3365  0003BE  E005               	bz	l6673
  3366                           
  3367                           ; BSR set to: 0
  3368  0003C0  0E0B               	movlw	11
  3369  0003C2  1852               	xorwf	_NovaTecla^0,w,c
  3370  0003C4  E002               	bz	l6673
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;Menu.c: 102:     tmp++;
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;Menu.c: 103:     NovaTecla = -1;
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;Menu.c: 104:     novaLletra = -1;
  3380  0003C6  DB51               	call	PL94	;call to abstracted procedure
  3381  0003C8  D7DF               	goto	l6645
  3382  0003CA                     l6673:
  3383                           
  3384                           ; BSR set to: 0
  3385  0003CA  0E07               	movlw	7
  3386  0003CC  1833               	xorwf	_tmp^0,w,c
  3387  0003CE  E004               	bz	u7080
  3388                           
  3389                           ; BSR set to: 0
  3390  0003D0  0E0B               	movlw	11
  3391  0003D2  1852               	xorwf	_NovaTecla^0,w,c
  3392  0003D4  A4D8               	btfss	status,2,c
  3393  0003D6  0012               	return	
  3394  0003D8                     u7080:
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;Menu.c: 108:     LcGotoXY(6,1);
  3398  0003D8  0E01               	movlw	1
  3399  0003DA  6E6C               	movwf	LcGotoXY@Row^0,c
  3400  0003DC  0E06               	movlw	6
  3401  0003DE  ECA1  F00E         	call	_LcGotoXY
  3402                           
  3403                           ;Menu.c: 109:     UenviaChar('\0',tmp);
  3404  0003E2  C033  F064         	movff	_tmp,UenviaChar@pos
  3405  0003E6  0E00               	movlw	0
  3406  0003E8  EC1B  F000         	call	_UenviaChar
  3407                           
  3408                           ;Menu.c: 110:     NovaTecla = -1;
  3409                           
  3410                           ;Menu.c: 111:     novaLletra = -1;
  3411                           
  3412                           ;Menu.c: 112:     tmp = 0;
  3413  0003EC  DB3A               	call	PL92	;call to abstracted procedure
  3414  0003EE                     l6687:
  3415                           
  3416                           ;Menu.c: 113:     state = 8;
  3417  0003EE  0E08               	movlw	8
  3418  0003F0  6E2E               	movwf	menu@state^0,c
  3419  0003F2  0C08               	retlw	8
  3420  0003F4                     l6689:
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;Menu.c: 117:    if (novaLletra > 31 && NovaTecla != 10) {
  3424  0003F4  5051               	movf	_novaLletra^0,w,c
  3425  0003F6  0A80               	xorlw	128
  3426  0003F8  0F60               	addlw	-160
  3427  0003FA  E30E               	bnc	l6699
  3428                           
  3429                           ; BSR set to: 0
  3430  0003FC  0E0A               	movlw	10
  3431  0003FE  1852               	xorwf	_NovaTecla^0,w,c
  3432  000400  E00B               	bz	l6699
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;Menu.c: 118:     LcPutChar(novaLletra);
  3436  000402  5051               	movf	_novaLletra^0,w,c
  3437  000404  ECE5  F00D         	call	_LcPutChar
  3438                           
  3439                           ;Menu.c: 119:     UenviaPas(novaLletra,tmp);
  3440  000408  C033  F064         	movff	_tmp,UenviaPas@pos
  3441  00040C  5051               	movf	_novaLletra^0,w,c
  3442  00040E  ECF1  F00F         	call	_UenviaPas
  3443  000412                     l6697:
  3444                           
  3445                           ;Menu.c: 120:     state = 9;
  3446  000412  0E09               	movlw	9
  3447  000414  6E2E               	movwf	menu@state^0,c
  3448                           
  3449                           ;Menu.c: 121:    }
  3450  000416  0C09               	retlw	9
  3451  000418                     l6699:
  3452                           
  3453                           ; BSR set to: 0
  3454  000418  0E0B               	movlw	11
  3455  00041A  1852               	xorwf	_NovaTecla^0,w,c
  3456  00041C  E0FA               	bz	l6697
  3457  00041E  0012               	return	
  3458  000420                     l6703:
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;Menu.c: 127:    if (tmp != 7 && NovaTecla != 11) {
  3462  000420  0E07               	movlw	7
  3463  000422  1833               	xorwf	_tmp^0,w,c
  3464  000424  E005               	bz	l6715
  3465                           
  3466                           ; BSR set to: 0
  3467  000426  0E0B               	movlw	11
  3468  000428  1852               	xorwf	_NovaTecla^0,w,c
  3469  00042A  E002               	bz	l6715
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;Menu.c: 128:     tmp++;
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;Menu.c: 129:     NovaTecla = -1;
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;Menu.c: 130:     novaLletra = -1;
  3479  00042C  DB1E               	call	PL94	;call to abstracted procedure
  3480  00042E  D7DF               	goto	l6687
  3481  000430                     l6715:
  3482                           
  3483                           ; BSR set to: 0
  3484  000430  0E07               	movlw	7
  3485  000432  1833               	xorwf	_tmp^0,w,c
  3486  000434  E004               	bz	u7150
  3487                           
  3488                           ; BSR set to: 0
  3489  000436  0E0B               	movlw	11
  3490  000438  1852               	xorwf	_NovaTecla^0,w,c
  3491  00043A  A4D8               	btfss	status,2,c
  3492  00043C  0012               	return	
  3493  00043E                     u7150:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;Menu.c: 134:     UenviaPas('\0',tmp);
  3497  00043E  C033  F064         	movff	_tmp,UenviaPas@pos
  3498  000442  0E00               	movlw	0
  3499  000444  ECF1  F00F         	call	_UenviaPas
  3500                           
  3501                           ;Menu.c: 135:     NovaTecla = -1;
  3502                           
  3503                           ;Menu.c: 136:     novaLletra = -1;
  3504                           
  3505                           ;Menu.c: 137:     tmp = 0;
  3506  000448  DB0C               	call	PL92	;call to abstracted procedure
  3507                           
  3508                           ;Menu.c: 138:     UcheckExists();
  3509  00044A  ECCC  F000         	call	_UcheckExists	;wreg free
  3510                           
  3511                           ;Menu.c: 139:     SMSoff();
  3512  00044E  ECB4  F000         	call	_SMSoff	;wreg free
  3513                           
  3514                           ;Menu.c: 140:     state = 10;
  3515  000452  0E0A               	movlw	10
  3516  000454  6E2E               	movwf	menu@state^0,c
  3517  000456  0C0A               	retlw	10
  3518  000458                     l6733:
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;Menu.c: 144:    if (!UcheckExistsNotFinished()) {
  3522  000458  EC43  F000         	call	_UcheckExistsNotFinished	;wreg free
  3523  00045C  B0D8               	btfsc	status,0,c
  3524  00045E  0012               	return	
  3525                           
  3526                           ;Menu.c: 145:     indexUsuari = UcheckExistsGetError();
  3527  000460  ECCA  F000         	call	_UcheckExistsGetError	;wreg free
  3528  000464  6E30               	movwf	_indexUsuari^0,c
  3529                           
  3530                           ;Menu.c: 146:     state = 11;
  3531  000466  0E0B               	movlw	11
  3532  000468  6E2E               	movwf	menu@state^0,c
  3533  00046A  0C0B               	retlw	11
  3534  00046C                     l538:
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;Menu.c: 150:    if (!loginNOTRegister && indexUsuari == -1) {
  3538  00046C  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3539  00046E  D006               	goto	l539
  3540                           
  3541                           ; BSR set to: 0
  3542  000470  2830               	incf	_indexUsuari^0,w,c
  3543  000472  E104               	bnz	l539
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;Menu.c: 151:     URegister();
  3547  000474  ECCE  F000         	call	_URegister	;wreg free
  3548  000478                     l6743:
  3549                           
  3550                           ;Menu.c: 152:     state = 0;
  3551  000478  6A2E               	clrf	menu@state^0,c
  3552                           
  3553                           ;Menu.c: 153:    }
  3554  00047A  0012               	return	
  3555  00047C                     l539:
  3556                           
  3557                           ; BSR set to: 0
  3558  00047C  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3559                           
  3560                           ; BSR set to: 0
  3561  00047E  BE30               	btfsc	_indexUsuari^0,7,c
  3562  000480  D006               	goto	l541
  3563                           
  3564                           ; BSR set to: 0
  3565  000482  EC1D  F00F         	call	_miraPassword	;wreg free
  3566  000486  E303               	bnc	l541
  3567  000488                     u7210:
  3568                           
  3569                           ;Menu.c: 155:     state = 12;
  3570  000488  0E0C               	movlw	12
  3571  00048A  6E2E               	movwf	menu@state^0,c
  3572                           
  3573                           ;Menu.c: 156:    }
  3574  00048C  0C0C               	retlw	12
  3575  00048E                     l541:
  3576  00048E  A077               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3577  000490  D002               	goto	u7230
  3578  000492  2830               	incf	_indexUsuari^0,w,c
  3579  000494  E0F1               	bz	l6743
  3580  000496                     u7230:
  3581  000496  B077               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3582  000498  D002               	goto	u7250
  3583  00049A  AE30               	btfss	_indexUsuari^0,7,c
  3584  00049C  D7ED               	goto	l6743
  3585  00049E                     u7250:
  3586  00049E  EC1D  F00F         	call	_miraPassword	;wreg free
  3587  0004A2  E3EA               	bnc	l6743
  3588  0004A4  0012               	return	
  3589  0004A6                     l6757:
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;Menu.c: 162:    LcClear();
  3593  0004A6  EC53  F00F         	call	_LcClear	;wreg free
  3594                           
  3595                           ;Menu.c: 163:    SiFerMenu();
  3596  0004AA  ECD0  F000         	call	_SiFerMenu	;wreg free
  3597                           
  3598                           ;Menu.c: 164:    GLCDMostraMenu(menuDalt);
  3599  0004AE  5031               	movf	_menuDalt^0,w,c
  3600  0004B0  EC49  F000         	call	_GLCDMostraMenu
  3601                           
  3602                           ;Menu.c: 165:    novaDireccio = -1;
  3603  0004B4  6850               	setf	_novaDireccio^0,c
  3604                           
  3605                           ;Menu.c: 166:    NovaTecla = -1;
  3606  0004B6  6852               	setf	_NovaTecla^0,c
  3607                           
  3608                           ;Menu.c: 167:    state = 13;
  3609  0004B8  0E0D               	movlw	13
  3610  0004BA  6E2E               	movwf	menu@state^0,c
  3611                           
  3612                           ;Menu.c: 168:   break;
  3613  0004BC  0C0D               	retlw	13
  3614  0004BE                     l6769:
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;Menu.c: 170:    if (novaDireccio == 8) {
  3618  0004BE  0E08               	movlw	8
  3619  0004C0  1850               	xorwf	_novaDireccio^0,w,c
  3620  0004C2  E105               	bnz	l6777
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;Menu.c: 171:     if(menuDalt < 4) menuDalt++;
  3624  0004C4  0E04               	movlw	4
  3625  0004C6  6031               	cpfslt	_menuDalt^0,c
  3626  0004C8  D7DF               	goto	u7210
  3627                           
  3628                           ; BSR set to: 0
  3629  0004CA  2A31               	incf	_menuDalt^0,f,c
  3630  0004CC  D7DD               	goto	u7210
  3631  0004CE                     l6777:
  3632                           
  3633                           ; BSR set to: 0
  3634  0004CE  0E02               	movlw	2
  3635  0004D0  1850               	xorwf	_novaDireccio^0,w,c
  3636  0004D2  E104               	bnz	l6785
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;Menu.c: 175:     if(menuDalt > 0) menuDalt--;
  3640  0004D4  5031               	movf	_menuDalt^0,w,c
  3641  0004D6  E0D8               	bz	u7210
  3642                           
  3643                           ; BSR set to: 0
  3644  0004D8  0631               	decf	_menuDalt^0,f,c
  3645  0004DA  D7D6               	goto	u7210
  3646  0004DC                     l6785:
  3647                           
  3648                           ; BSR set to: 0
  3649  0004DC  0E0B               	movlw	11
  3650  0004DE  1852               	xorwf	_NovaTecla^0,w,c
  3651  0004E0  E10E               	bnz	l6797
  3652                           
  3653                           ; BSR set to: 0
  3654  0004E2  0E03               	movlw	3
  3655  0004E4  1831               	xorwf	_menuDalt^0,w,c
  3656  0004E6  E10B               	bnz	l6797
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;Menu.c: 179:     NoFerMenu();
  3660  0004E8  ECD4  F000         	call	_NoFerMenu	;wreg free
  3661                           
  3662                           ;Menu.c: 180:     LcClear();
  3663  0004EC  EC53  F00F         	call	_LcClear	;wreg free
  3664                           
  3665                           ;Menu.c: 181:     LcNewString("BYE BYE ");
  3666  0004F0  0EC7               	movlw	low STR_3
  3667  0004F2  DA98               	call	PL10	;call to abstracted procedure
  3668  0004F4  EC55  F000         	call	_LcNewString	;wreg free
  3669                           
  3670                           ;Menu.c: 182:     state = 14;
  3671  0004F8  0E0E               	movlw	14
  3672  0004FA  6E2E               	movwf	menu@state^0,c
  3673                           
  3674                           ;Menu.c: 183:    }
  3675  0004FC  0C0E               	retlw	14
  3676  0004FE                     l6797:
  3677                           
  3678                           ; BSR set to: 0
  3679  0004FE  0E0B               	movlw	11
  3680  000500  1852               	xorwf	_NovaTecla^0,w,c
  3681  000502  E10E               	bnz	l6811
  3682                           
  3683                           ; BSR set to: 0
  3684  000504  0431               	decf	_menuDalt^0,w,c
  3685  000506  E10C               	bnz	l6811
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;Menu.c: 185:     LcClear();
  3689  000508  EC53  F00F         	call	_LcClear	;wreg free
  3690                           
  3691                           ;Menu.c: 186:     NoFerMenu();
  3692  00050C  ECD4  F000         	call	_NoFerMenu	;wreg free
  3693                           
  3694                           ;Menu.c: 187:     LcNewString("Modify Time:");
  3695  000510  0EAE               	movlw	low STR_4
  3696  000512  DA88               	call	PL10	;call to abstracted procedure
  3697  000514  EC55  F000         	call	_LcNewString	;wreg free
  3698                           
  3699                           ;Menu.c: 188:     NovaTecla = -1;
  3700  000518  6852               	setf	_NovaTecla^0,c
  3701                           
  3702                           ;Menu.c: 189:     state = 16;
  3703  00051A  0E10               	movlw	16
  3704  00051C  6E2E               	movwf	menu@state^0,c
  3705                           
  3706                           ;Menu.c: 190:    }
  3707  00051E  0C10               	retlw	16
  3708  000520                     l6811:
  3709                           
  3710                           ; BSR set to: 0
  3711  000520  5031               	movf	_menuDalt^0,w,c
  3712  000522  E112               	bnz	l6827
  3713                           
  3714                           ; BSR set to: 0
  3715  000524  0E0B               	movlw	11
  3716  000526  1852               	xorwf	_NovaTecla^0,w,c
  3717  000528  E10F               	bnz	l6827
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;Menu.c: 192:     NoFerMenu();
  3721  00052A  ECD4  F000         	call	_NoFerMenu	;wreg free
  3722                           
  3723                           ;Menu.c: 193:     NovaTecla = -1;
  3724  00052E  6852               	setf	_NovaTecla^0,c
  3725                           
  3726                           ;Menu.c: 194:     LcClear();
  3727  000530  EC53  F00F         	call	_LcClear	;wreg free
  3728                           
  3729                           ;Menu.c: 195:     LcNewString("TIME REMAINING:");
  3730  000534  0E9E               	movlw	low STR_5
  3731  000536  DA76               	call	PL10	;call to abstracted procedure
  3732  000538  EC55  F000         	call	_LcNewString	;wreg free
  3733                           
  3734                           ;Menu.c: 196:     JJuguem(indexUsuari);
  3735  00053C  5030               	movf	_indexUsuari^0,w,c
  3736  00053E  EC7A  F000         	call	_JJuguem
  3737  000542                     l6825:
  3738                           
  3739                           ;Menu.c: 197:     state = 21;
  3740  000542  0E15               	movlw	21
  3741  000544  6E2E               	movwf	menu@state^0,c
  3742                           
  3743                           ;Menu.c: 198:    }
  3744  000546  0C15               	retlw	21
  3745  000548                     l6827:
  3746                           
  3747                           ; BSR set to: 0
  3748  000548  0E0B               	movlw	11
  3749  00054A  1852               	xorwf	_NovaTecla^0,w,c
  3750  00054C  E10E               	bnz	l6843
  3751                           
  3752                           ; BSR set to: 0
  3753  00054E  0E04               	movlw	4
  3754  000550  1831               	xorwf	_menuDalt^0,w,c
  3755  000552  E10B               	bnz	l6843
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;Menu.c: 200:     NoFerMenu();
  3759  000554  ECD4  F000         	call	_NoFerMenu	;wreg free
  3760                           
  3761                           ;Menu.c: 201:     LcClear();
  3762  000558  EC53  F00F         	call	_LcClear	;wreg free
  3763                           
  3764                           ;Menu.c: 202:     menuDalt = 0;
  3765  00055C  6A31               	clrf	_menuDalt^0,c
  3766                           
  3767                           ;Menu.c: 203:     NovaTecla = -1;
  3768  00055E  6852               	setf	_NovaTecla^0,c
  3769                           
  3770                           ;Menu.c: 204:     calculateShowUsers();
  3771  000560  ECC6  F000         	call	_calculateShowUsers	;wreg free
  3772                           
  3773                           ;Menu.c: 205:     state = 30;
  3774  000564  0E1E               	movlw	30
  3775  000566  6E2E               	movwf	menu@state^0,c
  3776                           
  3777                           ;Menu.c: 206:    }
  3778  000568  0C1E               	retlw	30
  3779  00056A                     l6843:
  3780                           
  3781                           ; BSR set to: 0
  3782  00056A  0E0B               	movlw	11
  3783  00056C  1852               	xorwf	_NovaTecla^0,w,c
  3784  00056E  A4D8               	btfss	status,2,c
  3785  000570  0012               	return	
  3786                           
  3787                           ; BSR set to: 0
  3788  000572  0E02               	movlw	2
  3789  000574  1831               	xorwf	_menuDalt^0,w,c
  3790  000576  A4D8               	btfss	status,2,c
  3791  000578  0012               	return	
  3792                           
  3793                           ; BSR set to: 0
  3794  00057A  0E00               	movlw	0
  3795  00057C  ECDE  F00F         	call	_UgetTop5
  3796  000580  0AFF               	xorlw	255
  3797  000582  B4D8               	btfsc	status,2,c
  3798  000584  0012               	return	
  3799                           
  3800                           ;Menu.c: 208:     NoFerMenu();
  3801  000586  ECD4  F000         	call	_NoFerMenu	;wreg free
  3802                           
  3803                           ;Menu.c: 209:     LcClear();
  3804  00058A  EC53  F00F         	call	_LcClear	;wreg free
  3805                           
  3806                           ;Menu.c: 210:     menuDalt = 0;
  3807  00058E  6A31               	clrf	_menuDalt^0,c
  3808                           
  3809                           ;Menu.c: 211:     NovaTecla = -1;
  3810  000590  6852               	setf	_NovaTecla^0,c
  3811  000592                     l6857:
  3812                           
  3813                           ;Menu.c: 212:     state = 31;
  3814  000592  0E1F               	movlw	31
  3815  000594  6E2E               	movwf	menu@state^0,c
  3816  000596  0C1F               	retlw	31
  3817  000598                     l6859:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;Menu.c: 216:    if (LcLliure()) {
  3821  000598  EC5B  F000         	call	_LcLliure	;wreg free
  3822  00059C  A0D8               	btfss	status,0,c
  3823  00059E  0012               	return	
  3824                           
  3825                           ;Menu.c: 217:     LcNewString(UgetUserName(indexUsuari));
  3826  0005A0  5030               	movf	_indexUsuari^0,w,c
  3827  0005A2  ECD4  F00F         	call	_UgetUserName
  3828  0005A6  DA4C               	call	PL44	;call to abstracted procedure
  3829  0005A8  EC55  F000         	call	_LcNewString	;wreg free
  3830                           
  3831                           ;Menu.c: 218:     TiResetTics(timerMenu);
  3832  0005AC  5032               	movf	_timerMenu^0,w,c
  3833  0005AE  ECA0  F00F         	call	_TiResetTics
  3834                           
  3835                           ;Menu.c: 219:     state = 15;
  3836  0005B2  0E0F               	movlw	15
  3837  0005B4  6E2E               	movwf	menu@state^0,c
  3838  0005B6  0C0F               	retlw	15
  3839  0005B8                     l6867:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;Menu.c: 223:    if (TiGetTics(timerMenu) > 2410) {
  3843  0005B8  5032               	movf	_timerMenu^0,w,c
  3844  0005BA  ECF8  F00E         	call	_TiGetTics
  3845  0005BE  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  3846  0005C0  0012               	return	
  3847  0005C2  0E6B               	movlw	107
  3848  0005C4  5C64               	subwf	?_TiGetTics^0,w,c
  3849  0005C6  0E09               	movlw	9
  3850  0005C8  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  3851  0005CA  E301 D755          	bc	l6743
  3852  0005CE  0012               	return	
  3853  0005D0                     l6871:
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;Menu.c: 228:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3857  0005D0  EC5B  F000         	call	_LcLliure	;wreg free
  3858  0005D4  E347               	bnc	l6937
  3859  0005D6  BE52               	btfsc	_NovaTecla^0,7,c
  3860  0005D8  D045               	goto	l6937
  3861  0005DA  5052               	movf	_NovaTecla^0,w,c
  3862  0005DC  0A80               	xorlw	128
  3863  0005DE  0F76               	addlw	-138
  3864  0005E0  E241               	bc	l6937
  3865                           
  3866                           ;Menu.c: 229:     LcGotoXY(0,1);
  3867  0005E2  DA2B               	call	PL34	;call to abstracted procedure
  3868  0005E4  ECA1  F00E         	call	_LcGotoXY
  3869                           
  3870                           ;Menu.c: 230:     horaTmp[0] = NovaTecla+48;
  3871  0005E8  5052               	movf	_NovaTecla^0,w,c
  3872  0005EA  0F30               	addlw	48
  3873  0005EC  6E41               	movwf	_horaTmp^0,c
  3874                           
  3875                           ;Menu.c: 231:     LcPutChar(horaTmp[0]);
  3876  0005EE  5041               	movf	_horaTmp^0,w,c
  3877  0005F0  ECE5  F00D         	call	_LcPutChar
  3878                           
  3879                           ;Menu.c: 232:     NovaTecla = -1;
  3880  0005F4  6852               	setf	_NovaTecla^0,c
  3881                           
  3882                           ;Menu.c: 233:     state = 17;
  3883  0005F6  0E11               	movlw	17
  3884  0005F8                     L1:
  3885  0005F8  6E2E               	movwf	menu@state^0,c
  3886                           
  3887                           ;Menu.c: 234:    }
  3888  0005FA  0012               	return	
  3889  0005FC                     L2:
  3890  0005FC  1852               	xorwf	_NovaTecla^0,w,c
  3891  0005FE  E101 D743          	bz	u7210
  3892  000602  0012               	return	
  3893  000604                     l6891:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;Menu.c: 240:    if (NovaTecla > -1 && NovaTecla < 10) {
  3897  000604  BE52               	btfsc	_NovaTecla^0,7,c
  3898  000606  D02E               	goto	l6937
  3899                           
  3900                           ; BSR set to: 0
  3901  000608  5052               	movf	_NovaTecla^0,w,c
  3902  00060A  0A80               	xorlw	128
  3903  00060C  0F76               	addlw	-138
  3904  00060E  E22A               	bc	l6937
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;Menu.c: 241:     horaTmp[1] = NovaTecla+48;
  3908  000610  5052               	movf	_NovaTecla^0,w,c
  3909  000612  0F30               	addlw	48
  3910  000614  6E42               	movwf	(_horaTmp+1)^0,c
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;Menu.c: 242:     LcPutChar(horaTmp[1]);
  3914  000616  5042               	movf	(_horaTmp+1)^0,w,c
  3915  000618  ECE5  F00D         	call	_LcPutChar
  3916                           
  3917                           ;Menu.c: 243:     NovaTecla = -1;
  3918  00061C  6852               	setf	_NovaTecla^0,c
  3919                           
  3920                           ;Menu.c: 244:     LcPutChar(':');
  3921  00061E  0E3A               	movlw	58
  3922  000620  ECE5  F00D         	call	_LcPutChar
  3923                           
  3924                           ;Menu.c: 245:     state = 18;
  3925  000624  0E12               	movlw	18
  3926  000626  D7E8               	goto	L1
  3927  000628                     l6909:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;Menu.c: 252:    if (NovaTecla > -1 && NovaTecla < 10) {
  3931  000628  BE52               	btfsc	_NovaTecla^0,7,c
  3932  00062A  D01C               	goto	l6937
  3933                           
  3934                           ; BSR set to: 0
  3935  00062C  5052               	movf	_NovaTecla^0,w,c
  3936  00062E  0A80               	xorlw	128
  3937  000630  0F76               	addlw	-138
  3938  000632  E218               	bc	l6937
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;Menu.c: 253:     horaTmp[2] = NovaTecla+48;
  3942  000634  5052               	movf	_NovaTecla^0,w,c
  3943  000636  0F30               	addlw	48
  3944  000638  6E43               	movwf	(_horaTmp+2)^0,c
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;Menu.c: 254:     LcPutChar(horaTmp[2]);
  3948  00063A  5043               	movf	(_horaTmp+2)^0,w,c
  3949  00063C  ECE5  F00D         	call	_LcPutChar
  3950                           
  3951                           ;Menu.c: 255:     NovaTecla = -1;
  3952  000640  6852               	setf	_NovaTecla^0,c
  3953                           
  3954                           ;Menu.c: 256:     state = 19;
  3955  000642  0E13               	movlw	19
  3956  000644  D7D9               	goto	L1
  3957  000646                     l6925:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;Menu.c: 263:    if (NovaTecla > -1 && NovaTecla < 10) {
  3961  000646  BE52               	btfsc	_NovaTecla^0,7,c
  3962  000648  D00D               	goto	l6937
  3963                           
  3964                           ; BSR set to: 0
  3965  00064A  5052               	movf	_NovaTecla^0,w,c
  3966  00064C  0A80               	xorlw	128
  3967  00064E  0F76               	addlw	-138
  3968  000650  E209               	bc	l6937
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;Menu.c: 264:     horaTmp[3] = NovaTecla+48;
  3972  000652  5052               	movf	_NovaTecla^0,w,c
  3973  000654  0F30               	addlw	48
  3974  000656  6E44               	movwf	(_horaTmp+3)^0,c
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;Menu.c: 265:     LcPutChar(horaTmp[3]);
  3978  000658  5044               	movf	(_horaTmp+3)^0,w,c
  3979  00065A  ECE5  F00D         	call	_LcPutChar
  3980                           
  3981                           ;Menu.c: 266:     NovaTecla = -1;
  3982  00065E  6852               	setf	_NovaTecla^0,c
  3983                           
  3984                           ;Menu.c: 267:     state = 20;
  3985  000660  0E14               	movlw	20
  3986  000662  D7CA               	goto	L1
  3987  000664                     l6937:
  3988                           
  3989                           ; BSR set to: 0
  3990  000664  0E0A               	movlw	10
  3991  000666  D7CA               	goto	L2
  3992  000668                     l6941:
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;Menu.c: 274:    if (NovaTecla == 11) {
  3996  000668  0E0B               	movlw	11
  3997  00066A  1852               	xorwf	_NovaTecla^0,w,c
  3998  00066C  E1FB               	bnz	l6937
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;Menu.c: 275:     HActualitzaHora(horaTmp);
  4002  00066E  0E41               	movlw	low _horaTmp
  4003  000670  6E64               	movwf	HActualitzaHora@nova^0,c
  4004  000672  EC2F  F00F         	call	_HActualitzaHora	;wreg free
  4005                           
  4006                           ;Menu.c: 276:     NovaTecla = -1;
  4007  000676  6852               	setf	_NovaTecla^0,c
  4008  000678  D707               	goto	u7210
  4009  00067A                     l6953:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;Menu.c: 284:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  4013  00067A  0E0A               	movlw	10
  4014  00067C  1852               	xorwf	_NovaTecla^0,w,c
  4015  00067E  E103               	bnz	u7600
  4016                           
  4017                           ; BSR set to: 0
  4018  000680  EC5B  F000         	call	_LcLliure	;wreg free
  4019  000684  E203               	bc	u7610
  4020  000686                     u7600:
  4021  000686  EC37  F000         	call	_checkHoraAcabat	;wreg free
  4022  00068A  E307               	bnc	l6965
  4023  00068C                     u7610:
  4024                           
  4025                           ;Menu.c: 285:     LcClear();
  4026  00068C  EC53  F00F         	call	_LcClear	;wreg free
  4027                           
  4028                           ;Menu.c: 286:     JendGame();
  4029  000690  ECD6  F000         	call	_JendGame	;wreg free
  4030                           
  4031                           ;Menu.c: 287:     state = 22;
  4032  000694  0E16               	movlw	22
  4033  000696  6E2E               	movwf	menu@state^0,c
  4034                           
  4035                           ;Menu.c: 288:    }
  4036  000698  0C16               	retlw	22
  4037  00069A                     l6965:
  4038  00069A  5052               	movf	_NovaTecla^0,w,c
  4039  00069C  0A80               	xorlw	128
  4040  00069E  0F7F               	addlw	-129
  4041  0006A0  E309               	bnc	l6975
  4042  0006A2  5052               	movf	_NovaTecla^0,w,c
  4043  0006A4  0A80               	xorlw	128
  4044  0006A6  0F76               	addlw	-138
  4045  0006A8  E205               	bc	l6975
  4046                           
  4047                           ;Menu.c: 290:     JnovaTecla(NovaTecla);
  4048  0006AA  5052               	movf	_NovaTecla^0,w,c
  4049  0006AC  EC72  F000         	call	_JnovaTecla
  4050                           
  4051                           ;Menu.c: 291:     NovaTecla = -1;
  4052  0006B0  6852               	setf	_NovaTecla^0,c
  4053  0006B2  D747               	goto	l6825
  4054  0006B4                     l6975:
  4055  0006B4  BE50               	btfsc	_novaDireccio^0,7,c
  4056  0006B6  0012               	return	
  4057                           
  4058                           ;Menu.c: 295:     JnovaDireccio(novaDireccio);
  4059  0006B8  5050               	movf	_novaDireccio^0,w,c
  4060  0006BA  EC76  F000         	call	_JnovaDireccio
  4061                           
  4062                           ;Menu.c: 296:     novaDireccio = -1;
  4063  0006BE  6850               	setf	_novaDireccio^0,c
  4064  0006C0  D740               	goto	l6825
  4065  0006C2                     l6983:
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;Menu.c: 301:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  4069  0006C2  ECD2  F000         	call	_SIOHaAcabatPuntuacions	;wreg free
  4070  0006C6  0900               	iorlw	0
  4071  0006C8  B4D8               	btfsc	status,2,c
  4072  0006CA  0012               	return	
  4073  0006CC  0E0B               	movlw	11
  4074  0006CE  D796               	goto	L2
  4075  0006D0                     l6989:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;Menu.c: 306:    if (LcLliure()) {
  4079  0006D0  EC5B  F000         	call	_LcLliure	;wreg free
  4080  0006D4  A0D8               	btfss	status,0,c
  4081  0006D6  0012               	return	
  4082                           
  4083                           ;Menu.c: 307:     LcGotoXY(0,0);
  4084  0006D8  0E00               	movlw	0
  4085  0006DA  6E6C               	movwf	LcGotoXY@Row^0,c
  4086  0006DC  ECA1  F00E         	call	_LcGotoXY
  4087                           
  4088                           ;Menu.c: 308:     LcNewString(getArrayShowUsers(menuDalt));
  4089  0006E0  5031               	movf	_menuDalt^0,w,c
  4090  0006E2  EC84  F00F         	call	_getArrayShowUsers
  4091  0006E6  D9A4               	call	PL30	;call to abstracted procedure
  4092  0006E8  EC55  F000         	call	_LcNewString	;wreg free
  4093                           
  4094                           ;Menu.c: 309:     menuDalt++;
  4095  0006EC  2A31               	incf	_menuDalt^0,f,c
  4096                           
  4097                           ;Menu.c: 310:     state = 24;
  4098  0006EE  0E18               	movlw	24
  4099  0006F0  6E2E               	movwf	menu@state^0,c
  4100  0006F2  0C18               	retlw	24
  4101  0006F4                     l6997:
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;Menu.c: 314:    if (LcLliure()) {
  4105  0006F4  EC5B  F000         	call	_LcLliure	;wreg free
  4106  0006F8  A0D8               	btfss	status,0,c
  4107  0006FA  0012               	return	
  4108                           
  4109                           ;Menu.c: 315:     if (menuDalt < UgetNumUsuaris()){
  4110  0006FC  ECC8  F000         	call	_UgetNumUsuaris	;wreg free
  4111  000700  6031               	cpfslt	_menuDalt^0,c
  4112  000702  D00B               	goto	l607
  4113                           
  4114                           ;Menu.c: 316:       LcGotoXY(0,1);
  4115  000704  D99A               	call	PL34	;call to abstracted procedure
  4116  000706  ECA1  F00E         	call	_LcGotoXY
  4117                           
  4118                           ;Menu.c: 317:       LcNewString(getArrayShowUsers(menuDalt));
  4119  00070A  5031               	movf	_menuDalt^0,w,c
  4120  00070C  EC84  F00F         	call	_getArrayShowUsers
  4121  000710  D98F               	call	PL30	;call to abstracted procedure
  4122  000712  EC55  F000         	call	_LcNewString	;wreg free
  4123                           
  4124                           ;Menu.c: 318:       menuDalt++;
  4125  000716  2A31               	incf	_menuDalt^0,f,c
  4126                           
  4127                           ;Menu.c: 319:     } else {
  4128  000718  D001               	goto	l7005
  4129  00071A                     l607:
  4130                           
  4131                           ;Menu.c: 320:       menuDalt = 0;
  4132  00071A  6A31               	clrf	_menuDalt^0,c
  4133  00071C                     l7005:
  4134                           
  4135                           ;Menu.c: 322:     state = 25;
  4136  00071C  0E19               	movlw	25
  4137  00071E  6E2E               	movwf	menu@state^0,c
  4138  000720  0C19               	retlw	25
  4139  000722                     l7007:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;Menu.c: 326:    if (LcLliure()) {
  4143  000722  EC5B  F000         	call	_LcLliure	;wreg free
  4144  000726  A0D8               	btfss	status,0,c
  4145  000728  0012               	return	
  4146                           
  4147                           ;Menu.c: 327:     if (menuDalt == UgetNumUsuaris()){
  4148  00072A  ECC8  F000         	call	_UgetNumUsuaris	;wreg free
  4149  00072E  1831               	xorwf	_menuDalt^0,w,c
  4150  000730  E101               	bnz	l7013
  4151                           
  4152                           ;Menu.c: 328:       menuDalt = 0;
  4153  000732  6A31               	clrf	_menuDalt^0,c
  4154  000734                     l7013:
  4155                           
  4156                           ;Menu.c: 330:     LcGotoXY(16,0);
  4157  000734  D993               	call	PL90	;call to abstracted procedure
  4158  000736  ECA1  F00E         	call	_LcGotoXY
  4159                           
  4160                           ;Menu.c: 331:     LcNewString(getArrayShowUsers(menuDalt));
  4161  00073A  5031               	movf	_menuDalt^0,w,c
  4162  00073C  EC84  F00F         	call	_getArrayShowUsers
  4163  000740  D977               	call	PL30	;call to abstracted procedure
  4164  000742  EC55  F000         	call	_LcNewString	;wreg free
  4165                           
  4166                           ;Menu.c: 332:     state = 26;
  4167  000746  0E1A               	movlw	26
  4168  000748  6E2E               	movwf	menu@state^0,c
  4169  00074A  0C1A               	retlw	26
  4170  00074C                     l7017:
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;Menu.c: 336:    if (LcLliure()) {
  4174  00074C  EC5B  F000         	call	_LcLliure	;wreg free
  4175  000750  A0D8               	btfss	status,0,c
  4176  000752  0012               	return	
  4177                           
  4178                           ;Menu.c: 337:     if (menuDalt+1 < UgetNumUsuaris()){
  4179  000754  ECC8  F000         	call	_UgetNumUsuaris	;wreg free
  4180  000758  0100               	movlb	0	; () banked
  4181  00075A  6FD7               	movwf	??_menu& (0+255),b
  4182  00075C  6BD8               	clrf	(??_menu+1)& (0+255),b
  4183  00075E  5031               	movf	_menuDalt^0,w,c
  4184  000760  6FD9               	movwf	(??_menu+2)& (0+255),b
  4185  000762  6BDA               	clrf	(??_menu+3)& (0+255),b
  4186  000764  2BD9               	incf	(??_menu+2)& (0+255),f,b
  4187  000766  0E00               	movlw	0
  4188  000768  23DA               	addwfc	(??_menu+3)& (0+255),f,b
  4189  00076A  51D7               	movf	??_menu& (0+255),w,b
  4190  00076C  5DD9               	subwf	(??_menu+2)& (0+255),w,b
  4191  00076E  51DA               	movf	(??_menu+3)& (0+255),w,b
  4192  000770  0A80               	xorlw	128
  4193  000772  6FDB               	movwf	(??_menu+4)& (0+255),b
  4194  000774  51D8               	movf	(??_menu+1)& (0+255),w,b
  4195  000776  0A80               	xorlw	128
  4196  000778  59DB               	subwfb	(??_menu+4)& (0+255),w,b
  4197  00077A  E209               	bc	l7023
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;Menu.c: 338:       LcGotoXY(16,1);
  4201  00077C  D96C               	call	PL88	;call to abstracted procedure
  4202  00077E  ECA1  F00E         	call	_LcGotoXY
  4203                           
  4204                           ;Menu.c: 339:       LcNewString(getArrayShowUsers(menuDalt+1));
  4205  000782  2831               	incf	_menuDalt^0,w,c
  4206  000784  EC84  F00F         	call	_getArrayShowUsers
  4207  000788  D953               	call	PL30	;call to abstracted procedure
  4208  00078A  EC55  F000         	call	_LcNewString	;wreg free
  4209  00078E                     l7023:
  4210                           
  4211                           ;Menu.c: 341:     state = 27;
  4212  00078E  0E1B               	movlw	27
  4213  000790  6E2E               	movwf	menu@state^0,c
  4214  000792  0C1B               	retlw	27
  4215  000794                     l7025:
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;Menu.c: 345:    if (TiGetTics(timerMenu) > 1205) {
  4219  000794  5032               	movf	_timerMenu^0,w,c
  4220  000796  ECF8  F00E         	call	_TiGetTics
  4221  00079A  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  4222  00079C  D008               	goto	l7029
  4223  00079E  0EB6               	movlw	182
  4224  0007A0  5C64               	subwf	?_TiGetTics^0,w,c
  4225  0007A2  0E04               	movlw	4
  4226  0007A4  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4227  0007A6  E303               	bnc	l7029
  4228                           
  4229                           ;Menu.c: 346:     state = 29;
  4230  0007A8  0E1D               	movlw	29
  4231  0007AA  6E2E               	movwf	menu@state^0,c
  4232                           
  4233                           ;Menu.c: 347:    }
  4234  0007AC  0C1D               	retlw	29
  4235  0007AE                     l7029:
  4236  0007AE  0E0B               	movlw	11
  4237  0007B0  1852               	xorwf	_NovaTecla^0,w,c
  4238  0007B2  A4D8               	btfss	status,2,c
  4239  0007B4  0012               	return	
  4240  0007B6                     u7750:
  4241                           
  4242                           ;Menu.c: 349:     menuDalt = 0;
  4243  0007B6  6A31               	clrf	_menuDalt^0,c
  4244  0007B8  D667               	goto	u7210
  4245  0007BA                     l7035:
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;Menu.c: 354:    if (pos > 15) {
  4249  0007BA  0E0F               	movlw	15
  4250  0007BC  642F               	cpfsgt	_pos^0,c
  4251  0007BE  D005               	goto	l7041
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;Menu.c: 355:     LcClear();
  4255  0007C0  EC53  F00F         	call	_LcClear	;wreg free
  4256  0007C4                     l7039:
  4257                           
  4258                           ;Menu.c: 356:     state = 23;
  4259  0007C4  0E17               	movlw	23
  4260  0007C6  6E2E               	movwf	menu@state^0,c
  4261                           
  4262                           ;Menu.c: 357:    }
  4263  0007C8  0C17               	retlw	23
  4264  0007CA                     l7041:
  4265                           
  4266                           ; BSR set to: 0
  4267  0007CA  0E10               	movlw	16
  4268  0007CC  602F               	cpfslt	_pos^0,c
  4269  0007CE  0C10               	retlw	16
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;Menu.c: 359:     TiResetTics(timerMenu);
  4273  0007D0  5032               	movf	_timerMenu^0,w,c
  4274  0007D2  ECA0  F00F         	call	_TiResetTics
  4275                           
  4276                           ;Menu.c: 360:     LcScroll();
  4277  0007D6  ECB7  F000         	call	_LcScroll	;wreg free
  4278                           
  4279                           ;Menu.c: 361:     pos++;
  4280  0007DA  2A2F               	incf	_pos^0,f,c
  4281  0007DC                     l7049:
  4282                           
  4283                           ;Menu.c: 362:     state = 28;
  4284  0007DC  0E1C               	movlw	28
  4285  0007DE  6E2E               	movwf	menu@state^0,c
  4286  0007E0  0C1C               	retlw	28
  4287  0007E2                     l7051:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;Menu.c: 366:    if (LcLliure()) {
  4291  0007E2  EC5B  F000         	call	_LcLliure	;wreg free
  4292  0007E6  A0D8               	btfss	status,0,c
  4293  0007E8  0012               	return	
  4294                           
  4295                           ;Menu.c: 367:     TiResetTics(timerMenu);
  4296  0007EA  5032               	movf	_timerMenu^0,w,c
  4297  0007EC  ECA0  F00F         	call	_TiResetTics
  4298                           
  4299                           ;Menu.c: 368:     pos = 0;
  4300  0007F0  6A2F               	clrf	_pos^0,c
  4301  0007F2  D7F4               	goto	l7049
  4302  0007F4                     l7059:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;Menu.c: 373:    if (UshowUsersCalculat()) {
  4306  0007F4  EC3D  F000         	call	_UshowUsersCalculat	;wreg free
  4307  0007F8  E2E5               	bc	l7039
  4308  0007FA  0012               	return	
  4309  0007FC                     l7063:
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;Menu.c: 378:    if (LcLliure()) {
  4313  0007FC  EC5B  F000         	call	_LcLliure	;wreg free
  4314  000800  A0D8               	btfss	status,0,c
  4315  000802  0012               	return	
  4316                           
  4317                           ;Menu.c: 379:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4318  000804  5031               	movf	_menuDalt^0,w,c
  4319  000806  ECDE  F00F         	call	_UgetTop5
  4320  00080A  ECD4  F00F         	call	_UgetUserName
  4321  00080E  D918               	call	PL44	;call to abstracted procedure
  4322  000810  EC55  F000         	call	_LcNewString	;wreg free
  4323                           
  4324                           ;Menu.c: 380:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4325  000814  5031               	movf	_menuDalt^0,w,c
  4326  000816  ECDE  F00F         	call	_UgetTop5
  4327  00081A  ECF9  F00F         	call	_UgetScore
  4328  00081E  EC4F  F000         	call	_CToAConverteix
  4329                           
  4330                           ;Menu.c: 381:     state = 32;
  4331  000822  0E20               	movlw	32
  4332  000824  6E2E               	movwf	menu@state^0,c
  4333  000826  0C20               	retlw	32
  4334  000828                     l7069:
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;Menu.c: 385:    if (CToAHaAcabat() == 250 && LcLliure()) {
  4338  000828  ECDA  F000         	call	_CToAHaAcabat	;wreg free
  4339  00082C  0AFA               	xorlw	250
  4340  00082E  A4D8               	btfss	status,2,c
  4341  000830  0012               	return	
  4342  000832  EC5B  F000         	call	_LcLliure	;wreg free
  4343  000836  A0D8               	btfss	status,0,c
  4344  000838  0012               	return	
  4345                           
  4346                           ;Menu.c: 386:     LcPutChar(':');
  4347  00083A  0E3A               	movlw	58
  4348  00083C  ECE5  F00D         	call	_LcPutChar
  4349                           
  4350                           ;Menu.c: 387:     LcGotoXY(0,1);
  4351  000840  D8FC               	call	PL34	;call to abstracted procedure
  4352  000842  ECA1  F00E         	call	_LcGotoXY
  4353                           
  4354                           ;Menu.c: 388:     LcNewString(CToAobtenir());
  4355  000846  ECD8  F000         	call	_CToAobtenir	;wreg free
  4356  00084A  D8FF               	call	PL48	;call to abstracted procedure
  4357  00084C  EC55  F000         	call	_LcNewString	;wreg free
  4358                           
  4359                           ;Menu.c: 389:     menuDalt++;
  4360  000850  2A31               	incf	_menuDalt^0,f,c
  4361                           
  4362                           ;Menu.c: 390:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  4363  000852  0E05               	movlw	5
  4364  000854  1831               	xorwf	_menuDalt^0,w,c
  4365  000856  E005               	bz	u7840
  4366  000858  5031               	movf	_menuDalt^0,w,c
  4367  00085A  ECDE  F00F         	call	_UgetTop5
  4368  00085E  0AFF               	xorlw	255
  4369  000860  E101               	bnz	l7083
  4370  000862                     u7840:
  4371  000862  6A31               	clrf	_menuDalt^0,c
  4372  000864                     l7083:
  4373                           
  4374                           ;Menu.c: 391:     state = 34;
  4375  000864  0E22               	movlw	34
  4376  000866  6E2E               	movwf	menu@state^0,c
  4377  000868  0C22               	retlw	34
  4378  00086A                     l7085:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;Menu.c: 395:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  4382  00086A  5031               	movf	_menuDalt^0,w,c
  4383  00086C  ECDE  F00F         	call	_UgetTop5
  4384  000870  0AFF               	xorlw	255
  4385  000872  E104               	bnz	u7860
  4386  000874  0E05               	movlw	5
  4387  000876  1831               	xorwf	_menuDalt^0,w,c
  4388  000878  B4D8               	btfsc	status,2,c
  4389  00087A  0012               	return	
  4390  00087C                     u7860:
  4391  00087C  EC5B  F000         	call	_LcLliure	;wreg free
  4392  000880  A0D8               	btfss	status,0,c
  4393  000882  0012               	return	
  4394                           
  4395                           ;Menu.c: 396:     LcGotoXY(16,0);
  4396  000884  D8EB               	call	PL90	;call to abstracted procedure
  4397  000886  ECA1  F00E         	call	_LcGotoXY
  4398                           
  4399                           ;Menu.c: 397:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4400  00088A  5031               	movf	_menuDalt^0,w,c
  4401  00088C  ECDE  F00F         	call	_UgetTop5
  4402  000890  ECD4  F00F         	call	_UgetUserName
  4403  000894  D8D5               	call	PL44	;call to abstracted procedure
  4404  000896  EC55  F000         	call	_LcNewString	;wreg free
  4405                           
  4406                           ;Menu.c: 398:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4407  00089A  5031               	movf	_menuDalt^0,w,c
  4408  00089C  ECDE  F00F         	call	_UgetTop5
  4409  0008A0  ECF9  F00F         	call	_UgetScore
  4410  0008A4  EC4F  F000         	call	_CToAConverteix
  4411                           
  4412                           ;Menu.c: 399:     state = 35;
  4413  0008A8  0E23               	movlw	35
  4414  0008AA  6E2E               	movwf	menu@state^0,c
  4415  0008AC  0C23               	retlw	35
  4416  0008AE                     l7095:
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;Menu.c: 403:    if (LcLliure() && CToAHaAcabat() == 250) {
  4420  0008AE  EC5B  F000         	call	_LcLliure	;wreg free
  4421  0008B2  A0D8               	btfss	status,0,c
  4422  0008B4  0012               	return	
  4423  0008B6  ECDA  F000         	call	_CToAHaAcabat	;wreg free
  4424  0008BA  0AFA               	xorlw	250
  4425  0008BC  A4D8               	btfss	status,2,c
  4426  0008BE  0012               	return	
  4427                           
  4428                           ;Menu.c: 404:     LcPutChar(':');
  4429  0008C0  0E3A               	movlw	58
  4430  0008C2  ECE5  F00D         	call	_LcPutChar
  4431                           
  4432                           ;Menu.c: 405:     LcGotoXY(16,1);
  4433  0008C6  D8C7               	call	PL88	;call to abstracted procedure
  4434  0008C8  ECA1  F00E         	call	_LcGotoXY
  4435                           
  4436                           ;Menu.c: 406:     LcNewString(CToAobtenir());
  4437  0008CC  ECD8  F000         	call	_CToAobtenir	;wreg free
  4438  0008D0  D8BC               	call	PL48	;call to abstracted procedure
  4439  0008D2  EC55  F000         	call	_LcNewString	;wreg free
  4440                           
  4441                           ;Menu.c: 407:     pos = 0;
  4442  0008D6  6A2F               	clrf	_pos^0,c
  4443                           
  4444                           ;Menu.c: 408:     TiResetTics(timerMenu);
  4445  0008D8  5032               	movf	_timerMenu^0,w,c
  4446  0008DA  ECA0  F00F         	call	_TiResetTics
  4447  0008DE                     l7107:
  4448                           
  4449                           ;Menu.c: 409:     state = 37;
  4450  0008DE  0E25               	movlw	37
  4451  0008E0  6E2E               	movwf	menu@state^0,c
  4452  0008E2  0C25               	retlw	37
  4453  0008E4                     l7109:
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;Menu.c: 413:    if (NovaTecla == 11 && LcLliure()) {
  4457  0008E4  0E0B               	movlw	11
  4458  0008E6  1852               	xorwf	_NovaTecla^0,w,c
  4459  0008E8  E104               	bnz	l7117
  4460                           
  4461                           ; BSR set to: 0
  4462  0008EA  EC5B  F000         	call	_LcLliure	;wreg free
  4463  0008EE  E301 D762          	bc	u7750
  4464  0008F2                     l7117:
  4465  0008F2  5032               	movf	_timerMenu^0,w,c
  4466  0008F4  ECF8  F00E         	call	_TiGetTics
  4467  0008F8  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  4468  0008FA  0012               	return	
  4469  0008FC  0E91               	movlw	145
  4470  0008FE  5C64               	subwf	?_TiGetTics^0,w,c
  4471  000900  0E01               	movlw	1
  4472  000902  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4473  000904  A0D8               	btfss	status,0,c
  4474  000906  0012               	return	
  4475  000908  EC5B  F000         	call	_LcLliure	;wreg free
  4476  00090C  A0D8               	btfss	status,0,c
  4477  00090E  0012               	return	
  4478                           
  4479                           ;Menu.c: 418:     state = 38;
  4480  000910  0E26               	movlw	38
  4481  000912  6E2E               	movwf	menu@state^0,c
  4482  000914  0C26               	retlw	38
  4483  000916                     l7123:
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;Menu.c: 422:    if (pos < 16) {
  4487  000916  0E10               	movlw	16
  4488  000918  602F               	cpfslt	_pos^0,c
  4489  00091A  D007               	goto	l7133
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;Menu.c: 423:     TiResetTics(timerMenu);
  4493  00091C  5032               	movf	_timerMenu^0,w,c
  4494  00091E  ECA0  F00F         	call	_TiResetTics
  4495                           
  4496                           ;Menu.c: 424:     LcScroll();
  4497  000922  ECB7  F000         	call	_LcScroll	;wreg free
  4498                           
  4499                           ;Menu.c: 425:     pos++;
  4500  000926  2A2F               	incf	_pos^0,f,c
  4501  000928  D7DA               	goto	l7107
  4502  00092A                     l7133:
  4503                           
  4504                           ; BSR set to: 0
  4505  00092A  0E0F               	movlw	15
  4506  00092C  642F               	cpfsgt	_pos^0,c
  4507  00092E  0C0F               	retlw	15
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;Menu.c: 429:     LcClear();
  4511  000930  EC53  F00F         	call	_LcClear	;wreg free
  4512  000934  D62E               	goto	l6857
  4513  000936                     l7141:
  4514  000936  502E               	movf	menu@state^0,w,c
  4515  000938  0100               	movlb	0	; () banked
  4516  00093A  6FD7               	movwf	??_menu& (0+255),b
  4517  00093C  6BD8               	clrf	(??_menu+1)& (0+255),b
  4518                           
  4519                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4520                           ; Switch size 1, requested type "space"
  4521                           ; Number of cases is 1, Range of values is 0 to 0
  4522                           ; switch strategies available:
  4523                           ; Name         Instructions Cycles
  4524                           ; simple_byte            4     3 (average)
  4525                           ;	Chosen strategy is simple_byte
  4526  00093E  51D8               	movf	(??_menu+1)& (0+255),w,b
  4527  000940  A4D8               	btfss	status,2,c
  4528  000942  0012               	return	
  4529                           
  4530                           ; BSR set to: 0
  4531                           ; Switch size 1, requested type "space"
  4532                           ; Number of cases is 37, Range of values is 0 to 38
  4533                           ; switch strategies available:
  4534                           ; Name         Instructions Cycles
  4535                           ; simple_byte          112    57 (average)
  4536                           ;	Chosen strategy is simple_byte
  4537  000944  51D7               	movf	??_menu& (0+255),w,b
  4538  000946  E101 D4D4          	bz	l6595
  4539  00094A  0A01               	xorlw	1	; case 1
  4540  00094C  E101 D4DB          	bz	l6601
  4541  000950  0A03               	xorlw	3	; case 2
  4542  000952  E101 D4E8          	bz	l6611
  4543  000956  0A01               	xorlw	1	; case 3
  4544  000958  E101 D4F1          	bz	l511
  4545  00095C  0A07               	xorlw	7	; case 4
  4546  00095E  E101 D4F9          	bz	l6629
  4547  000962  0A01               	xorlw	1	; case 5
  4548  000964  E101 D504          	bz	l6637
  4549  000968  0A03               	xorlw	3	; case 6
  4550  00096A  E101 D510          	bz	l6647
  4551  00096E  0A01               	xorlw	1	; case 7
  4552  000970  E101 D523          	bz	l6661
  4553  000974  0A0F               	xorlw	15	; case 8
  4554  000976  E101 D53D          	bz	l6689
  4555  00097A  0A01               	xorlw	1	; case 9
  4556  00097C  E101 D550          	bz	l6703
  4557  000980  0A03               	xorlw	3	; case 10
  4558  000982  E101 D569          	bz	l6733
  4559  000986  0A01               	xorlw	1	; case 11
  4560  000988  E101 D570          	bz	l538
  4561  00098C  0A07               	xorlw	7	; case 12
  4562  00098E  E101 D58A          	bz	l6757
  4563  000992  0A01               	xorlw	1	; case 13
  4564  000994  E101 D593          	bz	l6769
  4565  000998  0A03               	xorlw	3	; case 14
  4566  00099A  E101 D5FD          	bz	l6859
  4567  00099E  0A01               	xorlw	1	; case 15
  4568  0009A0  E101 D60A          	bz	l6867
  4569  0009A4  0A1F               	xorlw	31	; case 16
  4570  0009A6  E101 D613          	bz	l6871
  4571  0009AA  0A01               	xorlw	1	; case 17
  4572  0009AC  E101 D62A          	bz	l6891
  4573  0009B0  0A03               	xorlw	3	; case 18
  4574  0009B2  E101 D639          	bz	l6909
  4575  0009B6  0A01               	xorlw	1	; case 19
  4576  0009B8  E101 D645          	bz	l6925
  4577  0009BC  0A07               	xorlw	7	; case 20
  4578  0009BE  E101 D653          	bz	l6941
  4579  0009C2  0A01               	xorlw	1	; case 21
  4580  0009C4  E101 D659          	bz	l6953
  4581  0009C8  0A03               	xorlw	3	; case 22
  4582  0009CA  E101 D67A          	bz	l6983
  4583  0009CE  0A01               	xorlw	1	; case 23
  4584  0009D0  E101 D67E          	bz	l6989
  4585  0009D4  0A0F               	xorlw	15	; case 24
  4586  0009D6  E101 D68D          	bz	l6997
  4587  0009DA  0A01               	xorlw	1	; case 25
  4588  0009DC  E101 D6A1          	bz	l7007
  4589  0009E0  0A03               	xorlw	3	; case 26
  4590  0009E2  E101 D6B3          	bz	l7017
  4591  0009E6  0A01               	xorlw	1	; case 27
  4592  0009E8  E101 D6FB          	bz	l7051
  4593  0009EC  0A07               	xorlw	7	; case 28
  4594  0009EE  E101 D6D1          	bz	l7025
  4595  0009F2  0A01               	xorlw	1	; case 29
  4596  0009F4  E101 D6E1          	bz	l7035
  4597  0009F8  0A03               	xorlw	3	; case 30
  4598  0009FA  E101 D6FB          	bz	l7059
  4599  0009FE  0A01               	xorlw	1	; case 31
  4600  000A00  E101 D6FC          	bz	l7063
  4601  000A04  0A3F               	xorlw	63	; case 32
  4602  000A06  E101 D70F          	bz	l7069
  4603  000A0A  0A02               	xorlw	2	; case 34
  4604  000A0C  E101 D72D          	bz	l7085
  4605  000A10  0A01               	xorlw	1	; case 35
  4606  000A12  E101 D74C          	bz	l7095
  4607  000A16  0A06               	xorlw	6	; case 37
  4608  000A18  E101 D764          	bz	l7109
  4609  000A1C  0A03               	xorlw	3	; case 38
  4610  000A1E  E101 D77A          	bz	l7123
  4611  000A22  0012               	return		;funcret
  4612  000A24                     __end_of_menu:
  4613                           	callstack 0
  4614  000A24                     PL10:
  4615                           	callstack 24
  4616  000A24  6E67               	movwf	LcNewString@new_s^0,c
  4617  000A26  5067               	movf	LcNewString@new_s^0,w,c
  4618  000A28  A4D8               	btfss	status,2,c
  4619  000A2A  0E02               	movlw	high __smallconst
  4620  000A2C  6E68               	movwf	(LcNewString@new_s+1)^0,c
  4621  000A2E  0012               	return	
  4622  000A30                     __end_ofPL10:
  4623                           	callstack 0
  4624  000A30                     PL30:
  4625                           	callstack 24
  4626  000A30  C064  F067         	movff	?_getArrayShowUsers,LcNewString@new_s
  4627  000A34  C065  F068         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4628  000A38  0012               	return	
  4629  000A3A                     __end_ofPL30:
  4630                           	callstack 0
  4631  000A3A                     PL34:
  4632                           	callstack 24
  4633  000A3A  0E01               	movlw	1
  4634  000A3C  6E6C               	movwf	LcGotoXY@Row^0,c
  4635  000A3E  0C00               	retlw	0
  4636  000A40                     __end_ofPL34:
  4637                           	callstack 0
  4638  000A40                     PL44:
  4639                           	callstack 24
  4640  000A40  C064  F067         	movff	?_UgetUserName,LcNewString@new_s
  4641  000A44  C065  F068         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4642  000A48  0012               	return	
  4643  000A4A                     __end_ofPL44:
  4644                           	callstack 0
  4645  000A4A                     PL48:
  4646                           	callstack 24
  4647  000A4A  0100               	movlb	0	; () banked
  4648  000A4C  6FD7               	movwf	??_menu& (0+255),b
  4649  000A4E  C0D7  F067         	movff	??_menu,LcNewString@new_s
  4650  000A52  6A68               	clrf	(LcNewString@new_s+1)^0,c
  4651  000A54  0012               	return	
  4652  000A56                     __end_ofPL48:
  4653                           	callstack 0
  4654  000A56                     PL88:
  4655                           	callstack 24
  4656  000A56  0E01               	movlw	1
  4657  000A58  6E6C               	movwf	LcGotoXY@Row^0,c
  4658  000A5A  0C10               	retlw	16
  4659  000A5C                     __end_ofPL88:
  4660                           	callstack 0
  4661  000A5C                     PL90:
  4662                           	callstack 24
  4663  000A5C  0E00               	movlw	0
  4664  000A5E  6E6C               	movwf	LcGotoXY@Row^0,c
  4665  000A60  0C10               	retlw	16
  4666  000A62                     __end_ofPL90:
  4667                           	callstack 0
  4668  000A62                     PL92:
  4669                           	callstack 24
  4670  000A62  6852               	setf	_NovaTecla^0,c
  4671  000A64  6851               	setf	_novaLletra^0,c
  4672  000A66  6A33               	clrf	_tmp^0,c
  4673  000A68  0012               	return	
  4674  000A6A                     __end_ofPL92:
  4675                           	callstack 0
  4676  000A6A                     PL94:
  4677                           	callstack 24
  4678  000A6A  2A33               	incf	_tmp^0,f,c
  4679  000A6C  6852               	setf	_NovaTecla^0,c
  4680  000A6E  6851               	setf	_novaLletra^0,c
  4681  000A70  0012               	return	
  4682  000A72                     __end_ofPL94:
  4683                           	callstack 0
  4684                           
  4685 ;; *************** function _miraPassword *****************
  4686 ;; Defined at:
  4687 ;;		line 297 in file "Usuaris.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;		None
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;		None               void
  4694 ;; Registers used:
  4695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMRAM   BANK0   BANK1
  4701 ;;      Params:         0       0       0
  4702 ;;      Locals:         0       0       0
  4703 ;;      Temps:          0       0       0
  4704 ;;      Totals:         0       0       0
  4705 ;;Total ram usage:        0 bytes
  4706 ;; Hardware stack levels used: 1
  4707 ;; Hardware stack levels required when called: 3
  4708 ;; This function calls:
  4709 ;;		_compareStrings
  4710 ;; This function is called by:
  4711 ;;		_menu
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text20
  4716  001E3A                     __ptext20:
  4717                           	callstack 0
  4718  001E3A                     _miraPassword:
  4719                           	callstack 26
  4720                           
  4721                           ;Usuaris.c: 298:     return !compareStrings(tmpPassword, usuaris[usuariLoguejat].passwor
      +                          d);
  4722                           
  4723                           ;incstack = 0
  4724  001E3A  0EAA               	movlw	low _tmpPassword
  4725  001E3C  6E64               	movwf	compareStrings@a^0,c
  4726  001E3E  504F               	movf	_usuariLoguejat^0,w,c
  4727  001E40  0D12               	mullw	18
  4728  001E42  0E09               	movlw	low (_usuaris+9)
  4729  001E44  24F3               	addwf	243,w,c
  4730  001E46  6E65               	movwf	compareStrings@b^0,c
  4731  001E48  0E01               	movlw	high (_usuaris+9)
  4732  001E4A  20F4               	addwfc	prodh,w,c
  4733  001E4C  6E66               	movwf	(compareStrings@b+1)^0,c
  4734  001E4E  EC2D  F00E         	call	_compareStrings	;wreg free
  4735  001E52  0900               	iorlw	0
  4736  001E54  E002               	bz	l4533
  4737  001E56  90D8               	bcf	status,0,c
  4738  001E58  0012               	return	
  4739  001E5A                     l4533:
  4740  001E5A  80D8               	bsf	status,0,c
  4741  001E5C  0012               	return		;funcret
  4742  001E5E                     __end_of_miraPassword:
  4743                           	callstack 0
  4744                           
  4745 ;; *************** function _getArrayShowUsers *****************
  4746 ;; Defined at:
  4747 ;;		line 68 in file "Usuaris.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  quin            1    wreg     unsigned char 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  quin            1    7[COMRAM] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  2    5[COMRAM] PTR unsigned char 
  4754 ;; Registers used:
  4755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1
  4761 ;;      Params:         2       0       0
  4762 ;;      Locals:         1       0       0
  4763 ;;      Temps:          0       0       0
  4764 ;;      Totals:         3       0       0
  4765 ;;Total ram usage:        3 bytes
  4766 ;; Hardware stack levels used: 1
  4767 ;; Hardware stack levels required when called: 2
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_menu
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text21
  4776  001F08                     __ptext21:
  4777                           	callstack 0
  4778  001F08                     _getArrayShowUsers:
  4779                           	callstack 27
  4780                           
  4781                           ;incstack = 0
  4782                           ;getArrayShowUsers@quin stored from wreg
  4783  001F08  6E66               	movwf	getArrayShowUsers@quin^0,c
  4784                           
  4785                           ;Usuaris.c: 69:     return usuaris[arrayShowUsers[quin]].username;
  4786  001F0A  5066               	movf	getArrayShowUsers@quin^0,w,c
  4787  001F0C  0FA2               	addlw	low _arrayShowUsers
  4788  001F0E  6ED9               	movwf	fsr2l,c
  4789  001F10  6ADA               	clrf	fsr2h,c
  4790  001F12  50DF               	movf	indf2,w,c
  4791  001F14  0D12               	mullw	18
  4792  001F16  0E00               	movlw	low _usuaris
  4793  001F18  24F3               	addwf	243,w,c
  4794  001F1A  6E64               	movwf	?_getArrayShowUsers^0,c
  4795  001F1C  0E01               	movlw	high _usuaris
  4796  001F1E  20F4               	addwfc	prodh,w,c
  4797  001F20  6E65               	movwf	(?_getArrayShowUsers+1)^0,c
  4798  001F22  0012               	return		;funcret
  4799  001F24                     __end_of_getArrayShowUsers:
  4800                           	callstack 0
  4801                           
  4802 ;; *************** function _checkHoraAcabat *****************
  4803 ;; Defined at:
  4804 ;;		line 42 in file "Hora.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;		None               void
  4811 ;; Registers used:
  4812 ;;		status,0
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1
  4818 ;;      Params:         0       0       0
  4819 ;;      Locals:         0       0       0
  4820 ;;      Temps:          0       0       0
  4821 ;;      Totals:         0       0       0
  4822 ;;Total ram usage:        0 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 2
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_menu
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text22
  4833  00006E                     __ptext22:
  4834                           	callstack 0
  4835  00006E                     _checkHoraAcabat:
  4836                           	callstack 27
  4837                           
  4838                           ;Hora.c: 43:     return tempsAcabat;
  4839                           
  4840                           ;incstack = 0
  4841  00006E  B875               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4842  000070  D002               	goto	l4571
  4843  000072  90D8               	bcf	status,0,c
  4844  000074  0012               	return	
  4845  000076                     l4571:
  4846  000076  80D8               	bsf	status,0,c
  4847  000078  0012               	return		;funcret
  4848  00007A                     __end_of_checkHoraAcabat:
  4849                           	callstack 0
  4850                           
  4851 ;; *************** function _calculateShowUsers *****************
  4852 ;; Defined at:
  4853 ;;		line 144 in file "Usuaris.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		None
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1
  4867 ;;      Params:         0       0       0
  4868 ;;      Locals:         0       0       0
  4869 ;;      Temps:          0       0       0
  4870 ;;      Totals:         0       0       0
  4871 ;;Total ram usage:        0 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; Hardware stack levels required when called: 2
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_menu
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text23
  4882  00018C                     __ptext23:
  4883                           	callstack 0
  4884  00018C                     _calculateShowUsers:
  4885                           	callstack 27
  4886                           
  4887                           ;Usuaris.c: 145:     do_showUsers = 1;
  4888                           
  4889                           ;incstack = 0
  4890  00018C  8A76               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4891  00018E  0012               	return		;funcret
  4892  000190                     __end_of_calculateShowUsers:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function _UshowUsersCalculat *****************
  4896 ;; Defined at:
  4897 ;;		line 147 in file "Usuaris.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;		None               void
  4904 ;; Registers used:
  4905 ;;		status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1
  4911 ;;      Params:         0       0       0
  4912 ;;      Locals:         0       0       0
  4913 ;;      Temps:          0       0       0
  4914 ;;      Totals:         0       0       0
  4915 ;;Total ram usage:        0 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; Hardware stack levels required when called: 2
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_menu
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text24
  4926  00007A                     __ptext24:
  4927                           	callstack 0
  4928  00007A                     _UshowUsersCalculat:
  4929                           	callstack 27
  4930                           
  4931                           ;Usuaris.c: 148:     return !do_showUsers;
  4932                           
  4933                           ;incstack = 0
  4934  00007A  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4935  00007C  D002               	goto	l4597
  4936  00007E  90D8               	bcf	status,0,c
  4937  000080  0012               	return	
  4938  000082                     l4597:
  4939  000082  80D8               	bsf	status,0,c
  4940  000084  0012               	return		;funcret
  4941  000086                     __end_of_UshowUsersCalculat:
  4942                           	callstack 0
  4943                           
  4944 ;; *************** function _UgetUserName *****************
  4945 ;; Defined at:
  4946 ;;		line 64 in file "Usuaris.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  quin            1    wreg     unsigned char 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  quin            1    7[COMRAM] unsigned char 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  2    5[COMRAM] PTR unsigned char 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2, status,0, prodl, prodh
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1
  4960 ;;      Params:         2       0       0
  4961 ;;      Locals:         1       0       0
  4962 ;;      Temps:          0       0       0
  4963 ;;      Totals:         3       0       0
  4964 ;;Total ram usage:        3 bytes
  4965 ;; Hardware stack levels used: 1
  4966 ;; Hardware stack levels required when called: 2
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_menu
  4971 ;;		_motorSIO
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text25
  4976  001FA8                     __ptext25:
  4977                           	callstack 0
  4978  001FA8                     _UgetUserName:
  4979                           	callstack 27
  4980                           
  4981                           ;incstack = 0
  4982                           ;UgetUserName@quin stored from wreg
  4983  001FA8  6E66               	movwf	UgetUserName@quin^0,c
  4984                           
  4985                           ;Usuaris.c: 65:     return usuaris[quin].username;
  4986  001FAA  5066               	movf	UgetUserName@quin^0,w,c
  4987  001FAC  0D12               	mullw	18
  4988  001FAE  0E00               	movlw	low _usuaris
  4989  001FB0  24F3               	addwf	243,w,c
  4990  001FB2  6E64               	movwf	?_UgetUserName^0,c
  4991  001FB4  0E01               	movlw	high _usuaris
  4992  001FB6  20F4               	addwfc	prodh,w,c
  4993  001FB8  6E65               	movwf	(?_UgetUserName+1)^0,c
  4994  001FBA  0012               	return		;funcret
  4995  001FBC                     __end_of_UgetUserName:
  4996                           	callstack 0
  4997                           
  4998 ;; *************** function _UgetTop5 *****************
  4999 ;; Defined at:
  5000 ;;		line 289 in file "Usuaris.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  quin            1    wreg     unsigned char 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  quin            1    5[COMRAM] unsigned char 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      char 
  5007 ;; Registers used:
  5008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMRAM   BANK0   BANK1
  5014 ;;      Params:         0       0       0
  5015 ;;      Locals:         1       0       0
  5016 ;;      Temps:          0       0       0
  5017 ;;      Totals:         1       0       0
  5018 ;;Total ram usage:        1 bytes
  5019 ;; Hardware stack levels used: 1
  5020 ;; Hardware stack levels required when called: 2
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_menu
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text26
  5029  001FBC                     __ptext26:
  5030                           	callstack 0
  5031  001FBC                     _UgetTop5:
  5032                           	callstack 27
  5033                           
  5034                           ;incstack = 0
  5035                           ;UgetTop5@quin stored from wreg
  5036  001FBC  6E64               	movwf	UgetTop5@quin^0,c
  5037                           
  5038                           ;Usuaris.c: 290:     return puntuacions[quin].indexStruct;
  5039  001FBE  5064               	movf	UgetTop5@quin^0,w,c
  5040  001FC0  0D02               	mullw	2
  5041  001FC2  50F3               	movf	243,w,c
  5042  001FC4  0F98               	addlw	low _puntuacions
  5043  001FC6  D000               	goto	PL66	;call to abstracted procedure
  5044  001FC8                     __end_of_UgetTop5:
  5045                           	callstack 0
  5046  001FC8                     PL66:
  5047                           	callstack 27
  5048  001FC8  6ED9               	movwf	fsr2l,c
  5049  001FCA  6ADA               	clrf	fsr2h,c
  5050  001FCC  50DF               	movf	indf2,w,c
  5051  001FCE  0012               	return		;funcret
  5052  001FD0                     __end_ofPL66:
  5053                           	callstack 0
  5054                           
  5055 ;; *************** function _UgetScore *****************
  5056 ;; Defined at:
  5057 ;;		line 286 in file "Usuaris.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  quin            1    wreg     unsigned char 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  quin            1    5[COMRAM] unsigned char 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      unsigned char 
  5064 ;; Registers used:
  5065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1
  5071 ;;      Params:         0       0       0
  5072 ;;      Locals:         1       0       0
  5073 ;;      Temps:          0       0       0
  5074 ;;      Totals:         1       0       0
  5075 ;;Total ram usage:        1 bytes
  5076 ;; Hardware stack levels used: 1
  5077 ;; Hardware stack levels required when called: 2
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_menu
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text27
  5086  001FF2                     __ptext27:
  5087                           	callstack 0
  5088  001FF2                     _UgetScore:
  5089                           	callstack 27
  5090                           
  5091                           ;incstack = 0
  5092                           ;UgetScore@quin stored from wreg
  5093  001FF2  6E64               	movwf	UgetScore@quin^0,c
  5094                           
  5095                           ;Usuaris.c: 287:     return puntuacions[quin].score;
  5096  001FF4  5064               	movf	UgetScore@quin^0,w,c
  5097  001FF6  0D02               	mullw	2
  5098  001FF8  50F3               	movf	243,w,c
  5099  001FFA  0F99               	addlw	low (_puntuacions+1)
  5100  001FFC  EFE4  F00F         	goto	PL66	;call to abstracted procedure
  5101  002000                     __end_of_UgetScore:
  5102                           	callstack 0
  5103                           
  5104 ;; *************** function _UgetNumUsuaris *****************
  5105 ;; Defined at:
  5106 ;;		line 40 in file "Usuaris.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;		None
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;		None
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  1    wreg      unsigned char 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1
  5120 ;;      Params:         0       0       0
  5121 ;;      Locals:         0       0       0
  5122 ;;      Temps:          0       0       0
  5123 ;;      Totals:         0       0       0
  5124 ;;Total ram usage:        0 bytes
  5125 ;; Hardware stack levels used: 1
  5126 ;; Hardware stack levels required when called: 2
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_menu
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text28
  5135  000190                     __ptext28:
  5136                           	callstack 0
  5137  000190                     _UgetNumUsuaris:
  5138                           	callstack 27
  5139                           
  5140                           ;Usuaris.c: 41:     return numUsuaris;
  5141                           
  5142                           ;incstack = 0
  5143  000190  502D               	movf	_numUsuaris^0,w,c
  5144  000192  0012               	return		;funcret
  5145  000194                     __end_of_UgetNumUsuaris:
  5146                           	callstack 0
  5147                           
  5148 ;; *************** function _UenviaPas *****************
  5149 ;; Defined at:
  5150 ;;		line 56 in file "Usuaris.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  c               1    wreg     unsigned char 
  5153 ;;  pos             1    5[COMRAM] unsigned char 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  c               1    6[COMRAM] unsigned char 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      void 
  5158 ;; Registers used:
  5159 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1
  5165 ;;      Params:         1       0       0
  5166 ;;      Locals:         1       0       0
  5167 ;;      Temps:          0       0       0
  5168 ;;      Totals:         2       0       0
  5169 ;;Total ram usage:        2 bytes
  5170 ;; Hardware stack levels used: 1
  5171 ;; Hardware stack levels required when called: 2
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_menu
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text29
  5180  001FE2                     __ptext29:
  5181                           	callstack 0
  5182  001FE2                     _UenviaPas:
  5183                           	callstack 27
  5184                           
  5185                           ;incstack = 0
  5186                           ;UenviaPas@c stored from wreg
  5187  001FE2  6E65               	movwf	UenviaPas@c^0,c
  5188                           
  5189                           ;Usuaris.c: 57:     tmpPassword[pos] = c;
  5190  001FE4  5064               	movf	UenviaPas@pos^0,w,c
  5191  001FE6  0FAA               	addlw	low _tmpPassword
  5192  001FE8  6ED9               	movwf	fsr2l,c
  5193  001FEA  6ADA               	clrf	fsr2h,c
  5194  001FEC  C065  FFDF         	movff	UenviaPas@c,indf2
  5195  001FF0  0012               	return		;funcret
  5196  001FF2                     __end_of_UenviaPas:
  5197                           	callstack 0
  5198                           
  5199 ;; *************** function _UenviaChar *****************
  5200 ;; Defined at:
  5201 ;;		line 53 in file "Usuaris.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  c               1    wreg     unsigned char 
  5204 ;;  pos             1    5[COMRAM] unsigned char 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  c               1    6[COMRAM] unsigned char 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1    wreg      void 
  5209 ;; Registers used:
  5210 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1
  5216 ;;      Params:         1       0       0
  5217 ;;      Locals:         1       0       0
  5218 ;;      Temps:          0       0       0
  5219 ;;      Totals:         2       0       0
  5220 ;;Total ram usage:        2 bytes
  5221 ;; Hardware stack levels used: 1
  5222 ;; Hardware stack levels required when called: 2
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_menu
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text30
  5231  000036                     __ptext30:
  5232                           	callstack 0
  5233  000036                     _UenviaChar:
  5234                           	callstack 27
  5235                           
  5236                           ;incstack = 0
  5237                           ;UenviaChar@c stored from wreg
  5238  000036  6E65               	movwf	UenviaChar@c^0,c
  5239                           
  5240                           ;Usuaris.c: 54:     tmpUsername[pos] = c;
  5241  000038  5064               	movf	UenviaChar@pos^0,w,c
  5242  00003A  0FB3               	addlw	low _tmpUsername
  5243  00003C  6ED9               	movwf	fsr2l,c
  5244  00003E  6ADA               	clrf	fsr2h,c
  5245  000040  C065  FFDF         	movff	UenviaChar@c,indf2
  5246  000044  0012               	return		;funcret
  5247  000046                     __end_of_UenviaChar:
  5248                           	callstack 0
  5249                           
  5250 ;; *************** function _UcheckExistsNotFinished *****************
  5251 ;; Defined at:
  5252 ;;		line 47 in file "Usuaris.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;		None               void
  5259 ;; Registers used:
  5260 ;;		status,0
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1
  5266 ;;      Params:         0       0       0
  5267 ;;      Locals:         0       0       0
  5268 ;;      Temps:          0       0       0
  5269 ;;      Totals:         0       0       0
  5270 ;;Total ram usage:        0 bytes
  5271 ;; Hardware stack levels used: 1
  5272 ;; Hardware stack levels required when called: 2
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_menu
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text31
  5281  000086                     __ptext31:
  5282                           	callstack 0
  5283  000086                     _UcheckExistsNotFinished:
  5284                           	callstack 27
  5285                           
  5286                           ;Usuaris.c: 48:     return do_check_exists;
  5287                           
  5288                           ;incstack = 0
  5289  000086  BE76               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5290  000088  D002               	goto	l4519
  5291  00008A  90D8               	bcf	status,0,c
  5292  00008C  0012               	return	
  5293  00008E                     l4519:
  5294  00008E  80D8               	bsf	status,0,c
  5295  000090  0012               	return		;funcret
  5296  000092                     __end_of_UcheckExistsNotFinished:
  5297                           	callstack 0
  5298                           
  5299 ;; *************** function _UcheckExistsGetError *****************
  5300 ;; Defined at:
  5301 ;;		line 50 in file "Usuaris.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;		None
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;		None
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      char 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1
  5315 ;;      Params:         0       0       0
  5316 ;;      Locals:         0       0       0
  5317 ;;      Temps:          0       0       0
  5318 ;;      Totals:         0       0       0
  5319 ;;Total ram usage:        0 bytes
  5320 ;; Hardware stack levels used: 1
  5321 ;; Hardware stack levels required when called: 2
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_menu
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text32
  5330  000194                     __ptext32:
  5331                           	callstack 0
  5332  000194                     _UcheckExistsGetError:
  5333                           	callstack 27
  5334                           
  5335                           ;Usuaris.c: 51:     return usuariLoguejat;
  5336                           
  5337                           ;incstack = 0
  5338  000194  504F               	movf	_usuariLoguejat^0,w,c
  5339  000196  0012               	return		;funcret
  5340  000198                     __end_of_UcheckExistsGetError:
  5341                           	callstack 0
  5342                           
  5343 ;; *************** function _UcheckExists *****************
  5344 ;; Defined at:
  5345 ;;		line 44 in file "Usuaris.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		None
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1
  5359 ;;      Params:         0       0       0
  5360 ;;      Locals:         0       0       0
  5361 ;;      Temps:          0       0       0
  5362 ;;      Totals:         0       0       0
  5363 ;;Total ram usage:        0 bytes
  5364 ;; Hardware stack levels used: 1
  5365 ;; Hardware stack levels required when called: 2
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_menu
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text33
  5374  000198                     __ptext33:
  5375                           	callstack 0
  5376  000198                     _UcheckExists:
  5377                           	callstack 27
  5378                           
  5379                           ;Usuaris.c: 45:     do_check_exists = 1;
  5380                           
  5381                           ;incstack = 0
  5382  000198  8E76               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5383  00019A  0012               	return		;funcret
  5384  00019C                     __end_of_UcheckExists:
  5385                           	callstack 0
  5386                           
  5387 ;; *************** function _URegister *****************
  5388 ;; Defined at:
  5389 ;;		line 60 in file "Usuaris.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		None
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1
  5403 ;;      Params:         0       0       0
  5404 ;;      Locals:         0       0       0
  5405 ;;      Temps:          0       0       0
  5406 ;;      Totals:         0       0       0
  5407 ;;Total ram usage:        0 bytes
  5408 ;; Hardware stack levels used: 1
  5409 ;; Hardware stack levels required when called: 2
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_menu
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text34
  5418  00019C                     __ptext34:
  5419                           	callstack 0
  5420  00019C                     _URegister:
  5421                           	callstack 27
  5422                           
  5423                           ;Usuaris.c: 61:     do_register = 1;
  5424                           
  5425                           ;incstack = 0
  5426  00019C  8C76               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5427  00019E  0012               	return		;funcret
  5428  0001A0                     __end_of_URegister:
  5429                           	callstack 0
  5430                           
  5431 ;; *************** function _SiFerMenu *****************
  5432 ;; Defined at:
  5433 ;;		line 19 in file "GestioLCD.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		None
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1
  5447 ;;      Params:         0       0       0
  5448 ;;      Locals:         0       0       0
  5449 ;;      Temps:          0       0       0
  5450 ;;      Totals:         0       0       0
  5451 ;;Total ram usage:        0 bytes
  5452 ;; Hardware stack levels used: 1
  5453 ;; Hardware stack levels required when called: 2
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_menu
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text35
  5462  0001A0                     __ptext35:
  5463                           	callstack 0
  5464  0001A0                     _SiFerMenu:
  5465                           	callstack 27
  5466                           
  5467                           ;GestioLCD.c: 20:     ferMenu = 1;
  5468                           
  5469                           ;incstack = 0
  5470  0001A0  8476               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5471  0001A2  0012               	return		;funcret
  5472  0001A4                     __end_of_SiFerMenu:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _SMSon *****************
  5476 ;; Defined at:
  5477 ;;		line 128 in file "Ssms.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      void 
  5484 ;; Registers used:
  5485 ;;		None
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1
  5491 ;;      Params:         0       0       0
  5492 ;;      Locals:         0       0       0
  5493 ;;      Temps:          0       0       0
  5494 ;;      Totals:         0       0       0
  5495 ;;Total ram usage:        0 bytes
  5496 ;; Hardware stack levels used: 1
  5497 ;; Hardware stack levels required when called: 2
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_menu
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text36
  5506  000162                     __ptext36:
  5507                           	callstack 0
  5508  000162                     _SMSon:
  5509                           	callstack 27
  5510                           
  5511                           ;Ssms.c: 129:     setSMSon = 1;
  5512                           
  5513                           ;incstack = 0
  5514  000162  8277               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5515                           
  5516                           ;Ssms.c: 130:     novaTecla = -1;
  5517  000164  6854               	setf	_novaTecla^0,c
  5518  000166  0012               	return		;funcret
  5519  000168                     __end_of_SMSon:
  5520                           	callstack 0
  5521                           
  5522 ;; *************** function _SMSoff *****************
  5523 ;; Defined at:
  5524 ;;		line 133 in file "Ssms.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		None
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1
  5538 ;;      Params:         0       0       0
  5539 ;;      Locals:         0       0       0
  5540 ;;      Temps:          0       0       0
  5541 ;;      Totals:         0       0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; Hardware stack levels required when called: 2
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_menu
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text37
  5553  000168                     __ptext37:
  5554                           	callstack 0
  5555  000168                     _SMSoff:
  5556                           	callstack 27
  5557                           
  5558                           ;Ssms.c: 134:     setSMSon = 0;
  5559                           
  5560                           ;incstack = 0
  5561  000168  9277               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5562                           
  5563                           ;Ssms.c: 135:     novaTecla = -1;
  5564  00016A  6854               	setf	_novaTecla^0,c
  5565  00016C  0012               	return		;funcret
  5566  00016E                     __end_of_SMSoff:
  5567                           	callstack 0
  5568                           
  5569 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5570 ;; Defined at:
  5571 ;;		line 44 in file "SIO.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;		None
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;		None
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      char 
  5578 ;; Registers used:
  5579 ;;		wreg, status,2
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1
  5585 ;;      Params:         0       0       0
  5586 ;;      Locals:         0       0       0
  5587 ;;      Temps:          0       0       0
  5588 ;;      Totals:         0       0       0
  5589 ;;Total ram usage:        0 bytes
  5590 ;; Hardware stack levels used: 1
  5591 ;; Hardware stack levels required when called: 2
  5592 ;; This function calls:
  5593 ;;		Nothing
  5594 ;; This function is called by:
  5595 ;;		_menu
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           	psect	text38
  5600  0001A4                     __ptext38:
  5601                           	callstack 0
  5602  0001A4                     _SIOHaAcabatPuntuacions:
  5603                           	callstack 27
  5604                           
  5605                           ;SIO.c: 45:     return usuariActualSIO;
  5606                           
  5607                           ;incstack = 0
  5608  0001A4  504A               	movf	_usuariActualSIO^0,w,c
  5609  0001A6  0012               	return		;funcret
  5610  0001A8                     __end_of_SIOHaAcabatPuntuacions:
  5611                           	callstack 0
  5612                           
  5613 ;; *************** function _NoFerMenu *****************
  5614 ;; Defined at:
  5615 ;;		line 22 in file "GestioLCD.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;		None
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		None
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1
  5629 ;;      Params:         0       0       0
  5630 ;;      Locals:         0       0       0
  5631 ;;      Temps:          0       0       0
  5632 ;;      Totals:         0       0       0
  5633 ;;Total ram usage:        0 bytes
  5634 ;; Hardware stack levels used: 1
  5635 ;; Hardware stack levels required when called: 2
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_menu
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text39
  5644  0001A8                     __ptext39:
  5645                           	callstack 0
  5646  0001A8                     _NoFerMenu:
  5647                           	callstack 27
  5648                           
  5649                           ;GestioLCD.c: 23:     ferMenu = 0;
  5650                           
  5651                           ;incstack = 0
  5652  0001A8  9476               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5653  0001AA  0012               	return		;funcret
  5654  0001AC                     __end_of_NoFerMenu:
  5655                           	callstack 0
  5656                           
  5657 ;; *************** function _LcScroll *****************
  5658 ;; Defined at:
  5659 ;;		line 37 in file "LcTLCD.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;		None
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      void 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1
  5673 ;;      Params:         0       0       0
  5674 ;;      Locals:         0       0       0
  5675 ;;      Temps:          0       0       0
  5676 ;;      Totals:         0       0       0
  5677 ;;Total ram usage:        0 bytes
  5678 ;; Hardware stack levels used: 1
  5679 ;; Hardware stack levels required when called: 4
  5680 ;; This function calls:
  5681 ;;		_CantaIR
  5682 ;; This function is called by:
  5683 ;;		_menu
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text40
  5688  00016E                     __ptext40:
  5689                           	callstack 0
  5690  00016E                     _LcScroll:
  5691                           	callstack 25
  5692                           
  5693                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5694                           
  5695                           ;incstack = 0
  5696  00016E  0E18               	movlw	24
  5697  000170  EF92  F00F         	goto	_CantaIR
  5698  000174                     __end_of_LcScroll:
  5699                           	callstack 0
  5700                           
  5701 ;; *************** function _JnovaTecla *****************
  5702 ;; Defined at:
  5703 ;;		line 16 in file "Joc.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  tecla           1    wreg     char 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;  tecla           1    5[COMRAM] char 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1
  5717 ;;      Params:         0       0       0
  5718 ;;      Locals:         1       0       0
  5719 ;;      Temps:          0       0       0
  5720 ;;      Totals:         1       0       0
  5721 ;;Total ram usage:        1 bytes
  5722 ;; Hardware stack levels used: 1
  5723 ;; Hardware stack levels required when called: 2
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_menu
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text41
  5732  0000E4                     __ptext41:
  5733                           	callstack 0
  5734  0000E4                     _JnovaTecla:
  5735                           	callstack 27
  5736                           
  5737                           ;incstack = 0
  5738                           ;JnovaTecla@tecla stored from wreg
  5739  0000E4  6E64               	movwf	JnovaTecla@tecla^0,c
  5740                           
  5741                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5742  0000E6  C064  F04B         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5743  0000EA  0012               	return		;funcret
  5744  0000EC                     __end_of_JnovaTecla:
  5745                           	callstack 0
  5746                           
  5747 ;; *************** function _JnovaDireccio *****************
  5748 ;; Defined at:
  5749 ;;		line 19 in file "Joc.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  dir             1    wreg     unsigned char 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  dir             1    5[COMRAM] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		wreg
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1
  5763 ;;      Params:         0       0       0
  5764 ;;      Locals:         1       0       0
  5765 ;;      Temps:          0       0       0
  5766 ;;      Totals:         1       0       0
  5767 ;;Total ram usage:        1 bytes
  5768 ;; Hardware stack levels used: 1
  5769 ;; Hardware stack levels required when called: 2
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_menu
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text42
  5778  0000EC                     __ptext42:
  5779                           	callstack 0
  5780  0000EC                     _JnovaDireccio:
  5781                           	callstack 27
  5782                           
  5783                           ;incstack = 0
  5784                           ;JnovaDireccio@dir stored from wreg
  5785  0000EC  6E64               	movwf	JnovaDireccio@dir^0,c
  5786                           
  5787                           ;Joc.c: 20:     direccioJoc = dir;
  5788  0000EE  C064  F013         	movff	JnovaDireccio@dir,_direccioJoc
  5789  0000F2  0012               	return		;funcret
  5790  0000F4                     __end_of_JnovaDireccio:
  5791                           	callstack 0
  5792                           
  5793 ;; *************** function _JendGame *****************
  5794 ;; Defined at:
  5795 ;;		line 23 in file "Joc.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;		None
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;		None
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  1    wreg      void 
  5802 ;; Registers used:
  5803 ;;		None
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMRAM   BANK0   BANK1
  5809 ;;      Params:         0       0       0
  5810 ;;      Locals:         0       0       0
  5811 ;;      Temps:          0       0       0
  5812 ;;      Totals:         0       0       0
  5813 ;;Total ram usage:        0 bytes
  5814 ;; Hardware stack levels used: 1
  5815 ;; Hardware stack levels required when called: 2
  5816 ;; This function calls:
  5817 ;;		Nothing
  5818 ;; This function is called by:
  5819 ;;		_menu
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text43
  5824  0001AC                     __ptext43:
  5825                           	callstack 0
  5826  0001AC                     _JendGame:
  5827                           	callstack 27
  5828                           
  5829                           ;Joc.c: 24:     jugantJoc = 0;
  5830                           
  5831                           ;incstack = 0
  5832  0001AC  9675               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5833  0001AE  0012               	return		;funcret
  5834  0001B0                     __end_of_JendGame:
  5835                           	callstack 0
  5836                           
  5837 ;; *************** function _JJuguem *****************
  5838 ;; Defined at:
  5839 ;;		line 13 in file "Joc.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  usuari          1    wreg     unsigned char 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  usuari          1    5[COMRAM] unsigned char 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      void 
  5846 ;; Registers used:
  5847 ;;		wreg
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1
  5853 ;;      Params:         0       0       0
  5854 ;;      Locals:         1       0       0
  5855 ;;      Temps:          0       0       0
  5856 ;;      Totals:         1       0       0
  5857 ;;Total ram usage:        1 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; Hardware stack levels required when called: 2
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_menu
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text44
  5868  0000F4                     __ptext44:
  5869                           	callstack 0
  5870  0000F4                     _JJuguem:
  5871                           	callstack 27
  5872                           
  5873                           ;incstack = 0
  5874                           ;JJuguem@usuari stored from wreg
  5875  0000F4  6E64               	movwf	JJuguem@usuari^0,c
  5876                           
  5877                           ;Joc.c: 14:     usuariJoc = usuari;
  5878  0000F6  C064  F04C         	movff	JJuguem@usuari,_usuariJoc
  5879  0000FA  0012               	return		;funcret
  5880  0000FC                     __end_of_JJuguem:
  5881                           	callstack 0
  5882                           
  5883 ;; *************** function _HActualitzaHora *****************
  5884 ;; Defined at:
  5885 ;;		line 16 in file "Hora.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5888 ;;		 -> horaTmp(4), 
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      void 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1
  5900 ;;      Params:         1       0       0
  5901 ;;      Locals:         0       0       0
  5902 ;;      Temps:          0       0       0
  5903 ;;      Totals:         1       0       0
  5904 ;;Total ram usage:        1 bytes
  5905 ;; Hardware stack levels used: 1
  5906 ;; Hardware stack levels required when called: 2
  5907 ;; This function calls:
  5908 ;;		Nothing
  5909 ;; This function is called by:
  5910 ;;		_menu
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text45
  5915  001E5E                     __ptext45:
  5916                           	callstack 0
  5917  001E5E                     _HActualitzaHora:
  5918                           	callstack 27
  5919                           
  5920                           ;Hora.c: 17:     hora[0] = nova[0];
  5921                           
  5922                           ;incstack = 0
  5923  001E5E  5064               	movf	HActualitzaHora@nova^0,w,c
  5924  001E60  6ED9               	movwf	fsr2l,c
  5925  001E62  6ADA               	clrf	fsr2h,c
  5926  001E64  50DF               	movf	indf2,w,c
  5927  001E66  6E56               	movwf	_hora^0,c
  5928                           
  5929                           ;Hora.c: 18:     hora[1] = nova[1];
  5930  001E68  5064               	movf	HActualitzaHora@nova^0,w,c
  5931  001E6A  EC9D  F006         	call	PL68	;call to abstracted procedure
  5932  001E6E  6E57               	movwf	(_hora+1)^0,c
  5933                           
  5934                           ;Hora.c: 19:     hora[3] = nova[2];
  5935  001E70  5064               	movf	HActualitzaHora@nova^0,w,c
  5936  001E72  EC8C  F006         	call	PL50	;call to abstracted procedure
  5937  001E76  6E59               	movwf	(_hora+3)^0,c
  5938                           
  5939                           ;Hora.c: 20:     hora[4] = nova[3];
  5940  001E78  5064               	movf	HActualitzaHora@nova^0,w,c
  5941  001E7A  EC92  F006         	call	PL52	;call to abstracted procedure
  5942  001E7E  6E5A               	movwf	(_hora+4)^0,c
  5943  001E80  0012               	return		;funcret
  5944  001E82                     __end_of_HActualitzaHora:
  5945                           	callstack 0
  5946                           
  5947 ;; *************** function _GLCDMostraMenu *****************
  5948 ;; Defined at:
  5949 ;;		line 30 in file "GestioLCD.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  num             1    wreg     unsigned char 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  num             1    5[COMRAM] unsigned char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1
  5963 ;;      Params:         0       0       0
  5964 ;;      Locals:         1       0       0
  5965 ;;      Temps:          0       0       0
  5966 ;;      Totals:         1       0       0
  5967 ;;Total ram usage:        1 bytes
  5968 ;; Hardware stack levels used: 1
  5969 ;; Hardware stack levels required when called: 2
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		_menu
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text46
  5978  000092                     __ptext46:
  5979                           	callstack 0
  5980  000092                     _GLCDMostraMenu:
  5981                           	callstack 27
  5982                           
  5983                           ;incstack = 0
  5984                           ;GLCDMostraMenu@num stored from wreg
  5985  000092  6E64               	movwf	GLCDMostraMenu@num^0,c
  5986                           
  5987                           ;GestioLCD.c: 31:     newString = 1;
  5988  000094  8276               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5989                           
  5990                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5991  000096  C064  F021         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5992                           
  5993                           ;GestioLCD.c: 33:     ferMenu = 1;
  5994  00009A  8476               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5995  00009C  0012               	return		;funcret
  5996  00009E                     __end_of_GLCDMostraMenu:
  5997                           	callstack 0
  5998                           
  5999 ;; *************** function _CToAobtenir *****************
  6000 ;; Defined at:
  6001 ;;		line 7 in file "CtoA.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;		None
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;		None
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      PTR unsigned char 
  6008 ;; Registers used:
  6009 ;;		wreg
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1
  6015 ;;      Params:         2       0       0
  6016 ;;      Locals:         0       0       0
  6017 ;;      Temps:          0       0       0
  6018 ;;      Totals:         2       0       0
  6019 ;;Total ram usage:        2 bytes
  6020 ;; Hardware stack levels used: 1
  6021 ;; Hardware stack levels required when called: 2
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		_menu
  6026 ;;		_motorSIO
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text47
  6031  0001B0                     __ptext47:
  6032                           	callstack 0
  6033  0001B0                     _CToAobtenir:
  6034                           	callstack 27
  6035                           
  6036                           ;CtoA.c: 8:     return stringScore;
  6037                           
  6038                           ;incstack = 0
  6039  0001B0  0E5C               	movlw	_stringScore& (0+255)
  6040  0001B2  0012               	return		;funcret
  6041  0001B4                     __end_of_CToAobtenir:
  6042                           	callstack 0
  6043                           
  6044 ;; *************** function _CToAHaAcabat *****************
  6045 ;; Defined at:
  6046 ;;		line 10 in file "CtoA.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;		None
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;		None
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      unsigned char 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1
  6060 ;;      Params:         0       0       0
  6061 ;;      Locals:         0       0       0
  6062 ;;      Temps:          0       0       0
  6063 ;;      Totals:         0       0       0
  6064 ;;Total ram usage:        0 bytes
  6065 ;; Hardware stack levels used: 1
  6066 ;; Hardware stack levels required when called: 2
  6067 ;; This function calls:
  6068 ;;		Nothing
  6069 ;; This function is called by:
  6070 ;;		_menu
  6071 ;;		_motorSIO
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text48
  6076  0001B4                     __ptext48:
  6077                           	callstack 0
  6078  0001B4                     _CToAHaAcabat:
  6079                           	callstack 27
  6080                           
  6081                           ;CtoA.c: 11:     return convertir;
  6082                           
  6083                           ;incstack = 0
  6084  0001B4  5047               	movf	_convertir^0,w,c
  6085  0001B6  0012               	return		;funcret
  6086  0001B8                     __end_of_CToAHaAcabat:
  6087                           	callstack 0
  6088                           
  6089 ;; *************** function _CToAConverteix *****************
  6090 ;; Defined at:
  6091 ;;		line 14 in file "CtoA.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;  numero          1    wreg     unsigned char 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;  numero          1    5[COMRAM] unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      void 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1
  6105 ;;      Params:         0       0       0
  6106 ;;      Locals:         1       0       0
  6107 ;;      Temps:          0       0       0
  6108 ;;      Totals:         1       0       0
  6109 ;;Total ram usage:        1 bytes
  6110 ;; Hardware stack levels used: 1
  6111 ;; Hardware stack levels required when called: 3
  6112 ;; This function calls:
  6113 ;;		_CToAReset
  6114 ;; This function is called by:
  6115 ;;		_menu
  6116 ;;		_motorSIO
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           	psect	text49
  6121  00009E                     __ptext49:
  6122                           	callstack 0
  6123  00009E                     _CToAConverteix:
  6124                           	callstack 26
  6125                           
  6126                           ;incstack = 0
  6127                           ;CToAConverteix@numero stored from wreg
  6128  00009E  6E64               	movwf	CToAConverteix@numero^0,c
  6129                           
  6130                           ;CtoA.c: 15:     CToAReset();
  6131  0000A0  EC7E  F000         	call	_CToAReset	;wreg free
  6132                           
  6133                           ;CtoA.c: 16:     convertir = numero;
  6134  0000A4  C064  F047         	movff	CToAConverteix@numero,_convertir
  6135  0000A8  0012               	return		;funcret
  6136  0000AA                     __end_of_CToAConverteix:
  6137                           	callstack 0
  6138                           
  6139 ;; *************** function _CToAReset *****************
  6140 ;; Defined at:
  6141 ;;		line 18 in file "CtoA.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;		None
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;		None
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  1    wreg      void 
  6148 ;; Registers used:
  6149 ;;		wreg, status,2
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1
  6155 ;;      Params:         0       0       0
  6156 ;;      Locals:         0       0       0
  6157 ;;      Temps:          0       0       0
  6158 ;;      Totals:         0       0       0
  6159 ;;Total ram usage:        0 bytes
  6160 ;; Hardware stack levels used: 1
  6161 ;; Hardware stack levels required when called: 2
  6162 ;; This function calls:
  6163 ;;		Nothing
  6164 ;; This function is called by:
  6165 ;;		_CToAConverteix
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text50
  6170  0000FC                     __ptext50:
  6171                           	callstack 0
  6172  0000FC                     _CToAReset:
  6173                           	callstack 26
  6174                           
  6175                           ;CtoA.c: 19:     stringScore[0] = '0';
  6176                           
  6177                           ;incstack = 0
  6178  0000FC  0E30               	movlw	48
  6179  0000FE  6E5C               	movwf	_stringScore^0,c
  6180                           
  6181                           ;CtoA.c: 20:     stringScore[1] = '0';
  6182  000100  6E5D               	movwf	(_stringScore+1)^0,c
  6183  000102  0C30               	retlw	48	;funcret
  6184  000104                     __end_of_CToAReset:
  6185                           	callstack 0
  6186                           
  6187 ;; *************** function _init_ports *****************
  6188 ;; Defined at:
  6189 ;;		line 24 in file "main.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;		None
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      void 
  6196 ;; Registers used:
  6197 ;;		wreg, status,2
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1
  6203 ;;      Params:         0       0       0
  6204 ;;      Locals:         0       0       0
  6205 ;;      Temps:          0       0       0
  6206 ;;      Totals:         0       0       0
  6207 ;;Total ram usage:        0 bytes
  6208 ;; Hardware stack levels used: 1
  6209 ;; Hardware stack levels required when called: 2
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		_main
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text51
  6218  001EEA                     __ptext51:
  6219                           	callstack 0
  6220  001EEA                     _init_ports:
  6221                           	callstack 28
  6222                           
  6223                           ;incstack = 0
  6224  001EEA  0E03               	movlw	3
  6225  001EEC  6E92               	movwf	146,c	;volatile
  6226  001EEE  0EE0               	movlw	224
  6227  001EF0  6E93               	movwf	147,c	;volatile
  6228  001EF2  968A               	bcf	138,3,c	;volatile
  6229  001EF4  908A               	bcf	138,0,c	;volatile
  6230  001EF6  828A               	bsf	138,1,c	;volatile
  6231                           
  6232                           ;main.c: 48:     TRISC = 0xC0;
  6233  001EF8  0EC0               	movlw	192
  6234  001EFA  6E94               	movwf	148,c	;volatile
  6235                           
  6236                           ;main.c: 58:     TRISD = 0x8F;
  6237  001EFC  0E8F               	movlw	143
  6238  001EFE  6E95               	movwf	149,c	;volatile
  6239                           
  6240                           ;main.c: 59:     LATD = 0x00;
  6241  001F00  6A8C               	clrf	140,c	;volatile
  6242                           
  6243                           ;main.c: 62:     EECON1bits.EEPGD = 1;
  6244  001F02  8EA6               	bsf	166,7,c	;volsfr
  6245                           
  6246                           ;main.c: 63:     EECON1bits.CFGS = 0;
  6247  001F04  9CA6               	bcf	166,6,c	;volsfr
  6248  001F06  0012               	return		;funcret
  6249  001F08                     __end_of_init_ports:
  6250                           	callstack 0
  6251                           
  6252 ;; *************** function _init_eusart *****************
  6253 ;; Defined at:
  6254 ;;		line 66 in file "main.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;		None
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  1    wreg      void 
  6261 ;; Registers used:
  6262 ;;		wreg, status,2
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1
  6268 ;;      Params:         0       0       0
  6269 ;;      Locals:         0       0       0
  6270 ;;      Temps:          0       0       0
  6271 ;;      Totals:         0       0       0
  6272 ;;Total ram usage:        0 bytes
  6273 ;; Hardware stack levels used: 1
  6274 ;; Hardware stack levels required when called: 2
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_main
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text52
  6283  001F92                     __ptext52:
  6284                           	callstack 0
  6285  001F92                     _init_eusart:
  6286                           	callstack 28
  6287                           
  6288                           ;main.c: 67:     TXSTA = 0x24;
  6289                           
  6290                           ;incstack = 0
  6291  001F92  0E24               	movlw	36
  6292  001F94  6EAC               	movwf	172,c	;volatile
  6293                           
  6294                           ;main.c: 68:     RCSTA = 0x90;
  6295  001F96  0E90               	movlw	144
  6296  001F98  6EAB               	movwf	171,c	;volatile
  6297                           
  6298                           ;main.c: 69:     BAUDCON = 0x08;
  6299  001F9A  0E08               	movlw	8
  6300  001F9C  6EB8               	movwf	184,c	;volatile
  6301                           
  6302                           ;main.c: 70:     SPBRGH = 0x04;
  6303  001F9E  0E04               	movlw	4
  6304  001FA0  6EB0               	movwf	176,c	;volatile
  6305                           
  6306                           ;main.c: 71:     SPBRG = 0x10;
  6307  001FA2  0E10               	movlw	16
  6308  001FA4  6EAF               	movwf	175,c	;volatile
  6309  001FA6  0C10               	retlw	16	;funcret
  6310  001FA8                     __end_of_init_eusart:
  6311                           	callstack 0
  6312                           
  6313 ;; *************** function _initSIO *****************
  6314 ;; Defined at:
  6315 ;;		line 24 in file "SIO.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;		None
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;		None
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      void 
  6322 ;; Registers used:
  6323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1
  6329 ;;      Params:         0       0       0
  6330 ;;      Locals:         0       0       0
  6331 ;;      Temps:          0       0       0
  6332 ;;      Totals:         0       0       0
  6333 ;;Total ram usage:        0 bytes
  6334 ;; Hardware stack levels used: 1
  6335 ;; Hardware stack levels required when called: 3
  6336 ;; This function calls:
  6337 ;;		_TiGetTimer
  6338 ;; This function is called by:
  6339 ;;		_main
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text53
  6344  000104                     __ptext53:
  6345                           	callstack 0
  6346  000104                     _initSIO:
  6347                           	callstack 27
  6348                           
  6349                           ;SIO.c: 25:     timerSIO = TiGetTimer();
  6350                           
  6351                           ;incstack = 0
  6352  000104  ECBB  F00E         	call	_TiGetTimer	;wreg free
  6353  000108  6E11               	movwf	_timerSIO^0,c
  6354  00010A  0012               	return		;funcret
  6355  00010C                     __end_of_initSIO:
  6356                           	callstack 0
  6357                           
  6358 ;; *************** function _initHora *****************
  6359 ;; Defined at:
  6360 ;;		line 12 in file "Hora.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;		None
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;		None
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  1    wreg      void 
  6367 ;; Registers used:
  6368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMRAM   BANK0   BANK1
  6374 ;;      Params:         0       0       0
  6375 ;;      Locals:         0       0       0
  6376 ;;      Temps:          0       0       0
  6377 ;;      Totals:         0       0       0
  6378 ;;Total ram usage:        0 bytes
  6379 ;; Hardware stack levels used: 1
  6380 ;; Hardware stack levels required when called: 3
  6381 ;; This function calls:
  6382 ;;		_TiGetTimer
  6383 ;; This function is called by:
  6384 ;;		_main
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text54
  6389  00010C                     __ptext54:
  6390                           	callstack 0
  6391  00010C                     _initHora:
  6392                           	callstack 27
  6393                           
  6394                           ;Hora.c: 13:     timerHora = TiGetTimer();
  6395                           
  6396                           ;incstack = 0
  6397  00010C  ECBB  F00E         	call	_TiGetTimer	;wreg free
  6398  000110  6E16               	movwf	_timerHora^0,c
  6399  000112  0012               	return		;funcret
  6400  000114                     __end_of_initHora:
  6401                           	callstack 0
  6402                           
  6403 ;; *************** function _initAltaveu *****************
  6404 ;; Defined at:
  6405 ;;		line 10 in file "Altaveu.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      void 
  6412 ;; Registers used:
  6413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1
  6419 ;;      Params:         0       0       0
  6420 ;;      Locals:         0       0       0
  6421 ;;      Temps:          0       0       0
  6422 ;;      Totals:         0       0       0
  6423 ;;Total ram usage:        0 bytes
  6424 ;; Hardware stack levels used: 1
  6425 ;; Hardware stack levels required when called: 3
  6426 ;; This function calls:
  6427 ;;		_TiGetTimer
  6428 ;; This function is called by:
  6429 ;;		_main
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text55
  6434  000114                     __ptext55:
  6435                           	callstack 0
  6436  000114                     _initAltaveu:
  6437                           	callstack 27
  6438                           
  6439                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  6440                           
  6441                           ;incstack = 0
  6442  000114  ECBB  F00E         	call	_TiGetTimer	;wreg free
  6443  000118  6E25               	movwf	_timerAltaveu^0,c
  6444  00011A  0012               	return		;funcret
  6445  00011C                     __end_of_initAltaveu:
  6446                           	callstack 0
  6447                           
  6448 ;; *************** function _UmotorUsers *****************
  6449 ;; Defined at:
  6450 ;;		line 151 in file "Usuaris.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;		None
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;		None
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1    wreg      void 
  6457 ;; Registers used:
  6458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMRAM   BANK0   BANK1
  6464 ;;      Params:         0       0       0
  6465 ;;      Locals:         0       0       0
  6466 ;;      Temps:          2       0       0
  6467 ;;      Totals:         2       0       0
  6468 ;;Total ram usage:        2 bytes
  6469 ;; Hardware stack levels used: 1
  6470 ;; Hardware stack levels required when called: 3
  6471 ;; This function calls:
  6472 ;;		_compareStrings
  6473 ;;		_escriureCharEEPROM
  6474 ;; This function is called by:
  6475 ;;		_main
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text56
  6480  000FDC                     __ptext56:
  6481                           	callstack 0
  6482  000FDC                     _UmotorUsers:
  6483                           	callstack 27
  6484                           
  6485                           ;Usuaris.c: 152:     static char state = 0;;Usuaris.c: 154:  switch(state) {
  6486                           
  6487                           ;incstack = 0
  6488  000FDC  D0FE               	goto	l6103
  6489  000FDE                     l767:
  6490                           
  6491                           ;Usuaris.c: 156:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  6492  000FDE  AE76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6493  000FE0  BC76               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6494  000FE2  D006               	goto	l768
  6495  000FE4  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6496  000FE6  B876               	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6497  000FE8  D003               	goto	l768
  6498                           
  6499                           ;Usuaris.c: 157:     i = 0;
  6500  000FEA  6A2A               	clrf	_i^0,c
  6501                           
  6502                           ;Usuaris.c: 158:     j = 0;
  6503  000FEC  6A29               	clrf	_j^0,c
  6504                           
  6505                           ;Usuaris.c: 159:    }
  6506  000FEE  0012               	return	
  6507  000FF0                     l768:
  6508  000FF0  AE76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6509  000FF2  D003               	goto	l770
  6510                           
  6511                           ;Usuaris.c: 161:     usuariLoguejat = -1;
  6512  000FF4  684F               	setf	_usuariLoguejat^0,c
  6513  000FF6                     l5953:
  6514                           
  6515                           ;Usuaris.c: 162:     state++;
  6516  000FF6  2A27               	incf	UmotorUsers@state^0,f,c
  6517                           
  6518                           ;Usuaris.c: 163:    }
  6519  000FF8  0012               	return	
  6520  000FFA                     l770:
  6521  000FFA  AC76               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6522  000FFC  D00B               	goto	l772
  6523                           
  6524                           ;Usuaris.c: 165:     if(numUsuaris != 8) numUsuaris++;
  6525  000FFE  0E08               	movlw	8
  6526  001000  182D               	xorwf	_numUsuaris^0,w,c
  6527  001002  E001               	bz	l5959
  6528  001004  2A2D               	incf	_numUsuaris^0,f,c
  6529  001006                     l5959:
  6530                           
  6531                           ;Usuaris.c: 167:     escriureCharEEPROM(numUsuaris,0);
  6532  001006  6A64               	clrf	escriureCharEEPROM@pos^0,c
  6533  001008  502D               	movf	_numUsuaris^0,w,c
  6534  00100A  ECE5  F00E         	call	_escriureCharEEPROM
  6535                           
  6536                           ;Usuaris.c: 168:     state = 2;
  6537  00100E  0E02               	movlw	2
  6538  001010  6E27               	movwf	UmotorUsers@state^0,c
  6539                           
  6540                           ;Usuaris.c: 169:    }
  6541  001012  0C02               	retlw	2
  6542  001014                     l772:
  6543  001014  AA76               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6544  001016  D016               	goto	l775
  6545                           
  6546                           ;Usuaris.c: 171:     arrayShowUsers[0] = usuariLoguejat;
  6547  001018  C04F  F0A2         	movff	_usuariLoguejat,_arrayShowUsers
  6548                           
  6549                           ;Usuaris.c: 172:     arrayShowUsers[1] = -1;
  6550  00101C  0100               	movlb	0	; () banked
  6551  00101E  69A3               	setf	(_arrayShowUsers+1)& (0+255),b
  6552                           
  6553                           ;Usuaris.c: 173:     arrayShowUsers[2] = -1;
  6554  001020  69A4               	setf	(_arrayShowUsers+2)& (0+255),b
  6555                           
  6556                           ;Usuaris.c: 174:     arrayShowUsers[3] = -1;
  6557  001022  69A5               	setf	(_arrayShowUsers+3)& (0+255),b
  6558                           
  6559                           ;Usuaris.c: 175:     arrayShowUsers[4] = -1;
  6560  001024  69A6               	setf	(_arrayShowUsers+4)& (0+255),b
  6561                           
  6562                           ;Usuaris.c: 176:     arrayShowUsers[5] = -1;
  6563  001026  69A7               	setf	(_arrayShowUsers+5)& (0+255),b
  6564                           
  6565                           ;Usuaris.c: 177:     arrayShowUsers[6] = -1;
  6566  001028  69A8               	setf	(_arrayShowUsers+6)& (0+255),b
  6567                           
  6568                           ;Usuaris.c: 178:     arrayShowUsers[7] = -1;
  6569  00102A  69A9               	setf	(_arrayShowUsers+7)& (0+255),b
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;Usuaris.c: 179:     i = 1;
  6573  00102C  0E01               	movlw	1
  6574  00102E  6E2A               	movwf	_i^0,c
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;Usuaris.c: 180:     if(numUsuaris < 7) {
  6578  001030  0E07               	movlw	7
  6579  001032  602D               	cpfslt	_numUsuaris^0,c
  6580  001034  D002               	goto	l776
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;Usuaris.c: 181:       j = 0;
  6584  001036  6A29               	clrf	_j^0,c
  6585                           
  6586                           ;Usuaris.c: 182:     }
  6587  001038  D002               	goto	l5971
  6588  00103A                     l776:
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;Usuaris.c: 184:       j = indexNextUserStruct;
  6592  00103A  C02B  F029         	movff	_indexNextUserStruct,_j
  6593  00103E                     l5971:
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;Usuaris.c: 186:     state = 5;
  6597  00103E  0E05               	movlw	5
  6598  001040  6E27               	movwf	UmotorUsers@state^0,c
  6599                           
  6600                           ;Usuaris.c: 187:    }
  6601  001042  0C05               	retlw	5
  6602  001044                     l775:
  6603  001044  A876               	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6604  001046  0012               	return	
  6605                           
  6606                           ;Usuaris.c: 189:     do_updateScore = 0;
  6607  001048  9876               	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6608                           
  6609                           ;Usuaris.c: 190:     state = 6;
  6610  00104A  0E06               	movlw	6
  6611  00104C  6E27               	movwf	UmotorUsers@state^0,c
  6612  00104E  0C06               	retlw	6
  6613  001050                     l5977:
  6614                           
  6615                           ;Usuaris.c: 194:    if (i < numUsuaris) {
  6616  001050  502D               	movf	_numUsuaris^0,w,c
  6617  001052  5C2A               	subwf	_i^0,w,c
  6618  001054  E212               	bc	l5985
  6619                           
  6620                           ;Usuaris.c: 195:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6621  001056  0EB3               	movlw	low _tmpUsername
  6622  001058  6E64               	movwf	compareStrings@a^0,c
  6623  00105A  502A               	movf	_i^0,w,c
  6624  00105C  0D12               	mullw	18
  6625  00105E  0E00               	movlw	low _usuaris
  6626  001060  24F3               	addwf	243,w,c
  6627  001062  6E65               	movwf	compareStrings@b^0,c
  6628  001064  0E01               	movlw	high _usuaris
  6629  001066  20F4               	addwfc	prodh,w,c
  6630  001068  6E66               	movwf	(compareStrings@b+1)^0,c
  6631  00106A  EC2D  F00E         	call	_compareStrings	;wreg free
  6632  00106E  0900               	iorlw	0
  6633  001070  E102               	bnz	l5983
  6634                           
  6635                           ;Usuaris.c: 196:      usuariLoguejat = i;
  6636  001072  C02A  F04F         	movff	_i,_usuariLoguejat
  6637  001076                     l5983:
  6638                           
  6639                           ;Usuaris.c: 199:     i++;
  6640  001076  2A2A               	incf	_i^0,f,c
  6641                           
  6642                           ;Usuaris.c: 200:    }
  6643  001078  0012               	return	
  6644  00107A                     l5985:
  6645  00107A  502D               	movf	_numUsuaris^0,w,c
  6646  00107C  182A               	xorwf	_i^0,w,c
  6647  00107E  A4D8               	btfss	status,2,c
  6648  001080  0012               	return	
  6649                           
  6650                           ;Usuaris.c: 202:     do_check_exists = 0;
  6651  001082  9E76               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6652  001084                     l5989:
  6653                           
  6654                           ;Usuaris.c: 203:     state--;
  6655  001084  0627               	decf	UmotorUsers@state^0,f,c
  6656  001086  0012               	return	
  6657  001088                     l5991:
  6658                           
  6659                           ;Usuaris.c: 207:    if (i < 9) {
  6660  001088  0E09               	movlw	9
  6661  00108A  602A               	cpfslt	_i^0,c
  6662  00108C  D00C               	goto	l6001
  6663                           
  6664                           ;Usuaris.c: 208:     escriureCharEEPROM(tmpUsername[i],indexNextUser);
  6665  00108E  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6666  001092  502A               	movf	_i^0,w,c
  6667  001094  0FB3               	addlw	low _tmpUsername
  6668  001096  D8D3               	call	PL58	;call to abstracted procedure
  6669  001098  ECE5  F00E         	call	_escriureCharEEPROM
  6670                           
  6671                           ;Usuaris.c: 209:     indexNextUser++;
  6672  00109C  2A2C               	incf	_indexNextUser^0,f,c
  6673                           
  6674                           ;Usuaris.c: 210:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6675  00109E  502A               	movf	_i^0,w,c
  6676  0010A0  0FB3               	addlw	low _tmpUsername
  6677  0010A2  D8C4               	call	PL24	;call to abstracted procedure
  6678  0010A4  D017               	goto	L3
  6679  0010A6                     l6001:
  6680  0010A6  0E08               	movlw	8
  6681  0010A8  642A               	cpfsgt	_i^0,c
  6682  0010AA  0C08               	retlw	8
  6683                           
  6684                           ;Usuaris.c: 214:     i = 0;
  6685  0010AC  6A2A               	clrf	_i^0,c
  6686  0010AE  D7A3               	goto	l5953
  6687  0010B0                     l6007:
  6688                           
  6689                           ;Usuaris.c: 219:    if (i < 9) {
  6690  0010B0  0E09               	movlw	9
  6691  0010B2  602A               	cpfslt	_i^0,c
  6692  0010B4  D01C               	goto	l6017
  6693                           
  6694                           ;Usuaris.c: 220:     escriureCharEEPROM(tmpPassword[i],indexNextUser);
  6695  0010B6  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6696  0010BA  502A               	movf	_i^0,w,c
  6697  0010BC  0FAA               	addlw	low _tmpPassword
  6698  0010BE  D8BF               	call	PL58	;call to abstracted procedure
  6699  0010C0  ECE5  F00E         	call	_escriureCharEEPROM
  6700                           
  6701                           ;Usuaris.c: 221:     indexNextUser++;
  6702  0010C4  2A2C               	incf	_indexNextUser^0,f,c
  6703                           
  6704                           ;Usuaris.c: 222:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6705  0010C6  502A               	movf	_i^0,w,c
  6706  0010C8  0FAA               	addlw	low _tmpPassword
  6707  0010CA  D8B0               	call	PL24	;call to abstracted procedure
  6708  0010CC  0E09               	movlw	9
  6709  0010CE  2669               	addwf	??_UmotorUsers^0,f,c
  6710  0010D0  0E00               	movlw	0
  6711  0010D2  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  6712  0010D4                     L3:
  6713  0010D4  50F3               	movf	243,w,c
  6714  0010D6  2669               	addwf	??_UmotorUsers^0,f,c
  6715  0010D8  50F4               	movf	244,w,c
  6716  0010DA  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  6717  0010DC  502A               	movf	_i^0,w,c
  6718  0010DE  2469               	addwf	??_UmotorUsers^0,w,c
  6719  0010E0  6EE1               	movwf	fsr1l,c
  6720  0010E2  0E00               	movlw	0
  6721  0010E4  206A               	addwfc	(??_UmotorUsers+1)^0,w,c
  6722  0010E6  6EE2               	movwf	fsr1h,c
  6723  0010E8  CFDF FFE7          	movff	indf2,indf1
  6724  0010EC  D7C4               	goto	l5983
  6725  0010EE                     l6017:
  6726  0010EE  0E08               	movlw	8
  6727  0010F0  642A               	cpfsgt	_i^0,c
  6728  0010F2  0C08               	retlw	8
  6729                           
  6730                           ;Usuaris.c: 226:     do_register = 0;
  6731  0010F4  9C76               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6732                           
  6733                           ;Usuaris.c: 227:     if(indexNextUser > 140) indexNextUser = 2;
  6734  0010F6  0E8C               	movlw	140
  6735  0010F8  642C               	cpfsgt	_indexNextUser^0,c
  6736  0010FA  D002               	goto	l6025
  6737  0010FC  0E02               	movlw	2
  6738  0010FE  6E2C               	movwf	_indexNextUser^0,c
  6739  001100                     l6025:
  6740                           
  6741                           ;Usuaris.c: 228:     indexNextUserStruct++;
  6742  001100  2A2B               	incf	_indexNextUserStruct^0,f,c
  6743                           
  6744                           ;Usuaris.c: 229:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6745  001102  0E08               	movlw	8
  6746  001104  182B               	xorwf	_indexNextUserStruct^0,w,c
  6747  001106  E101               	bnz	l6031
  6748  001108  6A2B               	clrf	_indexNextUserStruct^0,c
  6749  00110A                     l6031:
  6750                           
  6751                           ;Usuaris.c: 230:     escriureCharEEPROM(indexNextUser,1);
  6752  00110A  0E01               	movlw	1
  6753  00110C  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6754  00110E  502C               	movf	_indexNextUser^0,w,c
  6755  001110  ECE5  F00E         	call	_escriureCharEEPROM
  6756  001114                     l6033:
  6757                           
  6758                           ;Usuaris.c: 231:     state = 0;
  6759  001114  6A27               	clrf	UmotorUsers@state^0,c
  6760  001116  0012               	return	
  6761  001118                     l6035:
  6762                           
  6763                           ;Usuaris.c: 235:    if (i < numUsuaris) {
  6764  001118  502D               	movf	_numUsuaris^0,w,c
  6765  00111A  5C2A               	subwf	_i^0,w,c
  6766  00111C  E216               	bc	l6051
  6767                           
  6768                           ;Usuaris.c: 236:     if(j != usuariLoguejat){
  6769  00111E  C04F  F069         	movff	_usuariLoguejat,??_UmotorUsers
  6770  001122  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6771  001124  BE69               	btfsc	??_UmotorUsers^0,7,c
  6772  001126  066A               	decf	(??_UmotorUsers+1)^0,f,c
  6773  001128  5029               	movf	_j^0,w,c
  6774  00112A  1869               	xorwf	??_UmotorUsers^0,w,c
  6775  00112C  106A               	iorwf	(??_UmotorUsers+1)^0,w,c
  6776  00112E  E007               	bz	l6043
  6777                           
  6778                           ;Usuaris.c: 237:       arrayShowUsers[i] = j;
  6779  001130  502A               	movf	_i^0,w,c
  6780  001132  0FA2               	addlw	low _arrayShowUsers
  6781  001134  6ED9               	movwf	fsr2l,c
  6782  001136  6ADA               	clrf	fsr2h,c
  6783  001138  C029  FFDF         	movff	_j,indf2
  6784                           
  6785                           ;Usuaris.c: 238:      i++;
  6786  00113C  2A2A               	incf	_i^0,f,c
  6787  00113E                     l6043:
  6788                           
  6789                           ;Usuaris.c: 239:                     j++;
  6790  00113E  2A29               	incf	_j^0,f,c
  6791                           
  6792                           ;Usuaris.c: 244:     if(j > 7) j=0;
  6793                           
  6794                           ;Usuaris.c: 240:     }else{
  6795  001140  0E07               	movlw	7
  6796  001142  6429               	cpfsgt	_j^0,c
  6797  001144  0C07               	retlw	7
  6798  001146  6A29               	clrf	_j^0,c
  6799  001148  0012               	return	
  6800  00114A                     l6051:
  6801  00114A  502D               	movf	_numUsuaris^0,w,c
  6802  00114C  182A               	xorwf	_i^0,w,c
  6803  00114E  A4D8               	btfss	status,2,c
  6804  001150  0012               	return	
  6805                           
  6806                           ;Usuaris.c: 247:     do_showUsers = 0;
  6807  001152  9A76               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6808                           
  6809                           ;Usuaris.c: 248:     state = 0;
  6810  001154  6A27               	clrf	UmotorUsers@state^0,c
  6811  001156  0012               	return	
  6812  001158                     l6055:
  6813                           
  6814                           ;Usuaris.c: 252:    if (i < 5 && puntuacions[i].indexStruct != -1) {
  6815  001158  0E05               	movlw	5
  6816  00115A  602A               	cpfslt	_i^0,c
  6817  00115C  D003               	goto	l6061
  6818  00115E  D85F               	call	PL20	;call to abstracted procedure
  6819  001160  28DE               	incf	postinc2,w,c
  6820  001162  E189               	bnz	l5983
  6821  001164                     l6061:
  6822  001164  0E05               	movlw	5
  6823  001166  602A               	cpfslt	_i^0,c
  6824  001168  D004               	goto	l6067
  6825  00116A  D859               	call	PL20	;call to abstracted procedure
  6826  00116C  28DE               	incf	postinc2,w,c
  6827  00116E  E101 D742          	bz	l5953
  6828  001172                     l6067:
  6829  001172  0E04               	movlw	4
  6830  001174  642A               	cpfsgt	_i^0,c
  6831  001176  0C04               	retlw	4
  6832                           
  6833                           ;Usuaris.c: 259:     i = 0;
  6834  001178  6A2A               	clrf	_i^0,c
  6835                           
  6836                           ;Usuaris.c: 260:     state = 8;
  6837  00117A  0E08               	movlw	8
  6838  00117C  6E27               	movwf	UmotorUsers@state^0,c
  6839  00117E  0C08               	retlw	8
  6840  001180                     l6073:
  6841                           
  6842                           ;Usuaris.c: 264:    puntuacions[i].score = scoreUsr;
  6843  001180  D847               	call	PL16	;call to abstracted procedure
  6844  001182  C028  FFDF         	movff	_scoreUsr,indf2
  6845                           
  6846                           ;Usuaris.c: 265:    puntuacions[i].indexStruct = usuariLoguejat;
  6847  001186  D84B               	call	PL20	;call to abstracted procedure
  6848  001188  C04F  FFDF         	movff	_usuariLoguejat,indf2
  6849                           
  6850                           ;Usuaris.c: 266:    i = i+i;
  6851  00118C  0E02               	movlw	2
  6852  00118E  022A               	mulwf	_i^0,c
  6853  001190  50F3               	movf	prodl,w,c
  6854  001192  6E2A               	movwf	_i^0,c
  6855                           
  6856                           ;Usuaris.c: 267:    escriureCharEEPROM(usuariLoguejat,200+i);
  6857  001194  502A               	movf	_i^0,w,c
  6858  001196  0FC8               	addlw	200
  6859  001198  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6860  00119A  504F               	movf	_usuariLoguejat^0,w,c
  6861  00119C  ECE5  F00E         	call	_escriureCharEEPROM
  6862                           
  6863                           ;Usuaris.c: 268:    i++;
  6864  0011A0  2A2A               	incf	_i^0,f,c
  6865                           
  6866                           ;Usuaris.c: 269:    escriureCharEEPROM(scoreUsr,200+i);
  6867  0011A2  502A               	movf	_i^0,w,c
  6868  0011A4  0FC8               	addlw	200
  6869  0011A6  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6870  0011A8  5028               	movf	_scoreUsr^0,w,c
  6871  0011AA  ECE5  F00E         	call	_escriureCharEEPROM
  6872  0011AE  D7B2               	goto	l6033
  6873  0011B0                     l6085:
  6874                           
  6875                           ;Usuaris.c: 273:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  6876  0011B0  D82F               	call	PL16	;call to abstracted procedure
  6877  0011B2  5028               	movf	_scoreUsr^0,w,c
  6878  0011B4  5CDE               	subwf	postinc2,w,c
  6879  0011B6  E304               	bnc	l6091
  6880  0011B8  0E05               	movlw	5
  6881  0011BA  602A               	cpfslt	_i^0,c
  6882  0011BC  D001               	goto	l6091
  6883  0011BE  D75B               	goto	l5983
  6884  0011C0                     l6091:
  6885  0011C0  0E04               	movlw	4
  6886  0011C2  642A               	cpfsgt	_i^0,c
  6887  0011C4  D001               	goto	l6095
  6888  0011C6  D7A6               	goto	l6033
  6889  0011C8                     l6095:
  6890  0011C8  D823               	call	PL16	;call to abstracted procedure
  6891  0011CA  5028               	movf	_scoreUsr^0,w,c
  6892  0011CC  5CDE               	subwf	postinc2,w,c
  6893  0011CE  B0D8               	btfsc	status,0,c
  6894  0011D0  0012               	return	
  6895  0011D2  0E05               	movlw	5
  6896  0011D4  602A               	cpfslt	_i^0,c
  6897  0011D6  0C05               	retlw	5
  6898  0011D8  D755               	goto	l5989
  6899  0011DA                     l6103:
  6900  0011DA  5027               	movf	UmotorUsers@state^0,w,c
  6901  0011DC  6E69               	movwf	??_UmotorUsers^0,c
  6902  0011DE  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6903                           
  6904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6905                           ; Switch size 1, requested type "space"
  6906                           ; Number of cases is 1, Range of values is 0 to 0
  6907                           ; switch strategies available:
  6908                           ; Name         Instructions Cycles
  6909                           ; simple_byte            4     3 (average)
  6910                           ;	Chosen strategy is simple_byte
  6911  0011E0  506A               	movf	(??_UmotorUsers+1)^0,w,c
  6912  0011E2  A4D8               	btfss	status,2,c
  6913  0011E4  0012               	return	
  6914                           
  6915                           ; Switch size 1, requested type "space"
  6916                           ; Number of cases is 8, Range of values is 0 to 8
  6917                           ; switch strategies available:
  6918                           ; Name         Instructions Cycles
  6919                           ; simple_byte           25    13 (average)
  6920                           ;	Chosen strategy is simple_byte
  6921  0011E6  5069               	movf	??_UmotorUsers^0,w,c
  6922  0011E8  E101 D6F9          	bz	l767
  6923  0011EC  0A01               	xorlw	1	; case 1
  6924  0011EE  E101 D72F          	bz	l5977
  6925  0011F2  0A03               	xorlw	3	; case 2
  6926  0011F4  E101 D748          	bz	l5991
  6927  0011F8  0A01               	xorlw	1	; case 3
  6928  0011FA  E101 D759          	bz	l6007
  6929  0011FE  0A06               	xorlw	6	; case 5
  6930  001200  E08B               	bz	l6035
  6931  001202  0A03               	xorlw	3	; case 6
  6932  001204  E0A9               	bz	l6055
  6933  001206  0A01               	xorlw	1	; case 7
  6934  001208  E0BB               	bz	l6073
  6935  00120A  0A0F               	xorlw	15	; case 8
  6936  00120C  E0D1               	bz	l6085
  6937  00120E  0012               	return		;funcret
  6938  001210                     __end_of_UmotorUsers:
  6939                           	callstack 0
  6940  001210                     PL16:
  6941                           	callstack 27
  6942  001210  502A               	movf	_i^0,w,c
  6943  001212  0D02               	mullw	2
  6944  001214  50F3               	movf	243,w,c
  6945  001216  0F99               	addlw	low (_puntuacions+1)
  6946  001218  6ED9               	movwf	fsr2l,c
  6947  00121A  6ADA               	clrf	fsr2h,c
  6948  00121C  0012               	return	
  6949  00121E                     __end_ofPL16:
  6950                           	callstack 0
  6951  00121E                     PL20:
  6952                           	callstack 27
  6953  00121E  502A               	movf	_i^0,w,c
  6954  001220  0D02               	mullw	2
  6955  001222  50F3               	movf	243,w,c
  6956  001224  0F98               	addlw	low _puntuacions
  6957  001226  6ED9               	movwf	fsr2l,c
  6958  001228  6ADA               	clrf	fsr2h,c
  6959  00122A  0012               	return	
  6960  00122C                     __end_ofPL20:
  6961                           	callstack 0
  6962  00122C                     PL24:
  6963                           	callstack 27
  6964  00122C  6ED9               	movwf	fsr2l,c
  6965  00122E  6ADA               	clrf	fsr2h,c
  6966  001230  502B               	movf	_indexNextUserStruct^0,w,c
  6967  001232  0D12               	mullw	18
  6968  001234  0E00               	movlw	low _usuaris
  6969  001236  6E69               	movwf	??_UmotorUsers^0,c
  6970  001238  0E01               	movlw	high _usuaris
  6971  00123A  6E6A               	movwf	(??_UmotorUsers+1)^0,c
  6972  00123C  0012               	return	
  6973  00123E                     __end_ofPL24:
  6974                           	callstack 0
  6975  00123E                     PL58:
  6976                           	callstack 27
  6977  00123E  6ED9               	movwf	fsr2l,c
  6978  001240  6ADA               	clrf	fsr2h,c
  6979  001242  50DF               	movf	indf2,w,c
  6980  001244  0012               	return	
  6981  001246                     __end_ofPL58:
  6982                           	callstack 0
  6983                           
  6984 ;; *************** function _escriureCharEEPROM *****************
  6985 ;; Defined at:
  6986 ;;		line 71 in file "Usuaris.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  c               1    wreg     unsigned char 
  6989 ;;  pos             1    5[COMRAM] unsigned char 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  c               1    6[COMRAM] unsigned char 
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      void 
  6994 ;; Registers used:
  6995 ;;		wreg, status,2
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMRAM   BANK0   BANK1
  7001 ;;      Params:         1       0       0
  7002 ;;      Locals:         1       0       0
  7003 ;;      Temps:          0       0       0
  7004 ;;      Totals:         2       0       0
  7005 ;;Total ram usage:        2 bytes
  7006 ;; Hardware stack levels used: 1
  7007 ;; Hardware stack levels required when called: 2
  7008 ;; This function calls:
  7009 ;;		Nothing
  7010 ;; This function is called by:
  7011 ;;		_UmotorUsers
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text57
  7016  001DCA                     __ptext57:
  7017                           	callstack 0
  7018  001DCA                     _escriureCharEEPROM:
  7019                           	callstack 27
  7020                           
  7021                           ;incstack = 0
  7022                           ;escriureCharEEPROM@c stored from wreg
  7023  001DCA  6E65               	movwf	escriureCharEEPROM@c^0,c
  7024                           
  7025                           ;Usuaris.c: 72:     EEADR = pos;
  7026  001DCC  C064  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  7027                           
  7028                           ;Usuaris.c: 73:     EEDATA = c;
  7029  001DD0  C065  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  7030                           
  7031                           ;Usuaris.c: 74:     EECON1bits.EEPGD = 0;
  7032  001DD4  9EA6               	bcf	166,7,c	;volsfr
  7033                           
  7034                           ;Usuaris.c: 75:     EECON1bits.CFGS = 0;
  7035  001DD6  9CA6               	bcf	166,6,c	;volsfr
  7036                           
  7037                           ;Usuaris.c: 76:     EECON1bits.WREN = 1;
  7038  001DD8  84A6               	bsf	166,2,c	;volsfr
  7039                           
  7040                           ;Usuaris.c: 77:     INTCONbits.GIE = 0;
  7041  001DDA  9EF2               	bcf	242,7,c	;volatile
  7042                           
  7043                           ;Usuaris.c: 78:     EECON2 = 85;
  7044  001DDC  0E55               	movlw	85
  7045  001DDE  6EA7               	movwf	167,c	;volsfr
  7046                           
  7047                           ;Usuaris.c: 79:     EECON2 = 170;
  7048  001DE0  0EAA               	movlw	170
  7049  001DE2  6EA7               	movwf	167,c	;volsfr
  7050                           
  7051                           ;Usuaris.c: 80:     EECON1bits.WR = 1;
  7052  001DE4  82A6               	bsf	166,1,c	;volsfr
  7053  001DE6                     l724:
  7054  001DE6  B2A6               	btfsc	166,1,c	;volsfr
  7055  001DE8  D7FE               	goto	l724
  7056                           
  7057                           ;Usuaris.c: 82:     INTCONbits.GIE = 1;
  7058  001DEA  8EF2               	bsf	242,7,c	;volatile
  7059                           
  7060                           ;Usuaris.c: 83:     EECON1bits.WREN = 0;
  7061  001DEC  94A6               	bcf	166,2,c	;volsfr
  7062  001DEE  0012               	return		;funcret
  7063  001DF0                     __end_of_escriureCharEEPROM:
  7064                           	callstack 0
  7065                           
  7066 ;; *************** function _compareStrings *****************
  7067 ;; Defined at:
  7068 ;;		line 135 in file "Usuaris.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  a               1    5[COMRAM] PTR const unsigned char 
  7071 ;;		 -> tmpPassword(9), tmpUsername(9), 
  7072 ;;  b               2    6[COMRAM] PTR const unsigned char 
  7073 ;;		 -> usuaris.password(9), usuaris.username(9), usuaris(144), 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      unsigned char 
  7078 ;; Registers used:
  7079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1
  7085 ;;      Params:         3       0       0
  7086 ;;      Locals:         0       0       0
  7087 ;;      Temps:          2       0       0
  7088 ;;      Totals:         5       0       0
  7089 ;;Total ram usage:        5 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 2
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_UmotorUsers
  7096 ;;		_miraPassword
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text58
  7101  001C5A                     __ptext58:
  7102                           	callstack 0
  7103  001C5A                     _compareStrings:
  7104                           	callstack 26
  7105                           
  7106                           ;Usuaris.c: 136:     while (*a){
  7107                           
  7108                           ;incstack = 0
  7109  001C5A  D00A               	goto	l4429
  7110  001C5C                     l4423:
  7111                           
  7112                           ;Usuaris.c: 137:         if (*a != *b)break;
  7113  001C5C  D813               	call	PL54	;call to abstracted procedure
  7114  001C5E  5064               	movf	compareStrings@a^0,w,c
  7115  001C60  6EE1               	movwf	fsr1l,c
  7116  001C62  6AE2               	clrf	fsr1h,c
  7117  001C64  50DE               	movf	postinc2,w,c
  7118  001C66  18E6               	xorwf	postinc1,w,c
  7119  001C68  E105               	bnz	u3890
  7120                           
  7121                           ;Usuaris.c: 138:         a++;
  7122  001C6A  2A64               	incf	compareStrings@a^0,f,c
  7123                           
  7124                           ;Usuaris.c: 139:         b++;
  7125  001C6C  4A65               	infsnz	compareStrings@b^0,f,c
  7126  001C6E  2A66               	incf	(compareStrings@b+1)^0,f,c
  7127  001C70                     l4429:
  7128                           
  7129                           ;Usuaris.c: 136:     while (*a){
  7130  001C70  D80E               	call	PL84	;call to abstracted procedure
  7131  001C72  E1F4               	bnz	l4423
  7132  001C74                     u3890:
  7133                           
  7134                           ;Usuaris.c: 141:     return *(const unsigned char*)a - *(const unsigned char*)b;
  7135  001C74  D807               	call	PL54	;call to abstracted procedure
  7136  001C76  50DF               	movf	indf2,w,c
  7137  001C78  6E67               	movwf	??_compareStrings^0,c
  7138  001C7A  D809               	call	PL84	;call to abstracted procedure
  7139  001C7C  6E68               	movwf	(??_compareStrings+1)^0,c
  7140  001C7E  5067               	movf	??_compareStrings^0,w,c
  7141  001C80  5C68               	subwf	(??_compareStrings+1)^0,w,c
  7142  001C82  0012               	return		;funcret
  7143  001C84                     __end_of_compareStrings:
  7144                           	callstack 0
  7145  001C84                     PL54:
  7146                           	callstack 26
  7147  001C84  C065  FFD9         	movff	compareStrings@b,fsr2l
  7148  001C88  C066  FFDA         	movff	compareStrings@b+1,fsr2h
  7149  001C8C  0012               	return	
  7150  001C8E                     __end_ofPL54:
  7151                           	callstack 0
  7152  001C8E                     PL84:
  7153                           	callstack 26
  7154  001C8E  5064               	movf	compareStrings@a^0,w,c
  7155  001C90  6ED9               	movwf	fsr2l,c
  7156  001C92  6ADA               	clrf	fsr2h,c
  7157  001C94  50DF               	movf	indf2,w,c
  7158  001C96  0012               	return	
  7159  001C98                     __end_ofPL84:
  7160                           	callstack 0
  7161                           
  7162 ;; *************** function _Uinit *****************
  7163 ;; Defined at:
  7164 ;;		line 92 in file "Usuaris.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;		None
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  k               1   12[COMRAM] unsigned char 
  7169 ;;  k               1   11[COMRAM] unsigned char 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      void 
  7172 ;; Registers used:
  7173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1
  7179 ;;      Params:         0       0       0
  7180 ;;      Locals:         2       0       0
  7181 ;;      Temps:          2       0       0
  7182 ;;      Totals:         4       0       0
  7183 ;;Total ram usage:        4 bytes
  7184 ;; Hardware stack levels used: 1
  7185 ;; Hardware stack levels required when called: 3
  7186 ;; This function calls:
  7187 ;;		___lbdiv
  7188 ;;		_llegirCharEEPROM
  7189 ;; This function is called by:
  7190 ;;		_main
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text59
  7195  00152E                     __ptext59:
  7196                           	callstack 0
  7197  00152E                     _Uinit:
  7198                           	callstack 27
  7199                           
  7200                           ;Usuaris.c: 96:     i = 0;
  7201                           
  7202                           ;incstack = 0
  7203  00152E  6A2A               	clrf	_i^0,c
  7204                           
  7205                           ;Usuaris.c: 101:     numUsuaris = llegirCharEEPROM(0);
  7206  001530  0E00               	movlw	0
  7207  001532  EC23  F000         	call	_llegirCharEEPROM
  7208  001536  6E2D               	movwf	_numUsuaris^0,c
  7209                           
  7210                           ;Usuaris.c: 103:     if(numUsuaris > 8) numUsuaris = 0;
  7211  001538  0E08               	movlw	8
  7212  00153A  642D               	cpfsgt	_numUsuaris^0,c
  7213  00153C  D001               	goto	l4797
  7214  00153E  6A2D               	clrf	_numUsuaris^0,c
  7215  001540                     l4797:
  7216                           
  7217                           ;Usuaris.c: 107:     i++;
  7218  001540  2A2A               	incf	_i^0,f,c
  7219                           
  7220                           ;Usuaris.c: 108:     indexNextUser = llegirCharEEPROM(1);
  7221  001542  0E01               	movlw	1
  7222  001544  EC23  F000         	call	_llegirCharEEPROM
  7223  001548  6E2C               	movwf	_indexNextUser^0,c
  7224                           
  7225                           ;Usuaris.c: 109:     if(indexNextUser == 255) indexNextUser = 2;
  7226  00154A  282C               	incf	_indexNextUser^0,w,c
  7227  00154C  E102               	bnz	l4805
  7228  00154E  0E02               	movlw	2
  7229  001550  6E2C               	movwf	_indexNextUser^0,c
  7230  001552                     l4805:
  7231                           
  7232                           ;Usuaris.c: 110:     indexNextUserStruct = indexNextUser/18;
  7233  001552  0E12               	movlw	18
  7234  001554  6E64               	movwf	___lbdiv@divisor^0,c
  7235  001556  502C               	movf	_indexNextUser^0,w,c
  7236  001558  EC87  F00E         	call	___lbdiv
  7237  00155C  6E2B               	movwf	_indexNextUserStruct^0,c
  7238                           
  7239                           ;Usuaris.c: 111:     i++;
  7240  00155E  2A2A               	incf	_i^0,f,c
  7241                           
  7242                           ;Usuaris.c: 112:     for(j = 0;j<numUsuaris;j++){
  7243  001560  6A29               	clrf	_j^0,c
  7244  001562  D01F               	goto	l4837
  7245  001564                     l736:
  7246                           
  7247                           ;Usuaris.c: 113:         for(unsigned char k = 0; k<9; k++){
  7248  001564  6A6A               	clrf	Uinit@k^0,c
  7249  001566                     l4815:
  7250                           
  7251                           ;Usuaris.c: 114:             usuaris[j].username[k] = llegirCharEEPROM(i);
  7252  001566  D842               	call	PL42	;call to abstracted procedure
  7253  001568  D848               	call	PL74	;call to abstracted procedure
  7254  00156A  506A               	movf	Uinit@k^0,w,c
  7255  00156C  D838               	call	PL40	;call to abstracted procedure
  7256  00156E  EC23  F000         	call	_llegirCharEEPROM
  7257  001572  6EDF               	movwf	indf2,c
  7258                           
  7259                           ;Usuaris.c: 115:             i++;
  7260  001574  2A2A               	incf	_i^0,f,c
  7261                           
  7262                           ;Usuaris.c: 116:         }
  7263  001576  2A6A               	incf	Uinit@k^0,f,c
  7264  001578  0E08               	movlw	8
  7265  00157A  646A               	cpfsgt	Uinit@k^0,c
  7266  00157C  D7F4               	goto	l4815
  7267                           
  7268                           ;Usuaris.c: 117:         for(unsigned char k = 0; k<9;k++){
  7269  00157E  6A6B               	clrf	Uinit@k_1175^0,c
  7270  001580                     l4827:
  7271                           
  7272                           ;Usuaris.c: 118:             usuaris[j].password[k] = llegirCharEEPROM(i);
  7273  001580  D835               	call	PL42	;call to abstracted procedure
  7274  001582  0E09               	movlw	9
  7275  001584  2668               	addwf	??_Uinit^0,f,c
  7276  001586  0E00               	movlw	0
  7277  001588  2269               	addwfc	(??_Uinit+1)^0,f,c
  7278  00158A  D837               	call	PL74	;call to abstracted procedure
  7279  00158C  506B               	movf	Uinit@k_1175^0,w,c
  7280  00158E  D827               	call	PL40	;call to abstracted procedure
  7281  001590  EC23  F000         	call	_llegirCharEEPROM
  7282  001594  6EDF               	movwf	indf2,c
  7283                           
  7284                           ;Usuaris.c: 119:             i++;
  7285  001596  2A2A               	incf	_i^0,f,c
  7286                           
  7287                           ;Usuaris.c: 120:         }
  7288  001598  2A6B               	incf	Uinit@k_1175^0,f,c
  7289  00159A  0E08               	movlw	8
  7290  00159C  646B               	cpfsgt	Uinit@k_1175^0,c
  7291  00159E  D7F0               	goto	l4827
  7292                           
  7293                           ;Usuaris.c: 121:     }
  7294  0015A0  2A29               	incf	_j^0,f,c
  7295  0015A2                     l4837:
  7296  0015A2  502D               	movf	_numUsuaris^0,w,c
  7297  0015A4  5C29               	subwf	_j^0,w,c
  7298  0015A6  E3DE               	bnc	l736
  7299                           
  7300                           ;Usuaris.c: 127:     puntuacions[0].indexStruct = -1;
  7301  0015A8  0100               	movlb	0	; () banked
  7302  0015AA  6998               	setf	_puntuacions& (0+255),b
  7303                           
  7304                           ;Usuaris.c: 128:     for(i = 0; i<5; i++){
  7305  0015AC  6A2A               	clrf	_i^0,c
  7306  0015AE                     l4839:
  7307  0015AE  0E04               	movlw	4
  7308  0015B0  642A               	cpfsgt	_i^0,c
  7309  0015B2  D001               	goto	l4843
  7310  0015B4  0C04               	retlw	4
  7311  0015B6                     l4843:
  7312                           
  7313                           ;Usuaris.c: 129:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  7314  0015B6  EC0F  F009         	call	PL20	;call to abstracted procedure
  7315  0015BA  502A               	movf	_i^0,w,c
  7316  0015BC  0D02               	mullw	2
  7317  0015BE  50F3               	movf	243,w,c
  7318  0015C0  0FC8               	addlw	200
  7319  0015C2  EC23  F000         	call	_llegirCharEEPROM
  7320  0015C6  6EDF               	movwf	indf2,c
  7321                           
  7322                           ;Usuaris.c: 130:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  7323  0015C8  EC08  F009         	call	PL16	;call to abstracted procedure
  7324  0015CC  502A               	movf	_i^0,w,c
  7325  0015CE  0D02               	mullw	2
  7326  0015D0  50F3               	movf	243,w,c
  7327  0015D2  0FC9               	addlw	201
  7328  0015D4  EC23  F000         	call	_llegirCharEEPROM
  7329  0015D8  6EDF               	movwf	indf2,c
  7330                           
  7331                           ;Usuaris.c: 131:     }
  7332  0015DA  2A2A               	incf	_i^0,f,c
  7333  0015DC  D7E8               	goto	l4839
  7334  0015DE                     __end_of_Uinit:
  7335                           	callstack 0
  7336  0015DE                     PL40:
  7337                           	callstack 27
  7338  0015DE  2468               	addwf	??_Uinit^0,w,c
  7339  0015E0  6ED9               	movwf	fsr2l,c
  7340  0015E2  0E00               	movlw	0
  7341  0015E4  2069               	addwfc	(??_Uinit+1)^0,w,c
  7342  0015E6  6EDA               	movwf	fsr2h,c
  7343  0015E8  502A               	movf	_i^0,w,c
  7344  0015EA  0012               	return	
  7345  0015EC                     __end_ofPL40:
  7346                           	callstack 0
  7347  0015EC                     PL42:
  7348                           	callstack 27
  7349  0015EC  5029               	movf	_j^0,w,c
  7350  0015EE  0D12               	mullw	18
  7351  0015F0  0E00               	movlw	low _usuaris
  7352  0015F2  6E68               	movwf	??_Uinit^0,c
  7353  0015F4  0E01               	movlw	high _usuaris
  7354  0015F6  6E69               	movwf	(??_Uinit+1)^0,c
  7355  0015F8  0012               	return	
  7356  0015FA                     __end_ofPL42:
  7357                           	callstack 0
  7358  0015FA                     PL74:
  7359                           	callstack 27
  7360  0015FA  50F3               	movf	243,w,c
  7361  0015FC  2668               	addwf	??_Uinit^0,f,c
  7362  0015FE  50F4               	movf	244,w,c
  7363  001600  2269               	addwfc	(??_Uinit+1)^0,f,c
  7364  001602  0012               	return	
  7365  001604                     __end_ofPL74:
  7366                           	callstack 0
  7367                           
  7368 ;; *************** function _llegirCharEEPROM *****************
  7369 ;; Defined at:
  7370 ;;		line 85 in file "Usuaris.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;  pos             1    wreg     unsigned char 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  pos             1    5[COMRAM] unsigned char 
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  1    wreg      unsigned char 
  7377 ;; Registers used:
  7378 ;;		wreg, status,2
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMRAM   BANK0   BANK1
  7384 ;;      Params:         0       0       0
  7385 ;;      Locals:         1       0       0
  7386 ;;      Temps:          0       0       0
  7387 ;;      Totals:         1       0       0
  7388 ;;Total ram usage:        1 bytes
  7389 ;; Hardware stack levels used: 1
  7390 ;; Hardware stack levels required when called: 2
  7391 ;; This function calls:
  7392 ;;		Nothing
  7393 ;; This function is called by:
  7394 ;;		_Uinit
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398                           	psect	text60
  7399  000046                     __ptext60:
  7400                           	callstack 0
  7401  000046                     _llegirCharEEPROM:
  7402                           	callstack 27
  7403                           
  7404                           ;incstack = 0
  7405                           ;llegirCharEEPROM@pos stored from wreg
  7406  000046  6E64               	movwf	llegirCharEEPROM@pos^0,c
  7407                           
  7408                           ;Usuaris.c: 86:     EEADR = pos;
  7409  000048  C064  FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  7410                           
  7411                           ;Usuaris.c: 87:     EECON1bits.EEPGD = 0;
  7412  00004C  9EA6               	bcf	166,7,c	;volsfr
  7413                           
  7414                           ;Usuaris.c: 88:     EECON1bits.CFGS = 0;
  7415  00004E  9CA6               	bcf	166,6,c	;volsfr
  7416                           
  7417                           ;Usuaris.c: 89:     EECON1bits.RD = 1;
  7418  000050  80A6               	bsf	166,0,c	;volsfr
  7419                           
  7420                           ;Usuaris.c: 90:     return EEDATA;
  7421  000052  50A8               	movf	168,w,c	;volatile
  7422  000054  0012               	return		;funcret
  7423  000056                     __end_of_llegirCharEEPROM:
  7424                           	callstack 0
  7425                           
  7426 ;; *************** function ___lbdiv *****************
  7427 ;; Defined at:
  7428 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lbdiv.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  dividend        1    wreg     unsigned char 
  7431 ;;  divisor         1    5[COMRAM] unsigned char 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  dividend        1    6[COMRAM] unsigned char 
  7434 ;;  quotient        1    8[COMRAM] unsigned char 
  7435 ;;  counter         1    7[COMRAM] unsigned char 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  1    wreg      unsigned char 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1
  7445 ;;      Params:         1       0       0
  7446 ;;      Locals:         3       0       0
  7447 ;;      Temps:          0       0       0
  7448 ;;      Totals:         4       0       0
  7449 ;;Total ram usage:        4 bytes
  7450 ;; Hardware stack levels used: 1
  7451 ;; Hardware stack levels required when called: 2
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_Uinit
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text61
  7460  001D0E                     __ptext61:
  7461                           	callstack 0
  7462  001D0E                     ___lbdiv:
  7463                           	callstack 27
  7464                           
  7465                           ;incstack = 0
  7466                           ;___lbdiv@dividend stored from wreg
  7467  001D0E  6E65               	movwf	___lbdiv@dividend^0,c
  7468  001D10  6A67               	clrf	___lbdiv@quotient^0,c
  7469  001D12  5064               	movf	___lbdiv@divisor^0,w,c
  7470  001D14  E014               	bz	l4673
  7471  001D16  0E01               	movlw	1
  7472  001D18  6E66               	movwf	___lbdiv@counter^0,c
  7473  001D1A  D003               	goto	l4661
  7474  001D1C                     l4657:
  7475  001D1C  90D8               	bcf	status,0,c
  7476  001D1E  3664               	rlcf	___lbdiv@divisor^0,f,c
  7477  001D20  2A66               	incf	___lbdiv@counter^0,f,c
  7478  001D22                     l4661:
  7479  001D22  AE64               	btfss	___lbdiv@divisor^0,7,c
  7480  001D24  D7FB               	goto	l4657
  7481  001D26                     u4040:
  7482  001D26  90D8               	bcf	status,0,c
  7483  001D28  3667               	rlcf	___lbdiv@quotient^0,f,c
  7484  001D2A  5064               	movf	___lbdiv@divisor^0,w,c
  7485  001D2C  5C65               	subwf	___lbdiv@dividend^0,w,c
  7486  001D2E  E303               	bnc	l4669
  7487  001D30  5064               	movf	___lbdiv@divisor^0,w,c
  7488  001D32  5E65               	subwf	___lbdiv@dividend^0,f,c
  7489  001D34  8067               	bsf	___lbdiv@quotient^0,0,c
  7490  001D36                     l4669:
  7491  001D36  90D8               	bcf	status,0,c
  7492  001D38  3264               	rrcf	___lbdiv@divisor^0,f,c
  7493  001D3A  2E66               	decfsz	___lbdiv@counter^0,f,c
  7494  001D3C  D7F4               	goto	u4040
  7495  001D3E                     l4673:
  7496  001D3E  5067               	movf	___lbdiv@quotient^0,w,c
  7497  001D40  0012               	return		;funcret
  7498  001D42                     __end_of___lbdiv:
  7499                           	callstack 0
  7500                           
  7501 ;; *************** function _TiInitTimer *****************
  7502 ;; Defined at:
  7503 ;;		line 18 in file "TiTTimer.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;		None
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;		None
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1    wreg      void 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1
  7517 ;;      Params:         0       0       0
  7518 ;;      Locals:         0       0       0
  7519 ;;      Temps:          0       0       0
  7520 ;;      Totals:         0       0       0
  7521 ;;Total ram usage:        0 bytes
  7522 ;; Hardware stack levels used: 1
  7523 ;; Hardware stack levels required when called: 2
  7524 ;; This function calls:
  7525 ;;		Nothing
  7526 ;; This function is called by:
  7527 ;;		_main
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text62
  7532  001DA2                     __ptext62:
  7533                           	callstack 0
  7534  001DA2                     _TiInitTimer:
  7535                           	callstack 28
  7536                           
  7537                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7538                           
  7539                           ;incstack = 0
  7540  001DA2  9ED0               	bcf	208,7,c	;volatile
  7541                           
  7542                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7543  001DA4  8EF2               	bsf	242,7,c	;volatile
  7544                           
  7545                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7546  001DA6  8CF2               	bsf	242,6,c	;volatile
  7547                           
  7548                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7549  001DA8  8AF2               	bsf	242,5,c	;volatile
  7550                           
  7551                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7552  001DAA  94F2               	bcf	242,2,c	;volatile
  7553                           
  7554                           ;TiTTimer.c: 25:     T0CON = 136;
  7555  001DAC  0E88               	movlw	136
  7556  001DAE  6ED5               	movwf	213,c	;volatile
  7557                           
  7558                           ;TiTTimer.c: 27:     TMR0H = 223;
  7559                           
  7560                           ;TiTTimer.c: 28:     TMR0L = 148;
  7561  001DB0  EC28  F00E         	call	PL70	;call to abstracted procedure
  7562                           
  7563                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7564  001DB4  8ED5               	bsf	213,7,c	;volatile
  7565                           
  7566                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  7567  001DB6  6A34               	clrf	_counter^0,c
  7568  001DB8                     l4767:
  7569  001DB8  0E07               	movlw	7
  7570  001DBA  6434               	cpfsgt	_counter^0,c
  7571  001DBC  D001               	goto	l4771
  7572  001DBE  0C07               	retlw	7
  7573  001DC0                     l4771:
  7574                           
  7575                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7576  001DC0  ECCA  F00E         	call	PL18	;call to abstracted procedure
  7577  001DC4  6ADF               	clrf	indf2,c
  7578                           
  7579                           ;TiTTimer.c: 33:     }
  7580  001DC6  2A34               	incf	_counter^0,f,c
  7581  001DC8  D7F7               	goto	l4767
  7582  001DCA                     __end_of_TiInitTimer:
  7583                           	callstack 0
  7584                           
  7585 ;; *************** function _TeTeclat *****************
  7586 ;; Defined at:
  7587 ;;		line 21 in file "TeTeclat.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1
  7601 ;;      Params:         0       0       0
  7602 ;;      Locals:         0       0       0
  7603 ;;      Temps:          3       0       0
  7604 ;;      Totals:         3       0       0
  7605 ;;Total ram usage:        3 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 3
  7608 ;; This function calls:
  7609 ;;		_MsetNovaTecla
  7610 ;;		_SsetNovaTecla
  7611 ;;		_TiGetTics
  7612 ;;		_TiResetTics
  7613 ;; This function is called by:
  7614 ;;		_main
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           	psect	text63
  7619  0013F4                     __ptext63:
  7620                           	callstack 0
  7621  0013F4                     _TeTeclat:
  7622                           	callstack 27
  7623                           
  7624                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7625                           
  7626                           ;incstack = 0
  7627  0013F4  A083               	btfss	131,0,c	;volatile
  7628  0013F6  D003               	goto	u6470
  7629  0013F8  6A6B               	clrf	??_TeTeclat^0,c
  7630  0013FA  2A6B               	incf	??_TeTeclat^0,f,c
  7631  0013FC  D001               	goto	u6478
  7632  0013FE                     u6470:
  7633  0013FE  6A6B               	clrf	??_TeTeclat^0,c
  7634  001400                     u6478:
  7635  001400  0E01               	movlw	1
  7636  001402  A283               	btfss	131,1,c	;volatile
  7637  001404  0E00               	movlw	0
  7638  001406  0D02               	mullw	2
  7639  001408  CFF3 F06C          	movff	prodl,??_TeTeclat+1
  7640  00140C  0E01               	movlw	1
  7641  00140E  A483               	btfss	131,2,c	;volatile
  7642  001410  0E00               	movlw	0
  7643  001412  0D03               	mullw	3
  7644  001414  CFF3 F06D          	movff	prodl,??_TeTeclat+2
  7645  001418  0E01               	movlw	1
  7646  00141A  A683               	btfss	131,3,c	;volatile
  7647  00141C  0E00               	movlw	0
  7648  00141E  0D04               	mullw	4
  7649  001420  50F3               	movf	243,w,c
  7650  001422  246D               	addwf	(??_TeTeclat+2)^0,w,c
  7651  001424  246C               	addwf	(??_TeTeclat+1)^0,w,c
  7652  001426  246B               	addwf	??_TeTeclat^0,w,c
  7653  001428  6E35               	movwf	TeTeclat@files^0,c
  7654                           
  7655                           ;TeTeclat.c: 26:  switch(state) {
  7656  00142A  D05A               	goto	l6185
  7657  00142C                     l6111:
  7658                           
  7659                           ;TeTeclat.c: 28:    if (files==0) {
  7660  00142C  5035               	movf	TeTeclat@files^0,w,c
  7661  00142E  E106               	bnz	l6117
  7662                           
  7663                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  7664  001430  888C               	bsf	140,4,c	;volatile
  7665                           
  7666                           ;TeTeclat.c: 30:     LATDbits.LD5=0;
  7667  001432  9A8C               	bcf	140,5,c	;volatile
  7668                           
  7669                           ;TeTeclat.c: 31:     LATDbits.LD6=0;
  7670  001434  9C8C               	bcf	140,6,c	;volatile
  7671                           
  7672                           ;TeTeclat.c: 32:     cols=0;
  7673  001436  6A36               	clrf	TeTeclat@cols^0,c
  7674  001438                     l6115:
  7675                           
  7676                           ;TeTeclat.c: 33:     state++;
  7677  001438  2A37               	incf	TeTeclat@state^0,f,c
  7678                           
  7679                           ;TeTeclat.c: 34:    }
  7680  00143A  0012               	return	
  7681  00143C                     l6117:
  7682  00143C  5035               	movf	TeTeclat@files^0,w,c
  7683  00143E  B4D8               	btfsc	status,2,c
  7684  001440  0012               	return	
  7685                           
  7686                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  7687  001442  5038               	movf	_tiTeclat^0,w,c
  7688  001444  ECA0  F00F         	call	_TiResetTics
  7689  001448                     l6121:
  7690                           
  7691                           ;TeTeclat.c: 37:     state = 3;
  7692  001448  0E03               	movlw	3
  7693  00144A  6E37               	movwf	TeTeclat@state^0,c
  7694  00144C  0C03               	retlw	3
  7695  00144E                     l6123:
  7696                           
  7697                           ;TeTeclat.c: 41:    if (files==0) {
  7698  00144E  5035               	movf	TeTeclat@files^0,w,c
  7699  001450  E106               	bnz	l6131
  7700                           
  7701                           ;TeTeclat.c: 42:     LATDbits.LD4=0;
  7702  001452  988C               	bcf	140,4,c	;volatile
  7703                           
  7704                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  7705  001454  8A8C               	bsf	140,5,c	;volatile
  7706                           
  7707                           ;TeTeclat.c: 44:     LATDbits.LD6=0;
  7708  001456  9C8C               	bcf	140,6,c	;volatile
  7709                           
  7710                           ;TeTeclat.c: 45:     cols=1;
  7711  001458  0E01               	movlw	1
  7712  00145A  6E36               	movwf	TeTeclat@cols^0,c
  7713  00145C  D7ED               	goto	l6115
  7714  00145E                     l6131:
  7715  00145E  5035               	movf	TeTeclat@files^0,w,c
  7716  001460  B4D8               	btfsc	status,2,c
  7717  001462  0012               	return	
  7718                           
  7719                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  7720  001464  5038               	movf	_tiTeclat^0,w,c
  7721  001466  ECA0  F00F         	call	_TiResetTics
  7722  00146A  D7EE               	goto	l6121
  7723  00146C                     l6137:
  7724                           
  7725                           ;TeTeclat.c: 54:    if (files==0) {
  7726  00146C  5035               	movf	TeTeclat@files^0,w,c
  7727  00146E  E107               	bnz	l6145
  7728                           
  7729                           ;TeTeclat.c: 55:     LATDbits.LD4=0;
  7730  001470  988C               	bcf	140,4,c	;volatile
  7731                           
  7732                           ;TeTeclat.c: 56:     LATDbits.LD5=0;
  7733  001472  9A8C               	bcf	140,5,c	;volatile
  7734                           
  7735                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  7736  001474  8C8C               	bsf	140,6,c	;volatile
  7737                           
  7738                           ;TeTeclat.c: 58:     cols=2;
  7739  001476  0E02               	movlw	2
  7740  001478  6E36               	movwf	TeTeclat@cols^0,c
  7741  00147A                     l6143:
  7742                           
  7743                           ;TeTeclat.c: 59:     state = 0;
  7744  00147A  6A37               	clrf	TeTeclat@state^0,c
  7745                           
  7746                           ;TeTeclat.c: 60:    }
  7747  00147C  0012               	return	
  7748  00147E                     l6145:
  7749  00147E  5035               	movf	TeTeclat@files^0,w,c
  7750  001480  B4D8               	btfsc	status,2,c
  7751  001482  0012               	return	
  7752                           
  7753                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  7754  001484  5038               	movf	_tiTeclat^0,w,c
  7755  001486  ECA0  F00F         	call	_TiResetTics
  7756  00148A  D7D6               	goto	l6115
  7757  00148C                     l6151:
  7758                           
  7759                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  7760  00148C  5038               	movf	_tiTeclat^0,w,c
  7761  00148E  ECF8  F00E         	call	_TiGetTics
  7762  001492  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  7763  001494  0012               	return	
  7764  001496  D7D0               	goto	l6115
  7765  001498                     l6155:
  7766                           
  7767                           ;TeTeclat.c: 72:    if (files==0) {
  7768  001498  5035               	movf	TeTeclat@files^0,w,c
  7769  00149A  E103               	bnz	l6159
  7770                           
  7771                           ;TeTeclat.c: 73:     state = 1;
  7772  00149C  0E01               	movlw	1
  7773  00149E  6E37               	movwf	TeTeclat@state^0,c
  7774                           
  7775                           ;TeTeclat.c: 74:    }
  7776  0014A0  0C01               	retlw	1
  7777  0014A2                     l6159:
  7778  0014A2  5035               	movf	TeTeclat@files^0,w,c
  7779  0014A4  B4D8               	btfsc	status,2,c
  7780  0014A6  0012               	return	
  7781                           
  7782                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7783  0014A8  D837               	call	PL14	;call to abstracted procedure
  7784  0014AA  D831               	call	PL6	;call to abstracted procedure
  7785  0014AC  EC92  F000         	call	_MsetNovaTecla
  7786                           
  7787                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7788  0014B0  D833               	call	PL14	;call to abstracted procedure
  7789  0014B2  D82D               	call	PL6	;call to abstracted procedure
  7790  0014B4  EC8E  F000         	call	_SsetNovaTecla
  7791  0014B8  D7BF               	goto	l6115
  7792  0014BA                     l6165:
  7793                           
  7794                           ;TeTeclat.c: 82:    if (files==0) {
  7795  0014BA  5035               	movf	TeTeclat@files^0,w,c
  7796  0014BC  A4D8               	btfss	status,2,c
  7797  0014BE  0012               	return	
  7798                           
  7799                           ;TeTeclat.c: 83:     TiResetTics(tiTeclat);
  7800  0014C0  5038               	movf	_tiTeclat^0,w,c
  7801  0014C2  ECA0  F00F         	call	_TiResetTics
  7802  0014C6  D7B8               	goto	l6115
  7803  0014C8                     l6171:
  7804                           
  7805                           ;TeTeclat.c: 88:    if (TiGetTics(tiTeclat)>=0) {
  7806  0014C8  5038               	movf	_tiTeclat^0,w,c
  7807  0014CA  ECF8  F00E         	call	_TiGetTics
  7808  0014CE  D7E1               	goto	L4
  7809  0014D0                     l6175:
  7810                           
  7811                           ;TeTeclat.c: 93:    if (files!=0) {
  7812  0014D0  5035               	movf	TeTeclat@files^0,w,c
  7813  0014D2  E003               	bz	l6179
  7814                           
  7815                           ;TeTeclat.c: 94:     state = 5;
  7816  0014D4  0E05               	movlw	5
  7817  0014D6  6E37               	movwf	TeTeclat@state^0,c
  7818                           
  7819                           ;TeTeclat.c: 95:    }
  7820  0014D8  0C05               	retlw	5
  7821  0014DA                     l6179:
  7822  0014DA  5035               	movf	TeTeclat@files^0,w,c
  7823  0014DC  E0CE               	bz	l6143
  7824  0014DE  0012               	return	
  7825  0014E0                     l6185:
  7826  0014E0  5037               	movf	TeTeclat@state^0,w,c
  7827  0014E2  6E6B               	movwf	??_TeTeclat^0,c
  7828  0014E4  6A6C               	clrf	(??_TeTeclat+1)^0,c
  7829                           
  7830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7831                           ; Switch size 1, requested type "space"
  7832                           ; Number of cases is 1, Range of values is 0 to 0
  7833                           ; switch strategies available:
  7834                           ; Name         Instructions Cycles
  7835                           ; simple_byte            4     3 (average)
  7836                           ;	Chosen strategy is simple_byte
  7837  0014E6  506C               	movf	(??_TeTeclat+1)^0,w,c
  7838  0014E8  A4D8               	btfss	status,2,c
  7839  0014EA  0012               	return	
  7840                           
  7841                           ; Switch size 1, requested type "space"
  7842                           ; Number of cases is 8, Range of values is 0 to 7
  7843                           ; switch strategies available:
  7844                           ; Name         Instructions Cycles
  7845                           ; simple_byte           25    13 (average)
  7846                           ;	Chosen strategy is simple_byte
  7847  0014EC  506B               	movf	??_TeTeclat^0,w,c
  7848  0014EE  E09E               	bz	l6111
  7849  0014F0  0A01               	xorlw	1	; case 1
  7850  0014F2  E0AD               	bz	l6123
  7851  0014F4  0A03               	xorlw	3	; case 2
  7852  0014F6  E0BA               	bz	l6137
  7853  0014F8  0A01               	xorlw	1	; case 3
  7854  0014FA  E0C8               	bz	l6151
  7855  0014FC  0A07               	xorlw	7	; case 4
  7856  0014FE  E0CC               	bz	l6155
  7857  001500  0A01               	xorlw	1	; case 5
  7858  001502  E0DB               	bz	l6165
  7859  001504  0A03               	xorlw	3	; case 6
  7860  001506  E0E0               	bz	l6171
  7861  001508  0A01               	xorlw	1	; case 7
  7862  00150A  E0E2               	bz	l6175
  7863  00150C  0012               	return		;funcret
  7864  00150E                     __end_of_TeTeclat:
  7865                           	callstack 0
  7866  00150E                     PL6:
  7867                           	callstack 27
  7868  00150E  0E02               	movlw	high __smallconst
  7869  001510  6EF7               	movwf	tblptrh,c
  7870  001512                     	endif
  7871  001512                     	if	0	;tblptru may be non-zero
  7872  001512                     	endif
  7873  001512                     	if	0	;tblptru may be non-zero
  7874  001512                     	endif
  7875  001512  0008               	tblrd		*
  7876  001514  50F5               	movf	tablat,w,c
  7877  001516  0012               	return	
  7878  001518                     __end_ofPL6:
  7879                           	callstack 0
  7880  001518                     PL14:
  7881                           	callstack 27
  7882  001518  5035               	movf	TeTeclat@files^0,w,c
  7883  00151A  0D03               	mullw	3
  7884  00151C  50F3               	movf	243,w,c
  7885  00151E  0F92               	addlw	low _teclaPremuda
  7886  001520  2436               	addwf	TeTeclat@cols^0,w,c
  7887  001522  6E6B               	movwf	??_TeTeclat^0,c
  7888  001524  0EFD               	movlw	253
  7889  001526  266B               	addwf	??_TeTeclat^0,f,c
  7890  001528  C06B  FFF6         	movff	??_TeTeclat,tblptrl
  7891  00152C                     	if	1	;There is more than 1 active tblptr byte
  7892  00152C  0CFD               	retlw	253
  7893  00152E                     __end_ofPL14:
  7894                           	callstack 0
  7895                           
  7896 ;; *************** function _SsetNovaTecla *****************
  7897 ;; Defined at:
  7898 ;;		line 124 in file "Ssms.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;  tecla           1    wreg     unsigned char 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;  tecla           1    5[COMRAM] unsigned char 
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  1    wreg      void 
  7905 ;; Registers used:
  7906 ;;		wreg
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMRAM   BANK0   BANK1
  7912 ;;      Params:         0       0       0
  7913 ;;      Locals:         1       0       0
  7914 ;;      Temps:          0       0       0
  7915 ;;      Totals:         1       0       0
  7916 ;;Total ram usage:        1 bytes
  7917 ;; Hardware stack levels used: 1
  7918 ;; Hardware stack levels required when called: 2
  7919 ;; This function calls:
  7920 ;;		Nothing
  7921 ;; This function is called by:
  7922 ;;		_TeTeclat
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text64
  7927  00011C                     __ptext64:
  7928                           	callstack 0
  7929  00011C                     _SsetNovaTecla:
  7930                           	callstack 27
  7931                           
  7932                           ;incstack = 0
  7933                           ;SsetNovaTecla@tecla stored from wreg
  7934  00011C  6E64               	movwf	SsetNovaTecla@tecla^0,c
  7935                           
  7936                           ;Ssms.c: 125:     novaTecla = tecla;
  7937  00011E  C064  F054         	movff	SsetNovaTecla@tecla,_novaTecla
  7938  000122  0012               	return		;funcret
  7939  000124                     __end_of_SsetNovaTecla:
  7940                           	callstack 0
  7941                           
  7942 ;; *************** function _MsetNovaTecla *****************
  7943 ;; Defined at:
  7944 ;;		line 31 in file "Menu.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;  tecla           1    wreg     unsigned char 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;  tecla           1    5[COMRAM] unsigned char 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      void 
  7951 ;; Registers used:
  7952 ;;		wreg
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1
  7958 ;;      Params:         0       0       0
  7959 ;;      Locals:         1       0       0
  7960 ;;      Temps:          0       0       0
  7961 ;;      Totals:         1       0       0
  7962 ;;Total ram usage:        1 bytes
  7963 ;; Hardware stack levels used: 1
  7964 ;; Hardware stack levels required when called: 2
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_TeTeclat
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text65
  7973  000124                     __ptext65:
  7974                           	callstack 0
  7975  000124                     _MsetNovaTecla:
  7976                           	callstack 27
  7977                           
  7978                           ;incstack = 0
  7979                           ;MsetNovaTecla@tecla stored from wreg
  7980  000124  6E64               	movwf	MsetNovaTecla@tecla^0,c
  7981                           
  7982                           ;Menu.c: 32:     NovaTecla = tecla;
  7983  000126  C064  F052         	movff	MsetNovaTecla@tecla,_NovaTecla
  7984  00012A  0012               	return		;funcret
  7985  00012C                     __end_of_MsetNovaTecla:
  7986                           	callstack 0
  7987                           
  7988 ;; *************** function _TeInit *****************
  7989 ;; Defined at:
  7990 ;;		line 17 in file "TeTeclat.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;		None
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;		None
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  1    wreg      void 
  7997 ;; Registers used:
  7998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMRAM   BANK0   BANK1
  8004 ;;      Params:         0       0       0
  8005 ;;      Locals:         0       0       0
  8006 ;;      Temps:          0       0       0
  8007 ;;      Totals:         0       0       0
  8008 ;;Total ram usage:        0 bytes
  8009 ;; Hardware stack levels used: 1
  8010 ;; Hardware stack levels required when called: 3
  8011 ;; This function calls:
  8012 ;;		_TiGetTimer
  8013 ;; This function is called by:
  8014 ;;		_main
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           	psect	text66
  8019  00012C                     __ptext66:
  8020                           	callstack 0
  8021  00012C                     _TeInit:
  8022                           	callstack 27
  8023                           
  8024                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  8025                           
  8026                           ;incstack = 0
  8027  00012C  ECBB  F00E         	call	_TiGetTimer	;wreg free
  8028  000130  6E38               	movwf	_tiTeclat^0,c
  8029  000132  0012               	return		;funcret
  8030  000134                     __end_of_TeInit:
  8031                           	callstack 0
  8032                           
  8033 ;; *************** function _Sinit *****************
  8034 ;; Defined at:
  8035 ;;		line 18 in file "Ssms.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;		None
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;		None
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      void 
  8042 ;; Registers used:
  8043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1
  8049 ;;      Params:         0       0       0
  8050 ;;      Locals:         0       0       0
  8051 ;;      Temps:          0       0       0
  8052 ;;      Totals:         0       0       0
  8053 ;;Total ram usage:        0 bytes
  8054 ;; Hardware stack levels used: 1
  8055 ;; Hardware stack levels required when called: 3
  8056 ;; This function calls:
  8057 ;;		_TiGetTimer
  8058 ;; This function is called by:
  8059 ;;		_main
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text67
  8064  000134                     __ptext67:
  8065                           	callstack 0
  8066  000134                     _Sinit:
  8067                           	callstack 27
  8068                           
  8069                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  8070                           
  8071                           ;incstack = 0
  8072  000134  ECBB  F00E         	call	_TiGetTimer	;wreg free
  8073  000138  6E3B               	movwf	_timerSMS^0,c
  8074  00013A  0012               	return		;funcret
  8075  00013C                     __end_of_Sinit:
  8076                           	callstack 0
  8077                           
  8078 ;; *************** function _SMotor *****************
  8079 ;; Defined at:
  8080 ;;		line 22 in file "Ssms.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;		None
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;		None
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      void 
  8087 ;; Registers used:
  8088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMRAM   BANK0   BANK1
  8094 ;;      Params:         0       0       0
  8095 ;;      Locals:         0       0       0
  8096 ;;      Temps:          2       0       0
  8097 ;;      Totals:         2       0       0
  8098 ;;Total ram usage:        2 bytes
  8099 ;; Hardware stack levels used: 1
  8100 ;; Hardware stack levels required when called: 3
  8101 ;; This function calls:
  8102 ;;		_MNovaLletra
  8103 ;;		_TiGetTics
  8104 ;;		_TiResetTics
  8105 ;; This function is called by:
  8106 ;;		_main
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text68
  8111  001246                     __ptext68:
  8112                           	callstack 0
  8113  001246                     _SMotor:
  8114                           	callstack 27
  8115                           
  8116                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  8117                           
  8118                           ;incstack = 0
  8119  001246  D0BA               	goto	l6349
  8120  001248                     l6193:
  8121                           
  8122                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  8123  001248  2854               	incf	_novaTecla^0,w,c
  8124  00124A  E008               	bz	l6201
  8125  00124C  A277               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8126  00124E  D006               	goto	l6201
  8127                           
  8128                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  8129  001250  503B               	movf	_timerSMS^0,w,c
  8130  001252  ECA0  F00F         	call	_TiResetTics
  8131                           
  8132                           ;Ssms.c: 29:     state = 3;
  8133  001256  0E03               	movlw	3
  8134  001258  6E39               	movwf	SMotor@state^0,c
  8135                           
  8136                           ;Ssms.c: 30:    }
  8137  00125A  0C03               	retlw	3
  8138  00125C                     l6201:
  8139  00125C  2854               	incf	_novaTecla^0,w,c
  8140  00125E  A4D8               	btfss	status,2,c
  8141  001260  0012               	return	
  8142  001262  503B               	movf	_timerSMS^0,w,c
  8143  001264  ECF8  F00E         	call	_TiGetTics
  8144  001268  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  8145  00126A  0012               	return	
  8146  00126C  D8BE               	call	PL62	;call to abstracted procedure
  8147  00126E  A0D8               	btfss	status,0,c
  8148  001270  0012               	return	
  8149  001272  2855               	incf	_lletraASCII^0,w,c
  8150  001274  A4D8               	btfss	status,2,c
  8151  001276  A277               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8152  001278  0012               	return	
  8153                           
  8154                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  8155  00127A  5055               	movf	_lletraASCII^0,w,c
  8156  00127C  EC9E  F000         	call	_MNovaLletra
  8157                           
  8158                           ;Ssms.c: 33:     lletraASCII = -1;
  8159  001280  6855               	setf	_lletraASCII^0,c
  8160                           
  8161                           ;Ssms.c: 34:     ultimaTecla = -1;
  8162  001282  6853               	setf	_ultimaTecla^0,c
  8163                           
  8164                           ;Ssms.c: 35:     zeroTecla = 0;
  8165  001284  6A3A               	clrf	_zeroTecla^0,c
  8166  001286  0012               	return	
  8167  001288                     l6217:
  8168                           
  8169                           ;Ssms.c: 39:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  8170  001288  5053               	movf	_ultimaTecla^0,w,c
  8171  00128A  1854               	xorwf	_novaTecla^0,w,c
  8172  00128C  E10C               	bnz	l6225
  8173  00128E  503B               	movf	_timerSMS^0,w,c
  8174  001290  ECF8  F00E         	call	_TiGetTics
  8175  001294  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  8176  001296  D002               	goto	u6710
  8177  001298  D8A8               	call	PL62	;call to abstracted procedure
  8178  00129A  E205               	bc	l6225
  8179  00129C                     u6710:
  8180                           
  8181                           ;Ssms.c: 40:     novaTecla = -1;
  8182  00129C  6854               	setf	_novaTecla^0,c
  8183                           
  8184                           ;Ssms.c: 41:     sumaPulsacions++;
  8185  00129E  2A3C               	incf	_sumaPulsacions^0,f,c
  8186                           
  8187                           ;Ssms.c: 42:     lletraASCII++;
  8188  0012A0  2A55               	incf	_lletraASCII^0,f,c
  8189                           
  8190                           ;Ssms.c: 43:     state++;
  8191  0012A2  2A39               	incf	SMotor@state^0,f,c
  8192                           
  8193                           ;Ssms.c: 44:    }
  8194  0012A4  0012               	return	
  8195  0012A6                     l6225:
  8196  0012A6  2854               	incf	_novaTecla^0,w,c
  8197  0012A8  B4D8               	btfsc	status,2,c
  8198  0012AA  0012               	return	
  8199  0012AC  5053               	movf	_ultimaTecla^0,w,c
  8200  0012AE  1854               	xorwf	_novaTecla^0,w,c
  8201  0012B0  B4D8               	btfsc	status,2,c
  8202  0012B2  0012               	return	
  8203                           
  8204                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  8205  0012B4  5055               	movf	_lletraASCII^0,w,c
  8206  0012B6  EC9E  F000         	call	_MNovaLletra
  8207                           
  8208                           ;Ssms.c: 47:     if(novaTecla != 0){
  8209  0012BA  5054               	movf	_novaTecla^0,w,c
  8210  0012BC  E005               	bz	l6235
  8211                           
  8212                           ;Ssms.c: 48:       lletraASCII = lletraInici[novaTecla-2];
  8213  0012BE  5054               	movf	_novaTecla^0,w,c
  8214  0012C0  0FBA               	addlw	low (_lletraInici+254)
  8215  0012C2  EC1F  F009         	call	PL58	;call to abstracted procedure
  8216  0012C6  D001               	goto	L5
  8217  0012C8                     l6235:
  8218                           
  8219                           ;Ssms.c: 50:       lletraASCII = '0';
  8220  0012C8  0E30               	movlw	48
  8221  0012CA                     L5:
  8222  0012CA  6E55               	movwf	_lletraASCII^0,c
  8223                           
  8224                           ;Ssms.c: 52:     zeroTecla=0;
  8225  0012CC  6A3A               	clrf	_zeroTecla^0,c
  8226                           
  8227                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  8228  0012CE  C054  F053         	movff	_novaTecla,_ultimaTecla
  8229                           
  8230                           ;Ssms.c: 54:     sumaPulsacions = 0;
  8231  0012D2  6A3C               	clrf	_sumaPulsacions^0,c
  8232                           
  8233                           ;Ssms.c: 55:     novaTecla = -1;
  8234  0012D4  6854               	setf	_novaTecla^0,c
  8235                           
  8236                           ;Ssms.c: 56:     state--;
  8237  0012D6  0639               	decf	SMotor@state^0,f,c
  8238  0012D8  0012               	return	
  8239  0012DA                     l6247:
  8240                           
  8241                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  8242  0012DA  0E07               	movlw	7
  8243  0012DC  1853               	xorwf	_ultimaTecla^0,w,c
  8244  0012DE  E008               	bz	l6255
  8245  0012E0  0E09               	movlw	9
  8246  0012E2  1853               	xorwf	_ultimaTecla^0,w,c
  8247  0012E4  E005               	bz	l6255
  8248  0012E6  5053               	movf	_ultimaTecla^0,w,c
  8249  0012E8  E003               	bz	l6255
  8250                           
  8251                           ;Ssms.c: 61:     state = 5;
  8252  0012EA  0E05               	movlw	5
  8253  0012EC  6E39               	movwf	SMotor@state^0,c
  8254                           
  8255                           ;Ssms.c: 62:    }
  8256  0012EE  0C05               	retlw	5
  8257  0012F0                     l6255:
  8258  0012F0  0E07               	movlw	7
  8259  0012F2  1853               	xorwf	_ultimaTecla^0,w,c
  8260  0012F4  E003               	bz	u6790
  8261  0012F6  0E09               	movlw	9
  8262  0012F8  1853               	xorwf	_ultimaTecla^0,w,c
  8263  0012FA  E103               	bnz	l6261
  8264  0012FC                     u6790:
  8265                           
  8266                           ;Ssms.c: 64:     state = 6;
  8267  0012FC  0E06               	movlw	6
  8268  0012FE  6E39               	movwf	SMotor@state^0,c
  8269                           
  8270                           ;Ssms.c: 65:    }
  8271  001300  0C06               	retlw	6
  8272  001302                     l6261:
  8273  001302  5053               	movf	_ultimaTecla^0,w,c
  8274  001304  A4D8               	btfss	status,2,c
  8275  001306  0012               	return	
  8276                           
  8277                           ;Ssms.c: 67:     zeroTecla++;
  8278  001308  2A3A               	incf	_zeroTecla^0,f,c
  8279                           
  8280                           ;Ssms.c: 68:     if(zeroTecla == 2) zeroTecla = 0;
  8281  00130A  0E02               	movlw	2
  8282  00130C  183A               	xorwf	_zeroTecla^0,w,c
  8283  00130E  E101               	bnz	l6269
  8284  001310  6A3A               	clrf	_zeroTecla^0,c
  8285  001312                     l6269:
  8286                           
  8287                           ;Ssms.c: 69:     lletraASCII = arrayZero[zeroTecla];
  8288  001312  503A               	movf	_zeroTecla^0,w,c
  8289  001314  0F45               	addlw	low _arrayZero
  8290  001316  EC1F  F009         	call	PL58	;call to abstracted procedure
  8291  00131A  6E55               	movwf	_lletraASCII^0,c
  8292  00131C                     l6271:
  8293                           
  8294                           ;Ssms.c: 70:     state = 0;
  8295  00131C  6A39               	clrf	SMotor@state^0,c
  8296  00131E  0012               	return	
  8297  001320                     l6273:
  8298                           
  8299                           ;Ssms.c: 74:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  8300  001320  5054               	movf	_novaTecla^0,w,c
  8301  001322  0A80               	xorlw	128
  8302  001324  0F7E               	addlw	-130
  8303  001326  E202               	bc	u6830
  8304  001328  5054               	movf	_novaTecla^0,w,c
  8305  00132A  E107               	bnz	l6281
  8306  00132C                     u6830:
  8307  00132C  5054               	movf	_novaTecla^0,w,c
  8308  00132E  0A80               	xorlw	128
  8309  001330  0F76               	addlw	-138
  8310  001332  E203               	bc	l6281
  8311                           
  8312                           ;Ssms.c: 75:     state = 1;
  8313  001334  0E01               	movlw	1
  8314  001336  6E39               	movwf	SMotor@state^0,c
  8315                           
  8316                           ;Ssms.c: 76:    }
  8317  001338  0C01               	retlw	1
  8318  00133A                     l6281:
  8319  00133A  5054               	movf	_novaTecla^0,w,c
  8320  00133C  E00C               	bz	l6293
  8321  00133E  5054               	movf	_novaTecla^0,w,c
  8322  001340  0A80               	xorlw	128
  8323  001342  0F7E               	addlw	-130
  8324  001344  E208               	bc	l6293
  8325  001346  2855               	incf	_lletraASCII^0,w,c
  8326  001348  E106               	bnz	l6293
  8327                           
  8328                           ;Ssms.c: 78:     MNovaLletra(novaTecla+48);
  8329  00134A  5054               	movf	_novaTecla^0,w,c
  8330  00134C  0F30               	addlw	48
  8331  00134E  EC9E  F000         	call	_MNovaLletra
  8332  001352                     l6289:
  8333                           
  8334                           ;Ssms.c: 79:     novaTecla = -1;
  8335  001352  6854               	setf	_novaTecla^0,c
  8336  001354  D7E3               	goto	l6271
  8337  001356                     l6293:
  8338  001356  5054               	movf	_novaTecla^0,w,c
  8339  001358  B4D8               	btfsc	status,2,c
  8340  00135A  0012               	return	
  8341  00135C  5054               	movf	_novaTecla^0,w,c
  8342  00135E  0A80               	xorlw	128
  8343  001360  0F7E               	addlw	-130
  8344  001362  B0D8               	btfsc	status,0,c
  8345  001364  0012               	return	
  8346  001366  2855               	incf	_lletraASCII^0,w,c
  8347  001368  B4D8               	btfsc	status,2,c
  8348  00136A  0012               	return	
  8349                           
  8350                           ;Ssms.c: 83:     MNovaLletra(lletraASCII);
  8351  00136C  5055               	movf	_lletraASCII^0,w,c
  8352  00136E  EC9E  F000         	call	_MNovaLletra
  8353                           
  8354                           ;Ssms.c: 84:     lletraASCII = -1;
  8355  001372  6855               	setf	_lletraASCII^0,c
  8356                           
  8357                           ;Ssms.c: 85:     state++;
  8358  001374  2A39               	incf	SMotor@state^0,f,c
  8359  001376  0012               	return	
  8360  001378                     l6305:
  8361                           
  8362                           ;Ssms.c: 89:    MNovaLletra(novaTecla+48);
  8363  001378  5054               	movf	_novaTecla^0,w,c
  8364  00137A  0F30               	addlw	48
  8365  00137C  EC9E  F000         	call	_MNovaLletra
  8366  001380  D7E8               	goto	l6289
  8367  001382                     l6311:
  8368                           
  8369                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  8370  001382  0E04               	movlw	4
  8371  001384  183C               	xorwf	_sumaPulsacions^0,w,c
  8372  001386  E108               	bnz	l6319
  8373  001388                     u6910:
  8374                           
  8375                           ;Ssms.c: 95:     lletraASCII = lletraInici[ultimaTecla-2];
  8376  001388  5053               	movf	_ultimaTecla^0,w,c
  8377  00138A  0FBA               	addlw	low (_lletraInici+254)
  8378  00138C  6ED9               	movwf	fsr2l,c
  8379  00138E  6ADA               	clrf	fsr2h,c
  8380  001390  50DF               	movf	indf2,w,c
  8381  001392  6E55               	movwf	_lletraASCII^0,c
  8382                           
  8383                           ;Ssms.c: 96:     sumaPulsacions = 0;
  8384  001394  6A3C               	clrf	_sumaPulsacions^0,c
  8385  001396  D7C2               	goto	l6271
  8386  001398                     l6319:
  8387  001398  0E03               	movlw	3
  8388  00139A  183C               	xorwf	_sumaPulsacions^0,w,c
  8389  00139C  E103               	bnz	l6325
  8390  00139E                     u6920:
  8391                           
  8392                           ;Ssms.c: 100:     lletraASCII = ultimaTecla+48;
  8393  00139E  5053               	movf	_ultimaTecla^0,w,c
  8394  0013A0  0F30               	addlw	48
  8395  0013A2  D7BB               	goto	L6
  8396  0013A4                     l6325:
  8397  0013A4  0E03               	movlw	3
  8398  0013A6  603C               	cpfslt	_sumaPulsacions^0,c
  8399  0013A8  0012               	return	
  8400  0013AA  D7B8               	goto	l6271
  8401  0013AC                     l6329:
  8402                           
  8403                           ;Ssms.c: 108:    if (sumaPulsacions == 4) {
  8404  0013AC  0E04               	movlw	4
  8405  0013AE  183C               	xorwf	_sumaPulsacions^0,w,c
  8406  0013B0  E0F6               	bz	u6920
  8407  0013B2  0E05               	movlw	5
  8408  0013B4  183C               	xorwf	_sumaPulsacions^0,w,c
  8409  0013B6  E0E8               	bz	u6910
  8410  0013B8  0E04               	movlw	4
  8411  0013BA  D7F5               	goto	L7
  8412  0013BC                     l6349:
  8413  0013BC  5039               	movf	SMotor@state^0,w,c
  8414  0013BE  6E6B               	movwf	??_SMotor^0,c
  8415  0013C0  6A6C               	clrf	(??_SMotor+1)^0,c
  8416                           
  8417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8418                           ; Switch size 1, requested type "space"
  8419                           ; Number of cases is 1, Range of values is 0 to 0
  8420                           ; switch strategies available:
  8421                           ; Name         Instructions Cycles
  8422                           ; simple_byte            4     3 (average)
  8423                           ;	Chosen strategy is simple_byte
  8424  0013C2  506C               	movf	(??_SMotor+1)^0,w,c
  8425  0013C4  A4D8               	btfss	status,2,c
  8426  0013C6  0012               	return	
  8427                           
  8428                           ; Switch size 1, requested type "space"
  8429                           ; Number of cases is 7, Range of values is 0 to 6
  8430                           ; switch strategies available:
  8431                           ; Name         Instructions Cycles
  8432                           ; simple_byte           22    12 (average)
  8433                           ;	Chosen strategy is simple_byte
  8434  0013C8  506B               	movf	??_SMotor^0,w,c
  8435  0013CA  E101 D73D          	bz	l6193
  8436  0013CE  0A01               	xorlw	1	; case 1
  8437  0013D0  E101 D75A          	bz	l6217
  8438  0013D4  0A03               	xorlw	3	; case 2
  8439  0013D6  E081               	bz	l6247
  8440  0013D8  0A01               	xorlw	1	; case 3
  8441  0013DA  E0A2               	bz	l6273
  8442  0013DC  0A07               	xorlw	7	; case 4
  8443  0013DE  E0CC               	bz	l6305
  8444  0013E0  0A01               	xorlw	1	; case 5
  8445  0013E2  E0CF               	bz	l6311
  8446  0013E4  0A03               	xorlw	3	; case 6
  8447  0013E6  E0E2               	bz	l6329
  8448  0013E8  0012               	return		;funcret
  8449  0013EA                     __end_of_SMotor:
  8450                           	callstack 0
  8451  0013EA                     PL62:
  8452                           	callstack 27
  8453  0013EA  0E5A               	movlw	90
  8454  0013EC  5C64               	subwf	?_TiGetTics^0,w,c
  8455  0013EE  0E02               	movlw	2
  8456  0013F0  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  8457  0013F2  0012               	return	
  8458  0013F4                     __end_ofPL62:
  8459                           	callstack 0
  8460                           
  8461 ;; *************** function _MNovaLletra *****************
  8462 ;; Defined at:
  8463 ;;		line 35 in file "Menu.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  lletra          1    wreg     unsigned char 
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;  lletra          1    5[COMRAM] unsigned char 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1
  8477 ;;      Params:         0       0       0
  8478 ;;      Locals:         1       0       0
  8479 ;;      Temps:          0       0       0
  8480 ;;      Totals:         1       0       0
  8481 ;;Total ram usage:        1 bytes
  8482 ;; Hardware stack levels used: 1
  8483 ;; Hardware stack levels required when called: 2
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		_SMotor
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text69
  8492  00013C                     __ptext69:
  8493                           	callstack 0
  8494  00013C                     _MNovaLletra:
  8495                           	callstack 27
  8496                           
  8497                           ;incstack = 0
  8498                           ;MNovaLletra@lletra stored from wreg
  8499  00013C  6E64               	movwf	MNovaLletra@lletra^0,c
  8500                           
  8501                           ;Menu.c: 36:     novaLletra = lletra;
  8502  00013E  C064  F051         	movff	MNovaLletra@lletra,_novaLletra
  8503  000142  0012               	return		;funcret
  8504  000144                     __end_of_MNovaLletra:
  8505                           	callstack 0
  8506                           
  8507 ;; *************** function _Minit *****************
  8508 ;; Defined at:
  8509 ;;		line 28 in file "Menu.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;		None
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;		None
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      void 
  8516 ;; Registers used:
  8517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMRAM   BANK0   BANK1
  8523 ;;      Params:         0       0       0
  8524 ;;      Locals:         0       0       0
  8525 ;;      Temps:          0       0       0
  8526 ;;      Totals:         0       0       0
  8527 ;;Total ram usage:        0 bytes
  8528 ;; Hardware stack levels used: 1
  8529 ;; Hardware stack levels required when called: 3
  8530 ;; This function calls:
  8531 ;;		_TiGetTimer
  8532 ;; This function is called by:
  8533 ;;		_main
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           	psect	text70
  8538  000144                     __ptext70:
  8539                           	callstack 0
  8540  000144                     _Minit:
  8541                           	callstack 27
  8542                           
  8543                           ;Menu.c: 29:     timerMenu = TiGetTimer();
  8544                           
  8545                           ;incstack = 0
  8546  000144  ECBB  F00E         	call	_TiGetTimer	;wreg free
  8547  000148  6E32               	movwf	_timerMenu^0,c
  8548  00014A  0012               	return		;funcret
  8549  00014C                     __end_of_Minit:
  8550                           	callstack 0
  8551                           
  8552 ;; *************** function _LcLCD *****************
  8553 ;; Defined at:
  8554 ;;		line 232 in file "LcTLCD.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;		None
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;		None
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  1    wreg      void 
  8561 ;; Registers used:
  8562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMRAM   BANK0   BANK1
  8568 ;;      Params:         0       0       0
  8569 ;;      Locals:         0       0       0
  8570 ;;      Temps:          0       0       0
  8571 ;;      Totals:         0       0       0
  8572 ;;Total ram usage:        0 bytes
  8573 ;; Hardware stack levels used: 1
  8574 ;; Hardware stack levels required when called: 6
  8575 ;; This function calls:
  8576 ;;		_LcPutChar
  8577 ;; This function is called by:
  8578 ;;		_main
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           	psect	text71
  8583  001B7A                     __ptext71:
  8584                           	callstack 0
  8585  001B7A                     _LcLCD:
  8586                           	callstack 24
  8587                           
  8588                           ;LcTLCD.c: 233:     if(nou_s == 1){
  8589                           
  8590                           ;incstack = 0
  8591  001B7A  A477               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8592  001B7C  0012               	return	
  8593                           
  8594                           ;LcTLCD.c: 234:         LcPutChar(*s_ptr);
  8595  001B7E  D818               	call	PL36	;call to abstracted procedure
  8596  001B80  64F7               	cpfsgt	tblptrh,c
  8597  001B82  D003               	bra	u4087
  8598  001B84  0008               	tblrd		*
  8599  001B86  50F5               	movf	tablat,w,c
  8600  001B88  D001               	bra	u4080
  8601  001B8A                     u4087:
  8602  001B8A  D819               	call	PL46	;call to abstracted procedure
  8603  001B8C                     u4080:
  8604  001B8C  ECE5  F00D         	call	_LcPutChar
  8605                           
  8606                           ;LcTLCD.c: 235:         s_ptr++;
  8607  001B90  4A0B               	infsnz	_s_ptr^0,f,c
  8608  001B92  2A0C               	incf	(_s_ptr+1)^0,f,c
  8609                           
  8610                           ;LcTLCD.c: 236:         if(*s_ptr == '\0'){
  8611  001B94  D80D               	call	PL36	;call to abstracted procedure
  8612  001B96  64F7               	cpfsgt	tblptrh,c
  8613  001B98  D003               	bra	u4097
  8614  001B9A  0008               	tblrd		*
  8615  001B9C  50F5               	movf	tablat,w,c
  8616  001B9E  D001               	bra	u4090
  8617  001BA0                     u4097:
  8618  001BA0  D80E               	call	PL46	;call to abstracted procedure
  8619  001BA2                     u4090:
  8620  001BA2  0900               	iorlw	0
  8621  001BA4  A4D8               	btfss	status,2,c
  8622  001BA6  0012               	return	
  8623                           
  8624                           ;LcTLCD.c: 237:             nou_s = 0;
  8625  001BA8  9477               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8626                           
  8627                           ;LcTLCD.c: 238:             s_ptr=0;
  8628  001BAA  6A0B               	clrf	_s_ptr^0,c
  8629  001BAC  6A0C               	clrf	(_s_ptr+1)^0,c
  8630  001BAE  0012               	return		;funcret
  8631  001BB0                     __end_of_LcLCD:
  8632                           	callstack 0
  8633  001BB0                     PL36:
  8634                           	callstack 24
  8635  001BB0  C00B  FFF6         	movff	_s_ptr,tblptrl
  8636  001BB4  C00C  FFF7         	movff	_s_ptr+1,tblptrh
  8637  001BB8  6AF8               	clrf	tblptru,c
  8638  001BBA  0E01               	movlw	(high __ramtop+-1)
  8639  001BBC  0012               	return	
  8640  001BBE                     __end_ofPL36:
  8641                           	callstack 0
  8642  001BBE                     PL46:
  8643                           	callstack 24
  8644  001BBE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8645  001BC2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8646  001BC6  50E7               	movf	indf1,w,c
  8647  001BC8  0012               	return	
  8648  001BCA                     __end_ofPL46:
  8649                           	callstack 0
  8650                           
  8651 ;; *************** function _LcInit *****************
  8652 ;; Defined at:
  8653 ;;		line 41 in file "LcTLCD.c"
  8654 ;; Parameters:    Size  Location     Type
  8655 ;;  rows            1    wreg     unsigned char 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;  rows            1   16[COMRAM] unsigned char 
  8658 ;;  i               2   17[COMRAM] int 
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  1    wreg      void 
  8661 ;; Registers used:
  8662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8663 ;; Tracked objects:
  8664 ;;		On entry : 0/0
  8665 ;;		On exit  : 0/0
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMRAM   BANK0   BANK1
  8668 ;;      Params:         0       0       0
  8669 ;;      Locals:         3       0       0
  8670 ;;      Temps:          0       0       0
  8671 ;;      Totals:         3       0       0
  8672 ;;Total ram usage:        3 bytes
  8673 ;; Hardware stack levels used: 1
  8674 ;; Hardware stack levels required when called: 4
  8675 ;; This function calls:
  8676 ;;		_CantaIR
  8677 ;;		_EscriuPrimeraOrdre
  8678 ;;		_Espera
  8679 ;;		_TiGetTimer
  8680 ;;		_WaitForBusy
  8681 ;; This function is called by:
  8682 ;;		_main
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           	psect	text72
  8687  0016DA                     __ptext72:
  8688                           	callstack 0
  8689  0016DA                     _LcInit:
  8690                           	callstack 26
  8691                           
  8692                           ;incstack = 0
  8693                           ;LcInit@rows stored from wreg
  8694  0016DA  6E6F               	movwf	LcInit@rows^0,c
  8695                           
  8696                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  8697  0016DC  ECBB  F00E         	call	_TiGetTimer	;wreg free
  8698  0016E0  6E3D               	movwf	_Timer^0,c
  8699                           
  8700                           ;LcTLCD.c: 49:  Rows = rows;
  8701  0016E2  C06F  F040         	movff	LcInit@rows,_Rows
  8702                           
  8703                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  8704  0016E6  6A3E               	clrf	_ColumnAct^0,c
  8705  0016E8  6A3F               	clrf	_RowAct^0,c
  8706                           
  8707                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8708  0016EA  9894               	bcf	148,4,c	;volatile
  8709  0016EC  9E95               	bcf	149,7,c	;volatile
  8710  0016EE  9A94               	bcf	148,5,c	;volatile
  8711                           
  8712                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  8713  0016F0  6A70               	clrf	LcInit@i^0,c
  8714  0016F2  6A71               	clrf	(LcInit@i+1)^0,c
  8715  0016F4                     l4691:
  8716                           
  8717                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  8718  0016F4  6A6C               	clrf	(Espera@ms+1)^0,c
  8719  0016F6  0E64               	movlw	100
  8720  0016F8  6E6B               	movwf	Espera@ms^0,c
  8721  0016FA  503D               	movf	_Timer^0,w,c
  8722  0016FC  EC64  F00F         	call	_Espera
  8723                           
  8724                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  8725  001700  0E03               	movlw	3
  8726  001702  ECA9  F00C         	call	_EscriuPrimeraOrdre
  8727                           
  8728                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  8729  001706  6A6C               	clrf	(Espera@ms+1)^0,c
  8730  001708  0E05               	movlw	5
  8731  00170A  6E6B               	movwf	Espera@ms^0,c
  8732  00170C  503D               	movf	_Timer^0,w,c
  8733  00170E  EC64  F00F         	call	_Espera
  8734                           
  8735                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  8736  001712  0E03               	movlw	3
  8737  001714  ECA9  F00C         	call	_EscriuPrimeraOrdre
  8738                           
  8739                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8740  001718  D83A               	call	PL78	;call to abstracted procedure
  8741  00171A  EC64  F00F         	call	_Espera
  8742                           
  8743                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  8744  00171E  0E03               	movlw	3
  8745  001720  ECA9  F00C         	call	_EscriuPrimeraOrdre
  8746                           
  8747                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  8748  001724  D834               	call	PL78	;call to abstracted procedure
  8749  001726  EC64  F00F         	call	_Espera
  8750                           
  8751                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  8752  00172A  0E02               	movlw	2
  8753  00172C  ECA9  F00C         	call	_EscriuPrimeraOrdre
  8754                           
  8755                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  8756  001730  6A6C               	clrf	(Espera@ms+1)^0,c
  8757  001732  0E04               	movlw	4
  8758  001734  6E6B               	movwf	Espera@ms^0,c
  8759  001736  503D               	movf	_Timer^0,w,c
  8760  001738  EC64  F00F         	call	_Espera
  8761                           
  8762                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  8763  00173C  0E28               	movlw	40
  8764  00173E  EC92  F00F         	call	_CantaIR
  8765                           
  8766                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  8767  001742  EC4C  F00E         	call	_WaitForBusy	;wreg free
  8768  001746  0E08               	movlw	8
  8769  001748  EC92  F00F         	call	_CantaIR
  8770                           
  8771                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  8772  00174C  EC4C  F00E         	call	_WaitForBusy	;wreg free
  8773  001750  0E01               	movlw	1
  8774  001752  EC92  F00F         	call	_CantaIR
  8775                           
  8776                           ;LcTLCD.c: 71:   Espera(Timer,3);
  8777  001756  EC5F  F00F         	call	PL76	;call to abstracted procedure
  8778  00175A  EC64  F00F         	call	_Espera
  8779                           
  8780                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  8781  00175E  EC4C  F00E         	call	_WaitForBusy	;wreg free
  8782  001762  0E06               	movlw	6
  8783  001764  EC92  F00F         	call	_CantaIR
  8784                           
  8785                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  8786  001768  EC4C  F00E         	call	_WaitForBusy	;wreg free
  8787  00176C  0E0F               	movlw	15
  8788  00176E  EC92  F00F         	call	_CantaIR
  8789                           
  8790                           ;LcTLCD.c: 74:  }
  8791  001772  4A70               	infsnz	LcInit@i^0,f,c
  8792  001774  2A71               	incf	(LcInit@i+1)^0,f,c
  8793  001776  BE71               	btfsc	(LcInit@i+1)^0,7,c
  8794  001778  D7BD               	goto	l4691
  8795  00177A  5071               	movf	(LcInit@i+1)^0,w,c
  8796  00177C  E103               	bnz	u4060
  8797  00177E  0E02               	movlw	2
  8798  001780  5C70               	subwf	LcInit@i^0,w,c
  8799  001782  E3B8               	bnc	l4691
  8800  001784                     u4060:
  8801                           
  8802                           ;LcTLCD.c: 80:     WaitForBusy();
  8803  001784  EC4C  F00E         	call	_WaitForBusy	;wreg free
  8804                           
  8805                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  8806  001788  0E0C               	movlw	12
  8807  00178A  EF92  F00F         	goto	_CantaIR
  8808  00178E                     __end_of_LcInit:
  8809                           	callstack 0
  8810  00178E                     PL78:
  8811                           	callstack 26
  8812  00178E  6A6C               	clrf	(Espera@ms+1)^0,c
  8813  001790  0E01               	movlw	1
  8814  001792  6E6B               	movwf	Espera@ms^0,c
  8815  001794  503D               	movf	_Timer^0,w,c
  8816  001796  0012               	return	
  8817  001798                     __end_ofPL78:
  8818                           	callstack 0
  8819                           
  8820 ;; *************** function _EscriuPrimeraOrdre *****************
  8821 ;; Defined at:
  8822 ;;		line 216 in file "LcTLCD.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;  ordre           1    wreg     unsigned char 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;  ordre           1    6[COMRAM] unsigned char 
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  1    wreg      void 
  8829 ;; Registers used:
  8830 ;;		wreg, status,2, status,0
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1
  8836 ;;      Params:         0       0       0
  8837 ;;      Locals:         1       0       0
  8838 ;;      Temps:          1       0       0
  8839 ;;      Totals:         2       0       0
  8840 ;;Total ram usage:        2 bytes
  8841 ;; Hardware stack levels used: 1
  8842 ;; Hardware stack levels required when called: 2
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_LcInit
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text73
  8851  001952                     __ptext73:
  8852                           	callstack 0
  8853  001952                     _EscriuPrimeraOrdre:
  8854                           	callstack 27
  8855                           
  8856                           ;incstack = 0
  8857                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8858  001952  6E65               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8859                           
  8860                           ;LcTLCD.c: 218:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8861  001954  9694               	bcf	148,3,c	;volatile
  8862                           
  8863                           ;LcTLCD.c: 219:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8864  001956  D82F               	call	PL38	;call to abstracted procedure
  8865  001958  888B               	bsf	139,4,c	;volatile
  8866                           
  8867                           ;LcTLCD.c: 220:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8868  00195A  A665               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8869  00195C  D003               	goto	u250
  8870  00195E  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8871  001960  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8872  001962  D001               	goto	u268
  8873  001964                     u250:
  8874  001964  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8875  001966                     u268:
  8876  001966  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8877  001968  D82D               	call	PL72	;call to abstracted procedure
  8878  00196A  0BF7               	andlw	-9
  8879  00196C  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8880  00196E  6E8B               	movwf	139,c	;volatile
  8881                           
  8882                           ;LcTLCD.c: 221:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8883  001970  A465               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8884  001972  D003               	goto	u270
  8885  001974  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8886  001976  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8887  001978  D001               	goto	u288
  8888  00197A                     u270:
  8889  00197A  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8890  00197C                     u288:
  8891  00197C  D823               	call	PL72	;call to abstracted procedure
  8892  00197E  0BFB               	andlw	-5
  8893  001980  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8894  001982  6E8B               	movwf	139,c	;volatile
  8895                           
  8896                           ;LcTLCD.c: 222:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8897  001984  A265               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8898  001986  D003               	goto	u290
  8899  001988  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8900  00198A  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8901  00198C  D001               	goto	u308
  8902  00198E                     u290:
  8903  00198E  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8904  001990                     u308:
  8905  001990  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8906  001992  508B               	movf	139,w,c	;volatile
  8907  001994  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8908  001996  0BFD               	andlw	-3
  8909  001998  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8910  00199A  6E8B               	movwf	139,c	;volatile
  8911                           
  8912                           ;LcTLCD.c: 223:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8913  00199C  A065               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8914  00199E  D003               	goto	u310
  8915  0019A0  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8916  0019A2  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8917  0019A4  D001               	goto	u328
  8918  0019A6                     u310:
  8919  0019A6  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8920  0019A8                     u328:
  8921  0019A8  508B               	movf	139,w,c	;volatile
  8922  0019AA  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8923  0019AC  0BFE               	andlw	-2
  8924  0019AE  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8925  0019B0  6E8B               	movwf	139,c	;volatile
  8926                           
  8927                           ;LcTLCD.c: 224:  (LATCbits.LATC4 = 0);
  8928  0019B2  988B               	bcf	139,4,c	;volatile
  8929  0019B4  0012               	return		;funcret
  8930  0019B6                     __end_of_EscriuPrimeraOrdre:
  8931                           	callstack 0
  8932  0019B6                     PL38:
  8933                           	callstack 24
  8934  0019B6  9494               	bcf	148,2,c	;volatile
  8935  0019B8  9294               	bcf	148,1,c	;volatile
  8936  0019BA  9094               	bcf	148,0,c	;volatile
  8937  0019BC  9A8B               	bcf	139,5,c	;volatile
  8938  0019BE  9E8C               	bcf	140,7,c	;volatile
  8939  0019C0  888B               	bsf	139,4,c	;volatile
  8940  0019C2  0012               	return	
  8941  0019C4                     __end_ofPL38:
  8942                           	callstack 0
  8943  0019C4                     PL72:
  8944                           	callstack 27
  8945  0019C4  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8946  0019C6  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8947  0019C8  508B               	movf	139,w,c	;volatile
  8948  0019CA  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8949  0019CC  0012               	return	
  8950  0019CE                     __end_ofPL72:
  8951                           	callstack 0
  8952                           
  8953 ;; *************** function _JoystickMotor *****************
  8954 ;; Defined at:
  8955 ;;		line 18 in file "Joystick.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;		None
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;		None
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  1    wreg      void 
  8962 ;; Registers used:
  8963 ;;		wreg, status,2, status,0, cstack
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMRAM   BANK0   BANK1
  8969 ;;      Params:         0       0       0
  8970 ;;      Locals:         0       0       0
  8971 ;;      Temps:          2       0       0
  8972 ;;      Totals:         2       0       0
  8973 ;;Total ram usage:        2 bytes
  8974 ;; Hardware stack levels used: 1
  8975 ;; Hardware stack levels required when called: 3
  8976 ;; This function calls:
  8977 ;;		_MNouJoystick
  8978 ;; This function is called by:
  8979 ;;		_main
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           	psect	text74
  8984  001604                     __ptext74:
  8985                           	callstack 0
  8986  001604                     _JoystickMotor:
  8987                           	callstack 27
  8988                           
  8989                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  8990                           
  8991                           ;incstack = 0
  8992  001604  D056               	goto	l3203
  8993  001606                     l1012:
  8994                           
  8995                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8996  001606  B2C2               	btfsc	194,1,c	;volatile
  8997  001608  D00B               	goto	l1013
  8998  00160A  0EC8               	movlw	200
  8999  00160C  60C4               	cpfslt	196,c	;volatile
  9000  00160E  D008               	goto	l1013
  9001  001610  0E32               	movlw	50
  9002  001612  64C4               	cpfsgt	196,c	;volatile
  9003  001614  D005               	goto	l1013
  9004                           
  9005                           ;Joystick.c: 23:     ADCON0 = 0x07;
  9006  001616  0E07               	movlw	7
  9007  001618  6EC2               	movwf	194,c	;volatile
  9008                           
  9009                           ;Joystick.c: 24:                 cap1 = 1;
  9010  00161A  8076               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  9011  00161C                     l3133:
  9012                           
  9013                           ;Joystick.c: 25:     state++;
  9014  00161C  2A17               	incf	JoystickMotor@state^0,f,c
  9015                           
  9016                           ;Joystick.c: 26:    }
  9017  00161E  D052               	goto	l1020
  9018  001620                     l1013:
  9019  001620  B2C2               	btfsc	194,1,c	;volatile
  9020  001622  D00F               	goto	l1015
  9021  001624  0EC7               	movlw	199
  9022  001626  64C4               	cpfsgt	196,c	;volatile
  9023  001628  D00C               	goto	l1015
  9024                           
  9025                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  9026  00162A  0E02               	movlw	2
  9027  00162C  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9028  00162E  E003               	bz	l3141
  9029  001630  0E02               	movlw	2
  9030  001632  ECA6  F000         	call	_MNouJoystick
  9031  001636                     l3141:
  9032                           
  9033                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  9034  001636  0E02               	movlw	2
  9035  001638  6E18               	movwf	_ultimaTeclaAD^0,c
  9036                           
  9037                           ;Joystick.c: 30:     ADCON0 = 0x07;
  9038  00163A  0E07               	movlw	7
  9039  00163C  6EC2               	movwf	194,c	;volatile
  9040                           
  9041                           ;Joystick.c: 31:                 cap1 = 0;
  9042  00163E  9076               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  9043  001640  D7ED               	goto	l3133
  9044  001642                     l1015:
  9045  001642  B2C2               	btfsc	194,1,c	;volatile
  9046  001644  D03F               	goto	l1020
  9047  001646  0E33               	movlw	51
  9048  001648  60C4               	cpfslt	196,c	;volatile
  9049  00164A  D03C               	goto	l1020
  9050                           
  9051                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  9052  00164C  0E08               	movlw	8
  9053  00164E  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9054  001650  E003               	bz	l3155
  9055  001652  0E08               	movlw	8
  9056  001654  ECA6  F000         	call	_MNouJoystick
  9057  001658                     l3155:
  9058                           
  9059                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  9060  001658  0E08               	movlw	8
  9061  00165A  D7EE               	goto	L8
  9062  00165C                     l1021:
  9063                           
  9064                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9065  00165C  B2C2               	btfsc	194,1,c	;volatile
  9066  00165E  D00B               	goto	l1022
  9067  001660  0EC8               	movlw	200
  9068  001662  60C4               	cpfslt	196,c	;volatile
  9069  001664  D008               	goto	l1022
  9070  001666  0E32               	movlw	50
  9071  001668  64C4               	cpfsgt	196,c	;volatile
  9072  00166A  D005               	goto	l1022
  9073                           
  9074                           ;Joystick.c: 44:     ADCON0 = 0x03;
  9075  00166C  0E03               	movlw	3
  9076  00166E  6EC2               	movwf	194,c	;volatile
  9077                           
  9078                           ;Joystick.c: 45:                 cap2 = 1;
  9079  001670  8E75               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  9080  001672                     l3171:
  9081                           
  9082                           ;Joystick.c: 46:     state--;
  9083  001672  0617               	decf	JoystickMotor@state^0,f,c
  9084                           
  9085                           ;Joystick.c: 47:    }
  9086  001674  D027               	goto	l1020
  9087  001676                     l1022:
  9088  001676  B2C2               	btfsc	194,1,c	;volatile
  9089  001678  D00F               	goto	l1024
  9090  00167A  0EC7               	movlw	199
  9091  00167C  64C4               	cpfsgt	196,c	;volatile
  9092  00167E  D00C               	goto	l1024
  9093                           
  9094                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  9095  001680  0E06               	movlw	6
  9096  001682  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9097  001684  E003               	bz	l3179
  9098  001686  0E06               	movlw	6
  9099  001688  ECA6  F000         	call	_MNouJoystick
  9100  00168C                     l3179:
  9101                           
  9102                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  9103  00168C  0E06               	movlw	6
  9104  00168E  6E18               	movwf	_ultimaTeclaAD^0,c
  9105                           
  9106                           ;Joystick.c: 51:     ADCON0 = 0x03;
  9107  001690  0E03               	movlw	3
  9108  001692  6EC2               	movwf	194,c	;volatile
  9109                           
  9110                           ;Joystick.c: 52:                 cap2 = 0;
  9111  001694  9E75               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  9112  001696  D7ED               	goto	l3171
  9113  001698                     l1024:
  9114  001698  B2C2               	btfsc	194,1,c	;volatile
  9115  00169A  D014               	goto	l1020
  9116  00169C  0E33               	movlw	51
  9117  00169E  60C4               	cpfslt	196,c	;volatile
  9118  0016A0  D011               	goto	l1020
  9119                           
  9120                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  9121  0016A2  0E04               	movlw	4
  9122  0016A4  1818               	xorwf	_ultimaTeclaAD^0,w,c
  9123  0016A6  E003               	bz	l3193
  9124  0016A8  0E04               	movlw	4
  9125  0016AA  ECA6  F000         	call	_MNouJoystick
  9126  0016AE                     l3193:
  9127                           
  9128                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  9129  0016AE  0E04               	movlw	4
  9130  0016B0  D7EE               	goto	L9
  9131  0016B2                     l3203:
  9132  0016B2  5017               	movf	JoystickMotor@state^0,w,c
  9133  0016B4  6E65               	movwf	??_JoystickMotor^0,c
  9134  0016B6  6A66               	clrf	(??_JoystickMotor+1)^0,c
  9135                           
  9136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9137                           ; Switch size 1, requested type "space"
  9138                           ; Number of cases is 1, Range of values is 0 to 0
  9139                           ; switch strategies available:
  9140                           ; Name         Instructions Cycles
  9141                           ; simple_byte            4     3 (average)
  9142                           ;	Chosen strategy is simple_byte
  9143  0016B8  5066               	movf	(??_JoystickMotor+1)^0,w,c
  9144  0016BA  E104               	bnz	l1020
  9145                           
  9146                           ; Switch size 1, requested type "space"
  9147                           ; Number of cases is 2, Range of values is 0 to 1
  9148                           ; switch strategies available:
  9149                           ; Name         Instructions Cycles
  9150                           ; simple_byte            7     4 (average)
  9151                           ;	Chosen strategy is simple_byte
  9152  0016BC  5065               	movf	??_JoystickMotor^0,w,c
  9153  0016BE  E0A3               	bz	l1012
  9154  0016C0  0A01               	xorlw	1	; case 1
  9155  0016C2  E0CC               	bz	l1021
  9156  0016C4                     l1020:
  9157                           
  9158                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  9159  0016C4  B076               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  9160  0016C6  AE75               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  9161  0016C8  0012               	return	
  9162  0016CA  5018               	movf	_ultimaTeclaAD^0,w,c
  9163  0016CC  B4D8               	btfsc	status,2,c
  9164  0016CE  0012               	return	
  9165                           
  9166                           ;Joystick.c: 66:         MNouJoystick(-1);
  9167  0016D0  0EFF               	movlw	255
  9168  0016D2  ECA6  F000         	call	_MNouJoystick
  9169                           
  9170                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  9171  0016D6  6818               	setf	_ultimaTeclaAD^0,c
  9172  0016D8  0012               	return		;funcret
  9173  0016DA                     __end_of_JoystickMotor:
  9174                           	callstack 0
  9175                           
  9176 ;; *************** function _MNouJoystick *****************
  9177 ;; Defined at:
  9178 ;;		line 38 in file "Menu.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;  posicio         1    wreg     char 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;  posicio         1    5[COMRAM] char 
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      void 
  9185 ;; Registers used:
  9186 ;;		wreg
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1
  9192 ;;      Params:         0       0       0
  9193 ;;      Locals:         1       0       0
  9194 ;;      Temps:          0       0       0
  9195 ;;      Totals:         1       0       0
  9196 ;;Total ram usage:        1 bytes
  9197 ;; Hardware stack levels used: 1
  9198 ;; Hardware stack levels required when called: 2
  9199 ;; This function calls:
  9200 ;;		Nothing
  9201 ;; This function is called by:
  9202 ;;		_JoystickMotor
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           	psect	text75
  9207  00014C                     __ptext75:
  9208                           	callstack 0
  9209  00014C                     _MNouJoystick:
  9210                           	callstack 27
  9211                           
  9212                           ;incstack = 0
  9213                           ;MNouJoystick@posicio stored from wreg
  9214  00014C  6E64               	movwf	MNouJoystick@posicio^0,c
  9215                           
  9216                           ;Menu.c: 39:     novaDireccio = posicio;
  9217  00014E  C064  F050         	movff	MNouJoystick@posicio,_novaDireccio
  9218  000152  0012               	return		;funcret
  9219  000154                     __end_of_MNouJoystick:
  9220                           	callstack 0
  9221                           
  9222 ;; *************** function _JoystickInit *****************
  9223 ;; Defined at:
  9224 ;;		line 12 in file "Joystick.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;		None
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;		None
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1    wreg      void 
  9231 ;; Registers used:
  9232 ;;		wreg, status,2
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1
  9238 ;;      Params:         0       0       0
  9239 ;;      Locals:         0       0       0
  9240 ;;      Temps:          0       0       0
  9241 ;;      Totals:         0       0       0
  9242 ;;Total ram usage:        0 bytes
  9243 ;; Hardware stack levels used: 1
  9244 ;; Hardware stack levels required when called: 2
  9245 ;; This function calls:
  9246 ;;		Nothing
  9247 ;; This function is called by:
  9248 ;;		_main
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text76
  9253  001FD0                     __ptext76:
  9254                           	callstack 0
  9255  001FD0                     _JoystickInit:
  9256                           	callstack 28
  9257                           
  9258                           ;Joystick.c: 13:     ADCON0 = 0x01;
  9259                           
  9260                           ;incstack = 0
  9261  001FD0  0E01               	movlw	1
  9262  001FD2  6EC2               	movwf	194,c	;volatile
  9263                           
  9264                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  9265  001FD4  0E0D               	movlw	13
  9266  001FD6  6EC1               	movwf	193,c	;volatile
  9267                           
  9268                           ;Joystick.c: 15:     ADCON2 = 0x09;
  9269  001FD8  0E09               	movlw	9
  9270  001FDA  6EC0               	movwf	192,c	;volatile
  9271                           
  9272                           ;Joystick.c: 16:     ADRESH = 127;
  9273  001FDC  0E7F               	movlw	127
  9274  001FDE  6EC4               	movwf	196,c	;volatile
  9275  001FE0  0C7F               	retlw	127	;funcret
  9276  001FE2                     __end_of_JoystickInit:
  9277                           	callstack 0
  9278                           
  9279 ;; *************** function _GLCDMotor *****************
  9280 ;; Defined at:
  9281 ;;		line 36 in file "GestioLCD.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;		None
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;		None
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  1    wreg      void 
  9288 ;; Registers used:
  9289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMRAM   BANK0   BANK1
  9295 ;;      Params:         0       0       0
  9296 ;;      Locals:         0       0       0
  9297 ;;      Temps:          2       0       0
  9298 ;;      Totals:         2       0       0
  9299 ;;Total ram usage:        2 bytes
  9300 ;; Hardware stack levels used: 1
  9301 ;; Hardware stack levels required when called: 6
  9302 ;; This function calls:
  9303 ;;		_LcClear
  9304 ;;		_LcGotoXY
  9305 ;;		_LcLliure
  9306 ;;		_LcNewString
  9307 ;;		_LcPutChar
  9308 ;;		_TiGetTics
  9309 ;;		_TiResetTics
  9310 ;; This function is called by:
  9311 ;;		_main
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           	psect	text77
  9316  000D44                     __ptext77:
  9317                           	callstack 0
  9318  000D44                     _GLCDMotor:
  9319                           	callstack 24
  9320                           
  9321                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  9322                           
  9323                           ;incstack = 0
  9324  000D44  D10B               	goto	l5037
  9325  000D46                     l4853:
  9326                           
  9327                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  9328  000D46  0E11               	movlw	17
  9329  000D48  601A               	cpfslt	GLCDMotor@length1^0,c
  9330  000D4A  D010               	goto	l4863
  9331  000D4C  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9332  000D4E  D00E               	goto	l4863
  9333                           
  9334                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  9335  000D50  0E00               	movlw	0
  9336  000D52  6E6C               	movwf	LcGotoXY@Row^0,c
  9337  000D54  ECA1  F00E         	call	_LcGotoXY
  9338                           
  9339                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  9340  000D58  D932               	call	PL8	;call to abstracted procedure
  9341  000D5A  6E73               	movwf	??_GLCDMotor^0,c
  9342  000D5C  C073  F067         	movff	??_GLCDMotor,LcNewString@new_s
  9343  000D60  D933               	call	PL12	;call to abstracted procedure
  9344  000D62  EC55  F000         	call	_LcNewString	;wreg free
  9345                           
  9346                           ;GestioLCD.c: 53:     state = 5;
  9347  000D66  0E05               	movlw	5
  9348  000D68  6E20               	movwf	GLCDMotor@state^0,c
  9349                           
  9350                           ;GestioLCD.c: 54:    }
  9351  000D6A  0C05               	retlw	5
  9352  000D6C                     l4863:
  9353  000D6C  0E10               	movlw	16
  9354  000D6E  641A               	cpfsgt	GLCDMotor@length1^0,c
  9355  000D70  0C10               	retlw	16
  9356  000D72  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9357  000D74  0C10               	retlw	16
  9358  000D76                     u4240:
  9359                           
  9360                           ;GestioLCD.c: 56:     state++;
  9361  000D76  2A20               	incf	GLCDMotor@state^0,f,c
  9362  000D78  0012               	return	
  9363  000D7A                     l4869:
  9364                           
  9365                           ;GestioLCD.c: 60:    if (j>=16) {
  9366  000D7A  0E0F               	movlw	15
  9367  000D7C  641F               	cpfsgt	GLCDMotor@j^0,c
  9368  000D7E  D014               	goto	l4883
  9369                           
  9370                           ;GestioLCD.c: 61:     min1++;
  9371  000D80  2A1E               	incf	GLCDMotor@min1^0,f,c
  9372                           
  9373                           ;GestioLCD.c: 62:     max1++;
  9374  000D82  2A4E               	incf	GLCDMotor@max1^0,f,c
  9375                           
  9376                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  9377  000D84  D91C               	call	PL8	;call to abstracted procedure
  9378  000D86  244E               	addwf	GLCDMotor@max1^0,w,c
  9379  000D88  6E73               	movwf	??_GLCDMotor^0,c
  9380  000D8A  D90E               	call	PL2	;call to abstracted procedure
  9381  000D8C  E101               	bnz	l4877
  9382  000D8E  6A4E               	clrf	GLCDMotor@max1^0,c
  9383  000D90                     l4877:
  9384                           
  9385                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  9386  000D90  D916               	call	PL8	;call to abstracted procedure
  9387  000D92  241E               	addwf	GLCDMotor@min1^0,w,c
  9388  000D94  6E73               	movwf	??_GLCDMotor^0,c
  9389  000D96  D908               	call	PL2	;call to abstracted procedure
  9390  000D98  E101               	bnz	l943
  9391  000D9A  6A1E               	clrf	GLCDMotor@min1^0,c
  9392  000D9C                     l943:
  9393                           
  9394                           ;GestioLCD.c: 65:     j=0;
  9395  000D9C  6A1F               	clrf	GLCDMotor@j^0,c
  9396                           
  9397                           ;GestioLCD.c: 66:     k1=min1;
  9398  000D9E  C01E  F01C         	movff	GLCDMotor@min1,GLCDMotor@k1
  9399                           
  9400                           ;GestioLCD.c: 67:     state = 6;
  9401  000DA2  0E06               	movlw	6
  9402  000DA4  6E20               	movwf	GLCDMotor@state^0,c
  9403                           
  9404                           ;GestioLCD.c: 68:    }
  9405  000DA6  0C06               	retlw	6
  9406  000DA8                     l4883:
  9407  000DA8  0E10               	movlw	16
  9408  000DAA  601F               	cpfslt	GLCDMotor@j^0,c
  9409  000DAC  0C10               	retlw	16
  9410                           
  9411                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  9412  000DAE  0E00               	movlw	0
  9413  000DB0  6E6C               	movwf	LcGotoXY@Row^0,c
  9414  000DB2  501F               	movf	GLCDMotor@j^0,w,c
  9415  000DB4  ECA1  F00E         	call	_LcGotoXY
  9416                           
  9417                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  9418  000DB8  D902               	call	PL8	;call to abstracted procedure
  9419  000DBA  241C               	addwf	GLCDMotor@k1^0,w,c
  9420  000DBC  6E73               	movwf	??_GLCDMotor^0,c
  9421  000DBE  D8F4               	call	PL2	;call to abstracted procedure
  9422  000DC0  ECE5  F00D         	call	_LcPutChar
  9423                           
  9424                           ;GestioLCD.c: 72:     j++;
  9425  000DC4  2A1F               	incf	GLCDMotor@j^0,f,c
  9426                           
  9427                           ;GestioLCD.c: 73:     k1++;
  9428  000DC6  2A1C               	incf	GLCDMotor@k1^0,f,c
  9429                           
  9430                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  9431  000DC8  D8FA               	call	PL8	;call to abstracted procedure
  9432  000DCA  241C               	addwf	GLCDMotor@k1^0,w,c
  9433  000DCC  6E73               	movwf	??_GLCDMotor^0,c
  9434  000DCE  D8EC               	call	PL2	;call to abstracted procedure
  9435  000DD0  B4D8               	btfsc	status,2,c
  9436  000DD2  6A1C               	clrf	GLCDMotor@k1^0,c
  9437  000DD4  0012               	return	
  9438  000DD6                     l4897:
  9439                           
  9440                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  9441  000DD6  0E04               	movlw	4
  9442  000DD8  6021               	cpfslt	_menuDaltGLCD^0,c
  9443  000DDA  D010               	goto	u4340
  9444  000DDC  D7CC               	goto	u4240
  9445  000DDE                     u4310:
  9446                           
  9447                           ;GestioLCD.c: 82:     state = 0;
  9448  000DDE  6A20               	clrf	GLCDMotor@state^0,c
  9449  000DE0  0012               	return	
  9450  000DE2                     l4905:
  9451                           
  9452                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  9453  000DE2  EC5B  F000         	call	_LcLliure	;wreg free
  9454  000DE6  E306               	bnc	l4911
  9455  000DE8  0E04               	movlw	4
  9456  000DEA  6021               	cpfslt	_menuDaltGLCD^0,c
  9457  000DEC  D003               	goto	l4911
  9458                           
  9459                           ;GestioLCD.c: 87:     state = 7;
  9460  000DEE  0E07               	movlw	7
  9461  000DF0  6E20               	movwf	GLCDMotor@state^0,c
  9462                           
  9463                           ;GestioLCD.c: 88:    }
  9464  000DF2  0C07               	retlw	7
  9465  000DF4                     l4911:
  9466  000DF4  EC5B  F000         	call	_LcLliure	;wreg free
  9467  000DF8  A0D8               	btfss	status,0,c
  9468  000DFA  0012               	return	
  9469  000DFC                     u4340:
  9470  000DFC  0E03               	movlw	3
  9471  000DFE  6421               	cpfsgt	_menuDaltGLCD^0,c
  9472  000E00  0C03               	retlw	3
  9473  000E02  D7ED               	goto	u4310
  9474  000E04                     l955:
  9475                           
  9476                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  9477  000E04  B276               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9478  000E06  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9479  000E08  0012               	return	
  9480                           
  9481                           ;GestioLCD.c: 95:     length1 = 0;
  9482  000E0A  6A1A               	clrf	GLCDMotor@length1^0,c
  9483                           
  9484                           ;GestioLCD.c: 96:     length2 = 0;
  9485  000E0C  6A19               	clrf	GLCDMotor@length2^0,c
  9486                           
  9487                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  9488  000E0E  0E00               	movlw	0
  9489  000E10  6E6C               	movwf	LcGotoXY@Row^0,c
  9490  000E12  ECA1  F00E         	call	_LcGotoXY
  9491                           
  9492                           ;GestioLCD.c: 98:     min1 = 0;
  9493  000E16  6A1E               	clrf	GLCDMotor@min1^0,c
  9494                           
  9495                           ;GestioLCD.c: 99:     max1 = 15;
  9496  000E18  0E0F               	movlw	15
  9497  000E1A  6E4E               	movwf	GLCDMotor@max1^0,c
  9498                           
  9499                           ;GestioLCD.c: 100:     min2 = 0;
  9500  000E1C  6A1D               	clrf	GLCDMotor@min2^0,c
  9501                           
  9502                           ;GestioLCD.c: 101:     max2 = 15;
  9503  000E1E  0E0F               	movlw	15
  9504  000E20  6E4D               	movwf	GLCDMotor@max2^0,c
  9505                           
  9506                           ;GestioLCD.c: 102:     j = 0;
  9507  000E22  6A1F               	clrf	GLCDMotor@j^0,c
  9508                           
  9509                           ;GestioLCD.c: 103:     k1 = 0;
  9510  000E24  6A1C               	clrf	GLCDMotor@k1^0,c
  9511                           
  9512                           ;GestioLCD.c: 104:     k2 = 0;
  9513  000E26  6A1B               	clrf	GLCDMotor@k2^0,c
  9514                           
  9515                           ;GestioLCD.c: 105:     newString = 0;
  9516  000E28  9276               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  9517  000E2A  D7A5               	goto	u4240
  9518  000E2C                     l4941:
  9519                           
  9520                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  9521  000E2C  D8C8               	call	PL8	;call to abstracted procedure
  9522  000E2E  241A               	addwf	GLCDMotor@length1^0,w,c
  9523  000E30  6E73               	movwf	??_GLCDMotor^0,c
  9524  000E32  D8BA               	call	PL2	;call to abstracted procedure
  9525  000E34  E104               	bnz	l4947
  9526  000E36  0E03               	movlw	3
  9527  000E38  6421               	cpfsgt	_menuDaltGLCD^0,c
  9528  000E3A  D001               	goto	l4947
  9529  000E3C  D79C               	goto	u4240
  9530  000E3E                     l4947:
  9531  000E3E  D8BF               	call	PL8	;call to abstracted procedure
  9532  000E40  241A               	addwf	GLCDMotor@length1^0,w,c
  9533  000E42  6E73               	movwf	??_GLCDMotor^0,c
  9534  000E44  D8B1               	call	PL2	;call to abstracted procedure
  9535  000E46  E002               	bz	l4951
  9536                           
  9537                           ;GestioLCD.c: 114:     length1++;
  9538  000E48  2A1A               	incf	GLCDMotor@length1^0,f,c
  9539                           
  9540                           ;GestioLCD.c: 115:    }
  9541  000E4A  0012               	return	
  9542  000E4C                     l4951:
  9543  000E4C  0E04               	movlw	4
  9544  000E4E  6021               	cpfslt	_menuDaltGLCD^0,c
  9545  000E50  0C04               	retlw	4
  9546  000E52  D8B5               	call	PL8	;call to abstracted procedure
  9547  000E54  241A               	addwf	GLCDMotor@length1^0,w,c
  9548  000E56  6E73               	movwf	??_GLCDMotor^0,c
  9549  000E58  D8A7               	call	PL2	;call to abstracted procedure
  9550  000E5A  A4D8               	btfss	status,2,c
  9551  000E5C  0012               	return	
  9552                           
  9553                           ;GestioLCD.c: 117:     state = 13;
  9554  000E5E  0E0D               	movlw	13
  9555  000E60  6E20               	movwf	GLCDMotor@state^0,c
  9556  000E62  0C0D               	retlw	13
  9557  000E64                     l4957:
  9558                           
  9559                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  9560  000E64  0E11               	movlw	17
  9561  000E66  6019               	cpfslt	GLCDMotor@length2^0,c
  9562  000E68  D015               	goto	l4967
  9563  000E6A  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9564  000E6C  D013               	goto	l4967
  9565                           
  9566                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  9567  000E6E  EC1D  F005         	call	PL34	;call to abstracted procedure
  9568  000E72  ECA1  F00E         	call	_LcGotoXY
  9569                           
  9570                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  9571  000E76  5021               	movf	_menuDaltGLCD^0,w,c
  9572  000E78  0D1D               	mullw	29
  9573  000E7A  CFF3 F073          	movff	prodl,??_GLCDMotor
  9574  000E7E  0E1D               	movlw	29
  9575  000E80  2673               	addwf	??_GLCDMotor^0,f,c
  9576  000E82  5073               	movf	??_GLCDMotor^0,w,c
  9577  000E84  0F01               	addlw	low _menuList
  9578  000E86  6E74               	movwf	(??_GLCDMotor+1)^0,c
  9579  000E88  C074  F067         	movff	??_GLCDMotor+1,LcNewString@new_s
  9580  000E8C  D89D               	call	PL12	;call to abstracted procedure
  9581  000E8E  EC55  F000         	call	_LcNewString	;wreg free
  9582  000E92  D771               	goto	u4240
  9583  000E94                     l4967:
  9584  000E94  0E10               	movlw	16
  9585  000E96  6419               	cpfsgt	GLCDMotor@length2^0,c
  9586  000E98  0C10               	retlw	16
  9587  000E9A  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9588  000E9C  0C10               	retlw	16
  9589                           
  9590                           ;GestioLCD.c: 127:     state = 9;
  9591  000E9E  0E09               	movlw	9
  9592  000EA0  6E20               	movwf	GLCDMotor@state^0,c
  9593  000EA2  0C09               	retlw	9
  9594  000EA4                     l4973:
  9595                           
  9596                           ;GestioLCD.c: 131:    if (j<16) {
  9597  000EA4  0E10               	movlw	16
  9598  000EA6  601F               	cpfslt	GLCDMotor@j^0,c
  9599  000EA8  D014               	goto	l4987
  9600                           
  9601                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  9602  000EAA  0E01               	movlw	1
  9603  000EAC  6E6C               	movwf	LcGotoXY@Row^0,c
  9604  000EAE  501F               	movf	GLCDMotor@j^0,w,c
  9605  000EB0  ECA1  F00E         	call	_LcGotoXY
  9606                           
  9607                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  9608  000EB4  D884               	call	PL8	;call to abstracted procedure
  9609  000EB6  241B               	addwf	GLCDMotor@k2^0,w,c
  9610  000EB8  D87E               	call	PL4	;call to abstracted procedure
  9611  000EBA  D876               	call	PL2	;call to abstracted procedure
  9612  000EBC  ECE5  F00D         	call	_LcPutChar
  9613                           
  9614                           ;GestioLCD.c: 134:     j++;
  9615  000EC0  2A1F               	incf	GLCDMotor@j^0,f,c
  9616                           
  9617                           ;GestioLCD.c: 135:     k2++;
  9618  000EC2  2A1B               	incf	GLCDMotor@k2^0,f,c
  9619                           
  9620                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  9621  000EC4  D87C               	call	PL8	;call to abstracted procedure
  9622  000EC6  241B               	addwf	GLCDMotor@k2^0,w,c
  9623  000EC8  D876               	call	PL4	;call to abstracted procedure
  9624  000ECA  D86E               	call	PL2	;call to abstracted procedure
  9625  000ECC  B4D8               	btfsc	status,2,c
  9626  000ECE  6A1B               	clrf	GLCDMotor@k2^0,c
  9627  000ED0  0012               	return	
  9628  000ED2                     l4987:
  9629  000ED2  0E0F               	movlw	15
  9630  000ED4  641F               	cpfsgt	GLCDMotor@j^0,c
  9631  000ED6  0C0F               	retlw	15
  9632                           
  9633                           ;GestioLCD.c: 139:     min2++;
  9634  000ED8  2A1D               	incf	GLCDMotor@min2^0,f,c
  9635                           
  9636                           ;GestioLCD.c: 140:     max2++;
  9637  000EDA  2A4D               	incf	GLCDMotor@max2^0,f,c
  9638                           
  9639                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  9640  000EDC  D870               	call	PL8	;call to abstracted procedure
  9641  000EDE  244D               	addwf	GLCDMotor@max2^0,w,c
  9642  000EE0  D86A               	call	PL4	;call to abstracted procedure
  9643  000EE2  D862               	call	PL2	;call to abstracted procedure
  9644  000EE4  E101               	bnz	l4995
  9645  000EE6  6A4D               	clrf	GLCDMotor@max2^0,c
  9646  000EE8                     l4995:
  9647                           
  9648                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  9649  000EE8  D86A               	call	PL8	;call to abstracted procedure
  9650  000EEA  241D               	addwf	GLCDMotor@min2^0,w,c
  9651  000EEC  D864               	call	PL4	;call to abstracted procedure
  9652  000EEE  D85C               	call	PL2	;call to abstracted procedure
  9653  000EF0  E101               	bnz	l973
  9654  000EF2  6A1D               	clrf	GLCDMotor@min2^0,c
  9655  000EF4                     l973:
  9656                           
  9657                           ;GestioLCD.c: 143:     j=0;
  9658  000EF4  6A1F               	clrf	GLCDMotor@j^0,c
  9659                           
  9660                           ;GestioLCD.c: 144:     k2=min2;
  9661  000EF6  C01D  F01B         	movff	GLCDMotor@min2,GLCDMotor@k2
  9662  000EFA  D73D               	goto	u4240
  9663  000EFC                     l5001:
  9664                           
  9665                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  9666  000EFC  5022               	movf	_timerGLCD^0,w,c
  9667  000EFE  ECF8  F00E         	call	_TiGetTics
  9668  000F02  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  9669  000F04  D00A               	goto	l975
  9670  000F06  D865               	call	PL82	;call to abstracted procedure
  9671  000F08  E308               	bnc	l975
  9672  000F0A  A276               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9673  000F0C  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9674  000F0E  D005               	goto	l975
  9675                           
  9676                           ;GestioLCD.c: 150:     LcClear();
  9677  000F10  EC53  F00F         	call	_LcClear	;wreg free
  9678  000F14                     l5009:
  9679                           
  9680                           ;GestioLCD.c: 151:     state = 2;
  9681  000F14  0E02               	movlw	2
  9682  000F16  6E20               	movwf	GLCDMotor@state^0,c
  9683                           
  9684                           ;GestioLCD.c: 152:    }
  9685  000F18  0C02               	retlw	2
  9686  000F1A                     l975:
  9687  000F1A  B276               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9688  000F1C  A476               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9689  000F1E  0012               	return	
  9690                           
  9691                           ;GestioLCD.c: 154:     LcClear();
  9692  000F20  EC53  F00F         	call	_LcClear	;wreg free
  9693  000F24  D75C               	goto	u4310
  9694  000F26                     l5017:
  9695                           
  9696                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9697  000F26  5022               	movf	_timerGLCD^0,w,c
  9698  000F28  ECA0  F00F         	call	_TiResetTics
  9699  000F2C  D724               	goto	u4240
  9700  000F2E                     l5021:
  9701                           
  9702                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9703  000F2E  EC5B  F000         	call	_LcLliure	;wreg free
  9704  000F32  A0D8               	btfss	status,0,c
  9705  000F34  0012               	return	
  9706                           
  9707                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9708  000F36  5022               	movf	_timerGLCD^0,w,c
  9709  000F38  ECA0  F00F         	call	_TiResetTics
  9710                           
  9711                           ;GestioLCD.c: 165:     state = 11;
  9712  000F3C  0E0B               	movlw	11
  9713  000F3E  6E20               	movwf	GLCDMotor@state^0,c
  9714  000F40  0C0B               	retlw	11
  9715  000F42                     l5027:
  9716                           
  9717                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  9718  000F42  D83D               	call	PL8	;call to abstracted procedure
  9719  000F44  2419               	addwf	GLCDMotor@length2^0,w,c
  9720  000F46  D837               	call	PL4	;call to abstracted procedure
  9721  000F48  D82F               	call	PL2	;call to abstracted procedure
  9722  000F4A  E002               	bz	l5031
  9723                           
  9724                           ;GestioLCD.c: 170:     length2++;
  9725  000F4C  2A19               	incf	GLCDMotor@length2^0,f,c
  9726                           
  9727                           ;GestioLCD.c: 171:    }
  9728  000F4E  0012               	return	
  9729  000F50                     l5031:
  9730  000F50  D836               	call	PL8	;call to abstracted procedure
  9731  000F52  2419               	addwf	GLCDMotor@length2^0,w,c
  9732  000F54  D830               	call	PL4	;call to abstracted procedure
  9733  000F56  D828               	call	PL2	;call to abstracted procedure
  9734  000F58  E0DD               	bz	l5009
  9735  000F5A  0012               	return	
  9736  000F5C                     l5037:
  9737  000F5C  5020               	movf	GLCDMotor@state^0,w,c
  9738  000F5E  6E73               	movwf	??_GLCDMotor^0,c
  9739  000F60  6A74               	clrf	(??_GLCDMotor+1)^0,c
  9740                           
  9741                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9742                           ; Switch size 1, requested type "space"
  9743                           ; Number of cases is 1, Range of values is 0 to 0
  9744                           ; switch strategies available:
  9745                           ; Name         Instructions Cycles
  9746                           ; simple_byte            4     3 (average)
  9747                           ;	Chosen strategy is simple_byte
  9748  000F62  5074               	movf	(??_GLCDMotor+1)^0,w,c
  9749  000F64  A4D8               	btfss	status,2,c
  9750  000F66  0012               	return	
  9751                           
  9752                           ; Switch size 1, requested type "space"
  9753                           ; Number of cases is 12, Range of values is 0 to 13
  9754                           ; switch strategies available:
  9755                           ; Name         Instructions Cycles
  9756                           ; simple_byte           37    19 (average)
  9757                           ;	Chosen strategy is simple_byte
  9758  000F68  5073               	movf	??_GLCDMotor^0,w,c
  9759  000F6A  E101 D74B          	bz	l955
  9760  000F6E  0A01               	xorlw	1	; case 1
  9761  000F70  E101 D75C          	bz	l4941
  9762  000F74  0A03               	xorlw	3	; case 2
  9763  000F76  E101 D6E6          	bz	l4853
  9764  000F7A  0A01               	xorlw	1	; case 3
  9765  000F7C  E101 D6FD          	bz	l4869
  9766  000F80  0A06               	xorlw	6	; case 5
  9767  000F82  E101 D72E          	bz	l4905
  9768  000F86  0A03               	xorlw	3	; case 6
  9769  000F88  E101 D725          	bz	l4897
  9770  000F8C  0A01               	xorlw	1	; case 7
  9771  000F8E  E101 D769          	bz	l4957
  9772  000F92  0A0F               	xorlw	15	; case 8
  9773  000F94  E0CC               	bz	l5021
  9774  000F96  0A01               	xorlw	1	; case 9
  9775  000F98  E085               	bz	l4973
  9776  000F9A  0A03               	xorlw	3	; case 10
  9777  000F9C  E0C4               	bz	l5017
  9778  000F9E  0A01               	xorlw	1	; case 11
  9779  000FA0  E0AD               	bz	l5001
  9780  000FA2  0A06               	xorlw	6	; case 13
  9781  000FA4  E0CE               	bz	l5027
  9782  000FA6  0012               	return		;funcret
  9783  000FA8                     __end_of_GLCDMotor:
  9784                           	callstack 0
  9785  000FA8                     PL2:
  9786                           	callstack 24
  9787  000FA8  C073  FFF6         	movff	??_GLCDMotor,tblptrl
  9788  000FAC                     	if	1	;There is more than 1 active tblptr byte
  9789  000FAC  0E02               	movlw	high __smallconst
  9790  000FAE  6EF7               	movwf	tblptrh,c
  9791  000FB0                     	endif
  9792  000FB0                     	if	0	;tblptru may be non-zero
  9793  000FB0                     	endif
  9794  000FB0                     	if	0	;tblptru may be non-zero
  9795  000FB0                     	endif
  9796  000FB0  0008               	tblrd		*
  9797  000FB2  50F5               	movf	tablat,w,c
  9798  000FB4  0012               	return	
  9799  000FB6                     __end_ofPL2:
  9800                           	callstack 0
  9801  000FB6                     PL4:
  9802                           	callstack 24
  9803  000FB6  6E73               	movwf	??_GLCDMotor^0,c
  9804  000FB8  0E1D               	movlw	29
  9805  000FBA  2673               	addwf	??_GLCDMotor^0,f,c
  9806  000FBC  0C1D               	retlw	29
  9807  000FBE                     __end_ofPL4:
  9808                           	callstack 0
  9809  000FBE                     PL8:
  9810                           	callstack 24
  9811  000FBE  5021               	movf	_menuDaltGLCD^0,w,c
  9812  000FC0  0D1D               	mullw	29
  9813  000FC2  50F3               	movf	243,w,c
  9814  000FC4  0F01               	addlw	low _menuList
  9815  000FC6  0012               	return	
  9816  000FC8                     __end_ofPL8:
  9817                           	callstack 0
  9818  000FC8                     PL12:
  9819                           	callstack 24
  9820  000FC8  5067               	movf	LcNewString@new_s^0,w,c
  9821  000FCA  A4D8               	btfss	status,2,c
  9822  000FCC  0E02               	movlw	high __smallconst
  9823  000FCE  6E68               	movwf	(LcNewString@new_s+1)^0,c
  9824  000FD0  0012               	return	
  9825  000FD2                     __end_ofPL12:
  9826                           	callstack 0
  9827  000FD2                     PL82:
  9828                           	callstack 27
  9829  000FD2  0EB5               	movlw	181
  9830  000FD4  5C64               	subwf	?_TiGetTics^0,w,c
  9831  000FD6  0E04               	movlw	4
  9832  000FD8  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  9833  000FDA  0012               	return	
  9834  000FDC                     __end_ofPL82:
  9835                           	callstack 0
  9836                           
  9837 ;; *************** function _LcPutChar *****************
  9838 ;; Defined at:
  9839 ;;		line 120 in file "LcTLCD.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;  c               1    wreg     unsigned char 
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;  c               1   19[COMRAM] unsigned char 
  9844 ;; Return value:  Size  Location     Type
  9845 ;;                  1    wreg      void 
  9846 ;; Registers used:
  9847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9848 ;; Tracked objects:
  9849 ;;		On entry : 0/0
  9850 ;;		On exit  : 0/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMRAM   BANK0   BANK1
  9853 ;;      Params:         0       0       0
  9854 ;;      Locals:         1       0       0
  9855 ;;      Temps:          0       0       0
  9856 ;;      Totals:         1       0       0
  9857 ;;Total ram usage:        1 bytes
  9858 ;; Hardware stack levels used: 1
  9859 ;; Hardware stack levels required when called: 5
  9860 ;; This function calls:
  9861 ;;		_CantaData
  9862 ;;		_LcGotoXY
  9863 ;;		_WaitForBusy
  9864 ;; This function is called by:
  9865 ;;		_LcLCD
  9866 ;;		_menu
  9867 ;;		_GLCDMotor
  9868 ;;		_motorSIO
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           	psect	text78
  9873  001BCA                     __ptext78:
  9874                           	callstack 0
  9875  001BCA                     _LcPutChar:
  9876                           	callstack 24
  9877                           
  9878                           ;incstack = 0
  9879                           ;LcPutChar@c stored from wreg
  9880  001BCA  6E72               	movwf	LcPutChar@c^0,c
  9881                           
  9882                           ;LcTLCD.c: 122:  WaitForBusy(); CantaData(c);
  9883  001BCC  EC4C  F00E         	call	_WaitForBusy	;wreg free
  9884  001BD0  5072               	movf	LcPutChar@c^0,w,c
  9885  001BD2  EC6B  F00E         	call	_CantaData
  9886                           
  9887                           ;LcTLCD.c: 124:  ++ColumnAct;
  9888  001BD6  2A3E               	incf	_ColumnAct^0,f,c
  9889                           
  9890                           ;LcTLCD.c: 126:  if (Rows == 2) {
  9891  001BD8  0E02               	movlw	2
  9892  001BDA  1840               	xorwf	_Rows^0,w,c
  9893  001BDC  E10C               	bnz	l4483
  9894                           
  9895                           ;LcTLCD.c: 127:   if (ColumnAct >= 40) {
  9896  001BDE  0E27               	movlw	39
  9897  001BE0  643E               	cpfsgt	_ColumnAct^0,c
  9898  001BE2  D009               	goto	l4483
  9899                           
  9900                           ;LcTLCD.c: 128:    ColumnAct = 0;
  9901  001BE4  6A3E               	clrf	_ColumnAct^0,c
  9902                           
  9903                           ;LcTLCD.c: 129:    if (++RowAct >= 2) RowAct = 0;
  9904  001BE6  2A3F               	incf	_RowAct^0,f,c
  9905  001BE8  0E01               	movlw	1
  9906  001BEA  643F               	cpfsgt	_RowAct^0,c
  9907  001BEC  D001               	goto	l4481
  9908  001BEE  6A3F               	clrf	_RowAct^0,c
  9909  001BF0                     l4481:
  9910                           
  9911                           ;LcTLCD.c: 130:    LcGotoXY(ColumnAct, RowAct);
  9912  001BF0  D80C               	call	PL86	;call to abstracted procedure
  9913  001BF2  ECA1  F00E         	call	_LcGotoXY
  9914  001BF6                     l4483:
  9915                           
  9916                           ;LcTLCD.c: 141:  if (RowAct == 1) {
  9917  001BF6  043F               	decf	_RowAct^0,w,c
  9918  001BF8  A4D8               	btfss	status,2,c
  9919  001BFA  0012               	return	
  9920                           
  9921                           ;LcTLCD.c: 142:   if (ColumnAct >= 40) ColumnAct = 0;
  9922  001BFC  0E27               	movlw	39
  9923  001BFE  643E               	cpfsgt	_ColumnAct^0,c
  9924  001C00  D001               	goto	l4489
  9925  001C02  6A3E               	clrf	_ColumnAct^0,c
  9926  001C04                     l4489:
  9927                           
  9928                           ;LcTLCD.c: 143:   LcGotoXY(ColumnAct, RowAct);
  9929  001C04  D802               	call	PL86	;call to abstracted procedure
  9930  001C06  EFA1  F00E         	goto	_LcGotoXY
  9931  001C0A                     __end_of_LcPutChar:
  9932                           	callstack 0
  9933  001C0A                     PL86:
  9934                           	callstack 24
  9935  001C0A  C03F  F06C         	movff	_RowAct,LcGotoXY@Row
  9936  001C0E  503E               	movf	_ColumnAct^0,w,c
  9937  001C10  0012               	return	
  9938  001C12                     __end_ofPL86:
  9939                           	callstack 0
  9940                           
  9941 ;; *************** function _CantaData *****************
  9942 ;; Defined at:
  9943 ;;		line 182 in file "LcTLCD.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;  Data            1    wreg     unsigned char 
  9946 ;; Auto vars:     Size  Location     Type
  9947 ;;  Data            1    7[COMRAM] unsigned char 
  9948 ;; Return value:  Size  Location     Type
  9949 ;;                  1    wreg      void 
  9950 ;; Registers used:
  9951 ;;		wreg, status,2, status,0, cstack
  9952 ;; Tracked objects:
  9953 ;;		On entry : 0/0
  9954 ;;		On exit  : 0/0
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMRAM   BANK0   BANK1
  9957 ;;      Params:         0       0       0
  9958 ;;      Locals:         1       0       0
  9959 ;;      Temps:          0       0       0
  9960 ;;      Totals:         1       0       0
  9961 ;;Total ram usage:        1 bytes
  9962 ;; Hardware stack levels used: 1
  9963 ;; Hardware stack levels required when called: 3
  9964 ;; This function calls:
  9965 ;;		_CantaPartAlta
  9966 ;;		_CantaPartBaixa
  9967 ;; This function is called by:
  9968 ;;		_LcPutChar
  9969 ;; This function uses a non-reentrant model
  9970 ;;
  9971                           
  9972                           	psect	text79
  9973  001CD6                     __ptext79:
  9974                           	callstack 0
  9975  001CD6                     _CantaData:
  9976                           	callstack 25
  9977                           
  9978                           ;incstack = 0
  9979                           ;CantaData@Data stored from wreg
  9980  001CD6  6E66               	movwf	CantaData@Data^0,c
  9981                           
  9982                           ;LcTLCD.c: 183:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9983  001CD8  9694               	bcf	148,3,c	;volatile
  9984  001CDA  9494               	bcf	148,2,c	;volatile
  9985  001CDC  9294               	bcf	148,1,c	;volatile
  9986  001CDE  9094               	bcf	148,0,c	;volatile
  9987                           
  9988                           ;LcTLCD.c: 184:  (LATCbits.LATC5 = 1);
  9989  001CE0  8A8B               	bsf	139,5,c	;volatile
  9990                           
  9991                           ;LcTLCD.c: 185:  (LATDbits.LATD7 = 0);
  9992  001CE2  9E8C               	bcf	140,7,c	;volatile
  9993                           
  9994                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9995  001CE4  888B               	bsf	139,4,c	;volatile
  9996                           
  9997                           ;LcTLCD.c: 187:  CantaPartAlta(Data);
  9998  001CE6  5066               	movf	CantaData@Data^0,w,c
  9999  001CE8  EC8A  F00D         	call	_CantaPartAlta
 10000                           
 10001                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 1);
 10002                           
 10003                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 0);
 10004                           
 10005                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
 10006                           
 10007                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
 10008  001CEC  D80B               	call	PL60	;call to abstracted procedure
 10009                           
 10010                           ;LcTLCD.c: 192:  CantaPartBaixa(Data);
 10011  001CEE  5066               	movf	CantaData@Data^0,w,c
 10012  001CF0  EC57  F00D         	call	_CantaPartBaixa
 10013                           
 10014                           ;LcTLCD.c: 193:  (LATCbits.LATC4 = 1);
 10015                           
 10016                           ;LcTLCD.c: 194:  (LATCbits.LATC4 = 0);
 10017                           
 10018                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10019  001CF4  D000               	goto	PL32	;call to abstracted procedure
 10020  001CF6                     __end_of_CantaData:
 10021                           	callstack 0
 10022  001CF6                     PL32:
 10023                           	callstack 24
 10024  001CF6  888B               	bsf	139,4,c	;volatile
 10025  001CF8  988B               	bcf	139,4,c	;volatile
 10026  001CFA  8694               	bsf	148,3,c	;volatile
 10027  001CFC  8494               	bsf	148,2,c	;volatile
 10028  001CFE  8294               	bsf	148,1,c	;volatile
 10029  001D00  8094               	bsf	148,0,c	;volatile
 10030  001D02  0012               	return		;funcret
 10031  001D04                     __end_ofPL32:
 10032                           	callstack 0
 10033  001D04                     PL60:
 10034                           	callstack 24
 10035  001D04  888B               	bsf	139,4,c	;volatile
 10036  001D06  988B               	bcf	139,4,c	;volatile
 10037  001D08  988B               	bcf	139,4,c	;volatile
 10038  001D0A  888B               	bsf	139,4,c	;volatile
 10039  001D0C  0012               	return	
 10040  001D0E                     __end_ofPL60:
 10041                           	callstack 0
 10042                           
 10043 ;; *************** function _LcNewString *****************
 10044 ;; Defined at:
 10045 ;;		line 227 in file "LcTLCD.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;  new_s           2    8[COMRAM] PTR unsigned char 
 10048 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
 10049 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(144), 
 10050 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
 10051 ;;		 -> STR_1(7), registerText(11), loginText(8), 
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;		None
 10054 ;; Return value:  Size  Location     Type
 10055 ;;                  1    wreg      void 
 10056 ;; Registers used:
 10057 ;;		wreg, status,2, status,0
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/0
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:     COMRAM   BANK0   BANK1
 10063 ;;      Params:         2       0       0
 10064 ;;      Locals:         0       0       0
 10065 ;;      Temps:          0       0       0
 10066 ;;      Totals:         2       0       0
 10067 ;;Total ram usage:        2 bytes
 10068 ;; Hardware stack levels used: 1
 10069 ;; Hardware stack levels required when called: 2
 10070 ;; This function calls:
 10071 ;;		Nothing
 10072 ;; This function is called by:
 10073 ;;		_menu
 10074 ;;		_GLCDMotor
 10075 ;;		_motorJoc
 10076 ;;		_motorSIO
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           
 10080                           	psect	text80
 10081  0000AA                     __ptext80:
 10082                           	callstack 0
 10083  0000AA                     _LcNewString:
 10084                           	callstack 27
 10085                           
 10086                           ;LcTLCD.c: 228:     s_ptr = new_s;
 10087                           
 10088                           ;incstack = 0
 10089  0000AA  C067  F00B         	movff	LcNewString@new_s,_s_ptr
 10090  0000AE  C068  F00C         	movff	LcNewString@new_s+1,_s_ptr+1
 10091                           
 10092                           ;LcTLCD.c: 229:     nou_s = 1;
 10093  0000B2  8477               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10094  0000B4  0012               	return		;funcret
 10095  0000B6                     __end_of_LcNewString:
 10096                           	callstack 0
 10097                           
 10098 ;; *************** function _LcLliure *****************
 10099 ;; Defined at:
 10100 ;;		line 243 in file "LcTLCD.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;		None
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;		None
 10105 ;; Return value:  Size  Location     Type
 10106 ;;		None               void
 10107 ;; Registers used:
 10108 ;;		status,0
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMRAM   BANK0   BANK1
 10114 ;;      Params:         0       0       0
 10115 ;;      Locals:         0       0       0
 10116 ;;      Temps:          0       0       0
 10117 ;;      Totals:         0       0       0
 10118 ;;Total ram usage:        0 bytes
 10119 ;; Hardware stack levels used: 1
 10120 ;; Hardware stack levels required when called: 2
 10121 ;; This function calls:
 10122 ;;		Nothing
 10123 ;; This function is called by:
 10124 ;;		_menu
 10125 ;;		_GLCDMotor
 10126 ;;		_motorJoc
 10127 ;;		_motorSIO
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           	psect	text81
 10132  0000B6                     __ptext81:
 10133                           	callstack 0
 10134  0000B6                     _LcLliure:
 10135                           	callstack 27
 10136                           
 10137                           ;LcTLCD.c: 244:     return !nou_s;
 10138                           
 10139                           ;incstack = 0
 10140  0000B6  A477               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10141  0000B8  D002               	goto	l4499
 10142  0000BA  90D8               	bcf	status,0,c
 10143  0000BC  0012               	return	
 10144  0000BE                     l4499:
 10145  0000BE  80D8               	bsf	status,0,c
 10146  0000C0  0012               	return		;funcret
 10147  0000C2                     __end_of_LcLliure:
 10148                           	callstack 0
 10149                           
 10150 ;; *************** function _LcClear *****************
 10151 ;; Defined at:
 10152 ;;		line 84 in file "LcTLCD.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;		None
 10155 ;; Auto vars:     Size  Location     Type
 10156 ;;		None
 10157 ;; Return value:  Size  Location     Type
 10158 ;;                  1    wreg      void 
 10159 ;; Registers used:
 10160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10161 ;; Tracked objects:
 10162 ;;		On entry : 0/0
 10163 ;;		On exit  : 0/0
 10164 ;;		Unchanged: 0/0
 10165 ;; Data sizes:     COMRAM   BANK0   BANK1
 10166 ;;      Params:         0       0       0
 10167 ;;      Locals:         0       0       0
 10168 ;;      Temps:          0       0       0
 10169 ;;      Totals:         0       0       0
 10170 ;;Total ram usage:        0 bytes
 10171 ;; Hardware stack levels used: 1
 10172 ;; Hardware stack levels required when called: 5
 10173 ;; This function calls:
 10174 ;;		_CantaIR
 10175 ;;		_Espera
 10176 ;;		_LcGotoXY
 10177 ;;		_WaitForBusy
 10178 ;; This function is called by:
 10179 ;;		_menu
 10180 ;;		_GLCDMotor
 10181 ;;		_motorSIO
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           	psect	text82
 10186  001EA6                     __ptext82:
 10187                           	callstack 0
 10188  001EA6                     _LcClear:
 10189                           	callstack 24
 10190                           
 10191                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
 10192                           
 10193                           ;incstack = 0
 10194  001EA6  EC4C  F00E         	call	_WaitForBusy	;wreg free
 10195  001EAA  0E01               	movlw	1
 10196  001EAC  EC92  F00F         	call	_CantaIR
 10197                           
 10198                           ;LcTLCD.c: 88:  Espera(Timer, 3);
 10199  001EB0  D806               	call	PL76	;call to abstracted procedure
 10200  001EB2  EC64  F00F         	call	_Espera
 10201                           
 10202                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
 10203  001EB6  0E00               	movlw	0
 10204  001EB8  6E6C               	movwf	LcGotoXY@Row^0,c
 10205  001EBA  EFA1  F00E         	goto	_LcGotoXY
 10206  001EBE                     __end_of_LcClear:
 10207                           	callstack 0
 10208  001EBE                     PL76:
 10209                           	callstack 26
 10210  001EBE  6A6C               	clrf	(Espera@ms+1)^0,c
 10211  001EC0  0E03               	movlw	3
 10212  001EC2  6E6B               	movwf	Espera@ms^0,c
 10213  001EC4  503D               	movf	_Timer^0,w,c
 10214  001EC6  0012               	return	
 10215  001EC8                     __end_ofPL76:
 10216                           	callstack 0
 10217                           
 10218 ;; *************** function _LcGotoXY *****************
 10219 ;; Defined at:
 10220 ;;		line 106 in file "LcTLCD.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  Column          1    wreg     unsigned char 
 10223 ;;  Row             1   13[COMRAM] unsigned char 
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  Column          1   18[COMRAM] unsigned char 
 10226 ;;  Fisics          2   14[COMRAM] int 
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  1    wreg      void 
 10229 ;; Registers used:
 10230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMRAM   BANK0   BANK1
 10236 ;;      Params:         1       0       0
 10237 ;;      Locals:         5       0       0
 10238 ;;      Temps:          0       0       0
 10239 ;;      Totals:         6       0       0
 10240 ;;Total ram usage:        6 bytes
 10241 ;; Hardware stack levels used: 1
 10242 ;; Hardware stack levels required when called: 4
 10243 ;; This function calls:
 10244 ;;		_CantaIR
 10245 ;;		_WaitForBusy
 10246 ;; This function is called by:
 10247 ;;		_LcClear
 10248 ;;		_LcPutChar
 10249 ;;		_menu
 10250 ;;		_GLCDMotor
 10251 ;;		_motorJoc
 10252 ;;		_motorSIO
 10253 ;; This function uses a non-reentrant model
 10254 ;;
 10255                           
 10256                           	psect	text83
 10257  001D42                     __ptext83:
 10258                           	callstack 0
 10259  001D42                     _LcGotoXY:
 10260                           	callstack 24
 10261                           
 10262                           ;incstack = 0
 10263                           ;LcGotoXY@Column stored from wreg
 10264  001D42  6E71               	movwf	LcGotoXY@Column^0,c
 10265                           
 10266                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 111:  Fisics = Column + (!Row ? 0 : 0x40);
 10267  001D44  506C               	movf	LcGotoXY@Row^0,w,c
 10268  001D46  E004               	bz	l55
 10269  001D48  6A70               	clrf	(_LcGotoXY$334+1)^0,c
 10270  001D4A  0E40               	movlw	64
 10271  001D4C  6E6F               	movwf	_LcGotoXY$334^0,c
 10272  001D4E  D002               	goto	l4393
 10273  001D50                     l55:
 10274  001D50  6A6F               	clrf	_LcGotoXY$334^0,c
 10275  001D52  6A70               	clrf	(_LcGotoXY$334+1)^0,c
 10276  001D54                     l4393:
 10277  001D54  5071               	movf	LcGotoXY@Column^0,w,c
 10278  001D56  246F               	addwf	_LcGotoXY$334^0,w,c
 10279  001D58  6E6D               	movwf	LcGotoXY@Fisics^0,c
 10280  001D5A  0E00               	movlw	0
 10281  001D5C  2070               	addwfc	(_LcGotoXY$334+1)^0,w,c
 10282  001D5E  6E6E               	movwf	(LcGotoXY@Fisics+1)^0,c
 10283                           
 10284                           ;LcTLCD.c: 113:  WaitForBusy();
 10285  001D60  EC4C  F00E         	call	_WaitForBusy	;wreg free
 10286                           
 10287                           ;LcTLCD.c: 114:  CantaIR(0x80 | Fisics);
 10288  001D64  506D               	movf	LcGotoXY@Fisics^0,w,c
 10289  001D66  0980               	iorlw	128
 10290  001D68  EC92  F00F         	call	_CantaIR
 10291                           
 10292                           ;LcTLCD.c: 116:  RowAct = Row;
 10293  001D6C  C06C  F03F         	movff	LcGotoXY@Row,_RowAct
 10294                           
 10295                           ;LcTLCD.c: 117:  ColumnAct = Column;
 10296  001D70  C071  F03E         	movff	LcGotoXY@Column,_ColumnAct
 10297  001D74  0012               	return		;funcret
 10298  001D76                     __end_of_LcGotoXY:
 10299                           	callstack 0
 10300                           
 10301 ;; *************** function _WaitForBusy *****************
 10302 ;; Defined at:
 10303 ;;		line 198 in file "LcTLCD.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;		None
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;  Busy            1   12[COMRAM] unsigned char 
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  1    wreg      void 
 10310 ;; Registers used:
 10311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10312 ;; Tracked objects:
 10313 ;;		On entry : 0/0
 10314 ;;		On exit  : 0/0
 10315 ;;		Unchanged: 0/0
 10316 ;; Data sizes:     COMRAM   BANK0   BANK1
 10317 ;;      Params:         0       0       0
 10318 ;;      Locals:         1       0       0
 10319 ;;      Temps:          0       0       0
 10320 ;;      Totals:         1       0       0
 10321 ;;Total ram usage:        1 bytes
 10322 ;; Hardware stack levels used: 1
 10323 ;; Hardware stack levels required when called: 3
 10324 ;; This function calls:
 10325 ;;		_TiGetTics
 10326 ;;		_TiResetTics
 10327 ;; This function is called by:
 10328 ;;		_LcInit
 10329 ;;		_LcClear
 10330 ;;		_LcGotoXY
 10331 ;;		_LcPutChar
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           	psect	text84
 10336  001C98                     __ptext84:
 10337                           	callstack 0
 10338  001C98                     _WaitForBusy:
 10339                           	callstack 25
 10340                           
 10341                           ;LcTLCD.c: 199:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10342                           
 10343                           ;incstack = 0
 10344  001C98  8694               	bsf	148,3,c	;volatile
 10345  001C9A  8494               	bsf	148,2,c	;volatile
 10346  001C9C  8294               	bsf	148,1,c	;volatile
 10347  001C9E  8094               	bsf	148,0,c	;volatile
 10348                           
 10349                           ;LcTLCD.c: 200:  (LATCbits.LATC5 = 0);
 10350  001CA0  9A8B               	bcf	139,5,c	;volatile
 10351                           
 10352                           ;LcTLCD.c: 201:  (LATDbits.LATD7 = 1);
 10353  001CA2  8E8C               	bsf	140,7,c	;volatile
 10354                           
 10355                           ;LcTLCD.c: 202:  TiResetTics(Timer);
 10356  001CA4  503D               	movf	_Timer^0,w,c
 10357  001CA6  ECA0  F00F         	call	_TiResetTics
 10358  001CAA                     l4361:
 10359                           
 10360                           ;LcTLCD.c: 204:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10361  001CAA  888B               	bsf	139,4,c	;volatile
 10362  001CAC  888B               	bsf	139,4,c	;volatile
 10363                           
 10364                           ;LcTLCD.c: 205:   Busy = (PORTCbits.RC3);
 10365  001CAE  0E00               	movlw	0
 10366  001CB0  B682               	btfsc	130,3,c	;volatile
 10367  001CB2  0E01               	movlw	1
 10368  001CB4  6E6B               	movwf	WaitForBusy@Busy^0,c
 10369                           
 10370                           ;LcTLCD.c: 206:   (LATCbits.LATC4 = 0);
 10371  001CB6  988B               	bcf	139,4,c	;volatile
 10372                           
 10373                           ;LcTLCD.c: 207:   (LATCbits.LATC4 = 0);
 10374  001CB8  988B               	bcf	139,4,c	;volatile
 10375                           
 10376                           ;LcTLCD.c: 208:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10377  001CBA  888B               	bsf	139,4,c	;volatile
 10378  001CBC  888B               	bsf	139,4,c	;volatile
 10379                           
 10380                           ;LcTLCD.c: 210:   (LATCbits.LATC4 = 0);
 10381  001CBE  988B               	bcf	139,4,c	;volatile
 10382                           
 10383                           ;LcTLCD.c: 211:   (LATCbits.LATC4 = 0);
 10384  001CC0  988B               	bcf	139,4,c	;volatile
 10385                           
 10386                           ;LcTLCD.c: 212:   if (TiGetTics(Timer)) break;
 10387  001CC2  503D               	movf	_Timer^0,w,c
 10388  001CC4  ECF8  F00E         	call	_TiGetTics
 10389  001CC8  5064               	movf	?_TiGetTics^0,w,c
 10390  001CCA  1065               	iorwf	(?_TiGetTics+1)^0,w,c
 10391  001CCC  E001               	bz	l4383
 10392  001CCE  0012               	return	
 10393  001CD0                     l4383:
 10394                           
 10395                           ;LcTLCD.c: 213:  } while(Busy);
 10396  001CD0  506B               	movf	WaitForBusy@Busy^0,w,c
 10397  001CD2  E1EB               	bnz	l4361
 10398  001CD4  0012               	return		;funcret
 10399  001CD6                     __end_of_WaitForBusy:
 10400                           	callstack 0
 10401                           
 10402 ;; *************** function _CantaIR *****************
 10403 ;; Defined at:
 10404 ;;		line 166 in file "LcTLCD.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  IR              1    wreg     unsigned char 
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;  IR              1    7[COMRAM] unsigned char 
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      void 
 10411 ;; Registers used:
 10412 ;;		wreg, status,2, status,0, cstack
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1
 10418 ;;      Params:         0       0       0
 10419 ;;      Locals:         1       0       0
 10420 ;;      Temps:          0       0       0
 10421 ;;      Totals:         1       0       0
 10422 ;;Total ram usage:        1 bytes
 10423 ;; Hardware stack levels used: 1
 10424 ;; Hardware stack levels required when called: 3
 10425 ;; This function calls:
 10426 ;;		_CantaPartAlta
 10427 ;;		_CantaPartBaixa
 10428 ;; This function is called by:
 10429 ;;		_LcScroll
 10430 ;;		_LcInit
 10431 ;;		_LcClear
 10432 ;;		_LcGotoXY
 10433 ;; This function uses a non-reentrant model
 10434 ;;
 10435                           
 10436                           	psect	text85
 10437  001F24                     __ptext85:
 10438                           	callstack 0
 10439  001F24                     _CantaIR:
 10440                           	callstack 24
 10441                           
 10442                           ;incstack = 0
 10443                           ;CantaIR@IR stored from wreg
 10444  001F24  6E66               	movwf	CantaIR@IR^0,c
 10445                           
 10446                           ;LcTLCD.c: 167:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10447  001F26  9694               	bcf	148,3,c	;volatile
 10448                           
 10449                           ;LcTLCD.c: 168:  (LATCbits.LATC5 = 0);
 10450                           
 10451                           ;LcTLCD.c: 169:  (LATDbits.LATD7 = 0);
 10452                           
 10453                           ;LcTLCD.c: 170:  (LATCbits.LATC4 = 1);
 10454  001F28  ECDB  F00C         	call	PL38	;call to abstracted procedure
 10455                           
 10456                           ;LcTLCD.c: 171:  CantaPartAlta(IR);
 10457  001F2C  5066               	movf	CantaIR@IR^0,w,c
 10458  001F2E  EC8A  F00D         	call	_CantaPartAlta
 10459                           
 10460                           ;LcTLCD.c: 172:  (LATCbits.LATC4 = 1);
 10461                           
 10462                           ;LcTLCD.c: 173:  (LATCbits.LATC4 = 0);
 10463                           
 10464                           ;LcTLCD.c: 174:  (LATCbits.LATC4 = 0);
 10465                           
 10466                           ;LcTLCD.c: 175:  (LATCbits.LATC4 = 1);
 10467  001F32  EC82  F00E         	call	PL60	;call to abstracted procedure
 10468                           
 10469                           ;LcTLCD.c: 176:  CantaPartBaixa(IR);
 10470  001F36  5066               	movf	CantaIR@IR^0,w,c
 10471  001F38  EC57  F00D         	call	_CantaPartBaixa
 10472                           
 10473                           ;LcTLCD.c: 177:  (LATCbits.LATC4 = 1);
 10474                           
 10475                           ;LcTLCD.c: 178:  (LATCbits.LATC4 = 0);
 10476                           
 10477                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10478  001F3C  EF7B  F00E         	goto	PL32	;call to abstracted procedure
 10479  001F40                     __end_of_CantaIR:
 10480                           	callstack 0
 10481                           
 10482 ;; *************** function _CantaPartBaixa *****************
 10483 ;; Defined at:
 10484 ;;		line 159 in file "LcTLCD.c"
 10485 ;; Parameters:    Size  Location     Type
 10486 ;;  c               1    wreg     unsigned char 
 10487 ;; Auto vars:     Size  Location     Type
 10488 ;;  c               1    6[COMRAM] unsigned char 
 10489 ;; Return value:  Size  Location     Type
 10490 ;;                  1    wreg      void 
 10491 ;; Registers used:
 10492 ;;		wreg, status,2, status,0
 10493 ;; Tracked objects:
 10494 ;;		On entry : 0/0
 10495 ;;		On exit  : 0/0
 10496 ;;		Unchanged: 0/0
 10497 ;; Data sizes:     COMRAM   BANK0   BANK1
 10498 ;;      Params:         0       0       0
 10499 ;;      Locals:         1       0       0
 10500 ;;      Temps:          1       0       0
 10501 ;;      Totals:         2       0       0
 10502 ;;Total ram usage:        2 bytes
 10503 ;; Hardware stack levels used: 1
 10504 ;; Hardware stack levels required when called: 2
 10505 ;; This function calls:
 10506 ;;		Nothing
 10507 ;; This function is called by:
 10508 ;;		_CantaIR
 10509 ;;		_CantaData
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           	psect	text86
 10514  001AAE                     __ptext86:
 10515                           	callstack 0
 10516  001AAE                     _CantaPartBaixa:
 10517                           	callstack 24
 10518                           
 10519                           ;incstack = 0
 10520                           ;CantaPartBaixa@c stored from wreg
 10521  001AAE  6E65               	movwf	CantaPartBaixa@c^0,c
 10522                           
 10523                           ;LcTLCD.c: 160:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
 10524  001AB0  A665               	btfss	CantaPartBaixa@c^0,3,c
 10525  001AB2  D003               	goto	u3760
 10526  001AB4  6A64               	clrf	??_CantaPartBaixa^0,c
 10527  001AB6  2A64               	incf	??_CantaPartBaixa^0,f,c
 10528  001AB8  D001               	goto	u3778
 10529  001ABA                     u3760:
 10530  001ABA  6A64               	clrf	??_CantaPartBaixa^0,c
 10531  001ABC                     u3778:
 10532  001ABC  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10533  001ABE  D825               	call	PL64	;call to abstracted procedure
 10534  001AC0  0BF7               	andlw	-9
 10535  001AC2  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10536  001AC4  6E8B               	movwf	139,c	;volatile
 10537                           
 10538                           ;LcTLCD.c: 161:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
 10539  001AC6  A465               	btfss	CantaPartBaixa@c^0,2,c
 10540  001AC8  D003               	goto	u3780
 10541  001ACA  6A64               	clrf	??_CantaPartBaixa^0,c
 10542  001ACC  2A64               	incf	??_CantaPartBaixa^0,f,c
 10543  001ACE  D001               	goto	u3798
 10544  001AD0                     u3780:
 10545  001AD0  6A64               	clrf	??_CantaPartBaixa^0,c
 10546  001AD2                     u3798:
 10547  001AD2  D81B               	call	PL64	;call to abstracted procedure
 10548  001AD4  0BFB               	andlw	-5
 10549  001AD6  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10550  001AD8  6E8B               	movwf	139,c	;volatile
 10551                           
 10552                           ;LcTLCD.c: 162:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
 10553  001ADA  A265               	btfss	CantaPartBaixa@c^0,1,c
 10554  001ADC  D003               	goto	u3800
 10555  001ADE  6A64               	clrf	??_CantaPartBaixa^0,c
 10556  001AE0  2A64               	incf	??_CantaPartBaixa^0,f,c
 10557  001AE2  D001               	goto	u3818
 10558  001AE4                     u3800:
 10559  001AE4  6A64               	clrf	??_CantaPartBaixa^0,c
 10560  001AE6                     u3818:
 10561  001AE6  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10562  001AE8  508B               	movf	139,w,c	;volatile
 10563  001AEA  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10564  001AEC  0BFD               	andlw	-3
 10565  001AEE  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10566  001AF0  6E8B               	movwf	139,c	;volatile
 10567                           
 10568                           ;LcTLCD.c: 163:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
 10569  001AF2  A065               	btfss	CantaPartBaixa@c^0,0,c
 10570  001AF4  D003               	goto	u3820
 10571  001AF6  6A64               	clrf	??_CantaPartBaixa^0,c
 10572  001AF8  2A64               	incf	??_CantaPartBaixa^0,f,c
 10573  001AFA  D001               	goto	u3838
 10574  001AFC                     u3820:
 10575  001AFC  6A64               	clrf	??_CantaPartBaixa^0,c
 10576  001AFE                     u3838:
 10577  001AFE  508B               	movf	139,w,c	;volatile
 10578  001B00  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10579  001B02  0BFE               	andlw	-2
 10580  001B04  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10581  001B06  6E8B               	movwf	139,c	;volatile
 10582  001B08  0012               	return		;funcret
 10583  001B0A                     __end_of_CantaPartBaixa:
 10584                           	callstack 0
 10585  001B0A                     PL64:
 10586                           	callstack 24
 10587  001B0A  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10588  001B0C  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10589  001B0E  508B               	movf	139,w,c	;volatile
 10590  001B10  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10591  001B12  0012               	return	
 10592  001B14                     __end_ofPL64:
 10593                           	callstack 0
 10594                           
 10595 ;; *************** function _CantaPartAlta *****************
 10596 ;; Defined at:
 10597 ;;		line 152 in file "LcTLCD.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;  c               1    wreg     unsigned char 
 10600 ;; Auto vars:     Size  Location     Type
 10601 ;;  c               1    6[COMRAM] unsigned char 
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  1    wreg      void 
 10604 ;; Registers used:
 10605 ;;		wreg, status,2, status,0
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMRAM   BANK0   BANK1
 10611 ;;      Params:         0       0       0
 10612 ;;      Locals:         1       0       0
 10613 ;;      Temps:          1       0       0
 10614 ;;      Totals:         2       0       0
 10615 ;;Total ram usage:        2 bytes
 10616 ;; Hardware stack levels used: 1
 10617 ;; Hardware stack levels required when called: 2
 10618 ;; This function calls:
 10619 ;;		Nothing
 10620 ;; This function is called by:
 10621 ;;		_CantaIR
 10622 ;;		_CantaData
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626                           	psect	text87
 10627  001B14                     __ptext87:
 10628                           	callstack 0
 10629  001B14                     _CantaPartAlta:
 10630                           	callstack 24
 10631                           
 10632                           ;incstack = 0
 10633                           ;CantaPartAlta@c stored from wreg
 10634  001B14  6E65               	movwf	CantaPartAlta@c^0,c
 10635                           
 10636                           ;LcTLCD.c: 153:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10637  001B16  AE65               	btfss	CantaPartAlta@c^0,7,c
 10638  001B18  D003               	goto	u3680
 10639  001B1A  6A64               	clrf	??_CantaPartAlta^0,c
 10640  001B1C  2A64               	incf	??_CantaPartAlta^0,f,c
 10641  001B1E  D001               	goto	u3698
 10642  001B20                     u3680:
 10643  001B20  6A64               	clrf	??_CantaPartAlta^0,c
 10644  001B22                     u3698:
 10645  001B22  4664               	rlncf	??_CantaPartAlta^0,f,c
 10646  001B24  D825               	call	PL80	;call to abstracted procedure
 10647  001B26  0BF7               	andlw	-9
 10648  001B28  1864               	xorwf	??_CantaPartAlta^0,w,c
 10649  001B2A  6E8B               	movwf	139,c	;volatile
 10650                           
 10651                           ;LcTLCD.c: 154:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10652  001B2C  AC65               	btfss	CantaPartAlta@c^0,6,c
 10653  001B2E  D003               	goto	u3700
 10654  001B30  6A64               	clrf	??_CantaPartAlta^0,c
 10655  001B32  2A64               	incf	??_CantaPartAlta^0,f,c
 10656  001B34  D001               	goto	u3718
 10657  001B36                     u3700:
 10658  001B36  6A64               	clrf	??_CantaPartAlta^0,c
 10659  001B38                     u3718:
 10660  001B38  D81B               	call	PL80	;call to abstracted procedure
 10661  001B3A  0BFB               	andlw	-5
 10662  001B3C  1864               	xorwf	??_CantaPartAlta^0,w,c
 10663  001B3E  6E8B               	movwf	139,c	;volatile
 10664                           
 10665                           ;LcTLCD.c: 155:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10666  001B40  AA65               	btfss	CantaPartAlta@c^0,5,c
 10667  001B42  D003               	goto	u3720
 10668  001B44  6A64               	clrf	??_CantaPartAlta^0,c
 10669  001B46  2A64               	incf	??_CantaPartAlta^0,f,c
 10670  001B48  D001               	goto	u3738
 10671  001B4A                     u3720:
 10672  001B4A  6A64               	clrf	??_CantaPartAlta^0,c
 10673  001B4C                     u3738:
 10674  001B4C  4664               	rlncf	??_CantaPartAlta^0,f,c
 10675  001B4E  508B               	movf	139,w,c	;volatile
 10676  001B50  1864               	xorwf	??_CantaPartAlta^0,w,c
 10677  001B52  0BFD               	andlw	-3
 10678  001B54  1864               	xorwf	??_CantaPartAlta^0,w,c
 10679  001B56  6E8B               	movwf	139,c	;volatile
 10680                           
 10681                           ;LcTLCD.c: 156:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10682  001B58  A865               	btfss	CantaPartAlta@c^0,4,c
 10683  001B5A  D003               	goto	u3740
 10684  001B5C  6A64               	clrf	??_CantaPartAlta^0,c
 10685  001B5E  2A64               	incf	??_CantaPartAlta^0,f,c
 10686  001B60  D001               	goto	u3758
 10687  001B62                     u3740:
 10688  001B62  6A64               	clrf	??_CantaPartAlta^0,c
 10689  001B64                     u3758:
 10690  001B64  508B               	movf	139,w,c	;volatile
 10691  001B66  1864               	xorwf	??_CantaPartAlta^0,w,c
 10692  001B68  0BFE               	andlw	-2
 10693  001B6A  1864               	xorwf	??_CantaPartAlta^0,w,c
 10694  001B6C  6E8B               	movwf	139,c	;volatile
 10695  001B6E  0012               	return		;funcret
 10696  001B70                     __end_of_CantaPartAlta:
 10697                           	callstack 0
 10698  001B70                     PL80:
 10699                           	callstack 24
 10700  001B70  4664               	rlncf	??_CantaPartAlta^0,f,c
 10701  001B72  4664               	rlncf	??_CantaPartAlta^0,f,c
 10702  001B74  508B               	movf	139,w,c	;volatile
 10703  001B76  1864               	xorwf	??_CantaPartAlta^0,w,c
 10704  001B78  0012               	return	
 10705  001B7A                     __end_ofPL80:
 10706                           	callstack 0
 10707                           
 10708 ;; *************** function _Espera *****************
 10709 ;; Defined at:
 10710 ;;		line 147 in file "LcTLCD.c"
 10711 ;; Parameters:    Size  Location     Type
 10712 ;;  Timer           1    wreg     unsigned char 
 10713 ;;  ms              2   12[COMRAM] int 
 10714 ;; Auto vars:     Size  Location     Type
 10715 ;;  Timer           1   15[COMRAM] unsigned char 
 10716 ;; Return value:  Size  Location     Type
 10717 ;;                  1    wreg      void 
 10718 ;; Registers used:
 10719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10720 ;; Tracked objects:
 10721 ;;		On entry : 0/0
 10722 ;;		On exit  : 0/0
 10723 ;;		Unchanged: 0/0
 10724 ;; Data sizes:     COMRAM   BANK0   BANK1
 10725 ;;      Params:         2       0       0
 10726 ;;      Locals:         1       0       0
 10727 ;;      Temps:          1       0       0
 10728 ;;      Totals:         4       0       0
 10729 ;;Total ram usage:        4 bytes
 10730 ;; Hardware stack levels used: 1
 10731 ;; Hardware stack levels required when called: 3
 10732 ;; This function calls:
 10733 ;;		_TiGetTics
 10734 ;;		_TiResetTics
 10735 ;; This function is called by:
 10736 ;;		_LcInit
 10737 ;;		_LcClear
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           	psect	text88
 10742  001EC8                     __ptext88:
 10743                           	callstack 0
 10744  001EC8                     _Espera:
 10745                           	callstack 25
 10746                           
 10747                           ;incstack = 0
 10748                           ;Espera@Timer stored from wreg
 10749  001EC8  6E6E               	movwf	Espera@Timer^0,c
 10750                           
 10751                           ;LcTLCD.c: 148:  TiResetTics(Timer);
 10752  001ECA  506E               	movf	Espera@Timer^0,w,c
 10753  001ECC  ECA0  F00F         	call	_TiResetTics
 10754  001ED0                     l4387:
 10755  001ED0  506E               	movf	Espera@Timer^0,w,c
 10756  001ED2  ECF8  F00E         	call	_TiGetTics
 10757  001ED6  506B               	movf	Espera@ms^0,w,c
 10758  001ED8  5C64               	subwf	?_TiGetTics^0,w,c
 10759  001EDA  5065               	movf	(?_TiGetTics+1)^0,w,c
 10760  001EDC  0A80               	xorlw	128
 10761  001EDE  6E6D               	movwf	??_Espera^0,c
 10762  001EE0  506C               	movf	(Espera@ms+1)^0,w,c
 10763  001EE2  0A80               	xorlw	128
 10764  001EE4  586D               	subwfb	??_Espera^0,w,c
 10765  001EE6  E3F4               	bnc	l4387
 10766  001EE8  0012               	return		;funcret
 10767  001EEA                     __end_of_Espera:
 10768                           	callstack 0
 10769                           
 10770 ;; *************** function _TiResetTics *****************
 10771 ;; Defined at:
 10772 ;;		line 55 in file "TiTTimer.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;  Handle          1    wreg     unsigned char 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;  Handle          1    5[COMRAM] unsigned char 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1
 10786 ;;      Params:         0       0       0
 10787 ;;      Locals:         1       0       0
 10788 ;;      Temps:          0       0       0
 10789 ;;      Totals:         1       0       0
 10790 ;;Total ram usage:        1 bytes
 10791 ;; Hardware stack levels used: 1
 10792 ;; Hardware stack levels required when called: 2
 10793 ;; This function calls:
 10794 ;;		Nothing
 10795 ;; This function is called by:
 10796 ;;		_Espera
 10797 ;;		_WaitForBusy
 10798 ;;		_SMotor
 10799 ;;		_TeTeclat
 10800 ;;		_menu
 10801 ;;		_motorAltaveu
 10802 ;;		_GLCDMotor
 10803 ;;		_motorHora
 10804 ;;		_motorSIO
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           	psect	text89
 10809  001F40                     __ptext89:
 10810                           	callstack 0
 10811  001F40                     _TiResetTics:
 10812                           	callstack 27
 10813                           
 10814                           ;incstack = 0
 10815                           ;TiResetTics@Handle stored from wreg
 10816  001F40  6E64               	movwf	TiResetTics@Handle^0,c
 10817                           
 10818                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10819  001F42  5064               	movf	TiResetTics@Handle^0,w,c
 10820  001F44  D805               	call	PL28	;call to abstracted procedure
 10821  001F46  C009  FFDE         	movff	_h_Tics,postinc2
 10822  001F4A  C00A  FFDD         	movff	_h_Tics+1,postdec2
 10823  001F4E  0012               	return		;funcret
 10824  001F50                     __end_of_TiResetTics:
 10825                           	callstack 0
 10826  001F50                     PL28:
 10827                           	callstack 24
 10828  001F50  0D03               	mullw	3
 10829  001F52  50F3               	movf	243,w,c
 10830  001F54  0F80               	addlw	low _s_Timers
 10831  001F56  6ED9               	movwf	fsr2l,c
 10832  001F58  6ADA               	clrf	fsr2h,c
 10833  001F5A  0012               	return	
 10834  001F5C                     __end_ofPL28:
 10835                           	callstack 0
 10836                           
 10837 ;; *************** function _TiGetTics *****************
 10838 ;; Defined at:
 10839 ;;		line 61 in file "TiTTimer.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;  Handle          1    wreg     unsigned char 
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;  Handle          1    9[COMRAM] unsigned char 
 10844 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10845 ;; Return value:  Size  Location     Type
 10846 ;;                  2    5[COMRAM] int 
 10847 ;; Registers used:
 10848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10849 ;; Tracked objects:
 10850 ;;		On entry : 0/0
 10851 ;;		On exit  : 0/0
 10852 ;;		Unchanged: 0/0
 10853 ;; Data sizes:     COMRAM   BANK0   BANK1
 10854 ;;      Params:         2       0       0
 10855 ;;      Locals:         3       0       0
 10856 ;;      Temps:          2       0       0
 10857 ;;      Totals:         7       0       0
 10858 ;;Total ram usage:        7 bytes
 10859 ;; Hardware stack levels used: 1
 10860 ;; Hardware stack levels required when called: 2
 10861 ;; This function calls:
 10862 ;;		Nothing
 10863 ;; This function is called by:
 10864 ;;		_Espera
 10865 ;;		_WaitForBusy
 10866 ;;		_SMotor
 10867 ;;		_TeTeclat
 10868 ;;		_menu
 10869 ;;		_motorAltaveu
 10870 ;;		_GLCDMotor
 10871 ;;		_motorHora
 10872 ;;		_motorSIO
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           	psect	text90
 10877  001DF0                     __ptext90:
 10878                           	callstack 0
 10879  001DF0                     _TiGetTics:
 10880                           	callstack 27
 10881                           
 10882                           ;incstack = 0
 10883                           ;TiGetTics@Handle stored from wreg
 10884  001DF0  6E68               	movwf	TiGetTics@Handle^0,c
 10885                           
 10886                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10887  001DF2  C009  F069         	movff	_h_Tics,TiGetTics@actual	;volatile
 10888  001DF6  C00A  F06A         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10889                           
 10890                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10891  001DFA  5068               	movf	TiGetTics@Handle^0,w,c
 10892  001DFC  ECA8  F00F         	call	PL28	;call to abstracted procedure
 10893  001E00  CFDE F066          	movff	postinc2,??_TiGetTics
 10894  001E04  CFDD F067          	movff	postdec2,??_TiGetTics+1
 10895  001E08  5066               	movf	??_TiGetTics^0,w,c
 10896  001E0A  5C69               	subwf	TiGetTics@actual^0,w,c	;volatile
 10897  001E0C  6E64               	movwf	?_TiGetTics^0,c
 10898  001E0E  5067               	movf	(??_TiGetTics+1)^0,w,c
 10899  001E10  586A               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10900  001E12  6E65               	movwf	(?_TiGetTics+1)^0,c
 10901  001E14  0012               	return		;funcret
 10902  001E16                     __end_of_TiGetTics:
 10903                           	callstack 0
 10904                           
 10905 ;; *************** function _GLCDInit *****************
 10906 ;; Defined at:
 10907 ;;		line 26 in file "GestioLCD.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;		None
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;		None
 10912 ;; Return value:  Size  Location     Type
 10913 ;;                  1    wreg      void 
 10914 ;; Registers used:
 10915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10916 ;; Tracked objects:
 10917 ;;		On entry : 0/0
 10918 ;;		On exit  : 0/0
 10919 ;;		Unchanged: 0/0
 10920 ;; Data sizes:     COMRAM   BANK0   BANK1
 10921 ;;      Params:         0       0       0
 10922 ;;      Locals:         0       0       0
 10923 ;;      Temps:          0       0       0
 10924 ;;      Totals:         0       0       0
 10925 ;;Total ram usage:        0 bytes
 10926 ;; Hardware stack levels used: 1
 10927 ;; Hardware stack levels required when called: 3
 10928 ;; This function calls:
 10929 ;;		_TiGetTimer
 10930 ;; This function is called by:
 10931 ;;		_main
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           	psect	text91
 10936  000154                     __ptext91:
 10937                           	callstack 0
 10938  000154                     _GLCDInit:
 10939                           	callstack 27
 10940                           
 10941                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 10942                           
 10943                           ;incstack = 0
 10944  000154  ECBB  F00E         	call	_TiGetTimer	;wreg free
 10945  000158  6E22               	movwf	_timerGLCD^0,c
 10946  00015A  0012               	return		;funcret
 10947  00015C                     __end_of_GLCDInit:
 10948                           	callstack 0
 10949                           
 10950 ;; *************** function _TiGetTimer *****************
 10951 ;; Defined at:
 10952 ;;		line 70 in file "TiTTimer.c"
 10953 ;; Parameters:    Size  Location     Type
 10954 ;;		None
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;		None
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  1    wreg      unsigned char 
 10959 ;; Registers used:
 10960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1
 10966 ;;      Params:         0       0       0
 10967 ;;      Locals:         0       0       0
 10968 ;;      Temps:          1       0       0
 10969 ;;      Totals:         1       0       0
 10970 ;;Total ram usage:        1 bytes
 10971 ;; Hardware stack levels used: 1
 10972 ;; Hardware stack levels required when called: 2
 10973 ;; This function calls:
 10974 ;;		Nothing
 10975 ;; This function is called by:
 10976 ;;		_LcInit
 10977 ;;		_Sinit
 10978 ;;		_TeInit
 10979 ;;		_Minit
 10980 ;;		_initAltaveu
 10981 ;;		_GLCDInit
 10982 ;;		_initHora
 10983 ;;		_initSIO
 10984 ;; This function uses a non-reentrant model
 10985 ;;
 10986                           
 10987                           	psect	text92
 10988  001D76                     __ptext92:
 10989                           	callstack 0
 10990  001D76                     _TiGetTimer:
 10991                           	callstack 27
 10992                           
 10993                           ;TiTTimer.c: 74:     counter=0;
 10994                           
 10995                           ;incstack = 0
 10996  001D76  6A34               	clrf	_counter^0,c
 10997                           
 10998                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10999  001D78  D005               	goto	l4449
 11000  001D7A                     l4441:
 11001                           
 11002                           ;TiTTimer.c: 76:         counter++;
 11003  001D7A  2A34               	incf	_counter^0,f,c
 11004                           
 11005                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 11006  001D7C  0E08               	movlw	8
 11007  001D7E  1834               	xorwf	_counter^0,w,c
 11008  001D80  E101               	bnz	l4449
 11009  001D82  0CFF               	retlw	255
 11010  001D84                     l4449:
 11011                           
 11012                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 11013  001D84  D807               	call	PL18	;call to abstracted procedure
 11014  001D86  04DE               	decf	postinc2,w,c
 11015  001D88  E0F8               	bz	l4441
 11016                           
 11017                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 11018  001D8A  D804               	call	PL18	;call to abstracted procedure
 11019  001D8C  0E01               	movlw	1
 11020  001D8E  6EDF               	movwf	indf2,c
 11021                           
 11022                           ;TiTTimer.c: 80:     return (counter);
 11023  001D90  5034               	movf	_counter^0,w,c
 11024  001D92  0012               	return		;funcret
 11025  001D94                     __end_of_TiGetTimer:
 11026                           	callstack 0
 11027  001D94                     PL18:
 11028                           	callstack 28
 11029  001D94  5034               	movf	_counter^0,w,c
 11030  001D96  0D03               	mullw	3
 11031  001D98  50F3               	movf	243,w,c
 11032  001D9A  0F82               	addlw	low (_s_Timers+2)
 11033  001D9C  6ED9               	movwf	fsr2l,c
 11034  001D9E  6ADA               	clrf	fsr2h,c
 11035  001DA0  0012               	return	
 11036  001DA2                     __end_ofPL18:
 11037                           	callstack 0
 11038                           
 11039 ;; *************** function _CtoA *****************
 11040 ;; Defined at:
 11041 ;;		line 22 in file "CtoA.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		wreg, status,2, status,0
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMRAM   BANK0   BANK1
 11055 ;;      Params:         0       0       0
 11056 ;;      Locals:         0       0       0
 11057 ;;      Temps:          0       0       0
 11058 ;;      Totals:         0       0       0
 11059 ;;Total ram usage:        0 bytes
 11060 ;; Hardware stack levels used: 1
 11061 ;; Hardware stack levels required when called: 2
 11062 ;; This function calls:
 11063 ;;		Nothing
 11064 ;; This function is called by:
 11065 ;;		_main
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           	psect	text93
 11070  001E82                     __ptext93:
 11071                           	callstack 0
 11072  001E82                     _CtoA:
 11073                           	callstack 28
 11074                           
 11075                           ;CtoA.c: 23:     if (convertir != 250) {
 11076                           
 11077                           ;incstack = 0
 11078  001E82  0EFA               	movlw	250
 11079  001E84  1847               	xorwf	_convertir^0,w,c
 11080  001E86  B4D8               	btfsc	status,2,c
 11081  001E88  0012               	return	
 11082                           
 11083                           ;CtoA.c: 24:         if (convertir != 0){
 11084  001E8A  5047               	movf	_convertir^0,w,c
 11085  001E8C  E009               	bz	l3785
 11086                           
 11087                           ;CtoA.c: 25:             stringScore[1]++;
 11088  001E8E  2A5D               	incf	(_stringScore+1)^0,f,c
 11089                           
 11090                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 11091  001E90  0E3A               	movlw	58
 11092  001E92  185D               	xorwf	(_stringScore+1)^0,w,c
 11093  001E94  E103               	bnz	l3783
 11094                           
 11095                           ;CtoA.c: 27:                 stringScore[1] = '0';
 11096  001E96  0E30               	movlw	48
 11097  001E98  6E5D               	movwf	(_stringScore+1)^0,c
 11098                           
 11099                           ;CtoA.c: 28:                 stringScore[0]++;
 11100  001E9A  2A5C               	incf	_stringScore^0,f,c
 11101  001E9C                     l3783:
 11102                           
 11103                           ;CtoA.c: 30:             convertir--;
 11104  001E9C  0647               	decf	_convertir^0,f,c
 11105                           
 11106                           ;CtoA.c: 31:         } else {
 11107  001E9E  0012               	return	
 11108  001EA0                     l3785:
 11109                           
 11110                           ;CtoA.c: 32:             convertir = 250;
 11111  001EA0  0EFA               	movlw	250
 11112  001EA2  6E47               	movwf	_convertir^0,c
 11113  001EA4  0CFA               	retlw	250	;funcret
 11114  001EA6                     __end_of_CtoA:
 11115                           	callstack 0
 11116                           
 11117 ;; *************** function _high_rsi *****************
 11118 ;; Defined at:
 11119 ;;		line 20 in file "main.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;		None
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;		None
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  1    wreg      void 
 11126 ;; Registers used:
 11127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11128 ;; Tracked objects:
 11129 ;;		On entry : 0/0
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMRAM   BANK0   BANK1
 11133 ;;      Params:         0       0       0
 11134 ;;      Locals:         0       0       0
 11135 ;;      Temps:          4       0       0
 11136 ;;      Totals:         4       0       0
 11137 ;;Total ram usage:        4 bytes
 11138 ;; Hardware stack levels used: 1
 11139 ;; Hardware stack levels required when called: 1
 11140 ;; This function calls:
 11141 ;;		__TiRSITimer
 11142 ;; This function is called by:
 11143 ;;		Interrupt level 2
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	intcode
 11148  000008                     __pintcode:
 11149                           	callstack 0
 11150  000008                     _high_rsi:
 11151                           	callstack 24
 11152                           
 11153                           ;incstack = 0
 11154  000008  8278               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11155  00000A  CFD9 F060          	movff	fsr2l,??_high_rsi
 11156  00000E  CFDA F061          	movff	fsr2h,??_high_rsi+1
 11157  000012  CFF3 F062          	movff	prodl,??_high_rsi+2
 11158  000016  CFF4 F063          	movff	prodh,??_high_rsi+3
 11159  00001A  EC09  F00E         	call	__TiRSITimer	;wreg free
 11160  00001E  C063  FFF4         	movff	??_high_rsi+3,prodh
 11161  000022  C062  FFF3         	movff	??_high_rsi+2,prodl
 11162  000026  C061  FFDA         	movff	??_high_rsi+1,fsr2h
 11163  00002A  C060  FFD9         	movff	??_high_rsi,fsr2l
 11164  00002E  9278               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11165  000030  0011               	retfie		f
 11166  000032                     __end_of_high_rsi:
 11167                           	callstack 0
 11168                           
 11169 ;; *************** function __TiRSITimer *****************
 11170 ;; Defined at:
 11171 ;;		line 37 in file "TiTTimer.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;		None
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;		None
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  1    wreg      void 
 11178 ;; Registers used:
 11179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMRAM   BANK0   BANK1
 11185 ;;      Params:         0       0       0
 11186 ;;      Locals:         0       0       0
 11187 ;;      Temps:          1       0       0
 11188 ;;      Totals:         1       0       0
 11189 ;;Total ram usage:        1 bytes
 11190 ;; Hardware stack levels used: 1
 11191 ;; This function calls:
 11192 ;;		Nothing
 11193 ;; This function is called by:
 11194 ;;		_high_rsi
 11195 ;; This function uses a non-reentrant model
 11196 ;;
 11197                           
 11198                           	psect	text95
 11199  001C12                     __ptext95:
 11200                           	callstack 0
 11201  001C12                     __TiRSITimer:
 11202                           	callstack 0
 11203                           
 11204                           ;TiTTimer.c: 39:     TMR0H = 223;
 11205                           
 11206                           ;incstack = 0
 11207                           
 11208                           ;TiTTimer.c: 40:     TMR0L = 148;
 11209  001C12  D81E               	call	PL70	;call to abstracted procedure
 11210                           
 11211                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 11212  001C14  94F2               	bcf	242,2,c	;volatile
 11213                           
 11214                           ;TiTTimer.c: 42:     h_Tics++;
 11215  001C16  4A09               	infsnz	_h_Tics^0,f,c
 11216  001C18  2A0A               	incf	(_h_Tics+1)^0,f,c
 11217                           
 11218                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 11219  001C1A  0E48               	movlw	72
 11220  001C1C  5C09               	subwf	_h_Tics^0,w,c
 11221  001C1E  0EEE               	movlw	238
 11222  001C20  580A               	subwfb	(_h_Tics+1)^0,w,c
 11223  001C22  A0D8               	btfss	status,0,c
 11224  001C24  0012               	return	
 11225                           
 11226                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 11227  001C26  6A34               	clrf	_counter^0,c
 11228  001C28                     i2l4747:
 11229  001C28  0E07               	movlw	7
 11230  001C2A  6434               	cpfsgt	_counter^0,c
 11231  001C2C  D001               	goto	i2l4751
 11232  001C2E  D00D               	goto	i2l370
 11233  001C30                     i2l4751:
 11234                           
 11235                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 11236  001C30  ECCA  F00E         	call	PL18	;call to abstracted procedure
 11237  001C34  04DE               	decf	postinc2,w,c
 11238  001C36  E107               	bnz	i2l4755
 11239                           
 11240                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 11241  001C38  5034               	movf	_counter^0,w,c
 11242  001C3A  ECA8  F00F         	call	PL28	;call to abstracted procedure
 11243  001C3E  5009               	movf	_h_Tics^0,w,c
 11244  001C40  5EDE               	subwf	postinc2,f,c
 11245  001C42  500A               	movf	(_h_Tics+1)^0,w,c
 11246  001C44  5ADD               	subwfb	postdec2,f,c
 11247  001C46                     i2l4755:
 11248                           
 11249                           ;TiTTimer.c: 50:         }
 11250  001C46  2A34               	incf	_counter^0,f,c
 11251  001C48  D7EF               	goto	i2l4747
 11252  001C4A                     i2l370:
 11253                           
 11254                           ;TiTTimer.c: 51:         h_Tics=0;
 11255  001C4A  6A09               	clrf	_h_Tics^0,c
 11256  001C4C  6A0A               	clrf	(_h_Tics+1)^0,c
 11257  001C4E  0012               	return		;funcret
 11258  001C50                     __end_of__TiRSITimer:
 11259                           	callstack 0
 11260  001C50                     PL70:
 11261                           	callstack 28
 11262  001C50  0EDF               	movlw	223
 11263  001C52  6ED7               	movwf	215,c	;volatile
 11264  001C54  0E94               	movlw	148
 11265  001C56  6ED6               	movwf	214,c	;volatile
 11266  001C58  0C94               	retlw	148
 11267  001C5A                     __end_ofPL70:
 11268                           	callstack 0
 11269                           
 11270                           	psect	rparam
 11271  0000                     
 11272                           	psect	temp
 11273  000078                     btemp:
 11274                           	callstack 0
 11275  000078                     	ds	1
 11276  0000                     int$flags	set	btemp
 11277  0000                     wtemp8	set	btemp+1
 11278  0000                     ttemp5	set	btemp+1
 11279  0000                     ttemp6	set	btemp+4
 11280  0000                     ttemp7	set	btemp+8
 11281                           
 11282                           	psect	idloc
 11283                           
 11284                           ;Config register IDLOC0 @ 0x200000
 11285                           ;	unspecified, using default values
 11286  200000                     	org	2097152
 11287  200000  FF                 	db	255
 11288                           
 11289                           ;Config register IDLOC1 @ 0x200001
 11290                           ;	unspecified, using default values
 11291  200001                     	org	2097153
 11292  200001  FF                 	db	255
 11293                           
 11294                           ;Config register IDLOC2 @ 0x200002
 11295                           ;	unspecified, using default values
 11296  200002                     	org	2097154
 11297  200002  FF                 	db	255
 11298                           
 11299                           ;Config register IDLOC3 @ 0x200003
 11300                           ;	unspecified, using default values
 11301  200003                     	org	2097155
 11302  200003  FF                 	db	255
 11303                           
 11304                           ;Config register IDLOC4 @ 0x200004
 11305                           ;	unspecified, using default values
 11306  200004                     	org	2097156
 11307  200004  FF                 	db	255
 11308                           
 11309                           ;Config register IDLOC5 @ 0x200005
 11310                           ;	unspecified, using default values
 11311  200005                     	org	2097157
 11312  200005  FF                 	db	255
 11313                           
 11314                           ;Config register IDLOC6 @ 0x200006
 11315                           ;	unspecified, using default values
 11316  200006                     	org	2097158
 11317  200006  FF                 	db	255
 11318                           
 11319                           ;Config register IDLOC7 @ 0x200007
 11320                           ;	unspecified, using default values
 11321  200007                     	org	2097159
 11322  200007  FF                 	db	255
 11323                           
 11324                           	psect	config
 11325                           
 11326                           ; Padding undefined space
 11327  300000                     	org	3145728
 11328  300000  FF                 	db	255
 11329                           
 11330                           ;Config register CONFIG1H @ 0x300001
 11331                           ;	Oscillator
 11332                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 11333                           ;	Fail-Safe Clock Monitor Enable bit
 11334                           ;	FCMEN = 0x0, unprogrammed default
 11335                           ;	Internal/External Oscillator Switchover bit
 11336                           ;	IESO = 0x0, unprogrammed default
 11337  300001                     	org	3145729
 11338  300001  06                 	db	6
 11339                           
 11340                           ;Config register CONFIG2L @ 0x300002
 11341                           ;	unspecified, using default values
 11342                           ;	Power-up Timer Enable bit
 11343                           ;	PWRT = 0x1, unprogrammed default
 11344                           ;	Brown-out Reset Enable bits
 11345                           ;	BOR = 0x3, unprogrammed default
 11346                           ;	Brown-out Reset Voltage bits
 11347                           ;	BORV = 0x3, unprogrammed default
 11348  300002                     	org	3145730
 11349  300002  1F                 	db	31
 11350                           
 11351                           ;Config register CONFIG2H @ 0x300003
 11352                           ;	Watchdog Timer Enable bit
 11353                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11354                           ;	Watchdog Timer Postscale Select bits
 11355                           ;	WDTPS = 0xF, unprogrammed default
 11356  300003                     	org	3145731
 11357  300003  1E                 	db	30
 11358                           
 11359                           ; Padding undefined space
 11360  300004                     	org	3145732
 11361  300004  FF                 	db	255
 11362                           
 11363                           ;Config register CONFIG3H @ 0x300005
 11364                           ;	CCP2 MUX bit
 11365                           ;	CCP2MX = 0x1, unprogrammed default
 11366                           ;	PORTB A/D Enable bit
 11367                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 11368                           ;	Low-Power Timer1 Oscillator Enable bit
 11369                           ;	LPT1OSC = 0x0, unprogrammed default
 11370                           ;	MCLR Pin Enable bit
 11371                           ;	MCLRE = 0x1, unprogrammed default
 11372  300005                     	org	3145733
 11373  300005  81                 	db	129
 11374                           
 11375                           ;Config register CONFIG4L @ 0x300006
 11376                           ;	Stack Full/Underflow Reset Enable bit
 11377                           ;	STVREN = 0x1, unprogrammed default
 11378                           ;	Single-Supply ICSP Enable bit
 11379                           ;	LVP = OFF, Single-Supply ICSP disabled
 11380                           ;	Boot Block Size Select bits
 11381                           ;	BBSIZ = 0x0, unprogrammed default
 11382                           ;	Extended Instruction Set Enable bit
 11383                           ;	XINST = 0x0, unprogrammed default
 11384                           ;	Background Debugger Enable bit
 11385                           ;	DEBUG = 0x1, unprogrammed default
 11386  300006                     	org	3145734
 11387  300006  81                 	db	129
 11388                           
 11389                           ; Padding undefined space
 11390  300007                     	org	3145735
 11391  300007  FF                 	db	255
 11392                           
 11393                           ;Config register CONFIG5L @ 0x300008
 11394                           ;	unspecified, using default values
 11395                           ;	Code Protection bit
 11396                           ;	CP0 = 0x1, unprogrammed default
 11397                           ;	Code Protection bit
 11398                           ;	CP1 = 0x1, unprogrammed default
 11399  300008                     	org	3145736
 11400  300008  03                 	db	3
 11401                           
 11402                           ;Config register CONFIG5H @ 0x300009
 11403                           ;	unspecified, using default values
 11404                           ;	Boot Block Code Protection bitProtect Boot
 11405                           ;	CPB = 0x1, unprogrammed default
 11406                           ;	Data EEPROM Code Protection bit
 11407                           ;	CPD = 0x1, unprogrammed default
 11408  300009                     	org	3145737
 11409  300009  C0                 	db	192
 11410                           
 11411                           ;Config register CONFIG6L @ 0x30000A
 11412                           ;	unspecified, using default values
 11413                           ;	Write Protection bit
 11414                           ;	WRT0 = 0x1, unprogrammed default
 11415                           ;	Write Protection bit
 11416                           ;	WRT1 = 0x1, unprogrammed default
 11417  30000A                     	org	3145738
 11418  30000A  03                 	db	3
 11419                           
 11420                           ;Config register CONFIG6H @ 0x30000B
 11421                           ;	unspecified, using default values
 11422                           ;	Configuration Register Write Protection bit
 11423                           ;	WRTC = 0x1, unprogrammed default
 11424                           ;	Boot Block Write Protection bit
 11425                           ;	WRTB = 0x1, unprogrammed default
 11426                           ;	Data EEPROM Write Protection bit
 11427                           ;	WRTD = 0x1, unprogrammed default
 11428  30000B                     	org	3145739
 11429  30000B  E0                 	db	224
 11430                           
 11431                           ;Config register CONFIG7L @ 0x30000C
 11432                           ;	unspecified, using default values
 11433                           ;	Table Read Protection bit
 11434                           ;	EBTR0 = 0x1, unprogrammed default
 11435                           ;	Table Read Protection bit
 11436                           ;	EBTR1 = 0x1, unprogrammed default
 11437  30000C                     	org	3145740
 11438  30000C  03                 	db	3
 11439                           
 11440                           ;Config register CONFIG7H @ 0x30000D
 11441                           ;	unspecified, using default values
 11442                           ;	Boot Block Table Read Protection bit
 11443                           ;	EBTRB = 0x1, unprogrammed default
 11444  30000D                     	org	3145741
 11445  30000D  40                 	db	64
 11446                           tosu	equ	0xFFF
 11447                           tosh	equ	0xFFE
 11448                           tosl	equ	0xFFD
 11449                           stkptr	equ	0xFFC
 11450                           pclatu	equ	0xFFB
 11451                           pclath	equ	0xFFA
 11452                           pcl	equ	0xFF9
 11453                           tblptru	equ	0xFF8
 11454                           tblptrh	equ	0xFF7
 11455                           tblptrl	equ	0xFF6
 11456                           tablat	equ	0xFF5
 11457                           prodh	equ	0xFF4
 11458                           prodl	equ	0xFF3
 11459                           indf0	equ	0xFEF
 11460                           postinc0	equ	0xFEE
 11461                           postdec0	equ	0xFED
 11462                           preinc0	equ	0xFEC
 11463                           plusw0	equ	0xFEB
 11464                           fsr0h	equ	0xFEA
 11465                           fsr0l	equ	0xFE9
 11466                           wreg	equ	0xFE8
 11467                           indf1	equ	0xFE7
 11468                           postinc1	equ	0xFE6
 11469                           postdec1	equ	0xFE5
 11470                           preinc1	equ	0xFE4
 11471                           plusw1	equ	0xFE3
 11472                           fsr1h	equ	0xFE2
 11473                           fsr1l	equ	0xFE1
 11474                           bsr	equ	0xFE0
 11475                           indf2	equ	0xFDF
 11476                           postinc2	equ	0xFDE
 11477                           postdec2	equ	0xFDD
 11478                           preinc2	equ	0xFDC
 11479                           plusw2	equ	0xFDB
 11480                           fsr2h	equ	0xFDA
 11481                           fsr2l	equ	0xFD9
 11482                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    157
    Data        53
    BSS         272
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     119
    BANK0           128      5      92
    BANK1           256      0     144

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 144
		 -> usuaris.password(BANK1[9]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpPassword(BANK0[9]), tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_motorSIO
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _miraPassword->_compareStrings
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->___lbdiv
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40265
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9858
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                       _SIOEnviaHora
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOEnviaHora                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   11189
                                              0 BANK0      5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
                       _miraPassword
 ---------------------------------------------------------------------------------
 (2) _miraPassword                                         0     0      0     416
                     _compareStrings
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      22
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     916
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     500
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _compareStrings                                       5     2      3     416
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                4     4      0     396
                                              9 COMRAM     4     4      0
                            ___lbdiv
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               3     3      0    1103
                                             16 COMRAM     3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     ___lbdiv
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
     _miraPassword
       _compareStrings
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIOEnviaHora
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      90       6       56.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      5C       4       71.9%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     16      77       1       94.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     163       7        0.0%
DATA                 0      0     163       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue May 10 12:48:45 2022

               TiResetTics@Handle 0064                  _loginNOTRegister 03B8  
                               _i 002A                                 _j 0029  
                              PL2 0FA8                                PL4 0FB6  
                              PL6 150E                                PL8 0FBE  
                              l55 1D50                  UgetUserName@quin 0066  
       ??_UcheckExistsNotFinished 0064         __size_of_llegirCharEEPROM 0010  
                             PL10 0A24                               PL20 121E  
                             PL12 0FC8                               PL30 0A30  
                             PL22 18B6                               PL14 1518  
                             PL40 15DE                               PL32 1CF6  
                             PL24 122C                               PL16 1210  
                             PL50 0D18                               PL42 15EC  
                             PL34 0A3A                               PL26 0D0C  
                             PL18 1D94                               PL60 1D04  
                             PL52 0D24                               PL44 0A40  
                             PL36 1BB0                               PL28 1F50  
                             PL70 1C50                               PL62 13EA  
                             PL54 1C84                               PL46 1BBE  
                             PL38 19B6                               PL80 1B70  
                             PL72 19C4                               PL64 1B0A  
                             PL56 0D30                               PL48 0A4A  
                             PL90 0A5C                               PL82 0FD2  
                             PL74 15FA                               PL66 1FC8  
                             PL58 123E                               PL92 0A62  
                             PL84 1C8E                               PL76 1EBE  
                             PL68 0D3A                               PL94 0A6A  
                             PL86 1C0A                               PL78 178E  
                             PL88 0A56            __end_of_compareStrings 1C84  
                             l511 033E                               l541 048E  
                             l607 071A                               l538 046C  
                             l539 047C                               l724 1DE6  
                             l736 1564                               l770 0FFA  
                             l772 1014                               l862 183E  
                             l943 0D9C                               l775 1044  
                             l767 0FDE                               l776 103A  
                             l768 0FF0                               l955 0E04  
                             l973 0EF4                               l975 0F1A  
                             u310 19A6                               u250 1964  
                             u308 1990                               u270 197A  
                             u328 19A8                               u290 198E  
                             u268 1966                               u288 197C  
                             _pos 002F                               _tmp 0033  
                ??_CantaPartBaixa 0064                               prod 000FF3  
                             wreg 000FE8       __size_of_calculateShowUsers 0004  
                     _ultimaTecla 0053                __size_of_GLCDMotor 0264  
                            l1020 16C4                              l1012 1606  
                            l1021 165C                              l1013 1620  
                            l1022 1676                              l1015 1642  
                            l1024 1698                              l1312 0CB0  
                            l1161 17AE                              l1281 0AE0  
                            l1290 0B50                              l3203 16B2  
                            l1283 0B02                              l3141 1636  
                            l3133 161C                              l2413 005E  
                            l5001 0EFC                              l1298 0BDA  
                            l3171 1672                              l3155 1658  
                            l5021 0F2E                              l2357 006A  
                            l5031 0F50                              l2383 1E28  
                            l5017 0F26                              l5009 0F14  
                            l3193 16AE                              l6001 10A6  
                            l2377 1E20                              l5027 0F42  
                            l3179 168C                              l2395 1E38  
                            l5211 0BEA                              l5203 0BC6  
                            l5131 0AB8                              l5107 0A8A  
                            l5037 0F5C                              l2389 1E30  
                            l5045 179A                              l5221 0C0A  
                            l5213 0BEE                              l5125 0AAC  
                            l5117 0A9A                              l5109 0A8E  
                            l6111 142C                              l4423 1C5C  
                            l6031 110A                              l6007 10B0  
                            l6103 11DA                              l5311 1914  
                            l5231 0C2C                       _puntuacions 0098  
                            l4441 1D7A                              l4361 1CAA  
                            l6201 125C                              l6121 1448  
                            l6033 1114                              l6025 1100  
                            l6017 10EE                              l5321 192E  
                            l5305 1908                              l5065 17D2  
                            l5057 17BC                              l5153 0AFE  
                            l5137 0AC8                              l6131 145E  
                            l6123 144E                              l6115 1438  
                            l6043 113E                              l6051 114A  
                            l6035 1118                              l5083 1814  
                            l5059 17C0                              l5091 1822  
                            l6117 143C                              l4429 1C70  
                            l6061 1164                              l4533 1E5A  
                            l7013 0734                              l7005 071C  
                            l5333 1940                              l5077 17FE  
                            l5261 0C84                              l5237 0C3A  
                            l4383 1CD0                              l6311 1382  
                            l6151 148C                              l6143 147A  
                            l6055 1158                              l4519 008E  
                            l7023 078E                              l7007 0722  
                            l5247 0C5E                              l4449 1D84  
                            l4393 1D54                              l4481 1BF0  
                            l6305 1378                              l6225 12A6  
                            l6217 1288                              l6145 147E  
                            l6137 146C                              l6073 1180  
                            l7041 07CA                              l7025 0794  
                            l7017 074C                              l5329 193C  
                            l5193 0B94                              l5185 0B6C  
                            l4387 1ED0                              l4483 1BF6  
                            l6235 12C8                              l6171 14C8  
                            l6155 1498                              l6091 11C0  
                            l6067 1172                              l4571 0076  
                            l7123 0916                              l7107 08DE  
                            l7051 07E2                              l7035 07BA  
                            l5283 18D0                              l5099 0A74  
                            l5275 0CBC                              l6325 13A4  
                            l6261 1302                              l6165 14BA  
                            l4661 1D22                              l4805 1552  
                            l6085 11B0                              l7133 092A  
                            l7117 08F2                              l7109 08E4  
                            l7029 07AE                              l7141 0936  
                            l5269 0CB2                              l3783 1E9C  
                            l4911 0DF4                              l6319 1398  
                            l6271 131C                              l6255 12F0  
                            l6247 12DA                              l6175 14D0  
                            l6159 14A2                              l4815 1566  
                            l6095 11C8                              l7063 07FC  
                            l7039 07C4                              l3785 1EA0  
                            l4489 1C04                              l4905 0DE2  
                            l6329 13AC                              l6281 133A  
                            l6273 1320                              l6193 1248  
                            l6185 14E0                              l4657 1D1C  
                            l4673 1D3E                              l7049 07DC  
                            l6601 0306                              l4499 00BE  
                            l4691 16F4                              l6179 14DA  
                            l4771 1DC0                              l4843 15B6  
                            l4827 1580                              l7083 0864  
                            l7059 07F4                              l6611 0326  
                            l5299 18FC                              l4941 0E2C  
                            l4853 0D46                              l6293 1356  
                            l6269 1312                              l6349 13BC  
                            l4669 1D36                              l4837 15A2  
                            l4597 0082                              l7085 086A  
                            l7069 0828                              l7165 1A7C  
                            l4951 0E4C                              l4863 0D6C  
                            l4767 1DB8                              l4839 15AE  
                            l7095 08AE                              l6703 0420  
                            l6615 032C                              l5903 1854  
                            l6289 1352                              l6617 0332  
                            l4947 0E3E                              l4883 0DA8  
                            l6811 0520                              l6715 0430  
                            l5923 1884                              l5915 186C  
                            l5907 185C                              l4973 0EA4  
                            l4957 0E64                              l4877 0D90  
                            l4869 0D7A                              l4797 1540  
                            l6733 0458                              l6661 03BA  
                            l6645 0388                              l6637 0370  
                            l6629 0354                              l5909 1860  
                            l4967 0E94                              l6743 0478  
                            l6655 03AC                              l6647 038E  
                            l5935 189C                              l4897 0DD6  
                            l5953 0FF6                              l6825 0542  
                            l6673 03CA                              l6657 03B2  
                            l4995 0EE8                              l4987 0ED2  
                            l5971 103E                              l6843 056A  
                            l6827 0548                              l6595 02F2  
                            l6941 0668                              l6925 0646  
                            l6909 0628                              l6757 04A6  
                            l5991 1088                              l5983 1076  
                            l5959 1006                              l6871 05D0  
                            l6687 03EE                              l5985 107A  
                            l5977 1050                              l6953 067A  
                            l6937 0664                              l6857 0592  
                            l6785 04DC                              l6777 04CE  
                            l6769 04BE                              l6697 0412  
                            l6689 03F4                              l6891 0604  
                            l6867 05B8                              l6859 0598  
                            l6699 0418                              l5989 1084  
                            l6965 069A                              l6797 04FE  
                            l6983 06C2                              l6975 06B4  
                            l6997 06F4                              l6989 06D0  
                            STR_1 02E7                              STR_2 02E0  
                            STR_3 02C7                              STR_4 02AE  
                            STR_5 029E                              STR_6 02D8  
                            STR_7 02BB                              STR_8 02D0  
                            _LATD 000F8C                              u4040 1D26  
                            u4060 1784                              u4310 0DDE  
                            u4240 0D76                              u4080 1B8C  
                            u4090 1BA2                              u3700 1B36  
                            u4340 0DFC                              u4087 1B8A  
                            u3720 1B4A                              u3800 1AE4  
                            u4097 1BA0                              u3740 1B62  
                            u3820 1AFC                              u3718 1B38  
                            u3680 1B20                              u3760 1ABA  
                            u4800 0AEC                              u3738 1B4C  
                            u3818 1AE6                              u7210 0488  
                            u3780 1AD0                              u3758 1B64  
                            u3838 1AFE                              u7230 0496  
                            u7150 043E                              u7080 03D8  
                            u4840 0BAA                              u3698 1B22  
                            u3778 1ABC                              u3890 1C74  
                            u7250 049E                              u4940 0C54  
                            u3798 1AD2                              u6710 129C  
                            u6470 13FE                              u4790 0AE8  
                            u7600 0686                              u4960 0C74  
                            u7610 068C                              u4970 0C98  
                            u6910 1388                              u6830 132C  
                            u6478 1400                              u6920 139E  
                            u6790 12FC                              u7750 07B6  
                            u7840 0862                              u7860 087C  
                            _CtoA 1E82                   ??_SsetNovaTecla 0064  
          __end_of_SIOcheckKrebut 0062                              _cap1 03B0  
                            _Rows 0040                              _cap2 03AF  
                            _main 1A46                              _mask 000E  
                            _hora 0056                              _menu 02F0  
                            _nota 0026             getArrayShowUsers@quin 0066  
                 __end_of_HJugant 0162                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0078  
                 __end_of_JJuguem 00FC                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 1EBE  
                            start 0032                   __end_of_CantaIR 1F40  
                    ?_initAltaveu 005F                      ___param_bank 000000  
                     _stringScore 005C                  __end_of_GLCDInit 015C  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 0184  
                           ?_CtoA 005F                __size_of_CToAReset 0008  
                     Espera@Timer 006E                             ?_main 005F  
                           ?_menu 005F                   __end_of___lbdiv 1D42  
                           _EEADR 000FA9                     ??_TiInitTimer 0064  
                           _T0CON 000FD5                   ?_compareStrings 0064  
                           i2l370 1C4A                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _LcLCD 1B7A                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                      ?_init_eusart 005F  
                           _TXREG 000FAD                             _SMSon 0162  
                           _TXSTA 000FAC                       _MNovaLletra 013C  
                           _Minit 0144                  __end_of_HGetTime 0184  
                           _Sinit 0134                             _Timer 003D  
                           _Uinit 152E                   __end_of_initSIO 010C  
                           _s_ptr 000B                             _score 0010  
                           _nou_s 03BA             __end_of_JoystickMotor 16DA  
                 _HActualitzaHora 1E5E       __size_of_escriureCharEEPROM 0026  
                  __pbitbssCOMRAM 03A8                             tablat 000FF5  
                     _LcNewString 00AA                     ??_TiResetTics 0064  
                 ?_SIOcheckKrebut 005F                _UshowUsersCalculat 007A  
                           ttemp5 0079                             ttemp6 007C  
                           ttemp7 0080                             status 000FD8  
                ?_checkHoraAcabat 005F                             wtemp8 0079  
   __size_of_UcheckExistsGetError 0004                __size_of_HNouSegon 000C  
                 ___lbdiv@divisor 0064                  __end_of_LcGotoXY 1D76  
            CToAConverteix@numero 0064                   ___lbdiv@counter 0066  
                __end_of_LcLliure 00C2                     ??__TiRSITimer 005F  
                __end_of_LcScroll 0174                        _TiGetTimer 1D76  
         EscriuPrimeraOrdre@ordre 0065                      __end_of_CtoA 1EA6  
                __end_of_JendGame 01B0                       ?_SIOendGame 005F  
                 __initialization 19CE               ?_UshowUsersCalculat 005F  
              __size_of_CantaData 0020                      __end_of_main 1AAE  
          __end_of_HClearNouSegon 0188                      __end_of_menu 0A24  
         ?_SIOHaAcabatPuntuacions 005F             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 005F                 __end_of_GLCDMotor 0FA8  
                __end_of_TeTeclat 150E                     _indexNextUser 002C  
                 _hi_ha_hora_sio2 03A8                            ??_CtoA 0064  
                          ??_main 0075                            ??_menu 00D7  
              __size_of_LcPutChar 0040                     __activetblptr 000002  
                   _ultimaTeclaAD 0018            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 001A                  GLCDMotor@length2 0019  
                      _JnovaTecla 00E4                  __end_of_UgetTop5 1FC8  
                          ?_LcLCD 005F                            ?_SMSon 005F  
                    ?_CToAobtenir 0064                            ?_Minit 005F  
            ??_UshowUsersCalculat 0064                            ?_Sinit 005F  
                          ?_Uinit 005F                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 1DCA  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 0064                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 0064                __size_of_SiFerMenu 0004  
                       ??_LcClear 0072                         ??_CantaIR 0066  
                          i2l4751 1C30                            i2l4755 1C46  
                          i2l4747 1C28                    LcGotoXY@Fisics 006D  
                  LcGotoXY@Column 0071                     ??_WaitForBusy 006B  
              __size_of_TiGetTics 0026                            _SPBRGH 000FB0  
                  _sumaPulsacions 003C                 __end_of_CToAReset 0104  
                          _SMSoff 0168                SIONovaDireccio@num 0064  
                          _LcInit 16DA                      _MNouJoystick 014C  
                  _UgetNumUsuaris 0190                            _SMotor 1246  
             escriureCharEEPROM@c 0065                            _TeInit 012C  
                          _Espera 1EC8                      _LcGotoXY$334 006F  
                          _Krebut 03A9    __end_of_SIOHaAcabatPuntuacions 01A8  
                          _RowAct 003F                     ?_miraPassword 005F  
             __end_of_TiResetTics 1F50                            Uinit@k 006A  
                __end_of_high_rsi 0032                            _h_Tics 0009  
                 ?_HClearNouSegon 005F                         ??___lbdiv 0065  
                   ?_CToAHaAcabat 005F                  __end_of_initHora 0114  
             __end_of__TiRSITimer 1C50                            _horaTX 0001  
                __end_of_menuList 0292                            clear_0 1A14  
                          clear_1 1A20                            clear_2 1A32  
                          _jugant 03AE                            _segons 0015  
                      _UenviaChar 0036                            isa$std 000001  
                _llegirCharEEPROM 0046                __size_of_UgetScore 000E  
                      UenviaPas@c 0065       __size_of_EscriuPrimeraOrdre 0064  
               __end_of_HNouSegon 006E                         ??_initSIO 0065  
                    __pdataCOMRAM 0045            __size_of_CantaPartAlta 005C  
                __end_of_motorSIO 0D0C                __size_of_UenviaPas 0010  
         __end_of_HActualitzaHora 1E82                 ??_SIONovaDireccio 0064  
                __end_of_motorJoc 183C                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  ??_CToAConverteix 0064  
              __size_of_UnewScore 000A               __size_of_SIOendGame 0004  
               __end_of_CantaData 1CF6                      TeTeclat@cols 0036  
                ___lbdiv@dividend 0065                         ?_GLCDInit 005F  
                   ?_UcheckExists 005F                        __accesstop 0080  
         __end_of__initialization 1A38            __end_of_UgetNumUsuaris 0194  
               __end_of_LcPutChar 1C0A                     _JnovaDireccio 00EC  
                JnovaDireccio@dir 0064                     ___rparam_used 000001  
                  ??_miraPassword 0069                     __end_of_LcLCD 1BB0  
                     ?_TiGetTimer 005F                     __end_of_SMSon 0168  
               SIONovaTecla@tecla 0064                    __pcstackCOMRAM 005F  
                   __end_of_Minit 014C               __end_of_WaitForBusy 1CD6  
                   __end_of_Sinit 013C                     __end_of_Uinit 15DE  
               __end_of_NoFerMenu 01AC                         ?_HGetTime 0064  
                    __pidataBANK0 1F5C                    ??_CToAHaAcabat 0064  
            __size_of_initAltaveu 0008                 __end_of_URegister 01A0  
               __end_of_HnoJugant 0180                 __end_of_SiFerMenu 01A4  
                      __end_ofPL2 0FB6                        __end_ofPL4 0FBE  
                      __end_ofPL6 1518                        __end_ofPL8 0FC8  
                ___lbdiv@quotient 0067                 __end_of_TiGetTics 1E16  
                     _TiInitTimer 1DA2                       ?_JnovaTecla 005F  
                         ??_LcLCD 0073                           ??_SMSon 0064  
                       ?_LcGotoXY 006C                         ?_LcLliure 005F  
                         ??_Minit 0065                         ?_LcScroll 005F  
                         ??_Sinit 0065                   JnovaTecla@tecla 0064  
                         ??_Uinit 0068              __size_of_init_eusart 0016  
                       ?_JendGame 005F                    ??_UcheckExists 0064  
             MNouJoystick@posicio 0064                        ??_GLCDInit 0065  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100                         ?_TeTeclat 005F  
                     _TiResetTics 1F40                   ?_UgetNumUsuaris 005F  
                  ?_JnovaDireccio 005F                     ??_UmotorUsers 0069  
               __end_of_UgetScore 2000                     ?_JoystickInit 005F  
                         ?_SMSoff 005F                           ?_LcInit 005F  
                   _CantaPartAlta 1B14                           ?_SMotor 005F  
                         ?_TeInit 005F                           ?_Espera 006B  
               __end_of_UenviaPas 1FF2                       __TiRSITimer 1C12  
             _indexNextUserStruct 002B                         ?_UgetTop5 005F  
               __end_of_UnewScore 00CC                        ??_HGetTime 0066  
                   ?_UgetUserName 0064                  ??_compareStrings 0067  
                         _BAUDCON 000FB8                       ?_UenviaChar 0064  
            __size_of_playAltaveu 0004                __size_of_motorHora 0084  
          __size_of_MsetNovaTecla 0008        __end_of_calculateShowUsers 0190  
                         LcInit@i 0070                  ?_HActualitzaHora 0064  
                      ??_LcGotoXY 006D                      ?_MNovaLletra 005F  
                      ??_LcLliure 0064                        ??_LcScroll 0067  
                ??_SIOcheckKrebut 0064               __size_of_TiGetTimer 001E  
            __size_of_CToAobtenir 0004                        ??_JendGame 0064  
                         _HJugant 015C                         ?_high_rsi 005F  
                         _JJuguem 00F4                           _LcClear 1EA6  
                         _CantaIR 1F24                      ?_LcNewString 0067  
                  ??_JoystickInit 0064                         ?_initHora 005F  
                      ??_TeTeclat 006B                       _WaitForBusy 1C98  
                  ?_CantaPartAlta 005F             __end_of_SsetNovaTecla 0124  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00B4  
                         __Hparam 0000                   __size_of_SMotor 01A4  
             __size_of_JnovaTecla 0008                   __size_of_TeInit 0008  
                 __size_of_Espera 0022                           __Lparam 0000  
                      ??_UgetTop5 0064                      ??_SIOendGame 0064  
                       ?_motorSIO 005F                         ?_motorJoc 005F  
                  ??_UgetUserName 0066                 _getArrayShowUsers 1F08  
             __end_of_UmotorUsers 1210          ?_UcheckExistsNotFinished 005F  
                         ___lbdiv 1D0E                     ?_motorAltaveu 005F  
                    __psmallconst 0200                ?_getArrayShowUsers 0064  
                         __pcinit 19CE      __end_of_UcheckExistsGetError 0198  
                         _ferMenu 03B2                        _init_ports 1EEA  
                         __ramtop 0200                           __ptext0 1A46  
                         __ptext1 0A72                           __ptext2 00C2  
                         __ptext3 1798                           __ptext4 1E16  
                         __ptext5 0174                           __ptext6 0056  
                         __ptext7 00CC                           __ptext8 00D4  
                         __ptext9 00DC                         _T0CONbits 000FD5  
                       _GLCDMotor 0D44                         CantaIR@IR 0066  
                         _initSIO 0104                           _counter 0034  
                         _horaTmp 0041            conversorJoystick@direc 0064  
             ??_getArrayShowUsers 0066                       UenviaChar@c 0065  
                   ?_SIOEnviaHora 005F              __end_of_miraPassword 1E5E  
      __end_of_escriureCharEEPROM 1DF0                  LcNewString@new_s 0067  
                 WaitForBusy@Busy 006B                       Uinit@k_1175 006B  
                    _do_showUsers 03B5                           _userPtr 0007  
               GLCDMostraMenu@num 0064                __end_of_SIOendGame 0178  
                      ??_high_rsi 0060              __end_of_CToAHaAcabat 01B8  
            end_of_initialization 1A38                           _usuaris 0100  
                   UgetScore@quin 0064                   ??_JnovaDireccio 0064  
                      ??_initHora 0065          __end_of_llegirCharEEPROM 0056  
         __size_of_CantaPartBaixa 005C                     __Lmediumconst 0000  
                 TiGetTics@Handle 0068                     _MsetNovaTecla 0124  
             __size_of_UenviaChar 0010                 _conversorJoystick 1E16  
               __end_of_motorHora 1952                  ??_HClearNouSegon 0064  
                      _novaLletra 0051         __end_of_getArrayShowUsers 1F24  
              ?_conversorJoystick 005F                   _usuariActualSIO 004A  
                      ??_motorSIO 0073                         _CToAReset 00FC  
                      ??_motorJoc 0072                   TiGetTics@actual 0069  
                   ?_SIONovaTecla 005F                        GLCDMotor@j 001F  
                         postdec1 000FE5                           postdec2 000FDD  
                 _SIONovaDireccio 00DC                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 006B          __size_of_checkHoraAcabat 000C  
                      _numUsuaris 002D              __end_of_UcheckExists 019C  
                   TeTeclat@files 0035               ??_conversorJoystick 0064  
              SIOStartGame@usuari 0064            __size_of_JoystickMotor 00D6  
                   TeTeclat@state 0037                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 005F  
                   ?_SIOStartGame 005F                    ??_SIOEnviaHora 0064  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
     __size_of_UshowUsersCalculat 000C                         _HNouSegon 0062  
               UnewScore@scoretmp 0064                    _GLCDMostraMenu 0092  
       __end_of_conversorJoystick 1E3A                   ??_CantaPartAlta 0064  
                  ?_MsetNovaTecla 005F                         _CantaData 1CD6  
               __size_of_GLCDInit 0008                       _UmotorUsers 0FDC  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 0092  
                  __end_of_SMSoff 016E                      ??_TiGetTimer 0064  
                  __end_of_LcInit 178E                    ??_SIONovaTecla 0064  
                      ?_CToAReset 005F                    __end_of_SMotor 13EA  
            __end_of_teclaPremuda 029E                         _LcPutChar 1BCA  
                  __end_of_TeInit 0134                 motorAltaveu@state 0023  
                  __end_of_Espera 1EEA                    GLCDMotor@state 0020  
      __end_of_EscriuPrimeraOrdre 19B6                 __size_of_HGetTime 0004  
                   __pidataCOMRAM 1F77                       ?_init_ports 005F  
                       _NoFerMenu 01A8                         _ColumnAct 003E  
            __end_of_JoystickInit 1FE2                    ??_SIOStartGame 0064  
                       _URegister 019C                         _HnoJugant 017C  
                    ?_TiInitTimer 005F                      ??_JnovaTecla 0064  
                       _SiFerMenu 01A0                       __end_ofPL10 0A30  
                     __end_ofPL20 122C                       __end_ofPL12 0FD2  
                     __end_ofPL30 0A3A                       __end_ofPL22 18CE  
                     __end_ofPL14 152E                       __end_ofPL40 15EC  
                     __end_ofPL32 1D04                       __end_ofPL24 123E  
                     __end_ofPL16 121E                       __end_ofPL50 0D24  
                     __end_ofPL42 15FA                       __end_ofPL34 0A40  
                     __end_ofPL26 0D18                       __end_ofPL18 1DA2  
                     __end_ofPL60 1D0E                       __end_ofPL52 0D30  
                     __end_ofPL44 0A4A                       __end_ofPL36 1BBE  
                     __end_ofPL28 1F5C                       __end_ofPL70 1C5A  
                     __end_ofPL62 13F4                       __end_ofPL54 1C8E  
                     __end_ofPL46 1BCA                       __end_ofPL38 19C4  
                     __end_ofPL80 1B7A                       __end_ofPL72 19CE  
                     __end_ofPL64 1B14                       __end_ofPL56 0D3A  
                     __end_ofPL48 0A56                       __end_ofPL90 0A62  
                     __end_ofPL82 0FDC                       __end_ofPL74 1604  
                     __end_ofPL66 1FD0                       __end_ofPL58 1246  
                     __end_ofPL92 0A6A                       __end_ofPL84 1C98  
                     __end_ofPL76 1EC8                       __end_ofPL68 0D44  
                     __end_ofPL94 0A72                       __end_ofPL86 1C12  
                     __end_ofPL78 1798                       __end_ofPL88 0A5C  
             start_initialization 19CE                         _TiGetTics 1DF0  
          __end_of_GLCDMostraMenu 009E                        ?_HNouSegon 005F  
                ??_UgetNumUsuaris 0064                  UmotorUsers@state 0027  
               __size_of_LcGotoXY 0034              __end_of_UgetUserName 1FBC  
              __end_of_TiGetTimer 1D94                     JJuguem@usuari 0064  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
               __size_of_LcScroll 0006                     _JoystickMotor 1604  
               __size_of_JendGame 0004                      ?_TiResetTics 005F  
                      ?_CantaData 005F              _UcheckExistsGetError 0194  
         __end_of_SIONovaDireccio 00E4              __size_of_LcNewString 000C  
                        ??_SMSoff 0064                          ??_LcInit 006F  
                       _NovaTecla 0052                 __size_of_TeTeclat 011A  
                        ??_SMotor 006B        __size_of_getArrayShowUsers 001C  
                        ??_TeInit 0065                      ?__TiRSITimer 005F  
                   ??_initAltaveu 0065                          ??_Espera 006D  
                       _UgetScore 1FF2                __end_of_JnovaTecla 00EC  
                      ?_LcPutChar 005F                         _UenviaPas 1FE2  
               __size_of_UgetTop5 000C                       __pdataBANK0 00BC  
                  motorHora@state 0014                      _menuDaltGLCD 0021  
                    ??_UenviaChar 0065                         _UnewScore 00C2  
                      ?_NoFerMenu 005F             __size_of_miraPassword 0024  
                     ??_GLCDMotor 0073                        ?_URegister 005F  
                      ?_HnoJugant 005F                 ??_checkHoraAcabat 0064  
                   ??_init_eusart 0064                        ?_SiFerMenu 005F  
                     __pbssCOMRAM 0001             __size_of_CToAHaAcabat 0004  
                   __pcstackBANK0 00D7                        ?_TiGetTics 0064  
                 ?_GLCDMostraMenu 005F                          ?_HJugant 005F  
                  ?_JoystickMotor 005F                   ??_MsetNovaTecla 0064  
            __end_of_motorAltaveu 18B6                          ?_JJuguem 005F  
                        ?_LcClear 005F                          ?_CantaIR 005F  
      __size_of_conversorJoystick 0024                _calculateShowUsers 018C  
                  _CantaPartBaixa 1AAE          ??_SIOHaAcabatPuntuacions 0064  
           ?_UcheckExistsGetError 005F                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 005F               __size_of_init_ports 001E  
              MsetNovaTecla@tecla 0064                SsetNovaTecla@tecla 0064  
              __end_of_UenviaChar 0046           __size_of_CToAConverteix 000C  
               __size_of_initHora 0008             __size_of_UcheckExists 0004  
             ?_calculateShowUsers 005F                        ?_UgetScore 005F  
                     ??_CToAReset 0064              __end_of_SIOEnviaHora 017C  
                    _miraPassword 1E3A                         __pintcode 0008  
                        ?___lbdiv 0064                     ??_playAltaveu 0064  
                      ?_UenviaPas 0064                 __size_of_motorSIO 029A  
               __size_of_motorJoc 00A4                   CantaPartBaixa@c 0065  
                    _CToAHaAcabat 01B4               __end_of_initAltaveu 011C  
                      ?_UnewScore 005F                         _arrayZero 0045  
                        ?_initSIO 005F                       __smallconst 0200  
                       _convertir 0047                     ??_CToAobtenir 0066  
                  __size_of_LcLCD 0036                    __size_of_SMSon 0006  
            ??_calculateShowUsers 0064  __size_of_UcheckExistsNotFinished 000C  
                  __size_of_Minit 0008              __end_of_SIONovaTecla 00DC  
                  __size_of_Sinit 0008                       ??_HNouSegon 0064  
                  __size_of_Uinit 00B0                       _direccioSIO 0049  
                     _direccioJoc 0013            __end_of_CantaPartBaixa 1B0A  
              JoystickMotor@state 0017                          _GLCDInit 0154  
                     _do_register 03B6               __end_of_init_eusart 1FA8  
                       _newString 03B1                      _UcheckExists 0198  
                       _loginText 00CF                         _jugantSIO 03AA  
        __size_of_HActualitzaHora 0024                         _jugantJoc 03AB  
                    UgetTop5@quin 0064                       ??_CantaData 0066  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                 ?_llegirCharEEPROM 005F  
                   ?_MNouJoystick 005F                  ?_SIONovaDireccio 005F  
            __end_of_SIOStartGame 00D4                     UenviaChar@pos 0064  
              _escriureCharEEPROM 1DCA                         _novaTecla 0054  
              ??_llegirCharEEPROM 0064                     motorSIO@state 000D  
                        _PIR1bits 000F9E                       ??_LcPutChar 0072  
                       _timerGLCD 0022                         _motorHora 18CE  
                        _RCONbits 000FD0                         _reproduir 03B3  
                        _HGetTime 0180             __size_of_JoystickInit 0012  
                       _timerHora 0016                         _timerMenu 0032  
             ?_escriureCharEEPROM 0064                       ??_NoFerMenu 0064  
                      _ADCON0bits 000FC2                       ??_URegister 0064  
                     ??_HnoJugant 0064                       ??_SiFerMenu 0064  
           __size_of_UgetUserName 0014               __end_of_playAltaveu 018C  
          __size_of_SsetNovaTecla 0008                          Espera@ms 006B  
                       _zeroTecla 003A                          _LcGotoXY 1D42  
                  _usuariLoguejat 004F                          _LcLliure 00B6  
                     ??_TiGetTics 0066           __size_of_compareStrings 002A  
             llegirCharEEPROM@pos 0064              __size_of_TiInitTimer 0028  
                        _LcScroll 016E                   ??_JoystickMotor 0065  
                   GLCDMotor@max1 004E                     GLCDMotor@max2 004D  
                   GLCDMotor@min1 001E                     GLCDMotor@min2 001D  
                    _teclaPremuda 0292                          _JendGame 01AC  
                       _usuariJoc 004C                       LcGotoXY@Row 006C  
                       copy_data0 19E2                         copy_data1 1A02  
            ??_escriureCharEEPROM 0065                   ?_CantaPartBaixa 005F  
             __end_of_CToAobtenir 01B4                  __size_of_HJugant 0006  
          ??_UcheckExistsGetError 0064             escriureCharEEPROM@pos 0064  
                __size_of_JJuguem 0008                  __size_of_LcClear 0018  
                __size_of_CantaIR 001C                          _TeTeclat 13F4  
           __end_of_JnovaDireccio 00F4                    ??_MNouJoystick 0064  
                  _do_updateScore 03B4   __size_of_SIOHaAcabatPuntuacions 0004  
                    ?_UmotorUsers 005F                      _JoystickInit 1FD0  
                      _EECON1bits 000FA6                      _registerText 00C4  
                     _indexUsuari 0030           __size_of_SIOcheckKrebut 000C  
            __size_of_TiResetTics 0010                     motorJoc@state 0012  
                        __Hrparam 0000                       _initAltaveu 0114  
                     ??_UgetScore 0064                          _UgetTop5 1FBC  
                       menu@state 002E                          __Lrparam 0000  
                      ?_motorHora 005F              __size_of__TiRSITimer 003E  
                    _UgetUserName 1FA8                       ??_UenviaPas 0065  
                __size_of___lbdiv 0034                      _novaDireccio 0050  
                     ??_UnewScore 0064                      ??_init_ports 0064  
             HActualitzaHora@nova 0064        __end_of_UshowUsersCalculat 0086  
                        _charActu 000F                       _init_eusart 1F92  
                __size_of_initSIO 0008             __size_of_motorAltaveu 007A  
                    _novaTeclaJOC 004B                      _novaTeclaSIO 0048  
                 _do_check_exists 03B7                          __ptext10 0178  
                        __ptext11 017C                _EscriuPrimeraOrdre 1952  
                        __ptext20 1E3A                          __ptext12 0062  
                        __ptext21 1F08                          __ptext13 015C  
                        __ptext30 0036                          __ptext22 006E  
                        __ptext14 0180                          __ptext31 0086  
                        __ptext23 018C                          __ptext15 0184  
                        __ptext40 016E                          __ptext32 0194  
                        __ptext24 007A                          __ptext16 18CE  
                        __ptext41 00E4                          __ptext33 0198  
                        __ptext25 1FA8                          __ptext17 0188  
                        __ptext50 00FC                          __ptext42 00EC  
                        __ptext34 019C                          __ptext26 1FBC  
                        __ptext18 183C                          __ptext51 1EEA  
                        __ptext43 01AC                          __ptext35 01A0  
                        __ptext27 1FF2                          __ptext19 02F0  
                        __ptext60 0046                          __ptext52 1F92  
                        __ptext44 00F4                          __ptext36 0162  
                        __ptext28 0190                          __ptext61 1D0E  
                        __ptext53 0104                          __ptext45 1E5E  
                        __ptext37 0168                          __ptext29 1FE2  
                        __ptext70 0144                          __ptext62 1DA2  
                        __ptext54 010C                          __ptext46 0092  
                        __ptext38 01A4                          __ptext71 1B7A  
                        __ptext63 13F4                          __ptext55 0114  
                        __ptext47 01B0                          __ptext39 01A8  
                        __ptext80 00AA                          __ptext72 16DA  
                        __ptext64 011C                          __ptext56 0FDC  
                        __ptext48 01B4                          __ptext81 00B6  
                        __ptext73 1952                          __ptext65 0124  
                        __ptext57 1DCA                          __ptext49 009E  
                        __ptext90 1DF0                          __ptext82 1EA6  
                        __ptext74 1604                          __ptext66 012C  
                        __ptext58 1C5A                          __ptext91 0154  
                        __ptext83 1D42                          __ptext75 014C  
                        __ptext67 0134                          __ptext59 152E  
                        __ptext92 1D76                          __ptext84 1C98  
                        __ptext76 1FD0                          __ptext68 1246  
                        __ptext93 1E82                          __ptext85 1F24  
                        __ptext77 0D44                          __ptext69 013C  
                        __ptext86 1AAE                          __ptext78 1BCA  
                        __ptext95 1C12                          __ptext87 1B14  
                        __ptext79 1CD6                          __ptext88 1EC8  
                        __ptext89 1F40                    CantaPartAlta@c 0065  
                     _lletraASCII 0055                          _high_rsi 0008  
                        _copsNota 0024                          _s_Timers 0080  
                   __size_of_CtoA 0024                          _initHora 010C  
                     _lletraInici 00BC                          _menuDalt 0031  
           __size_of_SIOEnviaHora 0004                          _menuList 0201  
             ?_EscriuPrimeraOrdre 005F                     __size_of_main 0068  
                   __size_of_menu 0734             __end_of_CantaPartAlta 1B70  
                  _CToAConverteix 009E                     CantaData@Data 0066  
                        _tiTeclat 0038                __end_of_init_ports 1F08  
                        _setSMSon 03B9                     _SsetNovaTecla 011C  
            __size_of_WaitForBusy 003E                          _nouSegon 03AD  
                        _scoreUsr 0028                          _motorSIO 0A72  
               ??_HActualitzaHora 0065                          _motorJoc 1798  
                 _checkHoraAcabat 006E                          _timerSIO 0011  
                        _timerSMS 003B                          isa$xinst 000000  
                        int$flags 0078                      UenviaPas@pos 0064  
                     _playAltaveu 0188                      _motorAltaveu 183C  
         __size_of_HClearNouSegon 0004            _SIOHaAcabatPuntuacions 01A4  
            ??_EscriuPrimeraOrdre 0064                        LcInit@rows 006F  
                ??_GLCDMostraMenu 0064             __size_of_SIONovaTecla 0008  
         _UcheckExistsNotFinished 0086                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0064                       _CToAobtenir 01B0  
                    _SIOEnviaHora 0178             __size_of_SIOStartGame 0008  
                   ??_LcNewString 0069                          intlevel2 0000  
                    _timerAltaveu 0025                    _arrayShowUsers 00A2  
          __end_of_CToAConverteix 00AA                        LcPutChar@c 0072  
                  ?_SsetNovaTecla 005F                 MNovaLletra@lletra 0064  
                 compareStrings@a 0064                   compareStrings@b 0065  
                     ??_motorHora 006B                      _SIONovaTecla 00D4  
                     _tempsAcabat 03AC                       GLCDMotor@k1 001C  
                     GLCDMotor@k2 001B              __end_of_MNouJoystick 0154  
                    _SIOStartGame 00CC                    _compareStrings 1C5A  
                     _tmpPassword 00AA               __end_of_MNovaLletra 0144  
                 ?_CToAConverteix 005F             __end_of_MsetNovaTecla 012C  
         __end_of_checkHoraAcabat 007A                       _tmpUsername 00B3  
                  _SIOcheckKrebut 0056                       SMotor@state 0039  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 00B6  
            __size_of_UmotorUsers 0234                        _SIOendGame 0174  
