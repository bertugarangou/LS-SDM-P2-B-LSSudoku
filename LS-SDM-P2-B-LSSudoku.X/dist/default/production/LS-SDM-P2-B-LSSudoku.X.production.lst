

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu May 05 13:44:10 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   109                           	psect	pa_nodes0,global,class=CODE,delta=1
   110  0000                     
   111                           ; Version 2.32
   112                           ; Generated 02/02/2021 GMT
   113                           ; 
   114                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution. Publication is not required when
   128                           ;        this file is used in an embedded application.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC18F4321 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146  0000                     
   147                           	psect	idataCOMRAM
   148  001AEE                     __pidataCOMRAM:
   149                           	callstack 0
   150                           
   151                           ;initializer for _arrayZero
   152  001AEE  30                 	db	48
   153  001AEF  20                 	db	32
   154  001AF0  00                 	db	0
   155                           
   156                           ;initializer for _convertir
   157  001AF1  FA                 	db	250
   158                           
   159                           ;initializer for _novaTeclaSIO
   160  001AF2  FF                 	db	255
   161                           
   162                           ;initializer for _direccioSIO
   163  001AF3  FF                 	db	255
   164                           
   165                           ;initializer for _usuariActualSIO
   166  001AF4  FF                 	db	255
   167                           
   168                           ;initializer for _novaTeclaJOC
   169  001AF5  FF                 	db	255
   170                           
   171                           ;initializer for _usuariJoc
   172  001AF6  FF                 	db	255
   173                           
   174                           ;initializer for GLCDMotor@max2
   175  001AF7  0F                 	db	15
   176                           
   177                           ;initializer for GLCDMotor@max1
   178  001AF8  0F                 	db	15
   179                           
   180                           ;initializer for _usuariLoguejat
   181  001AF9  FF                 	db	255
   182                           
   183                           ;initializer for _novaDireccio
   184  001AFA  FF                 	db	255
   185                           
   186                           ;initializer for _novaLletra
   187  001AFB  FF                 	db	255
   188                           
   189                           ;initializer for _NovaTecla
   190  001AFC  FF                 	db	255
   191                           
   192                           ;initializer for _ultimaTecla
   193  001AFD  FF                 	db	255
   194                           
   195                           ;initializer for _timerSMS
   196  001AFE  FF                 	db	255
   197                           
   198                           ;initializer for _novaTecla
   199  001AFF  FF                 	db	255
   200                           
   201                           ;initializer for _lletraASCII
   202  001B00  FF                 	db	255
   203                           
   204                           ;initializer for _hora
   205  001B01  33                 	db	51
   206  001B02  30                 	db	48
   207  001B03  3A                 	db	58
   208  001B04  30                 	db	48
   209  001B05  30                 	db	48
   210  001B06  00                 	db	0
   211                           
   212                           ;initializer for _stringScore
   213  001B07  30                 	db	48
   214  001B08  30                 	db	48
   215  001B09  00                 	db	0
   216                           
   217                           	psect	idataBANK0
   218  001B58                     __pidataBANK0:
   219                           	callstack 0
   220                           
   221                           ;initializer for _lletraInici
   222  001B58  41                 	db	65
   223  001B59  44                 	db	68
   224  001B5A  47                 	db	71
   225  001B5B  4A                 	db	74
   226  001B5C  4D                 	db	77
   227  001B5D  50                 	db	80
   228  001B5E  54                 	db	84
   229  001B5F  57                 	db	87
   230  001B60  00                 	db	0
   231                           
   232                           ;initializer for _teclaPremuda
   233  001B61  01                 	db	1
   234  001B62  02                 	db	2
   235  001B63  03                 	db	3
   236  001B64  04                 	db	4
   237  001B65  05                 	db	5
   238  001B66  06                 	db	6
   239  001B67  07                 	db	7
   240  001B68  08                 	db	8
   241  001B69  09                 	db	9
   242  001B6A  0A                 	db	10
   243  001B6B  00                 	db	0
   244  001B6C  0B                 	db	11
   245                           
   246                           	psect	smallconst
   247  000200                     __psmallconst:
   248                           	callstack 0
   249  000200  00                 	db	0
   250  000201                     _menuList:
   251                           	callstack 0
   252  000201  31                 	db	49
   253  000202  2E                 	db	46
   254  000203  50                 	db	80
   255  000204  6C                 	db	108
   256  000205  61                 	db	97
   257  000206  79                 	db	121
   258  000207  20                 	db	32
   259  000208  61                 	db	97
   260  000209  20                 	db	32
   261  00020A  47                 	db	71
   262  00020B  61                 	db	97
   263  00020C  6D                 	db	109
   264  00020D  65                 	db	101
   265  00020E  00                 	db	0
   266  00020F  00                 	db	0
   267  000210  00                 	db	0
   268  000211  00                 	db	0
   269  000212  00                 	db	0
   270  000213  00                 	db	0
   271  000214  00                 	db	0
   272  000215  00                 	db	0
   273  000216  00                 	db	0
   274  000217  00                 	db	0
   275  000218  00                 	db	0
   276  000219  00                 	db	0
   277  00021A  00                 	db	0
   278  00021B  00                 	db	0
   279  00021C  00                 	db	0
   280  00021D  00                 	db	0
   281  00021E  32                 	db	50
   282  00021F  2E                 	db	46
   283  000220  4D                 	db	77
   284  000221  6F                 	db	111
   285  000222  64                 	db	100
   286  000223  69                 	db	105
   287  000224  66                 	db	102
   288  000225  79                 	db	121
   289  000226  20                 	db	32
   290  000227  54                 	db	84
   291  000228  69                 	db	105
   292  000229  6D                 	db	109
   293  00022A  65                 	db	101
   294  00022B  00                 	db	0
   295  00022C  00                 	db	0
   296  00022D  00                 	db	0
   297  00022E  00                 	db	0
   298  00022F  00                 	db	0
   299  000230  00                 	db	0
   300  000231  00                 	db	0
   301  000232  00                 	db	0
   302  000233  00                 	db	0
   303  000234  00                 	db	0
   304  000235  00                 	db	0
   305  000236  00                 	db	0
   306  000237  00                 	db	0
   307  000238  00                 	db	0
   308  000239  00                 	db	0
   309  00023A  00                 	db	0
   310  00023B  33                 	db	51
   311  00023C  2E                 	db	46
   312  00023D  53                 	db	83
   313  00023E  68                 	db	104
   314  00023F  6F                 	db	111
   315  000240  77                 	db	119
   316  000241  20                 	db	32
   317  000242  47                 	db	71
   318  000243  65                 	db	101
   319  000244  6E                 	db	110
   320  000245  65                 	db	101
   321  000246  72                 	db	114
   322  000247  61                 	db	97
   323  000248  6C                 	db	108
   324  000249  20                 	db	32
   325  00024A  54                 	db	84
   326  00024B  6F                 	db	111
   327  00024C  70                 	db	112
   328  00024D  20                 	db	32
   329  00024E  35                 	db	53
   330  00024F  20                 	db	32
   331  000250  53                 	db	83
   332  000251  63                 	db	99
   333  000252  6F                 	db	111
   334  000253  72                 	db	114
   335  000254  65                 	db	101
   336  000255  73                 	db	115
   337  000256  20                 	db	32
   338  000257  00                 	db	0
   339  000258  34                 	db	52
   340  000259  2E                 	db	46
   341  00025A  4C                 	db	76
   342  00025B  6F                 	db	111
   343  00025C  67                 	db	103
   344  00025D  6F                 	db	111
   345  00025E  75                 	db	117
   346  00025F  74                 	db	116
   347  000260  00                 	db	0
   348  000261  00                 	db	0
   349  000262  00                 	db	0
   350  000263  00                 	db	0
   351  000264  00                 	db	0
   352  000265  00                 	db	0
   353  000266  00                 	db	0
   354  000267  00                 	db	0
   355  000268  00                 	db	0
   356  000269  00                 	db	0
   357  00026A  00                 	db	0
   358  00026B  00                 	db	0
   359  00026C  00                 	db	0
   360  00026D  00                 	db	0
   361  00026E  00                 	db	0
   362  00026F  00                 	db	0
   363  000270  00                 	db	0
   364  000271  00                 	db	0
   365  000272  00                 	db	0
   366  000273  00                 	db	0
   367  000274  00                 	db	0
   368  000275  35                 	db	53
   369  000276  2E                 	db	46
   370  000277  53                 	db	83
   371  000278  68                 	db	104
   372  000279  6F                 	db	111
   373  00027A  77                 	db	119
   374  00027B  20                 	db	32
   375  00027C  41                 	db	65
   376  00027D  6C                 	db	108
   377  00027E  6C                 	db	108
   378  00027F  20                 	db	32
   379  000280  55                 	db	85
   380  000281  73                 	db	115
   381  000282  65                 	db	101
   382  000283  72                 	db	114
   383  000284  73                 	db	115
   384  000285  00                 	db	0
   385  000286  00                 	db	0
   386  000287  00                 	db	0
   387  000288  00                 	db	0
   388  000289  00                 	db	0
   389  00028A  00                 	db	0
   390  00028B  00                 	db	0
   391  00028C  00                 	db	0
   392  00028D  00                 	db	0
   393  00028E  00                 	db	0
   394  00028F  00                 	db	0
   395  000290  00                 	db	0
   396  000291  00                 	db	0
   397  000292                     __end_of_menuList:
   398                           	callstack 0
   399  0000                     _PIR1bits	set	3998
   400  0000                     _RCREG	set	4014
   401  0000                     _TXREG	set	4013
   402  0000                     _TXSTAbits	set	4012
   403  0000                     _ADCON0bits	set	4034
   404  0000                     _ADRESH	set	4036
   405  0000                     _ADCON2	set	4032
   406  0000                     _ADCON1	set	4033
   407  0000                     _ADCON0	set	4034
   408  0000                     _EECON2	set	4007
   409  0000                     _EEDATA	set	4008
   410  0000                     _EEADR	set	4009
   411  0000                     _T0CONbits	set	4053
   412  0000                     _TMR0L	set	4054
   413  0000                     _TMR0H	set	4055
   414  0000                     _T0CON	set	4053
   415  0000                     _INTCONbits	set	4082
   416  0000                     _RCONbits	set	4048
   417  0000                     _PORTDbits	set	3971
   418  0000                     _SPBRG	set	4015
   419  0000                     _SPBRGH	set	4016
   420  0000                     _BAUDCON	set	4024
   421  0000                     _RCSTA	set	4011
   422  0000                     _TXSTA	set	4012
   423  0000                     _EECON1bits	set	4006
   424  0000                     _LATD	set	3980
   425  0000                     _TRISD	set	3989
   426  0000                     _TRISC	set	3988
   427  0000                     _LATBbits	set	3978
   428  0000                     _TRISB	set	3987
   429  0000                     _TRISA	set	3986
   430  0000                     _PORTCbits	set	3970
   431  0000                     _LATDbits	set	3980
   432  0000                     _LATCbits	set	3979
   433  0000                     _TRISDbits	set	3989
   434  0000                     _TRISCbits	set	3988
   435  000292                     STR_7:
   436  000292  54                 	db	84	;'T'
   437  000293  49                 	db	73	;'I'
   438  000294  4D                 	db	77	;'M'
   439  000295  45                 	db	69	;'E'
   440  000296  20                 	db	32
   441  000297  52                 	db	82	;'R'
   442  000298  45                 	db	69	;'E'
   443  000299  4D                 	db	77	;'M'
   444  00029A  41                 	db	65	;'A'
   445  00029B  49                 	db	73	;'I'
   446  00029C  4E                 	db	78	;'N'
   447  00029D  49                 	db	73	;'I'
   448  00029E  4E                 	db	78	;'N'
   449  00029F  47                 	db	71	;'G'
   450  0002A0  3A                 	db	58	;':'
   451  0002A1  00                 	db	0
   452  0002A2                     STR_6:
   453  0002A2  4D                 	db	77	;'M'
   454  0002A3  6F                 	db	111	;'o'
   455  0002A4  64                 	db	100	;'d'
   456  0002A5  69                 	db	105	;'i'
   457  0002A6  66                 	db	102	;'f'
   458  0002A7  79                 	db	121	;'y'
   459  0002A8  20                 	db	32
   460  0002A9  54                 	db	84	;'T'
   461  0002AA  69                 	db	105	;'i'
   462  0002AB  6D                 	db	109	;'m'
   463  0002AC  65                 	db	101	;'e'
   464  0002AD  3A                 	db	58	;':'
   465  0002AE  00                 	db	0
   466  0002AF                     STR_9:
   467  0002AF  54                 	db	84	;'T'
   468  0002B0  49                 	db	73	;'I'
   469  0002B1  4D                 	db	77	;'M'
   470  0002B2  45                 	db	69	;'E'
   471  0002B3  20                 	db	32
   472  0002B4  4C                 	db	76	;'L'
   473  0002B5  45                 	db	69	;'E'
   474  0002B6  46                 	db	70	;'F'
   475  0002B7  54                 	db	84	;'T'
   476  0002B8  3A                 	db	58	;':'
   477  0002B9  20                 	db	32
   478  0002BA  00                 	db	0
   479  0002BB                     STR_2:
   480  0002BB  32                 	db	50	;'2'
   481  0002BC  2E                 	db	46
   482  0002BD  52                 	db	82	;'R'
   483  0002BE  45                 	db	69	;'E'
   484  0002BF  47                 	db	71	;'G'
   485  0002C0  49                 	db	73	;'I'
   486  0002C1  53                 	db	83	;'S'
   487  0002C2  54                 	db	84	;'T'
   488  0002C3  45                 	db	69	;'E'
   489  0002C4  52                 	db	82	;'R'
   490  0002C5  00                 	db	0
   491  0002C6                     STR_5:
   492  0002C6  42                 	db	66	;'B'
   493  0002C7  59                 	db	89	;'Y'
   494  0002C8  45                 	db	69	;'E'
   495  0002C9  20                 	db	32
   496  0002CA  42                 	db	66	;'B'
   497  0002CB  59                 	db	89	;'Y'
   498  0002CC  45                 	db	69	;'E'
   499  0002CD  20                 	db	32
   500  0002CE  00                 	db	0
   501  0002CF                     STR_10:
   502  0002CF  53                 	db	83	;'S'
   503  0002D0  43                 	db	67	;'C'
   504  0002D1  4F                 	db	79	;'O'
   505  0002D2  52                 	db	82	;'R'
   506  0002D3  45                 	db	69	;'E'
   507  0002D4  3A                 	db	58	;':'
   508  0002D5  20                 	db	32
   509  0002D6  00                 	db	0
   510  0002D7                     STR_8:
   511  0002D7  45                 	db	69	;'E'
   512  0002D8  52                 	db	82	;'R'
   513  0002D9  52                 	db	82	;'R'
   514  0002DA  4F                 	db	79	;'O'
   515  0002DB  52                 	db	82	;'R'
   516  0002DC  53                 	db	83	;'S'
   517  0002DD  3A                 	db	58	;':'
   518  0002DE  00                 	db	0
   519  0002DF                     STR_1:
   520  0002DF  31                 	db	49	;'1'
   521  0002E0  2E                 	db	46
   522  0002E1  4C                 	db	76	;'L'
   523  0002E2  4F                 	db	79	;'O'
   524  0002E3  47                 	db	71	;'G'
   525  0002E4  49                 	db	73	;'I'
   526  0002E5  4E                 	db	78	;'N'
   527  0002E6  00                 	db	0
   528  0002E7                     STR_4:
   529  0002E7  50                 	db	80	;'P'
   530  0002E8  53                 	db	83	;'S'
   531  0002E9  57                 	db	87	;'W'
   532  0002EA  44                 	db	68	;'D'
   533  0002EB  3A                 	db	58	;':'
   534  0002EC  20                 	db	32
   535  0002ED  00                 	db	0
   536  0002EE                     STR_3:
   537  0002EE  55                 	db	85	;'U'
   538  0002EF  53                 	db	83	;'S'
   539  0002F0  45                 	db	69	;'E'
   540  0002F1  52                 	db	82	;'R'
   541  0002F2  3A                 	db	58	;':'
   542  0002F3  20                 	db	32
   543  0002F4  00                 	db	0
   544  0002F5  00                 	db	0	; dummy byte at the end
   545  0000                     
   546                           ; #config settings
   547                           
   548                           	psect	cinit
   549  001614                     __pcinit:
   550                           	callstack 0
   551  001614                     start_initialization:
   552                           	callstack 0
   553  001614                     __initialization:
   554                           	callstack 0
   555                           
   556                           ; Initialize objects allocated to BANK0 (21 bytes)
   557                           ; load TBLPTR registers with __pidataBANK0
   558  001614  0E58               	movlw	low __pidataBANK0
   559  001616  6EF6               	movwf	tblptrl,c
   560  001618  0E1B               	movlw	high __pidataBANK0
   561  00161A  6EF7               	movwf	tblptrh,c
   562  00161C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   563  00161E  6EF8               	movwf	tblptru,c
   564  001620  EE00  F0A1         	lfsr	0,__pdataBANK0
   565  001624  EE10 F015          	lfsr	1,21
   566  001628                     copy_data0:
   567  001628  0009               	tblrd		*+
   568  00162A  CFF5 FFEE          	movff	tablat,postinc0
   569  00162E  50E5               	movf	postdec1,w,c
   570  001630  50E1               	movf	fsr1l,w,c
   571  001632  E1FA               	bnz	copy_data0
   572                           
   573                           ; Initialize objects allocated to COMRAM (28 bytes)
   574                           ; load TBLPTR registers with __pidataCOMRAM
   575  001634  0EEE               	movlw	low __pidataCOMRAM
   576  001636  6EF6               	movwf	tblptrl,c
   577  001638  0E1A               	movlw	high __pidataCOMRAM
   578  00163A  6EF7               	movwf	tblptrh,c
   579  00163C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   580  00163E  6EF8               	movwf	tblptru,c
   581  001640  EE00  F042         	lfsr	0,__pdataCOMRAM
   582  001644  EE10 F01C          	lfsr	1,28
   583  001648                     copy_data1:
   584  001648  0009               	tblrd		*+
   585  00164A  CFF5 FFEE          	movff	tablat,postinc0
   586  00164E  50E5               	movf	postdec1,w,c
   587  001650  50E1               	movf	fsr1l,w,c
   588  001652  E1FA               	bnz	copy_data1
   589                           
   590                           ; Clear objects allocated to BANK1 (184 bytes)
   591  001654  EE01  F000         	lfsr	0,__pbssBANK1
   592  001658  0EB8               	movlw	184
   593  00165A                     clear_0:
   594  00165A  6AEE               	clrf	postinc0,c
   595  00165C  06E8               	decf	wreg,f,c
   596  00165E  E1FD               	bnz	clear_0
   597                           
   598                           ; Clear objects allocated to BANK0 (33 bytes)
   599  001660  EE00  F080         	lfsr	0,__pbssBANK0
   600  001664  0E21               	movlw	33
   601  001666                     clear_1:
   602  001666  6AEE               	clrf	postinc0,c
   603  001668  06E8               	decf	wreg,f,c
   604  00166A  E1FD               	bnz	clear_1
   605                           
   606                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   607  00166C  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   608  00166E  6A77               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   609                           
   610                           ; Clear objects allocated to COMRAM (65 bytes)
   611  001670  EE00  F001         	lfsr	0,__pbssCOMRAM
   612  001674  0E41               	movlw	65
   613  001676                     clear_2:
   614  001676  6AEE               	clrf	postinc0,c
   615  001678  06E8               	decf	wreg,f,c
   616  00167A  E1FD               	bnz	clear_2
   617  00167C                     end_of_initialization:
   618                           	callstack 0
   619  00167C                     __end_of__initialization:
   620                           	callstack 0
   621  00167C  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   622  00167E  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   623  001680  0E00               	movlw	low (__Lmediumconst shr (0+16))
   624  001682  6EF8               	movwf	tblptru,c
   625  001684  0100               	movlb	0
   626  001686  EFCE  F00A         	goto	_main	;jump to C main() function
   627                           
   628                           	psect	bitbssCOMRAM
   629  0003B8                     __pbitbssCOMRAM:
   630                           	callstack 0
   631  0003B8                     _Krebut:
   632                           	callstack 0
   633  0003B8                     	ds	1
   634  0003B9                     _jugantSIO:
   635                           	callstack 0
   636  0003B9                     	ds	1
   637  0003BA                     _jugantJoc:
   638                           	callstack 0
   639  0003BA                     	ds	1
   640  0003BB                     _tempsAcabat:
   641                           	callstack 0
   642  0003BB                     	ds	1
   643  0003BC                     _nouSegon:
   644                           	callstack 0
   645  0003BC                     	ds	1
   646  0003BD                     _jugant:
   647                           	callstack 0
   648  0003BD                     	ds	1
   649  0003BE                     _cap2:
   650                           	callstack 0
   651  0003BE                     	ds	1
   652  0003BF                     _cap1:
   653                           	callstack 0
   654  0003BF                     	ds	1
   655  0003C0                     _newString:
   656                           	callstack 0
   657  0003C0                     	ds	1
   658  0003C1                     _ferMenu:
   659                           	callstack 0
   660  0003C1                     	ds	1
   661  0003C2                     _reproduir:
   662                           	callstack 0
   663  0003C2                     	ds	1
   664  0003C3                     _do_register:
   665                           	callstack 0
   666  0003C3                     	ds	1
   667  0003C4                     _do_check_exists:
   668                           	callstack 0
   669  0003C4                     	ds	1
   670  0003C5                     _loginNOTRegister:
   671                           	callstack 0
   672  0003C5                     	ds	1
   673  0003C6                     _setSMSon:
   674                           	callstack 0
   675  0003C6                     	ds	1
   676  0003C7                     _nou_s:
   677                           	callstack 0
   678  0003C7                     	ds	1
   679                           
   680                           	psect	bssCOMRAM
   681  000001                     __pbssCOMRAM:
   682                           	callstack 0
   683  000001                     _userPtr:
   684                           	callstack 0
   685  000001                     	ds	2
   686  000003                     _h_Tics:
   687                           	callstack 0
   688  000003                     	ds	2
   689  000005                     _s_ptr:
   690                           	callstack 0
   691  000005                     	ds	2
   692  000007                     motorSIO@state:
   693                           	callstack 0
   694  000007                     	ds	1
   695  000008                     _timerSIO:
   696                           	callstack 0
   697  000008                     	ds	1
   698  000009                     motorJoc@state:
   699                           	callstack 0
   700  000009                     	ds	1
   701  00000A                     _direccioJoc:
   702                           	callstack 0
   703  00000A                     	ds	1
   704  00000B                     motorHora@state:
   705                           	callstack 0
   706  00000B                     	ds	1
   707  00000C                     _segons:
   708                           	callstack 0
   709  00000C                     	ds	1
   710  00000D                     _timerHora:
   711                           	callstack 0
   712  00000D                     	ds	1
   713  00000E                     JoystickMotor@state:
   714                           	callstack 0
   715  00000E                     	ds	1
   716  00000F                     _ultimaTeclaAD:
   717                           	callstack 0
   718  00000F                     	ds	1
   719  000010                     GLCDMotor@length2:
   720                           	callstack 0
   721  000010                     	ds	1
   722  000011                     GLCDMotor@length1:
   723                           	callstack 0
   724  000011                     	ds	1
   725  000012                     GLCDMotor@k2:
   726                           	callstack 0
   727  000012                     	ds	1
   728  000013                     GLCDMotor@k1:
   729                           	callstack 0
   730  000013                     	ds	1
   731  000014                     GLCDMotor@min2:
   732                           	callstack 0
   733  000014                     	ds	1
   734  000015                     GLCDMotor@min1:
   735                           	callstack 0
   736  000015                     	ds	1
   737  000016                     GLCDMotor@j:
   738                           	callstack 0
   739  000016                     	ds	1
   740  000017                     GLCDMotor@state:
   741                           	callstack 0
   742  000017                     	ds	1
   743  000018                     _menuDaltGLCD:
   744                           	callstack 0
   745  000018                     	ds	1
   746  000019                     _timerGLCD:
   747                           	callstack 0
   748  000019                     	ds	1
   749  00001A                     motorAltaveu@state:
   750                           	callstack 0
   751  00001A                     	ds	1
   752  00001B                     _copsNota:
   753                           	callstack 0
   754  00001B                     	ds	1
   755  00001C                     _timerAltaveu:
   756                           	callstack 0
   757  00001C                     	ds	1
   758  00001D                     _nota:
   759                           	callstack 0
   760  00001D                     	ds	1
   761  00001E                     UmotorUsers@state:
   762                           	callstack 0
   763  00001E                     	ds	1
   764  00001F                     _i:
   765                           	callstack 0
   766  00001F                     	ds	1
   767  000020                     _indexNextUserStruct:
   768                           	callstack 0
   769  000020                     	ds	1
   770  000021                     _indexNextUser:
   771                           	callstack 0
   772  000021                     	ds	1
   773  000022                     _numUsuaris:
   774                           	callstack 0
   775  000022                     	ds	1
   776  000023                     menu@state:
   777                           	callstack 0
   778  000023                     	ds	1
   779  000024                     _pos:
   780                           	callstack 0
   781  000024                     	ds	1
   782  000025                     _indexUsuari:
   783                           	callstack 0
   784  000025                     	ds	1
   785  000026                     _menuDalt:
   786                           	callstack 0
   787  000026                     	ds	1
   788  000027                     _timerMenu:
   789                           	callstack 0
   790  000027                     	ds	1
   791  000028                     _tmp:
   792                           	callstack 0
   793  000028                     	ds	1
   794  000029                     _counter:
   795                           	callstack 0
   796  000029                     	ds	1
   797  00002A                     TeTeclat@files:
   798                           	callstack 0
   799  00002A                     	ds	1
   800  00002B                     TeTeclat@cols:
   801                           	callstack 0
   802  00002B                     	ds	1
   803  00002C                     TeTeclat@state:
   804                           	callstack 0
   805  00002C                     	ds	1
   806  00002D                     _tiTeclat:
   807                           	callstack 0
   808  00002D                     	ds	1
   809  00002E                     SMotor@state:
   810                           	callstack 0
   811  00002E                     	ds	1
   812  00002F                     _zeroTecla:
   813                           	callstack 0
   814  00002F                     	ds	1
   815  000030                     _sumaPulsacions:
   816                           	callstack 0
   817  000030                     	ds	1
   818  000031                     _Timer:
   819                           	callstack 0
   820  000031                     	ds	1
   821  000032                     _ColumnAct:
   822                           	callstack 0
   823  000032                     	ds	1
   824  000033                     _RowAct:
   825                           	callstack 0
   826  000033                     	ds	1
   827  000034                     _Rows:
   828                           	callstack 0
   829  000034                     	ds	1
   830  000035                     _tmpUsername:
   831                           	callstack 0
   832  000035                     	ds	9
   833  00003E                     _horaTmp:
   834                           	callstack 0
   835  00003E                     	ds	4
   836                           
   837                           	psect	dataCOMRAM
   838  000042                     __pdataCOMRAM:
   839                           	callstack 0
   840  000042                     _arrayZero:
   841                           	callstack 0
   842  000042                     	ds	3
   843  000045                     _convertir:
   844                           	callstack 0
   845  000045                     	ds	1
   846  000046                     _novaTeclaSIO:
   847                           	callstack 0
   848  000046                     	ds	1
   849  000047                     _direccioSIO:
   850                           	callstack 0
   851  000047                     	ds	1
   852  000048                     _usuariActualSIO:
   853                           	callstack 0
   854  000048                     	ds	1
   855  000049                     _novaTeclaJOC:
   856                           	callstack 0
   857  000049                     	ds	1
   858  00004A                     _usuariJoc:
   859                           	callstack 0
   860  00004A                     	ds	1
   861  00004B                     GLCDMotor@max2:
   862                           	callstack 0
   863  00004B                     	ds	1
   864  00004C                     GLCDMotor@max1:
   865                           	callstack 0
   866  00004C                     	ds	1
   867  00004D                     _usuariLoguejat:
   868                           	callstack 0
   869  00004D                     	ds	1
   870  00004E                     _novaDireccio:
   871                           	callstack 0
   872  00004E                     	ds	1
   873  00004F                     _novaLletra:
   874                           	callstack 0
   875  00004F                     	ds	1
   876  000050                     _NovaTecla:
   877                           	callstack 0
   878  000050                     	ds	1
   879  000051                     _ultimaTecla:
   880                           	callstack 0
   881  000051                     	ds	1
   882  000052                     _timerSMS:
   883                           	callstack 0
   884  000052                     	ds	1
   885  000053                     _novaTecla:
   886                           	callstack 0
   887  000053                     	ds	1
   888  000054                     _lletraASCII:
   889                           	callstack 0
   890  000054                     	ds	1
   891  000055                     _hora:
   892                           	callstack 0
   893  000055                     	ds	6
   894  00005B                     _stringScore:
   895                           	callstack 0
   896  00005B                     	ds	3
   897                           
   898                           	psect	bssBANK0
   899  000080                     __pbssBANK0:
   900                           	callstack 0
   901  000080                     _s_Timers:
   902                           	callstack 0
   903  000080                     	ds	24
   904  000098                     _tmpPassword:
   905                           	callstack 0
   906  000098                     	ds	9
   907                           
   908                           	psect	dataBANK0
   909  0000A1                     __pdataBANK0:
   910                           	callstack 0
   911  0000A1                     _lletraInici:
   912                           	callstack 0
   913  0000A1                     	ds	9
   914  0000AA                     _teclaPremuda:
   915                           	callstack 0
   916  0000AA                     	ds	12
   917                           
   918                           	psect	bssBANK1
   919  000100                     __pbssBANK1:
   920                           	callstack 0
   921  000100                     _usuaris:
   922                           	callstack 0
   923  000100                     	ds	184
   924                           
   925                           	psect	cstackCOMRAM
   926  00005E                     __pcstackCOMRAM:
   927                           	callstack 0
   928  00005E                     
   929                           ; 1 bytes @ 0x0
   930  00005E                     	ds	1
   931  00005F                     ??_high_rsi:
   932                           
   933                           ; 1 bytes @ 0x1
   934  00005F                     	ds	4
   935  000063                     ??_EscriuPrimeraOrdre:
   936  000063                     ??_Uinit:
   937  000063                     ??_CantaPartAlta:
   938  000063                     ??_CantaPartBaixa:
   939  000063                     ?_TiGetTics:
   940                           	callstack 0
   941  000063                     ?_UgetUserName:
   942                           	callstack 0
   943  000063                     SsetNovaTecla@tecla:
   944                           	callstack 0
   945  000063                     TiResetTics@Handle:
   946                           	callstack 0
   947  000063                     MsetNovaTecla@tecla:
   948                           	callstack 0
   949  000063                     MNovaLletra@lletra:
   950                           	callstack 0
   951  000063                     MNouJoystick@posicio:
   952                           	callstack 0
   953  000063                     UenviaChar@pos:
   954                           	callstack 0
   955  000063                     UenviaPas@pos:
   956                           	callstack 0
   957  000063                     escriureCharEEPROM@pos:
   958                           	callstack 0
   959  000063                     compareStrings@a:
   960                           	callstack 0
   961  000063                     escriureEEPROM@caca:
   962                           	callstack 0
   963  000063                     GLCDMostraMenu@num:
   964                           	callstack 0
   965  000063                     HActualitzaHora@nova:
   966                           	callstack 0
   967  000063                     JJuguem@usuari:
   968                           	callstack 0
   969  000063                     JnovaTecla@tecla:
   970                           	callstack 0
   971  000063                     JnovaDireccio@dir:
   972                           	callstack 0
   973  000063                     conversorJoystick@direc:
   974                           	callstack 0
   975  000063                     SIONovaDireccio@num:
   976                           	callstack 0
   977  000063                     SIOStartGame@usuari:
   978                           	callstack 0
   979  000063                     SIONovaTecla@tecla:
   980                           	callstack 0
   981  000063                     CToAConverteix@numero:
   982                           	callstack 0
   983                           
   984                           ; 1 bytes @ 0x5
   985  000063                     	ds	1
   986  000064                     ??_JoystickMotor:
   987  000064                     CantaPartAlta@c:
   988                           	callstack 0
   989  000064                     CantaPartBaixa@c:
   990                           	callstack 0
   991  000064                     EscriuPrimeraOrdre@ordre:
   992                           	callstack 0
   993  000064                     UenviaChar@c:
   994                           	callstack 0
   995  000064                     UenviaPas@c:
   996                           	callstack 0
   997  000064                     escriureCharEEPROM@c:
   998                           	callstack 0
   999  000064                     compareStrings@b:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x6
  1003  000064                     	ds	1
  1004  000065                     ??_TiGetTics:
  1005  000065                     CantaIR@IR:
  1006                           	callstack 0
  1007  000065                     CantaData@Data:
  1008                           	callstack 0
  1009  000065                     UgetUserName@quin:
  1010                           	callstack 0
  1011  000065                     Uinit@i:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x7
  1015  000065                     	ds	1
  1016  000066                     ??_compareStrings:
  1017  000066                     Uinit@j:
  1018                           	callstack 0
  1019  000066                     LcNewString@new_s:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x8
  1023  000066                     	ds	1
  1024  000067                     TiGetTics@Handle:
  1025                           	callstack 0
  1026  000067                     Uinit@j_1172:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x9
  1030  000067                     	ds	1
  1031  000068                     ??_UmotorUsers:
  1032  000068                     TiGetTics@actual:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0xA
  1036  000068                     	ds	2
  1037  00006A                     ??_SMotor:
  1038  00006A                     ??_motorHora:
  1039  00006A                     ??_motorAltaveu:
  1040  00006A                     ??_TeTeclat:
  1041  00006A                     WaitForBusy@Busy:
  1042                           	callstack 0
  1043  00006A                     Espera@ms:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0xC
  1047  00006A                     	ds	1
  1048  00006B                     LcGotoXY@Row:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0xD
  1052  00006B                     	ds	1
  1053  00006C                     ??_Espera:
  1054  00006C                     LcGotoXY@Fisics:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0xE
  1058  00006C                     	ds	1
  1059  00006D                     Espera@Timer:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0xF
  1063  00006D                     	ds	1
  1064  00006E                     LcInit@columns:
  1065                           	callstack 0
  1066  00006E                     _LcGotoXY$336:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x10
  1070  00006E                     	ds	1
  1071  00006F                     LcInit@rows:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x11
  1075  00006F                     	ds	1
  1076  000070                     LcGotoXY@Column:
  1077                           	callstack 0
  1078  000070                     LcInit@i:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x12
  1082  000070                     	ds	1
  1083  000071                     ??_motorJoc:
  1084  000071                     LcPutChar@c:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x13
  1088  000071                     	ds	1
  1089  000072                     ??_motorSIO:
  1090  000072                     ??_menu:
  1091  000072                     ??_GLCDMotor:
  1092  000072                     
  1093                           ; 1 bytes @ 0x14
  1094  000072                     	ds	5
  1095  000077                     
  1096                           ; 1 bytes @ 0x19
  1097 ;;
  1098 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1099 ;;
  1100 ;; *************** function _main *****************
  1101 ;; Defined at:
  1102 ;;		line 76 in file "main.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1
  1116 ;;      Params:         0       0       0
  1117 ;;      Locals:         0       0       0
  1118 ;;      Temps:          0       0       0
  1119 ;;      Totals:         0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels required when called: 7
  1122 ;; This function calls:
  1123 ;;		_CtoA
  1124 ;;		_GLCDInit
  1125 ;;		_GLCDMotor
  1126 ;;		_JoystickInit
  1127 ;;		_JoystickMotor
  1128 ;;		_LcInit
  1129 ;;		_LcLCD
  1130 ;;		_Minit
  1131 ;;		_SMotor
  1132 ;;		_Sinit
  1133 ;;		_TeInit
  1134 ;;		_TeTeclat
  1135 ;;		_TiInitTimer
  1136 ;;		_Uinit
  1137 ;;		_UmotorUsers
  1138 ;;		_escriure2usuarisStruct
  1139 ;;		_escriureEEPROM
  1140 ;;		_initAltaveu
  1141 ;;		_initHora
  1142 ;;		_initSIO
  1143 ;;		_init_eusart
  1144 ;;		_init_ports
  1145 ;;		_menu
  1146 ;;		_motorAltaveu
  1147 ;;		_motorHora
  1148 ;;		_motorJoc
  1149 ;;		_motorSIO
  1150 ;; This function is called by:
  1151 ;;		Startup code after reset
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text0
  1156  00159C                     __ptext0:
  1157                           	callstack 0
  1158  00159C                     _main:
  1159                           	callstack 24
  1160                           
  1161                           ;main.c: 77:     init_ports();
  1162                           
  1163                           ;incstack = 0
  1164  00159C  EC68  F00D         	call	_init_ports	;wreg free
  1165                           
  1166                           ;main.c: 78:     escriureEEPROM();
  1167  0015A0  ECD5  F00C         	call	_escriureEEPROM	;wreg free
  1168                           
  1169                           ;main.c: 79:     init_eusart();
  1170  0015A4  ECA1  F00D         	call	_init_eusart	;wreg free
  1171                           
  1172                           ;main.c: 80:     TiInitTimer();
  1173  0015A8  ECE9  F00C         	call	_TiInitTimer	;wreg free
  1174                           
  1175                           ;main.c: 81:     TeInit();
  1176  0015AC  EC3A  F00E         	call	_TeInit	;wreg free
  1177                           
  1178                           ;main.c: 82:     Sinit();
  1179  0015B0  EC3E  F00E         	call	_Sinit	;wreg free
  1180                           
  1181                           ;main.c: 83:     SMotor();
  1182  0015B4  EC94  F006         	call	_SMotor	;wreg free
  1183                           
  1184                           ;main.c: 84:     Uinit();
  1185  0015B8  ECB8  F009         	call	_Uinit	;wreg free
  1186                           
  1187                           ;main.c: 85:     initAltaveu();
  1188  0015BC  EC2E  F00E         	call	_initAltaveu	;wreg free
  1189                           
  1190                           ;main.c: 86:     GLCDInit();
  1191  0015C0  EC4E  F00E         	call	_GLCDInit	;wreg free
  1192                           
  1193                           ;main.c: 87:     JoystickInit();
  1194  0015C4  ECC1  F00D         	call	_JoystickInit	;wreg free
  1195                           
  1196                           ;main.c: 88:     initHora();
  1197  0015C8  EC2A  F00E         	call	_initHora	;wreg free
  1198                           
  1199                           ;main.c: 89:     initSIO();
  1200  0015CC  EC26  F00E         	call	_initSIO	;wreg free
  1201                           
  1202                           ;main.c: 91:     LcInit(2,16);
  1203  0015D0  0E10               	movlw	16
  1204  0015D2  6E6E               	movwf	LcInit@columns^0,c
  1205  0015D4  0E02               	movlw	2
  1206  0015D6  EC05  F009         	call	_LcInit
  1207                           
  1208                           ;main.c: 92:     Minit();
  1209  0015DA  EC46  F00E         	call	_Minit	;wreg free
  1210                           
  1211                           ;main.c: 95:     escriure2usuarisStruct();
  1212  0015DE  ECA9  F00C         	call	_escriure2usuarisStruct	;wreg free
  1213  0015E2                     l5772:
  1214                           
  1215                           ;main.c: 98:         motorJoc();
  1216  0015E2  EC64  F009         	call	_motorJoc	;wreg free
  1217                           
  1218                           ;main.c: 99:         motorSIO();
  1219  0015E6  ECA8  F005         	call	_motorSIO	;wreg free
  1220                           
  1221                           ;main.c: 100:         motorHora();
  1222  0015EA  EC4E  F00A         	call	_motorHora	;wreg free
  1223                           
  1224                           ;main.c: 101:         JoystickMotor();
  1225  0015EE  EC9A  F008         	call	_JoystickMotor	;wreg free
  1226                           
  1227                           ;main.c: 102:         menu();
  1228  0015F2  EC7B  F001         	call	_menu	;wreg free
  1229                           
  1230                           ;main.c: 103:         CtoA();
  1231  0015F6  EC34  F00D         	call	_CtoA	;wreg free
  1232                           
  1233                           ;main.c: 104:         motorAltaveu();
  1234  0015FA  EC04  F00A         	call	_motorAltaveu	;wreg free
  1235                           
  1236                           ;main.c: 105:         UmotorUsers();
  1237  0015FE  EC6C  F007         	call	_UmotorUsers	;wreg free
  1238                           
  1239                           ;main.c: 106:         GLCDMotor();
  1240  001602  EC5C  F004         	call	_GLCDMotor	;wreg free
  1241                           
  1242                           ;main.c: 107:         TeTeclat();
  1243  001606  EC06  F008         	call	_TeTeclat	;wreg free
  1244                           
  1245                           ;main.c: 108:         SMotor();
  1246  00160A  EC94  F006         	call	_SMotor	;wreg free
  1247                           
  1248                           ;main.c: 109:         LcLCD();
  1249  00160E  ECAB  F00B         	call	_LcLCD	;wreg free
  1250  001612  D7E7               	goto	l5772
  1251  001614                     __end_of_main:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _motorSIO *****************
  1255 ;; Defined at:
  1256 ;;		line 42 in file "SIO.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/1
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1
  1270 ;;      Params:         0       0       0
  1271 ;;      Locals:         0       0       0
  1272 ;;      Temps:          2       0       0
  1273 ;;      Totals:         2       0       0
  1274 ;;Total ram usage:        2 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 6
  1277 ;; This function calls:
  1278 ;;		_CToAConverteix
  1279 ;;		_CToAHaAcabat
  1280 ;;		_CToAobtenir
  1281 ;;		_HGetTime
  1282 ;;		_LcClear
  1283 ;;		_LcGotoXY
  1284 ;;		_LcLliure
  1285 ;;		_LcNewString
  1286 ;;		_LcPutChar
  1287 ;;		_TiGetTics
  1288 ;;		_TiResetTics
  1289 ;;		_UgetUserName
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text1
  1296  000B50                     __ptext1:
  1297                           	callstack 0
  1298  000B50                     _motorSIO:
  1299                           	callstack 24
  1300                           
  1301                           ;SIO.c: 43:     static char state = 0;;SIO.c: 45:  switch(state) {
  1302                           
  1303                           ;incstack = 0
  1304  000B50  D0C0               	goto	l4798
  1305  000B52                     l4682:
  1306                           
  1307                           ;SIO.c: 47:    if (usuariActualSIO > -1) {
  1308  000B52  BE48               	btfsc	_usuariActualSIO^0,7,c
  1309  000B54  0012               	return	
  1310                           
  1311                           ;SIO.c: 48:     userPtr = UgetUserName(usuariActualSIO);
  1312  000B56  5048               	movf	_usuariActualSIO^0,w,c
  1313  000B58  ECB7  F00D         	call	_UgetUserName
  1314  000B5C  C063  F001         	movff	?_UgetUserName,_userPtr
  1315  000B60  C064  F002         	movff	?_UgetUserName+1,_userPtr+1
  1316                           
  1317                           ;SIO.c: 49:     jugantSIO = 1;
  1318  000B64  8277               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1319                           
  1320                           ;SIO.c: 50:     Krebut = 0;
  1321  000B66  9077               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1322                           
  1323                           ;SIO.c: 51:     state = 1;
  1324  000B68  0E01               	movlw	1
  1325  000B6A  6E07               	movwf	motorSIO@state^0,c
  1326  000B6C  0C01               	retlw	1
  1327  000B6E                     l4692:
  1328                           
  1329                           ;SIO.c: 55:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1330  000B6E  D8D1               	call	PL26	;call to abstracted procedure
  1331  000B70  E108               	bnz	l4700
  1332  000B72  A2AC               	btfss	172,1,c	;volatile
  1333  000B74  D006               	goto	l4700
  1334                           
  1335                           ;SIO.c: 56:     TXREG = '\0';
  1336  000B76  6AAD               	clrf	173,c	;volatile
  1337                           
  1338                           ;SIO.c: 57:     novaTeclaSIO = 0;
  1339  000B78  6A46               	clrf	_novaTeclaSIO^0,c
  1340                           
  1341                           ;SIO.c: 58:     LATBbits.LATB3 = 1;
  1342  000B7A  868A               	bsf	138,3,c	;volatile
  1343                           
  1344                           ;SIO.c: 59:     state = 2;
  1345  000B7C  0E02               	movlw	2
  1346  000B7E  6E07               	movwf	motorSIO@state^0,c
  1347                           
  1348                           ;SIO.c: 60:    }
  1349  000B80  0C02               	retlw	2
  1350  000B82                     l4700:
  1351  000B82  D8C7               	call	PL26	;call to abstracted procedure
  1352  000B84  A4D8               	btfss	status,2,c
  1353  000B86  A2AC               	btfss	172,1,c	;volatile
  1354  000B88  0012               	return	
  1355                           
  1356                           ;SIO.c: 62:     TXREG = *userPtr;
  1357  000B8A  D8C3               	call	PL26	;call to abstracted procedure
  1358  000B8C  6EAD               	movwf	173,c	;volatile
  1359                           
  1360                           ;SIO.c: 63:     userPtr++;
  1361  000B8E  4A01               	infsnz	_userPtr^0,f,c
  1362  000B90  2A02               	incf	(_userPtr+1)^0,f,c
  1363  000B92  0012               	return	
  1364  000B94                     l4708:
  1365                           
  1366                           ;SIO.c: 67:    if (RCREG == 'K') {
  1367  000B94  0E4B               	movlw	75
  1368  000B96  18AE               	xorwf	174,w,c
  1369  000B98  A4D8               	btfss	status,2,c
  1370  000B9A  0012               	return	
  1371                           
  1372                           ;SIO.c: 68:     Krebut = 1;
  1373  000B9C  8077               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1374  000B9E                     l4712:
  1375                           
  1376                           ;SIO.c: 69:     state = 3;
  1377  000B9E  0E03               	movlw	3
  1378  000BA0  6E07               	movwf	motorSIO@state^0,c
  1379  000BA2  0C03               	retlw	3
  1380  000BA4                     l4714:
  1381                           
  1382                           ;SIO.c: 73:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1383  000BA4  2847               	incf	_direccioSIO^0,w,c
  1384  000BA6  E006               	bz	l4722
  1385  000BA8  A2AC               	btfss	172,1,c	;volatile
  1386  000BAA  D004               	goto	l4722
  1387                           
  1388                           ;SIO.c: 74:     TXREG = direccioSIO;
  1389  000BAC  C047  FFAD         	movff	_direccioSIO,4013	;volatile
  1390                           
  1391                           ;SIO.c: 75:     direccioSIO = -1;
  1392  000BB0  6847               	setf	_direccioSIO^0,c
  1393  000BB2  D7F5               	goto	l4712
  1394  000BB4                     l4722:
  1395  000BB4  0E30               	movlw	48
  1396  000BB6  6446               	cpfsgt	_novaTeclaSIO^0,c
  1397  000BB8  D009               	goto	l1198
  1398  000BBA  0E3A               	movlw	58
  1399  000BBC  6046               	cpfslt	_novaTeclaSIO^0,c
  1400  000BBE  D006               	goto	l1198
  1401  000BC0  A2AC               	btfss	172,1,c	;volatile
  1402  000BC2  D004               	goto	l1198
  1403                           
  1404                           ;SIO.c: 79:     TXREG = novaTeclaSIO;
  1405  000BC4  C046  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1406                           
  1407                           ;SIO.c: 80:     novaTeclaSIO = 0;
  1408  000BC8  6A46               	clrf	_novaTeclaSIO^0,c
  1409  000BCA  D7E9               	goto	l4712
  1410  000BCC                     l1198:
  1411  000BCC  B277               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1412  000BCE  D002               	goto	u4090
  1413  000BD0  B2AC               	btfsc	172,1,c	;volatile
  1414  000BD2  D002               	goto	u4100
  1415  000BD4                     u4090:
  1416  000BD4  AA9E               	btfss	158,5,c	;volatile
  1417  000BD6  0012               	return	
  1418  000BD8                     u4100:
  1419                           
  1420                           ;SIO.c: 84:     LcClear();
  1421  000BD8  EC46  F00D         	call	_LcClear	;wreg free
  1422                           
  1423                           ;SIO.c: 85:     LcNewString("ERRORS:");
  1424  000BDC  0ED7               	movlw	low STR_8
  1425  000BDE  EC46  F004         	call	PL6	;call to abstracted procedure
  1426  000BE2  ECFE  F00D         	call	_LcNewString	;wreg free
  1427                           
  1428                           ;SIO.c: 86:     TXREG = 'F';
  1429  000BE6  0E46               	movlw	70
  1430  000BE8  6EAD               	movwf	173,c	;volatile
  1431                           
  1432                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1433  000BEA  6A46               	clrf	_novaTeclaSIO^0,c
  1434                           
  1435                           ;SIO.c: 88:     state = 4;
  1436  000BEC  0E04               	movlw	4
  1437  000BEE  6E07               	movwf	motorSIO@state^0,c
  1438  000BF0  0C04               	retlw	4
  1439  000BF2                     l1205:
  1440                           
  1441                           ;SIO.c: 92:    if (PIR1bits.RCIF) {
  1442  000BF2  AA9E               	btfss	158,5,c	;volatile
  1443  000BF4  0012               	return	
  1444                           
  1445                           ;SIO.c: 93:     CToAConverteix(RCREG);
  1446  000BF6  50AE               	movf	174,w,c	;volatile
  1447  000BF8  ECDA  F00D         	call	_CToAConverteix
  1448                           
  1449                           ;SIO.c: 94:     TiResetTics(timerSIO);
  1450  000BFC  5008               	movf	_timerSIO^0,w,c
  1451  000BFE  EC93  F00D         	call	_TiResetTics
  1452  000C02                     l4748:
  1453                           
  1454                           ;SIO.c: 95:     state = 5;
  1455  000C02  0E05               	movlw	5
  1456  000C04  6E07               	movwf	motorSIO@state^0,c
  1457  000C06  0C05               	retlw	5
  1458  000C08                     l4750:
  1459                           
  1460                           ;SIO.c: 99:    if (TiGetTics(timerSIO) > 2490) {
  1461  000C08  5008               	movf	_timerSIO^0,w,c
  1462  000C0A  ECFD  F00C         	call	_TiGetTics
  1463  000C0E  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  1464  000C10  D00F               	goto	l4758
  1465  000C12  0EBB               	movlw	187
  1466  000C14  5C63               	subwf	?_TiGetTics^0,w,c
  1467  000C16  0E09               	movlw	9
  1468  000C18  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  1469  000C1A  E30A               	bnc	l4758
  1470                           
  1471                           ;SIO.c: 100:     LcClear();
  1472  000C1C  EC46  F00D         	call	_LcClear	;wreg free
  1473                           
  1474                           ;SIO.c: 101:     LcNewString("TIME LEFT: ");
  1475  000C20  0EAF               	movlw	low STR_9
  1476  000C22  EC46  F004         	call	PL6	;call to abstracted procedure
  1477  000C26  ECFE  F00D         	call	_LcNewString	;wreg free
  1478                           
  1479                           ;SIO.c: 102:     state = 7;
  1480  000C2A  0E07               	movlw	7
  1481  000C2C  6E07               	movwf	motorSIO@state^0,c
  1482                           
  1483                           ;SIO.c: 103:    }
  1484  000C2E  0C07               	retlw	7
  1485  000C30                     l4758:
  1486  000C30  5008               	movf	_timerSIO^0,w,c
  1487  000C32  ECFD  F00C         	call	_TiGetTics
  1488  000C36  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  1489  000C38  D006               	goto	u4130
  1490  000C3A  0EBA               	movlw	186
  1491  000C3C  5C63               	subwf	?_TiGetTics^0,w,c
  1492  000C3E  0E09               	movlw	9
  1493  000C40  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  1494  000C42  B0D8               	btfsc	status,0,c
  1495  000C44  0012               	return	
  1496  000C46                     u4130:
  1497  000C46  AA9E               	btfss	158,5,c	;volatile
  1498  000C48  0012               	return	
  1499  000C4A  EC04  F00E         	call	_LcLliure	;wreg free
  1500  000C4E  A0D8               	btfss	status,0,c
  1501  000C50  0012               	return	
  1502                           
  1503                           ;SIO.c: 105:     LcGotoXY(0,1);
  1504  000C52  EC51  F004         	call	PL34	;call to abstracted procedure
  1505  000C56  EC8F  F00C         	call	_LcGotoXY
  1506                           
  1507                           ;SIO.c: 106:     LcPutChar(RCREG);
  1508  000C5A  50AE               	movf	174,w,c	;volatile
  1509  000C5C  ECD3  F00B         	call	_LcPutChar
  1510                           
  1511                           ;SIO.c: 107:     state = 6;
  1512  000C60  0E06               	movlw	6
  1513  000C62  6E07               	movwf	motorSIO@state^0,c
  1514  000C64  0C06               	retlw	6
  1515  000C66                     l4768:
  1516                           
  1517                           ;SIO.c: 111:    if (LcLliure()) {
  1518  000C66  EC04  F00E         	call	_LcLliure	;wreg free
  1519  000C6A  A0D8               	btfss	status,0,c
  1520  000C6C  0012               	return	
  1521                           
  1522                           ;SIO.c: 112:     LcNewString(HGetTime());
  1523  000C6E  EC66  F00E         	call	_HGetTime	;wreg free
  1524  000C72  D855               	call	PL46	;call to abstracted procedure
  1525  000C74  ECFE  F00D         	call	_LcNewString	;wreg free
  1526                           
  1527                           ;SIO.c: 113:     state = 8;
  1528  000C78  0E08               	movlw	8
  1529  000C7A  6E07               	movwf	motorSIO@state^0,c
  1530  000C7C  0C08               	retlw	8
  1531  000C7E                     l1213:
  1532                           
  1533                           ;SIO.c: 117:    if (PIR1bits.RCIF) {
  1534  000C7E  AA9E               	btfss	158,5,c	;volatile
  1535  000C80  0012               	return	
  1536                           
  1537                           ;SIO.c: 118:     LcPutChar(RCREG);
  1538  000C82  50AE               	movf	174,w,c	;volatile
  1539  000C84  ECD3  F00B         	call	_LcPutChar
  1540                           
  1541                           ;SIO.c: 119:                 TiResetTics(timerSIO);
  1542  000C88  5008               	movf	_timerSIO^0,w,c
  1543  000C8A  EC93  F00D         	call	_TiResetTics
  1544  000C8E  D7B9               	goto	l4748
  1545  000C90                     l4778:
  1546                           
  1547                           ;SIO.c: 124:    if (LcLliure()) {
  1548  000C90  EC04  F00E         	call	_LcLliure	;wreg free
  1549  000C94  A0D8               	btfss	status,0,c
  1550  000C96  0012               	return	
  1551                           
  1552                           ;SIO.c: 125:     LcGotoXY(0,1);
  1553  000C98  EC51  F004         	call	PL34	;call to abstracted procedure
  1554  000C9C  EC8F  F00C         	call	_LcGotoXY
  1555                           
  1556                           ;SIO.c: 126:     LcNewString("SCORE: ");
  1557  000CA0  0ECF               	movlw	low STR_10
  1558  000CA2  EC46  F004         	call	PL6	;call to abstracted procedure
  1559  000CA6  ECFE  F00D         	call	_LcNewString	;wreg free
  1560                           
  1561                           ;SIO.c: 127:     state = 9;
  1562  000CAA  0E09               	movlw	9
  1563  000CAC  6E07               	movwf	motorSIO@state^0,c
  1564  000CAE  0C09               	retlw	9
  1565  000CB0                     l4786:
  1566                           
  1567                           ;SIO.c: 131:    if (LcLliure() && CToAHaAcabat() == 250) {
  1568  000CB0  EC04  F00E         	call	_LcLliure	;wreg free
  1569  000CB4  A0D8               	btfss	status,0,c
  1570  000CB6  0012               	return	
  1571  000CB8  EC60  F00E         	call	_CToAHaAcabat	;wreg free
  1572  000CBC  0AFA               	xorlw	250
  1573  000CBE  A4D8               	btfss	status,2,c
  1574  000CC0  0012               	return	
  1575                           
  1576                           ;SIO.c: 132:     LcNewString(CToAobtenir());
  1577  000CC2  EC5E  F00E         	call	_CToAobtenir	;wreg free
  1578  000CC6  D82B               	call	PL46	;call to abstracted procedure
  1579  000CC8  ECFE  F00D         	call	_LcNewString	;wreg free
  1580                           
  1581                           ;SIO.c: 133:     usuariActualSIO = -1;
  1582  000CCC  6848               	setf	_usuariActualSIO^0,c
  1583                           
  1584                           ;SIO.c: 134:     state = 0;
  1585  000CCE  6A07               	clrf	motorSIO@state^0,c
  1586  000CD0  0012               	return	
  1587  000CD2                     l4798:
  1588  000CD2  5007               	movf	motorSIO@state^0,w,c
  1589  000CD4  6E72               	movwf	??_motorSIO^0,c
  1590  000CD6  6A73               	clrf	(??_motorSIO+1)^0,c
  1591                           
  1592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1593                           ; Switch size 1, requested type "space"
  1594                           ; Number of cases is 1, Range of values is 0 to 0
  1595                           ; switch strategies available:
  1596                           ; Name         Instructions Cycles
  1597                           ; simple_byte            4     3 (average)
  1598                           ;	Chosen strategy is simple_byte
  1599  000CD8  5073               	movf	(??_motorSIO+1)^0,w,c
  1600  000CDA  A4D8               	btfss	status,2,c
  1601  000CDC  0012               	return	
  1602                           
  1603                           ; Switch size 1, requested type "space"
  1604                           ; Number of cases is 10, Range of values is 0 to 9
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; simple_byte           31    16 (average)
  1608                           ;	Chosen strategy is simple_byte
  1609  000CDE  5072               	movf	??_motorSIO^0,w,c
  1610  000CE0  E101 D737          	bz	l4682
  1611  000CE4  0A01               	xorlw	1	; case 1
  1612  000CE6  E101 D742          	bz	l4692
  1613  000CEA  0A03               	xorlw	3	; case 2
  1614  000CEC  E101 D752          	bz	l4708
  1615  000CF0  0A01               	xorlw	1	; case 3
  1616  000CF2  E101 D757          	bz	l4714
  1617  000CF6  0A07               	xorlw	7	; case 4
  1618  000CF8  E101 D77B          	bz	l1205
  1619  000CFC  0A01               	xorlw	1	; case 5
  1620  000CFE  E084               	bz	l4750
  1621  000D00  0A03               	xorlw	3	; case 6
  1622  000D02  E0BD               	bz	l1213
  1623  000D04  0A01               	xorlw	1	; case 7
  1624  000D06  E0AF               	bz	l4768
  1625  000D08  0A0F               	xorlw	15	; case 8
  1626  000D0A  E0C2               	bz	l4778
  1627  000D0C  0A01               	xorlw	1	; case 9
  1628  000D0E  E0D0               	bz	l4786
  1629  000D10  0012               	return		;funcret
  1630  000D12                     __end_of_motorSIO:
  1631                           	callstack 0
  1632  000D12                     PL26:
  1633                           	callstack 24
  1634  000D12  C001  FFD9         	movff	_userPtr,fsr2l
  1635  000D16  C002  FFDA         	movff	_userPtr+1,fsr2h
  1636  000D1A  50DF               	movf	indf2,w,c
  1637  000D1C  0012               	return	
  1638  000D1E                     __end_ofPL26:
  1639                           	callstack 0
  1640  000D1E                     PL46:
  1641                           	callstack 24
  1642  000D1E  6E72               	movwf	??_motorSIO^0,c
  1643  000D20  C072  F066         	movff	??_motorSIO,LcNewString@new_s
  1644  000D24  6A67               	clrf	(LcNewString@new_s+1)^0,c
  1645  000D26  0012               	return	
  1646  000D28                     __end_ofPL46:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _CToAobtenir *****************
  1650 ;; Defined at:
  1651 ;;		line 7 in file "CtoA.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      PTR unsigned char 
  1658 ;; Registers used:
  1659 ;;		wreg
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/1
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1
  1665 ;;      Params:         2       0       0
  1666 ;;      Locals:         0       0       0
  1667 ;;      Temps:          0       0       0
  1668 ;;      Totals:         2       0       0
  1669 ;;Total ram usage:        2 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 2
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_motorSIO
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text2
  1680  001CBC                     __ptext2:
  1681                           	callstack 0
  1682  001CBC                     _CToAobtenir:
  1683                           	callstack 27
  1684                           
  1685                           ;CtoA.c: 8:     return stringScore;
  1686                           
  1687                           ;incstack = 0
  1688  001CBC  0E5B               	movlw	_stringScore& (0+255)
  1689  001CBE  0012               	return		;funcret
  1690  001CC0                     __end_of_CToAobtenir:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _CToAHaAcabat *****************
  1694 ;; Defined at:
  1695 ;;		line 10 in file "CtoA.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      unsigned char 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/1
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1
  1709 ;;      Params:         0       0       0
  1710 ;;      Locals:         0       0       0
  1711 ;;      Temps:          0       0       0
  1712 ;;      Totals:         0       0       0
  1713 ;;Total ram usage:        0 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 2
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_motorSIO
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text3
  1724  001CC0                     __ptext3:
  1725                           	callstack 0
  1726  001CC0                     _CToAHaAcabat:
  1727                           	callstack 27
  1728                           
  1729                           ;CtoA.c: 11:     return convertir;
  1730                           
  1731                           ;incstack = 0
  1732  001CC0  5045               	movf	_convertir^0,w,c
  1733  001CC2  0012               	return		;funcret
  1734  001CC4                     __end_of_CToAHaAcabat:
  1735                           	callstack 0
  1736                           
  1737 ;; *************** function _CToAConverteix *****************
  1738 ;; Defined at:
  1739 ;;		line 18 in file "CtoA.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  numero          1    wreg     unsigned char 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  numero          1    5[COMRAM] unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/1
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1
  1753 ;;      Params:         0       0       0
  1754 ;;      Locals:         1       0       0
  1755 ;;      Temps:          0       0       0
  1756 ;;      Totals:         1       0       0
  1757 ;;Total ram usage:        1 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 3
  1760 ;; This function calls:
  1761 ;;		_CToAReset
  1762 ;; This function is called by:
  1763 ;;		_motorSIO
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text4
  1768  001BB4                     __ptext4:
  1769                           	callstack 0
  1770  001BB4                     _CToAConverteix:
  1771                           	callstack 26
  1772                           
  1773                           ;incstack = 0
  1774                           ;CToAConverteix@numero stored from wreg
  1775  001BB4  6E63               	movwf	CToAConverteix@numero^0,c
  1776                           
  1777                           ;CtoA.c: 19:     CToAReset();
  1778  001BB6  EC0A  F00E         	call	_CToAReset	;wreg free
  1779                           
  1780                           ;CtoA.c: 20:     convertir = numero;
  1781  001BBA  C063  F045         	movff	CToAConverteix@numero,_convertir
  1782  001BBE  0012               	return		;funcret
  1783  001BC0                     __end_of_CToAConverteix:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _CToAReset *****************
  1787 ;; Defined at:
  1788 ;;		line 14 in file "CtoA.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/1
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1
  1802 ;;      Params:         0       0       0
  1803 ;;      Locals:         0       0       0
  1804 ;;      Temps:          0       0       0
  1805 ;;      Totals:         0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 2
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_CToAConverteix
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text5
  1817  001C14                     __ptext5:
  1818                           	callstack 0
  1819  001C14                     _CToAReset:
  1820                           	callstack 26
  1821                           
  1822                           ;CtoA.c: 15:     stringScore[0] = '0';
  1823                           
  1824                           ;incstack = 0
  1825  001C14  0E30               	movlw	48
  1826  001C16  6E5B               	movwf	_stringScore^0,c
  1827                           
  1828                           ;CtoA.c: 16:     stringScore[1] = '0';
  1829  001C18  6E5C               	movwf	(_stringScore+1)^0,c
  1830  001C1A  0C30               	retlw	48	;funcret
  1831  001C1C                     __end_of_CToAReset:
  1832                           	callstack 0
  1833                           
  1834 ;; *************** function _motorJoc *****************
  1835 ;; Defined at:
  1836 ;;		line 48 in file "Joc.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/1
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1
  1850 ;;      Params:         0       0       0
  1851 ;;      Locals:         0       0       0
  1852 ;;      Temps:          2       0       0
  1853 ;;      Totals:         2       0       0
  1854 ;;Total ram usage:        2 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; Hardware stack levels required when called: 5
  1857 ;; This function calls:
  1858 ;;		_HClearNouSegon
  1859 ;;		_HGetTime
  1860 ;;		_HJugant
  1861 ;;		_HNouSegon
  1862 ;;		_HnoJugant
  1863 ;;		_LcGotoXY
  1864 ;;		_LcLliure
  1865 ;;		_LcNewString
  1866 ;;		_SIONovaDireccio
  1867 ;;		_SIONovaTecla
  1868 ;;		_SIOStartGame
  1869 ;;		_SIOcheckKrebut
  1870 ;;		_SIOendGame
  1871 ;;		_conversorJoystick
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text6
  1878  0012C8                     __ptext6:
  1879                           	callstack 0
  1880  0012C8                     _motorJoc:
  1881                           	callstack 25
  1882                           
  1883                           ;Joc.c: 49:     static char state = 0;;Joc.c: 51:  switch(state) {
  1884                           
  1885                           ;incstack = 0
  1886  0012C8  D046               	goto	l4674
  1887  0012CA                     l4622:
  1888                           
  1889                           ;Joc.c: 53:    if (usuariJoc != -1) {
  1890  0012CA  284A               	incf	_usuariJoc^0,w,c
  1891  0012CC  B4D8               	btfsc	status,2,c
  1892  0012CE  0012               	return	
  1893                           
  1894                           ;Joc.c: 54:     SIOStartGame(usuariJoc);
  1895  0012D0  504A               	movf	_usuariJoc^0,w,c
  1896  0012D2  EC0E  F00E         	call	_SIOStartGame
  1897                           
  1898                           ;Joc.c: 55:     jugantJoc = 1;
  1899  0012D6  8477               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1900                           
  1901                           ;Joc.c: 56:     state = 2;
  1902  0012D8  0E02               	movlw	2
  1903  0012DA  6E09               	movwf	motorJoc@state^0,c
  1904                           
  1905                           ;Joc.c: 58:   break;
  1906                           
  1907                           ;Joc.c: 57:    }
  1908  0012DC  0C02               	retlw	2
  1909  0012DE                     l1093:
  1910                           
  1911                           ;Joc.c: 60:    if (!jugantJoc) {
  1912  0012DE  B477               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1913  0012E0  D008               	goto	l4638
  1914                           
  1915                           ;Joc.c: 61:     usuariJoc = -1;
  1916  0012E2  684A               	setf	_usuariJoc^0,c
  1917                           
  1918                           ;Joc.c: 62:     HnoJugant();
  1919  0012E4  EC64  F00E         	call	_HnoJugant	;wreg free
  1920                           
  1921                           ;Joc.c: 63:     SIOendGame();
  1922  0012E8  EC62  F00E         	call	_SIOendGame	;wreg free
  1923                           
  1924                           ;Joc.c: 64:     LATBbits.LATB3 = 0;
  1925  0012EC  968A               	bcf	138,3,c	;volatile
  1926                           
  1927                           ;Joc.c: 65:     state = 0;
  1928  0012EE  6A09               	clrf	motorJoc@state^0,c
  1929                           
  1930                           ;Joc.c: 66:    }
  1931  0012F0  0012               	return	
  1932  0012F2                     l4638:
  1933  0012F2  BE0A               	btfsc	_direccioJoc^0,7,c
  1934  0012F4  D009               	goto	l4646
  1935                           
  1936                           ;Joc.c: 68:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1937  0012F6  500A               	movf	_direccioJoc^0,w,c
  1938  0012F8  EC10  F00D         	call	_conversorJoystick
  1939  0012FC  EC16  F00E         	call	_SIONovaDireccio
  1940                           
  1941                           ;Joc.c: 69:     direccioJoc = -1;
  1942  001300  680A               	setf	_direccioJoc^0,c
  1943  001302                     l4644:
  1944                           
  1945                           ;Joc.c: 70:     state = 1;
  1946  001302  0E01               	movlw	1
  1947  001304  6E09               	movwf	motorJoc@state^0,c
  1948                           
  1949                           ;Joc.c: 71:    }
  1950  001306  0C01               	retlw	1
  1951  001308                     l4646:
  1952  001308  ECE6  F00D         	call	_HNouSegon	;wreg free
  1953  00130C  E312               	bnc	l4658
  1954  00130E  EC04  F00E         	call	_LcLliure	;wreg free
  1955  001312  E30F               	bnc	l4658
  1956                           
  1957                           ;Joc.c: 73:     HClearNouSegon();
  1958  001314  EC68  F00E         	call	_HClearNouSegon	;wreg free
  1959                           
  1960                           ;Joc.c: 74:     LcGotoXY(0,1);
  1961  001318  EC51  F004         	call	PL34	;call to abstracted procedure
  1962  00131C  EC8F  F00C         	call	_LcGotoXY
  1963                           
  1964                           ;Joc.c: 75:     LcNewString(HGetTime());
  1965  001320  EC66  F00E         	call	_HGetTime	;wreg free
  1966  001324  6E71               	movwf	??_motorJoc^0,c
  1967  001326  C071  F066         	movff	??_motorJoc,LcNewString@new_s
  1968  00132A  6A67               	clrf	(LcNewString@new_s+1)^0,c
  1969  00132C  ECFE  F00D         	call	_LcNewString	;wreg free
  1970  001330  D7E8               	goto	l4644
  1971  001332                     l4658:
  1972  001332  5049               	movf	_novaTeclaJOC^0,w,c
  1973  001334  0A80               	xorlw	128
  1974  001336  0F7F               	addlw	-129
  1975  001338  A0D8               	btfss	status,0,c
  1976  00133A  0012               	return	
  1977                           
  1978                           ;Joc.c: 79:     SIONovaTecla(novaTeclaJOC+48);
  1979  00133C  5049               	movf	_novaTeclaJOC^0,w,c
  1980  00133E  0F30               	addlw	48
  1981  001340  EC12  F00E         	call	_SIONovaTecla
  1982                           
  1983                           ;Joc.c: 80:     novaTeclaJOC = -1;
  1984  001344  6849               	setf	_novaTeclaJOC^0,c
  1985  001346  D7DD               	goto	l4644
  1986  001348                     l4666:
  1987                           
  1988                           ;Joc.c: 85:    if (SIOcheckKrebut()) {
  1989  001348  ECE0  F00D         	call	_SIOcheckKrebut	;wreg free
  1990  00134C  A0D8               	btfss	status,0,c
  1991  00134E  0012               	return	
  1992                           
  1993                           ;Joc.c: 86:     HJugant();
  1994  001350  EC52  F00E         	call	_HJugant	;wreg free
  1995  001354  D7D6               	goto	l4644
  1996  001356                     l4674:
  1997  001356  5009               	movf	motorJoc@state^0,w,c
  1998  001358  6E71               	movwf	??_motorJoc^0,c
  1999  00135A  6A72               	clrf	(??_motorJoc+1)^0,c
  2000                           
  2001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2002                           ; Switch size 1, requested type "space"
  2003                           ; Number of cases is 1, Range of values is 0 to 0
  2004                           ; switch strategies available:
  2005                           ; Name         Instructions Cycles
  2006                           ; simple_byte            4     3 (average)
  2007                           ;	Chosen strategy is simple_byte
  2008  00135C  5072               	movf	(??_motorJoc+1)^0,w,c
  2009  00135E  A4D8               	btfss	status,2,c
  2010  001360  0012               	return	
  2011                           
  2012                           ; Switch size 1, requested type "space"
  2013                           ; Number of cases is 3, Range of values is 0 to 2
  2014                           ; switch strategies available:
  2015                           ; Name         Instructions Cycles
  2016                           ; simple_byte           10     6 (average)
  2017                           ;	Chosen strategy is simple_byte
  2018  001362  5071               	movf	??_motorJoc^0,w,c
  2019  001364  E0B2               	bz	l4622
  2020  001366  0A01               	xorlw	1	; case 1
  2021  001368  E0BA               	bz	l1093
  2022  00136A  0A03               	xorlw	3	; case 2
  2023  00136C  E0ED               	bz	l4666
  2024  00136E  0012               	return		;funcret
  2025  001370                     __end_of_motorJoc:
  2026                           	callstack 0
  2027                           
  2028 ;; *************** function _conversorJoystick *****************
  2029 ;; Defined at:
  2030 ;;		line 31 in file "Joc.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  direc           1    wreg     unsigned char 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  direc           1    5[COMRAM] unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      unsigned char 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/1
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1
  2044 ;;      Params:         0       0       0
  2045 ;;      Locals:         1       0       0
  2046 ;;      Temps:          0       0       0
  2047 ;;      Totals:         1       0       0
  2048 ;;Total ram usage:        1 bytes
  2049 ;; Hardware stack levels used: 1
  2050 ;; Hardware stack levels required when called: 2
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_motorJoc
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text7
  2059  001A20                     __ptext7:
  2060                           	callstack 0
  2061  001A20                     _conversorJoystick:
  2062                           	callstack 27
  2063                           
  2064                           ;incstack = 0
  2065                           ;conversorJoystick@direc stored from wreg
  2066  001A20  6E63               	movwf	conversorJoystick@direc^0,c
  2067                           
  2068                           ;Joc.c: 33:     if (direc==2) {
  2069  001A22  0E02               	movlw	2
  2070  001A24  1863               	xorwf	conversorJoystick@direc^0,w,c
  2071  001A26  E101               	bnz	l2222
  2072                           
  2073                           ;Joc.c: 34:         return 'W';
  2074  001A28  0C57               	retlw	87
  2075  001A2A                     l2222:
  2076                           
  2077                           ;Joc.c: 36:     if (direc==6) {
  2078  001A2A  0E06               	movlw	6
  2079  001A2C  1863               	xorwf	conversorJoystick@direc^0,w,c
  2080  001A2E  E101               	bnz	l2228
  2081                           
  2082                           ;Joc.c: 37:         return 'D';
  2083  001A30  0C44               	retlw	68
  2084  001A32                     l2228:
  2085                           
  2086                           ;Joc.c: 39:     if (direc==8) {
  2087  001A32  0E08               	movlw	8
  2088  001A34  1863               	xorwf	conversorJoystick@direc^0,w,c
  2089  001A36  E101               	bnz	l2234
  2090                           
  2091                           ;Joc.c: 40:         return 'S';
  2092  001A38  0C53               	retlw	83
  2093  001A3A                     l2234:
  2094                           
  2095                           ;Joc.c: 42:     if (direc==4) {
  2096  001A3A  0E04               	movlw	4
  2097  001A3C  1863               	xorwf	conversorJoystick@direc^0,w,c
  2098  001A3E  E101               	bnz	l2240
  2099                           
  2100                           ;Joc.c: 43:         return 'A';
  2101  001A40  0C41               	retlw	65
  2102  001A42                     l2240:
  2103                           
  2104                           ;Joc.c: 45:     return 0;
  2105  001A42  0C00               	retlw	0	;funcret
  2106  001A44                     __end_of_conversorJoystick:
  2107                           	callstack 0
  2108                           
  2109 ;; *************** function _SIOendGame *****************
  2110 ;; Defined at:
  2111 ;;		line 22 in file "SIO.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;		None
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;		None
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		None
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/1
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1
  2125 ;;      Params:         0       0       0
  2126 ;;      Locals:         0       0       0
  2127 ;;      Temps:          0       0       0
  2128 ;;      Totals:         0       0       0
  2129 ;;Total ram usage:        0 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; Hardware stack levels required when called: 2
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_motorJoc
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text8
  2140  001CC4                     __ptext8:
  2141                           	callstack 0
  2142  001CC4                     _SIOendGame:
  2143                           	callstack 27
  2144                           
  2145                           ;SIO.c: 23:     jugantSIO = 0;
  2146                           
  2147                           ;incstack = 0
  2148  001CC4  9277               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2149  001CC6  0012               	return		;funcret
  2150  001CC8                     __end_of_SIOendGame:
  2151                           	callstack 0
  2152                           
  2153 ;; *************** function _SIOcheckKrebut *****************
  2154 ;; Defined at:
  2155 ;;		line 25 in file "SIO.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;		None               void
  2162 ;; Registers used:
  2163 ;;		status,0
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/1
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1
  2169 ;;      Params:         0       0       0
  2170 ;;      Locals:         0       0       0
  2171 ;;      Temps:          0       0       0
  2172 ;;      Totals:         0       0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 2
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_motorJoc
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text9
  2184  001BC0                     __ptext9:
  2185                           	callstack 0
  2186  001BC0                     _SIOcheckKrebut:
  2187                           	callstack 27
  2188                           
  2189                           ;SIO.c: 26:     return Krebut;
  2190                           
  2191                           ;incstack = 0
  2192  001BC0  B077               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2193  001BC2  D002               	goto	l2256
  2194  001BC4  90D8               	bcf	status,0,c
  2195  001BC6  0012               	return	
  2196  001BC8                     l2256:
  2197  001BC8  80D8               	bsf	status,0,c
  2198  001BCA  0012               	return		;funcret
  2199  001BCC                     __end_of_SIOcheckKrebut:
  2200                           	callstack 0
  2201                           
  2202 ;; *************** function _SIOStartGame *****************
  2203 ;; Defined at:
  2204 ;;		line 32 in file "SIO.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  usuari          1    wreg     unsigned char 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  usuari          1    5[COMRAM] unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/1
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1
  2218 ;;      Params:         0       0       0
  2219 ;;      Locals:         1       0       0
  2220 ;;      Temps:          0       0       0
  2221 ;;      Totals:         1       0       0
  2222 ;;Total ram usage:        1 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 2
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_motorJoc
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text10
  2233  001C1C                     __ptext10:
  2234                           	callstack 0
  2235  001C1C                     _SIOStartGame:
  2236                           	callstack 27
  2237                           
  2238                           ;incstack = 0
  2239                           ;SIOStartGame@usuari stored from wreg
  2240  001C1C  6E63               	movwf	SIOStartGame@usuari^0,c
  2241                           
  2242                           ;SIO.c: 33:     usuariActualSIO = usuari;
  2243  001C1E  C063  F048         	movff	SIOStartGame@usuari,_usuariActualSIO
  2244  001C22  0012               	return		;funcret
  2245  001C24                     __end_of_SIOStartGame:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function _SIONovaTecla *****************
  2249 ;; Defined at:
  2250 ;;		line 39 in file "SIO.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  tecla           1    wreg     char 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  tecla           1    5[COMRAM] char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/1
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1
  2264 ;;      Params:         0       0       0
  2265 ;;      Locals:         1       0       0
  2266 ;;      Temps:          0       0       0
  2267 ;;      Totals:         1       0       0
  2268 ;;Total ram usage:        1 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 2
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_motorJoc
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text11
  2279  001C24                     __ptext11:
  2280                           	callstack 0
  2281  001C24                     _SIONovaTecla:
  2282                           	callstack 27
  2283                           
  2284                           ;incstack = 0
  2285                           ;SIONovaTecla@tecla stored from wreg
  2286  001C24  6E63               	movwf	SIONovaTecla@tecla^0,c
  2287                           
  2288                           ;SIO.c: 40:     novaTeclaSIO = tecla;
  2289  001C26  C063  F046         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2290  001C2A  0012               	return		;funcret
  2291  001C2C                     __end_of_SIONovaTecla:
  2292                           	callstack 0
  2293                           
  2294 ;; *************** function _SIONovaDireccio *****************
  2295 ;; Defined at:
  2296 ;;		line 28 in file "SIO.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  num             1    wreg     unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  num             1    5[COMRAM] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/1
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1
  2310 ;;      Params:         0       0       0
  2311 ;;      Locals:         1       0       0
  2312 ;;      Temps:          0       0       0
  2313 ;;      Totals:         1       0       0
  2314 ;;Total ram usage:        1 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; Hardware stack levels required when called: 2
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_motorJoc
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text12
  2325  001C2C                     __ptext12:
  2326                           	callstack 0
  2327  001C2C                     _SIONovaDireccio:
  2328                           	callstack 27
  2329                           
  2330                           ;incstack = 0
  2331                           ;SIONovaDireccio@num stored from wreg
  2332  001C2C  6E63               	movwf	SIONovaDireccio@num^0,c
  2333                           
  2334                           ;SIO.c: 29:     direccioSIO = num;
  2335  001C2E  C063  F047         	movff	SIONovaDireccio@num,_direccioSIO
  2336  001C32  0012               	return		;funcret
  2337  001C34                     __end_of_SIONovaDireccio:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _HnoJugant *****************
  2341 ;; Defined at:
  2342 ;;		line 34 in file "Hora.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		None
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/1
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1
  2356 ;;      Params:         0       0       0
  2357 ;;      Locals:         0       0       0
  2358 ;;      Temps:          0       0       0
  2359 ;;      Totals:         0       0       0
  2360 ;;Total ram usage:        0 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 2
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_motorJoc
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text13
  2371  001CC8                     __ptext13:
  2372                           	callstack 0
  2373  001CC8                     _HnoJugant:
  2374                           	callstack 27
  2375                           
  2376                           ;Hora.c: 35:     jugant = 0;
  2377                           
  2378                           ;incstack = 0
  2379  001CC8  9A77               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2380  001CCA  0012               	return		;funcret
  2381  001CCC                     __end_of_HnoJugant:
  2382                           	callstack 0
  2383                           
  2384 ;; *************** function _HNouSegon *****************
  2385 ;; Defined at:
  2386 ;;		line 22 in file "Hora.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;		None               void
  2393 ;; Registers used:
  2394 ;;		status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/1
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1
  2400 ;;      Params:         0       0       0
  2401 ;;      Locals:         0       0       0
  2402 ;;      Temps:          0       0       0
  2403 ;;      Totals:         0       0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 2
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_motorJoc
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text14
  2415  001BCC                     __ptext14:
  2416                           	callstack 0
  2417  001BCC                     _HNouSegon:
  2418                           	callstack 27
  2419                           
  2420                           ;Hora.c: 23:     return nouSegon;
  2421                           
  2422                           ;incstack = 0
  2423  001BCC  B877               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2424  001BCE  D002               	goto	l2202
  2425  001BD0  90D8               	bcf	status,0,c
  2426  001BD2  0012               	return	
  2427  001BD4                     l2202:
  2428  001BD4  80D8               	bsf	status,0,c
  2429  001BD6  0012               	return		;funcret
  2430  001BD8                     __end_of_HNouSegon:
  2431                           	callstack 0
  2432                           
  2433 ;; *************** function _HJugant *****************
  2434 ;; Defined at:
  2435 ;;		line 37 in file "Hora.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		None
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/1
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1
  2449 ;;      Params:         0       0       0
  2450 ;;      Locals:         0       0       0
  2451 ;;      Temps:          0       0       0
  2452 ;;      Totals:         0       0       0
  2453 ;;Total ram usage:        0 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 2
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_motorJoc
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text15
  2464  001CA4                     __ptext15:
  2465                           	callstack 0
  2466  001CA4                     _HJugant:
  2467                           	callstack 27
  2468                           
  2469                           ;Hora.c: 38:     jugant = 1;
  2470                           
  2471                           ;incstack = 0
  2472  001CA4  8A77               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2473                           
  2474                           ;Hora.c: 39:     tempsAcabat = 0;
  2475  001CA6  9677               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2476  001CA8  0012               	return		;funcret
  2477  001CAA                     __end_of_HJugant:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function _HGetTime *****************
  2481 ;; Defined at:
  2482 ;;		line 30 in file "Hora.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      PTR unsigned char 
  2489 ;; Registers used:
  2490 ;;		wreg
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/1
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1
  2496 ;;      Params:         2       0       0
  2497 ;;      Locals:         0       0       0
  2498 ;;      Temps:          0       0       0
  2499 ;;      Totals:         2       0       0
  2500 ;;Total ram usage:        2 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 2
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_motorJoc
  2507 ;;		_motorSIO
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text16
  2512  001CCC                     __ptext16:
  2513                           	callstack 0
  2514  001CCC                     _HGetTime:
  2515                           	callstack 27
  2516                           
  2517                           ;Hora.c: 31:     return hora;
  2518                           
  2519                           ;incstack = 0
  2520  001CCC  0E55               	movlw	_hora& (0+255)
  2521  001CCE  0012               	return		;funcret
  2522  001CD0                     __end_of_HGetTime:
  2523                           	callstack 0
  2524                           
  2525 ;; *************** function _HClearNouSegon *****************
  2526 ;; Defined at:
  2527 ;;		line 26 in file "Hora.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		None
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/1
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1
  2541 ;;      Params:         0       0       0
  2542 ;;      Locals:         0       0       0
  2543 ;;      Temps:          0       0       0
  2544 ;;      Totals:         0       0       0
  2545 ;;Total ram usage:        0 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 2
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_motorJoc
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text17
  2556  001CD0                     __ptext17:
  2557                           	callstack 0
  2558  001CD0                     _HClearNouSegon:
  2559                           	callstack 27
  2560                           
  2561                           ;Hora.c: 27:     nouSegon = 0;
  2562                           
  2563                           ;incstack = 0
  2564  001CD0  9877               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2565  001CD2  0012               	return		;funcret
  2566  001CD4                     __end_of_HClearNouSegon:
  2567                           	callstack 0
  2568                           
  2569 ;; *************** function _motorHora *****************
  2570 ;; Defined at:
  2571 ;;		line 45 in file "Hora.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/1
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1
  2585 ;;      Params:         0       0       0
  2586 ;;      Locals:         0       0       0
  2587 ;;      Temps:          2       0       0
  2588 ;;      Totals:         2       0       0
  2589 ;;Total ram usage:        2 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 3
  2592 ;; This function calls:
  2593 ;;		_TiGetTics
  2594 ;;		_TiResetTics
  2595 ;;		_playAltaveu
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text18
  2602  00149C                     __ptext18:
  2603                           	callstack 0
  2604  00149C                     _motorHora:
  2605                           	callstack 27
  2606                           
  2607                           ;Hora.c: 46:  static char state = 0;;Hora.c: 48:  switch(state) {
  2608                           
  2609                           ;incstack = 0
  2610  00149C  D038               	goto	l4856
  2611  00149E                     l4806:
  2612                           
  2613                           ;Hora.c: 50:    if (TiGetTics(timerHora) >= 1205) {
  2614  00149E  500D               	movf	_timerHora^0,w,c
  2615  0014A0  ECFD  F00C         	call	_TiGetTics
  2616  0014A4  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  2617  0014A6  0012               	return	
  2618  0014A8  ECA3  F005         	call	PL60	;call to abstracted procedure
  2619  0014AC  A0D8               	btfss	status,0,c
  2620  0014AE  0012               	return	
  2621                           
  2622                           ;Hora.c: 51:     TiResetTics(timerHora);
  2623  0014B0  500D               	movf	_timerHora^0,w,c
  2624  0014B2  EC93  F00D         	call	_TiResetTics
  2625                           
  2626                           ;Hora.c: 52:     if(jugant){
  2627  0014B6  AA77               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2628  0014B8  D028               	goto	l4852
  2629                           
  2630                           ;Hora.c: 53:       nouSegon = 1;
  2631  0014BA  8877               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2632                           
  2633                           ;Hora.c: 55:      hora[4]--;
  2634  0014BC  0659               	decf	(_hora+4)^0,f,c
  2635                           
  2636                           ;Hora.c: 56:      if(hora[4] == ('0'-1)){
  2637  0014BE  0E2F               	movlw	47
  2638  0014C0  1859               	xorwf	(_hora+4)^0,w,c
  2639  0014C2  E103               	bnz	l4822
  2640                           
  2641                           ;Hora.c: 57:       hora[4] = '9';
  2642  0014C4  0E39               	movlw	57
  2643  0014C6  6E59               	movwf	(_hora+4)^0,c
  2644                           
  2645                           ;Hora.c: 58:       hora[3]--;
  2646  0014C8  0658               	decf	(_hora+3)^0,f,c
  2647  0014CA                     l4822:
  2648                           
  2649                           ;Hora.c: 61:      if(hora[3] == ('0'-1)){
  2650  0014CA  0E2F               	movlw	47
  2651  0014CC  1858               	xorwf	(_hora+3)^0,w,c
  2652  0014CE  E103               	bnz	l4828
  2653                           
  2654                           ;Hora.c: 62:       hora[3] = '5';
  2655  0014D0  0E35               	movlw	53
  2656  0014D2  6E58               	movwf	(_hora+3)^0,c
  2657                           
  2658                           ;Hora.c: 63:       hora[1]--;
  2659  0014D4  0656               	decf	(_hora+1)^0,f,c
  2660  0014D6                     l4828:
  2661                           
  2662                           ;Hora.c: 66:      if(hora[1] == ('0'-1)){
  2663  0014D6  0E2F               	movlw	47
  2664  0014D8  1856               	xorwf	(_hora+1)^0,w,c
  2665  0014DA  E103               	bnz	l4834
  2666                           
  2667                           ;Hora.c: 67:       hora[1] = '9';
  2668  0014DC  0E39               	movlw	57
  2669  0014DE  6E56               	movwf	(_hora+1)^0,c
  2670                           
  2671                           ;Hora.c: 68:       hora[0]--;
  2672  0014E0  0655               	decf	_hora^0,f,c
  2673  0014E2                     l4834:
  2674                           
  2675                           ;Hora.c: 71:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2676  0014E2  0E30               	movlw	48
  2677  0014E4  1855               	xorwf	_hora^0,w,c
  2678  0014E6  E10A               	bnz	l4844
  2679  0014E8  0E30               	movlw	48
  2680  0014EA  1856               	xorwf	(_hora+1)^0,w,c
  2681  0014EC  E107               	bnz	l4844
  2682  0014EE  0E30               	movlw	48
  2683  0014F0  1858               	xorwf	(_hora+3)^0,w,c
  2684  0014F2  E104               	bnz	l4844
  2685  0014F4  0E30               	movlw	48
  2686  0014F6  1859               	xorwf	(_hora+4)^0,w,c
  2687  0014F8  E101               	bnz	l4844
  2688                           
  2689                           ;Hora.c: 72:       tempsAcabat = 1;
  2690  0014FA  8677               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2691  0014FC                     l4844:
  2692                           
  2693                           ;Hora.c: 75:      segons++;
  2694  0014FC  2A0C               	incf	_segons^0,f,c
  2695                           
  2696                           ;Hora.c: 76:      if(segons > 59){
  2697  0014FE  0E3B               	movlw	59
  2698  001500  640C               	cpfsgt	_segons^0,c
  2699  001502  D003               	goto	l4852
  2700                           
  2701                           ;Hora.c: 77:       playAltaveu();
  2702  001504  EC6A  F00E         	call	_playAltaveu	;wreg free
  2703                           
  2704                           ;Hora.c: 78:       segons = 0;
  2705  001508  6A0C               	clrf	_segons^0,c
  2706  00150A                     l4852:
  2707                           
  2708                           ;Hora.c: 81:     state = 0;
  2709  00150A  6A0B               	clrf	motorHora@state^0,c
  2710  00150C  0012               	return	
  2711  00150E                     l4856:
  2712  00150E  500B               	movf	motorHora@state^0,w,c
  2713  001510  6E6A               	movwf	??_motorHora^0,c
  2714  001512  6A6B               	clrf	(??_motorHora+1)^0,c
  2715                           
  2716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2717                           ; Switch size 1, requested type "space"
  2718                           ; Number of cases is 1, Range of values is 0 to 0
  2719                           ; switch strategies available:
  2720                           ; Name         Instructions Cycles
  2721                           ; simple_byte            4     3 (average)
  2722                           ;	Chosen strategy is simple_byte
  2723  001514  506B               	movf	(??_motorHora+1)^0,w,c
  2724  001516  A4D8               	btfss	status,2,c
  2725  001518  0012               	return	
  2726                           
  2727                           ; Switch size 1, requested type "space"
  2728                           ; Number of cases is 1, Range of values is 0 to 0
  2729                           ; switch strategies available:
  2730                           ; Name         Instructions Cycles
  2731                           ; simple_byte            4     3 (average)
  2732                           ;	Chosen strategy is simple_byte
  2733  00151A  506A               	movf	??_motorHora^0,w,c
  2734  00151C  E0C0               	bz	l4806
  2735  00151E  0012               	return		;funcret
  2736  001520                     __end_of_motorHora:
  2737                           	callstack 0
  2738                           
  2739 ;; *************** function _playAltaveu *****************
  2740 ;; Defined at:
  2741 ;;		line 14 in file "Altaveu.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		None
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/1
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1
  2755 ;;      Params:         0       0       0
  2756 ;;      Locals:         0       0       0
  2757 ;;      Temps:          0       0       0
  2758 ;;      Totals:         0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 2
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_motorHora
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text19
  2770  001CD4                     __ptext19:
  2771                           	callstack 0
  2772  001CD4                     _playAltaveu:
  2773                           	callstack 27
  2774                           
  2775                           ;Altaveu.c: 15:     reproduir = 1;
  2776                           
  2777                           ;incstack = 0
  2778  001CD4  8478               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2779  001CD6  0012               	return		;funcret
  2780  001CD8                     __end_of_playAltaveu:
  2781                           	callstack 0
  2782                           
  2783 ;; *************** function _motorAltaveu *****************
  2784 ;; Defined at:
  2785 ;;		line 17 in file "Altaveu.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/1
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1
  2799 ;;      Params:         0       0       0
  2800 ;;      Locals:         0       0       0
  2801 ;;      Temps:          3       0       0
  2802 ;;      Totals:         3       0       0
  2803 ;;Total ram usage:        3 bytes
  2804 ;; Hardware stack levels used: 1
  2805 ;; Hardware stack levels required when called: 3
  2806 ;; This function calls:
  2807 ;;		_TiGetTics
  2808 ;;		_TiResetTics
  2809 ;; This function is called by:
  2810 ;;		_main
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text20
  2815  001408                     __ptext20:
  2816                           	callstack 0
  2817  001408                     _motorAltaveu:
  2818                           	callstack 27
  2819                           
  2820                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  2821                           
  2822                           ;incstack = 0
  2823  001408  D030               	goto	l5372
  2824  00140A                     l791:
  2825                           
  2826                           ;Altaveu.c: 22:    if (reproduir) {
  2827  00140A  A478               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2828  00140C  0012               	return	
  2829                           
  2830                           ;Altaveu.c: 23:     nota = 1;
  2831  00140E  0E01               	movlw	1
  2832  001410  6E1D               	movwf	_nota^0,c
  2833                           
  2834                           ;Altaveu.c: 24:     copsNota = 0;
  2835  001412  6A1B               	clrf	_copsNota^0,c
  2836                           
  2837                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  2838  001414  501C               	movf	_timerAltaveu^0,w,c
  2839  001416  EC93  F00D         	call	_TiResetTics
  2840  00141A                     l5338:
  2841                           
  2842                           ;Altaveu.c: 26:     state = 1;
  2843  00141A  0E01               	movlw	1
  2844  00141C  6E1A               	movwf	motorAltaveu@state^0,c
  2845  00141E  0C01               	retlw	1
  2846  001420                     l5340:
  2847                           
  2848                           ;Altaveu.c: 30:    if (nota > 5) {
  2849  001420  0E05               	movlw	5
  2850  001422  641D               	cpfsgt	_nota^0,c
  2851  001424  D003               	goto	l5344
  2852                           
  2853                           ;Altaveu.c: 31:     reproduir = 0;
  2854  001426  9478               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2855                           
  2856                           ;Altaveu.c: 32:     state = 0;
  2857  001428  6A1A               	clrf	motorAltaveu@state^0,c
  2858                           
  2859                           ;Altaveu.c: 33:    }
  2860  00142A  0012               	return	
  2861  00142C                     l5344:
  2862  00142C  0EA8               	movlw	168
  2863  00142E  181B               	xorwf	_copsNota^0,w,c
  2864  001430  E103               	bnz	l5352
  2865                           
  2866                           ;Altaveu.c: 35:     nota++;
  2867  001432  2A1D               	incf	_nota^0,f,c
  2868                           
  2869                           ;Altaveu.c: 36:     copsNota = 0;
  2870  001434  6A1B               	clrf	_copsNota^0,c
  2871  001436  D7F1               	goto	l5338
  2872  001438                     l5352:
  2873  001438  501C               	movf	_timerAltaveu^0,w,c
  2874  00143A  ECFD  F00C         	call	_TiGetTics
  2875  00143E  D822               	call	PL16	;call to abstracted procedure
  2876  001440  B0D8               	btfsc	status,0,c
  2877  001442  0012               	return	
  2878                           
  2879                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  2880  001444  808A               	bsf	138,0,c	;volatile
  2881                           
  2882                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  2883  001446  501C               	movf	_timerAltaveu^0,w,c
  2884  001448  EC93  F00D         	call	_TiResetTics
  2885                           
  2886                           ;Altaveu.c: 42:     state = 2;
  2887  00144C  0E02               	movlw	2
  2888  00144E  6E1A               	movwf	motorAltaveu@state^0,c
  2889  001450  0C02               	retlw	2
  2890  001452                     l5360:
  2891                           
  2892                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  2893  001452  501C               	movf	_timerAltaveu^0,w,c
  2894  001454  ECFD  F00C         	call	_TiGetTics
  2895  001458  D815               	call	PL16	;call to abstracted procedure
  2896  00145A  B0D8               	btfsc	status,0,c
  2897  00145C  0012               	return	
  2898                           
  2899                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  2900  00145E  908A               	bcf	138,0,c	;volatile
  2901                           
  2902                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  2903  001460  501C               	movf	_timerAltaveu^0,w,c
  2904  001462  EC93  F00D         	call	_TiResetTics
  2905                           
  2906                           ;Altaveu.c: 49:     copsNota++;
  2907  001466  2A1B               	incf	_copsNota^0,f,c
  2908  001468  D7D8               	goto	l5338
  2909  00146A                     l5372:
  2910  00146A  501A               	movf	motorAltaveu@state^0,w,c
  2911  00146C  6E6A               	movwf	??_motorAltaveu^0,c
  2912  00146E  6A6B               	clrf	(??_motorAltaveu+1)^0,c
  2913                           
  2914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2915                           ; Switch size 1, requested type "space"
  2916                           ; Number of cases is 1, Range of values is 0 to 0
  2917                           ; switch strategies available:
  2918                           ; Name         Instructions Cycles
  2919                           ; simple_byte            4     3 (average)
  2920                           ;	Chosen strategy is simple_byte
  2921  001470  506B               	movf	(??_motorAltaveu+1)^0,w,c
  2922  001472  A4D8               	btfss	status,2,c
  2923  001474  0012               	return	
  2924                           
  2925                           ; Switch size 1, requested type "space"
  2926                           ; Number of cases is 3, Range of values is 0 to 2
  2927                           ; switch strategies available:
  2928                           ; Name         Instructions Cycles
  2929                           ; simple_byte           10     6 (average)
  2930                           ;	Chosen strategy is simple_byte
  2931  001476  506A               	movf	??_motorAltaveu^0,w,c
  2932  001478  E0C8               	bz	l791
  2933  00147A  0A01               	xorlw	1	; case 1
  2934  00147C  E0D1               	bz	l5340
  2935  00147E  0A03               	xorlw	3	; case 2
  2936  001480  E0E8               	bz	l5360
  2937  001482  0012               	return		;funcret
  2938  001484                     __end_of_motorAltaveu:
  2939                           	callstack 0
  2940  001484                     PL16:
  2941                           	callstack 27
  2942  001484  501D               	movf	_nota^0,w,c
  2943  001486  6E6A               	movwf	??_motorAltaveu^0,c
  2944  001488  6A6B               	clrf	(??_motorAltaveu+1)^0,c
  2945  00148A  5063               	movf	?_TiGetTics^0,w,c
  2946  00148C  5C6A               	subwf	??_motorAltaveu^0,w,c
  2947  00148E  506B               	movf	(??_motorAltaveu+1)^0,w,c
  2948  001490  0A80               	xorlw	128
  2949  001492  6E6C               	movwf	(??_motorAltaveu+2)^0,c
  2950  001494  5064               	movf	(?_TiGetTics+1)^0,w,c
  2951  001496  0A80               	xorlw	128
  2952  001498  586C               	subwfb	(??_motorAltaveu+2)^0,w,c
  2953  00149A  0012               	return	
  2954  00149C                     __end_ofPL16:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function _menu *****************
  2958 ;; Defined at:
  2959 ;;		line 39 in file "Menu.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/1
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1
  2973 ;;      Params:         0       0       0
  2974 ;;      Locals:         0       0       0
  2975 ;;      Temps:          5       0       0
  2976 ;;      Totals:         5       0       0
  2977 ;;Total ram usage:        5 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 6
  2980 ;; This function calls:
  2981 ;;		_GLCDMostraMenu
  2982 ;;		_HActualitzaHora
  2983 ;;		_JJuguem
  2984 ;;		_JendGame
  2985 ;;		_JnovaDireccio
  2986 ;;		_JnovaTecla
  2987 ;;		_LcClear
  2988 ;;		_LcGotoXY
  2989 ;;		_LcLliure
  2990 ;;		_LcNewString
  2991 ;;		_LcPutChar
  2992 ;;		_LcScroll
  2993 ;;		_NoFerMenu
  2994 ;;		_SIOHaAcabatPuntuacions
  2995 ;;		_SMSoff
  2996 ;;		_SMSon
  2997 ;;		_SiFerMenu
  2998 ;;		_TiGetTics
  2999 ;;		_TiResetTics
  3000 ;;		_URegister
  3001 ;;		_UcheckExists
  3002 ;;		_UcheckExistsGetError
  3003 ;;		_UcheckExistsNotFinished
  3004 ;;		_UenviaChar
  3005 ;;		_UenviaPas
  3006 ;;		_UgetNumUsuaris
  3007 ;;		_UgetUserName
  3008 ;;		_checkHoraAcabat
  3009 ;; This function is called by:
  3010 ;;		_main
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text21
  3015  0002F6                     __ptext21:
  3016                           	callstack 0
  3017  0002F6                     _menu:
  3018                           	callstack 24
  3019                           
  3020                           ;Menu.c: 40:  static char state = 0;;Menu.c: 42:  switch(state) {
  3021                           
  3022                           ;incstack = 0
  3023  0002F6  D26B               	goto	l5324
  3024  0002F8                     l4864:
  3025                           
  3026                           ;Menu.c: 44:    LcClear();
  3027  0002F8  EC46  F00D         	call	_LcClear	;wreg free
  3028                           
  3029                           ;Menu.c: 45:    LcNewString("1.LOGIN");
  3030  0002FC  0EDF               	movlw	low STR_1
  3031  0002FE  DAC6               	call	PL6	;call to abstracted procedure
  3032  000300  ECFE  F00D         	call	_LcNewString	;wreg free
  3033                           
  3034                           ;Menu.c: 46:    state = 1;
  3035  000304  0E01               	movlw	1
  3036  000306  6E23               	movwf	menu@state^0,c
  3037                           
  3038                           ;Menu.c: 47:   break;
  3039  000308  0C01               	retlw	1
  3040  00030A                     l4870:
  3041                           
  3042                           ;Menu.c: 49:    if (LcLliure()) {
  3043  00030A  EC04  F00E         	call	_LcLliure	;wreg free
  3044  00030E  A0D8               	btfss	status,0,c
  3045  000310  0012               	return	
  3046                           
  3047                           ;Menu.c: 50:     LcGotoXY(0,1);
  3048  000312  DAC7               	call	PL34	;call to abstracted procedure
  3049  000314  EC8F  F00C         	call	_LcGotoXY
  3050                           
  3051                           ;Menu.c: 51:     LcNewString("2.REGISTER");
  3052  000318  0EBB               	movlw	low STR_2
  3053  00031A  DAB8               	call	PL6	;call to abstracted procedure
  3054  00031C  ECFE  F00D         	call	_LcNewString	;wreg free
  3055                           
  3056                           ;Menu.c: 52:     NovaTecla = -1;
  3057  000320  6850               	setf	_NovaTecla^0,c
  3058                           
  3059                           ;Menu.c: 53:     state = 2;
  3060  000322  0E02               	movlw	2
  3061  000324  6E23               	movwf	menu@state^0,c
  3062                           
  3063                           ;Menu.c: 55:   break;
  3064                           
  3065                           ;Menu.c: 54:    }
  3066  000326  0C02               	retlw	2
  3067  000328                     l4880:
  3068                           
  3069                           ;Menu.c: 57:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  3070  000328  0450               	decf	_NovaTecla^0,w,c
  3071  00032A  E108               	bnz	l4888
  3072  00032C  EC6C  F00E         	call	_UgetNumUsuaris	;wreg free
  3073  000330  0900               	iorlw	0
  3074  000332  E004               	bz	l4888
  3075                           
  3076                           ;Menu.c: 58:     loginNOTRegister = 1;
  3077  000334  8A78               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3078  000336                     l4886:
  3079                           
  3080                           ;Menu.c: 59:     state = 3;
  3081  000336  0E03               	movlw	3
  3082  000338  6E23               	movwf	menu@state^0,c
  3083                           
  3084                           ;Menu.c: 60:    }
  3085  00033A  0C03               	retlw	3
  3086  00033C                     l4888:
  3087  00033C  0E02               	movlw	2
  3088  00033E  1850               	xorwf	_NovaTecla^0,w,c
  3089  000340  A4D8               	btfss	status,2,c
  3090  000342  0012               	return	
  3091                           
  3092                           ;Menu.c: 62:     loginNOTRegister = 0;
  3093  000344  9A78               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3094  000346  D7F7               	goto	l4886
  3095  000348                     l497:
  3096                           
  3097                           ;Menu.c: 67:    NovaTecla = -1;
  3098  000348  6850               	setf	_NovaTecla^0,c
  3099                           
  3100                           ;Menu.c: 68:    novaLletra = -1;
  3101  00034A  684F               	setf	_novaLletra^0,c
  3102                           
  3103                           ;Menu.c: 69:    LcClear();
  3104  00034C  EC46  F00D         	call	_LcClear	;wreg free
  3105                           
  3106                           ;Menu.c: 70:    LcNewString("USER: ");
  3107  000350  0EEE               	movlw	low STR_3
  3108  000352  DA9C               	call	PL6	;call to abstracted procedure
  3109  000354  ECFE  F00D         	call	_LcNewString	;wreg free
  3110                           
  3111                           ;Menu.c: 71:    state = 4;
  3112  000358  0E04               	movlw	4
  3113  00035A  6E23               	movwf	menu@state^0,c
  3114                           
  3115                           ;Menu.c: 72:   break;
  3116  00035C  0C04               	retlw	4
  3117  00035E                     l4900:
  3118                           
  3119                           ;Menu.c: 74:    if (LcLliure()) {
  3120  00035E  EC04  F00E         	call	_LcLliure	;wreg free
  3121  000362  A0D8               	btfss	status,0,c
  3122  000364  0012               	return	
  3123                           
  3124                           ;Menu.c: 75:     LcGotoXY(0,1);
  3125  000366  DA9D               	call	PL34	;call to abstracted procedure
  3126  000368  EC8F  F00C         	call	_LcGotoXY
  3127                           
  3128                           ;Menu.c: 76:     LcNewString("PSWD: ");
  3129  00036C  0EE7               	movlw	low STR_4
  3130  00036E  DA8E               	call	PL6	;call to abstracted procedure
  3131  000370  ECFE  F00D         	call	_LcNewString	;wreg free
  3132                           
  3133                           ;Menu.c: 77:     state = 5;
  3134  000374  0E05               	movlw	5
  3135  000376  6E23               	movwf	menu@state^0,c
  3136  000378  0C05               	retlw	5
  3137  00037A                     l4908:
  3138                           
  3139                           ;Menu.c: 81:    if (LcLliure()) {
  3140  00037A  EC04  F00E         	call	_LcLliure	;wreg free
  3141  00037E  A0D8               	btfss	status,0,c
  3142  000380  0012               	return	
  3143                           
  3144                           ;Menu.c: 82:     LcGotoXY(6,0);
  3145  000382  0E00               	movlw	0
  3146  000384  6E6B               	movwf	LcGotoXY@Row^0,c
  3147  000386  0E06               	movlw	6
  3148  000388  EC8F  F00C         	call	_LcGotoXY
  3149                           
  3150                           ;Menu.c: 83:     SMSon();
  3151  00038C  EC55  F00E         	call	_SMSon	;wreg free
  3152                           
  3153                           ;Menu.c: 84:     tmp =0;
  3154  000390  6A28               	clrf	_tmp^0,c
  3155  000392                     l4916:
  3156                           
  3157                           ;Menu.c: 85:     state = 6;
  3158  000392  0E06               	movlw	6
  3159  000394  6E23               	movwf	menu@state^0,c
  3160  000396  0C06               	retlw	6
  3161  000398                     l4918:
  3162                           
  3163                           ;Menu.c: 89:    if (novaLletra > 47 && NovaTecla != 10) {
  3164  000398  504F               	movf	_novaLletra^0,w,c
  3165  00039A  0A80               	xorlw	128
  3166  00039C  0F50               	addlw	-176
  3167  00039E  E30E               	bnc	l4928
  3168  0003A0  0E0A               	movlw	10
  3169  0003A2  1850               	xorwf	_NovaTecla^0,w,c
  3170  0003A4  E00B               	bz	l4928
  3171                           
  3172                           ;Menu.c: 90:     LcPutChar(novaLletra);
  3173  0003A6  504F               	movf	_novaLletra^0,w,c
  3174  0003A8  ECD3  F00B         	call	_LcPutChar
  3175                           
  3176                           ;Menu.c: 91:     UenviaChar(novaLletra,tmp);
  3177  0003AC  C028  F063         	movff	_tmp,UenviaChar@pos
  3178  0003B0  504F               	movf	_novaLletra^0,w,c
  3179  0003B2  ECD2  F00D         	call	_UenviaChar
  3180  0003B6                     l4926:
  3181                           
  3182                           ;Menu.c: 92:     state = 7;
  3183  0003B6  0E07               	movlw	7
  3184  0003B8  6E23               	movwf	menu@state^0,c
  3185                           
  3186                           ;Menu.c: 93:    }
  3187  0003BA  0C07               	retlw	7
  3188  0003BC                     l4928:
  3189  0003BC  0E0B               	movlw	11
  3190  0003BE  1850               	xorwf	_NovaTecla^0,w,c
  3191  0003C0  E0FA               	bz	l4926
  3192  0003C2  0012               	return	
  3193  0003C4                     l4932:
  3194                           
  3195                           ;Menu.c: 99:    if (tmp != 7 && NovaTecla != 11) {
  3196  0003C4  0E07               	movlw	7
  3197  0003C6  1828               	xorwf	_tmp^0,w,c
  3198  0003C8  E005               	bz	l4944
  3199  0003CA  0E0B               	movlw	11
  3200  0003CC  1850               	xorwf	_NovaTecla^0,w,c
  3201  0003CE  E002               	bz	l4944
  3202                           
  3203                           ;Menu.c: 100:     tmp++;
  3204                           
  3205                           ;Menu.c: 101:     NovaTecla = -1;
  3206                           
  3207                           ;Menu.c: 102:     novaLletra = -1;
  3208  0003D0  DA6F               	call	PL74	;call to abstracted procedure
  3209  0003D2  D7DF               	goto	l4916
  3210  0003D4                     l4944:
  3211  0003D4  0E07               	movlw	7
  3212  0003D6  1828               	xorwf	_tmp^0,w,c
  3213  0003D8  E004               	bz	u4430
  3214  0003DA  0E0B               	movlw	11
  3215  0003DC  1850               	xorwf	_NovaTecla^0,w,c
  3216  0003DE  A4D8               	btfss	status,2,c
  3217  0003E0  0012               	return	
  3218  0003E2                     u4430:
  3219                           
  3220                           ;Menu.c: 106:     LcGotoXY(6,1);
  3221  0003E2  0E01               	movlw	1
  3222  0003E4  6E6B               	movwf	LcGotoXY@Row^0,c
  3223  0003E6  0E06               	movlw	6
  3224  0003E8  EC8F  F00C         	call	_LcGotoXY
  3225                           
  3226                           ;Menu.c: 107:     UenviaChar('\0',tmp);
  3227  0003EC  C028  F063         	movff	_tmp,UenviaChar@pos
  3228  0003F0  0E00               	movlw	0
  3229  0003F2  ECD2  F00D         	call	_UenviaChar
  3230                           
  3231                           ;Menu.c: 108:     NovaTecla = -1;
  3232                           
  3233                           ;Menu.c: 109:     novaLletra = -1;
  3234                           
  3235                           ;Menu.c: 110:     tmp = 0;
  3236  0003F6  DA58               	call	PL72	;call to abstracted procedure
  3237  0003F8                     l4958:
  3238                           
  3239                           ;Menu.c: 111:     state = 8;
  3240  0003F8  0E08               	movlw	8
  3241  0003FA  6E23               	movwf	menu@state^0,c
  3242  0003FC  0C08               	retlw	8
  3243  0003FE                     l4960:
  3244                           
  3245                           ;Menu.c: 115:    if (novaLletra > 47 && NovaTecla != 10) {
  3246  0003FE  504F               	movf	_novaLletra^0,w,c
  3247  000400  0A80               	xorlw	128
  3248  000402  0F50               	addlw	-176
  3249  000404  E30E               	bnc	l4970
  3250  000406  0E0A               	movlw	10
  3251  000408  1850               	xorwf	_NovaTecla^0,w,c
  3252  00040A  E00B               	bz	l4970
  3253                           
  3254                           ;Menu.c: 116:     LcPutChar(novaLletra);
  3255  00040C  504F               	movf	_novaLletra^0,w,c
  3256  00040E  ECD3  F00B         	call	_LcPutChar
  3257                           
  3258                           ;Menu.c: 117:     UenviaPas(novaLletra,tmp);
  3259  000412  C028  F063         	movff	_tmp,UenviaPas@pos
  3260  000416  504F               	movf	_novaLletra^0,w,c
  3261  000418  ECCA  F00D         	call	_UenviaPas
  3262  00041C                     l4968:
  3263                           
  3264                           ;Menu.c: 118:     state = 9;
  3265  00041C  0E09               	movlw	9
  3266  00041E  6E23               	movwf	menu@state^0,c
  3267                           
  3268                           ;Menu.c: 119:    }
  3269  000420  0C09               	retlw	9
  3270  000422                     l4970:
  3271  000422  0E0B               	movlw	11
  3272  000424  1850               	xorwf	_NovaTecla^0,w,c
  3273  000426  E0FA               	bz	l4968
  3274  000428  0012               	return	
  3275  00042A                     l4974:
  3276                           
  3277                           ;Menu.c: 125:    if (tmp != 7 && NovaTecla != 11) {
  3278  00042A  0E07               	movlw	7
  3279  00042C  1828               	xorwf	_tmp^0,w,c
  3280  00042E  E005               	bz	l4986
  3281  000430  0E0B               	movlw	11
  3282  000432  1850               	xorwf	_NovaTecla^0,w,c
  3283  000434  E002               	bz	l4986
  3284                           
  3285                           ;Menu.c: 126:     tmp++;
  3286                           
  3287                           ;Menu.c: 127:     NovaTecla = -1;
  3288                           
  3289                           ;Menu.c: 128:     novaLletra = -1;
  3290  000436  DA3C               	call	PL74	;call to abstracted procedure
  3291  000438  D7DF               	goto	l4958
  3292  00043A                     l4986:
  3293  00043A  0E07               	movlw	7
  3294  00043C  1828               	xorwf	_tmp^0,w,c
  3295  00043E  E004               	bz	u4500
  3296  000440  0E0B               	movlw	11
  3297  000442  1850               	xorwf	_NovaTecla^0,w,c
  3298  000444  A4D8               	btfss	status,2,c
  3299  000446  0012               	return	
  3300  000448                     u4500:
  3301                           
  3302                           ;Menu.c: 132:     UenviaPas('\0',tmp);
  3303  000448  C028  F063         	movff	_tmp,UenviaPas@pos
  3304  00044C  0E00               	movlw	0
  3305  00044E  ECCA  F00D         	call	_UenviaPas
  3306                           
  3307                           ;Menu.c: 133:     NovaTecla = -1;
  3308                           
  3309                           ;Menu.c: 134:     novaLletra = -1;
  3310                           
  3311                           ;Menu.c: 135:     tmp = 0;
  3312  000452  DA2A               	call	PL72	;call to abstracted procedure
  3313                           
  3314                           ;Menu.c: 136:     UcheckExists();
  3315  000454  EC70  F00E         	call	_UcheckExists	;wreg free
  3316                           
  3317                           ;Menu.c: 137:     SMSoff();
  3318  000458  EC58  F00E         	call	_SMSoff	;wreg free
  3319                           
  3320                           ;Menu.c: 138:     state = 10;
  3321  00045C  0E0A               	movlw	10
  3322  00045E  6E23               	movwf	menu@state^0,c
  3323  000460  0C0A               	retlw	10
  3324  000462                     l5004:
  3325                           
  3326                           ;Menu.c: 142:    if (!UcheckExistsNotFinished()) {
  3327  000462  ECF2  F00D         	call	_UcheckExistsNotFinished	;wreg free
  3328  000466  B0D8               	btfsc	status,0,c
  3329  000468  0012               	return	
  3330                           
  3331                           ;Menu.c: 143:     indexUsuari = UcheckExistsGetError();
  3332  00046A  EC6E  F00E         	call	_UcheckExistsGetError	;wreg free
  3333  00046E  6E25               	movwf	_indexUsuari^0,c
  3334                           
  3335                           ;Menu.c: 144:     state = 11;
  3336  000470  0E0B               	movlw	11
  3337  000472  6E23               	movwf	menu@state^0,c
  3338  000474  0C0B               	retlw	11
  3339  000476                     l524:
  3340                           
  3341                           ;Menu.c: 148:    if (!loginNOTRegister && indexUsuari == -1) {
  3342  000476  BA78               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3343  000478  D006               	goto	l525
  3344  00047A  2825               	incf	_indexUsuari^0,w,c
  3345  00047C  E104               	bnz	l525
  3346                           
  3347                           ;Menu.c: 149:     URegister();
  3348  00047E  EC72  F00E         	call	_URegister	;wreg free
  3349  000482                     l5014:
  3350                           
  3351                           ;Menu.c: 150:     state = 0;
  3352  000482  6A23               	clrf	menu@state^0,c
  3353                           
  3354                           ;Menu.c: 151:    }
  3355  000484  0012               	return	
  3356  000486                     l525:
  3357  000486  BA78               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3358  000488  BE25               	btfsc	_indexUsuari^0,7,c
  3359  00048A  D003               	goto	l527
  3360  00048C                     u4550:
  3361                           
  3362                           ;Menu.c: 153:     state = 12;
  3363  00048C  0E0C               	movlw	12
  3364  00048E  6E23               	movwf	menu@state^0,c
  3365                           
  3366                           ;Menu.c: 154:    }
  3367  000490  0C0C               	retlw	12
  3368  000492                     l527:
  3369  000492  AA78               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3370  000494  D002               	goto	u4570
  3371  000496  2825               	incf	_indexUsuari^0,w,c
  3372  000498  E0F4               	bz	l5014
  3373  00049A                     u4570:
  3374  00049A  AA78               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3375  00049C  BE25               	btfsc	_indexUsuari^0,7,c
  3376  00049E  D7F6               	goto	u4550
  3377  0004A0  D7F0               	goto	l5014
  3378  0004A2                     l5026:
  3379                           
  3380                           ;Menu.c: 163:    LcClear();
  3381  0004A2  EC46  F00D         	call	_LcClear	;wreg free
  3382                           
  3383                           ;Menu.c: 164:    SiFerMenu();
  3384  0004A6  EC74  F00E         	call	_SiFerMenu	;wreg free
  3385                           
  3386                           ;Menu.c: 165:    GLCDMostraMenu(menuDalt);
  3387  0004AA  5026               	movf	_menuDalt^0,w,c
  3388  0004AC  ECF8  F00D         	call	_GLCDMostraMenu
  3389                           
  3390                           ;Menu.c: 166:    novaDireccio = -1;
  3391  0004B0  684E               	setf	_novaDireccio^0,c
  3392                           
  3393                           ;Menu.c: 167:    NovaTecla = -1;
  3394  0004B2  6850               	setf	_NovaTecla^0,c
  3395                           
  3396                           ;Menu.c: 168:    state = 13;
  3397  0004B4  0E0D               	movlw	13
  3398  0004B6  6E23               	movwf	menu@state^0,c
  3399                           
  3400                           ;Menu.c: 169:   break;
  3401  0004B8  0C0D               	retlw	13
  3402  0004BA                     l5038:
  3403                           
  3404                           ;Menu.c: 171:    if (novaDireccio == 8) {
  3405  0004BA  0E08               	movlw	8
  3406  0004BC  184E               	xorwf	_novaDireccio^0,w,c
  3407  0004BE  E105               	bnz	l5046
  3408                           
  3409                           ;Menu.c: 172:     if(menuDalt < 4) menuDalt++;
  3410  0004C0  0E04               	movlw	4
  3411  0004C2  6026               	cpfslt	_menuDalt^0,c
  3412  0004C4  D7E3               	goto	u4550
  3413  0004C6  2A26               	incf	_menuDalt^0,f,c
  3414  0004C8  D7E1               	goto	u4550
  3415  0004CA                     l5046:
  3416  0004CA  0E02               	movlw	2
  3417  0004CC  184E               	xorwf	_novaDireccio^0,w,c
  3418  0004CE  E104               	bnz	l5054
  3419                           
  3420                           ;Menu.c: 176:     if(menuDalt > 0) menuDalt--;
  3421  0004D0  5026               	movf	_menuDalt^0,w,c
  3422  0004D2  E0DC               	bz	u4550
  3423  0004D4  0626               	decf	_menuDalt^0,f,c
  3424  0004D6  D7DA               	goto	u4550
  3425  0004D8                     l5054:
  3426  0004D8  0E0B               	movlw	11
  3427  0004DA  1850               	xorwf	_NovaTecla^0,w,c
  3428  0004DC  E10E               	bnz	l5066
  3429  0004DE  0E03               	movlw	3
  3430  0004E0  1826               	xorwf	_menuDalt^0,w,c
  3431  0004E2  E10B               	bnz	l5066
  3432                           
  3433                           ;Menu.c: 180:     NoFerMenu();
  3434  0004E4  EC78  F00E         	call	_NoFerMenu	;wreg free
  3435                           
  3436                           ;Menu.c: 181:     LcClear();
  3437  0004E8  EC46  F00D         	call	_LcClear	;wreg free
  3438                           
  3439                           ;Menu.c: 182:     LcNewString("BYE BYE ");
  3440  0004EC  0EC6               	movlw	low STR_5
  3441  0004EE  D9CE               	call	PL6	;call to abstracted procedure
  3442  0004F0  ECFE  F00D         	call	_LcNewString	;wreg free
  3443                           
  3444                           ;Menu.c: 183:     state = 14;
  3445  0004F4  0E0E               	movlw	14
  3446  0004F6  6E23               	movwf	menu@state^0,c
  3447                           
  3448                           ;Menu.c: 184:    }
  3449  0004F8  0C0E               	retlw	14
  3450  0004FA                     l5066:
  3451  0004FA  0E0B               	movlw	11
  3452  0004FC  1850               	xorwf	_NovaTecla^0,w,c
  3453  0004FE  E10E               	bnz	l5080
  3454  000500  0426               	decf	_menuDalt^0,w,c
  3455  000502  E10C               	bnz	l5080
  3456                           
  3457                           ;Menu.c: 186:     LcClear();
  3458  000504  EC46  F00D         	call	_LcClear	;wreg free
  3459                           
  3460                           ;Menu.c: 187:     NoFerMenu();
  3461  000508  EC78  F00E         	call	_NoFerMenu	;wreg free
  3462                           
  3463                           ;Menu.c: 188:     LcNewString("Modify Time:");
  3464  00050C  0EA2               	movlw	low STR_6
  3465  00050E  D9BE               	call	PL6	;call to abstracted procedure
  3466  000510  ECFE  F00D         	call	_LcNewString	;wreg free
  3467                           
  3468                           ;Menu.c: 189:     NovaTecla = -1;
  3469  000514  6850               	setf	_NovaTecla^0,c
  3470                           
  3471                           ;Menu.c: 190:     state = 16;
  3472  000516  0E10               	movlw	16
  3473  000518  6E23               	movwf	menu@state^0,c
  3474                           
  3475                           ;Menu.c: 191:    }
  3476  00051A  0C10               	retlw	16
  3477  00051C                     l5080:
  3478  00051C  5026               	movf	_menuDalt^0,w,c
  3479  00051E  E112               	bnz	l5096
  3480  000520  0E0B               	movlw	11
  3481  000522  1850               	xorwf	_NovaTecla^0,w,c
  3482  000524  E10F               	bnz	l5096
  3483                           
  3484                           ;Menu.c: 193:     NoFerMenu();
  3485  000526  EC78  F00E         	call	_NoFerMenu	;wreg free
  3486                           
  3487                           ;Menu.c: 194:     NovaTecla = -1;
  3488  00052A  6850               	setf	_NovaTecla^0,c
  3489                           
  3490                           ;Menu.c: 195:     LcClear();
  3491  00052C  EC46  F00D         	call	_LcClear	;wreg free
  3492                           
  3493                           ;Menu.c: 196:     LcNewString("TIME REMAINING:");
  3494  000530  0E92               	movlw	low STR_7
  3495  000532  D9AC               	call	PL6	;call to abstracted procedure
  3496  000534  ECFE  F00D         	call	_LcNewString	;wreg free
  3497                           
  3498                           ;Menu.c: 197:     JJuguem(indexUsuari);
  3499  000538  5025               	movf	_indexUsuari^0,w,c
  3500  00053A  EC22  F00E         	call	_JJuguem
  3501  00053E                     l5094:
  3502                           
  3503                           ;Menu.c: 198:     state = 21;
  3504  00053E  0E15               	movlw	21
  3505  000540  6E23               	movwf	menu@state^0,c
  3506                           
  3507                           ;Menu.c: 199:    }
  3508  000542  0C15               	retlw	21
  3509  000544                     l5096:
  3510  000544  0E0B               	movlw	11
  3511  000546  1850               	xorwf	_NovaTecla^0,w,c
  3512  000548  A4D8               	btfss	status,2,c
  3513  00054A  0012               	return	
  3514  00054C  0E04               	movlw	4
  3515  00054E  1826               	xorwf	_menuDalt^0,w,c
  3516  000550  A4D8               	btfss	status,2,c
  3517  000552  0012               	return	
  3518                           
  3519                           ;Menu.c: 201:     NoFerMenu();
  3520  000554  EC78  F00E         	call	_NoFerMenu	;wreg free
  3521                           
  3522                           ;Menu.c: 202:     LcClear();
  3523  000558  EC46  F00D         	call	_LcClear	;wreg free
  3524                           
  3525                           ;Menu.c: 203:     menuDalt = 0;
  3526  00055C  6A26               	clrf	_menuDalt^0,c
  3527                           
  3528                           ;Menu.c: 204:                 NovaTecla = -1;
  3529  00055E  6850               	setf	_NovaTecla^0,c
  3530  000560                     l5108:
  3531                           
  3532                           ;Menu.c: 205:     state = 23;
  3533  000560  0E17               	movlw	23
  3534  000562  6E23               	movwf	menu@state^0,c
  3535  000564  0C17               	retlw	23
  3536  000566                     l5110:
  3537                           
  3538                           ;Menu.c: 209:    if (LcLliure()) {
  3539  000566  EC04  F00E         	call	_LcLliure	;wreg free
  3540  00056A  A0D8               	btfss	status,0,c
  3541  00056C  0012               	return	
  3542                           
  3543                           ;Menu.c: 210:     LcNewString(UgetUserName(indexUsuari));
  3544  00056E  5025               	movf	_indexUsuari^0,w,c
  3545  000570  ECB7  F00D         	call	_UgetUserName
  3546  000574  D991               	call	PL18	;call to abstracted procedure
  3547  000576  ECFE  F00D         	call	_LcNewString	;wreg free
  3548                           
  3549                           ;Menu.c: 211:     TiResetTics(timerMenu);
  3550  00057A  5027               	movf	_timerMenu^0,w,c
  3551  00057C  EC93  F00D         	call	_TiResetTics
  3552                           
  3553                           ;Menu.c: 212:     state = 15;
  3554  000580  0E0F               	movlw	15
  3555  000582  6E23               	movwf	menu@state^0,c
  3556  000584  0C0F               	retlw	15
  3557  000586                     l5118:
  3558                           
  3559                           ;Menu.c: 216:    if (TiGetTics(timerMenu) > 2410) {
  3560  000586  5027               	movf	_timerMenu^0,w,c
  3561  000588  ECFD  F00C         	call	_TiGetTics
  3562  00058C  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  3563  00058E  0012               	return	
  3564  000590  0E6B               	movlw	107
  3565  000592  5C63               	subwf	?_TiGetTics^0,w,c
  3566  000594  0E09               	movlw	9
  3567  000596  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  3568  000598  E301 D773          	bc	l5014
  3569  00059C  0012               	return	
  3570  00059E                     l5122:
  3571                           
  3572                           ;Menu.c: 221:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3573  00059E  EC04  F00E         	call	_LcLliure	;wreg free
  3574  0005A2  E347               	bnc	l5188
  3575  0005A4  BE50               	btfsc	_NovaTecla^0,7,c
  3576  0005A6  D045               	goto	l5188
  3577  0005A8  5050               	movf	_NovaTecla^0,w,c
  3578  0005AA  0A80               	xorlw	128
  3579  0005AC  0F76               	addlw	-138
  3580  0005AE  E241               	bc	l5188
  3581                           
  3582                           ;Menu.c: 222:     LcGotoXY(0,1);
  3583  0005B0  D978               	call	PL34	;call to abstracted procedure
  3584  0005B2  EC8F  F00C         	call	_LcGotoXY
  3585                           
  3586                           ;Menu.c: 223:     horaTmp[0] = NovaTecla+48;
  3587  0005B6  5050               	movf	_NovaTecla^0,w,c
  3588  0005B8  0F30               	addlw	48
  3589  0005BA  6E3E               	movwf	_horaTmp^0,c
  3590                           
  3591                           ;Menu.c: 224:     LcPutChar(horaTmp[0]);
  3592  0005BC  503E               	movf	_horaTmp^0,w,c
  3593  0005BE  ECD3  F00B         	call	_LcPutChar
  3594                           
  3595                           ;Menu.c: 225:     NovaTecla = -1;
  3596  0005C2  6850               	setf	_NovaTecla^0,c
  3597                           
  3598                           ;Menu.c: 226:     state = 17;
  3599  0005C4  0E11               	movlw	17
  3600  0005C6                     L1:
  3601  0005C6  6E23               	movwf	menu@state^0,c
  3602                           
  3603                           ;Menu.c: 227:    }
  3604  0005C8  0012               	return	
  3605  0005CA                     L2:
  3606  0005CA  1850               	xorwf	_NovaTecla^0,w,c
  3607  0005CC  E101 D75E          	bz	u4550
  3608  0005D0  0012               	return	
  3609  0005D2                     l5142:
  3610                           
  3611                           ;Menu.c: 233:    if (NovaTecla > -1 && NovaTecla < 10) {
  3612  0005D2  BE50               	btfsc	_NovaTecla^0,7,c
  3613  0005D4  D02E               	goto	l5188
  3614  0005D6  5050               	movf	_NovaTecla^0,w,c
  3615  0005D8  0A80               	xorlw	128
  3616  0005DA  0F76               	addlw	-138
  3617  0005DC  E22A               	bc	l5188
  3618                           
  3619                           ;Menu.c: 234:     horaTmp[1] = NovaTecla+48;
  3620  0005DE  5050               	movf	_NovaTecla^0,w,c
  3621  0005E0  0F30               	addlw	48
  3622  0005E2  6E3F               	movwf	(_horaTmp+1)^0,c
  3623                           
  3624                           ;Menu.c: 235:     LcPutChar(horaTmp[1]);
  3625  0005E4  503F               	movf	(_horaTmp+1)^0,w,c
  3626  0005E6  ECD3  F00B         	call	_LcPutChar
  3627                           
  3628                           ;Menu.c: 236:     NovaTecla = -1;
  3629  0005EA  6850               	setf	_NovaTecla^0,c
  3630                           
  3631                           ;Menu.c: 237:     LcPutChar(':');
  3632  0005EC  0E3A               	movlw	58
  3633  0005EE  ECD3  F00B         	call	_LcPutChar
  3634                           
  3635                           ;Menu.c: 238:     state = 18;
  3636  0005F2  0E12               	movlw	18
  3637  0005F4  D7E8               	goto	L1
  3638  0005F6                     l5160:
  3639                           
  3640                           ;Menu.c: 245:    if (NovaTecla > -1 && NovaTecla < 10) {
  3641  0005F6  BE50               	btfsc	_NovaTecla^0,7,c
  3642  0005F8  D01C               	goto	l5188
  3643  0005FA  5050               	movf	_NovaTecla^0,w,c
  3644  0005FC  0A80               	xorlw	128
  3645  0005FE  0F76               	addlw	-138
  3646  000600  E218               	bc	l5188
  3647                           
  3648                           ;Menu.c: 246:     horaTmp[2] = NovaTecla+48;
  3649  000602  5050               	movf	_NovaTecla^0,w,c
  3650  000604  0F30               	addlw	48
  3651  000606  6E40               	movwf	(_horaTmp+2)^0,c
  3652                           
  3653                           ;Menu.c: 247:     LcPutChar(horaTmp[2]);
  3654  000608  5040               	movf	(_horaTmp+2)^0,w,c
  3655  00060A  ECD3  F00B         	call	_LcPutChar
  3656                           
  3657                           ;Menu.c: 248:     NovaTecla = -1;
  3658  00060E  6850               	setf	_NovaTecla^0,c
  3659                           
  3660                           ;Menu.c: 249:     state = 19;
  3661  000610  0E13               	movlw	19
  3662  000612  D7D9               	goto	L1
  3663  000614                     l5176:
  3664                           
  3665                           ;Menu.c: 256:    if (NovaTecla > -1 && NovaTecla < 10) {
  3666  000614  BE50               	btfsc	_NovaTecla^0,7,c
  3667  000616  D00D               	goto	l5188
  3668  000618  5050               	movf	_NovaTecla^0,w,c
  3669  00061A  0A80               	xorlw	128
  3670  00061C  0F76               	addlw	-138
  3671  00061E  E209               	bc	l5188
  3672                           
  3673                           ;Menu.c: 257:     horaTmp[3] = NovaTecla+48;
  3674  000620  5050               	movf	_NovaTecla^0,w,c
  3675  000622  0F30               	addlw	48
  3676  000624  6E41               	movwf	(_horaTmp+3)^0,c
  3677                           
  3678                           ;Menu.c: 258:     LcPutChar(horaTmp[3]);
  3679  000626  5041               	movf	(_horaTmp+3)^0,w,c
  3680  000628  ECD3  F00B         	call	_LcPutChar
  3681                           
  3682                           ;Menu.c: 259:     NovaTecla = -1;
  3683  00062C  6850               	setf	_NovaTecla^0,c
  3684                           
  3685                           ;Menu.c: 260:     state = 20;
  3686  00062E  0E14               	movlw	20
  3687  000630  D7CA               	goto	L1
  3688  000632                     l5188:
  3689  000632  0E0A               	movlw	10
  3690  000634  D7CA               	goto	L2
  3691  000636                     l5192:
  3692                           
  3693                           ;Menu.c: 267:    if (NovaTecla == 11) {
  3694  000636  0E0B               	movlw	11
  3695  000638  1850               	xorwf	_NovaTecla^0,w,c
  3696  00063A  E1FB               	bnz	l5188
  3697                           
  3698                           ;Menu.c: 268:     HActualitzaHora(horaTmp);
  3699  00063C  0E3E               	movlw	low _horaTmp
  3700  00063E  6E63               	movwf	HActualitzaHora@nova^0,c
  3701  000640  EC75  F00C         	call	_HActualitzaHora	;wreg free
  3702                           
  3703                           ;Menu.c: 269:     NovaTecla = -1;
  3704  000644  6850               	setf	_NovaTecla^0,c
  3705  000646  D722               	goto	u4550
  3706  000648                     l5204:
  3707                           
  3708                           ;Menu.c: 277:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3709  000648  0E0A               	movlw	10
  3710  00064A  1850               	xorwf	_NovaTecla^0,w,c
  3711  00064C  E103               	bnz	u4900
  3712  00064E  EC04  F00E         	call	_LcLliure	;wreg free
  3713  000652  E203               	bc	u4910
  3714  000654                     u4900:
  3715  000654  ECEC  F00D         	call	_checkHoraAcabat	;wreg free
  3716  000658  E307               	bnc	l5216
  3717  00065A                     u4910:
  3718                           
  3719                           ;Menu.c: 278:     LcClear();
  3720  00065A  EC46  F00D         	call	_LcClear	;wreg free
  3721                           
  3722                           ;Menu.c: 279:     JendGame();
  3723  00065E  EC7A  F00E         	call	_JendGame	;wreg free
  3724                           
  3725                           ;Menu.c: 280:     state = 22;
  3726  000662  0E16               	movlw	22
  3727  000664  6E23               	movwf	menu@state^0,c
  3728                           
  3729                           ;Menu.c: 281:    }
  3730  000666  0C16               	retlw	22
  3731  000668                     l5216:
  3732  000668  5050               	movf	_NovaTecla^0,w,c
  3733  00066A  0A80               	xorlw	128
  3734  00066C  0F7F               	addlw	-129
  3735  00066E  E309               	bnc	l5226
  3736  000670  5050               	movf	_NovaTecla^0,w,c
  3737  000672  0A80               	xorlw	128
  3738  000674  0F76               	addlw	-138
  3739  000676  E205               	bc	l5226
  3740                           
  3741                           ;Menu.c: 283:     JnovaTecla(NovaTecla);
  3742  000678  5050               	movf	_NovaTecla^0,w,c
  3743  00067A  EC1A  F00E         	call	_JnovaTecla
  3744                           
  3745                           ;Menu.c: 284:     NovaTecla = -1;
  3746  00067E  6850               	setf	_NovaTecla^0,c
  3747  000680  D75E               	goto	l5094
  3748  000682                     l5226:
  3749  000682  BE4E               	btfsc	_novaDireccio^0,7,c
  3750  000684  0012               	return	
  3751                           
  3752                           ;Menu.c: 288:     JnovaDireccio(novaDireccio);
  3753  000686  504E               	movf	_novaDireccio^0,w,c
  3754  000688  EC1E  F00E         	call	_JnovaDireccio
  3755                           
  3756                           ;Menu.c: 289:     novaDireccio = -1;
  3757  00068C  684E               	setf	_novaDireccio^0,c
  3758  00068E  D757               	goto	l5094
  3759  000690                     l5234:
  3760                           
  3761                           ;Menu.c: 294:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3762  000690  EC76  F00E         	call	_SIOHaAcabatPuntuacions	;wreg free
  3763  000694  0900               	iorlw	0
  3764  000696  B4D8               	btfsc	status,2,c
  3765  000698  0012               	return	
  3766  00069A  0E0B               	movlw	11
  3767  00069C  D796               	goto	L2
  3768  00069E                     l5240:
  3769                           
  3770                           ;Menu.c: 299:    if (LcLliure()) {
  3771  00069E  EC04  F00E         	call	_LcLliure	;wreg free
  3772  0006A2  A0D8               	btfss	status,0,c
  3773  0006A4  0012               	return	
  3774                           
  3775                           ;Menu.c: 300:     if (menuDalt == UgetNumUsuaris()){
  3776  0006A6  EC6C  F00E         	call	_UgetNumUsuaris	;wreg free
  3777  0006AA  1826               	xorwf	_menuDalt^0,w,c
  3778  0006AC  E101               	bnz	l5246
  3779                           
  3780                           ;Menu.c: 301:       menuDalt = 0;
  3781  0006AE  6A26               	clrf	_menuDalt^0,c
  3782  0006B0                     l5246:
  3783                           
  3784                           ;Menu.c: 303:     LcGotoXY(0,0);
  3785  0006B0  0E00               	movlw	0
  3786  0006B2  6E6B               	movwf	LcGotoXY@Row^0,c
  3787  0006B4  EC8F  F00C         	call	_LcGotoXY
  3788                           
  3789                           ;Menu.c: 304:     LcNewString(UgetUserName(menuDalt));
  3790  0006B8  5026               	movf	_menuDalt^0,w,c
  3791  0006BA  ECB7  F00D         	call	_UgetUserName
  3792  0006BE  D8EC               	call	PL18	;call to abstracted procedure
  3793  0006C0  ECFE  F00D         	call	_LcNewString	;wreg free
  3794                           
  3795                           ;Menu.c: 305:     menuDalt++;
  3796  0006C4  2A26               	incf	_menuDalt^0,f,c
  3797                           
  3798                           ;Menu.c: 306:     state = 24;
  3799  0006C6  0E18               	movlw	24
  3800  0006C8  6E23               	movwf	menu@state^0,c
  3801  0006CA  0C18               	retlw	24
  3802  0006CC                     l5254:
  3803                           
  3804                           ;Menu.c: 310:    if (LcLliure()) {
  3805  0006CC  EC04  F00E         	call	_LcLliure	;wreg free
  3806  0006D0  A0D8               	btfss	status,0,c
  3807  0006D2  0012               	return	
  3808                           
  3809                           ;Menu.c: 311:     if (menuDalt < UgetNumUsuaris()){
  3810  0006D4  EC6C  F00E         	call	_UgetNumUsuaris	;wreg free
  3811  0006D8  6026               	cpfslt	_menuDalt^0,c
  3812  0006DA  D00B               	goto	l592
  3813                           
  3814                           ;Menu.c: 312:       LcGotoXY(0,1);
  3815  0006DC  D8E2               	call	PL34	;call to abstracted procedure
  3816  0006DE  EC8F  F00C         	call	_LcGotoXY
  3817                           
  3818                           ;Menu.c: 313:       LcNewString(UgetUserName(menuDalt));
  3819  0006E2  5026               	movf	_menuDalt^0,w,c
  3820  0006E4  ECB7  F00D         	call	_UgetUserName
  3821  0006E8  D8D7               	call	PL18	;call to abstracted procedure
  3822  0006EA  ECFE  F00D         	call	_LcNewString	;wreg free
  3823                           
  3824                           ;Menu.c: 314:       menuDalt++;
  3825  0006EE  2A26               	incf	_menuDalt^0,f,c
  3826                           
  3827                           ;Menu.c: 315:     } else {
  3828  0006F0  D001               	goto	l5264
  3829  0006F2                     l592:
  3830                           
  3831                           ;Menu.c: 316:       menuDalt = 0;
  3832  0006F2  6A26               	clrf	_menuDalt^0,c
  3833  0006F4                     l5264:
  3834                           
  3835                           ;Menu.c: 318:     state = 25;
  3836  0006F4  0E19               	movlw	25
  3837  0006F6  6E23               	movwf	menu@state^0,c
  3838  0006F8  0C19               	retlw	25
  3839  0006FA                     l5266:
  3840                           
  3841                           ;Menu.c: 322:    if (LcLliure()) {
  3842  0006FA  EC04  F00E         	call	_LcLliure	;wreg free
  3843  0006FE  A0D8               	btfss	status,0,c
  3844  000700  0012               	return	
  3845                           
  3846                           ;Menu.c: 323:     if (menuDalt == UgetNumUsuaris()){
  3847  000702  EC6C  F00E         	call	_UgetNumUsuaris	;wreg free
  3848  000706  1826               	xorwf	_menuDalt^0,w,c
  3849  000708  E101               	bnz	l5272
  3850                           
  3851                           ;Menu.c: 324:       menuDalt = 0;
  3852  00070A  6A26               	clrf	_menuDalt^0,c
  3853  00070C                     l5272:
  3854                           
  3855                           ;Menu.c: 326:     LcGotoXY(16,0);
  3856  00070C  0E00               	movlw	0
  3857  00070E  6E6B               	movwf	LcGotoXY@Row^0,c
  3858  000710  0E10               	movlw	16
  3859  000712  EC8F  F00C         	call	_LcGotoXY
  3860                           
  3861                           ;Menu.c: 327:     LcNewString(UgetUserName(menuDalt));
  3862  000716  5026               	movf	_menuDalt^0,w,c
  3863  000718  ECB7  F00D         	call	_UgetUserName
  3864  00071C  D8BD               	call	PL18	;call to abstracted procedure
  3865  00071E  ECFE  F00D         	call	_LcNewString	;wreg free
  3866                           
  3867                           ;Menu.c: 328:     state = 26;
  3868  000722  0E1A               	movlw	26
  3869  000724  6E23               	movwf	menu@state^0,c
  3870  000726  0C1A               	retlw	26
  3871  000728                     l5278:
  3872                           
  3873                           ;Menu.c: 332:    if (LcLliure()) {
  3874  000728  EC04  F00E         	call	_LcLliure	;wreg free
  3875  00072C  A0D8               	btfss	status,0,c
  3876  00072E  0012               	return	
  3877                           
  3878                           ;Menu.c: 333:     if (menuDalt+1 < UgetNumUsuaris()){
  3879  000730  EC6C  F00E         	call	_UgetNumUsuaris	;wreg free
  3880  000734  6E72               	movwf	??_menu^0,c
  3881  000736  6A73               	clrf	(??_menu+1)^0,c
  3882  000738  5026               	movf	_menuDalt^0,w,c
  3883  00073A  6E74               	movwf	(??_menu+2)^0,c
  3884  00073C  6A75               	clrf	(??_menu+3)^0,c
  3885  00073E  2A74               	incf	(??_menu+2)^0,f,c
  3886  000740  0E00               	movlw	0
  3887  000742  2275               	addwfc	(??_menu+3)^0,f,c
  3888  000744  5072               	movf	??_menu^0,w,c
  3889  000746  5C74               	subwf	(??_menu+2)^0,w,c
  3890  000748  5075               	movf	(??_menu+3)^0,w,c
  3891  00074A  0A80               	xorlw	128
  3892  00074C  6E76               	movwf	(??_menu+4)^0,c
  3893  00074E  5073               	movf	(??_menu+1)^0,w,c
  3894  000750  0A80               	xorlw	128
  3895  000752  5876               	subwfb	(??_menu+4)^0,w,c
  3896  000754  E20B               	bc	l5286
  3897                           
  3898                           ;Menu.c: 334:       LcGotoXY(16,1);
  3899  000756  0E01               	movlw	1
  3900  000758  6E6B               	movwf	LcGotoXY@Row^0,c
  3901  00075A  0E10               	movlw	16
  3902  00075C  EC8F  F00C         	call	_LcGotoXY
  3903                           
  3904                           ;Menu.c: 335:       LcNewString(UgetUserName(menuDalt+1));
  3905  000760  2826               	incf	_menuDalt^0,w,c
  3906  000762  ECB7  F00D         	call	_UgetUserName
  3907  000766  D898               	call	PL18	;call to abstracted procedure
  3908  000768  ECFE  F00D         	call	_LcNewString	;wreg free
  3909  00076C                     l5286:
  3910                           
  3911                           ;Menu.c: 337:     state = 27;
  3912  00076C  0E1B               	movlw	27
  3913  00076E  6E23               	movwf	menu@state^0,c
  3914  000770  0C1B               	retlw	27
  3915  000772                     l5288:
  3916                           
  3917                           ;Menu.c: 341:    if (TiGetTics(timerMenu) > 1205) {
  3918  000772  5027               	movf	_timerMenu^0,w,c
  3919  000774  ECFD  F00C         	call	_TiGetTics
  3920  000778  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  3921  00077A  D008               	goto	l5292
  3922  00077C  0EB6               	movlw	182
  3923  00077E  5C63               	subwf	?_TiGetTics^0,w,c
  3924  000780  0E04               	movlw	4
  3925  000782  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  3926  000784  E303               	bnc	l5292
  3927                           
  3928                           ;Menu.c: 342:     state = 29;
  3929  000786  0E1D               	movlw	29
  3930  000788  6E23               	movwf	menu@state^0,c
  3931                           
  3932                           ;Menu.c: 343:    }
  3933  00078A  0C1D               	retlw	29
  3934  00078C                     l5292:
  3935  00078C  0E0B               	movlw	11
  3936  00078E  1850               	xorwf	_NovaTecla^0,w,c
  3937  000790  A4D8               	btfss	status,2,c
  3938  000792  0012               	return	
  3939                           
  3940                           ;Menu.c: 345:     menuDalt = 0;
  3941  000794  6A26               	clrf	_menuDalt^0,c
  3942  000796  D67A               	goto	u4550
  3943  000798                     l5298:
  3944                           
  3945                           ;Menu.c: 350:    if (pos > 15) {
  3946  000798  0E0F               	movlw	15
  3947  00079A  6424               	cpfsgt	_pos^0,c
  3948  00079C  D003               	goto	l5304
  3949                           
  3950                           ;Menu.c: 351:     LcClear();
  3951  00079E  EC46  F00D         	call	_LcClear	;wreg free
  3952  0007A2  D6DE               	goto	l5108
  3953  0007A4                     l5304:
  3954  0007A4  0E10               	movlw	16
  3955  0007A6  6024               	cpfslt	_pos^0,c
  3956  0007A8  0C10               	retlw	16
  3957                           
  3958                           ;Menu.c: 355:     TiResetTics(timerMenu);
  3959  0007AA  5027               	movf	_timerMenu^0,w,c
  3960  0007AC  EC93  F00D         	call	_TiResetTics
  3961                           
  3962                           ;Menu.c: 356:     LcScroll();
  3963  0007B0  EC5B  F00E         	call	_LcScroll	;wreg free
  3964                           
  3965                           ;Menu.c: 357:     pos++;
  3966  0007B4  2A24               	incf	_pos^0,f,c
  3967  0007B6                     l5312:
  3968                           
  3969                           ;Menu.c: 358:     state = 28;
  3970  0007B6  0E1C               	movlw	28
  3971  0007B8  6E23               	movwf	menu@state^0,c
  3972  0007BA  0C1C               	retlw	28
  3973  0007BC                     l5314:
  3974                           
  3975                           ;Menu.c: 362:    if (LcLliure()) {
  3976  0007BC  EC04  F00E         	call	_LcLliure	;wreg free
  3977  0007C0  A0D8               	btfss	status,0,c
  3978  0007C2  0012               	return	
  3979                           
  3980                           ;Menu.c: 363:     TiResetTics(timerMenu);
  3981  0007C4  5027               	movf	_timerMenu^0,w,c
  3982  0007C6  EC93  F00D         	call	_TiResetTics
  3983                           
  3984                           ;Menu.c: 364:     pos = 0;
  3985  0007CA  6A24               	clrf	_pos^0,c
  3986  0007CC  D7F4               	goto	l5312
  3987  0007CE                     l5324:
  3988  0007CE  5023               	movf	menu@state^0,w,c
  3989  0007D0  6E72               	movwf	??_menu^0,c
  3990  0007D2  6A73               	clrf	(??_menu+1)^0,c
  3991                           
  3992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3993                           ; Switch size 1, requested type "space"
  3994                           ; Number of cases is 1, Range of values is 0 to 0
  3995                           ; switch strategies available:
  3996                           ; Name         Instructions Cycles
  3997                           ; simple_byte            4     3 (average)
  3998                           ;	Chosen strategy is simple_byte
  3999  0007D4  5073               	movf	(??_menu+1)^0,w,c
  4000  0007D6  A4D8               	btfss	status,2,c
  4001  0007D8  0012               	return	
  4002                           
  4003                           ; Switch size 1, requested type "space"
  4004                           ; Number of cases is 30, Range of values is 0 to 29
  4005                           ; switch strategies available:
  4006                           ; Name         Instructions Cycles
  4007                           ; simple_byte           91    46 (average)
  4008                           ;	Chosen strategy is simple_byte
  4009  0007DA  5072               	movf	??_menu^0,w,c
  4010  0007DC  E101 D58C          	bz	l4864
  4011  0007E0  0A01               	xorlw	1	; case 1
  4012  0007E2  E101 D592          	bz	l4870
  4013  0007E6  0A03               	xorlw	3	; case 2
  4014  0007E8  E101 D59E          	bz	l4880
  4015  0007EC  0A01               	xorlw	1	; case 3
  4016  0007EE  E101 D5AB          	bz	l497
  4017  0007F2  0A07               	xorlw	7	; case 4
  4018  0007F4  E101 D5B3          	bz	l4900
  4019  0007F8  0A01               	xorlw	1	; case 5
  4020  0007FA  E101 D5BE          	bz	l4908
  4021  0007FE  0A03               	xorlw	3	; case 6
  4022  000800  E101 D5CA          	bz	l4918
  4023  000804  0A01               	xorlw	1	; case 7
  4024  000806  E101 D5DD          	bz	l4932
  4025  00080A  0A0F               	xorlw	15	; case 8
  4026  00080C  E101 D5F7          	bz	l4960
  4027  000810  0A01               	xorlw	1	; case 9
  4028  000812  E101 D60A          	bz	l4974
  4029  000816  0A03               	xorlw	3	; case 10
  4030  000818  E101 D623          	bz	l5004
  4031  00081C  0A01               	xorlw	1	; case 11
  4032  00081E  E101 D62A          	bz	l524
  4033  000822  0A07               	xorlw	7	; case 12
  4034  000824  E101 D63D          	bz	l5026
  4035  000828  0A01               	xorlw	1	; case 13
  4036  00082A  E101 D646          	bz	l5038
  4037  00082E  0A03               	xorlw	3	; case 14
  4038  000830  E101 D699          	bz	l5110
  4039  000834  0A01               	xorlw	1	; case 15
  4040  000836  E101 D6A6          	bz	l5118
  4041  00083A  0A1F               	xorlw	31	; case 16
  4042  00083C  E101 D6AF          	bz	l5122
  4043  000840  0A01               	xorlw	1	; case 17
  4044  000842  E101 D6C6          	bz	l5142
  4045  000846  0A03               	xorlw	3	; case 18
  4046  000848  E101 D6D5          	bz	l5160
  4047  00084C  0A01               	xorlw	1	; case 19
  4048  00084E  E101 D6E1          	bz	l5176
  4049  000852  0A07               	xorlw	7	; case 20
  4050  000854  E101 D6EF          	bz	l5192
  4051  000858  0A01               	xorlw	1	; case 21
  4052  00085A  E101 D6F5          	bz	l5204
  4053  00085E  0A03               	xorlw	3	; case 22
  4054  000860  E101 D716          	bz	l5234
  4055  000864  0A01               	xorlw	1	; case 23
  4056  000866  E101 D71A          	bz	l5240
  4057  00086A  0A0F               	xorlw	15	; case 24
  4058  00086C  E101 D72E          	bz	l5254
  4059  000870  0A01               	xorlw	1	; case 25
  4060  000872  E101 D742          	bz	l5266
  4061  000876  0A03               	xorlw	3	; case 26
  4062  000878  E101 D756          	bz	l5278
  4063  00087C  0A01               	xorlw	1	; case 27
  4064  00087E  E09E               	bz	l5314
  4065  000880  0A07               	xorlw	7	; case 28
  4066  000882  E101 D776          	bz	l5288
  4067  000886  0A01               	xorlw	1	; case 29
  4068  000888  E087               	bz	l5298
  4069  00088A  0012               	return		;funcret
  4070  00088C                     __end_of_menu:
  4071                           	callstack 0
  4072  00088C                     PL6:
  4073                           	callstack 24
  4074  00088C  6E66               	movwf	LcNewString@new_s^0,c
  4075  00088E  5066               	movf	LcNewString@new_s^0,w,c
  4076  000890  A4D8               	btfss	status,2,c
  4077  000892  0E02               	movlw	high __smallconst
  4078  000894  6E67               	movwf	(LcNewString@new_s+1)^0,c
  4079  000896  0012               	return	
  4080  000898                     __end_ofPL6:
  4081                           	callstack 0
  4082  000898                     PL18:
  4083                           	callstack 24
  4084  000898  C063  F066         	movff	?_UgetUserName,LcNewString@new_s
  4085  00089C  C064  F067         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4086  0008A0  0012               	return	
  4087  0008A2                     __end_ofPL18:
  4088                           	callstack 0
  4089  0008A2                     PL34:
  4090                           	callstack 24
  4091  0008A2  0E01               	movlw	1
  4092  0008A4  6E6B               	movwf	LcGotoXY@Row^0,c
  4093  0008A6  0C00               	retlw	0
  4094  0008A8                     __end_ofPL34:
  4095                           	callstack 0
  4096  0008A8                     PL72:
  4097                           	callstack 24
  4098  0008A8  6850               	setf	_NovaTecla^0,c
  4099  0008AA  684F               	setf	_novaLletra^0,c
  4100  0008AC  6A28               	clrf	_tmp^0,c
  4101  0008AE  0012               	return	
  4102  0008B0                     __end_ofPL72:
  4103                           	callstack 0
  4104  0008B0                     PL74:
  4105                           	callstack 24
  4106  0008B0  2A28               	incf	_tmp^0,f,c
  4107  0008B2  6850               	setf	_NovaTecla^0,c
  4108  0008B4  684F               	setf	_novaLletra^0,c
  4109  0008B6  0012               	return	
  4110  0008B8                     __end_ofPL74:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function _checkHoraAcabat *****************
  4114 ;; Defined at:
  4115 ;;		line 41 in file "Hora.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;		None               void
  4122 ;; Registers used:
  4123 ;;		status,0
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/1
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1
  4129 ;;      Params:         0       0       0
  4130 ;;      Locals:         0       0       0
  4131 ;;      Temps:          0       0       0
  4132 ;;      Totals:         0       0       0
  4133 ;;Total ram usage:        0 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 2
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_menu
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text22
  4144  001BD8                     __ptext22:
  4145                           	callstack 0
  4146  001BD8                     _checkHoraAcabat:
  4147                           	callstack 27
  4148                           
  4149                           ;Hora.c: 42:     return tempsAcabat;
  4150                           
  4151                           ;incstack = 0
  4152  001BD8  B677               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4153  001BDA  D002               	goto	l2150
  4154  001BDC  90D8               	bcf	status,0,c
  4155  001BDE  0012               	return	
  4156  001BE0                     l2150:
  4157  001BE0  80D8               	bsf	status,0,c
  4158  001BE2  0012               	return		;funcret
  4159  001BE4                     __end_of_checkHoraAcabat:
  4160                           	callstack 0
  4161                           
  4162 ;; *************** function _UgetUserName *****************
  4163 ;; Defined at:
  4164 ;;		line 50 in file "Usuaris.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  quin            1    wreg     unsigned char 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  quin            1    7[COMRAM] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  2    5[COMRAM] PTR unsigned char 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0, prodl, prodh
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/1
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1
  4178 ;;      Params:         2       0       0
  4179 ;;      Locals:         1       0       0
  4180 ;;      Temps:          0       0       0
  4181 ;;      Totals:         3       0       0
  4182 ;;Total ram usage:        3 bytes
  4183 ;; Hardware stack levels used: 1
  4184 ;; Hardware stack levels required when called: 2
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_menu
  4189 ;;		_motorSIO
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text23
  4194  001B6E                     __ptext23:
  4195                           	callstack 0
  4196  001B6E                     _UgetUserName:
  4197                           	callstack 27
  4198                           
  4199                           ;incstack = 0
  4200                           ;UgetUserName@quin stored from wreg
  4201  001B6E  6E65               	movwf	UgetUserName@quin^0,c
  4202                           
  4203                           ;Usuaris.c: 51:     return usuaris[quin].username;
  4204  001B70  5065               	movf	UgetUserName@quin^0,w,c
  4205  001B72  0D17               	mullw	23
  4206  001B74  0E00               	movlw	low _usuaris
  4207  001B76  24F3               	addwf	243,w,c
  4208  001B78  6E63               	movwf	?_UgetUserName^0,c
  4209  001B7A  0E01               	movlw	high _usuaris
  4210  001B7C  20F4               	addwfc	prodh,w,c
  4211  001B7E  6E64               	movwf	(?_UgetUserName+1)^0,c
  4212  001B80  0012               	return		;funcret
  4213  001B82                     __end_of_UgetUserName:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function _UgetNumUsuaris *****************
  4217 ;; Defined at:
  4218 ;;		line 53 in file "Usuaris.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      unsigned char 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/1
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1
  4232 ;;      Params:         0       0       0
  4233 ;;      Locals:         0       0       0
  4234 ;;      Temps:          0       0       0
  4235 ;;      Totals:         0       0       0
  4236 ;;Total ram usage:        0 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; Hardware stack levels required when called: 2
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_menu
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text24
  4247  001CD8                     __ptext24:
  4248                           	callstack 0
  4249  001CD8                     _UgetNumUsuaris:
  4250                           	callstack 27
  4251                           
  4252                           ;Usuaris.c: 54:     return numUsuaris;
  4253                           
  4254                           ;incstack = 0
  4255  001CD8  5022               	movf	_numUsuaris^0,w,c
  4256  001CDA  0012               	return		;funcret
  4257  001CDC                     __end_of_UgetNumUsuaris:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function _UenviaPas *****************
  4261 ;; Defined at:
  4262 ;;		line 69 in file "Usuaris.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  c               1    wreg     unsigned char 
  4265 ;;  pos             1    5[COMRAM] unsigned char 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  c               1    6[COMRAM] unsigned char 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/1
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1
  4277 ;;      Params:         1       0       0
  4278 ;;      Locals:         1       0       0
  4279 ;;      Temps:          0       0       0
  4280 ;;      Totals:         2       0       0
  4281 ;;Total ram usage:        2 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; Hardware stack levels required when called: 2
  4284 ;; This function calls:
  4285 ;;		Nothing
  4286 ;; This function is called by:
  4287 ;;		_menu
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text25
  4292  001B94                     __ptext25:
  4293                           	callstack 0
  4294  001B94                     _UenviaPas:
  4295                           	callstack 27
  4296                           
  4297                           ;incstack = 0
  4298                           ;UenviaPas@c stored from wreg
  4299  001B94  6E64               	movwf	UenviaPas@c^0,c
  4300                           
  4301                           ;Usuaris.c: 70:     tmpPassword[pos] = c;
  4302  001B96  5063               	movf	UenviaPas@pos^0,w,c
  4303  001B98  0F98               	addlw	low _tmpPassword
  4304  001B9A  6ED9               	movwf	fsr2l,c
  4305  001B9C  6ADA               	clrf	fsr2h,c
  4306  001B9E  C064  FFDF         	movff	UenviaPas@c,indf2
  4307  001BA2  0012               	return		;funcret
  4308  001BA4                     __end_of_UenviaPas:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function _UenviaChar *****************
  4312 ;; Defined at:
  4313 ;;		line 66 in file "Usuaris.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  c               1    wreg     unsigned char 
  4316 ;;  pos             1    5[COMRAM] unsigned char 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  c               1    6[COMRAM] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/1
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1
  4328 ;;      Params:         1       0       0
  4329 ;;      Locals:         1       0       0
  4330 ;;      Temps:          0       0       0
  4331 ;;      Totals:         2       0       0
  4332 ;;Total ram usage:        2 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 2
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_menu
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text26
  4343  001BA4                     __ptext26:
  4344                           	callstack 0
  4345  001BA4                     _UenviaChar:
  4346                           	callstack 27
  4347                           
  4348                           ;incstack = 0
  4349                           ;UenviaChar@c stored from wreg
  4350  001BA4  6E64               	movwf	UenviaChar@c^0,c
  4351                           
  4352                           ;Usuaris.c: 67:     tmpUsername[pos] = c;
  4353  001BA6  5063               	movf	UenviaChar@pos^0,w,c
  4354  001BA8  0F35               	addlw	low _tmpUsername
  4355  001BAA  6ED9               	movwf	fsr2l,c
  4356  001BAC  6ADA               	clrf	fsr2h,c
  4357  001BAE  C064  FFDF         	movff	UenviaChar@c,indf2
  4358  001BB2  0012               	return		;funcret
  4359  001BB4                     __end_of_UenviaChar:
  4360                           	callstack 0
  4361                           
  4362 ;; *************** function _UcheckExistsNotFinished *****************
  4363 ;; Defined at:
  4364 ;;		line 60 in file "Usuaris.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;		None               void
  4371 ;; Registers used:
  4372 ;;		status,0
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/1
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1
  4378 ;;      Params:         0       0       0
  4379 ;;      Locals:         0       0       0
  4380 ;;      Temps:          0       0       0
  4381 ;;      Totals:         0       0       0
  4382 ;;Total ram usage:        0 bytes
  4383 ;; Hardware stack levels used: 1
  4384 ;; Hardware stack levels required when called: 2
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_menu
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text27
  4393  001BE4                     __ptext27:
  4394                           	callstack 0
  4395  001BE4                     _UcheckExistsNotFinished:
  4396                           	callstack 27
  4397                           
  4398                           ;Usuaris.c: 61:     return do_check_exists;
  4399                           
  4400                           ;incstack = 0
  4401  001BE4  B878               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4402  001BE6  D002               	goto	l2112
  4403  001BE8  90D8               	bcf	status,0,c
  4404  001BEA  0012               	return	
  4405  001BEC                     l2112:
  4406  001BEC  80D8               	bsf	status,0,c
  4407  001BEE  0012               	return		;funcret
  4408  001BF0                     __end_of_UcheckExistsNotFinished:
  4409                           	callstack 0
  4410                           
  4411 ;; *************** function _UcheckExistsGetError *****************
  4412 ;; Defined at:
  4413 ;;		line 63 in file "Usuaris.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;		None
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      char 
  4420 ;; Registers used:
  4421 ;;		wreg, status,2
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/1
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1
  4427 ;;      Params:         0       0       0
  4428 ;;      Locals:         0       0       0
  4429 ;;      Temps:          0       0       0
  4430 ;;      Totals:         0       0       0
  4431 ;;Total ram usage:        0 bytes
  4432 ;; Hardware stack levels used: 1
  4433 ;; Hardware stack levels required when called: 2
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_menu
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text28
  4442  001CDC                     __ptext28:
  4443                           	callstack 0
  4444  001CDC                     _UcheckExistsGetError:
  4445                           	callstack 27
  4446                           
  4447                           ;Usuaris.c: 64:     return usuariLoguejat;
  4448                           
  4449                           ;incstack = 0
  4450  001CDC  504D               	movf	_usuariLoguejat^0,w,c
  4451  001CDE  0012               	return		;funcret
  4452  001CE0                     __end_of_UcheckExistsGetError:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function _UcheckExists *****************
  4456 ;; Defined at:
  4457 ;;		line 57 in file "Usuaris.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;		None
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		None
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/1
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1
  4471 ;;      Params:         0       0       0
  4472 ;;      Locals:         0       0       0
  4473 ;;      Temps:          0       0       0
  4474 ;;      Totals:         0       0       0
  4475 ;;Total ram usage:        0 bytes
  4476 ;; Hardware stack levels used: 1
  4477 ;; Hardware stack levels required when called: 2
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_menu
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text29
  4486  001CE0                     __ptext29:
  4487                           	callstack 0
  4488  001CE0                     _UcheckExists:
  4489                           	callstack 27
  4490                           
  4491                           ;Usuaris.c: 58:     do_check_exists = 1;
  4492                           
  4493                           ;incstack = 0
  4494  001CE0  8878               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4495  001CE2  0012               	return		;funcret
  4496  001CE4                     __end_of_UcheckExists:
  4497                           	callstack 0
  4498                           
  4499 ;; *************** function _URegister *****************
  4500 ;; Defined at:
  4501 ;;		line 77 in file "Usuaris.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;		None
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;		None
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      void 
  4508 ;; Registers used:
  4509 ;;		None
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/1
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1
  4515 ;;      Params:         0       0       0
  4516 ;;      Locals:         0       0       0
  4517 ;;      Temps:          0       0       0
  4518 ;;      Totals:         0       0       0
  4519 ;;Total ram usage:        0 bytes
  4520 ;; Hardware stack levels used: 1
  4521 ;; Hardware stack levels required when called: 2
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_menu
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           	psect	text30
  4530  001CE4                     __ptext30:
  4531                           	callstack 0
  4532  001CE4                     _URegister:
  4533                           	callstack 27
  4534                           
  4535                           ;Usuaris.c: 78:     do_register = 1;
  4536                           
  4537                           ;incstack = 0
  4538  001CE4  8678               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  4539  001CE6  0012               	return		;funcret
  4540  001CE8                     __end_of_URegister:
  4541                           	callstack 0
  4542                           
  4543 ;; *************** function _SiFerMenu *****************
  4544 ;; Defined at:
  4545 ;;		line 19 in file "GestioLCD.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;		None
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		None
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/1
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1
  4559 ;;      Params:         0       0       0
  4560 ;;      Locals:         0       0       0
  4561 ;;      Temps:          0       0       0
  4562 ;;      Totals:         0       0       0
  4563 ;;Total ram usage:        0 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 2
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_menu
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text31
  4574  001CE8                     __ptext31:
  4575                           	callstack 0
  4576  001CE8                     _SiFerMenu:
  4577                           	callstack 27
  4578                           
  4579                           ;GestioLCD.c: 20:     ferMenu = 1;
  4580                           
  4581                           ;incstack = 0
  4582  001CE8  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4583  001CEA  0012               	return		;funcret
  4584  001CEC                     __end_of_SiFerMenu:
  4585                           	callstack 0
  4586                           
  4587 ;; *************** function _SMSon *****************
  4588 ;; Defined at:
  4589 ;;		line 130 in file "Ssms.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		None
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/1
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1
  4603 ;;      Params:         0       0       0
  4604 ;;      Locals:         0       0       0
  4605 ;;      Temps:          0       0       0
  4606 ;;      Totals:         0       0       0
  4607 ;;Total ram usage:        0 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; Hardware stack levels required when called: 2
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_menu
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text32
  4618  001CAA                     __ptext32:
  4619                           	callstack 0
  4620  001CAA                     _SMSon:
  4621                           	callstack 27
  4622                           
  4623                           ;Ssms.c: 131:     setSMSon = 1;
  4624                           
  4625                           ;incstack = 0
  4626  001CAA  8C78               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4627                           
  4628                           ;Ssms.c: 132:     novaTecla = -1;
  4629  001CAC  6853               	setf	_novaTecla^0,c
  4630  001CAE  0012               	return		;funcret
  4631  001CB0                     __end_of_SMSon:
  4632                           	callstack 0
  4633                           
  4634 ;; *************** function _SMSoff *****************
  4635 ;; Defined at:
  4636 ;;		line 135 in file "Ssms.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		None
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/1
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1
  4650 ;;      Params:         0       0       0
  4651 ;;      Locals:         0       0       0
  4652 ;;      Temps:          0       0       0
  4653 ;;      Totals:         0       0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; Hardware stack levels required when called: 2
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_menu
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text33
  4665  001CB0                     __ptext33:
  4666                           	callstack 0
  4667  001CB0                     _SMSoff:
  4668                           	callstack 27
  4669                           
  4670                           ;Ssms.c: 136:     setSMSon = 0;
  4671                           
  4672                           ;incstack = 0
  4673  001CB0  9C78               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4674                           
  4675                           ;Ssms.c: 137:     novaTecla = -1;
  4676  001CB2  6853               	setf	_novaTecla^0,c
  4677  001CB4  0012               	return		;funcret
  4678  001CB6                     __end_of_SMSoff:
  4679                           	callstack 0
  4680                           
  4681 ;; *************** function _SIOHaAcabatPuntuacions *****************
  4682 ;; Defined at:
  4683 ;;		line 36 in file "SIO.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      char 
  4690 ;; Registers used:
  4691 ;;		wreg, status,2
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/1
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1
  4697 ;;      Params:         0       0       0
  4698 ;;      Locals:         0       0       0
  4699 ;;      Temps:          0       0       0
  4700 ;;      Totals:         0       0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used: 1
  4703 ;; Hardware stack levels required when called: 2
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_menu
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text34
  4712  001CEC                     __ptext34:
  4713                           	callstack 0
  4714  001CEC                     _SIOHaAcabatPuntuacions:
  4715                           	callstack 27
  4716                           
  4717                           ;SIO.c: 37:     return usuariActualSIO;
  4718                           
  4719                           ;incstack = 0
  4720  001CEC  5048               	movf	_usuariActualSIO^0,w,c
  4721  001CEE  0012               	return		;funcret
  4722  001CF0                     __end_of_SIOHaAcabatPuntuacions:
  4723                           	callstack 0
  4724                           
  4725 ;; *************** function _NoFerMenu *****************
  4726 ;; Defined at:
  4727 ;;		line 22 in file "GestioLCD.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		None
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/1
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1
  4741 ;;      Params:         0       0       0
  4742 ;;      Locals:         0       0       0
  4743 ;;      Temps:          0       0       0
  4744 ;;      Totals:         0       0       0
  4745 ;;Total ram usage:        0 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; Hardware stack levels required when called: 2
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_menu
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text35
  4756  001CF0                     __ptext35:
  4757                           	callstack 0
  4758  001CF0                     _NoFerMenu:
  4759                           	callstack 27
  4760                           
  4761                           ;GestioLCD.c: 23:     ferMenu = 0;
  4762                           
  4763                           ;incstack = 0
  4764  001CF0  9278               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4765  001CF2  0012               	return		;funcret
  4766  001CF4                     __end_of_NoFerMenu:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function _LcScroll *****************
  4770 ;; Defined at:
  4771 ;;		line 37 in file "LcTLCD.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;		None
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;		None
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		wreg, status,2, status,0, cstack
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/1
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1
  4785 ;;      Params:         0       0       0
  4786 ;;      Locals:         0       0       0
  4787 ;;      Temps:          0       0       0
  4788 ;;      Totals:         0       0       0
  4789 ;;Total ram usage:        0 bytes
  4790 ;; Hardware stack levels used: 1
  4791 ;; Hardware stack levels required when called: 4
  4792 ;; This function calls:
  4793 ;;		_CantaIR
  4794 ;; This function is called by:
  4795 ;;		_menu
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text36
  4800  001CB6                     __ptext36:
  4801                           	callstack 0
  4802  001CB6                     _LcScroll:
  4803                           	callstack 25
  4804                           
  4805                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  4806                           
  4807                           ;incstack = 0
  4808  001CB6  0E18               	movlw	24
  4809  001CB8  EF85  F00D         	goto	_CantaIR
  4810  001CBC                     __end_of_LcScroll:
  4811                           	callstack 0
  4812                           
  4813 ;; *************** function _JnovaTecla *****************
  4814 ;; Defined at:
  4815 ;;		line 16 in file "Joc.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  tecla           1    wreg     char 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  tecla           1    5[COMRAM] char 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/1
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1
  4829 ;;      Params:         0       0       0
  4830 ;;      Locals:         1       0       0
  4831 ;;      Temps:          0       0       0
  4832 ;;      Totals:         1       0       0
  4833 ;;Total ram usage:        1 bytes
  4834 ;; Hardware stack levels used: 1
  4835 ;; Hardware stack levels required when called: 2
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_menu
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text37
  4844  001C34                     __ptext37:
  4845                           	callstack 0
  4846  001C34                     _JnovaTecla:
  4847                           	callstack 27
  4848                           
  4849                           ;incstack = 0
  4850                           ;JnovaTecla@tecla stored from wreg
  4851  001C34  6E63               	movwf	JnovaTecla@tecla^0,c
  4852                           
  4853                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  4854  001C36  C063  F049         	movff	JnovaTecla@tecla,_novaTeclaJOC
  4855  001C3A  0012               	return		;funcret
  4856  001C3C                     __end_of_JnovaTecla:
  4857                           	callstack 0
  4858                           
  4859 ;; *************** function _JnovaDireccio *****************
  4860 ;; Defined at:
  4861 ;;		line 19 in file "Joc.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;  dir             1    wreg     unsigned char 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  dir             1    5[COMRAM] unsigned char 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      void 
  4868 ;; Registers used:
  4869 ;;		wreg
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/1
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1
  4875 ;;      Params:         0       0       0
  4876 ;;      Locals:         1       0       0
  4877 ;;      Temps:          0       0       0
  4878 ;;      Totals:         1       0       0
  4879 ;;Total ram usage:        1 bytes
  4880 ;; Hardware stack levels used: 1
  4881 ;; Hardware stack levels required when called: 2
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_menu
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           	psect	text38
  4890  001C3C                     __ptext38:
  4891                           	callstack 0
  4892  001C3C                     _JnovaDireccio:
  4893                           	callstack 27
  4894                           
  4895                           ;incstack = 0
  4896                           ;JnovaDireccio@dir stored from wreg
  4897  001C3C  6E63               	movwf	JnovaDireccio@dir^0,c
  4898                           
  4899                           ;Joc.c: 20:     direccioJoc = dir;
  4900  001C3E  C063  F00A         	movff	JnovaDireccio@dir,_direccioJoc
  4901  001C42  0012               	return		;funcret
  4902  001C44                     __end_of_JnovaDireccio:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function _JendGame *****************
  4906 ;; Defined at:
  4907 ;;		line 27 in file "Joc.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		None
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/1
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1
  4921 ;;      Params:         0       0       0
  4922 ;;      Locals:         0       0       0
  4923 ;;      Temps:          0       0       0
  4924 ;;      Totals:         0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used: 1
  4927 ;; Hardware stack levels required when called: 2
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_menu
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text39
  4936  001CF4                     __ptext39:
  4937                           	callstack 0
  4938  001CF4                     _JendGame:
  4939                           	callstack 27
  4940                           
  4941                           ;Joc.c: 28:     jugantJoc = 0;
  4942                           
  4943                           ;incstack = 0
  4944  001CF4  9477               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  4945  001CF6  0012               	return		;funcret
  4946  001CF8                     __end_of_JendGame:
  4947                           	callstack 0
  4948                           
  4949 ;; *************** function _JJuguem *****************
  4950 ;; Defined at:
  4951 ;;		line 13 in file "Joc.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  usuari          1    wreg     unsigned char 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  usuari          1    5[COMRAM] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/1
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1
  4965 ;;      Params:         0       0       0
  4966 ;;      Locals:         1       0       0
  4967 ;;      Temps:          0       0       0
  4968 ;;      Totals:         1       0       0
  4969 ;;Total ram usage:        1 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; Hardware stack levels required when called: 2
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_menu
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text40
  4980  001C44                     __ptext40:
  4981                           	callstack 0
  4982  001C44                     _JJuguem:
  4983                           	callstack 27
  4984                           
  4985                           ;incstack = 0
  4986                           ;JJuguem@usuari stored from wreg
  4987  001C44  6E63               	movwf	JJuguem@usuari^0,c
  4988                           
  4989                           ;Joc.c: 14:     usuariJoc = usuari;
  4990  001C46  C063  F04A         	movff	JJuguem@usuari,_usuariJoc
  4991  001C4A  0012               	return		;funcret
  4992  001C4C                     __end_of_JJuguem:
  4993                           	callstack 0
  4994                           
  4995 ;; *************** function _HActualitzaHora *****************
  4996 ;; Defined at:
  4997 ;;		line 15 in file "Hora.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5000 ;;		 -> horaTmp(4), 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/1
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1
  5012 ;;      Params:         1       0       0
  5013 ;;      Locals:         0       0       0
  5014 ;;      Temps:          0       0       0
  5015 ;;      Totals:         1       0       0
  5016 ;;Total ram usage:        1 bytes
  5017 ;; Hardware stack levels used: 1
  5018 ;; Hardware stack levels required when called: 2
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_menu
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text41
  5027  0018EA                     __ptext41:
  5028                           	callstack 0
  5029  0018EA                     _HActualitzaHora:
  5030                           	callstack 27
  5031                           
  5032                           ;Hora.c: 16:     hora[0] = nova[0];
  5033                           
  5034                           ;incstack = 0
  5035  0018EA  5063               	movf	HActualitzaHora@nova^0,w,c
  5036  0018EC  6ED9               	movwf	fsr2l,c
  5037  0018EE  6ADA               	clrf	fsr2h,c
  5038  0018F0  50DF               	movf	indf2,w,c
  5039  0018F2  6E55               	movwf	_hora^0,c
  5040                           
  5041                           ;Hora.c: 17:     hora[1] = nova[1];
  5042  0018F4  5063               	movf	HActualitzaHora@nova^0,w,c
  5043  0018F6  6ED9               	movwf	fsr2l,c
  5044  0018F8  6ADA               	clrf	fsr2h,c
  5045  0018FA  2AD9               	incf	fsr2l,f,c
  5046  0018FC  50DF               	movf	indf2,w,c
  5047  0018FE  6E56               	movwf	(_hora+1)^0,c
  5048                           
  5049                           ;Hora.c: 18:     hora[3] = nova[2];
  5050  001900  5063               	movf	HActualitzaHora@nova^0,w,c
  5051  001902  6ED9               	movwf	fsr2l,c
  5052  001904  6ADA               	clrf	fsr2h,c
  5053  001906  0E02               	movlw	2
  5054  001908  26D9               	addwf	fsr2l,f,c
  5055  00190A  50DF               	movf	indf2,w,c
  5056  00190C  6E58               	movwf	(_hora+3)^0,c
  5057                           
  5058                           ;Hora.c: 19:     hora[4] = nova[3];
  5059  00190E  5063               	movf	HActualitzaHora@nova^0,w,c
  5060  001910  6ED9               	movwf	fsr2l,c
  5061  001912  6ADA               	clrf	fsr2h,c
  5062  001914  0E03               	movlw	3
  5063  001916  26D9               	addwf	fsr2l,f,c
  5064  001918  50DF               	movf	indf2,w,c
  5065  00191A  6E59               	movwf	(_hora+4)^0,c
  5066  00191C  0012               	return		;funcret
  5067  00191E                     __end_of_HActualitzaHora:
  5068                           	callstack 0
  5069                           
  5070 ;; *************** function _GLCDMostraMenu *****************
  5071 ;; Defined at:
  5072 ;;		line 30 in file "GestioLCD.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  num             1    wreg     unsigned char 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  num             1    5[COMRAM] unsigned char 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/1
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1
  5086 ;;      Params:         0       0       0
  5087 ;;      Locals:         1       0       0
  5088 ;;      Temps:          0       0       0
  5089 ;;      Totals:         1       0       0
  5090 ;;Total ram usage:        1 bytes
  5091 ;; Hardware stack levels used: 1
  5092 ;; Hardware stack levels required when called: 2
  5093 ;; This function calls:
  5094 ;;		Nothing
  5095 ;; This function is called by:
  5096 ;;		_menu
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	text42
  5101  001BF0                     __ptext42:
  5102                           	callstack 0
  5103  001BF0                     _GLCDMostraMenu:
  5104                           	callstack 27
  5105                           
  5106                           ;incstack = 0
  5107                           ;GLCDMostraMenu@num stored from wreg
  5108  001BF0  6E63               	movwf	GLCDMostraMenu@num^0,c
  5109                           
  5110                           ;GestioLCD.c: 31:     newString = 1;
  5111  001BF2  8078               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5112                           
  5113                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5114  001BF4  C063  F018         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5115                           
  5116                           ;GestioLCD.c: 33:     ferMenu = 1;
  5117  001BF8  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5118  001BFA  0012               	return		;funcret
  5119  001BFC                     __end_of_GLCDMostraMenu:
  5120                           	callstack 0
  5121                           
  5122 ;; *************** function _init_ports *****************
  5123 ;; Defined at:
  5124 ;;		line 26 in file "main.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1
  5138 ;;      Params:         0       0       0
  5139 ;;      Locals:         0       0       0
  5140 ;;      Temps:          0       0       0
  5141 ;;      Totals:         0       0       0
  5142 ;;Total ram usage:        0 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 2
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_main
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text43
  5153  001AD0                     __ptext43:
  5154                           	callstack 0
  5155  001AD0                     _init_ports:
  5156                           	callstack 28
  5157                           
  5158                           ;incstack = 0
  5159  001AD0  0E03               	movlw	3
  5160  001AD2  6E92               	movwf	146,c	;volatile
  5161  001AD4  0EE0               	movlw	224
  5162  001AD6  6E93               	movwf	147,c	;volatile
  5163  001AD8  968A               	bcf	138,3,c	;volatile
  5164  001ADA  908A               	bcf	138,0,c	;volatile
  5165  001ADC  928A               	bcf	138,1,c	;volatile
  5166                           
  5167                           ;main.c: 49:     TRISC = 0xC0;
  5168  001ADE  0EC0               	movlw	192
  5169  001AE0  6E94               	movwf	148,c	;volatile
  5170                           
  5171                           ;main.c: 59:     TRISD = 0x8F;
  5172  001AE2  0E8F               	movlw	143
  5173  001AE4  6E95               	movwf	149,c	;volatile
  5174                           
  5175                           ;main.c: 60:     LATD = 0x00;
  5176  001AE6  6A8C               	clrf	140,c	;volatile
  5177                           
  5178                           ;main.c: 63:     EECON1bits.EEPGD = 1;
  5179  001AE8  8EA6               	bsf	166,7,c	;volsfr
  5180                           
  5181                           ;main.c: 64:     EECON1bits.CFGS = 0;
  5182  001AEA  9CA6               	bcf	166,6,c	;volsfr
  5183  001AEC  0012               	return		;funcret
  5184  001AEE                     __end_of_init_ports:
  5185                           	callstack 0
  5186                           
  5187 ;; *************** function _init_eusart *****************
  5188 ;; Defined at:
  5189 ;;		line 67 in file "main.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1
  5203 ;;      Params:         0       0       0
  5204 ;;      Locals:         0       0       0
  5205 ;;      Temps:          0       0       0
  5206 ;;      Totals:         0       0       0
  5207 ;;Total ram usage:        0 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; Hardware stack levels required when called: 2
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_main
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text44
  5218  001B42                     __ptext44:
  5219                           	callstack 0
  5220  001B42                     _init_eusart:
  5221                           	callstack 28
  5222                           
  5223                           ;main.c: 68:     TXSTA = 0x24;
  5224                           
  5225                           ;incstack = 0
  5226  001B42  0E24               	movlw	36
  5227  001B44  6EAC               	movwf	172,c	;volatile
  5228                           
  5229                           ;main.c: 69:     RCSTA = 0x90;
  5230  001B46  0E90               	movlw	144
  5231  001B48  6EAB               	movwf	171,c	;volatile
  5232                           
  5233                           ;main.c: 70:     BAUDCON = 0x08;
  5234  001B4A  0E08               	movlw	8
  5235  001B4C  6EB8               	movwf	184,c	;volatile
  5236                           
  5237                           ;main.c: 71:     SPBRGH = 0x04;
  5238  001B4E  0E04               	movlw	4
  5239  001B50  6EB0               	movwf	176,c	;volatile
  5240                           
  5241                           ;main.c: 72:     SPBRG = 0x10;
  5242  001B52  0E10               	movlw	16
  5243  001B54  6EAF               	movwf	175,c	;volatile
  5244  001B56  0C10               	retlw	16	;funcret
  5245  001B58                     __end_of_init_eusart:
  5246                           	callstack 0
  5247                           
  5248 ;; *************** function _initSIO *****************
  5249 ;; Defined at:
  5250 ;;		line 18 in file "SIO.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1
  5264 ;;      Params:         0       0       0
  5265 ;;      Locals:         0       0       0
  5266 ;;      Temps:          0       0       0
  5267 ;;      Totals:         0       0       0
  5268 ;;Total ram usage:        0 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 3
  5271 ;; This function calls:
  5272 ;;		_TiGetTimer
  5273 ;; This function is called by:
  5274 ;;		_main
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text45
  5279  001C4C                     __ptext45:
  5280                           	callstack 0
  5281  001C4C                     _initSIO:
  5282                           	callstack 27
  5283                           
  5284                           ;SIO.c: 19:     timerSIO = TiGetTimer();
  5285                           
  5286                           ;incstack = 0
  5287  001C4C  ECBF  F00C         	call	_TiGetTimer	;wreg free
  5288  001C50  6E08               	movwf	_timerSIO^0,c
  5289  001C52  0012               	return		;funcret
  5290  001C54                     __end_of_initSIO:
  5291                           	callstack 0
  5292                           
  5293 ;; *************** function _initHora *****************
  5294 ;; Defined at:
  5295 ;;		line 11 in file "Hora.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;		None
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;		None
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      void 
  5302 ;; Registers used:
  5303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1
  5309 ;;      Params:         0       0       0
  5310 ;;      Locals:         0       0       0
  5311 ;;      Temps:          0       0       0
  5312 ;;      Totals:         0       0       0
  5313 ;;Total ram usage:        0 bytes
  5314 ;; Hardware stack levels used: 1
  5315 ;; Hardware stack levels required when called: 3
  5316 ;; This function calls:
  5317 ;;		_TiGetTimer
  5318 ;; This function is called by:
  5319 ;;		_main
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text46
  5324  001C54                     __ptext46:
  5325                           	callstack 0
  5326  001C54                     _initHora:
  5327                           	callstack 27
  5328                           
  5329                           ;Hora.c: 12:     timerHora = TiGetTimer();
  5330                           
  5331                           ;incstack = 0
  5332  001C54  ECBF  F00C         	call	_TiGetTimer	;wreg free
  5333  001C58  6E0D               	movwf	_timerHora^0,c
  5334  001C5A  0012               	return		;funcret
  5335  001C5C                     __end_of_initHora:
  5336                           	callstack 0
  5337                           
  5338 ;; *************** function _initAltaveu *****************
  5339 ;; Defined at:
  5340 ;;		line 10 in file "Altaveu.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1
  5354 ;;      Params:         0       0       0
  5355 ;;      Locals:         0       0       0
  5356 ;;      Temps:          0       0       0
  5357 ;;      Totals:         0       0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used: 1
  5360 ;; Hardware stack levels required when called: 3
  5361 ;; This function calls:
  5362 ;;		_TiGetTimer
  5363 ;; This function is called by:
  5364 ;;		_main
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text47
  5369  001C5C                     __ptext47:
  5370                           	callstack 0
  5371  001C5C                     _initAltaveu:
  5372                           	callstack 27
  5373                           
  5374                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  5375                           
  5376                           ;incstack = 0
  5377  001C5C  ECBF  F00C         	call	_TiGetTimer	;wreg free
  5378  001C60  6E1C               	movwf	_timerAltaveu^0,c
  5379  001C62  0012               	return		;funcret
  5380  001C64                     __end_of_initAltaveu:
  5381                           	callstack 0
  5382                           
  5383 ;; *************** function _escriureEEPROM *****************
  5384 ;; Defined at:
  5385 ;;		line 239 in file "Usuaris.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  caca            1    5[COMRAM] unsigned char 
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      void 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1
  5399 ;;      Params:         0       0       0
  5400 ;;      Locals:         1       0       0
  5401 ;;      Temps:          0       0       0
  5402 ;;      Totals:         1       0       0
  5403 ;;Total ram usage:        1 bytes
  5404 ;; Hardware stack levels used: 1
  5405 ;; Hardware stack levels required when called: 2
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_main
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text48
  5414  0019AA                     __ptext48:
  5415                           	callstack 0
  5416  0019AA                     _escriureEEPROM:
  5417                           	callstack 28
  5418                           
  5419                           ;Usuaris.c: 240:     for(unsigned char caca = 0; caca < 160; caca++){
  5420                           
  5421                           ;incstack = 0
  5422  0019AA  6A63               	clrf	escriureEEPROM@caca^0,c
  5423  0019AC                     l758:
  5424                           
  5425                           ;Usuaris.c: 241:         EEADR = 0;
  5426  0019AC  6AA9               	clrf	169,c	;volatile
  5427                           
  5428                           ;Usuaris.c: 242:         EEDATA = 0;
  5429  0019AE  6AA8               	clrf	168,c	;volatile
  5430                           
  5431                           ;Usuaris.c: 243:         EECON1bits.EEPGD = 0;
  5432  0019B0  9EA6               	bcf	166,7,c	;volsfr
  5433                           
  5434                           ;Usuaris.c: 244:         EECON1bits.CFGS = 0;
  5435  0019B2  9CA6               	bcf	166,6,c	;volsfr
  5436                           
  5437                           ;Usuaris.c: 245:         EECON1bits.WREN = 1;
  5438  0019B4  84A6               	bsf	166,2,c	;volsfr
  5439                           
  5440                           ;Usuaris.c: 246:         INTCONbits.GIE = 0;
  5441  0019B6  9EF2               	bcf	242,7,c	;volatile
  5442                           
  5443                           ;Usuaris.c: 247:         EECON2 = 85;
  5444  0019B8  0E55               	movlw	85
  5445  0019BA  6EA7               	movwf	167,c	;volsfr
  5446                           
  5447                           ;Usuaris.c: 248:         EECON2 = 170;
  5448  0019BC  0EAA               	movlw	170
  5449  0019BE  6EA7               	movwf	167,c	;volsfr
  5450                           
  5451                           ;Usuaris.c: 249:          EECON1bits.WR = 1;
  5452  0019C0  82A6               	bsf	166,1,c	;volsfr
  5453  0019C2                     l760:
  5454                           
  5455                           ;Usuaris.c: 250:         while(EECON1bits.WR){
  5456  0019C2  B2A6               	btfsc	166,1,c	;volsfr
  5457  0019C4  D7FE               	goto	l760
  5458                           
  5459                           ;Usuaris.c: 255:     }
  5460  0019C6  2A63               	incf	escriureEEPROM@caca^0,f,c
  5461  0019C8  0E9F               	movlw	159
  5462  0019CA  6463               	cpfsgt	escriureEEPROM@caca^0,c
  5463  0019CC  D7EF               	goto	l758
  5464                           
  5465                           ;Usuaris.c: 256:    INTCONbits.GIE = 1;
  5466  0019CE  8EF2               	bsf	242,7,c	;volatile
  5467  0019D0  0C9F               	retlw	159	;funcret
  5468  0019D2                     __end_of_escriureEEPROM:
  5469                           	callstack 0
  5470                           
  5471 ;; *************** function _escriure2usuarisStruct *****************
  5472 ;; Defined at:
  5473 ;;		line 138 in file "Usuaris.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 3F/1
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1
  5487 ;;      Params:         0       0       0
  5488 ;;      Locals:         0       0       0
  5489 ;;      Temps:          0       0       0
  5490 ;;      Totals:         0       0       0
  5491 ;;Total ram usage:        0 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 2
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_main
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text49
  5502  001952                     __ptext49:
  5503                           	callstack 0
  5504  001952                     _escriure2usuarisStruct:
  5505                           	callstack 28
  5506                           
  5507                           ;Usuaris.c: 140:     usuaris[0].username[0] = '1';
  5508                           
  5509                           ;incstack = 0
  5510  001952  0E31               	movlw	49
  5511  001954  0101               	movlb	1	; () banked
  5512  001956  6F00               	movwf	_usuaris& (0+255),b
  5513                           
  5514                           ;Usuaris.c: 141:     usuaris[0].password[0] = '1';
  5515  001958  6F09               	movwf	(_usuaris+9)& (0+255),b
  5516                           
  5517                           ; BSR set to: 1
  5518                           ;Usuaris.c: 142:     usuaris[0].username[1] = '\0';
  5519  00195A  6B01               	clrf	(_usuaris+1)& (0+255),b
  5520                           
  5521                           ; BSR set to: 1
  5522                           ;Usuaris.c: 143:     usuaris[0].password[1] = '\0';
  5523  00195C  6B0A               	clrf	(_usuaris+10)& (0+255),b
  5524                           
  5525                           ;Usuaris.c: 145:     usuaris[1].username[0] = 'A';
  5526  00195E  0E41               	movlw	65
  5527  001960  6F17               	movwf	(_usuaris+23)& (0+255),b
  5528                           
  5529                           ; BSR set to: 1
  5530                           ;Usuaris.c: 146:     usuaris[1].username[1] = '\0';
  5531  001962  6B18               	clrf	(_usuaris+24)& (0+255),b
  5532                           
  5533                           ;Usuaris.c: 148:     usuaris[2].username[0] = 'D';
  5534  001964  0E44               	movlw	68
  5535  001966  6F2E               	movwf	(_usuaris+46)& (0+255),b
  5536                           
  5537                           ; BSR set to: 1
  5538                           ;Usuaris.c: 149:     usuaris[2].username[1] = '\0';
  5539  001968  6B2F               	clrf	(_usuaris+47)& (0+255),b
  5540                           
  5541                           ;Usuaris.c: 151:     usuaris[3].username[0] = 'G';
  5542  00196A  0E47               	movlw	71
  5543  00196C  6F45               	movwf	(_usuaris+69)& (0+255),b
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;Usuaris.c: 152:     usuaris[3].username[1] = '\0';
  5547  00196E  6B46               	clrf	(_usuaris+70)& (0+255),b
  5548                           
  5549                           ;Usuaris.c: 154:     usuaris[4].username[0] = 'J';
  5550  001970  0E4A               	movlw	74
  5551  001972  6F5C               	movwf	(_usuaris+92)& (0+255),b
  5552                           
  5553                           ; BSR set to: 1
  5554                           ;Usuaris.c: 155:     usuaris[4].username[1] = '\0';
  5555  001974  6B5D               	clrf	(_usuaris+93)& (0+255),b
  5556                           
  5557                           ;Usuaris.c: 156:     numUsuaris = 5;
  5558  001976  0E05               	movlw	5
  5559  001978  6E22               	movwf	_numUsuaris^0,c
  5560                           
  5561                           ;Usuaris.c: 157:     indexNextUser = 5;
  5562  00197A  6E21               	movwf	_indexNextUser^0,c
  5563                           
  5564                           ; BSR set to: 1
  5565  00197C  0C05               	retlw	5	;funcret
  5566  00197E                     __end_of_escriure2usuarisStruct:
  5567                           	callstack 0
  5568                           
  5569 ;; *************** function _UmotorUsers *****************
  5570 ;; Defined at:
  5571 ;;		line 170 in file "Usuaris.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;		None
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;		None
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/1
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1
  5585 ;;      Params:         0       0       0
  5586 ;;      Locals:         0       0       0
  5587 ;;      Temps:          2       0       0
  5588 ;;      Totals:         2       0       0
  5589 ;;Total ram usage:        2 bytes
  5590 ;; Hardware stack levels used: 1
  5591 ;; Hardware stack levels required when called: 3
  5592 ;; This function calls:
  5593 ;;		_compareStrings
  5594 ;;		_escriureCharEEPROM
  5595 ;; This function is called by:
  5596 ;;		_main
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text50
  5601  000ED8                     __ptext50:
  5602                           	callstack 0
  5603  000ED8                     _UmotorUsers:
  5604                           	callstack 27
  5605                           
  5606                           ;Usuaris.c: 171: static char state = 0;;Usuaris.c: 173:  switch(state) {
  5607                           
  5608                           ; BSR set to: 1
  5609                           ;incstack = 0
  5610  000ED8  D06F               	goto	l5458
  5611  000EDA                     l732:
  5612                           
  5613                           ;Usuaris.c: 175:    if (!do_check_exists && !do_register) {
  5614  000EDA  A878               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5615  000EDC  B678               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  5616  000EDE  D002               	goto	l733
  5617                           
  5618                           ;Usuaris.c: 177:     j = 0;
  5619  000EE0  6A1F               	clrf	_i^0,c
  5620                           
  5621                           ;Usuaris.c: 178:    }
  5622  000EE2  0012               	return	
  5623  000EE4                     l733:
  5624  000EE4  A878               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5625  000EE6  D004               	goto	l735
  5626                           
  5627                           ;Usuaris.c: 180:     usuariLoguejat = -1;
  5628  000EE8  684D               	setf	_usuariLoguejat^0,c
  5629  000EEA                     l5386:
  5630                           
  5631                           ;Usuaris.c: 181:     state = 1;
  5632  000EEA  0E01               	movlw	1
  5633  000EEC  6E1E               	movwf	UmotorUsers@state^0,c
  5634                           
  5635                           ;Usuaris.c: 182:    }
  5636  000EEE  0C01               	retlw	1
  5637  000EF0                     l735:
  5638  000EF0  A678               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  5639  000EF2  0012               	return	
  5640  000EF4                     u5180:
  5641                           
  5642                           ;Usuaris.c: 184:     state = 2;
  5643  000EF4  0E02               	movlw	2
  5644  000EF6  6E1E               	movwf	UmotorUsers@state^0,c
  5645                           
  5646                           ;Usuaris.c: 186:   break;
  5647  000EF8  0C02               	retlw	2
  5648  000EFA                     l5390:
  5649                           
  5650                           ;Usuaris.c: 189:    if (i < numUsuaris) {
  5651  000EFA  5022               	movf	_numUsuaris^0,w,c
  5652  000EFC  5C1F               	subwf	_i^0,w,c
  5653  000EFE  E213               	bc	l5400
  5654                           
  5655                           ;Usuaris.c: 190:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  5656  000F00  0E35               	movlw	low _tmpUsername
  5657  000F02  6E63               	movwf	compareStrings@a^0,c
  5658  000F04  501F               	movf	_i^0,w,c
  5659  000F06  0D17               	mullw	23
  5660  000F08  0E00               	movlw	low _usuaris
  5661  000F0A  24F3               	addwf	243,w,c
  5662  000F0C  6E64               	movwf	compareStrings@b^0,c
  5663  000F0E  0E01               	movlw	high _usuaris
  5664  000F10  20F4               	addwfc	prodh,w,c
  5665  000F12  6E65               	movwf	(compareStrings@b+1)^0,c
  5666  000F14  EC1B  F00C         	call	_compareStrings	;wreg free
  5667  000F18  0900               	iorlw	0
  5668  000F1A  E103               	bnz	l5396
  5669                           
  5670                           ;Usuaris.c: 191:      usuariLoguejat = i;
  5671  000F1C  C01F  F04D         	movff	_i,_usuariLoguejat
  5672                           
  5673                           ;Usuaris.c: 192:                     LATBbits.LATB3 = 1;
  5674  000F20  868A               	bsf	138,3,c	;volatile
  5675  000F22                     l5396:
  5676                           
  5677                           ;Usuaris.c: 197:     i++;
  5678  000F22  2A1F               	incf	_i^0,f,c
  5679  000F24  D7E2               	goto	l5386
  5680  000F26                     l5400:
  5681  000F26  5022               	movf	_numUsuaris^0,w,c
  5682  000F28  181F               	xorwf	_i^0,w,c
  5683  000F2A  A4D8               	btfss	status,2,c
  5684  000F2C  0012               	return	
  5685                           
  5686                           ;Usuaris.c: 201:     do_check_exists = 0;
  5687  000F2E  9878               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5688                           
  5689                           ;Usuaris.c: 202:     state = 0;
  5690  000F30  6A1E               	clrf	UmotorUsers@state^0,c
  5691  000F32  0012               	return	
  5692  000F34                     l5404:
  5693                           
  5694                           ;Usuaris.c: 207:    if (i != 8) {
  5695  000F34  0E08               	movlw	8
  5696  000F36  181F               	xorwf	_i^0,w,c
  5697  000F38  E00D               	bz	l5416
  5698                           
  5699                           ;Usuaris.c: 208:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  5700  000F3A  C021  F063         	movff	_indexNextUser,escriureCharEEPROM@pos
  5701  000F3E  501F               	movf	_i^0,w,c
  5702  000F40  0F35               	addlw	low _tmpUsername
  5703  000F42  D860               	call	PL42	;call to abstracted procedure
  5704  000F44  EC22  F00D         	call	_escriureCharEEPROM
  5705  000F48  2A21               	incf	_indexNextUser^0,f,c
  5706                           
  5707                           ;Usuaris.c: 209:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  5708  000F4A  501F               	movf	_i^0,w,c
  5709  000F4C  0F35               	addlw	low _tmpUsername
  5710  000F4E  D851               	call	PL22	;call to abstracted procedure
  5711                           
  5712                           ;Usuaris.c: 210:     i++;
  5713  000F50  D842               	call	PL14	;call to abstracted procedure
  5714  000F52  D7D0               	goto	u5180
  5715  000F54                     l5416:
  5716  000F54  0E08               	movlw	8
  5717  000F56  181F               	xorwf	_i^0,w,c
  5718  000F58  A4D8               	btfss	status,2,c
  5719  000F5A  0012               	return	
  5720                           
  5721                           ;Usuaris.c: 214:     i = 0;
  5722  000F5C  6A1F               	clrf	_i^0,c
  5723  000F5E                     l5420:
  5724                           
  5725                           ;Usuaris.c: 215:     state = 3;
  5726  000F5E  0E03               	movlw	3
  5727  000F60  6E1E               	movwf	UmotorUsers@state^0,c
  5728  000F62  0C03               	retlw	3
  5729  000F64                     l5422:
  5730                           
  5731                           ;Usuaris.c: 219:    if (i != 8) {
  5732  000F64  0E08               	movlw	8
  5733  000F66  181F               	xorwf	_i^0,w,c
  5734  000F68  E011               	bz	l5434
  5735                           
  5736                           ;Usuaris.c: 220:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  5737  000F6A  C021  F063         	movff	_indexNextUser,escriureCharEEPROM@pos
  5738  000F6E  501F               	movf	_i^0,w,c
  5739  000F70  0F98               	addlw	low _tmpPassword
  5740  000F72  D848               	call	PL42	;call to abstracted procedure
  5741  000F74  EC22  F00D         	call	_escriureCharEEPROM
  5742  000F78  2A21               	incf	_indexNextUser^0,f,c
  5743                           
  5744                           ;Usuaris.c: 221:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  5745  000F7A  501F               	movf	_i^0,w,c
  5746  000F7C  0F98               	addlw	low _tmpPassword
  5747  000F7E  D839               	call	PL22	;call to abstracted procedure
  5748  000F80  0E09               	movlw	9
  5749  000F82  2668               	addwf	??_UmotorUsers^0,f,c
  5750  000F84  0E00               	movlw	0
  5751  000F86  2269               	addwfc	(??_UmotorUsers+1)^0,f,c
  5752                           
  5753                           ;Usuaris.c: 222:     i++;
  5754  000F88  D826               	call	PL14	;call to abstracted procedure
  5755  000F8A  D7E9               	goto	l5420
  5756  000F8C                     l5434:
  5757  000F8C  0E08               	movlw	8
  5758  000F8E  181F               	xorwf	_i^0,w,c
  5759  000F90  A4D8               	btfss	status,2,c
  5760  000F92  0012               	return	
  5761                           
  5762                           ;Usuaris.c: 226:     do_register = 0;
  5763  000F94  9678               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5764                           
  5765                           ;Usuaris.c: 227:     indexNextUser++;
  5766  000F96  2A21               	incf	_indexNextUser^0,f,c
  5767                           
  5768                           ;Usuaris.c: 228:     if(indexNextUser == 159) indexNextUser = 16;
  5769  000F98  0E9F               	movlw	159
  5770  000F9A  1821               	xorwf	_indexNextUser^0,w,c
  5771  000F9C  E102               	bnz	l5444
  5772  000F9E  0E10               	movlw	16
  5773  000FA0  6E21               	movwf	_indexNextUser^0,c
  5774  000FA2                     l5444:
  5775                           
  5776                           ;Usuaris.c: 229:     indexNextUserStruct++;
  5777  000FA2  2A20               	incf	_indexNextUserStruct^0,f,c
  5778                           
  5779                           ;Usuaris.c: 230:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  5780  000FA4  0E08               	movlw	8
  5781  000FA6  1820               	xorwf	_indexNextUserStruct^0,w,c
  5782  000FA8  E101               	bnz	l5450
  5783  000FAA  6A20               	clrf	_indexNextUserStruct^0,c
  5784  000FAC                     l5450:
  5785                           
  5786                           ;Usuaris.c: 231:     if(numUsuaris != 8) numUsuaris++;
  5787  000FAC  0E08               	movlw	8
  5788  000FAE  1822               	xorwf	_numUsuaris^0,w,c
  5789  000FB0  E001               	bz	l5454
  5790  000FB2  2A22               	incf	_numUsuaris^0,f,c
  5791  000FB4                     l5454:
  5792                           
  5793                           ;Usuaris.c: 232:     state = 0;
  5794  000FB4  6A1E               	clrf	UmotorUsers@state^0,c
  5795  000FB6  0012               	return	
  5796  000FB8                     l5458:
  5797  000FB8  501E               	movf	UmotorUsers@state^0,w,c
  5798  000FBA  6E68               	movwf	??_UmotorUsers^0,c
  5799  000FBC  6A69               	clrf	(??_UmotorUsers+1)^0,c
  5800                           
  5801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5802                           ; Switch size 1, requested type "space"
  5803                           ; Number of cases is 1, Range of values is 0 to 0
  5804                           ; switch strategies available:
  5805                           ; Name         Instructions Cycles
  5806                           ; simple_byte            4     3 (average)
  5807                           ;	Chosen strategy is simple_byte
  5808  000FBE  5069               	movf	(??_UmotorUsers+1)^0,w,c
  5809  000FC0  A4D8               	btfss	status,2,c
  5810  000FC2  0012               	return	
  5811                           
  5812                           ; Switch size 1, requested type "space"
  5813                           ; Number of cases is 4, Range of values is 0 to 3
  5814                           ; switch strategies available:
  5815                           ; Name         Instructions Cycles
  5816                           ; simple_byte           13     7 (average)
  5817                           ;	Chosen strategy is simple_byte
  5818  000FC4  5068               	movf	??_UmotorUsers^0,w,c
  5819  000FC6  E089               	bz	l732
  5820  000FC8  0A01               	xorlw	1	; case 1
  5821  000FCA  E097               	bz	l5390
  5822  000FCC  0A03               	xorlw	3	; case 2
  5823  000FCE  E0B2               	bz	l5404
  5824  000FD0  0A01               	xorlw	1	; case 3
  5825  000FD2  E0C8               	bz	l5422
  5826  000FD4  0012               	return		;funcret
  5827  000FD6                     __end_of_UmotorUsers:
  5828                           	callstack 0
  5829  000FD6                     PL14:
  5830                           	callstack 27
  5831  000FD6  50F3               	movf	243,w,c
  5832  000FD8  2668               	addwf	??_UmotorUsers^0,f,c
  5833  000FDA  50F4               	movf	244,w,c
  5834  000FDC  2269               	addwfc	(??_UmotorUsers+1)^0,f,c
  5835  000FDE  501F               	movf	_i^0,w,c
  5836  000FE0  2468               	addwf	??_UmotorUsers^0,w,c
  5837  000FE2  6EE1               	movwf	fsr1l,c
  5838  000FE4  0E00               	movlw	0
  5839  000FE6  2069               	addwfc	(??_UmotorUsers+1)^0,w,c
  5840  000FE8  6EE2               	movwf	fsr1h,c
  5841  000FEA  CFDF FFE7          	movff	indf2,indf1
  5842  000FEE  2A1F               	incf	_i^0,f,c
  5843  000FF0  0012               	return	
  5844  000FF2                     __end_ofPL14:
  5845                           	callstack 0
  5846  000FF2                     PL22:
  5847                           	callstack 27
  5848  000FF2  6ED9               	movwf	fsr2l,c
  5849  000FF4  6ADA               	clrf	fsr2h,c
  5850  000FF6  5020               	movf	_indexNextUserStruct^0,w,c
  5851  000FF8  0D17               	mullw	23
  5852  000FFA  0E00               	movlw	low _usuaris
  5853  000FFC  6E68               	movwf	??_UmotorUsers^0,c
  5854  000FFE  0E01               	movlw	high _usuaris
  5855  001000  6E69               	movwf	(??_UmotorUsers+1)^0,c
  5856  001002  0012               	return	
  5857  001004                     __end_ofPL22:
  5858                           	callstack 0
  5859  001004                     PL42:
  5860                           	callstack 27
  5861  001004  6ED9               	movwf	fsr2l,c
  5862  001006  6ADA               	clrf	fsr2h,c
  5863  001008  50DF               	movf	indf2,w,c
  5864  00100A  0012               	return	
  5865  00100C                     __end_ofPL42:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _escriureCharEEPROM *****************
  5869 ;; Defined at:
  5870 ;;		line 80 in file "Usuaris.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  c               1    wreg     unsigned char 
  5873 ;;  pos             1    5[COMRAM] unsigned char 
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;  c               1    6[COMRAM] unsigned char 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, status,2
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/1
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1
  5885 ;;      Params:         1       0       0
  5886 ;;      Locals:         1       0       0
  5887 ;;      Temps:          0       0       0
  5888 ;;      Totals:         2       0       0
  5889 ;;Total ram usage:        2 bytes
  5890 ;; Hardware stack levels used: 1
  5891 ;; Hardware stack levels required when called: 2
  5892 ;; This function calls:
  5893 ;;		Nothing
  5894 ;; This function is called by:
  5895 ;;		_UmotorUsers
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text51
  5900  001A44                     __ptext51:
  5901                           	callstack 0
  5902  001A44                     _escriureCharEEPROM:
  5903                           	callstack 27
  5904                           
  5905                           ;incstack = 0
  5906                           ;escriureCharEEPROM@c stored from wreg
  5907  001A44  6E64               	movwf	escriureCharEEPROM@c^0,c
  5908                           
  5909                           ;Usuaris.c: 81:     EEADR = pos;
  5910  001A46  C063  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  5911                           
  5912                           ;Usuaris.c: 82:     EEDATA = c;
  5913  001A4A  C064  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  5914                           
  5915                           ;Usuaris.c: 83:     EECON1bits.EEPGD = 0;
  5916  001A4E  9EA6               	bcf	166,7,c	;volsfr
  5917                           
  5918                           ;Usuaris.c: 84:     EECON1bits.CFGS = 0;
  5919  001A50  9CA6               	bcf	166,6,c	;volsfr
  5920                           
  5921                           ;Usuaris.c: 85:     EECON1bits.WREN = 1;
  5922  001A52  84A6               	bsf	166,2,c	;volsfr
  5923                           
  5924                           ;Usuaris.c: 86:     INTCONbits.GIE = 0;
  5925  001A54  9EF2               	bcf	242,7,c	;volatile
  5926                           
  5927                           ;Usuaris.c: 87:     EECON2 = 85;
  5928  001A56  0E55               	movlw	85
  5929  001A58  6EA7               	movwf	167,c	;volsfr
  5930                           
  5931                           ;Usuaris.c: 88:     EECON2 = 170;
  5932  001A5A  0EAA               	movlw	170
  5933  001A5C  6EA7               	movwf	167,c	;volsfr
  5934                           
  5935                           ;Usuaris.c: 89:     EECON1bits.WR = 1;
  5936  001A5E  82A6               	bsf	166,1,c	;volsfr
  5937  001A60                     l691:
  5938  001A60  B2A6               	btfsc	166,1,c	;volsfr
  5939  001A62  D7FE               	goto	l691
  5940                           
  5941                           ;Usuaris.c: 91:     INTCONbits.GIE = 1;
  5942  001A64  8EF2               	bsf	242,7,c	;volatile
  5943  001A66  0012               	return		;funcret
  5944  001A68                     __end_of_escriureCharEEPROM:
  5945                           	callstack 0
  5946                           
  5947 ;; *************** function _compareStrings *****************
  5948 ;; Defined at:
  5949 ;;		line 160 in file "Usuaris.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  a               1    5[COMRAM] PTR const unsigned char 
  5952 ;;		 -> tmpUsername(9), 
  5953 ;;  b               2    6[COMRAM] PTR const unsigned char 
  5954 ;;		 -> usuaris.username(9), usuaris(184), 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      unsigned char 
  5959 ;; Registers used:
  5960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/1
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMRAM   BANK0   BANK1
  5966 ;;      Params:         3       0       0
  5967 ;;      Locals:         0       0       0
  5968 ;;      Temps:          2       0       0
  5969 ;;      Totals:         5       0       0
  5970 ;;Total ram usage:        5 bytes
  5971 ;; Hardware stack levels used: 1
  5972 ;; Hardware stack levels required when called: 2
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_UmotorUsers
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           	psect	text52
  5981  001836                     __ptext52:
  5982                           	callstack 0
  5983  001836                     _compareStrings:
  5984                           	callstack 27
  5985                           
  5986                           ;Usuaris.c: 161:     while (*a){
  5987                           
  5988                           ;incstack = 0
  5989  001836  D00A               	goto	l4322
  5990  001838                     l4316:
  5991                           
  5992                           ;Usuaris.c: 162:         if (*a != *b)break;
  5993  001838  D813               	call	PL44	;call to abstracted procedure
  5994  00183A  5063               	movf	compareStrings@a^0,w,c
  5995  00183C  6EE1               	movwf	fsr1l,c
  5996  00183E  6AE2               	clrf	fsr1h,c
  5997  001840  50DE               	movf	postinc2,w,c
  5998  001842  18E6               	xorwf	postinc1,w,c
  5999  001844  E105               	bnz	u3470
  6000                           
  6001                           ;Usuaris.c: 163:         a++;
  6002  001846  2A63               	incf	compareStrings@a^0,f,c
  6003                           
  6004                           ;Usuaris.c: 164:         b++;
  6005  001848  4A64               	infsnz	compareStrings@b^0,f,c
  6006  00184A  2A65               	incf	(compareStrings@b+1)^0,f,c
  6007  00184C                     l4322:
  6008                           
  6009                           ;Usuaris.c: 161:     while (*a){
  6010  00184C  D80E               	call	PL62	;call to abstracted procedure
  6011  00184E  E1F4               	bnz	l4316
  6012  001850                     u3470:
  6013                           
  6014                           ;Usuaris.c: 166:     return *(const unsigned char*)a - *(const unsigned char*)b;
  6015  001850  D807               	call	PL44	;call to abstracted procedure
  6016  001852  50DF               	movf	indf2,w,c
  6017  001854  6E66               	movwf	??_compareStrings^0,c
  6018  001856  D809               	call	PL62	;call to abstracted procedure
  6019  001858  6E67               	movwf	(??_compareStrings+1)^0,c
  6020  00185A  5066               	movf	??_compareStrings^0,w,c
  6021  00185C  5C67               	subwf	(??_compareStrings+1)^0,w,c
  6022  00185E  0012               	return		;funcret
  6023  001860                     __end_of_compareStrings:
  6024                           	callstack 0
  6025  001860                     PL44:
  6026                           	callstack 27
  6027  001860  C064  FFD9         	movff	compareStrings@b,fsr2l
  6028  001864  C065  FFDA         	movff	compareStrings@b+1,fsr2h
  6029  001868  0012               	return	
  6030  00186A                     __end_ofPL44:
  6031                           	callstack 0
  6032  00186A                     PL62:
  6033                           	callstack 27
  6034  00186A  5063               	movf	compareStrings@a^0,w,c
  6035  00186C  6ED9               	movwf	fsr2l,c
  6036  00186E  6ADA               	clrf	fsr2h,c
  6037  001870  50DF               	movf	indf2,w,c
  6038  001872  0012               	return	
  6039  001874                     __end_ofPL62:
  6040                           	callstack 0
  6041                           
  6042 ;; *************** function _Uinit *****************
  6043 ;; Defined at:
  6044 ;;		line 93 in file "Usuaris.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  j               1    9[COMRAM] unsigned char 
  6049 ;;  j               1    8[COMRAM] unsigned char 
  6050 ;;  i               1    7[COMRAM] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      void 
  6053 ;; Registers used:
  6054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1
  6060 ;;      Params:         0       0       0
  6061 ;;      Locals:         3       0       0
  6062 ;;      Temps:          2       0       0
  6063 ;;      Totals:         5       0       0
  6064 ;;Total ram usage:        5 bytes
  6065 ;; Hardware stack levels used: 1
  6066 ;; Hardware stack levels required when called: 2
  6067 ;; This function calls:
  6068 ;;		Nothing
  6069 ;; This function is called by:
  6070 ;;		_main
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text53
  6075  001370                     __ptext53:
  6076                           	callstack 0
  6077  001370                     _Uinit:
  6078                           	callstack 28
  6079                           
  6080                           ;Usuaris.c: 98:     EEADR = 0;
  6081                           
  6082                           ;incstack = 0
  6083  001370  6AA9               	clrf	169,c	;volatile
  6084                           
  6085                           ;Usuaris.c: 99:     EECON1bits.EEPGD = 0;
  6086  001372  9EA6               	bcf	166,7,c	;volsfr
  6087                           
  6088                           ;Usuaris.c: 100:     EECON1bits.CFGS = 0;
  6089  001374  9CA6               	bcf	166,6,c	;volsfr
  6090                           
  6091                           ;Usuaris.c: 101:     EECON1bits.RD = 1;
  6092  001376  80A6               	bsf	166,0,c	;volsfr
  6093  001378                     l697:
  6094  001378  B0A6               	btfsc	166,0,c	;volsfr
  6095  00137A  D7FE               	goto	l697
  6096                           
  6097                           ;Usuaris.c: 103:     numUsuaris = EEDATA;
  6098  00137C  CFA8 F022          	movff	4008,_numUsuaris	;volatile
  6099                           
  6100                           ;Usuaris.c: 106:     EEADR++;
  6101  001380  2AA9               	incf	169,f,c	;volatile
  6102                           
  6103                           ;Usuaris.c: 107:     EECON1bits.EEPGD = 0;
  6104  001382  9EA6               	bcf	166,7,c	;volsfr
  6105                           
  6106                           ;Usuaris.c: 108:     EECON1bits.CFGS = 0;
  6107  001384  9CA6               	bcf	166,6,c	;volsfr
  6108  001386                     l700:
  6109  001386  B0A6               	btfsc	166,0,c	;volsfr
  6110  001388  D7FE               	goto	l700
  6111                           
  6112                           ;Usuaris.c: 111:     indexNextUser = EEDATA;
  6113  00138A  CFA8 F021          	movff	4008,_indexNextUser	;volatile
  6114                           
  6115                           ;Usuaris.c: 113:     EEADR++;
  6116  00138E  2AA9               	incf	169,f,c	;volatile
  6117                           
  6118                           ;Usuaris.c: 115:     for(char i = 0; i< numUsuaris; i++){
  6119  001390  6A65               	clrf	Uinit@i^0,c
  6120  001392  D021               	goto	l2614
  6121  001394                     l704:
  6122                           
  6123                           ;Usuaris.c: 116:         for(char j = 0; j<9; j++){
  6124  001394  6A66               	clrf	Uinit@j^0,c
  6125  001396                     l705:
  6126                           
  6127                           ;Usuaris.c: 117:             EECON1bits.EEPGD = 0;
  6128  001396  9EA6               	bcf	166,7,c	;volsfr
  6129                           
  6130                           ;Usuaris.c: 118:             EECON1bits.CFGS = 0;
  6131  001398  9CA6               	bcf	166,6,c	;volsfr
  6132                           
  6133                           ;Usuaris.c: 119:             EECON1bits.RD = 1;
  6134  00139A  80A6               	bsf	166,0,c	;volsfr
  6135  00139C                     l707:
  6136  00139C  B0A6               	btfsc	166,0,c	;volsfr
  6137  00139E  D7FE               	goto	l707
  6138                           
  6139                           ;Usuaris.c: 121:             usuaris[i].username[j] = EEDATA;
  6140  0013A0  D827               	call	PL38	;call to abstracted procedure
  6141  0013A2  D82D               	call	PL52	;call to abstracted procedure
  6142  0013A4  5066               	movf	Uinit@j^0,w,c
  6143                           
  6144                           ;Usuaris.c: 122:             EEADR++;
  6145  0013A6  D81B               	call	PL24	;call to abstracted procedure
  6146                           
  6147                           ;Usuaris.c: 123:         }
  6148  0013A8  2A66               	incf	Uinit@j^0,f,c
  6149  0013AA  0E08               	movlw	8
  6150  0013AC  6466               	cpfsgt	Uinit@j^0,c
  6151  0013AE  D7F3               	goto	l705
  6152                           
  6153                           ;Usuaris.c: 124:         for(char j = 0; j<9; j++){
  6154  0013B0  6A67               	clrf	Uinit@j_1172^0,c
  6155  0013B2                     l710:
  6156                           
  6157                           ;Usuaris.c: 125:             EECON1bits.EEPGD = 0;
  6158  0013B2  9EA6               	bcf	166,7,c	;volsfr
  6159                           
  6160                           ;Usuaris.c: 126:             EECON1bits.CFGS = 0;
  6161  0013B4  9CA6               	bcf	166,6,c	;volsfr
  6162                           
  6163                           ;Usuaris.c: 127:             EECON1bits.RD = 1;
  6164  0013B6  80A6               	bsf	166,0,c	;volsfr
  6165  0013B8                     l712:
  6166  0013B8  B0A6               	btfsc	166,0,c	;volsfr
  6167  0013BA  D7FE               	goto	l712
  6168                           
  6169                           ;Usuaris.c: 129:             usuaris[i].password[j] = EEDATA;
  6170  0013BC  D819               	call	PL38	;call to abstracted procedure
  6171  0013BE  0E09               	movlw	9
  6172  0013C0  2663               	addwf	??_Uinit^0,f,c
  6173  0013C2  0E00               	movlw	0
  6174  0013C4  2264               	addwfc	(??_Uinit+1)^0,f,c
  6175  0013C6  D81B               	call	PL52	;call to abstracted procedure
  6176  0013C8  5067               	movf	Uinit@j_1172^0,w,c
  6177                           
  6178                           ;Usuaris.c: 130:             EEADR++;
  6179  0013CA  D809               	call	PL24	;call to abstracted procedure
  6180                           
  6181                           ;Usuaris.c: 131:         }
  6182  0013CC  2A67               	incf	Uinit@j_1172^0,f,c
  6183  0013CE  0E08               	movlw	8
  6184  0013D0  6467               	cpfsgt	Uinit@j_1172^0,c
  6185  0013D2  D7EF               	goto	l710
  6186                           
  6187                           ;Usuaris.c: 132:     }
  6188  0013D4  2A65               	incf	Uinit@i^0,f,c
  6189  0013D6                     l2614:
  6190  0013D6  5022               	movf	_numUsuaris^0,w,c
  6191  0013D8  5C65               	subwf	Uinit@i^0,w,c
  6192  0013DA  E3DC               	bnc	l704
  6193  0013DC  0012               	return		;funcret
  6194  0013DE                     __end_of_Uinit:
  6195                           	callstack 0
  6196  0013DE                     PL24:
  6197                           	callstack 28
  6198  0013DE  2463               	addwf	??_Uinit^0,w,c
  6199  0013E0  6ED9               	movwf	fsr2l,c
  6200  0013E2  0E00               	movlw	0
  6201  0013E4  2064               	addwfc	(??_Uinit+1)^0,w,c
  6202  0013E6  6EDA               	movwf	fsr2h,c
  6203  0013E8  CFA8 FFDF          	movff	4008,indf2	;volatile
  6204  0013EC  2AA9               	incf	169,f,c	;volatile
  6205  0013EE  0012               	return	
  6206  0013F0                     __end_ofPL24:
  6207                           	callstack 0
  6208  0013F0                     PL38:
  6209                           	callstack 28
  6210  0013F0  5065               	movf	Uinit@i^0,w,c
  6211  0013F2  0D17               	mullw	23
  6212  0013F4  0E00               	movlw	low _usuaris
  6213  0013F6  6E63               	movwf	??_Uinit^0,c
  6214  0013F8  0E01               	movlw	high _usuaris
  6215  0013FA  6E64               	movwf	(??_Uinit+1)^0,c
  6216  0013FC  0012               	return	
  6217  0013FE                     __end_ofPL38:
  6218                           	callstack 0
  6219  0013FE                     PL52:
  6220                           	callstack 28
  6221  0013FE  50F3               	movf	243,w,c
  6222  001400  2663               	addwf	??_Uinit^0,f,c
  6223  001402  50F4               	movf	244,w,c
  6224  001404  2264               	addwfc	(??_Uinit+1)^0,f,c
  6225  001406  0012               	return	
  6226  001408                     __end_ofPL52:
  6227                           	callstack 0
  6228                           
  6229 ;; *************** function _TiInitTimer *****************
  6230 ;; Defined at:
  6231 ;;		line 18 in file "TiTTimer.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;		None
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1
  6245 ;;      Params:         0       0       0
  6246 ;;      Locals:         0       0       0
  6247 ;;      Temps:          0       0       0
  6248 ;;      Totals:         0       0       0
  6249 ;;Total ram usage:        0 bytes
  6250 ;; Hardware stack levels used: 1
  6251 ;; Hardware stack levels required when called: 2
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_main
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           	psect	text54
  6260  0019D2                     __ptext54:
  6261                           	callstack 0
  6262  0019D2                     _TiInitTimer:
  6263                           	callstack 28
  6264                           
  6265                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  6266                           
  6267                           ;incstack = 0
  6268  0019D2  9ED0               	bcf	208,7,c	;volatile
  6269                           
  6270                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  6271  0019D4  8EF2               	bsf	242,7,c	;volatile
  6272                           
  6273                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  6274  0019D6  8CF2               	bsf	242,6,c	;volatile
  6275                           
  6276                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  6277  0019D8  8AF2               	bsf	242,5,c	;volatile
  6278                           
  6279                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  6280  0019DA  94F2               	bcf	242,2,c	;volatile
  6281                           
  6282                           ;TiTTimer.c: 25:     T0CON = 136;
  6283  0019DC  0E88               	movlw	136
  6284  0019DE  6ED5               	movwf	213,c	;volatile
  6285                           
  6286                           ;TiTTimer.c: 27:     TMR0H = 223;
  6287                           
  6288                           ;TiTTimer.c: 28:     TMR0L = 148;
  6289  0019E0  EC16  F00C         	call	PL48	;call to abstracted procedure
  6290                           
  6291                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  6292  0019E4  8ED5               	bsf	213,7,c	;volatile
  6293                           
  6294                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  6295  0019E6  6A29               	clrf	_counter^0,c
  6296  0019E8                     l4426:
  6297  0019E8  0E07               	movlw	7
  6298  0019EA  6429               	cpfsgt	_counter^0,c
  6299  0019EC  D001               	goto	l4430
  6300  0019EE  0C07               	retlw	7
  6301  0019F0                     l4430:
  6302                           
  6303                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  6304  0019F0  ECCE  F00C         	call	PL12	;call to abstracted procedure
  6305  0019F4  6ADF               	clrf	indf2,c
  6306                           
  6307                           ;TiTTimer.c: 33:     }
  6308  0019F6  2A29               	incf	_counter^0,f,c
  6309  0019F8  D7F7               	goto	l4426
  6310  0019FA                     __end_of_TiInitTimer:
  6311                           	callstack 0
  6312                           
  6313 ;; *************** function _TeTeclat *****************
  6314 ;; Defined at:
  6315 ;;		line 22 in file "TeTeclat.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;		None
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;		None
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      void 
  6322 ;; Registers used:
  6323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/1
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1
  6329 ;;      Params:         0       0       0
  6330 ;;      Locals:         0       0       0
  6331 ;;      Temps:          3       0       0
  6332 ;;      Totals:         3       0       0
  6333 ;;Total ram usage:        3 bytes
  6334 ;; Hardware stack levels used: 1
  6335 ;; Hardware stack levels required when called: 3
  6336 ;; This function calls:
  6337 ;;		_MsetNovaTecla
  6338 ;;		_SsetNovaTecla
  6339 ;;		_TiGetTics
  6340 ;;		_TiResetTics
  6341 ;; This function is called by:
  6342 ;;		_main
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text55
  6347  00100C                     __ptext55:
  6348                           	callstack 0
  6349  00100C                     _TeTeclat:
  6350                           	callstack 27
  6351                           
  6352                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  6353                           
  6354                           ;incstack = 0
  6355  00100C  A083               	btfss	131,0,c	;volatile
  6356  00100E  D003               	goto	u5680
  6357  001010  6A6A               	clrf	??_TeTeclat^0,c
  6358  001012  2A6A               	incf	??_TeTeclat^0,f,c
  6359  001014  D001               	goto	u5688
  6360  001016                     u5680:
  6361  001016  6A6A               	clrf	??_TeTeclat^0,c
  6362  001018                     u5688:
  6363  001018  0E01               	movlw	1
  6364  00101A  A283               	btfss	131,1,c	;volatile
  6365  00101C  0E00               	movlw	0
  6366  00101E  0D02               	mullw	2
  6367  001020  CFF3 F06B          	movff	prodl,??_TeTeclat+1
  6368  001024  0E01               	movlw	1
  6369  001026  A483               	btfss	131,2,c	;volatile
  6370  001028  0E00               	movlw	0
  6371  00102A  0D03               	mullw	3
  6372  00102C  CFF3 F06C          	movff	prodl,??_TeTeclat+2
  6373  001030  0E01               	movlw	1
  6374  001032  A683               	btfss	131,3,c	;volatile
  6375  001034  0E00               	movlw	0
  6376  001036  0D04               	mullw	4
  6377  001038  50F3               	movf	243,w,c
  6378  00103A  246C               	addwf	(??_TeTeclat+2)^0,w,c
  6379  00103C  246B               	addwf	(??_TeTeclat+1)^0,w,c
  6380  00103E  246A               	addwf	??_TeTeclat^0,w,c
  6381  001040  6E2A               	movwf	TeTeclat@files^0,c
  6382                           
  6383                           ;TeTeclat.c: 27:  switch(state) {
  6384  001042  D058               	goto	l5732
  6385  001044                     l5658:
  6386                           
  6387                           ;TeTeclat.c: 29:    if (files==0) {
  6388  001044  502A               	movf	TeTeclat@files^0,w,c
  6389  001046  E106               	bnz	l5664
  6390                           
  6391                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  6392  001048  888C               	bsf	140,4,c	;volatile
  6393                           
  6394                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  6395  00104A  9A8C               	bcf	140,5,c	;volatile
  6396                           
  6397                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  6398  00104C  9C8C               	bcf	140,6,c	;volatile
  6399                           
  6400                           ;TeTeclat.c: 33:     cols=0;
  6401  00104E  6A2B               	clrf	TeTeclat@cols^0,c
  6402  001050                     l5662:
  6403                           
  6404                           ;TeTeclat.c: 34:     state++;
  6405  001050  2A2C               	incf	TeTeclat@state^0,f,c
  6406                           
  6407                           ;TeTeclat.c: 35:    }
  6408  001052  0012               	return	
  6409  001054                     l5664:
  6410  001054  502A               	movf	TeTeclat@files^0,w,c
  6411  001056  B4D8               	btfsc	status,2,c
  6412  001058  0012               	return	
  6413                           
  6414                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  6415  00105A  502D               	movf	_tiTeclat^0,w,c
  6416  00105C  EC93  F00D         	call	_TiResetTics
  6417  001060                     l5668:
  6418                           
  6419                           ;TeTeclat.c: 38:     state = 3;
  6420  001060  0E03               	movlw	3
  6421  001062  6E2C               	movwf	TeTeclat@state^0,c
  6422  001064  0C03               	retlw	3
  6423  001066                     l5670:
  6424                           
  6425                           ;TeTeclat.c: 42:    if (files==0) {
  6426  001066  502A               	movf	TeTeclat@files^0,w,c
  6427  001068  E106               	bnz	l5678
  6428                           
  6429                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  6430  00106A  988C               	bcf	140,4,c	;volatile
  6431                           
  6432                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  6433  00106C  8A8C               	bsf	140,5,c	;volatile
  6434                           
  6435                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  6436  00106E  9C8C               	bcf	140,6,c	;volatile
  6437                           
  6438                           ;TeTeclat.c: 46:     cols=1;
  6439  001070  0E01               	movlw	1
  6440  001072  6E2B               	movwf	TeTeclat@cols^0,c
  6441  001074  D7ED               	goto	l5662
  6442  001076                     l5678:
  6443  001076  502A               	movf	TeTeclat@files^0,w,c
  6444  001078  B4D8               	btfsc	status,2,c
  6445  00107A  0012               	return	
  6446                           
  6447                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  6448  00107C  502D               	movf	_tiTeclat^0,w,c
  6449  00107E  EC93  F00D         	call	_TiResetTics
  6450  001082  D7EE               	goto	l5668
  6451  001084                     l5684:
  6452                           
  6453                           ;TeTeclat.c: 55:    if (files==0) {
  6454  001084  502A               	movf	TeTeclat@files^0,w,c
  6455  001086  E107               	bnz	l5692
  6456                           
  6457                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  6458  001088  988C               	bcf	140,4,c	;volatile
  6459                           
  6460                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  6461  00108A  9A8C               	bcf	140,5,c	;volatile
  6462                           
  6463                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  6464  00108C  8C8C               	bsf	140,6,c	;volatile
  6465                           
  6466                           ;TeTeclat.c: 59:     cols=2;
  6467  00108E  0E02               	movlw	2
  6468  001090  6E2B               	movwf	TeTeclat@cols^0,c
  6469  001092                     l5690:
  6470                           
  6471                           ;TeTeclat.c: 60:     state = 0;
  6472  001092  6A2C               	clrf	TeTeclat@state^0,c
  6473                           
  6474                           ;TeTeclat.c: 61:    }
  6475  001094  0012               	return	
  6476  001096                     l5692:
  6477  001096  502A               	movf	TeTeclat@files^0,w,c
  6478  001098  B4D8               	btfsc	status,2,c
  6479  00109A  0012               	return	
  6480                           
  6481                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  6482  00109C  502D               	movf	_tiTeclat^0,w,c
  6483  00109E  EC93  F00D         	call	_TiResetTics
  6484  0010A2  D7D6               	goto	l5662
  6485  0010A4                     l5698:
  6486                           
  6487                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  6488  0010A4  502D               	movf	_tiTeclat^0,w,c
  6489  0010A6  ECFD  F00C         	call	_TiGetTics
  6490  0010AA  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  6491  0010AC  0012               	return	
  6492  0010AE  D7D0               	goto	l5662
  6493  0010B0                     l5702:
  6494                           
  6495                           ;TeTeclat.c: 73:    if (files==0) {
  6496  0010B0  502A               	movf	TeTeclat@files^0,w,c
  6497  0010B2  E103               	bnz	l5706
  6498                           
  6499                           ;TeTeclat.c: 74:     state = 1;
  6500  0010B4  0E01               	movlw	1
  6501  0010B6  6E2C               	movwf	TeTeclat@state^0,c
  6502                           
  6503                           ;TeTeclat.c: 75:    }
  6504  0010B8  0C01               	retlw	1
  6505  0010BA                     l5706:
  6506  0010BA  502A               	movf	TeTeclat@files^0,w,c
  6507  0010BC  B4D8               	btfsc	status,2,c
  6508  0010BE  0012               	return	
  6509                           
  6510                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  6511  0010C0  D830               	call	PL20	;call to abstracted procedure
  6512  0010C2  EC36  F00E         	call	_MsetNovaTecla
  6513                           
  6514                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  6515  0010C6  D82D               	call	PL20	;call to abstracted procedure
  6516  0010C8  EC32  F00E         	call	_SsetNovaTecla
  6517  0010CC  D7C1               	goto	l5662
  6518  0010CE                     l5712:
  6519                           
  6520                           ;TeTeclat.c: 84:    if (files==0) {
  6521  0010CE  502A               	movf	TeTeclat@files^0,w,c
  6522  0010D0  A4D8               	btfss	status,2,c
  6523  0010D2  0012               	return	
  6524                           
  6525                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  6526  0010D4  502D               	movf	_tiTeclat^0,w,c
  6527  0010D6  EC93  F00D         	call	_TiResetTics
  6528  0010DA  D7BA               	goto	l5662
  6529  0010DC                     l5718:
  6530                           
  6531                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  6532  0010DC  502D               	movf	_tiTeclat^0,w,c
  6533  0010DE  ECFD  F00C         	call	_TiGetTics
  6534  0010E2  D7E3               	goto	L3
  6535  0010E4                     l5722:
  6536                           
  6537                           ;TeTeclat.c: 95:    if (files!=0) {
  6538  0010E4  502A               	movf	TeTeclat@files^0,w,c
  6539  0010E6  E003               	bz	l5726
  6540                           
  6541                           ;TeTeclat.c: 96:     state = 5;
  6542  0010E8  0E05               	movlw	5
  6543  0010EA  6E2C               	movwf	TeTeclat@state^0,c
  6544                           
  6545                           ;TeTeclat.c: 97:    }
  6546  0010EC  0C05               	retlw	5
  6547  0010EE                     l5726:
  6548  0010EE  502A               	movf	TeTeclat@files^0,w,c
  6549  0010F0  E0D0               	bz	l5690
  6550  0010F2  0012               	return	
  6551  0010F4                     l5732:
  6552  0010F4  502C               	movf	TeTeclat@state^0,w,c
  6553  0010F6  6E6A               	movwf	??_TeTeclat^0,c
  6554  0010F8  6A6B               	clrf	(??_TeTeclat+1)^0,c
  6555                           
  6556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6557                           ; Switch size 1, requested type "space"
  6558                           ; Number of cases is 1, Range of values is 0 to 0
  6559                           ; switch strategies available:
  6560                           ; Name         Instructions Cycles
  6561                           ; simple_byte            4     3 (average)
  6562                           ;	Chosen strategy is simple_byte
  6563  0010FA  506B               	movf	(??_TeTeclat+1)^0,w,c
  6564  0010FC  A4D8               	btfss	status,2,c
  6565  0010FE  0012               	return	
  6566                           
  6567                           ; Switch size 1, requested type "space"
  6568                           ; Number of cases is 8, Range of values is 0 to 7
  6569                           ; switch strategies available:
  6570                           ; Name         Instructions Cycles
  6571                           ; simple_byte           25    13 (average)
  6572                           ;	Chosen strategy is simple_byte
  6573  001100  506A               	movf	??_TeTeclat^0,w,c
  6574  001102  E0A0               	bz	l5658
  6575  001104  0A01               	xorlw	1	; case 1
  6576  001106  E0AF               	bz	l5670
  6577  001108  0A03               	xorlw	3	; case 2
  6578  00110A  E0BC               	bz	l5684
  6579  00110C  0A01               	xorlw	1	; case 3
  6580  00110E  E0CA               	bz	l5698
  6581  001110  0A07               	xorlw	7	; case 4
  6582  001112  E0CE               	bz	l5702
  6583  001114  0A01               	xorlw	1	; case 5
  6584  001116  E0DB               	bz	l5712
  6585  001118  0A03               	xorlw	3	; case 6
  6586  00111A  E0E0               	bz	l5718
  6587  00111C  0A01               	xorlw	1	; case 7
  6588  00111E  E0E2               	bz	l5722
  6589  001120  0012               	return		;funcret
  6590  001122                     __end_of_TeTeclat:
  6591                           	callstack 0
  6592  001122                     PL20:
  6593                           	callstack 27
  6594  001122  502A               	movf	TeTeclat@files^0,w,c
  6595  001124  0D03               	mullw	3
  6596  001126  50F3               	movf	243,w,c
  6597  001128  0FA7               	addlw	low (_teclaPremuda+253)
  6598  00112A  242B               	addwf	TeTeclat@cols^0,w,c
  6599  00112C  6ED9               	movwf	fsr2l,c
  6600  00112E  6ADA               	clrf	fsr2h,c
  6601  001130  50DF               	movf	indf2,w,c
  6602  001132  0012               	return	
  6603  001134                     __end_ofPL20:
  6604                           	callstack 0
  6605                           
  6606 ;; *************** function _SsetNovaTecla *****************
  6607 ;; Defined at:
  6608 ;;		line 126 in file "Ssms.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  tecla           1    wreg     unsigned char 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  tecla           1    5[COMRAM] unsigned char 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/1
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1
  6622 ;;      Params:         0       0       0
  6623 ;;      Locals:         1       0       0
  6624 ;;      Temps:          0       0       0
  6625 ;;      Totals:         1       0       0
  6626 ;;Total ram usage:        1 bytes
  6627 ;; Hardware stack levels used: 1
  6628 ;; Hardware stack levels required when called: 2
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_TeTeclat
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text56
  6637  001C64                     __ptext56:
  6638                           	callstack 0
  6639  001C64                     _SsetNovaTecla:
  6640                           	callstack 27
  6641                           
  6642                           ;incstack = 0
  6643                           ;SsetNovaTecla@tecla stored from wreg
  6644  001C64  6E63               	movwf	SsetNovaTecla@tecla^0,c
  6645                           
  6646                           ;Ssms.c: 127:     novaTecla = tecla;
  6647  001C66  C063  F053         	movff	SsetNovaTecla@tecla,_novaTecla
  6648  001C6A  0012               	return		;funcret
  6649  001C6C                     __end_of_SsetNovaTecla:
  6650                           	callstack 0
  6651                           
  6652 ;; *************** function _MsetNovaTecla *****************
  6653 ;; Defined at:
  6654 ;;		line 28 in file "Menu.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;  tecla           1    wreg     unsigned char 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  tecla           1    5[COMRAM] unsigned char 
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1    wreg      void 
  6661 ;; Registers used:
  6662 ;;		wreg
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/1
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1
  6668 ;;      Params:         0       0       0
  6669 ;;      Locals:         1       0       0
  6670 ;;      Temps:          0       0       0
  6671 ;;      Totals:         1       0       0
  6672 ;;Total ram usage:        1 bytes
  6673 ;; Hardware stack levels used: 1
  6674 ;; Hardware stack levels required when called: 2
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_TeTeclat
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text57
  6683  001C6C                     __ptext57:
  6684                           	callstack 0
  6685  001C6C                     _MsetNovaTecla:
  6686                           	callstack 27
  6687                           
  6688                           ;incstack = 0
  6689                           ;MsetNovaTecla@tecla stored from wreg
  6690  001C6C  6E63               	movwf	MsetNovaTecla@tecla^0,c
  6691                           
  6692                           ;Menu.c: 29:     NovaTecla = tecla;
  6693  001C6E  C063  F050         	movff	MsetNovaTecla@tecla,_NovaTecla
  6694  001C72  0012               	return		;funcret
  6695  001C74                     __end_of_MsetNovaTecla:
  6696                           	callstack 0
  6697                           
  6698 ;; *************** function _TeInit *****************
  6699 ;; Defined at:
  6700 ;;		line 18 in file "TeTeclat.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;		None
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;		None
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  1    wreg      void 
  6707 ;; Registers used:
  6708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1
  6714 ;;      Params:         0       0       0
  6715 ;;      Locals:         0       0       0
  6716 ;;      Temps:          0       0       0
  6717 ;;      Totals:         0       0       0
  6718 ;;Total ram usage:        0 bytes
  6719 ;; Hardware stack levels used: 1
  6720 ;; Hardware stack levels required when called: 3
  6721 ;; This function calls:
  6722 ;;		_TiGetTimer
  6723 ;; This function is called by:
  6724 ;;		_main
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text58
  6729  001C74                     __ptext58:
  6730                           	callstack 0
  6731  001C74                     _TeInit:
  6732                           	callstack 27
  6733                           
  6734                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  6735                           
  6736                           ;incstack = 0
  6737  001C74  ECBF  F00C         	call	_TiGetTimer	;wreg free
  6738  001C78  6E2D               	movwf	_tiTeclat^0,c
  6739  001C7A  0012               	return		;funcret
  6740  001C7C                     __end_of_TeInit:
  6741                           	callstack 0
  6742                           
  6743 ;; *************** function _Sinit *****************
  6744 ;; Defined at:
  6745 ;;		line 18 in file "Ssms.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;		None
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;		None
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      void 
  6752 ;; Registers used:
  6753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1
  6759 ;;      Params:         0       0       0
  6760 ;;      Locals:         0       0       0
  6761 ;;      Temps:          0       0       0
  6762 ;;      Totals:         0       0       0
  6763 ;;Total ram usage:        0 bytes
  6764 ;; Hardware stack levels used: 1
  6765 ;; Hardware stack levels required when called: 3
  6766 ;; This function calls:
  6767 ;;		_TiGetTimer
  6768 ;; This function is called by:
  6769 ;;		_main
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text59
  6774  001C7C                     __ptext59:
  6775                           	callstack 0
  6776  001C7C                     _Sinit:
  6777                           	callstack 27
  6778                           
  6779                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  6780                           
  6781                           ;incstack = 0
  6782  001C7C  ECBF  F00C         	call	_TiGetTimer	;wreg free
  6783  001C80  6E52               	movwf	_timerSMS^0,c
  6784  001C82  0012               	return		;funcret
  6785  001C84                     __end_of_Sinit:
  6786                           	callstack 0
  6787                           
  6788 ;; *************** function _SMotor *****************
  6789 ;; Defined at:
  6790 ;;		line 22 in file "Ssms.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;		None
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;		None
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      void 
  6797 ;; Registers used:
  6798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMRAM   BANK0   BANK1
  6804 ;;      Params:         0       0       0
  6805 ;;      Locals:         0       0       0
  6806 ;;      Temps:          2       0       0
  6807 ;;      Totals:         2       0       0
  6808 ;;Total ram usage:        2 bytes
  6809 ;; Hardware stack levels used: 1
  6810 ;; Hardware stack levels required when called: 3
  6811 ;; This function calls:
  6812 ;;		_MNovaLletra
  6813 ;;		_TiGetTics
  6814 ;;		_TiResetTics
  6815 ;; This function is called by:
  6816 ;;		_main
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text60
  6821  000D28                     __ptext60:
  6822                           	callstack 0
  6823  000D28                     _SMotor:
  6824                           	callstack 27
  6825                           
  6826                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  6827                           
  6828                           ;incstack = 0
  6829  000D28  D0BB               	goto	l4604
  6830  000D2A                     l4442:
  6831                           
  6832                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  6833  000D2A  2853               	incf	_novaTecla^0,w,c
  6834  000D2C  E008               	bz	l4450
  6835  000D2E  AC78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6836  000D30  D006               	goto	l4450
  6837                           
  6838                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  6839  000D32  5052               	movf	_timerSMS^0,w,c
  6840  000D34  EC93  F00D         	call	_TiResetTics
  6841                           
  6842                           ;Ssms.c: 29:     state = 3;
  6843  000D38  0E03               	movlw	3
  6844  000D3A  6E2E               	movwf	SMotor@state^0,c
  6845                           
  6846                           ;Ssms.c: 30:    }
  6847  000D3C  0C03               	retlw	3
  6848  000D3E                     l4450:
  6849  000D3E  2853               	incf	_novaTecla^0,w,c
  6850  000D40  A4D8               	btfss	status,2,c
  6851  000D42  0012               	return	
  6852  000D44  5052               	movf	_timerSMS^0,w,c
  6853  000D46  ECFD  F00C         	call	_TiGetTics
  6854  000D4A  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  6855  000D4C  0012               	return	
  6856  000D4E  D8BF               	call	PL66	;call to abstracted procedure
  6857  000D50  A0D8               	btfss	status,0,c
  6858  000D52  0012               	return	
  6859  000D54  2854               	incf	_lletraASCII^0,w,c
  6860  000D56  A4D8               	btfss	status,2,c
  6861  000D58  AC78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6862  000D5A  0012               	return	
  6863                           
  6864                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  6865  000D5C  5054               	movf	_lletraASCII^0,w,c
  6866  000D5E  EC42  F00E         	call	_MNovaLletra
  6867                           
  6868                           ;Ssms.c: 33:     lletraASCII = -1;
  6869  000D62  6854               	setf	_lletraASCII^0,c
  6870                           
  6871                           ;Ssms.c: 34:     ultimaTecla = -1;
  6872  000D64  6851               	setf	_ultimaTecla^0,c
  6873                           
  6874                           ;Ssms.c: 35:     zeroTecla = 0;
  6875  000D66  6A2F               	clrf	_zeroTecla^0,c
  6876  000D68                     l4466:
  6877                           
  6878                           ;Ssms.c: 36:     state = 0;
  6879  000D68  6A2E               	clrf	SMotor@state^0,c
  6880  000D6A  0012               	return	
  6881  000D6C                     l4468:
  6882                           
  6883                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  6884  000D6C  5051               	movf	_ultimaTecla^0,w,c
  6885  000D6E  1853               	xorwf	_novaTecla^0,w,c
  6886  000D70  E10D               	bnz	l4478
  6887  000D72  5052               	movf	_timerSMS^0,w,c
  6888  000D74  ECFD  F00C         	call	_TiGetTics
  6889  000D78  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  6890  000D7A  D002               	goto	u3640
  6891  000D7C  D8A8               	call	PL66	;call to abstracted procedure
  6892  000D7E  E206               	bc	l4478
  6893  000D80                     u3640:
  6894                           
  6895                           ;Ssms.c: 41:     novaTecla = -1;
  6896  000D80  6853               	setf	_novaTecla^0,c
  6897                           
  6898                           ;Ssms.c: 42:     sumaPulsacions++;
  6899  000D82  2A30               	incf	_sumaPulsacions^0,f,c
  6900                           
  6901                           ;Ssms.c: 43:     lletraASCII++;
  6902  000D84  2A54               	incf	_lletraASCII^0,f,c
  6903                           
  6904                           ;Ssms.c: 44:     state = 2;
  6905  000D86  0E02               	movlw	2
  6906  000D88  6E2E               	movwf	SMotor@state^0,c
  6907                           
  6908                           ;Ssms.c: 45:    }
  6909  000D8A  0C02               	retlw	2
  6910  000D8C                     l4478:
  6911  000D8C  2853               	incf	_novaTecla^0,w,c
  6912  000D8E  B4D8               	btfsc	status,2,c
  6913  000D90  0012               	return	
  6914  000D92  5051               	movf	_ultimaTecla^0,w,c
  6915  000D94  1853               	xorwf	_novaTecla^0,w,c
  6916  000D96  B4D8               	btfsc	status,2,c
  6917  000D98  0012               	return	
  6918                           
  6919                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  6920  000D9A  5054               	movf	_lletraASCII^0,w,c
  6921  000D9C  EC42  F00E         	call	_MNovaLletra
  6922                           
  6923                           ;Ssms.c: 48:     if(novaTecla != 0){
  6924  000DA0  5053               	movf	_novaTecla^0,w,c
  6925  000DA2  E007               	bz	l4490
  6926                           
  6927                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  6928  000DA4  5053               	movf	_novaTecla^0,w,c
  6929  000DA6  0F9F               	addlw	low (_lletraInici+254)
  6930  000DA8  EC02  F008         	call	PL42	;call to abstracted procedure
  6931  000DAC  6E54               	movwf	_lletraASCII^0,c
  6932                           
  6933                           ;Ssms.c: 50:       zeroTecla = 0;
  6934  000DAE  6A2F               	clrf	_zeroTecla^0,c
  6935                           
  6936                           ;Ssms.c: 51:     }else{
  6937  000DB0  D002               	goto	l4494
  6938  000DB2                     l4490:
  6939                           
  6940                           ;Ssms.c: 52:       lletraASCII = '0';
  6941  000DB2  0E30               	movlw	48
  6942  000DB4  D7FB               	goto	L4
  6943  000DB6                     l4494:
  6944                           
  6945                           ;Ssms.c: 55:     ultimaTecla = novaTecla;
  6946  000DB6  C053  F051         	movff	_novaTecla,_ultimaTecla
  6947                           
  6948                           ;Ssms.c: 56:     sumaPulsacions = 0;
  6949  000DBA  6A30               	clrf	_sumaPulsacions^0,c
  6950  000DBC                     l4498:
  6951                           
  6952                           ;Ssms.c: 57:     novaTecla = -1;
  6953  000DBC  6853               	setf	_novaTecla^0,c
  6954  000DBE  D7D4               	goto	l4466
  6955  000DC0                     l4502:
  6956                           
  6957                           ;Ssms.c: 62:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  6958  000DC0  0E07               	movlw	7
  6959  000DC2  1851               	xorwf	_ultimaTecla^0,w,c
  6960  000DC4  E008               	bz	l4510
  6961  000DC6  0E09               	movlw	9
  6962  000DC8  1851               	xorwf	_ultimaTecla^0,w,c
  6963  000DCA  E005               	bz	l4510
  6964  000DCC  5051               	movf	_ultimaTecla^0,w,c
  6965  000DCE  E003               	bz	l4510
  6966                           
  6967                           ;Ssms.c: 63:     state = 5;
  6968  000DD0  0E05               	movlw	5
  6969  000DD2  6E2E               	movwf	SMotor@state^0,c
  6970                           
  6971                           ;Ssms.c: 64:    }
  6972  000DD4  0C05               	retlw	5
  6973  000DD6                     l4510:
  6974  000DD6  0E07               	movlw	7
  6975  000DD8  1851               	xorwf	_ultimaTecla^0,w,c
  6976  000DDA  E003               	bz	u3720
  6977  000DDC  0E09               	movlw	9
  6978  000DDE  1851               	xorwf	_ultimaTecla^0,w,c
  6979  000DE0  E103               	bnz	l4516
  6980  000DE2                     u3720:
  6981                           
  6982                           ;Ssms.c: 66:     state = 6;
  6983  000DE2  0E06               	movlw	6
  6984  000DE4  6E2E               	movwf	SMotor@state^0,c
  6985                           
  6986                           ;Ssms.c: 67:    }
  6987  000DE6  0C06               	retlw	6
  6988  000DE8                     l4516:
  6989  000DE8  5051               	movf	_ultimaTecla^0,w,c
  6990  000DEA  A4D8               	btfss	status,2,c
  6991  000DEC  0012               	return	
  6992                           
  6993                           ;Ssms.c: 69:     zeroTecla++;
  6994  000DEE  2A2F               	incf	_zeroTecla^0,f,c
  6995                           
  6996                           ;Ssms.c: 70:     if(zeroTecla == 2) zeroTecla = 0;
  6997  000DF0  0E02               	movlw	2
  6998  000DF2  182F               	xorwf	_zeroTecla^0,w,c
  6999  000DF4  E101               	bnz	l4524
  7000  000DF6  6A2F               	clrf	_zeroTecla^0,c
  7001  000DF8                     l4524:
  7002                           
  7003                           ;Ssms.c: 71:     lletraASCII = arrayZero[zeroTecla];
  7004  000DF8  502F               	movf	_zeroTecla^0,w,c
  7005  000DFA  0F42               	addlw	low _arrayZero
  7006  000DFC  EC02  F008         	call	PL42	;call to abstracted procedure
  7007  000E00  D041               	goto	L5
  7008  000E02                     l4528:
  7009                           
  7010                           ;Ssms.c: 76:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  7011  000E02  5053               	movf	_novaTecla^0,w,c
  7012  000E04  0A80               	xorlw	128
  7013  000E06  0F7E               	addlw	-130
  7014  000E08  E202               	bc	u3760
  7015  000E0A  5053               	movf	_novaTecla^0,w,c
  7016  000E0C  E107               	bnz	l4536
  7017  000E0E                     u3760:
  7018  000E0E  5053               	movf	_novaTecla^0,w,c
  7019  000E10  0A80               	xorlw	128
  7020  000E12  0F76               	addlw	-138
  7021  000E14  E203               	bc	l4536
  7022                           
  7023                           ;Ssms.c: 77:     state = 1;
  7024  000E16  0E01               	movlw	1
  7025  000E18  6E2E               	movwf	SMotor@state^0,c
  7026                           
  7027                           ;Ssms.c: 78:    }
  7028  000E1A  0C01               	retlw	1
  7029  000E1C                     l4536:
  7030  000E1C  5053               	movf	_novaTecla^0,w,c
  7031  000E1E  E00B               	bz	l4548
  7032  000E20  5053               	movf	_novaTecla^0,w,c
  7033  000E22  0A80               	xorlw	128
  7034  000E24  0F7E               	addlw	-130
  7035  000E26  E207               	bc	l4548
  7036  000E28  2854               	incf	_lletraASCII^0,w,c
  7037  000E2A  E105               	bnz	l4548
  7038                           
  7039                           ;Ssms.c: 80:     MNovaLletra(novaTecla+48);
  7040  000E2C  5053               	movf	_novaTecla^0,w,c
  7041  000E2E  0F30               	addlw	48
  7042  000E30  EC42  F00E         	call	_MNovaLletra
  7043  000E34  D7C3               	goto	l4498
  7044  000E36                     l4548:
  7045  000E36  5053               	movf	_novaTecla^0,w,c
  7046  000E38  B4D8               	btfsc	status,2,c
  7047  000E3A  0012               	return	
  7048  000E3C  5053               	movf	_novaTecla^0,w,c
  7049  000E3E  0A80               	xorlw	128
  7050  000E40  0F7E               	addlw	-130
  7051  000E42  B0D8               	btfsc	status,0,c
  7052  000E44  0012               	return	
  7053  000E46  2854               	incf	_lletraASCII^0,w,c
  7054  000E48  B4D8               	btfsc	status,2,c
  7055  000E4A  0012               	return	
  7056                           
  7057                           ;Ssms.c: 85:     MNovaLletra(lletraASCII);
  7058  000E4C  5054               	movf	_lletraASCII^0,w,c
  7059  000E4E  EC42  F00E         	call	_MNovaLletra
  7060                           
  7061                           ;Ssms.c: 86:     lletraASCII = -1;
  7062  000E52  6854               	setf	_lletraASCII^0,c
  7063                           
  7064                           ;Ssms.c: 87:     state = 4;
  7065  000E54  0E04               	movlw	4
  7066  000E56  6E2E               	movwf	SMotor@state^0,c
  7067  000E58  0C04               	retlw	4
  7068  000E5A                     l4560:
  7069                           
  7070                           ;Ssms.c: 91:    MNovaLletra(novaTecla+48);
  7071  000E5A  5053               	movf	_novaTecla^0,w,c
  7072  000E5C  0F30               	addlw	48
  7073  000E5E  EC42  F00E         	call	_MNovaLletra
  7074  000E62  D7AC               	goto	l4498
  7075  000E64                     l4566:
  7076                           
  7077                           ;Ssms.c: 96:    if (sumaPulsacions == 4) {
  7078  000E64  0E04               	movlw	4
  7079  000E66  1830               	xorwf	_sumaPulsacions^0,w,c
  7080  000E68  E108               	bnz	l4574
  7081  000E6A                     u3840:
  7082                           
  7083                           ;Ssms.c: 97:     lletraASCII = lletraInici[ultimaTecla-2];
  7084  000E6A  5051               	movf	_ultimaTecla^0,w,c
  7085  000E6C  0F9F               	addlw	low (_lletraInici+254)
  7086  000E6E  6ED9               	movwf	fsr2l,c
  7087  000E70  6ADA               	clrf	fsr2h,c
  7088  000E72  50DF               	movf	indf2,w,c
  7089  000E74  6E54               	movwf	_lletraASCII^0,c
  7090                           
  7091                           ;Ssms.c: 98:     sumaPulsacions = 0;
  7092  000E76  6A30               	clrf	_sumaPulsacions^0,c
  7093  000E78  D777               	goto	l4466
  7094  000E7A                     l4574:
  7095  000E7A  0E03               	movlw	3
  7096  000E7C  1830               	xorwf	_sumaPulsacions^0,w,c
  7097  000E7E  E104               	bnz	l4580
  7098  000E80                     u3850:
  7099                           
  7100                           ;Ssms.c: 102:     lletraASCII = ultimaTecla+48;
  7101  000E80  5051               	movf	_ultimaTecla^0,w,c
  7102  000E82  0F30               	addlw	48
  7103  000E84                     L5:
  7104  000E84  6E54               	movwf	_lletraASCII^0,c
  7105  000E86  D770               	goto	l4466
  7106  000E88                     l4580:
  7107  000E88  0E03               	movlw	3
  7108  000E8A  6030               	cpfslt	_sumaPulsacions^0,c
  7109  000E8C  0012               	return	
  7110  000E8E  D76C               	goto	l4466
  7111  000E90                     l4584:
  7112                           
  7113                           ;Ssms.c: 110:    if (sumaPulsacions == 4) {
  7114  000E90  0E04               	movlw	4
  7115  000E92  1830               	xorwf	_sumaPulsacions^0,w,c
  7116  000E94  E0F5               	bz	u3850
  7117  000E96  0E05               	movlw	5
  7118  000E98  1830               	xorwf	_sumaPulsacions^0,w,c
  7119  000E9A  E0E7               	bz	u3840
  7120  000E9C  0E04               	movlw	4
  7121  000E9E  D7F5               	goto	L6
  7122  000EA0                     l4604:
  7123  000EA0  502E               	movf	SMotor@state^0,w,c
  7124  000EA2  6E6A               	movwf	??_SMotor^0,c
  7125  000EA4  6A6B               	clrf	(??_SMotor+1)^0,c
  7126                           
  7127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7128                           ; Switch size 1, requested type "space"
  7129                           ; Number of cases is 1, Range of values is 0 to 0
  7130                           ; switch strategies available:
  7131                           ; Name         Instructions Cycles
  7132                           ; simple_byte            4     3 (average)
  7133                           ;	Chosen strategy is simple_byte
  7134  000EA6  506B               	movf	(??_SMotor+1)^0,w,c
  7135  000EA8  A4D8               	btfss	status,2,c
  7136  000EAA  0012               	return	
  7137                           
  7138                           ; Switch size 1, requested type "space"
  7139                           ; Number of cases is 7, Range of values is 0 to 6
  7140                           ; switch strategies available:
  7141                           ; Name         Instructions Cycles
  7142                           ; simple_byte           22    12 (average)
  7143                           ;	Chosen strategy is simple_byte
  7144  000EAC  506A               	movf	??_SMotor^0,w,c
  7145  000EAE  E101 D73C          	bz	l4442
  7146  000EB2  0A01               	xorlw	1	; case 1
  7147  000EB4  E101 D75A          	bz	l4468
  7148  000EB8  0A03               	xorlw	3	; case 2
  7149  000EBA  E082               	bz	l4502
  7150  000EBC  0A01               	xorlw	1	; case 3
  7151  000EBE  E0A1               	bz	l4528
  7152  000EC0  0A07               	xorlw	7	; case 4
  7153  000EC2  E0CB               	bz	l4560
  7154  000EC4  0A01               	xorlw	1	; case 5
  7155  000EC6  E0CE               	bz	l4566
  7156  000EC8  0A03               	xorlw	3	; case 6
  7157  000ECA  E0E2               	bz	l4584
  7158  000ECC  0012               	return		;funcret
  7159  000ECE                     __end_of_SMotor:
  7160                           	callstack 0
  7161  000ECE                     PL66:
  7162                           	callstack 27
  7163  000ECE  0E5A               	movlw	90
  7164  000ED0  5C63               	subwf	?_TiGetTics^0,w,c
  7165  000ED2  0E02               	movlw	2
  7166  000ED4  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  7167  000ED6  0012               	return	
  7168  000ED8                     __end_ofPL66:
  7169                           	callstack 0
  7170                           
  7171 ;; *************** function _MNovaLletra *****************
  7172 ;; Defined at:
  7173 ;;		line 32 in file "Menu.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  lletra          1    wreg     unsigned char 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;  lletra          1    5[COMRAM] unsigned char 
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      void 
  7180 ;; Registers used:
  7181 ;;		wreg
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMRAM   BANK0   BANK1
  7187 ;;      Params:         0       0       0
  7188 ;;      Locals:         1       0       0
  7189 ;;      Temps:          0       0       0
  7190 ;;      Totals:         1       0       0
  7191 ;;Total ram usage:        1 bytes
  7192 ;; Hardware stack levels used: 1
  7193 ;; Hardware stack levels required when called: 2
  7194 ;; This function calls:
  7195 ;;		Nothing
  7196 ;; This function is called by:
  7197 ;;		_SMotor
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text61
  7202  001C84                     __ptext61:
  7203                           	callstack 0
  7204  001C84                     _MNovaLletra:
  7205                           	callstack 27
  7206                           
  7207                           ;incstack = 0
  7208                           ;MNovaLletra@lletra stored from wreg
  7209  001C84  6E63               	movwf	MNovaLletra@lletra^0,c
  7210                           
  7211                           ;Menu.c: 33:     novaLletra = lletra;
  7212  001C86  C063  F04F         	movff	MNovaLletra@lletra,_novaLletra
  7213  001C8A  0012               	return		;funcret
  7214  001C8C                     __end_of_MNovaLletra:
  7215                           	callstack 0
  7216                           
  7217 ;; *************** function _Minit *****************
  7218 ;; Defined at:
  7219 ;;		line 25 in file "Menu.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;		None
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;		None
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  1    wreg      void 
  7226 ;; Registers used:
  7227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMRAM   BANK0   BANK1
  7233 ;;      Params:         0       0       0
  7234 ;;      Locals:         0       0       0
  7235 ;;      Temps:          0       0       0
  7236 ;;      Totals:         0       0       0
  7237 ;;Total ram usage:        0 bytes
  7238 ;; Hardware stack levels used: 1
  7239 ;; Hardware stack levels required when called: 3
  7240 ;; This function calls:
  7241 ;;		_TiGetTimer
  7242 ;; This function is called by:
  7243 ;;		_main
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text62
  7248  001C8C                     __ptext62:
  7249                           	callstack 0
  7250  001C8C                     _Minit:
  7251                           	callstack 27
  7252                           
  7253                           ;Menu.c: 26:     timerMenu = TiGetTimer();
  7254                           
  7255                           ;incstack = 0
  7256  001C8C  ECBF  F00C         	call	_TiGetTimer	;wreg free
  7257  001C90  6E27               	movwf	_timerMenu^0,c
  7258  001C92  0012               	return		;funcret
  7259  001C94                     __end_of_Minit:
  7260                           	callstack 0
  7261                           
  7262 ;; *************** function _LcLCD *****************
  7263 ;; Defined at:
  7264 ;;		line 246 in file "LcTLCD.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;		None
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/1
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1
  7278 ;;      Params:         0       0       0
  7279 ;;      Locals:         0       0       0
  7280 ;;      Temps:          0       0       0
  7281 ;;      Totals:         0       0       0
  7282 ;;Total ram usage:        0 bytes
  7283 ;; Hardware stack levels used: 1
  7284 ;; Hardware stack levels required when called: 6
  7285 ;; This function calls:
  7286 ;;		_LcPutChar
  7287 ;; This function is called by:
  7288 ;;		_main
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text63
  7293  001756                     __ptext63:
  7294                           	callstack 0
  7295  001756                     _LcLCD:
  7296                           	callstack 24
  7297                           
  7298                           ;LcTLCD.c: 247:     if(nou_s == 1){
  7299                           
  7300                           ;incstack = 0
  7301  001756  AE78               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7302  001758  0012               	return	
  7303                           
  7304                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  7305  00175A  D818               	call	PL32	;call to abstracted procedure
  7306  00175C  64F7               	cpfsgt	tblptrh,c
  7307  00175E  D003               	bra	u3507
  7308  001760  0008               	tblrd		*
  7309  001762  50F5               	movf	tablat,w,c
  7310  001764  D001               	bra	u3500
  7311  001766                     u3507:
  7312  001766  D819               	call	PL40	;call to abstracted procedure
  7313  001768                     u3500:
  7314  001768  ECD3  F00B         	call	_LcPutChar
  7315                           
  7316                           ;LcTLCD.c: 249:         s_ptr++;
  7317  00176C  4A05               	infsnz	_s_ptr^0,f,c
  7318  00176E  2A06               	incf	(_s_ptr+1)^0,f,c
  7319                           
  7320                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  7321  001770  D80D               	call	PL32	;call to abstracted procedure
  7322  001772  64F7               	cpfsgt	tblptrh,c
  7323  001774  D003               	bra	u3517
  7324  001776  0008               	tblrd		*
  7325  001778  50F5               	movf	tablat,w,c
  7326  00177A  D001               	bra	u3510
  7327  00177C                     u3517:
  7328  00177C  D80E               	call	PL40	;call to abstracted procedure
  7329  00177E                     u3510:
  7330  00177E  0900               	iorlw	0
  7331  001780  A4D8               	btfss	status,2,c
  7332  001782  0012               	return	
  7333                           
  7334                           ;LcTLCD.c: 251:             nou_s = 0;
  7335  001784  9E78               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7336                           
  7337                           ;LcTLCD.c: 252:             s_ptr=0;
  7338  001786  6A05               	clrf	_s_ptr^0,c
  7339  001788  6A06               	clrf	(_s_ptr+1)^0,c
  7340  00178A  0012               	return		;funcret
  7341  00178C                     __end_of_LcLCD:
  7342                           	callstack 0
  7343  00178C                     PL32:
  7344                           	callstack 24
  7345  00178C  C005  FFF6         	movff	_s_ptr,tblptrl
  7346  001790  C006  FFF7         	movff	_s_ptr+1,tblptrh
  7347  001794  6AF8               	clrf	tblptru,c
  7348  001796  0E01               	movlw	(high __ramtop+-1)
  7349  001798  0012               	return	
  7350  00179A                     __end_ofPL32:
  7351                           	callstack 0
  7352  00179A                     PL40:
  7353                           	callstack 24
  7354  00179A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7355  00179E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7356  0017A2  50E7               	movf	indf1,w,c
  7357  0017A4  0012               	return	
  7358  0017A6                     __end_ofPL40:
  7359                           	callstack 0
  7360                           
  7361 ;; *************** function _LcInit *****************
  7362 ;; Defined at:
  7363 ;;		line 41 in file "LcTLCD.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  rows            1    wreg     unsigned char 
  7366 ;;  columns         1   16[COMRAM] unsigned char 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  rows            1   17[COMRAM] unsigned char 
  7369 ;;  i               2   18[COMRAM] int 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  1    wreg      void 
  7372 ;; Registers used:
  7373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1
  7379 ;;      Params:         1       0       0
  7380 ;;      Locals:         3       0       0
  7381 ;;      Temps:          0       0       0
  7382 ;;      Totals:         4       0       0
  7383 ;;Total ram usage:        4 bytes
  7384 ;; Hardware stack levels used: 1
  7385 ;; Hardware stack levels required when called: 4
  7386 ;; This function calls:
  7387 ;;		_CantaIR
  7388 ;;		_EscriuPrimeraOrdre
  7389 ;;		_Espera
  7390 ;;		_TiGetTimer
  7391 ;;		_WaitForBusy
  7392 ;; This function is called by:
  7393 ;;		_main
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           	psect	text64
  7398  00120A                     __ptext64:
  7399                           	callstack 0
  7400  00120A                     _LcInit:
  7401                           	callstack 26
  7402                           
  7403                           ;incstack = 0
  7404                           ;LcInit@rows stored from wreg
  7405  00120A  6E6F               	movwf	LcInit@rows^0,c
  7406                           
  7407                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  7408  00120C  ECBF  F00C         	call	_TiGetTimer	;wreg free
  7409  001210  6E31               	movwf	_Timer^0,c
  7410                           
  7411                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  7412  001212  C06F  F034         	movff	LcInit@rows,_Rows
  7413                           
  7414                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  7415  001216  6A32               	clrf	_ColumnAct^0,c
  7416  001218  6A33               	clrf	_RowAct^0,c
  7417                           
  7418                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  7419  00121A  9894               	bcf	148,4,c	;volatile
  7420  00121C  9E95               	bcf	149,7,c	;volatile
  7421  00121E  9A94               	bcf	148,5,c	;volatile
  7422                           
  7423                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  7424  001220  6A70               	clrf	LcInit@i^0,c
  7425  001222  6A71               	clrf	(LcInit@i+1)^0,c
  7426  001224                     l4350:
  7427                           
  7428                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  7429  001224  6A6B               	clrf	(Espera@ms+1)^0,c
  7430  001226  0E64               	movlw	100
  7431  001228  6E6A               	movwf	Espera@ms^0,c
  7432  00122A  5031               	movf	_Timer^0,w,c
  7433  00122C  EC57  F00D         	call	_Espera
  7434                           
  7435                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  7436  001230  0E03               	movlw	3
  7437  001232  EC90  F00A         	call	_EscriuPrimeraOrdre
  7438                           
  7439                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  7440  001236  6A6B               	clrf	(Espera@ms+1)^0,c
  7441  001238  0E05               	movlw	5
  7442  00123A  6E6A               	movwf	Espera@ms^0,c
  7443  00123C  5031               	movf	_Timer^0,w,c
  7444  00123E  EC57  F00D         	call	_Espera
  7445                           
  7446                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  7447  001242  0E03               	movlw	3
  7448  001244  EC90  F00A         	call	_EscriuPrimeraOrdre
  7449                           
  7450                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  7451  001248  D83A               	call	PL56	;call to abstracted procedure
  7452  00124A  EC57  F00D         	call	_Espera
  7453                           
  7454                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  7455  00124E  0E03               	movlw	3
  7456  001250  EC90  F00A         	call	_EscriuPrimeraOrdre
  7457                           
  7458                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  7459  001254  D834               	call	PL56	;call to abstracted procedure
  7460  001256  EC57  F00D         	call	_Espera
  7461                           
  7462                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  7463  00125A  0E02               	movlw	2
  7464  00125C  EC90  F00A         	call	_EscriuPrimeraOrdre
  7465                           
  7466                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  7467  001260  6A6B               	clrf	(Espera@ms+1)^0,c
  7468  001262  0E04               	movlw	4
  7469  001264  6E6A               	movwf	Espera@ms^0,c
  7470  001266  5031               	movf	_Timer^0,w,c
  7471  001268  EC57  F00D         	call	_Espera
  7472                           
  7473                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  7474  00126C  0E28               	movlw	40
  7475  00126E  EC85  F00D         	call	_CantaIR
  7476                           
  7477                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  7478  001272  EC3A  F00C         	call	_WaitForBusy	;wreg free
  7479  001276  0E08               	movlw	8
  7480  001278  EC85  F00D         	call	_CantaIR
  7481                           
  7482                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  7483  00127C  EC3A  F00C         	call	_WaitForBusy	;wreg free
  7484  001280  0E01               	movlw	1
  7485  001282  EC85  F00D         	call	_CantaIR
  7486                           
  7487                           ;LcTLCD.c: 71:   Espera(Timer,3);
  7488  001286  EC52  F00D         	call	PL54	;call to abstracted procedure
  7489  00128A  EC57  F00D         	call	_Espera
  7490                           
  7491                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  7492  00128E  EC3A  F00C         	call	_WaitForBusy	;wreg free
  7493  001292  0E06               	movlw	6
  7494  001294  EC85  F00D         	call	_CantaIR
  7495                           
  7496                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  7497  001298  EC3A  F00C         	call	_WaitForBusy	;wreg free
  7498  00129C  0E0F               	movlw	15
  7499  00129E  EC85  F00D         	call	_CantaIR
  7500                           
  7501                           ;LcTLCD.c: 74:  }
  7502  0012A2  4A70               	infsnz	LcInit@i^0,f,c
  7503  0012A4  2A71               	incf	(LcInit@i+1)^0,f,c
  7504  0012A6  BE71               	btfsc	(LcInit@i+1)^0,7,c
  7505  0012A8  D7BD               	goto	l4350
  7506  0012AA  5071               	movf	(LcInit@i+1)^0,w,c
  7507  0012AC  E103               	bnz	u3480
  7508  0012AE  0E02               	movlw	2
  7509  0012B0  5C70               	subwf	LcInit@i^0,w,c
  7510  0012B2  E3B8               	bnc	l4350
  7511  0012B4                     u3480:
  7512                           
  7513                           ;LcTLCD.c: 80:     WaitForBusy();
  7514  0012B4  EC3A  F00C         	call	_WaitForBusy	;wreg free
  7515                           
  7516                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  7517  0012B8  0E0C               	movlw	12
  7518  0012BA  EF85  F00D         	goto	_CantaIR
  7519  0012BE                     __end_of_LcInit:
  7520                           	callstack 0
  7521  0012BE                     PL56:
  7522                           	callstack 26
  7523  0012BE  6A6B               	clrf	(Espera@ms+1)^0,c
  7524  0012C0  0E01               	movlw	1
  7525  0012C2  6E6A               	movwf	Espera@ms^0,c
  7526  0012C4  5031               	movf	_Timer^0,w,c
  7527  0012C6  0012               	return	
  7528  0012C8                     __end_ofPL56:
  7529                           	callstack 0
  7530                           
  7531 ;; *************** function _EscriuPrimeraOrdre *****************
  7532 ;; Defined at:
  7533 ;;		line 230 in file "LcTLCD.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  ordre           1    wreg     unsigned char 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  ordre           1    6[COMRAM] unsigned char 
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  1    wreg      void 
  7540 ;; Registers used:
  7541 ;;		wreg, status,2, status,0
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMRAM   BANK0   BANK1
  7547 ;;      Params:         0       0       0
  7548 ;;      Locals:         1       0       0
  7549 ;;      Temps:          1       0       0
  7550 ;;      Totals:         2       0       0
  7551 ;;Total ram usage:        2 bytes
  7552 ;; Hardware stack levels used: 1
  7553 ;; Hardware stack levels required when called: 2
  7554 ;; This function calls:
  7555 ;;		Nothing
  7556 ;; This function is called by:
  7557 ;;		_LcInit
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           	psect	text65
  7562  001520                     __ptext65:
  7563                           	callstack 0
  7564  001520                     _EscriuPrimeraOrdre:
  7565                           	callstack 27
  7566                           
  7567                           ;incstack = 0
  7568                           ;EscriuPrimeraOrdre@ordre stored from wreg
  7569  001520  6E64               	movwf	EscriuPrimeraOrdre@ordre^0,c
  7570                           
  7571                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  7572  001522  9694               	bcf	148,3,c	;volatile
  7573                           
  7574                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  7575  001524  D82F               	call	PL36	;call to abstracted procedure
  7576  001526  888B               	bsf	139,4,c	;volatile
  7577                           
  7578                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  7579  001528  A664               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  7580  00152A  D003               	goto	u230
  7581  00152C  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7582  00152E  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7583  001530  D001               	goto	u248
  7584  001532                     u230:
  7585  001532  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7586  001534                     u248:
  7587  001534  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7588  001536  D82D               	call	PL50	;call to abstracted procedure
  7589  001538  0BF7               	andlw	-9
  7590  00153A  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7591  00153C  6E8B               	movwf	139,c	;volatile
  7592                           
  7593                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  7594  00153E  A464               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  7595  001540  D003               	goto	u250
  7596  001542  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7597  001544  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7598  001546  D001               	goto	u268
  7599  001548                     u250:
  7600  001548  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7601  00154A                     u268:
  7602  00154A  D823               	call	PL50	;call to abstracted procedure
  7603  00154C  0BFB               	andlw	-5
  7604  00154E  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7605  001550  6E8B               	movwf	139,c	;volatile
  7606                           
  7607                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  7608  001552  A264               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  7609  001554  D003               	goto	u270
  7610  001556  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7611  001558  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7612  00155A  D001               	goto	u288
  7613  00155C                     u270:
  7614  00155C  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7615  00155E                     u288:
  7616  00155E  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7617  001560  508B               	movf	139,w,c	;volatile
  7618  001562  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7619  001564  0BFD               	andlw	-3
  7620  001566  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7621  001568  6E8B               	movwf	139,c	;volatile
  7622                           
  7623                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  7624  00156A  A064               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  7625  00156C  D003               	goto	u290
  7626  00156E  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7627  001570  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7628  001572  D001               	goto	u308
  7629  001574                     u290:
  7630  001574  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7631  001576                     u308:
  7632  001576  508B               	movf	139,w,c	;volatile
  7633  001578  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7634  00157A  0BFE               	andlw	-2
  7635  00157C  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7636  00157E  6E8B               	movwf	139,c	;volatile
  7637                           
  7638                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  7639  001580  988B               	bcf	139,4,c	;volatile
  7640  001582  0012               	return		;funcret
  7641  001584                     __end_of_EscriuPrimeraOrdre:
  7642                           	callstack 0
  7643  001584                     PL36:
  7644                           	callstack 24
  7645  001584  9494               	bcf	148,2,c	;volatile
  7646  001586  9294               	bcf	148,1,c	;volatile
  7647  001588  9094               	bcf	148,0,c	;volatile
  7648  00158A  9A8B               	bcf	139,5,c	;volatile
  7649  00158C  9E8C               	bcf	140,7,c	;volatile
  7650  00158E  888B               	bsf	139,4,c	;volatile
  7651  001590  0012               	return	
  7652  001592                     __end_ofPL36:
  7653                           	callstack 0
  7654  001592                     PL50:
  7655                           	callstack 27
  7656  001592  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7657  001594  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7658  001596  508B               	movf	139,w,c	;volatile
  7659  001598  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7660  00159A  0012               	return	
  7661  00159C                     __end_ofPL50:
  7662                           	callstack 0
  7663                           
  7664 ;; *************** function _JoystickMotor *****************
  7665 ;; Defined at:
  7666 ;;		line 18 in file "Joystick.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;		None
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;		None
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      void 
  7673 ;; Registers used:
  7674 ;;		wreg, status,2, status,0, cstack
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/1
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1
  7680 ;;      Params:         0       0       0
  7681 ;;      Locals:         0       0       0
  7682 ;;      Temps:          2       0       0
  7683 ;;      Totals:         2       0       0
  7684 ;;Total ram usage:        2 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; Hardware stack levels required when called: 3
  7687 ;; This function calls:
  7688 ;;		_MNouJoystick
  7689 ;; This function is called by:
  7690 ;;		_main
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           	psect	text66
  7695  001134                     __ptext66:
  7696                           	callstack 0
  7697  001134                     _JoystickMotor:
  7698                           	callstack 27
  7699                           
  7700                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  7701                           
  7702                           ;incstack = 0
  7703  001134  D056               	goto	l2964
  7704  001136                     l941:
  7705                           
  7706                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7707  001136  B2C2               	btfsc	194,1,c	;volatile
  7708  001138  D00B               	goto	l942
  7709  00113A  0EC8               	movlw	200
  7710  00113C  60C4               	cpfslt	196,c	;volatile
  7711  00113E  D008               	goto	l942
  7712  001140  0E32               	movlw	50
  7713  001142  64C4               	cpfsgt	196,c	;volatile
  7714  001144  D005               	goto	l942
  7715                           
  7716                           ;Joystick.c: 23:     ADCON0 = 0x07;
  7717  001146  0E07               	movlw	7
  7718  001148  6EC2               	movwf	194,c	;volatile
  7719                           
  7720                           ;Joystick.c: 24:                 cap1 = 1;
  7721  00114A  8E77               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7722  00114C                     l2894:
  7723                           
  7724                           ;Joystick.c: 25:     state++;
  7725  00114C  2A0E               	incf	JoystickMotor@state^0,f,c
  7726                           
  7727                           ;Joystick.c: 26:    }
  7728  00114E  D052               	goto	l949
  7729  001150                     l942:
  7730  001150  B2C2               	btfsc	194,1,c	;volatile
  7731  001152  D00F               	goto	l944
  7732  001154  0EC7               	movlw	199
  7733  001156  64C4               	cpfsgt	196,c	;volatile
  7734  001158  D00C               	goto	l944
  7735                           
  7736                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  7737  00115A  0E02               	movlw	2
  7738  00115C  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7739  00115E  E003               	bz	l2902
  7740  001160  0E02               	movlw	2
  7741  001162  EC4A  F00E         	call	_MNouJoystick
  7742  001166                     l2902:
  7743                           
  7744                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  7745  001166  0E02               	movlw	2
  7746  001168  6E0F               	movwf	_ultimaTeclaAD^0,c
  7747                           
  7748                           ;Joystick.c: 30:     ADCON0 = 0x07;
  7749  00116A  0E07               	movlw	7
  7750  00116C  6EC2               	movwf	194,c	;volatile
  7751                           
  7752                           ;Joystick.c: 31:                 cap1 = 0;
  7753  00116E  9E77               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7754  001170  D7ED               	goto	l2894
  7755  001172                     l944:
  7756  001172  B2C2               	btfsc	194,1,c	;volatile
  7757  001174  D03F               	goto	l949
  7758  001176  0E33               	movlw	51
  7759  001178  60C4               	cpfslt	196,c	;volatile
  7760  00117A  D03C               	goto	l949
  7761                           
  7762                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  7763  00117C  0E08               	movlw	8
  7764  00117E  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7765  001180  E003               	bz	l2916
  7766  001182  0E08               	movlw	8
  7767  001184  EC4A  F00E         	call	_MNouJoystick
  7768  001188                     l2916:
  7769                           
  7770                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  7771  001188  0E08               	movlw	8
  7772  00118A  D7EE               	goto	L7
  7773  00118C                     l950:
  7774                           
  7775                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7776  00118C  B2C2               	btfsc	194,1,c	;volatile
  7777  00118E  D00B               	goto	l951
  7778  001190  0EC8               	movlw	200
  7779  001192  60C4               	cpfslt	196,c	;volatile
  7780  001194  D008               	goto	l951
  7781  001196  0E32               	movlw	50
  7782  001198  64C4               	cpfsgt	196,c	;volatile
  7783  00119A  D005               	goto	l951
  7784                           
  7785                           ;Joystick.c: 44:     ADCON0 = 0x03;
  7786  00119C  0E03               	movlw	3
  7787  00119E  6EC2               	movwf	194,c	;volatile
  7788                           
  7789                           ;Joystick.c: 45:                 cap2 = 1;
  7790  0011A0  8C77               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7791  0011A2                     l2932:
  7792                           
  7793                           ;Joystick.c: 46:     state--;
  7794  0011A2  060E               	decf	JoystickMotor@state^0,f,c
  7795                           
  7796                           ;Joystick.c: 47:    }
  7797  0011A4  D027               	goto	l949
  7798  0011A6                     l951:
  7799  0011A6  B2C2               	btfsc	194,1,c	;volatile
  7800  0011A8  D00F               	goto	l953
  7801  0011AA  0EC7               	movlw	199
  7802  0011AC  64C4               	cpfsgt	196,c	;volatile
  7803  0011AE  D00C               	goto	l953
  7804                           
  7805                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  7806  0011B0  0E06               	movlw	6
  7807  0011B2  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7808  0011B4  E003               	bz	l2940
  7809  0011B6  0E06               	movlw	6
  7810  0011B8  EC4A  F00E         	call	_MNouJoystick
  7811  0011BC                     l2940:
  7812                           
  7813                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  7814  0011BC  0E06               	movlw	6
  7815  0011BE  6E0F               	movwf	_ultimaTeclaAD^0,c
  7816                           
  7817                           ;Joystick.c: 51:     ADCON0 = 0x03;
  7818  0011C0  0E03               	movlw	3
  7819  0011C2  6EC2               	movwf	194,c	;volatile
  7820                           
  7821                           ;Joystick.c: 52:                 cap2 = 0;
  7822  0011C4  9C77               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7823  0011C6  D7ED               	goto	l2932
  7824  0011C8                     l953:
  7825  0011C8  B2C2               	btfsc	194,1,c	;volatile
  7826  0011CA  D014               	goto	l949
  7827  0011CC  0E33               	movlw	51
  7828  0011CE  60C4               	cpfslt	196,c	;volatile
  7829  0011D0  D011               	goto	l949
  7830                           
  7831                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  7832  0011D2  0E04               	movlw	4
  7833  0011D4  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7834  0011D6  E003               	bz	l2954
  7835  0011D8  0E04               	movlw	4
  7836  0011DA  EC4A  F00E         	call	_MNouJoystick
  7837  0011DE                     l2954:
  7838                           
  7839                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  7840  0011DE  0E04               	movlw	4
  7841  0011E0  D7EE               	goto	L8
  7842  0011E2                     l2964:
  7843  0011E2  500E               	movf	JoystickMotor@state^0,w,c
  7844  0011E4  6E64               	movwf	??_JoystickMotor^0,c
  7845  0011E6  6A65               	clrf	(??_JoystickMotor+1)^0,c
  7846                           
  7847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7848                           ; Switch size 1, requested type "space"
  7849                           ; Number of cases is 1, Range of values is 0 to 0
  7850                           ; switch strategies available:
  7851                           ; Name         Instructions Cycles
  7852                           ; simple_byte            4     3 (average)
  7853                           ;	Chosen strategy is simple_byte
  7854  0011E8  5065               	movf	(??_JoystickMotor+1)^0,w,c
  7855  0011EA  E104               	bnz	l949
  7856                           
  7857                           ; Switch size 1, requested type "space"
  7858                           ; Number of cases is 2, Range of values is 0 to 1
  7859                           ; switch strategies available:
  7860                           ; Name         Instructions Cycles
  7861                           ; simple_byte            7     4 (average)
  7862                           ;	Chosen strategy is simple_byte
  7863  0011EC  5064               	movf	??_JoystickMotor^0,w,c
  7864  0011EE  E0A3               	bz	l941
  7865  0011F0  0A01               	xorlw	1	; case 1
  7866  0011F2  E0CC               	bz	l950
  7867  0011F4                     l949:
  7868                           
  7869                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  7870  0011F4  BE77               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  7871  0011F6  AC77               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  7872  0011F8  0012               	return	
  7873  0011FA  500F               	movf	_ultimaTeclaAD^0,w,c
  7874  0011FC  B4D8               	btfsc	status,2,c
  7875  0011FE  0012               	return	
  7876                           
  7877                           ;Joystick.c: 66:         MNouJoystick(-1);
  7878  001200  0EFF               	movlw	255
  7879  001202  EC4A  F00E         	call	_MNouJoystick
  7880                           
  7881                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  7882  001206  680F               	setf	_ultimaTeclaAD^0,c
  7883  001208  0012               	return		;funcret
  7884  00120A                     __end_of_JoystickMotor:
  7885                           	callstack 0
  7886                           
  7887 ;; *************** function _MNouJoystick *****************
  7888 ;; Defined at:
  7889 ;;		line 35 in file "Menu.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  posicio         1    wreg     char 
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;  posicio         1    5[COMRAM] char 
  7894 ;; Return value:  Size  Location     Type
  7895 ;;                  1    wreg      void 
  7896 ;; Registers used:
  7897 ;;		wreg
  7898 ;; Tracked objects:
  7899 ;;		On entry : 0/1
  7900 ;;		On exit  : 0/0
  7901 ;;		Unchanged: 0/0
  7902 ;; Data sizes:     COMRAM   BANK0   BANK1
  7903 ;;      Params:         0       0       0
  7904 ;;      Locals:         1       0       0
  7905 ;;      Temps:          0       0       0
  7906 ;;      Totals:         1       0       0
  7907 ;;Total ram usage:        1 bytes
  7908 ;; Hardware stack levels used: 1
  7909 ;; Hardware stack levels required when called: 2
  7910 ;; This function calls:
  7911 ;;		Nothing
  7912 ;; This function is called by:
  7913 ;;		_JoystickMotor
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           	psect	text67
  7918  001C94                     __ptext67:
  7919                           	callstack 0
  7920  001C94                     _MNouJoystick:
  7921                           	callstack 27
  7922                           
  7923                           ;incstack = 0
  7924                           ;MNouJoystick@posicio stored from wreg
  7925  001C94  6E63               	movwf	MNouJoystick@posicio^0,c
  7926                           
  7927                           ;Menu.c: 36:     novaDireccio = posicio;
  7928  001C96  C063  F04E         	movff	MNouJoystick@posicio,_novaDireccio
  7929  001C9A  0012               	return		;funcret
  7930  001C9C                     __end_of_MNouJoystick:
  7931                           	callstack 0
  7932                           
  7933 ;; *************** function _JoystickInit *****************
  7934 ;; Defined at:
  7935 ;;		line 12 in file "Joystick.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;		None
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;		None
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      void 
  7942 ;; Registers used:
  7943 ;;		wreg, status,2
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1
  7949 ;;      Params:         0       0       0
  7950 ;;      Locals:         0       0       0
  7951 ;;      Temps:          0       0       0
  7952 ;;      Totals:         0       0       0
  7953 ;;Total ram usage:        0 bytes
  7954 ;; Hardware stack levels used: 1
  7955 ;; Hardware stack levels required when called: 2
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_main
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	text68
  7964  001B82                     __ptext68:
  7965                           	callstack 0
  7966  001B82                     _JoystickInit:
  7967                           	callstack 28
  7968                           
  7969                           ;Joystick.c: 13:     ADCON0 = 0x01;
  7970                           
  7971                           ;incstack = 0
  7972  001B82  0E01               	movlw	1
  7973  001B84  6EC2               	movwf	194,c	;volatile
  7974                           
  7975                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  7976  001B86  0E0D               	movlw	13
  7977  001B88  6EC1               	movwf	193,c	;volatile
  7978                           
  7979                           ;Joystick.c: 15:     ADCON2 = 0x09;
  7980  001B8A  0E09               	movlw	9
  7981  001B8C  6EC0               	movwf	192,c	;volatile
  7982                           
  7983                           ;Joystick.c: 16:     ADRESH = 127;
  7984  001B8E  0E7F               	movlw	127
  7985  001B90  6EC4               	movwf	196,c	;volatile
  7986  001B92  0C7F               	retlw	127	;funcret
  7987  001B94                     __end_of_JoystickInit:
  7988                           	callstack 0
  7989                           
  7990 ;; *************** function _GLCDMotor *****************
  7991 ;; Defined at:
  7992 ;;		line 36 in file "GestioLCD.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;		None
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;		None
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      void 
  7999 ;; Registers used:
  8000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/1
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1
  8006 ;;      Params:         0       0       0
  8007 ;;      Locals:         0       0       0
  8008 ;;      Temps:          2       0       0
  8009 ;;      Totals:         2       0       0
  8010 ;;Total ram usage:        2 bytes
  8011 ;; Hardware stack levels used: 1
  8012 ;; Hardware stack levels required when called: 6
  8013 ;; This function calls:
  8014 ;;		_LcClear
  8015 ;;		_LcGotoXY
  8016 ;;		_LcLliure
  8017 ;;		_LcNewString
  8018 ;;		_LcPutChar
  8019 ;;		_TiGetTics
  8020 ;;		_TiResetTics
  8021 ;; This function is called by:
  8022 ;;		_main
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           	psect	text69
  8027  0008B8                     __ptext69:
  8028                           	callstack 0
  8029  0008B8                     _GLCDMotor:
  8030                           	callstack 24
  8031                           
  8032                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  8033                           
  8034                           ;incstack = 0
  8035  0008B8  D10B               	goto	l5650
  8036  0008BA                     l5466:
  8037                           
  8038                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  8039  0008BA  0E11               	movlw	17
  8040  0008BC  6011               	cpfslt	GLCDMotor@length1^0,c
  8041  0008BE  D010               	goto	l5476
  8042  0008C0  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8043  0008C2  D00E               	goto	l5476
  8044                           
  8045                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  8046  0008C4  0E00               	movlw	0
  8047  0008C6  6E6B               	movwf	LcGotoXY@Row^0,c
  8048  0008C8  EC8F  F00C         	call	_LcGotoXY
  8049                           
  8050                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  8051  0008CC  D932               	call	PL8	;call to abstracted procedure
  8052  0008CE  6E72               	movwf	??_GLCDMotor^0,c
  8053  0008D0  C072  F066         	movff	??_GLCDMotor,LcNewString@new_s
  8054  0008D4  D933               	call	PL10	;call to abstracted procedure
  8055  0008D6  ECFE  F00D         	call	_LcNewString	;wreg free
  8056                           
  8057                           ;GestioLCD.c: 53:     state = 5;
  8058  0008DA  0E05               	movlw	5
  8059  0008DC  6E17               	movwf	GLCDMotor@state^0,c
  8060                           
  8061                           ;GestioLCD.c: 54:    }
  8062  0008DE  0C05               	retlw	5
  8063  0008E0                     l5476:
  8064  0008E0  0E10               	movlw	16
  8065  0008E2  6411               	cpfsgt	GLCDMotor@length1^0,c
  8066  0008E4  0C10               	retlw	16
  8067  0008E6  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8068  0008E8  0C10               	retlw	16
  8069  0008EA                     u5320:
  8070                           
  8071                           ;GestioLCD.c: 56:     state++;
  8072  0008EA  2A17               	incf	GLCDMotor@state^0,f,c
  8073  0008EC  0012               	return	
  8074  0008EE                     l5482:
  8075                           
  8076                           ;GestioLCD.c: 60:    if (j>=16) {
  8077  0008EE  0E0F               	movlw	15
  8078  0008F0  6416               	cpfsgt	GLCDMotor@j^0,c
  8079  0008F2  D014               	goto	l5496
  8080                           
  8081                           ;GestioLCD.c: 61:     min1++;
  8082  0008F4  2A15               	incf	GLCDMotor@min1^0,f,c
  8083                           
  8084                           ;GestioLCD.c: 62:     max1++;
  8085  0008F6  2A4C               	incf	GLCDMotor@max1^0,f,c
  8086                           
  8087                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  8088  0008F8  D91C               	call	PL8	;call to abstracted procedure
  8089  0008FA  244C               	addwf	GLCDMotor@max1^0,w,c
  8090  0008FC  6E72               	movwf	??_GLCDMotor^0,c
  8091  0008FE  D90E               	call	PL2	;call to abstracted procedure
  8092  000900  E101               	bnz	l5490
  8093  000902  6A4C               	clrf	GLCDMotor@max1^0,c
  8094  000904                     l5490:
  8095                           
  8096                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  8097  000904  D916               	call	PL8	;call to abstracted procedure
  8098  000906  2415               	addwf	GLCDMotor@min1^0,w,c
  8099  000908  6E72               	movwf	??_GLCDMotor^0,c
  8100  00090A  D908               	call	PL2	;call to abstracted procedure
  8101  00090C  E101               	bnz	l872
  8102  00090E  6A15               	clrf	GLCDMotor@min1^0,c
  8103  000910                     l872:
  8104                           
  8105                           ;GestioLCD.c: 65:     j=0;
  8106  000910  6A16               	clrf	GLCDMotor@j^0,c
  8107                           
  8108                           ;GestioLCD.c: 66:     k1=min1;
  8109  000912  C015  F013         	movff	GLCDMotor@min1,GLCDMotor@k1
  8110                           
  8111                           ;GestioLCD.c: 67:     state = 6;
  8112  000916  0E06               	movlw	6
  8113  000918  6E17               	movwf	GLCDMotor@state^0,c
  8114                           
  8115                           ;GestioLCD.c: 68:    }
  8116  00091A  0C06               	retlw	6
  8117  00091C                     l5496:
  8118  00091C  0E10               	movlw	16
  8119  00091E  6016               	cpfslt	GLCDMotor@j^0,c
  8120  000920  0C10               	retlw	16
  8121                           
  8122                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  8123  000922  0E00               	movlw	0
  8124  000924  6E6B               	movwf	LcGotoXY@Row^0,c
  8125  000926  5016               	movf	GLCDMotor@j^0,w,c
  8126  000928  EC8F  F00C         	call	_LcGotoXY
  8127                           
  8128                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  8129  00092C  D902               	call	PL8	;call to abstracted procedure
  8130  00092E  2413               	addwf	GLCDMotor@k1^0,w,c
  8131  000930  6E72               	movwf	??_GLCDMotor^0,c
  8132  000932  D8F4               	call	PL2	;call to abstracted procedure
  8133  000934  ECD3  F00B         	call	_LcPutChar
  8134                           
  8135                           ;GestioLCD.c: 72:     j++;
  8136  000938  2A16               	incf	GLCDMotor@j^0,f,c
  8137                           
  8138                           ;GestioLCD.c: 73:     k1++;
  8139  00093A  2A13               	incf	GLCDMotor@k1^0,f,c
  8140                           
  8141                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  8142  00093C  D8FA               	call	PL8	;call to abstracted procedure
  8143  00093E  2413               	addwf	GLCDMotor@k1^0,w,c
  8144  000940  6E72               	movwf	??_GLCDMotor^0,c
  8145  000942  D8EC               	call	PL2	;call to abstracted procedure
  8146  000944  B4D8               	btfsc	status,2,c
  8147  000946  6A13               	clrf	GLCDMotor@k1^0,c
  8148  000948  0012               	return	
  8149  00094A                     l5510:
  8150                           
  8151                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  8152  00094A  0E04               	movlw	4
  8153  00094C  6018               	cpfslt	_menuDaltGLCD^0,c
  8154  00094E  D010               	goto	u5420
  8155  000950  D7CC               	goto	u5320
  8156  000952                     u5390:
  8157                           
  8158                           ;GestioLCD.c: 82:     state = 0;
  8159  000952  6A17               	clrf	GLCDMotor@state^0,c
  8160  000954  0012               	return	
  8161  000956                     l5518:
  8162                           
  8163                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  8164  000956  EC04  F00E         	call	_LcLliure	;wreg free
  8165  00095A  E306               	bnc	l5524
  8166  00095C  0E04               	movlw	4
  8167  00095E  6018               	cpfslt	_menuDaltGLCD^0,c
  8168  000960  D003               	goto	l5524
  8169                           
  8170                           ;GestioLCD.c: 87:     state = 7;
  8171  000962  0E07               	movlw	7
  8172  000964  6E17               	movwf	GLCDMotor@state^0,c
  8173                           
  8174                           ;GestioLCD.c: 88:    }
  8175  000966  0C07               	retlw	7
  8176  000968                     l5524:
  8177  000968  EC04  F00E         	call	_LcLliure	;wreg free
  8178  00096C  A0D8               	btfss	status,0,c
  8179  00096E  0012               	return	
  8180  000970                     u5420:
  8181  000970  0E03               	movlw	3
  8182  000972  6418               	cpfsgt	_menuDaltGLCD^0,c
  8183  000974  0C03               	retlw	3
  8184  000976  D7ED               	goto	u5390
  8185  000978                     l884:
  8186                           
  8187                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  8188  000978  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8189  00097A  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8190  00097C  0012               	return	
  8191                           
  8192                           ;GestioLCD.c: 95:     length1 = 0;
  8193  00097E  6A11               	clrf	GLCDMotor@length1^0,c
  8194                           
  8195                           ;GestioLCD.c: 96:     length2 = 0;
  8196  000980  6A10               	clrf	GLCDMotor@length2^0,c
  8197                           
  8198                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  8199  000982  0E00               	movlw	0
  8200  000984  6E6B               	movwf	LcGotoXY@Row^0,c
  8201  000986  EC8F  F00C         	call	_LcGotoXY
  8202                           
  8203                           ;GestioLCD.c: 98:     min1 = 0;
  8204  00098A  6A15               	clrf	GLCDMotor@min1^0,c
  8205                           
  8206                           ;GestioLCD.c: 99:     max1 = 15;
  8207  00098C  0E0F               	movlw	15
  8208  00098E  6E4C               	movwf	GLCDMotor@max1^0,c
  8209                           
  8210                           ;GestioLCD.c: 100:     min2 = 0;
  8211  000990  6A14               	clrf	GLCDMotor@min2^0,c
  8212                           
  8213                           ;GestioLCD.c: 101:     max2 = 15;
  8214  000992  0E0F               	movlw	15
  8215  000994  6E4B               	movwf	GLCDMotor@max2^0,c
  8216                           
  8217                           ;GestioLCD.c: 102:     j = 0;
  8218  000996  6A16               	clrf	GLCDMotor@j^0,c
  8219                           
  8220                           ;GestioLCD.c: 103:     k1 = 0;
  8221  000998  6A13               	clrf	GLCDMotor@k1^0,c
  8222                           
  8223                           ;GestioLCD.c: 104:     k2 = 0;
  8224  00099A  6A12               	clrf	GLCDMotor@k2^0,c
  8225                           
  8226                           ;GestioLCD.c: 105:     newString = 0;
  8227  00099C  9078               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  8228  00099E  D7A5               	goto	u5320
  8229  0009A0                     l5554:
  8230                           
  8231                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  8232  0009A0  D8C8               	call	PL8	;call to abstracted procedure
  8233  0009A2  2411               	addwf	GLCDMotor@length1^0,w,c
  8234  0009A4  6E72               	movwf	??_GLCDMotor^0,c
  8235  0009A6  D8BA               	call	PL2	;call to abstracted procedure
  8236  0009A8  E104               	bnz	l5560
  8237  0009AA  0E03               	movlw	3
  8238  0009AC  6418               	cpfsgt	_menuDaltGLCD^0,c
  8239  0009AE  D001               	goto	l5560
  8240  0009B0  D79C               	goto	u5320
  8241  0009B2                     l5560:
  8242  0009B2  D8BF               	call	PL8	;call to abstracted procedure
  8243  0009B4  2411               	addwf	GLCDMotor@length1^0,w,c
  8244  0009B6  6E72               	movwf	??_GLCDMotor^0,c
  8245  0009B8  D8B1               	call	PL2	;call to abstracted procedure
  8246  0009BA  E002               	bz	l5564
  8247                           
  8248                           ;GestioLCD.c: 114:     length1++;
  8249  0009BC  2A11               	incf	GLCDMotor@length1^0,f,c
  8250                           
  8251                           ;GestioLCD.c: 115:    }
  8252  0009BE  0012               	return	
  8253  0009C0                     l5564:
  8254  0009C0  0E04               	movlw	4
  8255  0009C2  6018               	cpfslt	_menuDaltGLCD^0,c
  8256  0009C4  0C04               	retlw	4
  8257  0009C6  D8B5               	call	PL8	;call to abstracted procedure
  8258  0009C8  2411               	addwf	GLCDMotor@length1^0,w,c
  8259  0009CA  6E72               	movwf	??_GLCDMotor^0,c
  8260  0009CC  D8A7               	call	PL2	;call to abstracted procedure
  8261  0009CE  A4D8               	btfss	status,2,c
  8262  0009D0  0012               	return	
  8263                           
  8264                           ;GestioLCD.c: 117:     state = 13;
  8265  0009D2  0E0D               	movlw	13
  8266  0009D4  6E17               	movwf	GLCDMotor@state^0,c
  8267  0009D6  0C0D               	retlw	13
  8268  0009D8                     l5570:
  8269                           
  8270                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  8271  0009D8  0E11               	movlw	17
  8272  0009DA  6010               	cpfslt	GLCDMotor@length2^0,c
  8273  0009DC  D015               	goto	l5580
  8274  0009DE  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8275  0009E0  D013               	goto	l5580
  8276                           
  8277                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  8278  0009E2  EC51  F004         	call	PL34	;call to abstracted procedure
  8279  0009E6  EC8F  F00C         	call	_LcGotoXY
  8280                           
  8281                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  8282  0009EA  5018               	movf	_menuDaltGLCD^0,w,c
  8283  0009EC  0D1D               	mullw	29
  8284  0009EE  CFF3 F072          	movff	prodl,??_GLCDMotor
  8285  0009F2  0E1D               	movlw	29
  8286  0009F4  2672               	addwf	??_GLCDMotor^0,f,c
  8287  0009F6  5072               	movf	??_GLCDMotor^0,w,c
  8288  0009F8  0F01               	addlw	low _menuList
  8289  0009FA  6E73               	movwf	(??_GLCDMotor+1)^0,c
  8290  0009FC  C073  F066         	movff	??_GLCDMotor+1,LcNewString@new_s
  8291  000A00  D89D               	call	PL10	;call to abstracted procedure
  8292  000A02  ECFE  F00D         	call	_LcNewString	;wreg free
  8293  000A06  D771               	goto	u5320
  8294  000A08                     l5580:
  8295  000A08  0E10               	movlw	16
  8296  000A0A  6410               	cpfsgt	GLCDMotor@length2^0,c
  8297  000A0C  0C10               	retlw	16
  8298  000A0E  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8299  000A10  0C10               	retlw	16
  8300                           
  8301                           ;GestioLCD.c: 127:     state = 9;
  8302  000A12  0E09               	movlw	9
  8303  000A14  6E17               	movwf	GLCDMotor@state^0,c
  8304  000A16  0C09               	retlw	9
  8305  000A18                     l5586:
  8306                           
  8307                           ;GestioLCD.c: 131:    if (j<16) {
  8308  000A18  0E10               	movlw	16
  8309  000A1A  6016               	cpfslt	GLCDMotor@j^0,c
  8310  000A1C  D014               	goto	l5600
  8311                           
  8312                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  8313  000A1E  0E01               	movlw	1
  8314  000A20  6E6B               	movwf	LcGotoXY@Row^0,c
  8315  000A22  5016               	movf	GLCDMotor@j^0,w,c
  8316  000A24  EC8F  F00C         	call	_LcGotoXY
  8317                           
  8318                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  8319  000A28  D884               	call	PL8	;call to abstracted procedure
  8320  000A2A  2412               	addwf	GLCDMotor@k2^0,w,c
  8321  000A2C  D87E               	call	PL4	;call to abstracted procedure
  8322  000A2E  D876               	call	PL2	;call to abstracted procedure
  8323  000A30  ECD3  F00B         	call	_LcPutChar
  8324                           
  8325                           ;GestioLCD.c: 134:     j++;
  8326  000A34  2A16               	incf	GLCDMotor@j^0,f,c
  8327                           
  8328                           ;GestioLCD.c: 135:     k2++;
  8329  000A36  2A12               	incf	GLCDMotor@k2^0,f,c
  8330                           
  8331                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  8332  000A38  D87C               	call	PL8	;call to abstracted procedure
  8333  000A3A  2412               	addwf	GLCDMotor@k2^0,w,c
  8334  000A3C  D876               	call	PL4	;call to abstracted procedure
  8335  000A3E  D86E               	call	PL2	;call to abstracted procedure
  8336  000A40  B4D8               	btfsc	status,2,c
  8337  000A42  6A12               	clrf	GLCDMotor@k2^0,c
  8338  000A44  0012               	return	
  8339  000A46                     l5600:
  8340  000A46  0E0F               	movlw	15
  8341  000A48  6416               	cpfsgt	GLCDMotor@j^0,c
  8342  000A4A  0C0F               	retlw	15
  8343                           
  8344                           ;GestioLCD.c: 139:     min2++;
  8345  000A4C  2A14               	incf	GLCDMotor@min2^0,f,c
  8346                           
  8347                           ;GestioLCD.c: 140:     max2++;
  8348  000A4E  2A4B               	incf	GLCDMotor@max2^0,f,c
  8349                           
  8350                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  8351  000A50  D870               	call	PL8	;call to abstracted procedure
  8352  000A52  244B               	addwf	GLCDMotor@max2^0,w,c
  8353  000A54  D86A               	call	PL4	;call to abstracted procedure
  8354  000A56  D862               	call	PL2	;call to abstracted procedure
  8355  000A58  E101               	bnz	l5608
  8356  000A5A  6A4B               	clrf	GLCDMotor@max2^0,c
  8357  000A5C                     l5608:
  8358                           
  8359                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  8360  000A5C  D86A               	call	PL8	;call to abstracted procedure
  8361  000A5E  2414               	addwf	GLCDMotor@min2^0,w,c
  8362  000A60  D864               	call	PL4	;call to abstracted procedure
  8363  000A62  D85C               	call	PL2	;call to abstracted procedure
  8364  000A64  E101               	bnz	l902
  8365  000A66  6A14               	clrf	GLCDMotor@min2^0,c
  8366  000A68                     l902:
  8367                           
  8368                           ;GestioLCD.c: 143:     j=0;
  8369  000A68  6A16               	clrf	GLCDMotor@j^0,c
  8370                           
  8371                           ;GestioLCD.c: 144:     k2=min2;
  8372  000A6A  C014  F012         	movff	GLCDMotor@min2,GLCDMotor@k2
  8373  000A6E  D73D               	goto	u5320
  8374  000A70                     l5614:
  8375                           
  8376                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  8377  000A70  5019               	movf	_timerGLCD^0,w,c
  8378  000A72  ECFD  F00C         	call	_TiGetTics
  8379  000A76  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  8380  000A78  D00A               	goto	l904
  8381  000A7A  D865               	call	PL60	;call to abstracted procedure
  8382  000A7C  E308               	bnc	l904
  8383  000A7E  A078               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  8384  000A80  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8385  000A82  D005               	goto	l904
  8386                           
  8387                           ;GestioLCD.c: 150:     LcClear();
  8388  000A84  EC46  F00D         	call	_LcClear	;wreg free
  8389  000A88                     l5622:
  8390                           
  8391                           ;GestioLCD.c: 151:     state = 2;
  8392  000A88  0E02               	movlw	2
  8393  000A8A  6E17               	movwf	GLCDMotor@state^0,c
  8394                           
  8395                           ;GestioLCD.c: 152:    }
  8396  000A8C  0C02               	retlw	2
  8397  000A8E                     l904:
  8398  000A8E  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8399  000A90  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8400  000A92  0012               	return	
  8401                           
  8402                           ;GestioLCD.c: 154:     LcClear();
  8403  000A94  EC46  F00D         	call	_LcClear	;wreg free
  8404  000A98  D75C               	goto	u5390
  8405  000A9A                     l5630:
  8406                           
  8407                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  8408  000A9A  5019               	movf	_timerGLCD^0,w,c
  8409  000A9C  EC93  F00D         	call	_TiResetTics
  8410  000AA0  D724               	goto	u5320
  8411  000AA2                     l5634:
  8412                           
  8413                           ;GestioLCD.c: 163:    if (LcLliure()) {
  8414  000AA2  EC04  F00E         	call	_LcLliure	;wreg free
  8415  000AA6  A0D8               	btfss	status,0,c
  8416  000AA8  0012               	return	
  8417                           
  8418                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  8419  000AAA  5019               	movf	_timerGLCD^0,w,c
  8420  000AAC  EC93  F00D         	call	_TiResetTics
  8421                           
  8422                           ;GestioLCD.c: 165:     state = 11;
  8423  000AB0  0E0B               	movlw	11
  8424  000AB2  6E17               	movwf	GLCDMotor@state^0,c
  8425  000AB4  0C0B               	retlw	11
  8426  000AB6                     l5640:
  8427                           
  8428                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  8429  000AB6  D83D               	call	PL8	;call to abstracted procedure
  8430  000AB8  2410               	addwf	GLCDMotor@length2^0,w,c
  8431  000ABA  D837               	call	PL4	;call to abstracted procedure
  8432  000ABC  D82F               	call	PL2	;call to abstracted procedure
  8433  000ABE  E002               	bz	l5644
  8434                           
  8435                           ;GestioLCD.c: 170:     length2++;
  8436  000AC0  2A10               	incf	GLCDMotor@length2^0,f,c
  8437                           
  8438                           ;GestioLCD.c: 171:    }
  8439  000AC2  0012               	return	
  8440  000AC4                     l5644:
  8441  000AC4  D836               	call	PL8	;call to abstracted procedure
  8442  000AC6  2410               	addwf	GLCDMotor@length2^0,w,c
  8443  000AC8  D830               	call	PL4	;call to abstracted procedure
  8444  000ACA  D828               	call	PL2	;call to abstracted procedure
  8445  000ACC  E0DD               	bz	l5622
  8446  000ACE  0012               	return	
  8447  000AD0                     l5650:
  8448  000AD0  5017               	movf	GLCDMotor@state^0,w,c
  8449  000AD2  6E72               	movwf	??_GLCDMotor^0,c
  8450  000AD4  6A73               	clrf	(??_GLCDMotor+1)^0,c
  8451                           
  8452                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8453                           ; Switch size 1, requested type "space"
  8454                           ; Number of cases is 1, Range of values is 0 to 0
  8455                           ; switch strategies available:
  8456                           ; Name         Instructions Cycles
  8457                           ; simple_byte            4     3 (average)
  8458                           ;	Chosen strategy is simple_byte
  8459  000AD6  5073               	movf	(??_GLCDMotor+1)^0,w,c
  8460  000AD8  A4D8               	btfss	status,2,c
  8461  000ADA  0012               	return	
  8462                           
  8463                           ; Switch size 1, requested type "space"
  8464                           ; Number of cases is 12, Range of values is 0 to 13
  8465                           ; switch strategies available:
  8466                           ; Name         Instructions Cycles
  8467                           ; simple_byte           37    19 (average)
  8468                           ;	Chosen strategy is simple_byte
  8469  000ADC  5072               	movf	??_GLCDMotor^0,w,c
  8470  000ADE  E101 D74B          	bz	l884
  8471  000AE2  0A01               	xorlw	1	; case 1
  8472  000AE4  E101 D75C          	bz	l5554
  8473  000AE8  0A03               	xorlw	3	; case 2
  8474  000AEA  E101 D6E6          	bz	l5466
  8475  000AEE  0A01               	xorlw	1	; case 3
  8476  000AF0  E101 D6FD          	bz	l5482
  8477  000AF4  0A06               	xorlw	6	; case 5
  8478  000AF6  E101 D72E          	bz	l5518
  8479  000AFA  0A03               	xorlw	3	; case 6
  8480  000AFC  E101 D725          	bz	l5510
  8481  000B00  0A01               	xorlw	1	; case 7
  8482  000B02  E101 D769          	bz	l5570
  8483  000B06  0A0F               	xorlw	15	; case 8
  8484  000B08  E0CC               	bz	l5634
  8485  000B0A  0A01               	xorlw	1	; case 9
  8486  000B0C  E085               	bz	l5586
  8487  000B0E  0A03               	xorlw	3	; case 10
  8488  000B10  E0C4               	bz	l5630
  8489  000B12  0A01               	xorlw	1	; case 11
  8490  000B14  E0AD               	bz	l5614
  8491  000B16  0A06               	xorlw	6	; case 13
  8492  000B18  E0CE               	bz	l5640
  8493  000B1A  0012               	return		;funcret
  8494  000B1C                     __end_of_GLCDMotor:
  8495                           	callstack 0
  8496  000B1C                     PL2:
  8497                           	callstack 24
  8498  000B1C  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  8499  000B20                     	if	1	;There is more than 1 active tblptr byte
  8500  000B20  0E02               	movlw	high __smallconst
  8501  000B22  6EF7               	movwf	tblptrh,c
  8502  000B24                     	endif
  8503  000B24                     	if	0	;tblptru may be non-zero
  8504  000B24                     	endif
  8505  000B24                     	if	0	;tblptru may be non-zero
  8506  000B24                     	endif
  8507  000B24  0008               	tblrd		*
  8508  000B26  50F5               	movf	tablat,w,c
  8509  000B28  0012               	return	
  8510  000B2A                     __end_ofPL2:
  8511                           	callstack 0
  8512  000B2A                     PL4:
  8513                           	callstack 24
  8514  000B2A  6E72               	movwf	??_GLCDMotor^0,c
  8515  000B2C  0E1D               	movlw	29
  8516  000B2E  2672               	addwf	??_GLCDMotor^0,f,c
  8517  000B30  0C1D               	retlw	29
  8518  000B32                     __end_ofPL4:
  8519                           	callstack 0
  8520  000B32                     PL8:
  8521                           	callstack 24
  8522  000B32  5018               	movf	_menuDaltGLCD^0,w,c
  8523  000B34  0D1D               	mullw	29
  8524  000B36  50F3               	movf	243,w,c
  8525  000B38  0F01               	addlw	low _menuList
  8526  000B3A  0012               	return	
  8527  000B3C                     __end_ofPL8:
  8528                           	callstack 0
  8529  000B3C                     PL10:
  8530                           	callstack 24
  8531  000B3C  5066               	movf	LcNewString@new_s^0,w,c
  8532  000B3E  A4D8               	btfss	status,2,c
  8533  000B40  0E02               	movlw	high __smallconst
  8534  000B42  6E67               	movwf	(LcNewString@new_s+1)^0,c
  8535  000B44  0012               	return	
  8536  000B46                     __end_ofPL10:
  8537                           	callstack 0
  8538  000B46                     PL60:
  8539                           	callstack 27
  8540  000B46  0EB5               	movlw	181
  8541  000B48  5C63               	subwf	?_TiGetTics^0,w,c
  8542  000B4A  0E04               	movlw	4
  8543  000B4C  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  8544  000B4E  0012               	return	
  8545  000B50                     __end_ofPL60:
  8546                           	callstack 0
  8547                           
  8548 ;; *************** function _LcPutChar *****************
  8549 ;; Defined at:
  8550 ;;		line 134 in file "LcTLCD.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  c               1    wreg     unsigned char 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;  c               1   19[COMRAM] unsigned char 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/1
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1
  8564 ;;      Params:         0       0       0
  8565 ;;      Locals:         1       0       0
  8566 ;;      Temps:          0       0       0
  8567 ;;      Totals:         1       0       0
  8568 ;;Total ram usage:        1 bytes
  8569 ;; Hardware stack levels used: 1
  8570 ;; Hardware stack levels required when called: 5
  8571 ;; This function calls:
  8572 ;;		_CantaData
  8573 ;;		_LcGotoXY
  8574 ;;		_WaitForBusy
  8575 ;; This function is called by:
  8576 ;;		_LcLCD
  8577 ;;		_menu
  8578 ;;		_GLCDMotor
  8579 ;;		_motorSIO
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           	psect	text70
  8584  0017A6                     __ptext70:
  8585                           	callstack 0
  8586  0017A6                     _LcPutChar:
  8587                           	callstack 24
  8588                           
  8589                           ;incstack = 0
  8590                           ;LcPutChar@c stored from wreg
  8591  0017A6  6E71               	movwf	LcPutChar@c^0,c
  8592                           
  8593                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  8594  0017A8  EC3A  F00C         	call	_WaitForBusy	;wreg free
  8595  0017AC  5071               	movf	LcPutChar@c^0,w,c
  8596  0017AE  EC59  F00C         	call	_CantaData
  8597                           
  8598                           ;LcTLCD.c: 138:  ++ColumnAct;
  8599  0017B2  2A32               	incf	_ColumnAct^0,f,c
  8600                           
  8601                           ;LcTLCD.c: 140:  if (Rows == 2) {
  8602  0017B4  0E02               	movlw	2
  8603  0017B6  1834               	xorwf	_Rows^0,w,c
  8604  0017B8  E10C               	bnz	l4262
  8605                           
  8606                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  8607  0017BA  0E27               	movlw	39
  8608  0017BC  6432               	cpfsgt	_ColumnAct^0,c
  8609  0017BE  D009               	goto	l4262
  8610                           
  8611                           ;LcTLCD.c: 142:    ColumnAct = 0;
  8612  0017C0  6A32               	clrf	_ColumnAct^0,c
  8613                           
  8614                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  8615  0017C2  2A33               	incf	_RowAct^0,f,c
  8616  0017C4  0E01               	movlw	1
  8617  0017C6  6433               	cpfsgt	_RowAct^0,c
  8618  0017C8  D001               	goto	l4260
  8619  0017CA  6A33               	clrf	_RowAct^0,c
  8620  0017CC                     l4260:
  8621                           
  8622                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  8623  0017CC  D80C               	call	PL70	;call to abstracted procedure
  8624  0017CE  EC8F  F00C         	call	_LcGotoXY
  8625  0017D2                     l4262:
  8626                           
  8627                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  8628  0017D2  0433               	decf	_RowAct^0,w,c
  8629  0017D4  A4D8               	btfss	status,2,c
  8630  0017D6  0012               	return	
  8631                           
  8632                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  8633  0017D8  0E27               	movlw	39
  8634  0017DA  6432               	cpfsgt	_ColumnAct^0,c
  8635  0017DC  D001               	goto	l4268
  8636  0017DE  6A32               	clrf	_ColumnAct^0,c
  8637  0017E0                     l4268:
  8638                           
  8639                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  8640  0017E0  D802               	call	PL70	;call to abstracted procedure
  8641  0017E2  EF8F  F00C         	goto	_LcGotoXY
  8642  0017E6                     __end_of_LcPutChar:
  8643                           	callstack 0
  8644  0017E6                     PL70:
  8645                           	callstack 24
  8646  0017E6  C033  F06B         	movff	_RowAct,LcGotoXY@Row
  8647  0017EA  5032               	movf	_ColumnAct^0,w,c
  8648  0017EC  0012               	return	
  8649  0017EE                     __end_ofPL70:
  8650                           	callstack 0
  8651                           
  8652 ;; *************** function _CantaData *****************
  8653 ;; Defined at:
  8654 ;;		line 196 in file "LcTLCD.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;  Data            1    wreg     unsigned char 
  8657 ;; Auto vars:     Size  Location     Type
  8658 ;;  Data            1    7[COMRAM] unsigned char 
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  1    wreg      void 
  8661 ;; Registers used:
  8662 ;;		wreg, status,2, status,0, cstack
  8663 ;; Tracked objects:
  8664 ;;		On entry : 0/1
  8665 ;;		On exit  : 0/0
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMRAM   BANK0   BANK1
  8668 ;;      Params:         0       0       0
  8669 ;;      Locals:         1       0       0
  8670 ;;      Temps:          0       0       0
  8671 ;;      Totals:         1       0       0
  8672 ;;Total ram usage:        1 bytes
  8673 ;; Hardware stack levels used: 1
  8674 ;; Hardware stack levels required when called: 3
  8675 ;; This function calls:
  8676 ;;		_CantaPartAlta
  8677 ;;		_CantaPartBaixa
  8678 ;; This function is called by:
  8679 ;;		_LcPutChar
  8680 ;; This function uses a non-reentrant model
  8681 ;;
  8682                           
  8683                           	psect	text71
  8684  0018B2                     __ptext71:
  8685                           	callstack 0
  8686  0018B2                     _CantaData:
  8687                           	callstack 25
  8688                           
  8689                           ;incstack = 0
  8690                           ;CantaData@Data stored from wreg
  8691  0018B2  6E65               	movwf	CantaData@Data^0,c
  8692                           
  8693                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8694  0018B4  9694               	bcf	148,3,c	;volatile
  8695  0018B6  9494               	bcf	148,2,c	;volatile
  8696  0018B8  9294               	bcf	148,1,c	;volatile
  8697  0018BA  9094               	bcf	148,0,c	;volatile
  8698                           
  8699                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  8700  0018BC  8A8B               	bsf	139,5,c	;volatile
  8701                           
  8702                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  8703  0018BE  9E8C               	bcf	140,7,c	;volatile
  8704                           
  8705                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  8706  0018C0  888B               	bsf	139,4,c	;volatile
  8707                           
  8708                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  8709  0018C2  5065               	movf	CantaData@Data^0,w,c
  8710  0018C4  EC78  F00B         	call	_CantaPartAlta
  8711                           
  8712                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  8713                           
  8714                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  8715                           
  8716                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  8717                           
  8718                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  8719  0018C8  D80B               	call	PL64	;call to abstracted procedure
  8720                           
  8721                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  8722  0018CA  5065               	movf	CantaData@Data^0,w,c
  8723  0018CC  EC45  F00B         	call	_CantaPartBaixa
  8724                           
  8725                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  8726                           
  8727                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  8728                           
  8729                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8730  0018D0  D000               	goto	PL30	;call to abstracted procedure
  8731  0018D2                     __end_of_CantaData:
  8732                           	callstack 0
  8733  0018D2                     PL30:
  8734                           	callstack 24
  8735  0018D2  888B               	bsf	139,4,c	;volatile
  8736  0018D4  988B               	bcf	139,4,c	;volatile
  8737  0018D6  8694               	bsf	148,3,c	;volatile
  8738  0018D8  8494               	bsf	148,2,c	;volatile
  8739  0018DA  8294               	bsf	148,1,c	;volatile
  8740  0018DC  8094               	bsf	148,0,c	;volatile
  8741  0018DE  0012               	return		;funcret
  8742  0018E0                     __end_ofPL30:
  8743                           	callstack 0
  8744  0018E0                     PL64:
  8745                           	callstack 24
  8746  0018E0  888B               	bsf	139,4,c	;volatile
  8747  0018E2  988B               	bcf	139,4,c	;volatile
  8748  0018E4  988B               	bcf	139,4,c	;volatile
  8749  0018E6  888B               	bsf	139,4,c	;volatile
  8750  0018E8  0012               	return	
  8751  0018EA                     __end_ofPL64:
  8752                           	callstack 0
  8753                           
  8754 ;; *************** function _LcNewString *****************
  8755 ;; Defined at:
  8756 ;;		line 241 in file "LcTLCD.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  8759 ;;		 -> stringScore(3), STR_10(8), STR_9(12), STR_8(8), 
  8760 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  8761 ;;		 -> STR_7(16), STR_6(13), STR_5(9), STR_4(7), 
  8762 ;;		 -> STR_3(7), STR_2(11), STR_1(8), 
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;		None
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		wreg, status,2, status,0
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/1
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1
  8774 ;;      Params:         2       0       0
  8775 ;;      Locals:         0       0       0
  8776 ;;      Temps:          0       0       0
  8777 ;;      Totals:         2       0       0
  8778 ;;Total ram usage:        2 bytes
  8779 ;; Hardware stack levels used: 1
  8780 ;; Hardware stack levels required when called: 2
  8781 ;; This function calls:
  8782 ;;		Nothing
  8783 ;; This function is called by:
  8784 ;;		_menu
  8785 ;;		_GLCDMotor
  8786 ;;		_motorJoc
  8787 ;;		_motorSIO
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           	psect	text72
  8792  001BFC                     __ptext72:
  8793                           	callstack 0
  8794  001BFC                     _LcNewString:
  8795                           	callstack 27
  8796                           
  8797                           ;LcTLCD.c: 242:     s_ptr = new_s;
  8798                           
  8799                           ;incstack = 0
  8800  001BFC  C066  F005         	movff	LcNewString@new_s,_s_ptr
  8801  001C00  C067  F006         	movff	LcNewString@new_s+1,_s_ptr+1
  8802                           
  8803                           ;LcTLCD.c: 243:     nou_s = 1;
  8804  001C04  8E78               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8805  001C06  0012               	return		;funcret
  8806  001C08                     __end_of_LcNewString:
  8807                           	callstack 0
  8808                           
  8809 ;; *************** function _LcLliure *****************
  8810 ;; Defined at:
  8811 ;;		line 257 in file "LcTLCD.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;		None
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;		None
  8816 ;; Return value:  Size  Location     Type
  8817 ;;		None               void
  8818 ;; Registers used:
  8819 ;;		status,0
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/1
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMRAM   BANK0   BANK1
  8825 ;;      Params:         0       0       0
  8826 ;;      Locals:         0       0       0
  8827 ;;      Temps:          0       0       0
  8828 ;;      Totals:         0       0       0
  8829 ;;Total ram usage:        0 bytes
  8830 ;; Hardware stack levels used: 1
  8831 ;; Hardware stack levels required when called: 2
  8832 ;; This function calls:
  8833 ;;		Nothing
  8834 ;; This function is called by:
  8835 ;;		_menu
  8836 ;;		_GLCDMotor
  8837 ;;		_motorJoc
  8838 ;;		_motorSIO
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text73
  8843  001C08                     __ptext73:
  8844                           	callstack 0
  8845  001C08                     _LcLliure:
  8846                           	callstack 27
  8847                           
  8848                           ;LcTLCD.c: 258:     return !nou_s;
  8849                           
  8850                           ;incstack = 0
  8851  001C08  AE78               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8852  001C0A  D002               	goto	l2082
  8853  001C0C  90D8               	bcf	status,0,c
  8854  001C0E  0012               	return	
  8855  001C10                     l2082:
  8856  001C10  80D8               	bsf	status,0,c
  8857  001C12  0012               	return		;funcret
  8858  001C14                     __end_of_LcLliure:
  8859                           	callstack 0
  8860                           
  8861 ;; *************** function _LcClear *****************
  8862 ;; Defined at:
  8863 ;;		line 84 in file "LcTLCD.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;		None
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;		None
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1    wreg      void 
  8870 ;; Registers used:
  8871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/1
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMRAM   BANK0   BANK1
  8877 ;;      Params:         0       0       0
  8878 ;;      Locals:         0       0       0
  8879 ;;      Temps:          0       0       0
  8880 ;;      Totals:         0       0       0
  8881 ;;Total ram usage:        0 bytes
  8882 ;; Hardware stack levels used: 1
  8883 ;; Hardware stack levels required when called: 5
  8884 ;; This function calls:
  8885 ;;		_CantaIR
  8886 ;;		_Espera
  8887 ;;		_LcGotoXY
  8888 ;;		_WaitForBusy
  8889 ;; This function is called by:
  8890 ;;		_menu
  8891 ;;		_GLCDMotor
  8892 ;;		_motorSIO
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           	psect	text74
  8897  001A8C                     __ptext74:
  8898                           	callstack 0
  8899  001A8C                     _LcClear:
  8900                           	callstack 24
  8901                           
  8902                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  8903                           
  8904                           ;incstack = 0
  8905  001A8C  EC3A  F00C         	call	_WaitForBusy	;wreg free
  8906  001A90  0E01               	movlw	1
  8907  001A92  EC85  F00D         	call	_CantaIR
  8908                           
  8909                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  8910  001A96  D806               	call	PL54	;call to abstracted procedure
  8911  001A98  EC57  F00D         	call	_Espera
  8912                           
  8913                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  8914  001A9C  0E00               	movlw	0
  8915  001A9E  6E6B               	movwf	LcGotoXY@Row^0,c
  8916  001AA0  EF8F  F00C         	goto	_LcGotoXY
  8917  001AA4                     __end_of_LcClear:
  8918                           	callstack 0
  8919  001AA4                     PL54:
  8920                           	callstack 26
  8921  001AA4  6A6B               	clrf	(Espera@ms+1)^0,c
  8922  001AA6  0E03               	movlw	3
  8923  001AA8  6E6A               	movwf	Espera@ms^0,c
  8924  001AAA  5031               	movf	_Timer^0,w,c
  8925  001AAC  0012               	return	
  8926  001AAE                     __end_ofPL54:
  8927                           	callstack 0
  8928                           
  8929 ;; *************** function _LcGotoXY *****************
  8930 ;; Defined at:
  8931 ;;		line 106 in file "LcTLCD.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;  Column          1    wreg     unsigned char 
  8934 ;;  Row             1   13[COMRAM] unsigned char 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  Column          1   18[COMRAM] unsigned char 
  8937 ;;  Fisics          2   14[COMRAM] int 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      void 
  8940 ;; Registers used:
  8941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/1
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1
  8947 ;;      Params:         1       0       0
  8948 ;;      Locals:         5       0       0
  8949 ;;      Temps:          0       0       0
  8950 ;;      Totals:         6       0       0
  8951 ;;Total ram usage:        6 bytes
  8952 ;; Hardware stack levels used: 1
  8953 ;; Hardware stack levels required when called: 4
  8954 ;; This function calls:
  8955 ;;		_CantaIR
  8956 ;;		_WaitForBusy
  8957 ;; This function is called by:
  8958 ;;		_LcClear
  8959 ;;		_LcPutChar
  8960 ;;		_menu
  8961 ;;		_GLCDMotor
  8962 ;;		_motorJoc
  8963 ;;		_motorSIO
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           	psect	text75
  8968  00191E                     __ptext75:
  8969                           	callstack 0
  8970  00191E                     _LcGotoXY:
  8971                           	callstack 24
  8972                           
  8973                           ;incstack = 0
  8974                           ;LcGotoXY@Column stored from wreg
  8975  00191E  6E70               	movwf	LcGotoXY@Column^0,c
  8976                           
  8977                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  8978  001920  506B               	movf	LcGotoXY@Row^0,w,c
  8979  001922  E004               	bz	l57
  8980  001924  6A6F               	clrf	(_LcGotoXY$336+1)^0,c
  8981  001926  0E40               	movlw	64
  8982  001928  6E6E               	movwf	_LcGotoXY$336^0,c
  8983  00192A  D002               	goto	l4188
  8984  00192C                     l57:
  8985  00192C  6A6E               	clrf	_LcGotoXY$336^0,c
  8986  00192E  6A6F               	clrf	(_LcGotoXY$336+1)^0,c
  8987  001930                     l4188:
  8988  001930  5070               	movf	LcGotoXY@Column^0,w,c
  8989  001932  246E               	addwf	_LcGotoXY$336^0,w,c
  8990  001934  6E6C               	movwf	LcGotoXY@Fisics^0,c
  8991  001936  0E00               	movlw	0
  8992  001938  206F               	addwfc	(_LcGotoXY$336+1)^0,w,c
  8993  00193A  6E6D               	movwf	(LcGotoXY@Fisics+1)^0,c
  8994                           
  8995                           ;LcTLCD.c: 127:  WaitForBusy();
  8996  00193C  EC3A  F00C         	call	_WaitForBusy	;wreg free
  8997                           
  8998                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  8999  001940  506C               	movf	LcGotoXY@Fisics^0,w,c
  9000  001942  0980               	iorlw	128
  9001  001944  EC85  F00D         	call	_CantaIR
  9002                           
  9003                           ;LcTLCD.c: 130:  RowAct = Row;
  9004  001948  C06B  F033         	movff	LcGotoXY@Row,_RowAct
  9005                           
  9006                           ;LcTLCD.c: 131:  ColumnAct = Column;
  9007  00194C  C070  F032         	movff	LcGotoXY@Column,_ColumnAct
  9008  001950  0012               	return		;funcret
  9009  001952                     __end_of_LcGotoXY:
  9010                           	callstack 0
  9011                           
  9012 ;; *************** function _WaitForBusy *****************
  9013 ;; Defined at:
  9014 ;;		line 212 in file "LcTLCD.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;		None
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;  Busy            1   12[COMRAM] unsigned char 
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  1    wreg      void 
  9021 ;; Registers used:
  9022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1
  9028 ;;      Params:         0       0       0
  9029 ;;      Locals:         1       0       0
  9030 ;;      Temps:          0       0       0
  9031 ;;      Totals:         1       0       0
  9032 ;;Total ram usage:        1 bytes
  9033 ;; Hardware stack levels used: 1
  9034 ;; Hardware stack levels required when called: 3
  9035 ;; This function calls:
  9036 ;;		_TiGetTics
  9037 ;;		_TiResetTics
  9038 ;; This function is called by:
  9039 ;;		_LcInit
  9040 ;;		_LcClear
  9041 ;;		_LcGotoXY
  9042 ;;		_LcPutChar
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text76
  9047  001874                     __ptext76:
  9048                           	callstack 0
  9049  001874                     _WaitForBusy:
  9050                           	callstack 25
  9051                           
  9052                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9053                           
  9054                           ;incstack = 0
  9055  001874  8694               	bsf	148,3,c	;volatile
  9056  001876  8494               	bsf	148,2,c	;volatile
  9057  001878  8294               	bsf	148,1,c	;volatile
  9058  00187A  8094               	bsf	148,0,c	;volatile
  9059                           
  9060                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  9061  00187C  9A8B               	bcf	139,5,c	;volatile
  9062                           
  9063                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  9064  00187E  8E8C               	bsf	140,7,c	;volatile
  9065                           
  9066                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  9067  001880  5031               	movf	_Timer^0,w,c
  9068  001882  EC93  F00D         	call	_TiResetTics
  9069  001886                     l4156:
  9070                           
  9071                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9072  001886  888B               	bsf	139,4,c	;volatile
  9073  001888  888B               	bsf	139,4,c	;volatile
  9074                           
  9075                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  9076  00188A  0E00               	movlw	0
  9077  00188C  B682               	btfsc	130,3,c	;volatile
  9078  00188E  0E01               	movlw	1
  9079  001890  6E6A               	movwf	WaitForBusy@Busy^0,c
  9080                           
  9081                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  9082  001892  988B               	bcf	139,4,c	;volatile
  9083                           
  9084                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  9085  001894  988B               	bcf	139,4,c	;volatile
  9086                           
  9087                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9088  001896  888B               	bsf	139,4,c	;volatile
  9089  001898  888B               	bsf	139,4,c	;volatile
  9090                           
  9091                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  9092  00189A  988B               	bcf	139,4,c	;volatile
  9093                           
  9094                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  9095  00189C  988B               	bcf	139,4,c	;volatile
  9096                           
  9097                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  9098  00189E  5031               	movf	_Timer^0,w,c
  9099  0018A0  ECFD  F00C         	call	_TiGetTics
  9100  0018A4  5063               	movf	?_TiGetTics^0,w,c
  9101  0018A6  1064               	iorwf	(?_TiGetTics+1)^0,w,c
  9102  0018A8  E001               	bz	l4178
  9103  0018AA  0012               	return	
  9104  0018AC                     l4178:
  9105                           
  9106                           ;LcTLCD.c: 227:  } while(Busy);
  9107  0018AC  506A               	movf	WaitForBusy@Busy^0,w,c
  9108  0018AE  E1EB               	bnz	l4156
  9109  0018B0  0012               	return		;funcret
  9110  0018B2                     __end_of_WaitForBusy:
  9111                           	callstack 0
  9112                           
  9113 ;; *************** function _CantaIR *****************
  9114 ;; Defined at:
  9115 ;;		line 180 in file "LcTLCD.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  IR              1    wreg     unsigned char 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  IR              1    7[COMRAM] unsigned char 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1    wreg      void 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2, status,0, cstack
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/1
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1
  9129 ;;      Params:         0       0       0
  9130 ;;      Locals:         1       0       0
  9131 ;;      Temps:          0       0       0
  9132 ;;      Totals:         1       0       0
  9133 ;;Total ram usage:        1 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; Hardware stack levels required when called: 3
  9136 ;; This function calls:
  9137 ;;		_CantaPartAlta
  9138 ;;		_CantaPartBaixa
  9139 ;; This function is called by:
  9140 ;;		_LcScroll
  9141 ;;		_LcInit
  9142 ;;		_LcClear
  9143 ;;		_LcGotoXY
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text77
  9148  001B0A                     __ptext77:
  9149                           	callstack 0
  9150  001B0A                     _CantaIR:
  9151                           	callstack 24
  9152                           
  9153                           ;incstack = 0
  9154                           ;CantaIR@IR stored from wreg
  9155  001B0A  6E65               	movwf	CantaIR@IR^0,c
  9156                           
  9157                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9158  001B0C  9694               	bcf	148,3,c	;volatile
  9159                           
  9160                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  9161                           
  9162                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  9163                           
  9164                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  9165  001B0E  ECC2  F00A         	call	PL36	;call to abstracted procedure
  9166                           
  9167                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  9168  001B12  5065               	movf	CantaIR@IR^0,w,c
  9169  001B14  EC78  F00B         	call	_CantaPartAlta
  9170                           
  9171                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9172                           
  9173                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  9174                           
  9175                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  9176                           
  9177                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  9178  001B18  EC70  F00C         	call	PL64	;call to abstracted procedure
  9179                           
  9180                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  9181  001B1C  5065               	movf	CantaIR@IR^0,w,c
  9182  001B1E  EC45  F00B         	call	_CantaPartBaixa
  9183                           
  9184                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9185                           
  9186                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  9187                           
  9188                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9189  001B22  EF69  F00C         	goto	PL30	;call to abstracted procedure
  9190  001B26                     __end_of_CantaIR:
  9191                           	callstack 0
  9192                           
  9193 ;; *************** function _CantaPartBaixa *****************
  9194 ;; Defined at:
  9195 ;;		line 173 in file "LcTLCD.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  c               1    wreg     unsigned char 
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  c               1    6[COMRAM] unsigned char 
  9200 ;; Return value:  Size  Location     Type
  9201 ;;                  1    wreg      void 
  9202 ;; Registers used:
  9203 ;;		wreg, status,2, status,0
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/1
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMRAM   BANK0   BANK1
  9209 ;;      Params:         0       0       0
  9210 ;;      Locals:         1       0       0
  9211 ;;      Temps:          1       0       0
  9212 ;;      Totals:         2       0       0
  9213 ;;Total ram usage:        2 bytes
  9214 ;; Hardware stack levels used: 1
  9215 ;; Hardware stack levels required when called: 2
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		_CantaIR
  9220 ;;		_CantaData
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text78
  9225  00168A                     __ptext78:
  9226                           	callstack 0
  9227  00168A                     _CantaPartBaixa:
  9228                           	callstack 24
  9229                           
  9230                           ;incstack = 0
  9231                           ;CantaPartBaixa@c stored from wreg
  9232  00168A  6E64               	movwf	CantaPartBaixa@c^0,c
  9233                           
  9234                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  9235  00168C  A664               	btfss	CantaPartBaixa@c^0,3,c
  9236  00168E  D003               	goto	u3260
  9237  001690  6A63               	clrf	??_CantaPartBaixa^0,c
  9238  001692  2A63               	incf	??_CantaPartBaixa^0,f,c
  9239  001694  D001               	goto	u3278
  9240  001696                     u3260:
  9241  001696  6A63               	clrf	??_CantaPartBaixa^0,c
  9242  001698                     u3278:
  9243  001698  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9244  00169A  D825               	call	PL68	;call to abstracted procedure
  9245  00169C  0BF7               	andlw	-9
  9246  00169E  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9247  0016A0  6E8B               	movwf	139,c	;volatile
  9248                           
  9249                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  9250  0016A2  A464               	btfss	CantaPartBaixa@c^0,2,c
  9251  0016A4  D003               	goto	u3280
  9252  0016A6  6A63               	clrf	??_CantaPartBaixa^0,c
  9253  0016A8  2A63               	incf	??_CantaPartBaixa^0,f,c
  9254  0016AA  D001               	goto	u3298
  9255  0016AC                     u3280:
  9256  0016AC  6A63               	clrf	??_CantaPartBaixa^0,c
  9257  0016AE                     u3298:
  9258  0016AE  D81B               	call	PL68	;call to abstracted procedure
  9259  0016B0  0BFB               	andlw	-5
  9260  0016B2  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9261  0016B4  6E8B               	movwf	139,c	;volatile
  9262                           
  9263                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  9264  0016B6  A264               	btfss	CantaPartBaixa@c^0,1,c
  9265  0016B8  D003               	goto	u3300
  9266  0016BA  6A63               	clrf	??_CantaPartBaixa^0,c
  9267  0016BC  2A63               	incf	??_CantaPartBaixa^0,f,c
  9268  0016BE  D001               	goto	u3318
  9269  0016C0                     u3300:
  9270  0016C0  6A63               	clrf	??_CantaPartBaixa^0,c
  9271  0016C2                     u3318:
  9272  0016C2  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9273  0016C4  508B               	movf	139,w,c	;volatile
  9274  0016C6  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9275  0016C8  0BFD               	andlw	-3
  9276  0016CA  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9277  0016CC  6E8B               	movwf	139,c	;volatile
  9278                           
  9279                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  9280  0016CE  A064               	btfss	CantaPartBaixa@c^0,0,c
  9281  0016D0  D003               	goto	u3320
  9282  0016D2  6A63               	clrf	??_CantaPartBaixa^0,c
  9283  0016D4  2A63               	incf	??_CantaPartBaixa^0,f,c
  9284  0016D6  D001               	goto	u3338
  9285  0016D8                     u3320:
  9286  0016D8  6A63               	clrf	??_CantaPartBaixa^0,c
  9287  0016DA                     u3338:
  9288  0016DA  508B               	movf	139,w,c	;volatile
  9289  0016DC  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9290  0016DE  0BFE               	andlw	-2
  9291  0016E0  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9292  0016E2  6E8B               	movwf	139,c	;volatile
  9293  0016E4  0012               	return		;funcret
  9294  0016E6                     __end_of_CantaPartBaixa:
  9295                           	callstack 0
  9296  0016E6                     PL68:
  9297                           	callstack 24
  9298  0016E6  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9299  0016E8  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9300  0016EA  508B               	movf	139,w,c	;volatile
  9301  0016EC  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9302  0016EE  0012               	return	
  9303  0016F0                     __end_ofPL68:
  9304                           	callstack 0
  9305                           
  9306 ;; *************** function _CantaPartAlta *****************
  9307 ;; Defined at:
  9308 ;;		line 166 in file "LcTLCD.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  c               1    wreg     unsigned char 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  c               1    6[COMRAM] unsigned char 
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      void 
  9315 ;; Registers used:
  9316 ;;		wreg, status,2, status,0
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/1
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1
  9322 ;;      Params:         0       0       0
  9323 ;;      Locals:         1       0       0
  9324 ;;      Temps:          1       0       0
  9325 ;;      Totals:         2       0       0
  9326 ;;Total ram usage:        2 bytes
  9327 ;; Hardware stack levels used: 1
  9328 ;; Hardware stack levels required when called: 2
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_CantaIR
  9333 ;;		_CantaData
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text79
  9338  0016F0                     __ptext79:
  9339                           	callstack 0
  9340  0016F0                     _CantaPartAlta:
  9341                           	callstack 24
  9342                           
  9343                           ;incstack = 0
  9344                           ;CantaPartAlta@c stored from wreg
  9345  0016F0  6E64               	movwf	CantaPartAlta@c^0,c
  9346                           
  9347                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  9348  0016F2  AE64               	btfss	CantaPartAlta@c^0,7,c
  9349  0016F4  D003               	goto	u3180
  9350  0016F6  6A63               	clrf	??_CantaPartAlta^0,c
  9351  0016F8  2A63               	incf	??_CantaPartAlta^0,f,c
  9352  0016FA  D001               	goto	u3198
  9353  0016FC                     u3180:
  9354  0016FC  6A63               	clrf	??_CantaPartAlta^0,c
  9355  0016FE                     u3198:
  9356  0016FE  4663               	rlncf	??_CantaPartAlta^0,f,c
  9357  001700  D825               	call	PL58	;call to abstracted procedure
  9358  001702  0BF7               	andlw	-9
  9359  001704  1863               	xorwf	??_CantaPartAlta^0,w,c
  9360  001706  6E8B               	movwf	139,c	;volatile
  9361                           
  9362                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  9363  001708  AC64               	btfss	CantaPartAlta@c^0,6,c
  9364  00170A  D003               	goto	u3200
  9365  00170C  6A63               	clrf	??_CantaPartAlta^0,c
  9366  00170E  2A63               	incf	??_CantaPartAlta^0,f,c
  9367  001710  D001               	goto	u3218
  9368  001712                     u3200:
  9369  001712  6A63               	clrf	??_CantaPartAlta^0,c
  9370  001714                     u3218:
  9371  001714  D81B               	call	PL58	;call to abstracted procedure
  9372  001716  0BFB               	andlw	-5
  9373  001718  1863               	xorwf	??_CantaPartAlta^0,w,c
  9374  00171A  6E8B               	movwf	139,c	;volatile
  9375                           
  9376                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  9377  00171C  AA64               	btfss	CantaPartAlta@c^0,5,c
  9378  00171E  D003               	goto	u3220
  9379  001720  6A63               	clrf	??_CantaPartAlta^0,c
  9380  001722  2A63               	incf	??_CantaPartAlta^0,f,c
  9381  001724  D001               	goto	u3238
  9382  001726                     u3220:
  9383  001726  6A63               	clrf	??_CantaPartAlta^0,c
  9384  001728                     u3238:
  9385  001728  4663               	rlncf	??_CantaPartAlta^0,f,c
  9386  00172A  508B               	movf	139,w,c	;volatile
  9387  00172C  1863               	xorwf	??_CantaPartAlta^0,w,c
  9388  00172E  0BFD               	andlw	-3
  9389  001730  1863               	xorwf	??_CantaPartAlta^0,w,c
  9390  001732  6E8B               	movwf	139,c	;volatile
  9391                           
  9392                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  9393  001734  A864               	btfss	CantaPartAlta@c^0,4,c
  9394  001736  D003               	goto	u3240
  9395  001738  6A63               	clrf	??_CantaPartAlta^0,c
  9396  00173A  2A63               	incf	??_CantaPartAlta^0,f,c
  9397  00173C  D001               	goto	u3258
  9398  00173E                     u3240:
  9399  00173E  6A63               	clrf	??_CantaPartAlta^0,c
  9400  001740                     u3258:
  9401  001740  508B               	movf	139,w,c	;volatile
  9402  001742  1863               	xorwf	??_CantaPartAlta^0,w,c
  9403  001744  0BFE               	andlw	-2
  9404  001746  1863               	xorwf	??_CantaPartAlta^0,w,c
  9405  001748  6E8B               	movwf	139,c	;volatile
  9406  00174A  0012               	return		;funcret
  9407  00174C                     __end_of_CantaPartAlta:
  9408                           	callstack 0
  9409  00174C                     PL58:
  9410                           	callstack 24
  9411  00174C  4663               	rlncf	??_CantaPartAlta^0,f,c
  9412  00174E  4663               	rlncf	??_CantaPartAlta^0,f,c
  9413  001750  508B               	movf	139,w,c	;volatile
  9414  001752  1863               	xorwf	??_CantaPartAlta^0,w,c
  9415  001754  0012               	return	
  9416  001756                     __end_ofPL58:
  9417                           	callstack 0
  9418                           
  9419 ;; *************** function _Espera *****************
  9420 ;; Defined at:
  9421 ;;		line 161 in file "LcTLCD.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;  Timer           1    wreg     unsigned char 
  9424 ;;  ms              2   12[COMRAM] int 
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;  Timer           1   15[COMRAM] unsigned char 
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  1    wreg      void 
  9429 ;; Registers used:
  9430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMRAM   BANK0   BANK1
  9436 ;;      Params:         2       0       0
  9437 ;;      Locals:         1       0       0
  9438 ;;      Temps:          1       0       0
  9439 ;;      Totals:         4       0       0
  9440 ;;Total ram usage:        4 bytes
  9441 ;; Hardware stack levels used: 1
  9442 ;; Hardware stack levels required when called: 3
  9443 ;; This function calls:
  9444 ;;		_TiGetTics
  9445 ;;		_TiResetTics
  9446 ;; This function is called by:
  9447 ;;		_LcInit
  9448 ;;		_LcClear
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text80
  9453  001AAE                     __ptext80:
  9454                           	callstack 0
  9455  001AAE                     _Espera:
  9456                           	callstack 25
  9457                           
  9458                           ;incstack = 0
  9459                           ;Espera@Timer stored from wreg
  9460  001AAE  6E6D               	movwf	Espera@Timer^0,c
  9461                           
  9462                           ;LcTLCD.c: 162:  TiResetTics(Timer);
  9463  001AB0  506D               	movf	Espera@Timer^0,w,c
  9464  001AB2  EC93  F00D         	call	_TiResetTics
  9465  001AB6                     l4182:
  9466  001AB6  506D               	movf	Espera@Timer^0,w,c
  9467  001AB8  ECFD  F00C         	call	_TiGetTics
  9468  001ABC  506A               	movf	Espera@ms^0,w,c
  9469  001ABE  5C63               	subwf	?_TiGetTics^0,w,c
  9470  001AC0  5064               	movf	(?_TiGetTics+1)^0,w,c
  9471  001AC2  0A80               	xorlw	128
  9472  001AC4  6E6C               	movwf	??_Espera^0,c
  9473  001AC6  506B               	movf	(Espera@ms+1)^0,w,c
  9474  001AC8  0A80               	xorlw	128
  9475  001ACA  586C               	subwfb	??_Espera^0,w,c
  9476  001ACC  E3F4               	bnc	l4182
  9477  001ACE  0012               	return		;funcret
  9478  001AD0                     __end_of_Espera:
  9479                           	callstack 0
  9480                           
  9481 ;; *************** function _TiResetTics *****************
  9482 ;; Defined at:
  9483 ;;		line 55 in file "TiTTimer.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;  Handle          1    wreg     unsigned char 
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;  Handle          1    5[COMRAM] unsigned char 
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/1
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMRAM   BANK0   BANK1
  9497 ;;      Params:         0       0       0
  9498 ;;      Locals:         1       0       0
  9499 ;;      Temps:          0       0       0
  9500 ;;      Totals:         1       0       0
  9501 ;;Total ram usage:        1 bytes
  9502 ;; Hardware stack levels used: 1
  9503 ;; Hardware stack levels required when called: 2
  9504 ;; This function calls:
  9505 ;;		Nothing
  9506 ;; This function is called by:
  9507 ;;		_Espera
  9508 ;;		_WaitForBusy
  9509 ;;		_SMotor
  9510 ;;		_TeTeclat
  9511 ;;		_menu
  9512 ;;		_motorAltaveu
  9513 ;;		_GLCDMotor
  9514 ;;		_motorHora
  9515 ;;		_motorSIO
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           	psect	text81
  9520  001B26                     __ptext81:
  9521                           	callstack 0
  9522  001B26                     _TiResetTics:
  9523                           	callstack 27
  9524                           
  9525                           ;incstack = 0
  9526                           ;TiResetTics@Handle stored from wreg
  9527  001B26  6E63               	movwf	TiResetTics@Handle^0,c
  9528                           
  9529                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  9530  001B28  5063               	movf	TiResetTics@Handle^0,w,c
  9531  001B2A  D805               	call	PL28	;call to abstracted procedure
  9532  001B2C  C003  FFDE         	movff	_h_Tics,postinc2
  9533  001B30  C004  FFDD         	movff	_h_Tics+1,postdec2
  9534  001B34  0012               	return		;funcret
  9535  001B36                     __end_of_TiResetTics:
  9536                           	callstack 0
  9537  001B36                     PL28:
  9538                           	callstack 24
  9539  001B36  0D03               	mullw	3
  9540  001B38  50F3               	movf	243,w,c
  9541  001B3A  0F80               	addlw	low _s_Timers
  9542  001B3C  6ED9               	movwf	fsr2l,c
  9543  001B3E  6ADA               	clrf	fsr2h,c
  9544  001B40  0012               	return	
  9545  001B42                     __end_ofPL28:
  9546                           	callstack 0
  9547                           
  9548 ;; *************** function _TiGetTics *****************
  9549 ;; Defined at:
  9550 ;;		line 61 in file "TiTTimer.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;  Handle          1    wreg     unsigned char 
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;  Handle          1    9[COMRAM] unsigned char 
  9555 ;;  actual          2   10[COMRAM] volatile unsigned int 
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  2    5[COMRAM] int 
  9558 ;; Registers used:
  9559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/1
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1
  9565 ;;      Params:         2       0       0
  9566 ;;      Locals:         3       0       0
  9567 ;;      Temps:          2       0       0
  9568 ;;      Totals:         7       0       0
  9569 ;;Total ram usage:        7 bytes
  9570 ;; Hardware stack levels used: 1
  9571 ;; Hardware stack levels required when called: 2
  9572 ;; This function calls:
  9573 ;;		Nothing
  9574 ;; This function is called by:
  9575 ;;		_Espera
  9576 ;;		_WaitForBusy
  9577 ;;		_SMotor
  9578 ;;		_TeTeclat
  9579 ;;		_menu
  9580 ;;		_motorAltaveu
  9581 ;;		_GLCDMotor
  9582 ;;		_motorHora
  9583 ;;		_motorSIO
  9584 ;; This function uses a non-reentrant model
  9585 ;;
  9586                           
  9587                           	psect	text82
  9588  0019FA                     __ptext82:
  9589                           	callstack 0
  9590  0019FA                     _TiGetTics:
  9591                           	callstack 27
  9592                           
  9593                           ;incstack = 0
  9594                           ;TiGetTics@Handle stored from wreg
  9595  0019FA  6E67               	movwf	TiGetTics@Handle^0,c
  9596                           
  9597                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  9598  0019FC  C003  F068         	movff	_h_Tics,TiGetTics@actual	;volatile
  9599  001A00  C004  F069         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  9600                           
  9601                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  9602  001A04  5067               	movf	TiGetTics@Handle^0,w,c
  9603  001A06  EC9B  F00D         	call	PL28	;call to abstracted procedure
  9604  001A0A  CFDE F065          	movff	postinc2,??_TiGetTics
  9605  001A0E  CFDD F066          	movff	postdec2,??_TiGetTics+1
  9606  001A12  5065               	movf	??_TiGetTics^0,w,c
  9607  001A14  5C68               	subwf	TiGetTics@actual^0,w,c	;volatile
  9608  001A16  6E63               	movwf	?_TiGetTics^0,c
  9609  001A18  5066               	movf	(??_TiGetTics+1)^0,w,c
  9610  001A1A  5869               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  9611  001A1C  6E64               	movwf	(?_TiGetTics+1)^0,c
  9612  001A1E  0012               	return		;funcret
  9613  001A20                     __end_of_TiGetTics:
  9614                           	callstack 0
  9615                           
  9616 ;; *************** function _GLCDInit *****************
  9617 ;; Defined at:
  9618 ;;		line 26 in file "GestioLCD.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;		None
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;		None
  9623 ;; Return value:  Size  Location     Type
  9624 ;;                  1    wreg      void 
  9625 ;; Registers used:
  9626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9627 ;; Tracked objects:
  9628 ;;		On entry : 0/0
  9629 ;;		On exit  : 0/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMRAM   BANK0   BANK1
  9632 ;;      Params:         0       0       0
  9633 ;;      Locals:         0       0       0
  9634 ;;      Temps:          0       0       0
  9635 ;;      Totals:         0       0       0
  9636 ;;Total ram usage:        0 bytes
  9637 ;; Hardware stack levels used: 1
  9638 ;; Hardware stack levels required when called: 3
  9639 ;; This function calls:
  9640 ;;		_TiGetTimer
  9641 ;; This function is called by:
  9642 ;;		_main
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           	psect	text83
  9647  001C9C                     __ptext83:
  9648                           	callstack 0
  9649  001C9C                     _GLCDInit:
  9650                           	callstack 27
  9651                           
  9652                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  9653                           
  9654                           ;incstack = 0
  9655  001C9C  ECBF  F00C         	call	_TiGetTimer	;wreg free
  9656  001CA0  6E19               	movwf	_timerGLCD^0,c
  9657  001CA2  0012               	return		;funcret
  9658  001CA4                     __end_of_GLCDInit:
  9659                           	callstack 0
  9660                           
  9661 ;; *************** function _TiGetTimer *****************
  9662 ;; Defined at:
  9663 ;;		line 70 in file "TiTTimer.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;		None
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;		None
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      unsigned char 
  9670 ;; Registers used:
  9671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1
  9677 ;;      Params:         0       0       0
  9678 ;;      Locals:         0       0       0
  9679 ;;      Temps:          1       0       0
  9680 ;;      Totals:         1       0       0
  9681 ;;Total ram usage:        1 bytes
  9682 ;; Hardware stack levels used: 1
  9683 ;; Hardware stack levels required when called: 2
  9684 ;; This function calls:
  9685 ;;		Nothing
  9686 ;; This function is called by:
  9687 ;;		_LcInit
  9688 ;;		_Sinit
  9689 ;;		_TeInit
  9690 ;;		_Minit
  9691 ;;		_initAltaveu
  9692 ;;		_GLCDInit
  9693 ;;		_initHora
  9694 ;;		_initSIO
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text84
  9699  00197E                     __ptext84:
  9700                           	callstack 0
  9701  00197E                     _TiGetTimer:
  9702                           	callstack 27
  9703                           
  9704                           ;TiTTimer.c: 74:     counter=0;
  9705                           
  9706                           ;incstack = 0
  9707  00197E  6A29               	clrf	_counter^0,c
  9708                           
  9709                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9710  001980  D005               	goto	l4228
  9711  001982                     l4220:
  9712                           
  9713                           ;TiTTimer.c: 76:         counter++;
  9714  001982  2A29               	incf	_counter^0,f,c
  9715                           
  9716                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  9717  001984  0E08               	movlw	8
  9718  001986  1829               	xorwf	_counter^0,w,c
  9719  001988  E101               	bnz	l4228
  9720  00198A  0CFF               	retlw	255
  9721  00198C                     l4228:
  9722                           
  9723                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9724  00198C  D807               	call	PL12	;call to abstracted procedure
  9725  00198E  04DE               	decf	postinc2,w,c
  9726  001990  E0F8               	bz	l4220
  9727                           
  9728                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  9729  001992  D804               	call	PL12	;call to abstracted procedure
  9730  001994  0E01               	movlw	1
  9731  001996  6EDF               	movwf	indf2,c
  9732                           
  9733                           ;TiTTimer.c: 80:     return (counter);
  9734  001998  5029               	movf	_counter^0,w,c
  9735  00199A  0012               	return		;funcret
  9736  00199C                     __end_of_TiGetTimer:
  9737                           	callstack 0
  9738  00199C                     PL12:
  9739                           	callstack 28
  9740  00199C  5029               	movf	_counter^0,w,c
  9741  00199E  0D03               	mullw	3
  9742  0019A0  50F3               	movf	243,w,c
  9743  0019A2  0F82               	addlw	low (_s_Timers+2)
  9744  0019A4  6ED9               	movwf	fsr2l,c
  9745  0019A6  6ADA               	clrf	fsr2h,c
  9746  0019A8  0012               	return	
  9747  0019AA                     __end_ofPL12:
  9748                           	callstack 0
  9749                           
  9750 ;; *************** function _CtoA *****************
  9751 ;; Defined at:
  9752 ;;		line 23 in file "CtoA.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;		None
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;		None
  9757 ;; Return value:  Size  Location     Type
  9758 ;;                  1    wreg      void 
  9759 ;; Registers used:
  9760 ;;		wreg, status,2, status,0
  9761 ;; Tracked objects:
  9762 ;;		On entry : 0/1
  9763 ;;		On exit  : 0/0
  9764 ;;		Unchanged: 0/0
  9765 ;; Data sizes:     COMRAM   BANK0   BANK1
  9766 ;;      Params:         0       0       0
  9767 ;;      Locals:         0       0       0
  9768 ;;      Temps:          0       0       0
  9769 ;;      Totals:         0       0       0
  9770 ;;Total ram usage:        0 bytes
  9771 ;; Hardware stack levels used: 1
  9772 ;; Hardware stack levels required when called: 2
  9773 ;; This function calls:
  9774 ;;		Nothing
  9775 ;; This function is called by:
  9776 ;;		_main
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text85
  9781  001A68                     __ptext85:
  9782                           	callstack 0
  9783  001A68                     _CtoA:
  9784                           	callstack 28
  9785                           
  9786                           ;CtoA.c: 24:     if (convertir != 250) {
  9787                           
  9788                           ;incstack = 0
  9789  001A68  0EFA               	movlw	250
  9790  001A6A  1845               	xorwf	_convertir^0,w,c
  9791  001A6C  B4D8               	btfsc	status,2,c
  9792  001A6E  0012               	return	
  9793                           
  9794                           ;CtoA.c: 25:         if (convertir != 0){
  9795  001A70  5045               	movf	_convertir^0,w,c
  9796  001A72  E009               	bz	l3460
  9797                           
  9798                           ;CtoA.c: 26:             stringScore[1]++;
  9799  001A74  2A5C               	incf	(_stringScore+1)^0,f,c
  9800                           
  9801                           ;CtoA.c: 27:             if (stringScore[1] == 58) {
  9802  001A76  0E3A               	movlw	58
  9803  001A78  185C               	xorwf	(_stringScore+1)^0,w,c
  9804  001A7A  E103               	bnz	l3458
  9805                           
  9806                           ;CtoA.c: 28:                 stringScore[1] = '0';
  9807  001A7C  0E30               	movlw	48
  9808  001A7E  6E5C               	movwf	(_stringScore+1)^0,c
  9809                           
  9810                           ;CtoA.c: 29:                 stringScore[0]++;
  9811  001A80  2A5B               	incf	_stringScore^0,f,c
  9812  001A82                     l3458:
  9813                           
  9814                           ;CtoA.c: 31:             convertir--;
  9815  001A82  0645               	decf	_convertir^0,f,c
  9816                           
  9817                           ;CtoA.c: 32:         } else {
  9818  001A84  0012               	return	
  9819  001A86                     l3460:
  9820                           
  9821                           ;CtoA.c: 33:             convertir = 250;
  9822  001A86  0EFA               	movlw	250
  9823  001A88  6E45               	movwf	_convertir^0,c
  9824  001A8A  0CFA               	retlw	250	;funcret
  9825  001A8C                     __end_of_CtoA:
  9826                           	callstack 0
  9827                           
  9828 ;; *************** function _high_rsi *****************
  9829 ;; Defined at:
  9830 ;;		line 22 in file "main.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;		None
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1    wreg      void 
  9837 ;; Registers used:
  9838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1
  9844 ;;      Params:         0       0       0
  9845 ;;      Locals:         0       0       0
  9846 ;;      Temps:          4       0       0
  9847 ;;      Totals:         4       0       0
  9848 ;;Total ram usage:        4 bytes
  9849 ;; Hardware stack levels used: 1
  9850 ;; Hardware stack levels required when called: 1
  9851 ;; This function calls:
  9852 ;;		__TiRSITimer
  9853 ;; This function is called by:
  9854 ;;		Interrupt level 2
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           	psect	intcode
  9859  000008                     __pintcode:
  9860                           	callstack 0
  9861  000008                     _high_rsi:
  9862                           	callstack 24
  9863                           
  9864                           ;incstack = 0
  9865  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9866  00000A  CFD9 F05F          	movff	fsr2l,??_high_rsi
  9867  00000E  CFDA F060          	movff	fsr2h,??_high_rsi+1
  9868  000012  CFF3 F061          	movff	prodl,??_high_rsi+2
  9869  000016  CFF4 F062          	movff	prodh,??_high_rsi+3
  9870  00001A  ECF7  F00B         	call	__TiRSITimer	;wreg free
  9871  00001E  C062  FFF4         	movff	??_high_rsi+3,prodh
  9872  000022  C061  FFF3         	movff	??_high_rsi+2,prodl
  9873  000026  C060  FFDA         	movff	??_high_rsi+1,fsr2h
  9874  00002A  C05F  FFD9         	movff	??_high_rsi,fsr2l
  9875  00002E  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9876  000030  0011               	retfie		f
  9877  000032                     __end_of_high_rsi:
  9878                           	callstack 0
  9879                           
  9880 ;; *************** function __TiRSITimer *****************
  9881 ;; Defined at:
  9882 ;;		line 37 in file "TiTTimer.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;		None
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;		None
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1    wreg      void 
  9889 ;; Registers used:
  9890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMRAM   BANK0   BANK1
  9896 ;;      Params:         0       0       0
  9897 ;;      Locals:         0       0       0
  9898 ;;      Temps:          1       0       0
  9899 ;;      Totals:         1       0       0
  9900 ;;Total ram usage:        1 bytes
  9901 ;; Hardware stack levels used: 1
  9902 ;; This function calls:
  9903 ;;		Nothing
  9904 ;; This function is called by:
  9905 ;;		_high_rsi
  9906 ;; This function uses a non-reentrant model
  9907 ;;
  9908                           
  9909                           	psect	text87
  9910  0017EE                     __ptext87:
  9911                           	callstack 0
  9912  0017EE                     __TiRSITimer:
  9913                           	callstack 0
  9914                           
  9915                           ;TiTTimer.c: 39:     TMR0H = 223;
  9916                           
  9917                           ;incstack = 0
  9918                           
  9919                           ;TiTTimer.c: 40:     TMR0L = 148;
  9920  0017EE  D81E               	call	PL48	;call to abstracted procedure
  9921                           
  9922                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  9923  0017F0  94F2               	bcf	242,2,c	;volatile
  9924                           
  9925                           ;TiTTimer.c: 42:     h_Tics++;
  9926  0017F2  4A03               	infsnz	_h_Tics^0,f,c
  9927  0017F4  2A04               	incf	(_h_Tics+1)^0,f,c
  9928                           
  9929                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  9930  0017F6  0E48               	movlw	72
  9931  0017F8  5C03               	subwf	_h_Tics^0,w,c
  9932  0017FA  0EEE               	movlw	238
  9933  0017FC  5804               	subwfb	(_h_Tics+1)^0,w,c
  9934  0017FE  A0D8               	btfss	status,0,c
  9935  001800  0012               	return	
  9936                           
  9937                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  9938  001802  6A29               	clrf	_counter^0,c
  9939  001804                     i2l4406:
  9940  001804  0E07               	movlw	7
  9941  001806  6429               	cpfsgt	_counter^0,c
  9942  001808  D001               	goto	i2l4410
  9943  00180A  D00D               	goto	i2l376
  9944  00180C                     i2l4410:
  9945                           
  9946                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  9947  00180C  ECCE  F00C         	call	PL12	;call to abstracted procedure
  9948  001810  04DE               	decf	postinc2,w,c
  9949  001812  E107               	bnz	i2l4414
  9950                           
  9951                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  9952  001814  5029               	movf	_counter^0,w,c
  9953  001816  EC9B  F00D         	call	PL28	;call to abstracted procedure
  9954  00181A  5003               	movf	_h_Tics^0,w,c
  9955  00181C  5EDE               	subwf	postinc2,f,c
  9956  00181E  5004               	movf	(_h_Tics+1)^0,w,c
  9957  001820  5ADD               	subwfb	postdec2,f,c
  9958  001822                     i2l4414:
  9959                           
  9960                           ;TiTTimer.c: 50:         }
  9961  001822  2A29               	incf	_counter^0,f,c
  9962  001824  D7EF               	goto	i2l4406
  9963  001826                     i2l376:
  9964                           
  9965                           ;TiTTimer.c: 51:         h_Tics=0;
  9966  001826  6A03               	clrf	_h_Tics^0,c
  9967  001828  6A04               	clrf	(_h_Tics+1)^0,c
  9968  00182A  0012               	return		;funcret
  9969  00182C                     __end_of__TiRSITimer:
  9970                           	callstack 0
  9971  00182C                     PL48:
  9972                           	callstack 28
  9973  00182C  0EDF               	movlw	223
  9974  00182E  6ED7               	movwf	215,c	;volatile
  9975  001830  0E94               	movlw	148
  9976  001832  6ED6               	movwf	214,c	;volatile
  9977  001834  0C94               	retlw	148
  9978  001836                     __end_ofPL48:
  9979                           	callstack 0
  9980                           
  9981                           	psect	rparam
  9982  0000                     
  9983                           	psect	temp
  9984  000079                     btemp:
  9985                           	callstack 0
  9986  000079                     	ds	1
  9987  0000                     int$flags	set	btemp
  9988  0000                     wtemp8	set	btemp+1
  9989  0000                     ttemp5	set	btemp+1
  9990  0000                     ttemp6	set	btemp+4
  9991  0000                     ttemp7	set	btemp+8
  9992                           
  9993                           	psect	idloc
  9994                           
  9995                           ;Config register IDLOC0 @ 0x200000
  9996                           ;	unspecified, using default values
  9997  200000                     	org	2097152
  9998  200000  FF                 	db	255
  9999                           
 10000                           ;Config register IDLOC1 @ 0x200001
 10001                           ;	unspecified, using default values
 10002  200001                     	org	2097153
 10003  200001  FF                 	db	255
 10004                           
 10005                           ;Config register IDLOC2 @ 0x200002
 10006                           ;	unspecified, using default values
 10007  200002                     	org	2097154
 10008  200002  FF                 	db	255
 10009                           
 10010                           ;Config register IDLOC3 @ 0x200003
 10011                           ;	unspecified, using default values
 10012  200003                     	org	2097155
 10013  200003  FF                 	db	255
 10014                           
 10015                           ;Config register IDLOC4 @ 0x200004
 10016                           ;	unspecified, using default values
 10017  200004                     	org	2097156
 10018  200004  FF                 	db	255
 10019                           
 10020                           ;Config register IDLOC5 @ 0x200005
 10021                           ;	unspecified, using default values
 10022  200005                     	org	2097157
 10023  200005  FF                 	db	255
 10024                           
 10025                           ;Config register IDLOC6 @ 0x200006
 10026                           ;	unspecified, using default values
 10027  200006                     	org	2097158
 10028  200006  FF                 	db	255
 10029                           
 10030                           ;Config register IDLOC7 @ 0x200007
 10031                           ;	unspecified, using default values
 10032  200007                     	org	2097159
 10033  200007  FF                 	db	255
 10034                           
 10035                           	psect	config
 10036                           
 10037                           ; Padding undefined space
 10038  300000                     	org	3145728
 10039  300000  FF                 	db	255
 10040                           
 10041                           ;Config register CONFIG1H @ 0x300001
 10042                           ;	Oscillator
 10043                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 10044                           ;	Fail-Safe Clock Monitor Enable bit
 10045                           ;	FCMEN = 0x0, unprogrammed default
 10046                           ;	Internal/External Oscillator Switchover bit
 10047                           ;	IESO = 0x0, unprogrammed default
 10048  300001                     	org	3145729
 10049  300001  06                 	db	6
 10050                           
 10051                           ;Config register CONFIG2L @ 0x300002
 10052                           ;	unspecified, using default values
 10053                           ;	Power-up Timer Enable bit
 10054                           ;	PWRT = 0x1, unprogrammed default
 10055                           ;	Brown-out Reset Enable bits
 10056                           ;	BOR = 0x3, unprogrammed default
 10057                           ;	Brown-out Reset Voltage bits
 10058                           ;	BORV = 0x3, unprogrammed default
 10059  300002                     	org	3145730
 10060  300002  1F                 	db	31
 10061                           
 10062                           ;Config register CONFIG2H @ 0x300003
 10063                           ;	Watchdog Timer Enable bit
 10064                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10065                           ;	Watchdog Timer Postscale Select bits
 10066                           ;	WDTPS = 0xF, unprogrammed default
 10067  300003                     	org	3145731
 10068  300003  1E                 	db	30
 10069                           
 10070                           ; Padding undefined space
 10071  300004                     	org	3145732
 10072  300004  FF                 	db	255
 10073                           
 10074                           ;Config register CONFIG3H @ 0x300005
 10075                           ;	CCP2 MUX bit
 10076                           ;	CCP2MX = 0x1, unprogrammed default
 10077                           ;	PORTB A/D Enable bit
 10078                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10079                           ;	Low-Power Timer1 Oscillator Enable bit
 10080                           ;	LPT1OSC = 0x0, unprogrammed default
 10081                           ;	MCLR Pin Enable bit
 10082                           ;	MCLRE = 0x1, unprogrammed default
 10083  300005                     	org	3145733
 10084  300005  81                 	db	129
 10085                           
 10086                           ;Config register CONFIG4L @ 0x300006
 10087                           ;	Stack Full/Underflow Reset Enable bit
 10088                           ;	STVREN = 0x1, unprogrammed default
 10089                           ;	Single-Supply ICSP Enable bit
 10090                           ;	LVP = OFF, Single-Supply ICSP disabled
 10091                           ;	Boot Block Size Select bits
 10092                           ;	BBSIZ = 0x0, unprogrammed default
 10093                           ;	Extended Instruction Set Enable bit
 10094                           ;	XINST = 0x0, unprogrammed default
 10095                           ;	Background Debugger Enable bit
 10096                           ;	DEBUG = 0x1, unprogrammed default
 10097  300006                     	org	3145734
 10098  300006  81                 	db	129
 10099                           
 10100                           ; Padding undefined space
 10101  300007                     	org	3145735
 10102  300007  FF                 	db	255
 10103                           
 10104                           ;Config register CONFIG5L @ 0x300008
 10105                           ;	unspecified, using default values
 10106                           ;	Code Protection bit
 10107                           ;	CP0 = 0x1, unprogrammed default
 10108                           ;	Code Protection bit
 10109                           ;	CP1 = 0x1, unprogrammed default
 10110  300008                     	org	3145736
 10111  300008  03                 	db	3
 10112                           
 10113                           ;Config register CONFIG5H @ 0x300009
 10114                           ;	unspecified, using default values
 10115                           ;	Boot Block Code Protection bitProtect Boot
 10116                           ;	CPB = 0x1, unprogrammed default
 10117                           ;	Data EEPROM Code Protection bit
 10118                           ;	CPD = 0x1, unprogrammed default
 10119  300009                     	org	3145737
 10120  300009  C0                 	db	192
 10121                           
 10122                           ;Config register CONFIG6L @ 0x30000A
 10123                           ;	unspecified, using default values
 10124                           ;	Write Protection bit
 10125                           ;	WRT0 = 0x1, unprogrammed default
 10126                           ;	Write Protection bit
 10127                           ;	WRT1 = 0x1, unprogrammed default
 10128  30000A                     	org	3145738
 10129  30000A  03                 	db	3
 10130                           
 10131                           ;Config register CONFIG6H @ 0x30000B
 10132                           ;	unspecified, using default values
 10133                           ;	Configuration Register Write Protection bit
 10134                           ;	WRTC = 0x1, unprogrammed default
 10135                           ;	Boot Block Write Protection bit
 10136                           ;	WRTB = 0x1, unprogrammed default
 10137                           ;	Data EEPROM Write Protection bit
 10138                           ;	WRTD = 0x1, unprogrammed default
 10139  30000B                     	org	3145739
 10140  30000B  E0                 	db	224
 10141                           
 10142                           ;Config register CONFIG7L @ 0x30000C
 10143                           ;	unspecified, using default values
 10144                           ;	Table Read Protection bit
 10145                           ;	EBTR0 = 0x1, unprogrammed default
 10146                           ;	Table Read Protection bit
 10147                           ;	EBTR1 = 0x1, unprogrammed default
 10148  30000C                     	org	3145740
 10149  30000C  03                 	db	3
 10150                           
 10151                           ;Config register CONFIG7H @ 0x30000D
 10152                           ;	unspecified, using default values
 10153                           ;	Boot Block Table Read Protection bit
 10154                           ;	EBTRB = 0x1, unprogrammed default
 10155  30000D                     	org	3145741
 10156  30000D  40                 	db	64
 10157                           tosu	equ	0xFFF
 10158                           tosh	equ	0xFFE
 10159                           tosl	equ	0xFFD
 10160                           stkptr	equ	0xFFC
 10161                           pclatu	equ	0xFFB
 10162                           pclath	equ	0xFFA
 10163                           pcl	equ	0xFF9
 10164                           tblptru	equ	0xFF8
 10165                           tblptrh	equ	0xFF7
 10166                           tblptrl	equ	0xFF6
 10167                           tablat	equ	0xFF5
 10168                           prodh	equ	0xFF4
 10169                           prodl	equ	0xFF3
 10170                           indf0	equ	0xFEF
 10171                           postinc0	equ	0xFEE
 10172                           postdec0	equ	0xFED
 10173                           preinc0	equ	0xFEC
 10174                           plusw0	equ	0xFEB
 10175                           fsr0h	equ	0xFEA
 10176                           fsr0l	equ	0xFE9
 10177                           wreg	equ	0xFE8
 10178                           indf1	equ	0xFE7
 10179                           postinc1	equ	0xFE6
 10180                           postdec1	equ	0xFE5
 10181                           preinc1	equ	0xFE4
 10182                           plusw1	equ	0xFE3
 10183                           fsr1h	equ	0xFE2
 10184                           fsr1l	equ	0xFE1
 10185                           bsr	equ	0xFE0
 10186                           indf2	equ	0xFDF
 10187                           postinc2	equ	0xFDE
 10188                           postdec2	equ	0xFDD
 10189                           preinc2	equ	0xFDC
 10190                           plusw2	equ	0xFDB
 10191                           fsr2h	equ	0xFDA
 10192                           fsr2l	equ	0xFD9
 10193                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    145
    Data        49
    BSS         282
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     25     120
    BANK0           128      0      54
    BANK1           256      0     184

Pointer List with Targets:

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   35401
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    8848
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    3612
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0    9669
                                             20 COMRAM     5     5      0
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
                    _checkHoraAcabat
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2297
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1190
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    8811
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2297
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1542
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2940
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1965
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
     _checkHoraAcabat
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      36       4       42.2%
BITCOMRAM           7E      0       2       0        1.6%
COMRAM              7E     19      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     166       7        0.0%
DATA                 0      0     166       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu May 05 13:44:10 2022

               TiResetTics@Handle 0063                  _loginNOTRegister 03C5  
                               _i 001F                                PL2 0B1C  
                              PL4 0B2A                                PL6 088C  
                              PL8 0B32                                l57 192C  
                UgetUserName@quin 0065         ??_UcheckExistsNotFinished 0063  
                             PL10 0B3C                               PL20 1122  
                             PL12 199C                               PL30 18D2  
                             PL22 0FF2                               PL14 0FD6  
                             PL40 179A                               PL32 178C  
                             PL24 13DE                               PL16 1484  
                             PL50 1592                               PL42 1004  
                             PL34 08A2                               PL26 0D12  
                             PL18 0898                               PL60 0B46  
                             PL52 13FE                               PL44 1860  
                             PL36 1584                               PL28 1B36  
                             PL70 17E6                               PL62 186A  
                             PL54 1AA4                               PL46 0D1E  
                             PL38 13F0                               PL72 08A8  
                             PL64 18E0                               PL56 12BE  
                             PL48 182C                               PL74 08B0  
                             PL66 0ECE                               PL58 174C  
                             PL68 16E6            __end_of_compareStrings 1860  
                             l700 1386                               l524 0476  
                             l525 0486                               l710 13B2  
                             l527 0492                               l712 13B8  
                             l704 1394                               l705 1396  
                             l707 139C                               l732 0EDA  
                             l733 0EE4                               l902 0A68  
                             l735 0EF0                               l904 0A8E  
                             l760 19C2                               l592 06F2  
                             l497 0348                               l691 1A60  
                             l941 1136                               l950 118C  
                             l942 1150                               l758 19AC  
                             l951 11A6                               l791 140A  
                             l872 0910                               l944 1172  
                             l953 11C8                               l697 1378  
                             l884 0978                               l949 11F4  
                             u230 1532                               u250 1548  
                             u308 1576                               u270 155C  
                             u248 1534                               u290 1574  
                             u268 154A                               u288 155E  
                             _pos 0024                               _tmp 0028  
                ??_CantaPartBaixa 0063                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 0051  
              __size_of_GLCDMotor 0264                              l1213 0C7E  
                            l1205 0BF2                              l2112 1BEC  
                            l2202 1BD4                              l1093 12DE  
                            l2150 1BE0                              l2222 1A2A  
                            l2240 1A42                              l2082 1C10  
                            l2234 1A3A                              l2228 1A32  
                            l1198 0BCC                              l2256 1BC8  
                            l4220 1982                              l5004 0462  
                            l2614 13D6                              l5110 0566  
                            l5014 0482                              l4322 184C  
                            l5122 059E                              l5026 04A2  
                            l3460 1A86                              l4228 198C  
                            l4156 1886                              l4260 17CC  
                            l4316 1838                              l5204 0648  
                            l5108 0560                              l4182 1AB6  
                            l4262 17D2                              l2902 1166  
                            l4350 1224                              l4510 0DD6  
                            l4502 0DC0                              l4430 19F0  
                            l5142 05D2                              l5118 0586  
                            l5054 04D8                              l5046 04CA  
                            l5038 04BA                              l5400 0F26  
                            l5312 07B6                              l5304 07A4  
                            l5240 069E                              l5216 0668  
                            l5160 05F6                              l5080 051C  
                            l3458 1A82                              l4178 18AC  
                            l4450 0D3E                              l4442 0D2A  
                            l4426 19E8                              l5314 07BC  
                            l5234 0690                              l5226 0682  
                            l5066 04FA                              l4188 1930  
                            l4268 17E0                              l2940 11BC  
                            l2932 11A2                              l2916 1188  
                            l4524 0DF8                              l4516 0DE8  
                            l4604 0EA0                              l5420 0F5E  
                            l5404 0F34                              l5324 07CE  
                            l5340 1420                              l4700 0B82  
                            l5510 094A                              l5422 0F64  
                            l5254 06CC                              l5246 06B0  
                            l5094 053E                              l4622 12CA  
                            l5600 0A46                              l4560 0E5A  
                            l4536 0E1C                              l4528 0E02  
                            l5416 0F54                              l5272 070C  
                            l5264 06F4                              l5192 0636  
                            l5176 0614                              l5096 0544  
                            l5360 1452                              l5352 1438  
                            l5344 142C                              l4712 0B9E  
                            l2954 11DE                              l4490 0DB2  
                            l4466 0D68                              l5450 0FAC  
                            l5434 0F8C                              l5266 06FA  
                            l5338 141A                              l4722 0BB4  
                            l4714 0BA4                              l5524 0968  
                            l2964 11E2                              l4580 0E88  
                            l4548 0E36                              l4468 0D6C  
                            l5444 0FA2                              l5292 078C  
                            l5188 0632                              l4900 035E  
                            l5372 146A                              l4644 1302  
                            l4708 0B94                              l5630 0A9A  
                            l5622 0A88                              l5614 0A70  
                            l5518 0956                              l2894 114C  
                            l4574 0E7A                              l4566 0E64  
                            l4494 0DB6                              l4478 0D8C  
                            l5702 10B0                              l5454 0FB4  
                            l5390 0EFA                              l5286 076C  
                            l5278 0728                              l4822 14CA  
                            l4806 149E                              l4646 1308  
                            l4638 12F2                              l4750 0C08  
                            l5640 0AB6                              l5608 0A5C  
                            l5560 09B2                              l4584 0E90  
                            l5712 10CE                              l5288 0772  
                            l5634 0AA2                              l5570 09D8  
                            l5554 09A0                              l5490 0904  
                            l5482 08EE                              l5466 08BA  
                            l5650 0AD0                              l4498 0DBC  
                            l5722 10E4                              l5706 10BA  
                            l5386 0EEA                              l5458 0FB8  
                            l5298 0798                              l4834 14E2  
                            l4666 1348                              l4658 1332  
                            l4674 1356                              l4682 0B52  
                            l5644 0AC4                              l5580 0A08  
                            l5564 09C0                              l5476 08E0  
                            l5732 10F4                              l5396 0F22  
                            l4932 03C4                              l4916 0392  
                            l4908 037A                              l4844 14FC  
                            l4828 14D6                              l4852 150A  
                            l4748 0C02                              l4692 0B6E  
                            l5726 10EE                              l5718 10DC  
                            l5670 1066                              l5662 1050  
                            l4926 03B6                              l4918 0398  
                            l4870 030A                              l4758 0C30  
                            l5496 091C                              l5664 1054  
                            l4960 03FE                              l4944 03D4  
                            l4928 03BC                              l4880 0328  
                            l4864 02F8                              l4856 150E  
                            l4768 0C66                              l5586 0A18  
                            l5690 1092                              l5658 1044  
                            l4970 0422                              l4786 0CB0  
                            l4778 0C90                              l5692 1096  
                            l5684 1084                              l5668 1060  
                            l5772 15E2                              l5678 1076  
                            l4974 042A                              l4958 03F8  
                            l4886 0336                              l4798 0CD2  
                            l4968 041C                              l4888 033C  
                            l5698 10A4                              l4986 043A  
                            STR_1 02DF                              STR_2 02BB  
                            STR_3 02EE                              STR_4 02E7  
                            STR_5 02C6                              STR_6 02A2  
                            STR_7 0292                              STR_8 02D7  
                            STR_9 02AF                              u3200 1712  
                            _LATD 000F8C                              u3220 1726  
                            u3300 16C0                              u4100 0BD8  
                            u3240 173E                              u3320 16D8  
                            u3218 1714                              u4130 0C46  
                            u3180 16FC                              u3260 1696  
                            u3500 1768                              u3238 1728  
                            u3318 16C2                              u3510 177E  
                            u3280 16AC                              u3258 1740  
                            u3338 16DA                              u4090 0BD4  
                            u3507 1766                              u4500 0448  
                            u3517 177C                              u3198 16FE  
                            u3278 1698                              u3470 1850  
                            u4430 03E2                              u5320 08EA  
                            u3480 12B4                              u3720 0DE2  
                            u3640 0D80                              u3298 16AE  
                            u5420 0970                              u5180 0EF4  
                            u4550 048C                              u3840 0E6A  
                            u3760 0E0E                              u3850 0E80  
                            u4570 049A                              u4900 0654  
                            u5390 0952                              u4910 065A  
                            u5680 1016                              u5688 1018  
                            _CtoA 1A68                   ??_SsetNovaTecla 0063  
          __end_of_SIOcheckKrebut 1BCC                              _cap1 03BF  
                            _Rows 0034                              _cap2 03BE  
                            _main 159C                              _hora 0055  
                            _menu 02F6                              _nota 001D  
                 __end_of_HJugant 1CAA                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0079  
                 __end_of_JJuguem 1C4C                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 1AA4  
                            start 0032                   __end_of_CantaIR 1B26  
                    ?_initAltaveu 005E                     LcInit@columns 006E  
                    ___param_bank 000000                       _stringScore 005B  
                __end_of_GLCDInit 1CA4          __size_of_SIONovaDireccio 0008  
                  _HClearNouSegon 1CD0                             ?_CtoA 005E  
              __size_of_CToAReset 0008                       Espera@Timer 006D  
                           ?_main 005E           __size_of_escriureEEPROM 0028  
                           ?_menu 005E                             _EEADR 000FA9  
                           STR_10 02CF                     ??_TiInitTimer 0063  
                           _T0CON 000FD5                   ?_compareStrings 0063  
                           i2l376 1826                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _LcLCD 1756                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                      ?_init_eusart 005E  
                           _TXREG 000FAD                             _SMSon 1CAA  
                           _TXSTA 000FAC                       _MNovaLletra 1C84  
                           _Minit 1C8C                  __end_of_HGetTime 1CD0  
                           _Sinit 1C7C                             _Timer 0031  
                           _Uinit 1370                   __end_of_initSIO 1C54  
                           _s_ptr 0005                             _nou_s 03C7  
           __end_of_JoystickMotor 120A                   _HActualitzaHora 18EA  
     __size_of_escriureCharEEPROM 0024                    __pbitbssCOMRAM 03B8  
                           tablat 000FF5                       _LcNewString 1BFC  
                   ??_TiResetTics 0063                   ?_SIOcheckKrebut 005E  
                           ttemp5 007A                             ttemp6 007D  
                           ttemp7 0081                             status 000FD8  
                ?_checkHoraAcabat 005E                             wtemp8 007A  
   __size_of_UcheckExistsGetError 0004                __size_of_HNouSegon 000C  
                __end_of_LcGotoXY 1952              CToAConverteix@numero 0063  
                __end_of_LcLliure 1C14                     ??__TiRSITimer 005E  
                __end_of_LcScroll 1CBC                        _TiGetTimer 197E  
         EscriuPrimeraOrdre@ordre 0064                      __end_of_CtoA 1A8C  
                __end_of_JendGame 1CF8                       ?_SIOendGame 005E  
                 __initialization 1614                __size_of_CantaData 0020  
                    __end_of_main 1614            __end_of_HClearNouSegon 1CD4  
                    __end_of_menu 088C           ?_SIOHaAcabatPuntuacions 005E  
           __size_of_MNouJoystick 0008                      ?_playAltaveu 005E  
               __end_of_GLCDMotor 0B1C                  __end_of_TeTeclat 1122  
                   _indexNextUser 0021                            ??_CtoA 0063  
                          ??_main 0077                            ??_menu 0072  
              __size_of_LcPutChar 0040                     __activetblptr 000002  
                   _ultimaTeclaAD 000F            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 0011                  GLCDMotor@length2 0010  
                      _JnovaTecla 1C34                            ?_LcLCD 005E  
                          ?_SMSon 005E                      ?_CToAobtenir 0063  
                          ?_Minit 005E                            ?_Sinit 005E  
                          ?_Uinit 005E                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 19FA  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 0063                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 0063                __size_of_SiFerMenu 0004  
        ??_escriure2usuarisStruct 0063                         ??_LcClear 0071  
                       ??_CantaIR 0065                            i2l4410 180C  
                          i2l4414 1822                            i2l4406 1804  
                  LcGotoXY@Fisics 006C                    LcGotoXY@Column 0070  
                   ??_WaitForBusy 006A                __size_of_TiGetTics 0026  
                          _SPBRGH 000FB0                    _sumaPulsacions 0030  
               __end_of_CToAReset 1C1C                            _SMSoff 1CB0  
              SIONovaDireccio@num 0063                            _LcInit 120A  
                    _MNouJoystick 1C94                    _UgetNumUsuaris 1CD8  
                          _SMotor 0D28               escriureCharEEPROM@c 0064  
                          _TeInit 1C74                            _Espera 1AAE  
                    _LcGotoXY$336 006E                            _Krebut 03B8  
  __end_of_SIOHaAcabatPuntuacions 1CF0                            _RowAct 0033  
             __end_of_TiResetTics 1B36                            Uinit@i 0065  
                          Uinit@j 0066                  __end_of_high_rsi 0032  
                          _h_Tics 0003                   ?_HClearNouSegon 005E  
                   ?_CToAHaAcabat 005E                  __end_of_initHora 1C5C  
             __end_of__TiRSITimer 182C                  __end_of_menuList 0292  
                          clear_0 165A                            clear_1 1666  
                          clear_2 1676                            _jugant 03BD  
                          _segons 000C                        _UenviaChar 1BA4  
                          isa$std 000001                        UenviaPas@c 0064  
     __size_of_EscriuPrimeraOrdre 0064                 __end_of_HNouSegon 1BD8  
                       ??_initSIO 0064                      __pdataCOMRAM 0042  
          __size_of_CantaPartAlta 005C                  __end_of_motorSIO 0D12  
              __size_of_UenviaPas 0010           __end_of_HActualitzaHora 191E  
               ??_SIONovaDireccio 0063                  __end_of_motorJoc 1370  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                ??_CToAConverteix 0063               __size_of_SIOendGame 0004  
               __end_of_CantaData 18D2                      TeTeclat@cols 002B  
                       ?_GLCDInit 005E                     ?_UcheckExists 005E  
                      __accesstop 0080           __end_of__initialization 167C  
          __end_of_UgetNumUsuaris 1CDC                 __end_of_LcPutChar 17E6  
                   _JnovaDireccio 1C3C                  JnovaDireccio@dir 0063  
                   ___rparam_used 000001                     __end_of_LcLCD 178C  
                     ?_TiGetTimer 005E                     __end_of_SMSon 1CB0  
               SIONovaTecla@tecla 0063                    __pcstackCOMRAM 005E  
                   __end_of_Minit 1C94               __end_of_WaitForBusy 18B2  
                   __end_of_Sinit 1C84                     __end_of_Uinit 13DE  
               __end_of_NoFerMenu 1CF4                         ?_HGetTime 0063  
                    __pidataBANK0 1B58                    ??_CToAHaAcabat 0063  
            __size_of_initAltaveu 0008                 __end_of_URegister 1CE8  
               __end_of_HnoJugant 1CCC                 __end_of_SiFerMenu 1CEC  
                      __end_ofPL2 0B2A                        __end_ofPL4 0B32  
                      __end_ofPL6 0898                        __end_ofPL8 0B3C  
                  _escriureEEPROM 19AA                 __end_of_TiGetTics 1A20  
                     _TiInitTimer 19D2                       ?_JnovaTecla 005E  
                         ??_LcLCD 0072                           ??_SMSon 0063  
                       ?_LcGotoXY 006B                         ?_LcLliure 005E  
                         ??_Minit 0064                         ?_LcScroll 005E  
                         ??_Sinit 0064                   JnovaTecla@tecla 0063  
                         ??_Uinit 0063              __size_of_init_eusart 0016  
                       ?_JendGame 005E                    ??_UcheckExists 0063  
             MNouJoystick@posicio 0063                        ??_GLCDInit 0064  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100   __size_of_escriure2usuarisStruct 002C  
                       ?_TeTeclat 005E                       _TiResetTics 1B26  
                 ?_UgetNumUsuaris 005E                    ?_JnovaDireccio 005E  
                   ??_UmotorUsers 0068                     ?_JoystickInit 005E  
                         ?_SMSoff 005E                           ?_LcInit 006E  
                   _CantaPartAlta 16F0                           ?_SMotor 005E  
                         ?_TeInit 005E                           ?_Espera 006A  
               __end_of_UenviaPas 1BA4                       __TiRSITimer 17EE  
             _indexNextUserStruct 0020                        ??_HGetTime 0065  
                   ?_UgetUserName 0063                  ??_compareStrings 0066  
          __end_of_escriureEEPROM 19D2                           _BAUDCON 000FB8  
                     ?_UenviaChar 0063              __size_of_playAltaveu 0004  
              __size_of_motorHora 0084            __size_of_MsetNovaTecla 0008  
                         LcInit@i 0070                  ?_HActualitzaHora 0063  
                      ??_LcGotoXY 006C                      ?_MNovaLletra 005E  
                      ??_LcLliure 0063                        ??_LcScroll 0066  
                ??_SIOcheckKrebut 0063               __size_of_TiGetTimer 001E  
            __size_of_CToAobtenir 0004                        ??_JendGame 0063  
                         _HJugant 1CA4                         ?_high_rsi 005E  
                         _JJuguem 1C44                           _LcClear 1A8C  
                         _CantaIR 1B0A                      ?_LcNewString 0066  
                  ??_JoystickInit 0063                         ?_initHora 005E  
                      ??_TeTeclat 006A                       _WaitForBusy 1874  
                  ?_CantaPartAlta 005E             __end_of_SsetNovaTecla 1C6C  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00B4  
                         __Hparam 0000                   __size_of_SMotor 01A6  
             __size_of_JnovaTecla 0008                   __size_of_TeInit 0008  
                 __size_of_Espera 0022                           __Lparam 0000  
                    ??_SIOendGame 0063                         ?_motorSIO 005E  
                       ?_motorJoc 005E                    ??_UgetUserName 0065  
             __end_of_UmotorUsers 0FD6          ?_UcheckExistsNotFinished 005E  
                 ?_escriureEEPROM 005E                     ?_motorAltaveu 005E  
                    __psmallconst 0200            _escriure2usuarisStruct 1952  
                         __pcinit 1614      __end_of_UcheckExistsGetError 1CE0  
                         _ferMenu 03C1                        _init_ports 1AD0  
                         __ramtop 0200                           __ptext0 159C  
                         __ptext1 0B50                           __ptext2 1CBC  
                         __ptext3 1CC0                           __ptext4 1BB4  
                         __ptext5 1C14                           __ptext6 12C8  
                         __ptext7 1A20                           __ptext8 1CC4  
                         __ptext9 1BC0                         _T0CONbits 000FD5  
                       _GLCDMotor 08B8                         CantaIR@IR 0065  
                         _initSIO 1C4C                           _counter 0029  
                         _horaTmp 003E            conversorJoystick@direc 0063  
                     UenviaChar@c 0064        __end_of_escriureCharEEPROM 1A68  
                LcNewString@new_s 0066                   WaitForBusy@Busy 006A  
                     Uinit@j_1172 0067                           _userPtr 0001  
               GLCDMostraMenu@num 0063                __end_of_SIOendGame 1CC8  
                      ??_high_rsi 005F              __end_of_CToAHaAcabat 1CC4  
            end_of_initialization 167C                           _usuaris 0100  
                 ??_JnovaDireccio 0063                        ??_initHora 0064  
         __size_of_CantaPartBaixa 005C                     __Lmediumconst 0000  
                 TiGetTics@Handle 0067                     _MsetNovaTecla 1C6C  
             __size_of_UenviaChar 0010                 _conversorJoystick 1A20  
               __end_of_motorHora 1520                  ??_HClearNouSegon 0063  
                      _novaLletra 004F                ?_conversorJoystick 005E  
                 _usuariActualSIO 0048                        ??_motorSIO 0072  
                       _CToAReset 1C14                        ??_motorJoc 0071  
                 TiGetTics@actual 0068                     ?_SIONovaTecla 005E  
                      GLCDMotor@j 0016                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 1C2C  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 006A  
        __size_of_checkHoraAcabat 000C                        _numUsuaris 0022  
            __end_of_UcheckExists 1CE4                     TeTeclat@files 002A  
             ??_conversorJoystick 0063                SIOStartGame@usuari 0063  
          __size_of_JoystickMotor 00D6                     TeTeclat@state 002C  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 005E                     ?_SIOStartGame 005E  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                       _HNouSegon 1BCC                    _GLCDMostraMenu 1BF0  
       __end_of_conversorJoystick 1A44                   ??_CantaPartAlta 0063  
                  ?_MsetNovaTecla 005E                         _CantaData 18B2  
               __size_of_GLCDInit 0008                       _UmotorUsers 0ED8  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 1BF0  
                  __end_of_SMSoff 1CB6                      ??_TiGetTimer 0063  
                  __end_of_LcInit 12BE                    ??_SIONovaTecla 0063  
                      ?_CToAReset 005E                    __end_of_SMotor 0ECE  
                       _LcPutChar 17A6                    __end_of_TeInit 1C7C  
               motorAltaveu@state 001A                    __end_of_Espera 1AD0  
                  GLCDMotor@state 0017        __end_of_EscriuPrimeraOrdre 1584  
               __size_of_HGetTime 0004                     __pidataCOMRAM 1AEE  
                     ?_init_ports 005E                         _NoFerMenu 1CF0  
                       _ColumnAct 0032              __end_of_JoystickInit 1B94  
                  ??_SIOStartGame 0063                         _URegister 1CE4  
                       _HnoJugant 1CC8                      ?_TiInitTimer 005E  
                    ??_JnovaTecla 0063                         _SiFerMenu 1CE8  
                     __end_ofPL10 0B46                       __end_ofPL20 1134  
                     __end_ofPL12 19AA                       __end_ofPL30 18E0  
                     __end_ofPL22 1004                       __end_ofPL14 0FF2  
                     __end_ofPL40 17A6                       __end_ofPL32 179A  
                     __end_ofPL24 13F0                       __end_ofPL16 149C  
                     __end_ofPL50 159C                       __end_ofPL42 100C  
                     __end_ofPL34 08A8                       __end_ofPL26 0D1E  
                     __end_ofPL18 08A2                       __end_ofPL60 0B50  
                     __end_ofPL52 1408                       __end_ofPL44 186A  
                     __end_ofPL36 1592                       __end_ofPL28 1B42  
                     __end_ofPL70 17EE                       __end_ofPL62 1874  
                     __end_ofPL54 1AAE                       __end_ofPL46 0D28  
                     __end_ofPL38 13FE                       __end_ofPL72 08B0  
                     __end_ofPL64 18EA                       __end_ofPL56 12C8  
                     __end_ofPL48 1836                       __end_ofPL74 08B8  
                     __end_ofPL66 0ED8                       __end_ofPL58 1756  
                     __end_ofPL68 16F0               start_initialization 1614  
                       _TiGetTics 19FA            __end_of_GLCDMostraMenu 1BFC  
                      ?_HNouSegon 005E                  ??_UgetNumUsuaris 0063  
                UmotorUsers@state 001E                 __size_of_LcGotoXY 0034  
            __end_of_UgetUserName 1B82                __end_of_TiGetTimer 199C  
                   JJuguem@usuari 0063              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                 __size_of_LcScroll 0006  
                   _JoystickMotor 1134                 __size_of_JendGame 0004  
                    ?_TiResetTics 005E                        ?_CantaData 005E  
            _UcheckExistsGetError 1CDC           __end_of_SIONovaDireccio 1C34  
            __size_of_LcNewString 000C                          ??_SMSoff 0063  
                        ??_LcInit 006F                         _NovaTecla 0050  
               __size_of_TeTeclat 0116                          ??_SMotor 006A  
                        ??_TeInit 0064                      ?__TiRSITimer 005E  
                   ??_initAltaveu 0064                          ??_Espera 006C  
              __end_of_JnovaTecla 1C3C                        ?_LcPutChar 005E  
                       _UenviaPas 1B94                       __pdataBANK0 00A1  
                  motorHora@state 000B                      _menuDaltGLCD 0018  
                    ??_UenviaChar 0064                        ?_NoFerMenu 005E  
                     ??_GLCDMotor 0072                        ?_URegister 005E  
                      ?_HnoJugant 005E                 ??_checkHoraAcabat 0063  
                   ??_init_eusart 0063                        ?_SiFerMenu 005E  
                     __pbssCOMRAM 0001             __size_of_CToAHaAcabat 0004  
                      ?_TiGetTics 0063                   ?_GLCDMostraMenu 005E  
                        ?_HJugant 005E                    ?_JoystickMotor 005E  
                 ??_MsetNovaTecla 0063              __end_of_motorAltaveu 1484  
                        ?_JJuguem 005E                          ?_LcClear 005E  
                        ?_CantaIR 005E        __size_of_conversorJoystick 0024  
                  _CantaPartBaixa 168A          ??_SIOHaAcabatPuntuacions 0063  
           ?_UcheckExistsGetError 005E                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 005E               __size_of_init_ports 001E  
              MsetNovaTecla@tecla 0063                SsetNovaTecla@tecla 0063  
              __end_of_UenviaChar 1BB4           __size_of_CToAConverteix 000C  
               __size_of_initHora 0008                  ??_escriureEEPROM 0063  
           __size_of_UcheckExists 0004                       ??_CToAReset 0063  
         ?_escriure2usuarisStruct 005E                         __pintcode 0008  
                   ??_playAltaveu 0063                        ?_UenviaPas 0063  
               __size_of_motorSIO 01C2                 __size_of_motorJoc 00A8  
                 CantaPartBaixa@c 0064                      _CToAHaAcabat 1CC0  
             __end_of_initAltaveu 1C64                         _arrayZero 0042  
                        ?_initSIO 005E                       __smallconst 0200  
                       _convertir 0045                     ??_CToAobtenir 0065  
                  __size_of_LcLCD 0036                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 1C2C                    __size_of_Sinit 0008  
                     ??_HNouSegon 0063                    __size_of_Uinit 006E  
                     _direccioSIO 0047                       _direccioJoc 000A  
          __end_of_CantaPartBaixa 16E6                JoystickMotor@state 000E  
                        _GLCDInit 1C9C                escriureEEPROM@caca 0063  
                     _do_register 03C3               __end_of_init_eusart 1B58  
                       _newString 03C0                      _UcheckExists 1CE0  
                       _jugantSIO 03B9          __size_of_HActualitzaHora 0034  
                       _jugantJoc 03BA                       ??_CantaData 0065  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                     ?_MNouJoystick 005E  
                ?_SIONovaDireccio 005E              __end_of_SIOStartGame 1C24  
                   UenviaChar@pos 0063    __end_of_escriure2usuarisStruct 197E  
              _escriureCharEEPROM 1A44                         _novaTecla 0053  
                   motorSIO@state 0007                          _PIR1bits 000F9E  
                     ??_LcPutChar 0071                         _timerGLCD 0019  
                       _motorHora 149C                          _RCONbits 000FD0  
                       _reproduir 03C2                          _HGetTime 1CCC  
           __size_of_JoystickInit 0012                         _timerHora 000D  
                       _timerMenu 0027               ?_escriureCharEEPROM 0063  
                     ??_NoFerMenu 0063                        _ADCON0bits 000FC2  
                     ??_URegister 0063                       ??_HnoJugant 0063  
                     ??_SiFerMenu 0063             __size_of_UgetUserName 0014  
             __end_of_playAltaveu 1CD8            __size_of_SsetNovaTecla 0008  
                        Espera@ms 006A                         _zeroTecla 002F  
                        _LcGotoXY 191E                    _usuariLoguejat 004D  
                        _LcLliure 1C08                       ??_TiGetTics 0065  
         __size_of_compareStrings 002A              __size_of_TiInitTimer 0028  
                        _LcScroll 1CB6                   ??_JoystickMotor 0064  
                   GLCDMotor@max1 004C                     GLCDMotor@max2 004B  
                   GLCDMotor@min1 0015                     GLCDMotor@min2 0014  
                    _teclaPremuda 00AA                          _JendGame 1CF4  
                       _usuariJoc 004A                       LcGotoXY@Row 006B  
                       copy_data0 1628                         copy_data1 1648  
            ??_escriureCharEEPROM 0064                   ?_CantaPartBaixa 005E  
             __end_of_CToAobtenir 1CC0                  __size_of_HJugant 0006  
          ??_UcheckExistsGetError 0063             escriureCharEEPROM@pos 0063  
                __size_of_JJuguem 0008                  __size_of_LcClear 0018  
                __size_of_CantaIR 001C                          _TeTeclat 100C  
           __end_of_JnovaDireccio 1C44                    ??_MNouJoystick 0063  
 __size_of_SIOHaAcabatPuntuacions 0004                      ?_UmotorUsers 005E  
                    _JoystickInit 1B82                        _EECON1bits 000FA6  
                     _indexUsuari 0025           __size_of_SIOcheckKrebut 000C  
            __size_of_TiResetTics 0010                     motorJoc@state 0009  
                        __Hrparam 0000                       _initAltaveu 1C5C  
                       menu@state 0023                          __Lrparam 0000  
                      ?_motorHora 005E              __size_of__TiRSITimer 003E  
                    _UgetUserName 1B6E                       ??_UenviaPas 0064  
                    _novaDireccio 004E                      ??_init_ports 0063  
             HActualitzaHora@nova 0063                       _init_eusart 1B42  
                __size_of_initSIO 0008             __size_of_motorAltaveu 007C  
                    _novaTeclaJOC 0049                      _novaTeclaSIO 0046  
                 _do_check_exists 03C4                          __ptext10 1C1C  
                        __ptext11 1C24                _EscriuPrimeraOrdre 1520  
                        __ptext20 1408                          __ptext12 1C2C  
                        __ptext21 02F6                          __ptext13 1CC8  
                        __ptext30 1CE4                          __ptext22 1BD8  
                        __ptext14 1BCC                          __ptext31 1CE8  
                        __ptext23 1B6E                          __ptext15 1CA4  
                        __ptext40 1C44                          __ptext32 1CAA  
                        __ptext24 1CD8                          __ptext16 1CCC  
                        __ptext41 18EA                          __ptext33 1CB0  
                        __ptext25 1B94                          __ptext17 1CD0  
                        __ptext50 0ED8                          __ptext42 1BF0  
                        __ptext34 1CEC                          __ptext26 1BA4  
                        __ptext18 149C                          __ptext51 1A44  
                        __ptext43 1AD0                          __ptext35 1CF0  
                        __ptext27 1BE4                          __ptext19 1CD4  
                        __ptext60 0D28                          __ptext52 1836  
                        __ptext44 1B42                          __ptext36 1CB6  
                        __ptext28 1CDC                          __ptext61 1C84  
                        __ptext53 1370                          __ptext45 1C4C  
                        __ptext37 1C34                          __ptext29 1CE0  
                        __ptext70 17A6                          __ptext62 1C8C  
                        __ptext54 19D2                          __ptext46 1C54  
                        __ptext38 1C3C                          __ptext71 18B2  
                        __ptext63 1756                          __ptext55 100C  
                        __ptext47 1C5C                          __ptext39 1CF4  
                        __ptext80 1AAE                          __ptext72 1BFC  
                        __ptext64 120A                          __ptext56 1C64  
                        __ptext48 19AA                          __ptext81 1B26  
                        __ptext73 1C08                          __ptext65 1520  
                        __ptext57 1C6C                          __ptext49 1952  
                        __ptext82 19FA                          __ptext74 1A8C  
                        __ptext66 1134                          __ptext58 1C74  
                        __ptext83 1C9C                          __ptext75 191E  
                        __ptext67 1C94                          __ptext59 1C7C  
                        __ptext84 197E                          __ptext76 1874  
                        __ptext68 1B82                          __ptext85 1A68  
                        __ptext77 1B0A                          __ptext69 08B8  
                        __ptext78 168A                          __ptext87 17EE  
                        __ptext79 16F0                    CantaPartAlta@c 0064  
                     _lletraASCII 0054                          _high_rsi 0008  
                        _copsNota 001B                          _s_Timers 0080  
                   __size_of_CtoA 0024                          _initHora 1C54  
                     _lletraInici 00A1                          _menuDalt 0026  
                        _menuList 0201               ?_EscriuPrimeraOrdre 005E  
                   __size_of_main 0078                     __size_of_menu 0596  
           __end_of_CantaPartAlta 174C                    _CToAConverteix 1BB4  
                   CantaData@Data 0065                          _tiTeclat 002D  
              __end_of_init_ports 1AEE                          _setSMSon 03C6  
                   _SsetNovaTecla 1C64              __size_of_WaitForBusy 003E  
                        _nouSegon 03BC                          _motorSIO 0B50  
               ??_HActualitzaHora 0064                          _motorJoc 12C8  
                 _checkHoraAcabat 1BD8                          _timerSIO 0008  
                        _timerSMS 0052                          isa$xinst 000000  
                        int$flags 0079                      UenviaPas@pos 0063  
                     _playAltaveu 1CD4                      _motorAltaveu 1408  
         __size_of_HClearNouSegon 0004            _SIOHaAcabatPuntuacions 1CEC  
            ??_EscriuPrimeraOrdre 0063                        LcInit@rows 006F  
                ??_GLCDMostraMenu 0063             __size_of_SIONovaTecla 0008  
         _UcheckExistsNotFinished 1BE4                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0063                       _CToAobtenir 1CBC  
           __size_of_SIOStartGame 0008                     ??_LcNewString 0068  
                        intlevel2 0000                      _timerAltaveu 001C  
          __end_of_CToAConverteix 1BC0                        LcPutChar@c 0071  
                  ?_SsetNovaTecla 005E                 MNovaLletra@lletra 0063  
                 compareStrings@a 0063                   compareStrings@b 0064  
                     ??_motorHora 006A                      _SIONovaTecla 1C24  
                     _tempsAcabat 03BB                       GLCDMotor@k1 0013  
                     GLCDMotor@k2 0012              __end_of_MNouJoystick 1C9C  
                    _SIOStartGame 1C1C                    _compareStrings 1836  
                     _tmpPassword 0098               __end_of_MNovaLletra 1C8C  
                 ?_CToAConverteix 005E             __end_of_MsetNovaTecla 1C74  
         __end_of_checkHoraAcabat 1BE4                       _tmpUsername 0035  
                  _SIOcheckKrebut 1BC0                       SMotor@state 002E  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 1C08  
            __size_of_UmotorUsers 00FE                        _SIOendGame 1CC4  
