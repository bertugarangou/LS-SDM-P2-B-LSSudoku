

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 26 20:37:58 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.32
    65                           ; Generated 02/02/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4321 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataCOMRAM
   101  000F58                     __pidataCOMRAM:
   102                           	callstack 0
   103                           
   104                           ;initializer for _lletraInici
   105  000F58  41                 	db	65
   106  000F59  44                 	db	68
   107  000F5A  47                 	db	71
   108  000F5B  4A                 	db	74
   109  000F5C  4D                 	db	77
   110  000F5D  50                 	db	80
   111  000F5E  54                 	db	84
   112  000F5F  57                 	db	87
   113  000F60  00                 	db	0
   114                           
   115                           ;initializer for _novaLletra
   116  000F61  FF                 	db	255
   117                           
   118                           ;initializer for _NovaTecla
   119  000F62  FF                 	db	255
   120                           
   121                           ;initializer for _ultimaTecla
   122  000F63  FF                 	db	255
   123                           
   124                           ;initializer for _timerSMS
   125  000F64  FF                 	db	255
   126                           
   127                           ;initializer for _novaTecla
   128  000F65  FF                 	db	255
   129                           
   130                           ;initializer for _lletraASCII
   131  000F66  FF                 	db	255
   132                           
   133                           ;initializer for _teclaPremuda
   134  000F67  01                 	db	1
   135  000F68  02                 	db	2
   136  000F69  03                 	db	3
   137  000F6A  04                 	db	4
   138  000F6B  05                 	db	5
   139  000F6C  06                 	db	6
   140  000F6D  07                 	db	7
   141  000F6E  08                 	db	8
   142  000F6F  09                 	db	9
   143  000F70  0A                 	db	10
   144  000F71  00                 	db	0
   145  000F72  0B                 	db	11
   146  0000                     _EECON2	set	4007
   147  0000                     _EEDATA	set	4008
   148  0000                     _EEADR	set	4009
   149  0000                     _T0CONbits	set	4053
   150  0000                     _TMR0L	set	4054
   151  0000                     _TMR0H	set	4055
   152  0000                     _T0CON	set	4053
   153  0000                     _INTCONbits	set	4082
   154  0000                     _RCONbits	set	4048
   155  0000                     _PORTDbits	set	3971
   156  0000                     _EECON1bits	set	4006
   157  0000                     _LATD	set	3980
   158  0000                     _TRISD	set	3989
   159  0000                     _TRISC	set	3988
   160  0000                     _LATBbits	set	3978
   161  0000                     _TRISB	set	3987
   162  0000                     _TRISA	set	3986
   163  0000                     _PORTCbits	set	3970
   164  0000                     _LATDbits	set	3980
   165  0000                     _LATCbits	set	3979
   166  0000                     _TRISDbits	set	3989
   167  0000                     _TRISCbits	set	3988
   168                           
   169                           	psect	smallconst
   170  000200                     __psmallconst:
   171                           	callstack 0
   172  000200  00                 	db	0
   173  000201                     STR_2:
   174  000201  32                 	db	50	;'2'
   175  000202  2E                 	db	46
   176  000203  52                 	db	82	;'R'
   177  000204  45                 	db	69	;'E'
   178  000205  47                 	db	71	;'G'
   179  000206  49                 	db	73	;'I'
   180  000207  53                 	db	83	;'S'
   181  000208  54                 	db	84	;'T'
   182  000209  45                 	db	69	;'E'
   183  00020A  52                 	db	82	;'R'
   184  00020B  00                 	db	0
   185  00020C                     STR_1:
   186  00020C  31                 	db	49	;'1'
   187  00020D  2E                 	db	46
   188  00020E  4C                 	db	76	;'L'
   189  00020F  4F                 	db	79	;'O'
   190  000210  47                 	db	71	;'G'
   191  000211  49                 	db	73	;'I'
   192  000212  4E                 	db	78	;'N'
   193  000213  00                 	db	0
   194  000214                     STR_4:
   195  000214  50                 	db	80	;'P'
   196  000215  53                 	db	83	;'S'
   197  000216  57                 	db	87	;'W'
   198  000217  44                 	db	68	;'D'
   199  000218  3A                 	db	58	;':'
   200  000219  20                 	db	32
   201  00021A  00                 	db	0
   202  00021B                     STR_3:
   203  00021B  55                 	db	85	;'U'
   204  00021C  53                 	db	83	;'S'
   205  00021D  45                 	db	69	;'E'
   206  00021E  52                 	db	82	;'R'
   207  00021F  3A                 	db	58	;':'
   208  000220  20                 	db	32
   209  000221  00                 	db	0
   210  000222  00                 	db	0	; dummy byte at the end
   211  0000                     
   212                           ; #config settings
   213                           
   214                           	psect	cinit
   215  000C24                     __pcinit:
   216                           	callstack 0
   217  000C24                     start_initialization:
   218                           	callstack 0
   219  000C24                     __initialization:
   220                           	callstack 0
   221                           
   222                           ; Initialize objects allocated to COMRAM (27 bytes)
   223                           ; load TBLPTR registers with __pidataCOMRAM
   224  000C24  0E58               	movlw	low __pidataCOMRAM
   225  000C26  6EF6               	movwf	tblptrl,c
   226  000C28  0E0F               	movlw	high __pidataCOMRAM
   227  000C2A  6EF7               	movwf	tblptrh,c
   228  000C2C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   229  000C2E  6EF8               	movwf	tblptru,c
   230  000C30  EE00  F042         	lfsr	0,__pdataCOMRAM
   231  000C34  EE10 F01B          	lfsr	1,27
   232  000C38                     copy_data0:
   233  000C38  0009               	tblrd		*+
   234  000C3A  CFF5 FFEE          	movff	tablat,postinc0
   235  000C3E  50E5               	movf	postdec1,w,c
   236  000C40  50E1               	movf	fsr1l,w,c
   237  000C42  E1FA               	bnz	copy_data0
   238                           
   239                           ; Clear objects allocated to BANK1 (184 bytes)
   240  000C44  EE01  F000         	lfsr	0,__pbssBANK1
   241  000C48  0EB8               	movlw	184
   242  000C4A                     clear_0:
   243  000C4A  6AEE               	clrf	postinc0,c
   244  000C4C  06E8               	decf	wreg,f,c
   245  000C4E  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   248  000C50  6A73               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   249                           
   250                           ; Clear objects allocated to COMRAM (65 bytes)
   251  000C52  EE00  F001         	lfsr	0,__pbssCOMRAM
   252  000C56  0E41               	movlw	65
   253  000C58                     clear_1:
   254  000C58  6AEE               	clrf	postinc0,c
   255  000C5A  06E8               	decf	wreg,f,c
   256  000C5C  E1FD               	bnz	clear_1
   257  000C5E                     end_of_initialization:
   258                           	callstack 0
   259  000C5E                     __end_of__initialization:
   260                           	callstack 0
   261  000C5E  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   262  000C60  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   263  000C62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   264  000C64  6EF8               	movwf	tblptru,c
   265  000C66  0100               	movlb	0
   266  000C68  EF59  F006         	goto	_main	;jump to C main() function
   267                           
   268                           	psect	bitbssCOMRAM
   269  000398                     __pbitbssCOMRAM:
   270                           	callstack 0
   271  000398                     _do_register:
   272                           	callstack 0
   273  000398                     	ds	1
   274  000399                     _return_error:
   275                           	callstack 0
   276  000399                     	ds	1
   277  00039A                     _do_check_exists:
   278                           	callstack 0
   279  00039A                     	ds	1
   280  00039B                     _loginNOTRegister:
   281                           	callstack 0
   282  00039B                     	ds	1
   283  00039C                     _setSMSon:
   284                           	callstack 0
   285  00039C                     	ds	1
   286  00039D                     _nou_s:
   287                           	callstack 0
   288  00039D                     	ds	1
   289                           
   290                           	psect	bssCOMRAM
   291  000001                     __pbssCOMRAM:
   292                           	callstack 0
   293  000001                     _s_Timers:
   294                           	callstack 0
   295  000001                     	ds	24
   296  000019                     _tmpPassword:
   297                           	callstack 0
   298  000019                     	ds	9
   299  000022                     _h_Tics:
   300                           	callstack 0
   301  000022                     	ds	2
   302  000024                     UmotorUsers@state:
   303                           	callstack 0
   304  000024                     	ds	1
   305  000025                     _i:
   306                           	callstack 0
   307  000025                     	ds	1
   308  000026                     _indexNextUser:
   309                           	callstack 0
   310  000026                     	ds	1
   311  000027                     _numUsuaris:
   312                           	callstack 0
   313  000027                     	ds	1
   314  000028                     _currentUsrIndex:
   315                           	callstack 0
   316  000028                     	ds	1
   317  000029                     menu@state:
   318                           	callstack 0
   319  000029                     	ds	1
   320  00002A                     _timerMenu:
   321                           	callstack 0
   322  00002A                     	ds	1
   323  00002B                     _j:
   324                           	callstack 0
   325  00002B                     	ds	1
   326  00002C                     _counter:
   327                           	callstack 0
   328  00002C                     	ds	1
   329  00002D                     TeTeclat@files:
   330                           	callstack 0
   331  00002D                     	ds	1
   332  00002E                     TeTeclat@cols:
   333                           	callstack 0
   334  00002E                     	ds	1
   335  00002F                     TeTeclat@state:
   336                           	callstack 0
   337  00002F                     	ds	1
   338  000030                     _tiTeclat:
   339                           	callstack 0
   340  000030                     	ds	1
   341  000031                     SMotor@state:
   342                           	callstack 0
   343  000031                     	ds	1
   344  000032                     _sumaPulsacions:
   345                           	callstack 0
   346  000032                     	ds	1
   347  000033                     _s_ptr:
   348                           	callstack 0
   349  000033                     	ds	1
   350  000034                     _Timer:
   351                           	callstack 0
   352  000034                     	ds	1
   353  000035                     _ColumnAct:
   354                           	callstack 0
   355  000035                     	ds	1
   356  000036                     _RowAct:
   357                           	callstack 0
   358  000036                     	ds	1
   359  000037                     _Columns:
   360                           	callstack 0
   361  000037                     	ds	1
   362  000038                     _Rows:
   363                           	callstack 0
   364  000038                     	ds	1
   365  000039                     _tmpUsername:
   366                           	callstack 0
   367  000039                     	ds	9
   368                           
   369                           	psect	dataCOMRAM
   370  000042                     __pdataCOMRAM:
   371                           	callstack 0
   372  000042                     _lletraInici:
   373                           	callstack 0
   374  000042                     	ds	9
   375  00004B                     _novaLletra:
   376                           	callstack 0
   377  00004B                     	ds	1
   378  00004C                     _NovaTecla:
   379                           	callstack 0
   380  00004C                     	ds	1
   381  00004D                     _ultimaTecla:
   382                           	callstack 0
   383  00004D                     	ds	1
   384  00004E                     _timerSMS:
   385                           	callstack 0
   386  00004E                     	ds	1
   387  00004F                     _novaTecla:
   388                           	callstack 0
   389  00004F                     	ds	1
   390  000050                     _lletraASCII:
   391                           	callstack 0
   392  000050                     	ds	1
   393  000051                     _teclaPremuda:
   394                           	callstack 0
   395  000051                     	ds	12
   396                           
   397                           	psect	bssBANK1
   398  000100                     __pbssBANK1:
   399                           	callstack 0
   400  000100                     _usuaris:
   401                           	callstack 0
   402  000100                     	ds	184
   403                           
   404                           	psect	cstackCOMRAM
   405  00005D                     __pcstackCOMRAM:
   406                           	callstack 0
   407  00005D                     
   408                           ; 1 bytes @ 0x0
   409  00005D                     	ds	1
   410  00005E                     ??_high_rsi:
   411                           
   412                           ; 1 bytes @ 0x1
   413  00005E                     	ds	4
   414  000062                     ??_EscriuPrimeraOrdre:
   415  000062                     ??_Uinit:
   416  000062                     ??_CantaPartAlta:
   417  000062                     ??_CantaPartBaixa:
   418  000062                     ?_TiGetTics:
   419                           	callstack 0
   420  000062                     LcNewString@new_s:
   421                           	callstack 0
   422  000062                     SsetNovaTecla@tecla:
   423                           	callstack 0
   424  000062                     TiResetTics@Handle:
   425                           	callstack 0
   426  000062                     MsetNovaTecla@tecla:
   427                           	callstack 0
   428  000062                     MNovaLletra@lletra:
   429                           	callstack 0
   430  000062                     UenviaChar@pos:
   431                           	callstack 0
   432  000062                     UenviaPas@pos:
   433                           	callstack 0
   434  000062                     escriureCharEEPROM@pos:
   435                           	callstack 0
   436  000062                     compareStrings@a:
   437                           	callstack 0
   438  000062                     escriureEEPROM@caca:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x5
   442  000062                     	ds	1
   443  000063                     CantaPartAlta@c:
   444                           	callstack 0
   445  000063                     CantaPartBaixa@c:
   446                           	callstack 0
   447  000063                     EscriuPrimeraOrdre@ordre:
   448                           	callstack 0
   449  000063                     UenviaChar@c:
   450                           	callstack 0
   451  000063                     UenviaPas@c:
   452                           	callstack 0
   453  000063                     escriureCharEEPROM@c:
   454                           	callstack 0
   455  000063                     compareStrings@b:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x6
   459  000063                     	ds	1
   460  000064                     ??_TiGetTics:
   461  000064                     CantaIR@IR:
   462                           	callstack 0
   463  000064                     CantaData@Data:
   464                           	callstack 0
   465  000064                     Uinit@i:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x7
   469  000064                     	ds	1
   470  000065                     ??_compareStrings:
   471  000065                     Uinit@j:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x8
   475  000065                     	ds	1
   476  000066                     TiGetTics@Handle:
   477                           	callstack 0
   478  000066                     Uinit@j_1016:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x9
   482  000066                     	ds	1
   483  000067                     ??_UmotorUsers:
   484  000067                     TiGetTics@actual:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0xA
   488  000067                     	ds	2
   489  000069                     ??_SMotor:
   490  000069                     ??_TeTeclat:
   491  000069                     WaitForBusy@Busy:
   492                           	callstack 0
   493  000069                     Espera@ms:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0xC
   497  000069                     	ds	1
   498  00006A                     LcGotoXY@Row:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0xD
   502  00006A                     	ds	1
   503  00006B                     ??_Espera:
   504  00006B                     LcGotoXY@Fisics:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xE
   508  00006B                     	ds	1
   509  00006C                     Espera@Timer:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0xF
   513  00006C                     	ds	1
   514  00006D                     LcInit@columns:
   515                           	callstack 0
   516  00006D                     _LcGotoXY$342:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x10
   520  00006D                     	ds	1
   521  00006E                     LcInit@rows:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x11
   525  00006E                     	ds	1
   526  00006F                     LcGotoXY@Column:
   527                           	callstack 0
   528  00006F                     LcInit@i:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x12
   532  00006F                     	ds	1
   533  000070                     LcPutChar@c:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0x13
   537  000070                     	ds	1
   538  000071                     ??_menu:
   539  000071                     
   540                           ; 1 bytes @ 0x14
   541  000071                     	ds	2
   542  000073                     
   543                           ; 1 bytes @ 0x16
   544 ;;
   545 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   546 ;;
   547 ;; *************** function _main *****************
   548 ;; Defined at:
   549 ;;		line 69 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1
   563 ;;      Params:         0       0       0
   564 ;;      Locals:         0       0       0
   565 ;;      Temps:          0       0       0
   566 ;;      Totals:         0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels required when called: 7
   569 ;; This function calls:
   570 ;;		_LcInit
   571 ;;		_LcLCD
   572 ;;		_Minit
   573 ;;		_SMotor
   574 ;;		_Sinit
   575 ;;		_TeInit
   576 ;;		_TeTeclat
   577 ;;		_TiInitTimer
   578 ;;		_Uinit
   579 ;;		_UmotorUsers
   580 ;;		_escriureEEPROM
   581 ;;		_init_ports
   582 ;;		_menu
   583 ;; This function is called by:
   584 ;;		Startup code after reset
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text0
   589  000CB2                     __ptext0:
   590                           	callstack 0
   591  000CB2                     _main:
   592                           	callstack 24
   593                           
   594                           ;main.c: 70:     init_ports();
   595                           
   596                           ;incstack = 0
   597  000CB2  EC9C  F007         	call	_init_ports	;wreg free
   598                           
   599                           ;main.c: 71:     escriureEEPROM();
   600  000CB6  EC39  F007         	call	_escriureEEPROM	;wreg free
   601                           
   602                           ;main.c: 72:     TiInitTimer();
   603  000CBA  ECD3  F006         	call	_TiInitTimer	;wreg free
   604                           
   605                           ;main.c: 73:     TeInit();
   606  000CBE  ECFA  F007         	call	_TeInit	;wreg free
   607                           
   608                           ;main.c: 74:     Sinit();
   609  000CC2  ECFE  F007         	call	_Sinit	;wreg free
   610                           
   611                           ;main.c: 75:     SMotor();
   612  000CC6  EC44  F002         	call	_SMotor	;wreg free
   613                           
   614                           ;main.c: 76:     Uinit();
   615  000CCA  ECBD  F004         	call	_Uinit	;wreg free
   616                           
   617                           ;main.c: 78:     LcInit(2,16);
   618  000CCE  0E10               	movlw	16
   619  000CD0  6E6D               	movwf	LcInit@columns^0,c
   620  000CD2  0E02               	movlw	2
   621  000CD4  EC50  F004         	call	_LcInit
   622                           
   623                           ;main.c: 79:     Minit();
   624  000CD8  EC06  F008         	call	_Minit	;wreg free
   625  000CDC                     l2914:
   626                           
   627                           ;main.c: 83:         menu();
   628  000CDC  EC12  F001         	call	_menu	;wreg free
   629                           
   630                           ;main.c: 85:         UmotorUsers();
   631  000CE0  ECCC  F003         	call	_UmotorUsers	;wreg free
   632                           
   633                           ;main.c: 86:         TeTeclat();
   634  000CE4  EC1A  F003         	call	_TeTeclat	;wreg free
   635                           
   636                           ;main.c: 87:         SMotor();
   637  000CE8  EC44  F002         	call	_SMotor	;wreg free
   638                           
   639                           ;main.c: 88:         LcLCD();
   640  000CEC  EC21  F007         	call	_LcLCD	;wreg free
   641  000CF0  D7F5               	goto	l2914
   642  000CF2                     __end_of_main:
   643                           	callstack 0
   644                           
   645 ;; *************** function _menu *****************
   646 ;; Defined at:
   647 ;;		line 25 in file "Menu.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1
   661 ;;      Params:         0       0       0
   662 ;;      Locals:         0       0       0
   663 ;;      Temps:          2       0       0
   664 ;;      Totals:         2       0       0
   665 ;;Total ram usage:        2 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 6
   668 ;; This function calls:
   669 ;;		_LcClear
   670 ;;		_LcGotoXY
   671 ;;		_LcLliure
   672 ;;		_LcNewString
   673 ;;		_LcPutChar
   674 ;;		_SMSoff
   675 ;;		_SMSon
   676 ;;		_UcheckExists
   677 ;;		_UcheckExistsGetError
   678 ;;		_UcheckExistsNotFinished
   679 ;;		_UenviaChar
   680 ;;		_UenviaPas
   681 ;;		_UgetNumUsuaris
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text1
   688  000224                     __ptext1:
   689                           	callstack 0
   690  000224                     _menu:
   691                           	callstack 24
   692                           
   693                           ;Menu.c: 26:   static char state = 0;;Menu.c: 28:  switch(state) {
   694                           
   695                           ;incstack = 0
   696  000224  D100               	goto	l2736
   697  000226                     l2576:
   698                           
   699                           ;Menu.c: 30:    LcClear();
   700  000226  EC66  F007         	call	_LcClear	;wreg free
   701                           
   702                           ;Menu.c: 31:    LcNewString("1.LOGIN");
   703  00022A  0E0C               	movlw	low STR_1
   704  00022C  6E62               	movwf	LcNewString@new_s^0,c
   705  00022E  ECEE  F007         	call	_LcNewString	;wreg free
   706                           
   707                           ;Menu.c: 32:    state = 1;
   708  000232  0E01               	movlw	1
   709  000234  6E29               	movwf	menu@state^0,c
   710                           
   711                           ;Menu.c: 33:   break;
   712  000236  0012               	return	
   713  000238                     l2582:
   714                           
   715                           ;Menu.c: 35:    if (LcLliure()) {
   716  000238  ECE2  F007         	call	_LcLliure	;wreg free
   717  00023C  A0D8               	btfss	status,0,c
   718  00023E  0012               	return	
   719                           
   720                           ;Menu.c: 36:     LcGotoXY(0,1);
   721  000240  0E01               	movlw	1
   722  000242  6E6A               	movwf	LcGotoXY@Row^0,c
   723  000244  0E00               	movlw	0
   724  000246  EC99  F006         	call	_LcGotoXY
   725                           
   726                           ;Menu.c: 37:     LcNewString("2.REGISTER");
   727  00024A  0E01               	movlw	low STR_2
   728  00024C  6E62               	movwf	LcNewString@new_s^0,c
   729  00024E  ECEE  F007         	call	_LcNewString	;wreg free
   730                           
   731                           ;Menu.c: 38:     NovaTecla = -1;
   732  000252  684C               	setf	_NovaTecla^0,c
   733                           
   734                           ;Menu.c: 39:     state = 2;
   735  000254  0E02               	movlw	2
   736  000256  6E29               	movwf	menu@state^0,c
   737  000258  0012               	return	
   738  00025A                     l2592:
   739                           
   740                           ;Menu.c: 43:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
   741  00025A  044C               	decf	_NovaTecla^0,w,c
   742  00025C  A4D8               	btfss	status,2,c
   743  00025E  D009               	goto	l2600
   744  000260  EC10  F008         	call	_UgetNumUsuaris	;wreg free
   745  000264  0900               	iorlw	0
   746  000266  B4D8               	btfsc	status,2,c
   747  000268  D004               	goto	l2600
   748                           
   749                           ;Menu.c: 44:     loginNOTRegister = 1;
   750  00026A  8673               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   751  00026C                     l2598:
   752                           
   753                           ;Menu.c: 45:     state = 3;
   754  00026C  0E03               	movlw	3
   755  00026E  6E29               	movwf	menu@state^0,c
   756                           
   757                           ;Menu.c: 46:    }
   758  000270  0012               	return	
   759  000272                     l2600:
   760  000272  0E02               	movlw	2
   761  000274  184C               	xorwf	_NovaTecla^0,w,c
   762  000276  A4D8               	btfss	status,2,c
   763  000278  0012               	return	
   764                           
   765                           ;Menu.c: 48:     loginNOTRegister = 0;
   766  00027A  9673               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   767  00027C  D7F7               	goto	l2598
   768  00027E                     l419:
   769                           
   770                           ;Menu.c: 53:    NovaTecla = -1;
   771  00027E  684C               	setf	_NovaTecla^0,c
   772                           
   773                           ;Menu.c: 54:    novaLletra = -1;
   774  000280  684B               	setf	_novaLletra^0,c
   775                           
   776                           ;Menu.c: 55:    LcClear();
   777  000282  EC66  F007         	call	_LcClear	;wreg free
   778                           
   779                           ;Menu.c: 56:    LcNewString("USER: ");
   780  000286  0E1B               	movlw	low STR_3
   781  000288  6E62               	movwf	LcNewString@new_s^0,c
   782  00028A  ECEE  F007         	call	_LcNewString	;wreg free
   783                           
   784                           ;Menu.c: 57:    state = 4;
   785  00028E  0E04               	movlw	4
   786  000290  6E29               	movwf	menu@state^0,c
   787                           
   788                           ;Menu.c: 58:   break;
   789  000292  0012               	return	
   790  000294                     l2612:
   791                           
   792                           ;Menu.c: 60:    if (LcLliure()) {
   793  000294  ECE2  F007         	call	_LcLliure	;wreg free
   794  000298  A0D8               	btfss	status,0,c
   795  00029A  0012               	return	
   796                           
   797                           ;Menu.c: 61:     LcGotoXY(0,1);
   798  00029C  0E01               	movlw	1
   799  00029E  6E6A               	movwf	LcGotoXY@Row^0,c
   800  0002A0  0E00               	movlw	0
   801  0002A2  EC99  F006         	call	_LcGotoXY
   802                           
   803                           ;Menu.c: 62:     LcNewString("PSWD: ");
   804  0002A6  0E14               	movlw	low STR_4
   805  0002A8  6E62               	movwf	LcNewString@new_s^0,c
   806  0002AA  ECEE  F007         	call	_LcNewString	;wreg free
   807                           
   808                           ;Menu.c: 63:     state = 5;
   809  0002AE  0E05               	movlw	5
   810  0002B0  6E29               	movwf	menu@state^0,c
   811  0002B2  0012               	return	
   812  0002B4                     l2620:
   813                           
   814                           ;Menu.c: 67:    if (LcLliure()) {
   815  0002B4  ECE2  F007         	call	_LcLliure	;wreg free
   816  0002B8  A0D8               	btfss	status,0,c
   817  0002BA  0012               	return	
   818                           
   819                           ;Menu.c: 68:     LcGotoXY(6,0);
   820  0002BC  0E00               	movlw	0
   821  0002BE  6E6A               	movwf	LcGotoXY@Row^0,c
   822  0002C0  0E06               	movlw	6
   823  0002C2  EC99  F006         	call	_LcGotoXY
   824                           
   825                           ;Menu.c: 69:     SMSon();
   826  0002C6  EC0A  F008         	call	_SMSon	;wreg free
   827                           
   828                           ;Menu.c: 70:     j =0;
   829  0002CA  0E00               	movlw	0
   830  0002CC  6E2B               	movwf	_j^0,c
   831  0002CE                     l2628:
   832                           
   833                           ;Menu.c: 71:     state = 6;
   834  0002CE  0E06               	movlw	6
   835  0002D0  6E29               	movwf	menu@state^0,c
   836  0002D2  0012               	return	
   837  0002D4                     l2630:
   838                           
   839                           ;Menu.c: 75:    if (novaLletra > 47 && NovaTecla != 10) {
   840  0002D4  504B               	movf	_novaLletra^0,w,c
   841  0002D6  0A80               	xorlw	128
   842  0002D8  0F50               	addlw	-176
   843  0002DA  A0D8               	btfss	status,0,c
   844  0002DC  D00F               	goto	l2640
   845  0002DE  0E0A               	movlw	10
   846  0002E0  184C               	xorwf	_NovaTecla^0,w,c
   847  0002E2  B4D8               	btfsc	status,2,c
   848  0002E4  D00B               	goto	l2640
   849                           
   850                           ;Menu.c: 76:     LcPutChar(novaLletra);
   851  0002E6  504B               	movf	_novaLletra^0,w,c
   852  0002E8  ECE9  F005         	call	_LcPutChar
   853                           
   854                           ;Menu.c: 77:     UenviaChar(novaLletra,j);
   855  0002EC  C02B  F062         	movff	_j,UenviaChar@pos
   856  0002F0  504B               	movf	_novaLletra^0,w,c
   857  0002F2  ECCE  F007         	call	_UenviaChar
   858  0002F6                     l2638:
   859                           
   860                           ;Menu.c: 78:     state = 7;
   861  0002F6  0E07               	movlw	7
   862  0002F8  6E29               	movwf	menu@state^0,c
   863                           
   864                           ;Menu.c: 79:    }
   865  0002FA  0012               	return	
   866  0002FC                     l2640:
   867  0002FC  0E0B               	movlw	11
   868  0002FE  184C               	xorwf	_NovaTecla^0,w,c
   869  000300  A4D8               	btfss	status,2,c
   870  000302  0012               	return	
   871  000304  D7F8               	goto	l2638
   872  000306                     l2644:
   873                           
   874                           ;Menu.c: 85:    if (j != 7 && NovaTecla != 11) {
   875  000306  0E07               	movlw	7
   876  000308  182B               	xorwf	_j^0,w,c
   877  00030A  B4D8               	btfsc	status,2,c
   878  00030C  D008               	goto	l2656
   879  00030E  0E0B               	movlw	11
   880  000310  184C               	xorwf	_NovaTecla^0,w,c
   881  000312  B4D8               	btfsc	status,2,c
   882  000314  D004               	goto	l2656
   883                           
   884                           ;Menu.c: 86:     j++;
   885  000316  2A2B               	incf	_j^0,f,c
   886                           
   887                           ;Menu.c: 87:     NovaTecla = -1;
   888  000318  684C               	setf	_NovaTecla^0,c
   889                           
   890                           ;Menu.c: 88:     novaLletra = -1;
   891  00031A  684B               	setf	_novaLletra^0,c
   892  00031C  D7D8               	goto	l2628
   893  00031E                     l2656:
   894  00031E  0E07               	movlw	7
   895  000320  182B               	xorwf	_j^0,w,c
   896  000322  B4D8               	btfsc	status,2,c
   897  000324  D004               	goto	u2120
   898  000326  0E0B               	movlw	11
   899  000328  184C               	xorwf	_NovaTecla^0,w,c
   900  00032A  A4D8               	btfss	status,2,c
   901  00032C  0012               	return	
   902  00032E                     u2120:
   903                           
   904                           ;Menu.c: 92:     LcGotoXY(6,1);
   905  00032E  0E01               	movlw	1
   906  000330  6E6A               	movwf	LcGotoXY@Row^0,c
   907  000332  0E06               	movlw	6
   908  000334  EC99  F006         	call	_LcGotoXY
   909                           
   910                           ;Menu.c: 93:     UenviaChar('\0',j);
   911  000338  C02B  F062         	movff	_j,UenviaChar@pos
   912  00033C  0E00               	movlw	0
   913  00033E  ECCE  F007         	call	_UenviaChar
   914                           
   915                           ;Menu.c: 94:     NovaTecla = -1;
   916  000342  684C               	setf	_NovaTecla^0,c
   917                           
   918                           ;Menu.c: 95:     novaLletra = -1;
   919  000344  684B               	setf	_novaLletra^0,c
   920                           
   921                           ;Menu.c: 96:     j = 0;
   922  000346  0E00               	movlw	0
   923  000348  6E2B               	movwf	_j^0,c
   924  00034A                     l2670:
   925                           
   926                           ;Menu.c: 97:     state = 8;
   927  00034A  0E08               	movlw	8
   928  00034C  6E29               	movwf	menu@state^0,c
   929  00034E  0012               	return	
   930  000350                     l2672:
   931                           
   932                           ;Menu.c: 101:    if (novaLletra > 47 && NovaTecla != 10) {
   933  000350  504B               	movf	_novaLletra^0,w,c
   934  000352  0A80               	xorlw	128
   935  000354  0F50               	addlw	-176
   936  000356  A0D8               	btfss	status,0,c
   937  000358  D00F               	goto	l2682
   938  00035A  0E0A               	movlw	10
   939  00035C  184C               	xorwf	_NovaTecla^0,w,c
   940  00035E  B4D8               	btfsc	status,2,c
   941  000360  D00B               	goto	l2682
   942                           
   943                           ;Menu.c: 102:     LcPutChar(novaLletra);
   944  000362  504B               	movf	_novaLletra^0,w,c
   945  000364  ECE9  F005         	call	_LcPutChar
   946                           
   947                           ;Menu.c: 103:     UenviaPas(novaLletra,j);
   948  000368  C02B  F062         	movff	_j,UenviaPas@pos
   949  00036C  504B               	movf	_novaLletra^0,w,c
   950  00036E  ECC6  F007         	call	_UenviaPas
   951  000372                     l2680:
   952                           
   953                           ;Menu.c: 104:     state = 9;
   954  000372  0E09               	movlw	9
   955  000374  6E29               	movwf	menu@state^0,c
   956                           
   957                           ;Menu.c: 105:    }
   958  000376  0012               	return	
   959  000378                     l2682:
   960  000378  0E0B               	movlw	11
   961  00037A  184C               	xorwf	_NovaTecla^0,w,c
   962  00037C  A4D8               	btfss	status,2,c
   963  00037E  0012               	return	
   964  000380  D7F8               	goto	l2680
   965  000382                     l2686:
   966                           
   967                           ;Menu.c: 111:    if (j != 7 && NovaTecla != 11) {
   968  000382  0E07               	movlw	7
   969  000384  182B               	xorwf	_j^0,w,c
   970  000386  B4D8               	btfsc	status,2,c
   971  000388  D008               	goto	l2698
   972  00038A  0E0B               	movlw	11
   973  00038C  184C               	xorwf	_NovaTecla^0,w,c
   974  00038E  B4D8               	btfsc	status,2,c
   975  000390  D004               	goto	l2698
   976                           
   977                           ;Menu.c: 112:     j++;
   978  000392  2A2B               	incf	_j^0,f,c
   979                           
   980                           ;Menu.c: 113:     NovaTecla = -1;
   981  000394  684C               	setf	_NovaTecla^0,c
   982                           
   983                           ;Menu.c: 114:     novaLletra = -1;
   984  000396  684B               	setf	_novaLletra^0,c
   985  000398  D7D8               	goto	l2670
   986  00039A                     l2698:
   987  00039A  0E07               	movlw	7
   988  00039C  182B               	xorwf	_j^0,w,c
   989  00039E  B4D8               	btfsc	status,2,c
   990  0003A0  D004               	goto	u2190
   991  0003A2  0E0B               	movlw	11
   992  0003A4  184C               	xorwf	_NovaTecla^0,w,c
   993  0003A6  A4D8               	btfss	status,2,c
   994  0003A8  0012               	return	
   995  0003AA                     u2190:
   996                           
   997                           ;Menu.c: 118:     UenviaPas('\0',j);
   998  0003AA  C02B  F062         	movff	_j,UenviaPas@pos
   999  0003AE  0E00               	movlw	0
  1000  0003B0  ECC6  F007         	call	_UenviaPas
  1001                           
  1002                           ;Menu.c: 119:     NovaTecla = -1;
  1003  0003B4  684C               	setf	_NovaTecla^0,c
  1004                           
  1005                           ;Menu.c: 120:     novaLletra = -1;
  1006  0003B6  684B               	setf	_novaLletra^0,c
  1007                           
  1008                           ;Menu.c: 121:     j = 0;
  1009  0003B8  0E00               	movlw	0
  1010  0003BA  6E2B               	movwf	_j^0,c
  1011                           
  1012                           ;Menu.c: 122:     LcClear();
  1013  0003BC  EC66  F007         	call	_LcClear	;wreg free
  1014                           
  1015                           ;Menu.c: 123:     UcheckExists();
  1016  0003C0  EC12  F008         	call	_UcheckExists	;wreg free
  1017                           
  1018                           ;Menu.c: 124:     SMSoff();
  1019  0003C4  EC0D  F008         	call	_SMSoff	;wreg free
  1020                           
  1021                           ;Menu.c: 125:     state = 10;
  1022  0003C8  0E0A               	movlw	10
  1023  0003CA  6E29               	movwf	menu@state^0,c
  1024  0003CC  0012               	return	
  1025  0003CE                     l2718:
  1026                           
  1027                           ;Menu.c: 129:    if (!UcheckExistsNotFinished()) {
  1028  0003CE  ECD6  F007         	call	_UcheckExistsNotFinished	;wreg free
  1029  0003D2  B0D8               	btfsc	status,0,c
  1030  0003D4  0012               	return	
  1031                           
  1032                           ;Menu.c: 130:     state = 11;
  1033  0003D6  0E0B               	movlw	11
  1034  0003D8  6E29               	movwf	menu@state^0,c
  1035  0003DA  0012               	return	
  1036  0003DC                     l446:
  1037                           
  1038                           ;Menu.c: 134:    if (loginNOTRegister == 0 && UcheckExistsGetError() == 0) {
  1039  0003DC  B673               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1040  0003DE  D007               	goto	l447
  1041  0003E0  ECDC  F007         	call	_UcheckExistsGetError	;wreg free
  1042  0003E4  B0D8               	btfsc	status,0,c
  1043  0003E6  D003               	goto	l447
  1044                           
  1045                           ;Menu.c: 135:     state = 12;
  1046  0003E8  0E0C               	movlw	12
  1047  0003EA  6E29               	movwf	menu@state^0,c
  1048                           
  1049                           ;Menu.c: 136:    }
  1050  0003EC  0012               	return	
  1051  0003EE                     l447:
  1052  0003EE  A673               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1053  0003F0  D007               	goto	l2730
  1054  0003F2  ECDC  F007         	call	_UcheckExistsGetError	;wreg free
  1055  0003F6  A0D8               	btfss	status,0,c
  1056  0003F8  D003               	goto	l2730
  1057                           
  1058                           ;Menu.c: 138:     state = 13;
  1059  0003FA  0E0D               	movlw	13
  1060  0003FC  6E29               	movwf	menu@state^0,c
  1061                           
  1062                           ;Menu.c: 139:    }
  1063  0003FE  0012               	return	
  1064  000400                     l2730:
  1065  000400  A673               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1066  000402  D002               	goto	u2250
  1067  000404  0E01               	movlw	1
  1068  000406  D001               	goto	u2252
  1069  000408                     u2250:
  1070  000408  0E00               	movlw	0
  1071  00040A                     u2252:
  1072  00040A  6E71               	movwf	??_menu^0,c
  1073  00040C  ECDC  F007         	call	_UcheckExistsGetError	;wreg free
  1074  000410  A0D8               	btfss	status,0,c
  1075  000412  D002               	goto	u2260
  1076  000414  0E01               	movlw	1
  1077  000416  D001               	goto	u2262
  1078  000418                     u2260:
  1079  000418  0E00               	movlw	0
  1080  00041A                     u2262:
  1081  00041A  1A71               	xorwf	??_menu^0,f,c
  1082  00041C  B4D8               	btfsc	status,2,c
  1083  00041E  0012               	return	
  1084                           
  1085                           ;Menu.c: 141:     state = 0;
  1086  000420  0E00               	movlw	0
  1087  000422  6E29               	movwf	menu@state^0,c
  1088  000424  0012               	return	
  1089  000426                     l2736:
  1090  000426  5029               	movf	menu@state^0,w,c
  1091  000428  6E71               	movwf	??_menu^0,c
  1092  00042A  6A72               	clrf	(??_menu+1)^0,c
  1093                           
  1094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1095                           ; Switch size 1, requested type "simple"
  1096                           ; Number of cases is 1, Range of values is 0 to 0
  1097                           ; switch strategies available:
  1098                           ; Name         Instructions Cycles
  1099                           ; simple_byte            4     3 (average)
  1100                           ;	Chosen strategy is simple_byte
  1101  00042C  5072               	movf	(??_menu+1)^0,w,c
  1102  00042E  0A00               	xorlw	0	; case 0
  1103  000430  A4D8               	btfss	status,2,c
  1104  000432  0012               	return	
  1105                           
  1106                           ; Switch size 1, requested type "simple"
  1107                           ; Number of cases is 14, Range of values is 0 to 13
  1108                           ; switch strategies available:
  1109                           ; Name         Instructions Cycles
  1110                           ; simple_byte           43    22 (average)
  1111                           ;	Chosen strategy is simple_byte
  1112  000434  5071               	movf	??_menu^0,w,c
  1113  000436  0A00               	xorlw	0	; case 0
  1114  000438  B4D8               	btfsc	status,2,c
  1115  00043A  D6F5               	goto	l2576
  1116  00043C  0A01               	xorlw	1	; case 1
  1117  00043E  B4D8               	btfsc	status,2,c
  1118  000440  D6FB               	goto	l2582
  1119  000442  0A03               	xorlw	3	; case 2
  1120  000444  B4D8               	btfsc	status,2,c
  1121  000446  D709               	goto	l2592
  1122  000448  0A01               	xorlw	1	; case 3
  1123  00044A  B4D8               	btfsc	status,2,c
  1124  00044C  D718               	goto	l419
  1125  00044E  0A07               	xorlw	7	; case 4
  1126  000450  B4D8               	btfsc	status,2,c
  1127  000452  D720               	goto	l2612
  1128  000454  0A01               	xorlw	1	; case 5
  1129  000456  B4D8               	btfsc	status,2,c
  1130  000458  D72D               	goto	l2620
  1131  00045A  0A03               	xorlw	3	; case 6
  1132  00045C  B4D8               	btfsc	status,2,c
  1133  00045E  D73A               	goto	l2630
  1134  000460  0A01               	xorlw	1	; case 7
  1135  000462  B4D8               	btfsc	status,2,c
  1136  000464  D750               	goto	l2644
  1137  000466  0A0F               	xorlw	15	; case 8
  1138  000468  B4D8               	btfsc	status,2,c
  1139  00046A  D772               	goto	l2672
  1140  00046C  0A01               	xorlw	1	; case 9
  1141  00046E  B4D8               	btfsc	status,2,c
  1142  000470  D788               	goto	l2686
  1143  000472  0A03               	xorlw	3	; case 10
  1144  000474  B4D8               	btfsc	status,2,c
  1145  000476  D7AB               	goto	l2718
  1146  000478  0A01               	xorlw	1	; case 11
  1147  00047A  B4D8               	btfsc	status,2,c
  1148  00047C  D7AF               	goto	l446
  1149  00047E  0A07               	xorlw	7	; case 12
  1150  000480  B4D8               	btfsc	status,2,c
  1151  000482  0012               	return	
  1152  000484  0A01               	xorlw	1	; case 13
  1153  000486  0012               	return	
  1154  000488                     __end_of_menu:
  1155                           	callstack 0
  1156                           
  1157 ;; *************** function _UgetNumUsuaris *****************
  1158 ;; Defined at:
  1159 ;;		line 25 in file "Usuaris.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      unsigned char 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1
  1173 ;;      Params:         0       0       0
  1174 ;;      Locals:         0       0       0
  1175 ;;      Temps:          0       0       0
  1176 ;;      Totals:         0       0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 2
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_menu
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text2
  1188  001020                     __ptext2:
  1189                           	callstack 0
  1190  001020                     _UgetNumUsuaris:
  1191                           	callstack 27
  1192                           
  1193                           ;Usuaris.c: 26:     return numUsuaris;
  1194                           
  1195                           ;incstack = 0
  1196  001020  5027               	movf	_numUsuaris^0,w,c
  1197  001022  0012               	return		;funcret
  1198  001024                     __end_of_UgetNumUsuaris:
  1199                           	callstack 0
  1200                           
  1201 ;; *************** function _UenviaPas *****************
  1202 ;; Defined at:
  1203 ;;		line 41 in file "Usuaris.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  c               1    wreg     unsigned char 
  1206 ;;  pos             1    5[COMRAM] unsigned char 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  c               1    6[COMRAM] unsigned char 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1
  1218 ;;      Params:         1       0       0
  1219 ;;      Locals:         1       0       0
  1220 ;;      Temps:          0       0       0
  1221 ;;      Totals:         2       0       0
  1222 ;;Total ram usage:        2 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; Hardware stack levels required when called: 2
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_menu
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text3
  1233  000F8C                     __ptext3:
  1234                           	callstack 0
  1235  000F8C                     _UenviaPas:
  1236                           	callstack 27
  1237                           
  1238                           ;incstack = 0
  1239                           ;UenviaPas@c stored from wreg
  1240  000F8C  6E63               	movwf	UenviaPas@c^0,c
  1241                           
  1242                           ;Usuaris.c: 42:     tmpPassword[pos] = c;
  1243  000F8E  5062               	movf	UenviaPas@pos^0,w,c
  1244  000F90  0F19               	addlw	low _tmpPassword
  1245  000F92  6ED9               	movwf	fsr2l,c
  1246  000F94  6ADA               	clrf	fsr2h,c
  1247  000F96  C063  FFDF         	movff	UenviaPas@c,indf2
  1248  000F9A  0012               	return		;funcret
  1249  000F9C                     __end_of_UenviaPas:
  1250                           	callstack 0
  1251                           
  1252 ;; *************** function _UenviaChar *****************
  1253 ;; Defined at:
  1254 ;;		line 38 in file "Usuaris.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  c               1    wreg     unsigned char 
  1257 ;;  pos             1    5[COMRAM] unsigned char 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  c               1    6[COMRAM] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1
  1269 ;;      Params:         1       0       0
  1270 ;;      Locals:         1       0       0
  1271 ;;      Temps:          0       0       0
  1272 ;;      Totals:         2       0       0
  1273 ;;Total ram usage:        2 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 2
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_menu
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text4
  1284  000F9C                     __ptext4:
  1285                           	callstack 0
  1286  000F9C                     _UenviaChar:
  1287                           	callstack 27
  1288                           
  1289                           ;incstack = 0
  1290                           ;UenviaChar@c stored from wreg
  1291  000F9C  6E63               	movwf	UenviaChar@c^0,c
  1292                           
  1293                           ;Usuaris.c: 39:     tmpUsername[pos] = c;
  1294  000F9E  5062               	movf	UenviaChar@pos^0,w,c
  1295  000FA0  0F39               	addlw	low _tmpUsername
  1296  000FA2  6ED9               	movwf	fsr2l,c
  1297  000FA4  6ADA               	clrf	fsr2h,c
  1298  000FA6  C063  FFDF         	movff	UenviaChar@c,indf2
  1299  000FAA  0012               	return		;funcret
  1300  000FAC                     __end_of_UenviaChar:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _UcheckExistsNotFinished *****************
  1304 ;; Defined at:
  1305 ;;		line 32 in file "Usuaris.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;		None               void
  1312 ;; Registers used:
  1313 ;;		status,0
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1
  1319 ;;      Params:         0       0       0
  1320 ;;      Locals:         0       0       0
  1321 ;;      Temps:          0       0       0
  1322 ;;      Totals:         0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 2
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_menu
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text5
  1334  000FAC                     __ptext5:
  1335                           	callstack 0
  1336  000FAC                     _UcheckExistsNotFinished:
  1337                           	callstack 27
  1338                           
  1339                           ;Usuaris.c: 33:     return do_check_exists;
  1340                           
  1341                           ;incstack = 0
  1342  000FAC  B473               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1343  000FAE  D002               	goto	l1462
  1344  000FB0  90D8               	bcf	status,0,c
  1345  000FB2  0012               	return	
  1346  000FB4                     l1462:
  1347  000FB4  80D8               	bsf	status,0,c
  1348  000FB6  0012               	return		;funcret
  1349  000FB8                     __end_of_UcheckExistsNotFinished:
  1350                           	callstack 0
  1351                           
  1352 ;; *************** function _UcheckExistsGetError *****************
  1353 ;; Defined at:
  1354 ;;		line 35 in file "Usuaris.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;		None               void
  1361 ;; Registers used:
  1362 ;;		status,0
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1
  1368 ;;      Params:         0       0       0
  1369 ;;      Locals:         0       0       0
  1370 ;;      Temps:          0       0       0
  1371 ;;      Totals:         0       0       0
  1372 ;;Total ram usage:        0 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; Hardware stack levels required when called: 2
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_menu
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text6
  1383  000FB8                     __ptext6:
  1384                           	callstack 0
  1385  000FB8                     _UcheckExistsGetError:
  1386                           	callstack 27
  1387                           
  1388                           ;Usuaris.c: 36:     return return_error;
  1389                           
  1390                           ;incstack = 0
  1391  000FB8  B273               	btfsc	(_return_error/(0+8))^0,_return_error& (0+7),c
  1392  000FBA  D002               	goto	l1470
  1393  000FBC  90D8               	bcf	status,0,c
  1394  000FBE  0012               	return	
  1395  000FC0                     l1470:
  1396  000FC0  80D8               	bsf	status,0,c
  1397  000FC2  0012               	return		;funcret
  1398  000FC4                     __end_of_UcheckExistsGetError:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _UcheckExists *****************
  1402 ;; Defined at:
  1403 ;;		line 29 in file "Usuaris.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		None
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1
  1417 ;;      Params:         0       0       0
  1418 ;;      Locals:         0       0       0
  1419 ;;      Temps:          0       0       0
  1420 ;;      Totals:         0       0       0
  1421 ;;Total ram usage:        0 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; Hardware stack levels required when called: 2
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_menu
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text7
  1432  001024                     __ptext7:
  1433                           	callstack 0
  1434  001024                     _UcheckExists:
  1435                           	callstack 27
  1436                           
  1437                           ;Usuaris.c: 30:     do_check_exists = 1;
  1438                           
  1439                           ;incstack = 0
  1440  001024  8473               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1441  001026  0012               	return		;funcret
  1442  001028                     __end_of_UcheckExists:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _SMSon *****************
  1446 ;; Defined at:
  1447 ;;		line 114 in file "Ssms.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		None
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1
  1461 ;;      Params:         0       0       0
  1462 ;;      Locals:         0       0       0
  1463 ;;      Temps:          0       0       0
  1464 ;;      Totals:         0       0       0
  1465 ;;Total ram usage:        0 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; Hardware stack levels required when called: 2
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_menu
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text8
  1476  001014                     __ptext8:
  1477                           	callstack 0
  1478  001014                     _SMSon:
  1479                           	callstack 27
  1480                           
  1481                           ;Ssms.c: 115:     setSMSon = 1;
  1482                           
  1483                           ;incstack = 0
  1484  001014  8873               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1485                           
  1486                           ;Ssms.c: 116:     novaTecla = -1;
  1487  001016  684F               	setf	_novaTecla^0,c
  1488  001018  0012               	return		;funcret
  1489  00101A                     __end_of_SMSon:
  1490                           	callstack 0
  1491                           
  1492 ;; *************** function _SMSoff *****************
  1493 ;; Defined at:
  1494 ;;		line 119 in file "Ssms.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		None
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1
  1508 ;;      Params:         0       0       0
  1509 ;;      Locals:         0       0       0
  1510 ;;      Temps:          0       0       0
  1511 ;;      Totals:         0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 2
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_menu
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text9
  1523  00101A                     __ptext9:
  1524                           	callstack 0
  1525  00101A                     _SMSoff:
  1526                           	callstack 27
  1527                           
  1528                           ;Ssms.c: 120:     setSMSon = 0;
  1529                           
  1530                           ;incstack = 0
  1531  00101A  9873               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1532                           
  1533                           ;Ssms.c: 121:     novaTecla = -1;
  1534  00101C  684F               	setf	_novaTecla^0,c
  1535  00101E  0012               	return		;funcret
  1536  001020                     __end_of_SMSoff:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _LcNewString *****************
  1540 ;; Defined at:
  1541 ;;		line 239 in file "LcTLCD.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  new_s           1    5[COMRAM] PTR unsigned char 
  1544 ;;		 -> STR_4(7), STR_3(7), STR_2(11), STR_1(8), 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1
  1556 ;;      Params:         1       0       0
  1557 ;;      Locals:         0       0       0
  1558 ;;      Temps:          0       0       0
  1559 ;;      Totals:         1       0       0
  1560 ;;Total ram usage:        1 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; Hardware stack levels required when called: 2
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_menu
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text10
  1571  000FDC                     __ptext10:
  1572                           	callstack 0
  1573  000FDC                     _LcNewString:
  1574                           	callstack 27
  1575                           
  1576                           ;LcTLCD.c: 240:     s_ptr = new_s;
  1577                           
  1578                           ;incstack = 0
  1579  000FDC  C062  F033         	movff	LcNewString@new_s,_s_ptr
  1580                           
  1581                           ;LcTLCD.c: 241:     nou_s = 1;
  1582  000FE0  8A73               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1583  000FE2  0012               	return		;funcret
  1584  000FE4                     __end_of_LcNewString:
  1585                           	callstack 0
  1586                           
  1587 ;; *************** function _LcLliure *****************
  1588 ;; Defined at:
  1589 ;;		line 265 in file "LcTLCD.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;		None               void
  1596 ;; Registers used:
  1597 ;;		status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1
  1603 ;;      Params:         0       0       0
  1604 ;;      Locals:         0       0       0
  1605 ;;      Temps:          0       0       0
  1606 ;;      Totals:         0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 2
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_menu
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text11
  1618  000FC4                     __ptext11:
  1619                           	callstack 0
  1620  000FC4                     _LcLliure:
  1621                           	callstack 27
  1622                           
  1623                           ;LcTLCD.c: 266:     return !nou_s;
  1624                           
  1625                           ;incstack = 0
  1626  000FC4  AA73               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1627  000FC6  D002               	goto	l1434
  1628  000FC8  90D8               	bcf	status,0,c
  1629  000FCA  0012               	return	
  1630  000FCC                     l1434:
  1631  000FCC  80D8               	bsf	status,0,c
  1632  000FCE  0012               	return		;funcret
  1633  000FD0                     __end_of_LcLliure:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _LcClear *****************
  1637 ;; Defined at:
  1638 ;;		line 82 in file "LcTLCD.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1
  1652 ;;      Params:         0       0       0
  1653 ;;      Locals:         0       0       0
  1654 ;;      Temps:          0       0       0
  1655 ;;      Totals:         0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 5
  1659 ;; This function calls:
  1660 ;;		_CantaIR
  1661 ;;		_Espera
  1662 ;;		_LcGotoXY
  1663 ;;		_WaitForBusy
  1664 ;; This function is called by:
  1665 ;;		_menu
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text12
  1670  000ECC                     __ptext12:
  1671                           	callstack 0
  1672  000ECC                     _LcClear:
  1673                           	callstack 24
  1674                           
  1675                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  1676                           
  1677                           ;incstack = 0
  1678  000ECC  EC79  F006         	call	_WaitForBusy	;wreg free
  1679  000ED0  0E01               	movlw	1
  1680  000ED2  EC08  F007         	call	_CantaIR
  1681                           
  1682                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  1683  000ED6  0E00               	movlw	0
  1684  000ED8  6E6A               	movwf	(Espera@ms+1)^0,c
  1685  000EDA  0E03               	movlw	3
  1686  000EDC  6E69               	movwf	Espera@ms^0,c
  1687  000EDE  5034               	movf	_Timer^0,w,c
  1688  000EE0  EC8A  F007         	call	_Espera
  1689                           
  1690                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  1691  000EE4  0E00               	movlw	0
  1692  000EE6  6E6A               	movwf	LcGotoXY@Row^0,c
  1693  000EE8  0E00               	movlw	0
  1694  000EEA  EC99  F006         	call	_LcGotoXY
  1695  000EEE  0012               	return		;funcret
  1696  000EF0                     __end_of_LcClear:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function _init_ports *****************
  1700 ;; Defined at:
  1701 ;;		line 19 in file "main.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1
  1715 ;;      Params:         0       0       0
  1716 ;;      Locals:         0       0       0
  1717 ;;      Temps:          0       0       0
  1718 ;;      Totals:         0       0       0
  1719 ;;Total ram usage:        0 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 2
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text13
  1730  000F38                     __ptext13:
  1731                           	callstack 0
  1732  000F38                     _init_ports:
  1733                           	callstack 28
  1734                           
  1735                           ;incstack = 0
  1736  000F38  0E03               	movlw	3
  1737  000F3A  6E92               	movwf	146,c	;volatile
  1738  000F3C  0EE0               	movlw	224
  1739  000F3E  6E93               	movwf	147,c	;volatile
  1740  000F40  968A               	bcf	138,3,c	;volatile
  1741  000F42  908A               	bcf	138,0,c	;volatile
  1742  000F44  928A               	bcf	138,1,c	;volatile
  1743                           
  1744                           ;main.c: 42:     TRISC = 0xC0;
  1745  000F46  0EC0               	movlw	192
  1746  000F48  6E94               	movwf	148,c	;volatile
  1747                           
  1748                           ;main.c: 52:     TRISD = 0x8F;
  1749  000F4A  0E8F               	movlw	143
  1750  000F4C  6E95               	movwf	149,c	;volatile
  1751                           
  1752                           ;main.c: 53:     LATD = 0x00;
  1753  000F4E  0E00               	movlw	0
  1754  000F50  6E8C               	movwf	140,c	;volatile
  1755                           
  1756                           ;main.c: 56:     EECON1bits.EEPGD = 1;
  1757  000F52  8EA6               	bsf	166,7,c	;volsfr
  1758                           
  1759                           ;main.c: 57:     EECON1bits.CFGS = 0;
  1760  000F54  9CA6               	bcf	166,6,c	;volsfr
  1761  000F56  0012               	return		;funcret
  1762  000F58                     __end_of_init_ports:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _escriureEEPROM *****************
  1766 ;; Defined at:
  1767 ;;		line 176 in file "Usuaris.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  caca            1    5[COMRAM] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1
  1781 ;;      Params:         0       0       0
  1782 ;;      Locals:         1       0       0
  1783 ;;      Temps:          0       0       0
  1784 ;;      Totals:         1       0       0
  1785 ;;Total ram usage:        1 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 2
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text14
  1796  000E72                     __ptext14:
  1797                           	callstack 0
  1798  000E72                     _escriureEEPROM:
  1799                           	callstack 28
  1800                           
  1801                           ;Usuaris.c: 177:     for(unsigned char caca = 0; caca < 160; caca++){
  1802                           
  1803                           ;incstack = 0
  1804  000E72  0E00               	movlw	0
  1805  000E74  6E62               	movwf	escriureEEPROM@caca^0,c
  1806  000E76                     l1610:
  1807                           
  1808                           ;Usuaris.c: 178:         EEADR = 0;
  1809  000E76  0E00               	movlw	0
  1810  000E78  6EA9               	movwf	169,c	;volatile
  1811                           
  1812                           ;Usuaris.c: 179:         EEDATA = 0;
  1813  000E7A  0E00               	movlw	0
  1814  000E7C  6EA8               	movwf	168,c	;volatile
  1815                           
  1816                           ;Usuaris.c: 180:         EECON1bits.EEPGD = 0;
  1817  000E7E  9EA6               	bcf	166,7,c	;volsfr
  1818                           
  1819                           ;Usuaris.c: 181:         EECON1bits.CFGS = 0;
  1820  000E80  9CA6               	bcf	166,6,c	;volsfr
  1821                           
  1822                           ;Usuaris.c: 182:         EECON1bits.WREN = 1;
  1823  000E82  84A6               	bsf	166,2,c	;volsfr
  1824                           
  1825                           ;Usuaris.c: 183:         INTCONbits.GIE = 0;
  1826  000E84  9EF2               	bcf	242,7,c	;volatile
  1827                           
  1828                           ;Usuaris.c: 184:         EECON2 = 85;
  1829  000E86  0E55               	movlw	85
  1830  000E88  6EA7               	movwf	167,c	;volsfr
  1831                           
  1832                           ;Usuaris.c: 185:         EECON2 = 170;
  1833  000E8A  0EAA               	movlw	170
  1834  000E8C  6EA7               	movwf	167,c	;volsfr
  1835                           
  1836                           ;Usuaris.c: 186:          EECON1bits.WR = 1;
  1837  000E8E  82A6               	bsf	166,1,c	;volsfr
  1838  000E90                     l589:
  1839                           
  1840                           ;Usuaris.c: 187:         while(EECON1bits.WR){
  1841  000E90  B2A6               	btfsc	166,1,c	;volsfr
  1842  000E92  D7FE               	goto	l589
  1843                           
  1844                           ;Usuaris.c: 192:     }
  1845  000E94  2A62               	incf	escriureEEPROM@caca^0,f,c
  1846  000E96  0E9F               	movlw	159
  1847  000E98  6462               	cpfsgt	escriureEEPROM@caca^0,c
  1848  000E9A  D7ED               	goto	l1610
  1849                           
  1850                           ;Usuaris.c: 193:    INTCONbits.GIE = 1;
  1851  000E9C  8EF2               	bsf	242,7,c	;volatile
  1852  000E9E  0012               	return		;funcret
  1853  000EA0                     __end_of_escriureEEPROM:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _UmotorUsers *****************
  1857 ;; Defined at:
  1858 ;;		line 117 in file "Usuaris.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1
  1872 ;;      Params:         0       0       0
  1873 ;;      Locals:         0       0       0
  1874 ;;      Temps:          2       0       0
  1875 ;;      Totals:         2       0       0
  1876 ;;Total ram usage:        2 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; Hardware stack levels required when called: 3
  1879 ;; This function calls:
  1880 ;;		_compareStrings
  1881 ;;		_escriureCharEEPROM
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text15
  1888  000798                     __ptext15:
  1889                           	callstack 0
  1890  000798                     _UmotorUsers:
  1891                           	callstack 27
  1892                           
  1893                           ;Usuaris.c: 118: static char state = 0;;Usuaris.c: 120:  switch(state) {
  1894                           
  1895                           ;incstack = 0
  1896  000798  D06E               	goto	l2808
  1897  00079A                     l563:
  1898                           
  1899                           ;Usuaris.c: 122:    if (!do_check_exists && !do_register) {
  1900  00079A  A473               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1901  00079C  B073               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  1902  00079E  D005               	goto	l564
  1903                           
  1904                           ;Usuaris.c: 123:     i = 0;
  1905  0007A0  0E00               	movlw	0
  1906  0007A2  6E25               	movwf	_i^0,c
  1907                           
  1908                           ;Usuaris.c: 124:     j = 0;
  1909  0007A4  0E00               	movlw	0
  1910  0007A6  6E2B               	movwf	_j^0,c
  1911                           
  1912                           ;Usuaris.c: 125:    }
  1913  0007A8  0012               	return	
  1914  0007AA                     l564:
  1915  0007AA  A473               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1916  0007AC  D004               	goto	l566
  1917                           
  1918                           ;Usuaris.c: 127:     return_error = 0;
  1919  0007AE  9273               	bcf	(_return_error/(0+8))^0,_return_error& (0+7),c
  1920  0007B0                     l2750:
  1921                           
  1922                           ;Usuaris.c: 128:     state = 1;
  1923  0007B0  0E01               	movlw	1
  1924  0007B2  6E24               	movwf	UmotorUsers@state^0,c
  1925                           
  1926                           ;Usuaris.c: 129:    }
  1927  0007B4  0012               	return	
  1928  0007B6                     l566:
  1929  0007B6  A073               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  1930  0007B8  0012               	return	
  1931  0007BA                     u2310:
  1932                           
  1933                           ;Usuaris.c: 131:     state = 2;
  1934  0007BA  0E02               	movlw	2
  1935  0007BC  6E24               	movwf	UmotorUsers@state^0,c
  1936                           
  1937                           ;Usuaris.c: 133:   break;
  1938  0007BE  0012               	return	
  1939  0007C0                     l2754:
  1940                           
  1941                           ;Usuaris.c: 135:    if (i < numUsuaris) {
  1942  0007C0  5027               	movf	_numUsuaris^0,w,c
  1943  0007C2  5C25               	subwf	_i^0,w,c
  1944  0007C4  B0D8               	btfsc	status,0,c
  1945  0007C6  D016               	goto	l2764
  1946                           
  1947                           ;Usuaris.c: 136:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  1948  0007C8  0E39               	movlw	low _tmpUsername
  1949  0007CA  6E62               	movwf	compareStrings@a^0,c
  1950  0007CC  5025               	movf	_i^0,w,c
  1951  0007CE  0D17               	mullw	23
  1952  0007D0  0E00               	movlw	low _usuaris
  1953  0007D2  24F3               	addwf	243,w,c
  1954  0007D4  6E63               	movwf	compareStrings@b^0,c
  1955  0007D6  0E01               	movlw	high _usuaris
  1956  0007D8  20F4               	addwfc	prodh,w,c
  1957  0007DA  6E64               	movwf	(compareStrings@b+1)^0,c
  1958  0007DC  EC36  F006         	call	_compareStrings	;wreg free
  1959  0007E0  0900               	iorlw	0
  1960  0007E2  A4D8               	btfss	status,2,c
  1961  0007E4  D005               	goto	u2355
  1962                           
  1963                           ;Usuaris.c: 137:      return_error = i;
  1964  0007E6  A025               	btfss	_i^0,0,c
  1965  0007E8  D002               	goto	u2340
  1966  0007EA  8273               	bsf	(_return_error/(0+8))^0,_return_error& (0+7),c
  1967  0007EC  D001               	goto	u2355
  1968  0007EE                     u2340:
  1969  0007EE  9273               	bcf	(_return_error/(0+8))^0,_return_error& (0+7),c
  1970  0007F0                     u2355:
  1971                           
  1972                           ;Usuaris.c: 140:     i++;
  1973  0007F0  2A25               	incf	_i^0,f,c
  1974  0007F2  D7DE               	goto	l2750
  1975  0007F4                     l2764:
  1976  0007F4  5027               	movf	_numUsuaris^0,w,c
  1977  0007F6  1825               	xorwf	_i^0,w,c
  1978  0007F8  A4D8               	btfss	status,2,c
  1979  0007FA  0012               	return	
  1980                           
  1981                           ;Usuaris.c: 144:     do_check_exists = 0;
  1982  0007FC  9473               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1983  0007FE                     l2768:
  1984                           
  1985                           ;Usuaris.c: 145:     state = 0;
  1986  0007FE  0E00               	movlw	0
  1987  000800  6E24               	movwf	UmotorUsers@state^0,c
  1988  000802  0012               	return	
  1989  000804                     l2770:
  1990                           
  1991                           ;Usuaris.c: 149:    if (i != 8) {
  1992  000804  0E08               	movlw	8
  1993  000806  1825               	xorwf	_i^0,w,c
  1994  000808  B4D8               	btfsc	status,2,c
  1995  00080A  D00C               	goto	l2780
  1996                           
  1997                           ;Usuaris.c: 150:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  1998  00080C  C026  F062         	movff	_indexNextUser,escriureCharEEPROM@pos
  1999  000810  5025               	movf	_i^0,w,c
  2000  000812  0F39               	addlw	low _tmpUsername
  2001  000814  6ED9               	movwf	fsr2l,c
  2002  000816  6ADA               	clrf	fsr2h,c
  2003  000818  50DF               	movf	indf2,w,c
  2004  00081A  EC78  F007         	call	_escriureCharEEPROM
  2005  00081E  2A26               	incf	_indexNextUser^0,f,c
  2006                           
  2007                           ;Usuaris.c: 151:     i++;
  2008  000820  2A25               	incf	_i^0,f,c
  2009  000822  D7CB               	goto	u2310
  2010  000824                     l2780:
  2011  000824  0E08               	movlw	8
  2012  000826  1825               	xorwf	_i^0,w,c
  2013  000828  A4D8               	btfss	status,2,c
  2014  00082A  0012               	return	
  2015                           
  2016                           ;Usuaris.c: 155:     i = 0;
  2017  00082C  0E00               	movlw	0
  2018  00082E  6E25               	movwf	_i^0,c
  2019                           
  2020                           ;Usuaris.c: 156:     state = 3;
  2021  000830  0E03               	movlw	3
  2022  000832  6E24               	movwf	UmotorUsers@state^0,c
  2023  000834  0012               	return	
  2024  000836                     l2784:
  2025                           
  2026                           ;Usuaris.c: 160:    if (i != 8) {
  2027  000836  0E08               	movlw	8
  2028  000838  1825               	xorwf	_i^0,w,c
  2029  00083A  B4D8               	btfsc	status,2,c
  2030  00083C  D00E               	goto	l2794
  2031                           
  2032                           ;Usuaris.c: 161:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  2033  00083E  C026  F062         	movff	_indexNextUser,escriureCharEEPROM@pos
  2034  000842  5025               	movf	_i^0,w,c
  2035  000844  0F19               	addlw	low _tmpPassword
  2036  000846  6ED9               	movwf	fsr2l,c
  2037  000848  6ADA               	clrf	fsr2h,c
  2038  00084A  50DF               	movf	indf2,w,c
  2039  00084C  EC78  F007         	call	_escriureCharEEPROM
  2040  000850  2A26               	incf	_indexNextUser^0,f,c
  2041                           
  2042                           ;Usuaris.c: 162:     i++;
  2043  000852  2A25               	incf	_i^0,f,c
  2044                           
  2045                           ;Usuaris.c: 163:     state = 3;
  2046  000854  0E03               	movlw	3
  2047  000856  6E24               	movwf	UmotorUsers@state^0,c
  2048                           
  2049                           ;Usuaris.c: 164:    }
  2050  000858  0012               	return	
  2051  00085A                     l2794:
  2052  00085A  0E08               	movlw	8
  2053  00085C  1825               	xorwf	_i^0,w,c
  2054  00085E  A4D8               	btfss	status,2,c
  2055  000860  0012               	return	
  2056                           
  2057                           ;Usuaris.c: 166:     do_register = 0;
  2058  000862  9073               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2059                           
  2060                           ;Usuaris.c: 167:     indexNextUser = ++indexNextUser;
  2061  000864  2A26               	incf	_indexNextUser^0,f,c
  2062  000866  C026  F026         	movff	_indexNextUser,_indexNextUser
  2063                           
  2064                           ;Usuaris.c: 168:     if(numUsuaris != 8) numUsuaris++;
  2065  00086A  0E08               	movlw	8
  2066  00086C  1827               	xorwf	_numUsuaris^0,w,c
  2067  00086E  B4D8               	btfsc	status,2,c
  2068  000870  D7C6               	goto	l2768
  2069  000872  2A27               	incf	_numUsuaris^0,f,c
  2070  000874  D7C4               	goto	l2768
  2071  000876                     l2808:
  2072  000876  5024               	movf	UmotorUsers@state^0,w,c
  2073  000878  6E67               	movwf	??_UmotorUsers^0,c
  2074  00087A  6A68               	clrf	(??_UmotorUsers+1)^0,c
  2075                           
  2076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2077                           ; Switch size 1, requested type "simple"
  2078                           ; Number of cases is 1, Range of values is 0 to 0
  2079                           ; switch strategies available:
  2080                           ; Name         Instructions Cycles
  2081                           ; simple_byte            4     3 (average)
  2082                           ;	Chosen strategy is simple_byte
  2083  00087C  5068               	movf	(??_UmotorUsers+1)^0,w,c
  2084  00087E  0A00               	xorlw	0	; case 0
  2085  000880  A4D8               	btfss	status,2,c
  2086  000882  0012               	return	
  2087                           
  2088                           ; Switch size 1, requested type "simple"
  2089                           ; Number of cases is 4, Range of values is 0 to 3
  2090                           ; switch strategies available:
  2091                           ; Name         Instructions Cycles
  2092                           ; simple_byte           13     7 (average)
  2093                           ;	Chosen strategy is simple_byte
  2094  000884  5067               	movf	??_UmotorUsers^0,w,c
  2095  000886  0A00               	xorlw	0	; case 0
  2096  000888  B4D8               	btfsc	status,2,c
  2097  00088A  D787               	goto	l563
  2098  00088C  0A01               	xorlw	1	; case 1
  2099  00088E  B4D8               	btfsc	status,2,c
  2100  000890  D797               	goto	l2754
  2101  000892  0A03               	xorlw	3	; case 2
  2102  000894  B4D8               	btfsc	status,2,c
  2103  000896  D7B6               	goto	l2770
  2104  000898  0A01               	xorlw	1	; case 3
  2105  00089A  A4D8               	btfss	status,2,c
  2106  00089C  0012               	return	
  2107  00089E  D7CB               	goto	l2784
  2108  0008A0                     __end_of_UmotorUsers:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _escriureCharEEPROM *****************
  2112 ;; Defined at:
  2113 ;;		line 51 in file "Usuaris.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  c               1    wreg     unsigned char 
  2116 ;;  pos             1    5[COMRAM] unsigned char 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  c               1    6[COMRAM] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1
  2128 ;;      Params:         1       0       0
  2129 ;;      Locals:         1       0       0
  2130 ;;      Temps:          0       0       0
  2131 ;;      Totals:         2       0       0
  2132 ;;Total ram usage:        2 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 2
  2135 ;; This function calls:
  2136 ;;		Nothing
  2137 ;; This function is called by:
  2138 ;;		_UmotorUsers
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text16
  2143  000EF0                     __ptext16:
  2144                           	callstack 0
  2145  000EF0                     _escriureCharEEPROM:
  2146                           	callstack 27
  2147                           
  2148                           ;incstack = 0
  2149                           ;escriureCharEEPROM@c stored from wreg
  2150  000EF0  6E63               	movwf	escriureCharEEPROM@c^0,c
  2151                           
  2152                           ;Usuaris.c: 52:     EEADR = c;
  2153  000EF2  C063  FFA9         	movff	escriureCharEEPROM@c,4009	;volatile
  2154                           
  2155                           ;Usuaris.c: 53:     EEDATA = pos;
  2156  000EF6  C062  FFA8         	movff	escriureCharEEPROM@pos,4008	;volatile
  2157                           
  2158                           ;Usuaris.c: 54:     EECON1bits.EEPGD = 0;
  2159  000EFA  9EA6               	bcf	166,7,c	;volsfr
  2160                           
  2161                           ;Usuaris.c: 55:     EECON1bits.CFGS = 0;
  2162  000EFC  9CA6               	bcf	166,6,c	;volsfr
  2163                           
  2164                           ;Usuaris.c: 56:     EECON1bits.WREN = 1;
  2165  000EFE  84A6               	bsf	166,2,c	;volsfr
  2166                           
  2167                           ;Usuaris.c: 57:     INTCONbits.GIE = 0;
  2168  000F00  9EF2               	bcf	242,7,c	;volatile
  2169                           
  2170                           ;Usuaris.c: 58:     EECON2 = 85;
  2171  000F02  0E55               	movlw	85
  2172  000F04  6EA7               	movwf	167,c	;volsfr
  2173                           
  2174                           ;Usuaris.c: 59:     EECON2 = 170;
  2175  000F06  0EAA               	movlw	170
  2176  000F08  6EA7               	movwf	167,c	;volsfr
  2177                           
  2178                           ;Usuaris.c: 60:      EECON1bits.WR = 1;
  2179  000F0A  82A6               	bsf	166,1,c	;volsfr
  2180  000F0C                     l525:
  2181  000F0C  B2A6               	btfsc	166,1,c	;volsfr
  2182  000F0E  D7FE               	goto	l525
  2183                           
  2184                           ;Usuaris.c: 62:    INTCONbits.GIE = 1;
  2185  000F10  8EF2               	bsf	242,7,c	;volatile
  2186  000F12  0012               	return		;funcret
  2187  000F14                     __end_of_escriureCharEEPROM:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function _compareStrings *****************
  2191 ;; Defined at:
  2192 ;;		line 107 in file "Usuaris.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  a               1    5[COMRAM] PTR const unsigned char 
  2195 ;;		 -> tmpUsername(9), 
  2196 ;;  b               2    6[COMRAM] PTR const unsigned char 
  2197 ;;		 -> usuaris.username(9), usuaris(184), 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      unsigned char 
  2202 ;; Registers used:
  2203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1
  2209 ;;      Params:         3       0       0
  2210 ;;      Locals:         0       0       0
  2211 ;;      Temps:          2       0       0
  2212 ;;      Totals:         5       0       0
  2213 ;;Total ram usage:        5 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 2
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_UmotorUsers
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text17
  2224  000C6C                     __ptext17:
  2225                           	callstack 0
  2226  000C6C                     _compareStrings:
  2227                           	callstack 27
  2228                           
  2229                           ;Usuaris.c: 108:     while (*a){
  2230                           
  2231                           ;incstack = 0
  2232  000C6C  D00E               	goto	l2370
  2233  000C6E                     l2364:
  2234                           
  2235                           ;Usuaris.c: 109:         if (*a != *b)break;
  2236  000C6E  C063  FFD9         	movff	compareStrings@b,fsr2l
  2237  000C72  C064  FFDA         	movff	compareStrings@b+1,fsr2h
  2238  000C76  5062               	movf	compareStrings@a^0,w,c
  2239  000C78  6EE1               	movwf	fsr1l,c
  2240  000C7A  6AE2               	clrf	fsr1h,c
  2241  000C7C  50DE               	movf	postinc2,w,c
  2242  000C7E  18E6               	xorwf	postinc1,w,c
  2243  000C80  A4D8               	btfss	status,2,c
  2244  000C82  D009               	goto	u1700
  2245                           
  2246                           ;Usuaris.c: 110:         a++;
  2247  000C84  2A62               	incf	compareStrings@a^0,f,c
  2248                           
  2249                           ;Usuaris.c: 111:         b++;
  2250  000C86  4A63               	infsnz	compareStrings@b^0,f,c
  2251  000C88  2A64               	incf	(compareStrings@b+1)^0,f,c
  2252  000C8A                     l2370:
  2253                           
  2254                           ;Usuaris.c: 108:     while (*a){
  2255  000C8A  5062               	movf	compareStrings@a^0,w,c
  2256  000C8C  6ED9               	movwf	fsr2l,c
  2257  000C8E  6ADA               	clrf	fsr2h,c
  2258  000C90  50DF               	movf	indf2,w,c
  2259  000C92  A4D8               	btfss	status,2,c
  2260  000C94  D7EC               	goto	l2364
  2261  000C96                     u1700:
  2262                           
  2263                           ;Usuaris.c: 113:     return *(const unsigned char*)a - *(const unsigned char*)b;
  2264  000C96  C063  FFD9         	movff	compareStrings@b,fsr2l
  2265  000C9A  C064  FFDA         	movff	compareStrings@b+1,fsr2h
  2266  000C9E  50DF               	movf	indf2,w,c
  2267  000CA0  6E65               	movwf	??_compareStrings^0,c
  2268  000CA2  5062               	movf	compareStrings@a^0,w,c
  2269  000CA4  6ED9               	movwf	fsr2l,c
  2270  000CA6  6ADA               	clrf	fsr2h,c
  2271  000CA8  50DF               	movf	indf2,w,c
  2272  000CAA  6E66               	movwf	(??_compareStrings+1)^0,c
  2273  000CAC  5065               	movf	??_compareStrings^0,w,c
  2274  000CAE  5C66               	subwf	(??_compareStrings+1)^0,w,c
  2275  000CB0  0012               	return		;funcret
  2276  000CB2                     __end_of_compareStrings:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _Uinit *****************
  2280 ;; Defined at:
  2281 ;;		line 64 in file "Usuaris.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  j               1    9[COMRAM] unsigned char 
  2286 ;;  j               1    8[COMRAM] unsigned char 
  2287 ;;  i               1    7[COMRAM] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1
  2297 ;;      Params:         0       0       0
  2298 ;;      Locals:         3       0       0
  2299 ;;      Temps:          2       0       0
  2300 ;;      Totals:         5       0       0
  2301 ;;Total ram usage:        5 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 2
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_main
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text18
  2312  00097A                     __ptext18:
  2313                           	callstack 0
  2314  00097A                     _Uinit:
  2315                           	callstack 28
  2316                           
  2317                           ;Usuaris.c: 69:     EEADR = 0;
  2318                           
  2319                           ;incstack = 0
  2320  00097A  0E00               	movlw	0
  2321  00097C  6EA9               	movwf	169,c	;volatile
  2322                           
  2323                           ;Usuaris.c: 70:     EECON1bits.EEPGD = 0;
  2324  00097E  9EA6               	bcf	166,7,c	;volsfr
  2325                           
  2326                           ;Usuaris.c: 71:     EECON1bits.CFGS = 0;
  2327  000980  9CA6               	bcf	166,6,c	;volsfr
  2328                           
  2329                           ;Usuaris.c: 72:     EECON1bits.RD = 1;
  2330  000982  80A6               	bsf	166,0,c	;volsfr
  2331  000984                     l531:
  2332  000984  B0A6               	btfsc	166,0,c	;volsfr
  2333  000986  D7FE               	goto	l531
  2334                           
  2335                           ;Usuaris.c: 74:     numUsuaris = EEDATA;
  2336  000988  CFA8 F027          	movff	4008,_numUsuaris	;volatile
  2337                           
  2338                           ;Usuaris.c: 78:     EEADR++;
  2339  00098C  2AA9               	incf	169,f,c	;volatile
  2340                           
  2341                           ;Usuaris.c: 79:     EECON1bits.EEPGD = 0;
  2342  00098E  9EA6               	bcf	166,7,c	;volsfr
  2343                           
  2344                           ;Usuaris.c: 80:     EECON1bits.CFGS = 0;
  2345  000990  9CA6               	bcf	166,6,c	;volsfr
  2346  000992                     l534:
  2347  000992  B0A6               	btfsc	166,0,c	;volsfr
  2348  000994  D7FE               	goto	l534
  2349                           
  2350                           ;Usuaris.c: 83:     indexNextUser = EEDATA;
  2351  000996  CFA8 F026          	movff	4008,_indexNextUser	;volatile
  2352                           
  2353                           ;Usuaris.c: 84:     EEADR++;
  2354  00099A  2AA9               	incf	169,f,c	;volatile
  2355                           
  2356                           ;Usuaris.c: 86:     for(char i = 0; i< numUsuaris; i++){
  2357  00099C  0E00               	movlw	0
  2358  00099E  6E64               	movwf	Uinit@i^0,c
  2359  0009A0  D041               	goto	l1830
  2360  0009A2                     l1800:
  2361                           
  2362                           ;Usuaris.c: 87:         for(char j = 0; j<9; j++){
  2363  0009A2  0E00               	movlw	0
  2364  0009A4  6E65               	movwf	Uinit@j^0,c
  2365  0009A6                     l539:
  2366                           
  2367                           ;Usuaris.c: 88:             EECON1bits.EEPGD = 0;
  2368  0009A6  9EA6               	bcf	166,7,c	;volsfr
  2369                           
  2370                           ;Usuaris.c: 89:             EECON1bits.CFGS = 0;
  2371  0009A8  9CA6               	bcf	166,6,c	;volsfr
  2372                           
  2373                           ;Usuaris.c: 90:             EECON1bits.RD = 1;
  2374  0009AA  80A6               	bsf	166,0,c	;volsfr
  2375  0009AC                     l541:
  2376  0009AC  B0A6               	btfsc	166,0,c	;volsfr
  2377  0009AE  D7FE               	goto	l541
  2378                           
  2379                           ;Usuaris.c: 92:             usuaris[i].username[j] = EEDATA;
  2380  0009B0  5064               	movf	Uinit@i^0,w,c
  2381  0009B2  0D17               	mullw	23
  2382  0009B4  0E00               	movlw	low _usuaris
  2383  0009B6  6E62               	movwf	??_Uinit^0,c
  2384  0009B8  0E01               	movlw	high _usuaris
  2385  0009BA  6E63               	movwf	(??_Uinit+1)^0,c
  2386  0009BC  50F3               	movf	243,w,c
  2387  0009BE  2662               	addwf	??_Uinit^0,f,c
  2388  0009C0  50F4               	movf	244,w,c
  2389  0009C2  2263               	addwfc	(??_Uinit+1)^0,f,c
  2390  0009C4  5065               	movf	Uinit@j^0,w,c
  2391  0009C6  2462               	addwf	??_Uinit^0,w,c
  2392  0009C8  6ED9               	movwf	fsr2l,c
  2393  0009CA  0E00               	movlw	0
  2394  0009CC  2063               	addwfc	(??_Uinit+1)^0,w,c
  2395  0009CE  6EDA               	movwf	fsr2h,c
  2396  0009D0  CFA8 FFDF          	movff	4008,indf2	;volatile
  2397                           
  2398                           ;Usuaris.c: 93:             EEADR++;
  2399  0009D4  2AA9               	incf	169,f,c	;volatile
  2400                           
  2401                           ;Usuaris.c: 94:         }
  2402  0009D6  2A65               	incf	Uinit@j^0,f,c
  2403  0009D8  0E08               	movlw	8
  2404  0009DA  6465               	cpfsgt	Uinit@j^0,c
  2405  0009DC  D7E4               	goto	l539
  2406                           
  2407                           ;Usuaris.c: 95:         for(char j = 0; j<9; j++){
  2408  0009DE  0E00               	movlw	0
  2409  0009E0  6E66               	movwf	Uinit@j_1016^0,c
  2410  0009E2                     l544:
  2411                           
  2412                           ;Usuaris.c: 96:             EECON1bits.EEPGD = 0;
  2413  0009E2  9EA6               	bcf	166,7,c	;volsfr
  2414                           
  2415                           ;Usuaris.c: 97:             EECON1bits.CFGS = 0;
  2416  0009E4  9CA6               	bcf	166,6,c	;volsfr
  2417                           
  2418                           ;Usuaris.c: 98:             EECON1bits.RD = 1;
  2419  0009E6  80A6               	bsf	166,0,c	;volsfr
  2420  0009E8                     l546:
  2421  0009E8  B0A6               	btfsc	166,0,c	;volsfr
  2422  0009EA  D7FE               	goto	l546
  2423                           
  2424                           ;Usuaris.c: 100:             usuaris[i].password[j] = EEDATA;
  2425  0009EC  5064               	movf	Uinit@i^0,w,c
  2426  0009EE  0D17               	mullw	23
  2427  0009F0  0E00               	movlw	low _usuaris
  2428  0009F2  6E62               	movwf	??_Uinit^0,c
  2429  0009F4  0E01               	movlw	high _usuaris
  2430  0009F6  6E63               	movwf	(??_Uinit+1)^0,c
  2431  0009F8  0E09               	movlw	9
  2432  0009FA  2662               	addwf	??_Uinit^0,f,c
  2433  0009FC  0E00               	movlw	0
  2434  0009FE  2263               	addwfc	(??_Uinit+1)^0,f,c
  2435  000A00  50F3               	movf	243,w,c
  2436  000A02  2662               	addwf	??_Uinit^0,f,c
  2437  000A04  50F4               	movf	244,w,c
  2438  000A06  2263               	addwfc	(??_Uinit+1)^0,f,c
  2439  000A08  5066               	movf	Uinit@j_1016^0,w,c
  2440  000A0A  2462               	addwf	??_Uinit^0,w,c
  2441  000A0C  6ED9               	movwf	fsr2l,c
  2442  000A0E  0E00               	movlw	0
  2443  000A10  2063               	addwfc	(??_Uinit+1)^0,w,c
  2444  000A12  6EDA               	movwf	fsr2h,c
  2445  000A14  CFA8 FFDF          	movff	4008,indf2	;volatile
  2446                           
  2447                           ;Usuaris.c: 101:             EEADR++;
  2448  000A18  2AA9               	incf	169,f,c	;volatile
  2449                           
  2450                           ;Usuaris.c: 102:         }
  2451  000A1A  2A66               	incf	Uinit@j_1016^0,f,c
  2452  000A1C  0E08               	movlw	8
  2453  000A1E  6466               	cpfsgt	Uinit@j_1016^0,c
  2454  000A20  D7E0               	goto	l544
  2455                           
  2456                           ;Usuaris.c: 103:     }
  2457  000A22  2A64               	incf	Uinit@i^0,f,c
  2458  000A24                     l1830:
  2459  000A24  5027               	movf	_numUsuaris^0,w,c
  2460  000A26  5C64               	subwf	Uinit@i^0,w,c
  2461  000A28  B0D8               	btfsc	status,0,c
  2462  000A2A  0012               	return	
  2463  000A2C  D7BA               	goto	l1800
  2464  000A2E                     __end_of_Uinit:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function _TiInitTimer *****************
  2468 ;; Defined at:
  2469 ;;		line 18 in file "TiTTimer.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1
  2483 ;;      Params:         0       0       0
  2484 ;;      Locals:         0       0       0
  2485 ;;      Temps:          0       0       0
  2486 ;;      Totals:         0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 2
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text19
  2498  000DA6                     __ptext19:
  2499                           	callstack 0
  2500  000DA6                     _TiInitTimer:
  2501                           	callstack 28
  2502                           
  2503                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  2504                           
  2505                           ;incstack = 0
  2506  000DA6  9ED0               	bcf	208,7,c	;volatile
  2507                           
  2508                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  2509  000DA8  8EF2               	bsf	242,7,c	;volatile
  2510                           
  2511                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  2512  000DAA  8CF2               	bsf	242,6,c	;volatile
  2513                           
  2514                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  2515  000DAC  8AF2               	bsf	242,5,c	;volatile
  2516                           
  2517                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  2518  000DAE  94F2               	bcf	242,2,c	;volatile
  2519                           
  2520                           ;TiTTimer.c: 25:     T0CON = 136;
  2521  000DB0  0E88               	movlw	136
  2522  000DB2  6ED5               	movwf	213,c	;volatile
  2523                           
  2524                           ;TiTTimer.c: 27:     TMR0H = 223;
  2525  000DB4  0EDF               	movlw	223
  2526  000DB6  6ED7               	movwf	215,c	;volatile
  2527                           
  2528                           ;TiTTimer.c: 28:     TMR0L = 148;
  2529  000DB8  0E94               	movlw	148
  2530  000DBA  6ED6               	movwf	214,c	;volatile
  2531                           
  2532                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  2533  000DBC  8ED5               	bsf	213,7,c	;volatile
  2534                           
  2535                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  2536  000DBE  0E00               	movlw	0
  2537  000DC0  6E2C               	movwf	_counter^0,c
  2538  000DC2                     l1632:
  2539  000DC2  0E07               	movlw	7
  2540  000DC4  642C               	cpfsgt	_counter^0,c
  2541  000DC6  D001               	goto	l1636
  2542  000DC8  0012               	return	
  2543  000DCA                     l1636:
  2544                           
  2545                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  2546  000DCA  502C               	movf	_counter^0,w,c
  2547  000DCC  0D03               	mullw	3
  2548  000DCE  50F3               	movf	243,w,c
  2549  000DD0  0F03               	addlw	low (_s_Timers+2)
  2550  000DD2  6ED9               	movwf	fsr2l,c
  2551  000DD4  6ADA               	clrf	fsr2h,c
  2552  000DD6  0E00               	movlw	0
  2553  000DD8  6EDF               	movwf	indf2,c
  2554                           
  2555                           ;TiTTimer.c: 33:     }
  2556  000DDA  2A2C               	incf	_counter^0,f,c
  2557  000DDC  D7F2               	goto	l1632
  2558  000DDE                     __end_of_TiInitTimer:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _TeTeclat *****************
  2562 ;; Defined at:
  2563 ;;		line 22 in file "TeTeclat.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1
  2577 ;;      Params:         0       0       0
  2578 ;;      Locals:         0       0       0
  2579 ;;      Temps:          3       0       0
  2580 ;;      Totals:         3       0       0
  2581 ;;Total ram usage:        3 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 3
  2584 ;; This function calls:
  2585 ;;		_MsetNovaTecla
  2586 ;;		_SsetNovaTecla
  2587 ;;		_TiGetTics
  2588 ;;		_TiResetTics
  2589 ;; This function is called by:
  2590 ;;		_main
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text20
  2595  000634                     __ptext20:
  2596                           	callstack 0
  2597  000634                     _TeTeclat:
  2598                           	callstack 27
  2599                           
  2600                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  2601                           
  2602                           ;incstack = 0
  2603  000634  A083               	btfss	131,0,c	;volatile
  2604  000636  D003               	goto	u2420
  2605  000638  6A69               	clrf	??_TeTeclat^0,c
  2606  00063A  2A69               	incf	??_TeTeclat^0,f,c
  2607  00063C  D001               	goto	u2428
  2608  00063E                     u2420:
  2609  00063E  6A69               	clrf	??_TeTeclat^0,c
  2610  000640                     u2428:
  2611  000640  A283               	btfss	131,1,c	;volatile
  2612  000642  D002               	goto	u2430
  2613  000644  0E01               	movlw	1
  2614  000646  D001               	goto	u2436
  2615  000648                     u2430:
  2616  000648  0E00               	movlw	0
  2617  00064A                     u2436:
  2618  00064A  0D02               	mullw	2
  2619  00064C  CFF3 F06A          	movff	prodl,??_TeTeclat+1
  2620  000650  A483               	btfss	131,2,c	;volatile
  2621  000652  D002               	goto	u2440
  2622  000654  0E01               	movlw	1
  2623  000656  D001               	goto	u2446
  2624  000658                     u2440:
  2625  000658  0E00               	movlw	0
  2626  00065A                     u2446:
  2627  00065A  0D03               	mullw	3
  2628  00065C  CFF3 F06B          	movff	prodl,??_TeTeclat+2
  2629  000660  A683               	btfss	131,3,c	;volatile
  2630  000662  D002               	goto	u2450
  2631  000664  0E01               	movlw	1
  2632  000666  D001               	goto	u2456
  2633  000668                     u2450:
  2634  000668  0E00               	movlw	0
  2635  00066A                     u2456:
  2636  00066A  0D04               	mullw	4
  2637  00066C  50F3               	movf	243,w,c
  2638  00066E  246B               	addwf	(??_TeTeclat+2)^0,w,c
  2639  000670  246A               	addwf	(??_TeTeclat+1)^0,w,c
  2640  000672  2469               	addwf	??_TeTeclat^0,w,c
  2641  000674  6E2D               	movwf	TeTeclat@files^0,c
  2642                           
  2643                           ;TeTeclat.c: 27:  switch(state) {
  2644  000676  D06F               	goto	l2890
  2645  000678                     l2816:
  2646                           
  2647                           ;TeTeclat.c: 29:    if (files==0) {
  2648  000678  502D               	movf	TeTeclat@files^0,w,c
  2649  00067A  A4D8               	btfss	status,2,c
  2650  00067C  D007               	goto	l2824
  2651                           
  2652                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  2653  00067E  888C               	bsf	140,4,c	;volatile
  2654                           
  2655                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  2656  000680  9A8C               	bcf	140,5,c	;volatile
  2657                           
  2658                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  2659  000682  9C8C               	bcf	140,6,c	;volatile
  2660                           
  2661                           ;TeTeclat.c: 33:     cols=0;
  2662  000684  0E00               	movlw	0
  2663  000686  6E2E               	movwf	TeTeclat@cols^0,c
  2664  000688                     l2822:
  2665                           
  2666                           ;TeTeclat.c: 34:     state++;
  2667  000688  2A2F               	incf	TeTeclat@state^0,f,c
  2668                           
  2669                           ;TeTeclat.c: 35:    }
  2670  00068A  0012               	return	
  2671  00068C                     l2824:
  2672  00068C  502D               	movf	TeTeclat@files^0,w,c
  2673  00068E  B4D8               	btfsc	status,2,c
  2674  000690  0012               	return	
  2675                           
  2676                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  2677  000692  5030               	movf	_tiTeclat^0,w,c
  2678  000694  ECBA  F007         	call	_TiResetTics
  2679  000698                     l2828:
  2680                           
  2681                           ;TeTeclat.c: 38:     state = 3;
  2682  000698  0E03               	movlw	3
  2683  00069A  6E2F               	movwf	TeTeclat@state^0,c
  2684  00069C  0012               	return	
  2685  00069E                     l2830:
  2686                           
  2687                           ;TeTeclat.c: 42:    if (files==0) {
  2688  00069E  502D               	movf	TeTeclat@files^0,w,c
  2689  0006A0  A4D8               	btfss	status,2,c
  2690  0006A2  D005               	goto	l2838
  2691                           
  2692                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  2693  0006A4  988C               	bcf	140,4,c	;volatile
  2694                           
  2695                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  2696  0006A6  8A8C               	bsf	140,5,c	;volatile
  2697                           
  2698                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  2699  0006A8  9C8C               	bcf	140,6,c	;volatile
  2700                           
  2701                           ;TeTeclat.c: 46:     cols=1;
  2702  0006AA  0E01               	movlw	1
  2703  0006AC  D7EC               	goto	L1
  2704  0006AE                     l2838:
  2705  0006AE  502D               	movf	TeTeclat@files^0,w,c
  2706  0006B0  B4D8               	btfsc	status,2,c
  2707  0006B2  0012               	return	
  2708                           
  2709                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  2710  0006B4  5030               	movf	_tiTeclat^0,w,c
  2711  0006B6  ECBA  F007         	call	_TiResetTics
  2712  0006BA  D7EE               	goto	l2828
  2713  0006BC                     l2844:
  2714                           
  2715                           ;TeTeclat.c: 55:    if (files==0) {
  2716  0006BC  502D               	movf	TeTeclat@files^0,w,c
  2717  0006BE  A4D8               	btfss	status,2,c
  2718  0006C0  D008               	goto	l2850
  2719                           
  2720                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  2721  0006C2  988C               	bcf	140,4,c	;volatile
  2722                           
  2723                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  2724  0006C4  9A8C               	bcf	140,5,c	;volatile
  2725                           
  2726                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  2727  0006C6  8C8C               	bsf	140,6,c	;volatile
  2728                           
  2729                           ;TeTeclat.c: 59:     cols=2;
  2730  0006C8  0E02               	movlw	2
  2731  0006CA  6E2E               	movwf	TeTeclat@cols^0,c
  2732                           
  2733                           ;TeTeclat.c: 60:     state = 0;
  2734  0006CC  0E00               	movlw	0
  2735  0006CE  6E2F               	movwf	TeTeclat@state^0,c
  2736                           
  2737                           ;TeTeclat.c: 61:    }
  2738  0006D0  0012               	return	
  2739  0006D2                     l2850:
  2740  0006D2  502D               	movf	TeTeclat@files^0,w,c
  2741  0006D4  B4D8               	btfsc	status,2,c
  2742  0006D6  0012               	return	
  2743                           
  2744                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  2745  0006D8  5030               	movf	_tiTeclat^0,w,c
  2746  0006DA  ECBA  F007         	call	_TiResetTics
  2747  0006DE  D7D4               	goto	l2822
  2748  0006E0                     l2856:
  2749                           
  2750                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  2751  0006E0  5030               	movf	_tiTeclat^0,w,c
  2752  0006E2  EC50  F007         	call	_TiGetTics
  2753  0006E6  BE63               	btfsc	(?_TiGetTics+1)^0,7,c
  2754  0006E8  0012               	return	
  2755  0006EA  D7CE               	goto	l2822
  2756  0006EC                     l2860:
  2757                           
  2758                           ;TeTeclat.c: 73:    if (files==0) {
  2759  0006EC  502D               	movf	TeTeclat@files^0,w,c
  2760  0006EE  A4D8               	btfss	status,2,c
  2761  0006F0  D003               	goto	l2864
  2762                           
  2763                           ;TeTeclat.c: 74:     state = 1;
  2764  0006F2  0E01               	movlw	1
  2765  0006F4  6E2F               	movwf	TeTeclat@state^0,c
  2766                           
  2767                           ;TeTeclat.c: 75:    }
  2768  0006F6  0012               	return	
  2769  0006F8                     l2864:
  2770  0006F8  502D               	movf	TeTeclat@files^0,w,c
  2771  0006FA  B4D8               	btfsc	status,2,c
  2772  0006FC  0012               	return	
  2773                           
  2774                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  2775  0006FE  502D               	movf	TeTeclat@files^0,w,c
  2776  000700  0D03               	mullw	3
  2777  000702  50F3               	movf	243,w,c
  2778  000704  0F4E               	addlw	low (_teclaPremuda+253)
  2779  000706  242E               	addwf	TeTeclat@cols^0,w,c
  2780  000708  6ED9               	movwf	fsr2l,c
  2781  00070A  6ADA               	clrf	fsr2h,c
  2782  00070C  50DF               	movf	indf2,w,c
  2783  00070E  ECF6  F007         	call	_MsetNovaTecla
  2784                           
  2785                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  2786  000712  502D               	movf	TeTeclat@files^0,w,c
  2787  000714  0D03               	mullw	3
  2788  000716  50F3               	movf	243,w,c
  2789  000718  0F4E               	addlw	low (_teclaPremuda+253)
  2790  00071A  242E               	addwf	TeTeclat@cols^0,w,c
  2791  00071C  6ED9               	movwf	fsr2l,c
  2792  00071E  6ADA               	clrf	fsr2h,c
  2793  000720  50DF               	movf	indf2,w,c
  2794  000722  ECF2  F007         	call	_SsetNovaTecla
  2795  000726  D7B0               	goto	l2822
  2796  000728                     l2870:
  2797                           
  2798                           ;TeTeclat.c: 84:    if (files==0) {
  2799  000728  502D               	movf	TeTeclat@files^0,w,c
  2800  00072A  A4D8               	btfss	status,2,c
  2801  00072C  0012               	return	
  2802                           
  2803                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  2804  00072E  5030               	movf	_tiTeclat^0,w,c
  2805  000730  ECBA  F007         	call	_TiResetTics
  2806  000734  D7A9               	goto	l2822
  2807  000736                     l2876:
  2808                           
  2809                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  2810  000736  5030               	movf	_tiTeclat^0,w,c
  2811  000738  EC50  F007         	call	_TiGetTics
  2812  00073C  D7D4               	goto	L2
  2813  00073E                     l2880:
  2814                           
  2815                           ;TeTeclat.c: 95:    if (files!=0) {
  2816  00073E  502D               	movf	TeTeclat@files^0,w,c
  2817  000740  B4D8               	btfsc	status,2,c
  2818  000742  D003               	goto	l2884
  2819                           
  2820                           ;TeTeclat.c: 96:     state = 5;
  2821  000744  0E05               	movlw	5
  2822  000746  6E2F               	movwf	TeTeclat@state^0,c
  2823                           
  2824                           ;TeTeclat.c: 97:    }
  2825  000748  0012               	return	
  2826  00074A                     l2884:
  2827  00074A  502D               	movf	TeTeclat@files^0,w,c
  2828  00074C  A4D8               	btfss	status,2,c
  2829  00074E  0012               	return	
  2830                           
  2831                           ;TeTeclat.c: 99:     state = 0;
  2832  000750  0E00               	movlw	0
  2833  000752  6E2F               	movwf	TeTeclat@state^0,c
  2834  000754  0012               	return	
  2835  000756                     l2890:
  2836  000756  502F               	movf	TeTeclat@state^0,w,c
  2837  000758  6E69               	movwf	??_TeTeclat^0,c
  2838  00075A  6A6A               	clrf	(??_TeTeclat+1)^0,c
  2839                           
  2840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2841                           ; Switch size 1, requested type "simple"
  2842                           ; Number of cases is 1, Range of values is 0 to 0
  2843                           ; switch strategies available:
  2844                           ; Name         Instructions Cycles
  2845                           ; simple_byte            4     3 (average)
  2846                           ;	Chosen strategy is simple_byte
  2847  00075C  506A               	movf	(??_TeTeclat+1)^0,w,c
  2848  00075E  0A00               	xorlw	0	; case 0
  2849  000760  A4D8               	btfss	status,2,c
  2850  000762  0012               	return	
  2851                           
  2852                           ; Switch size 1, requested type "simple"
  2853                           ; Number of cases is 8, Range of values is 0 to 7
  2854                           ; switch strategies available:
  2855                           ; Name         Instructions Cycles
  2856                           ; simple_byte           25    13 (average)
  2857                           ;	Chosen strategy is simple_byte
  2858  000764  5069               	movf	??_TeTeclat^0,w,c
  2859  000766  0A00               	xorlw	0	; case 0
  2860  000768  B4D8               	btfsc	status,2,c
  2861  00076A  D786               	goto	l2816
  2862  00076C  0A01               	xorlw	1	; case 1
  2863  00076E  B4D8               	btfsc	status,2,c
  2864  000770  D796               	goto	l2830
  2865  000772  0A03               	xorlw	3	; case 2
  2866  000774  B4D8               	btfsc	status,2,c
  2867  000776  D7A2               	goto	l2844
  2868  000778  0A01               	xorlw	1	; case 3
  2869  00077A  B4D8               	btfsc	status,2,c
  2870  00077C  D7B1               	goto	l2856
  2871  00077E  0A07               	xorlw	7	; case 4
  2872  000780  B4D8               	btfsc	status,2,c
  2873  000782  D7B4               	goto	l2860
  2874  000784  0A01               	xorlw	1	; case 5
  2875  000786  B4D8               	btfsc	status,2,c
  2876  000788  D7CF               	goto	l2870
  2877  00078A  0A03               	xorlw	3	; case 6
  2878  00078C  B4D8               	btfsc	status,2,c
  2879  00078E  D7D3               	goto	l2876
  2880  000790  0A01               	xorlw	1	; case 7
  2881  000792  A4D8               	btfss	status,2,c
  2882  000794  0012               	return	
  2883  000796  D7D3               	goto	l2880
  2884  000798                     __end_of_TeTeclat:
  2885                           	callstack 0
  2886                           
  2887 ;; *************** function _SsetNovaTecla *****************
  2888 ;; Defined at:
  2889 ;;		line 110 in file "Ssms.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  tecla           1    wreg     unsigned char 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  tecla           1    5[COMRAM] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		wreg
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1
  2903 ;;      Params:         0       0       0
  2904 ;;      Locals:         1       0       0
  2905 ;;      Temps:          0       0       0
  2906 ;;      Totals:         1       0       0
  2907 ;;Total ram usage:        1 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 2
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_TeTeclat
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text21
  2918  000FE4                     __ptext21:
  2919                           	callstack 0
  2920  000FE4                     _SsetNovaTecla:
  2921                           	callstack 27
  2922                           
  2923                           ;incstack = 0
  2924                           ;SsetNovaTecla@tecla stored from wreg
  2925  000FE4  6E62               	movwf	SsetNovaTecla@tecla^0,c
  2926                           
  2927                           ;Ssms.c: 111:     novaTecla = tecla;
  2928  000FE6  C062  F04F         	movff	SsetNovaTecla@tecla,_novaTecla
  2929  000FEA  0012               	return		;funcret
  2930  000FEC                     __end_of_SsetNovaTecla:
  2931                           	callstack 0
  2932                           
  2933 ;; *************** function _MsetNovaTecla *****************
  2934 ;; Defined at:
  2935 ;;		line 17 in file "Menu.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  tecla           1    wreg     unsigned char 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  tecla           1    5[COMRAM] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1
  2949 ;;      Params:         0       0       0
  2950 ;;      Locals:         1       0       0
  2951 ;;      Temps:          0       0       0
  2952 ;;      Totals:         1       0       0
  2953 ;;Total ram usage:        1 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 2
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_TeTeclat
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text22
  2964  000FEC                     __ptext22:
  2965                           	callstack 0
  2966  000FEC                     _MsetNovaTecla:
  2967                           	callstack 27
  2968                           
  2969                           ;incstack = 0
  2970                           ;MsetNovaTecla@tecla stored from wreg
  2971  000FEC  6E62               	movwf	MsetNovaTecla@tecla^0,c
  2972                           
  2973                           ;Menu.c: 18:     NovaTecla = tecla;
  2974  000FEE  C062  F04C         	movff	MsetNovaTecla@tecla,_NovaTecla
  2975  000FF2  0012               	return		;funcret
  2976  000FF4                     __end_of_MsetNovaTecla:
  2977                           	callstack 0
  2978                           
  2979 ;; *************** function _TeInit *****************
  2980 ;; Defined at:
  2981 ;;		line 18 in file "TeTeclat.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1
  2995 ;;      Params:         0       0       0
  2996 ;;      Locals:         0       0       0
  2997 ;;      Temps:          0       0       0
  2998 ;;      Totals:         0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 3
  3002 ;; This function calls:
  3003 ;;		_TiGetTimer
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text23
  3010  000FF4                     __ptext23:
  3011                           	callstack 0
  3012  000FF4                     _TeInit:
  3013                           	callstack 27
  3014                           
  3015                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  3016                           
  3017                           ;incstack = 0
  3018  000FF4  ECB6  F006         	call	_TiGetTimer	;wreg free
  3019  000FF8  6E30               	movwf	_tiTeclat^0,c
  3020  000FFA  0012               	return		;funcret
  3021  000FFC                     __end_of_TeInit:
  3022                           	callstack 0
  3023                           
  3024 ;; *************** function _Sinit *****************
  3025 ;; Defined at:
  3026 ;;		line 16 in file "Ssms.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1
  3040 ;;      Params:         0       0       0
  3041 ;;      Locals:         0       0       0
  3042 ;;      Temps:          0       0       0
  3043 ;;      Totals:         0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 3
  3047 ;; This function calls:
  3048 ;;		_TiGetTimer
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text24
  3055  000FFC                     __ptext24:
  3056                           	callstack 0
  3057  000FFC                     _Sinit:
  3058                           	callstack 27
  3059                           
  3060                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  3061                           
  3062                           ;incstack = 0
  3063  000FFC  ECB6  F006         	call	_TiGetTimer	;wreg free
  3064  001000  6E4E               	movwf	_timerSMS^0,c
  3065  001002  0012               	return		;funcret
  3066  001004                     __end_of_Sinit:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _SMotor *****************
  3070 ;; Defined at:
  3071 ;;		line 21 in file "Ssms.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1
  3085 ;;      Params:         0       0       0
  3086 ;;      Locals:         0       0       0
  3087 ;;      Temps:          2       0       0
  3088 ;;      Totals:         2       0       0
  3089 ;;Total ram usage:        2 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 3
  3092 ;; This function calls:
  3093 ;;		_MNovaLletra
  3094 ;;		_TiGetTics
  3095 ;;		_TiResetTics
  3096 ;; This function is called by:
  3097 ;;		_main
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text25
  3102  000488                     __ptext25:
  3103                           	callstack 0
  3104  000488                     _SMotor:
  3105                           	callstack 27
  3106                           
  3107                           ;Ssms.c: 22:  static char state = 0;;Ssms.c: 23:  switch(state) {
  3108                           
  3109                           ;incstack = 0
  3110  000488  D0B7               	goto	l2568
  3111  00048A                     l2440:
  3112                           
  3113                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  3114  00048A  284F               	incf	_novaTecla^0,w,c
  3115  00048C  A4D8               	btfss	status,2,c
  3116  00048E  A873               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3117  000490  D006               	goto	l2448
  3118                           
  3119                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  3120  000492  504E               	movf	_timerSMS^0,w,c
  3121  000494  ECBA  F007         	call	_TiResetTics
  3122                           
  3123                           ;Ssms.c: 27:     state = 3;
  3124  000498  0E03               	movlw	3
  3125  00049A  6E31               	movwf	SMotor@state^0,c
  3126                           
  3127                           ;Ssms.c: 28:    }
  3128  00049C  0012               	return	
  3129  00049E                     l2448:
  3130  00049E  284F               	incf	_novaTecla^0,w,c
  3131  0004A0  A4D8               	btfss	status,2,c
  3132  0004A2  0012               	return	
  3133  0004A4  504E               	movf	_timerSMS^0,w,c
  3134  0004A6  EC50  F007         	call	_TiGetTics
  3135  0004AA  BE63               	btfsc	(?_TiGetTics+1)^0,7,c
  3136  0004AC  0012               	return	
  3137  0004AE  0E5A               	movlw	90
  3138  0004B0  5C62               	subwf	?_TiGetTics^0,w,c
  3139  0004B2  0E02               	movlw	2
  3140  0004B4  5863               	subwfb	(?_TiGetTics+1)^0,w,c
  3141  0004B6  A0D8               	btfss	status,0,c
  3142  0004B8  0012               	return	
  3143  0004BA  2850               	incf	_lletraASCII^0,w,c
  3144  0004BC  B4D8               	btfsc	status,2,c
  3145  0004BE  0012               	return	
  3146  0004C0  A873               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3147  0004C2  0012               	return	
  3148                           
  3149                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  3150  0004C4  5050               	movf	_lletraASCII^0,w,c
  3151  0004C6  EC02  F008         	call	_MNovaLletra
  3152                           
  3153                           ;Ssms.c: 31:     lletraASCII = -1;
  3154  0004CA  6850               	setf	_lletraASCII^0,c
  3155                           
  3156                           ;Ssms.c: 32:     ultimaTecla = -1;
  3157  0004CC  684D               	setf	_ultimaTecla^0,c
  3158  0004CE  0012               	return	
  3159  0004D0                     l2462:
  3160                           
  3161                           ;Ssms.c: 36:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  3162  0004D0  504D               	movf	_ultimaTecla^0,w,c
  3163  0004D2  184F               	xorwf	_novaTecla^0,w,c
  3164  0004D4  A4D8               	btfss	status,2,c
  3165  0004D6  D010               	goto	l2470
  3166  0004D8  504E               	movf	_timerSMS^0,w,c
  3167  0004DA  EC50  F007         	call	_TiGetTics
  3168  0004DE  BE63               	btfsc	(?_TiGetTics+1)^0,7,c
  3169  0004E0  D006               	goto	u1810
  3170  0004E2  0E5A               	movlw	90
  3171  0004E4  5C62               	subwf	?_TiGetTics^0,w,c
  3172  0004E6  0E02               	movlw	2
  3173  0004E8  5863               	subwfb	(?_TiGetTics+1)^0,w,c
  3174  0004EA  B0D8               	btfsc	status,0,c
  3175  0004EC  D005               	goto	l2470
  3176  0004EE                     u1810:
  3177                           
  3178                           ;Ssms.c: 37:     novaTecla = -1;
  3179  0004EE  684F               	setf	_novaTecla^0,c
  3180                           
  3181                           ;Ssms.c: 38:     sumaPulsacions++;
  3182  0004F0  2A32               	incf	_sumaPulsacions^0,f,c
  3183                           
  3184                           ;Ssms.c: 39:     lletraASCII++;
  3185  0004F2  2A50               	incf	_lletraASCII^0,f,c
  3186                           
  3187                           ;Ssms.c: 40:     state++;
  3188  0004F4  2A31               	incf	SMotor@state^0,f,c
  3189                           
  3190                           ;Ssms.c: 41:    }
  3191  0004F6  0012               	return	
  3192  0004F8                     l2470:
  3193  0004F8  284F               	incf	_novaTecla^0,w,c
  3194  0004FA  B4D8               	btfsc	status,2,c
  3195  0004FC  0012               	return	
  3196  0004FE  504D               	movf	_ultimaTecla^0,w,c
  3197  000500  184F               	xorwf	_novaTecla^0,w,c
  3198  000502  B4D8               	btfsc	status,2,c
  3199  000504  0012               	return	
  3200                           
  3201                           ;Ssms.c: 43:     MNovaLletra(lletraASCII);
  3202  000506  5050               	movf	_lletraASCII^0,w,c
  3203  000508  EC02  F008         	call	_MNovaLletra
  3204                           
  3205                           ;Ssms.c: 44:     lletraASCII = lletraInici[novaTecla-2];
  3206  00050C  504F               	movf	_novaTecla^0,w,c
  3207  00050E  0F40               	addlw	low (_lletraInici+254)
  3208  000510  6ED9               	movwf	fsr2l,c
  3209  000512  6ADA               	clrf	fsr2h,c
  3210  000514  50DF               	movf	indf2,w,c
  3211  000516  6E50               	movwf	_lletraASCII^0,c
  3212                           
  3213                           ;Ssms.c: 45:     ultimaTecla = novaTecla;
  3214  000518  C04F  F04D         	movff	_novaTecla,_ultimaTecla
  3215                           
  3216                           ;Ssms.c: 46:     sumaPulsacions = 0;
  3217  00051C  0E00               	movlw	0
  3218  00051E  6E32               	movwf	_sumaPulsacions^0,c
  3219                           
  3220                           ;Ssms.c: 47:     novaTecla = -1;
  3221  000520  684F               	setf	_novaTecla^0,c
  3222                           
  3223                           ;Ssms.c: 48:     state--;
  3224  000522  0631               	decf	SMotor@state^0,f,c
  3225  000524  0012               	return	
  3226  000526                     l2486:
  3227                           
  3228                           ;Ssms.c: 52:    if (ultimaTecla != 7 && ultimaTecla != 9) {
  3229  000526  0E07               	movlw	7
  3230  000528  184D               	xorwf	_ultimaTecla^0,w,c
  3231  00052A  B4D8               	btfsc	status,2,c
  3232  00052C  D007               	goto	l2492
  3233  00052E  0E09               	movlw	9
  3234  000530  184D               	xorwf	_ultimaTecla^0,w,c
  3235  000532  B4D8               	btfsc	status,2,c
  3236  000534  D003               	goto	l2492
  3237                           
  3238                           ;Ssms.c: 53:     state = 5;
  3239  000536  0E05               	movlw	5
  3240  000538  6E31               	movwf	SMotor@state^0,c
  3241                           
  3242                           ;Ssms.c: 54:    }
  3243  00053A  0012               	return	
  3244  00053C                     l2492:
  3245  00053C  0E07               	movlw	7
  3246  00053E  184D               	xorwf	_ultimaTecla^0,w,c
  3247  000540  B4D8               	btfsc	status,2,c
  3248  000542  D004               	goto	u1870
  3249  000544  0E09               	movlw	9
  3250  000546  184D               	xorwf	_ultimaTecla^0,w,c
  3251  000548  A4D8               	btfss	status,2,c
  3252  00054A  0012               	return	
  3253  00054C                     u1870:
  3254                           
  3255                           ;Ssms.c: 56:     state = 6;
  3256  00054C  0E06               	movlw	6
  3257  00054E  6E31               	movwf	SMotor@state^0,c
  3258  000550  0012               	return	
  3259  000552                     l2498:
  3260                           
  3261                           ;Ssms.c: 60:    if (novaTecla > 1 && novaTecla < 10) {
  3262  000552  504F               	movf	_novaTecla^0,w,c
  3263  000554  0A80               	xorlw	128
  3264  000556  0F7E               	addlw	-130
  3265  000558  A0D8               	btfss	status,0,c
  3266  00055A  D008               	goto	l2504
  3267  00055C  504F               	movf	_novaTecla^0,w,c
  3268  00055E  0A80               	xorlw	128
  3269  000560  0F76               	addlw	-138
  3270  000562  B0D8               	btfsc	status,0,c
  3271  000564  D003               	goto	l2504
  3272                           
  3273                           ;Ssms.c: 61:     state = 1;
  3274  000566  0E01               	movlw	1
  3275  000568  6E31               	movwf	SMotor@state^0,c
  3276                           
  3277                           ;Ssms.c: 62:    }
  3278  00056A  0012               	return	
  3279  00056C                     l2504:
  3280  00056C  504F               	movf	_novaTecla^0,w,c
  3281  00056E  0A80               	xorlw	128
  3282  000570  0F7E               	addlw	-130
  3283  000572  B0D8               	btfsc	status,0,c
  3284  000574  D00B               	goto	l2514
  3285  000576  2850               	incf	_lletraASCII^0,w,c
  3286  000578  A4D8               	btfss	status,2,c
  3287  00057A  D008               	goto	l2514
  3288                           
  3289                           ;Ssms.c: 64:     MNovaLletra(novaTecla+48);
  3290  00057C  504F               	movf	_novaTecla^0,w,c
  3291  00057E  0F30               	addlw	48
  3292  000580  EC02  F008         	call	_MNovaLletra
  3293  000584                     l2510:
  3294                           
  3295                           ;Ssms.c: 65:     novaTecla = -1;
  3296  000584  684F               	setf	_novaTecla^0,c
  3297  000586                     l2512:
  3298                           
  3299                           ;Ssms.c: 66:     state = 0;
  3300  000586  0E00               	movlw	0
  3301  000588  6E31               	movwf	SMotor@state^0,c
  3302                           
  3303                           ;Ssms.c: 67:    }
  3304  00058A  0012               	return	
  3305  00058C                     l2514:
  3306  00058C  504F               	movf	_novaTecla^0,w,c
  3307  00058E  0A80               	xorlw	128
  3308  000590  0F7E               	addlw	-130
  3309  000592  B0D8               	btfsc	status,0,c
  3310  000594  0012               	return	
  3311  000596  2850               	incf	_lletraASCII^0,w,c
  3312  000598  B4D8               	btfsc	status,2,c
  3313  00059A  0012               	return	
  3314                           
  3315                           ;Ssms.c: 69:     MNovaLletra(lletraASCII);
  3316  00059C  5050               	movf	_lletraASCII^0,w,c
  3317  00059E  EC02  F008         	call	_MNovaLletra
  3318                           
  3319                           ;Ssms.c: 70:     lletraASCII = -1;
  3320  0005A2  6850               	setf	_lletraASCII^0,c
  3321                           
  3322                           ;Ssms.c: 71:     state++;
  3323  0005A4  2A31               	incf	SMotor@state^0,f,c
  3324  0005A6  0012               	return	
  3325  0005A8                     l2524:
  3326                           
  3327                           ;Ssms.c: 75:    MNovaLletra(novaTecla+48);
  3328  0005A8  504F               	movf	_novaTecla^0,w,c
  3329  0005AA  0F30               	addlw	48
  3330  0005AC  EC02  F008         	call	_MNovaLletra
  3331  0005B0  D7E9               	goto	l2510
  3332  0005B2                     l2530:
  3333                           
  3334                           ;Ssms.c: 80:    if (sumaPulsacions == 4) {
  3335  0005B2  0E04               	movlw	4
  3336  0005B4  1832               	xorwf	_sumaPulsacions^0,w,c
  3337  0005B6  A4D8               	btfss	status,2,c
  3338  0005B8  D009               	goto	l2538
  3339  0005BA                     u1940:
  3340                           
  3341                           ;Ssms.c: 81:     lletraASCII = lletraInici[ultimaTecla-2];
  3342  0005BA  504D               	movf	_ultimaTecla^0,w,c
  3343  0005BC  0F40               	addlw	low (_lletraInici+254)
  3344  0005BE  6ED9               	movwf	fsr2l,c
  3345  0005C0  6ADA               	clrf	fsr2h,c
  3346  0005C2  50DF               	movf	indf2,w,c
  3347  0005C4  6E50               	movwf	_lletraASCII^0,c
  3348                           
  3349                           ;Ssms.c: 82:     sumaPulsacions = 0;
  3350  0005C6  0E00               	movlw	0
  3351  0005C8  6E32               	movwf	_sumaPulsacions^0,c
  3352  0005CA  D7DD               	goto	l2512
  3353  0005CC                     l2538:
  3354  0005CC  0E03               	movlw	3
  3355  0005CE  1832               	xorwf	_sumaPulsacions^0,w,c
  3356  0005D0  A4D8               	btfss	status,2,c
  3357  0005D2  D004               	goto	l2544
  3358  0005D4                     u1950:
  3359                           
  3360                           ;Ssms.c: 86:     lletraASCII = ultimaTecla+48;
  3361  0005D4  504D               	movf	_ultimaTecla^0,w,c
  3362  0005D6  0F30               	addlw	48
  3363  0005D8  6E50               	movwf	_lletraASCII^0,c
  3364  0005DA  D7D5               	goto	l2512
  3365  0005DC                     l2544:
  3366  0005DC  0E03               	movlw	3
  3367  0005DE  6032               	cpfslt	_sumaPulsacions^0,c
  3368  0005E0  0012               	return	
  3369  0005E2  D7D1               	goto	l2512
  3370  0005E4                     l2548:
  3371                           
  3372                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  3373  0005E4  0E04               	movlw	4
  3374  0005E6  1832               	xorwf	_sumaPulsacions^0,w,c
  3375  0005E8  B4D8               	btfsc	status,2,c
  3376  0005EA  D7F4               	goto	u1950
  3377  0005EC  0E05               	movlw	5
  3378  0005EE  1832               	xorwf	_sumaPulsacions^0,w,c
  3379  0005F0  B4D8               	btfsc	status,2,c
  3380  0005F2  D7E3               	goto	u1940
  3381  0005F4  0E04               	movlw	4
  3382  0005F6  D7F3               	goto	L3
  3383  0005F8                     l2568:
  3384  0005F8  5031               	movf	SMotor@state^0,w,c
  3385  0005FA  6E69               	movwf	??_SMotor^0,c
  3386  0005FC  6A6A               	clrf	(??_SMotor+1)^0,c
  3387                           
  3388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3389                           ; Switch size 1, requested type "simple"
  3390                           ; Number of cases is 1, Range of values is 0 to 0
  3391                           ; switch strategies available:
  3392                           ; Name         Instructions Cycles
  3393                           ; simple_byte            4     3 (average)
  3394                           ;	Chosen strategy is simple_byte
  3395  0005FE  506A               	movf	(??_SMotor+1)^0,w,c
  3396  000600  0A00               	xorlw	0	; case 0
  3397  000602  A4D8               	btfss	status,2,c
  3398  000604  0012               	return	
  3399                           
  3400                           ; Switch size 1, requested type "simple"
  3401                           ; Number of cases is 7, Range of values is 0 to 6
  3402                           ; switch strategies available:
  3403                           ; Name         Instructions Cycles
  3404                           ; simple_byte           22    12 (average)
  3405                           ;	Chosen strategy is simple_byte
  3406  000606  5069               	movf	??_SMotor^0,w,c
  3407  000608  0A00               	xorlw	0	; case 0
  3408  00060A  B4D8               	btfsc	status,2,c
  3409  00060C  D73E               	goto	l2440
  3410  00060E  0A01               	xorlw	1	; case 1
  3411  000610  B4D8               	btfsc	status,2,c
  3412  000612  D75E               	goto	l2462
  3413  000614  0A03               	xorlw	3	; case 2
  3414  000616  B4D8               	btfsc	status,2,c
  3415  000618  D786               	goto	l2486
  3416  00061A  0A01               	xorlw	1	; case 3
  3417  00061C  B4D8               	btfsc	status,2,c
  3418  00061E  D799               	goto	l2498
  3419  000620  0A07               	xorlw	7	; case 4
  3420  000622  B4D8               	btfsc	status,2,c
  3421  000624  D7C1               	goto	l2524
  3422  000626  0A01               	xorlw	1	; case 5
  3423  000628  B4D8               	btfsc	status,2,c
  3424  00062A  D7C3               	goto	l2530
  3425  00062C  0A03               	xorlw	3	; case 6
  3426  00062E  A4D8               	btfss	status,2,c
  3427  000630  0012               	return	
  3428  000632  D7D8               	goto	l2548
  3429  000634                     __end_of_SMotor:
  3430                           	callstack 0
  3431                           
  3432 ;; *************** function _MNovaLletra *****************
  3433 ;; Defined at:
  3434 ;;		line 21 in file "Menu.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  lletra          1    wreg     unsigned char 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  lletra          1    5[COMRAM] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1
  3448 ;;      Params:         0       0       0
  3449 ;;      Locals:         1       0       0
  3450 ;;      Temps:          0       0       0
  3451 ;;      Totals:         1       0       0
  3452 ;;Total ram usage:        1 bytes
  3453 ;; Hardware stack levels used: 1
  3454 ;; Hardware stack levels required when called: 2
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_SMotor
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text26
  3463  001004                     __ptext26:
  3464                           	callstack 0
  3465  001004                     _MNovaLletra:
  3466                           	callstack 27
  3467                           
  3468                           ;incstack = 0
  3469                           ;MNovaLletra@lletra stored from wreg
  3470  001004  6E62               	movwf	MNovaLletra@lletra^0,c
  3471                           
  3472                           ;Menu.c: 22:     novaLletra = lletra;
  3473  001006  C062  F04B         	movff	MNovaLletra@lletra,_novaLletra
  3474  00100A  0012               	return		;funcret
  3475  00100C                     __end_of_MNovaLletra:
  3476                           	callstack 0
  3477                           
  3478 ;; *************** function _Minit *****************
  3479 ;; Defined at:
  3480 ;;		line 14 in file "Menu.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1
  3494 ;;      Params:         0       0       0
  3495 ;;      Locals:         0       0       0
  3496 ;;      Temps:          0       0       0
  3497 ;;      Totals:         0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; Hardware stack levels required when called: 3
  3501 ;; This function calls:
  3502 ;;		_TiGetTimer
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text27
  3509  00100C                     __ptext27:
  3510                           	callstack 0
  3511  00100C                     _Minit:
  3512                           	callstack 27
  3513                           
  3514                           ;Menu.c: 15:     timerMenu = TiGetTimer();
  3515                           
  3516                           ;incstack = 0
  3517  00100C  ECB6  F006         	call	_TiGetTimer	;wreg free
  3518  001010  6E2A               	movwf	_timerMenu^0,c
  3519  001012  0012               	return		;funcret
  3520  001014                     __end_of_Minit:
  3521                           	callstack 0
  3522                           
  3523 ;; *************** function _LcLCD *****************
  3524 ;; Defined at:
  3525 ;;		line 254 in file "LcTLCD.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1
  3539 ;;      Params:         0       0       0
  3540 ;;      Locals:         0       0       0
  3541 ;;      Temps:          0       0       0
  3542 ;;      Totals:         0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 6
  3546 ;; This function calls:
  3547 ;;		_LcPutChar
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text28
  3554  000E42                     __ptext28:
  3555                           	callstack 0
  3556  000E42                     _LcLCD:
  3557                           	callstack 24
  3558                           
  3559                           ;LcTLCD.c: 255:     if(nou_s == 1){
  3560                           
  3561                           ;incstack = 0
  3562  000E42  AA73               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  3563  000E44  0012               	return	
  3564                           
  3565                           ;LcTLCD.c: 256:         LcPutChar(*s_ptr);
  3566  000E46  C033  FFF6         	movff	_s_ptr,tblptrl
  3567  000E4A                     	if	1	;There is more than 1 active tblptr byte
  3568  000E4A  0E02               	movlw	high __smallconst
  3569  000E4C  6EF7               	movwf	tblptrh,c
  3570  000E4E                     	endif
  3571  000E4E                     	if	0	;tblptru may be non-zero
  3572  000E4E                     	endif
  3573  000E4E                     	if	0	;tblptru may be non-zero
  3574  000E4E                     	endif
  3575  000E4E  0008               	tblrd		*
  3576  000E50  50F5               	movf	tablat,w,c
  3577  000E52  ECE9  F005         	call	_LcPutChar
  3578                           
  3579                           ;LcTLCD.c: 257:         s_ptr++;
  3580  000E56  2A33               	incf	_s_ptr^0,f,c
  3581                           
  3582                           ;LcTLCD.c: 258:         if(*s_ptr == '\0'){
  3583  000E58  C033  FFF6         	movff	_s_ptr,tblptrl
  3584  000E5C                     	if	1	;There is more than 1 active tblptr byte
  3585  000E5C  0E02               	movlw	high __smallconst
  3586  000E5E  6EF7               	movwf	tblptrh,c
  3587  000E60                     	endif
  3588  000E60                     	if	0	;tblptru may be non-zero
  3589  000E60                     	endif
  3590  000E60                     	if	0	;tblptru may be non-zero
  3591  000E60                     	endif
  3592  000E60  0008               	tblrd		*
  3593  000E62  50F5               	movf	tablat,w,c
  3594  000E64  0900               	iorlw	0
  3595  000E66  A4D8               	btfss	status,2,c
  3596  000E68  0012               	return	
  3597                           
  3598                           ;LcTLCD.c: 259:             nou_s = 0;
  3599  000E6A  9A73               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  3600                           
  3601                           ;LcTLCD.c: 260:             s_ptr=0;
  3602  000E6C  0E00               	movlw	0
  3603  000E6E  6E33               	movwf	_s_ptr^0,c
  3604  000E70  0012               	return		;funcret
  3605  000E72                     __end_of_LcLCD:
  3606                           	callstack 0
  3607                           
  3608 ;; *************** function _LcPutChar *****************
  3609 ;; Defined at:
  3610 ;;		line 132 in file "LcTLCD.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  c               1    wreg     unsigned char 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  c               1   19[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1
  3624 ;;      Params:         0       0       0
  3625 ;;      Locals:         1       0       0
  3626 ;;      Temps:          0       0       0
  3627 ;;      Totals:         1       0       0
  3628 ;;Total ram usage:        1 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; Hardware stack levels required when called: 5
  3631 ;; This function calls:
  3632 ;;		_CantaData
  3633 ;;		_LcGotoXY
  3634 ;;		_WaitForBusy
  3635 ;; This function is called by:
  3636 ;;		_LcLCD
  3637 ;;		_menu
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text29
  3642  000BD2                     __ptext29:
  3643                           	callstack 0
  3644  000BD2                     _LcPutChar:
  3645                           	callstack 24
  3646                           
  3647                           ;incstack = 0
  3648                           ;LcPutChar@c stored from wreg
  3649  000BD2  6E70               	movwf	LcPutChar@c^0,c
  3650                           
  3651                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  3652  000BD4  EC79  F006         	call	_WaitForBusy	;wreg free
  3653  000BD8  5070               	movf	LcPutChar@c^0,w,c
  3654  000BDA  ECEF  F006         	call	_CantaData
  3655                           
  3656                           ;LcTLCD.c: 136:  ++ColumnAct;
  3657  000BDE  2A35               	incf	_ColumnAct^0,f,c
  3658                           
  3659                           ;LcTLCD.c: 138:  if (Rows == 2) {
  3660  000BE0  0E02               	movlw	2
  3661  000BE2  1838               	xorwf	_Rows^0,w,c
  3662  000BE4  A4D8               	btfss	status,2,c
  3663  000BE6  D010               	goto	l2328
  3664                           
  3665                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  3666  000BE8  0E27               	movlw	39
  3667  000BEA  6435               	cpfsgt	_ColumnAct^0,c
  3668  000BEC  D00D               	goto	l2328
  3669                           
  3670                           ;LcTLCD.c: 140:    ColumnAct = 0;
  3671  000BEE  0E00               	movlw	0
  3672  000BF0  6E35               	movwf	_ColumnAct^0,c
  3673                           
  3674                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  3675  000BF2  2A36               	incf	_RowAct^0,f,c
  3676  000BF4  0E01               	movlw	1
  3677  000BF6  6436               	cpfsgt	_RowAct^0,c
  3678  000BF8  D002               	goto	l2326
  3679  000BFA  0E00               	movlw	0
  3680  000BFC  6E36               	movwf	_RowAct^0,c
  3681  000BFE                     l2326:
  3682                           
  3683                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  3684  000BFE  C036  F06A         	movff	_RowAct,LcGotoXY@Row
  3685  000C02  5035               	movf	_ColumnAct^0,w,c
  3686  000C04  EC99  F006         	call	_LcGotoXY
  3687  000C08                     l2328:
  3688                           
  3689                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  3690  000C08  0436               	decf	_RowAct^0,w,c
  3691  000C0A  A4D8               	btfss	status,2,c
  3692  000C0C  0012               	return	
  3693                           
  3694                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  3695  000C0E  0E27               	movlw	39
  3696  000C10  6435               	cpfsgt	_ColumnAct^0,c
  3697  000C12  D002               	goto	l2334
  3698  000C14  0E00               	movlw	0
  3699  000C16  6E35               	movwf	_ColumnAct^0,c
  3700  000C18                     l2334:
  3701                           
  3702                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  3703  000C18  C036  F06A         	movff	_RowAct,LcGotoXY@Row
  3704  000C1C  5035               	movf	_ColumnAct^0,w,c
  3705  000C1E  EC99  F006         	call	_LcGotoXY
  3706  000C22  0012               	return		;funcret
  3707  000C24                     __end_of_LcPutChar:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _LcGotoXY *****************
  3711 ;; Defined at:
  3712 ;;		line 104 in file "LcTLCD.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  Column          1    wreg     unsigned char 
  3715 ;;  Row             1   13[COMRAM] unsigned char 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  Column          1   18[COMRAM] unsigned char 
  3718 ;;  Fisics          2   14[COMRAM] int 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1
  3728 ;;      Params:         1       0       0
  3729 ;;      Locals:         5       0       0
  3730 ;;      Temps:          0       0       0
  3731 ;;      Totals:         6       0       0
  3732 ;;Total ram usage:        6 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 4
  3735 ;; This function calls:
  3736 ;;		_CantaIR
  3737 ;;		_WaitForBusy
  3738 ;; This function is called by:
  3739 ;;		_LcClear
  3740 ;;		_LcPutChar
  3741 ;;		_menu
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text30
  3746  000D32                     __ptext30:
  3747                           	callstack 0
  3748  000D32                     _LcGotoXY:
  3749                           	callstack 24
  3750                           
  3751                           ;incstack = 0
  3752                           ;LcGotoXY@Column stored from wreg
  3753  000D32  6E6F               	movwf	LcGotoXY@Column^0,c
  3754                           
  3755                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  3756  000D34  506A               	movf	LcGotoXY@Row^0,w,c
  3757  000D36  B4D8               	btfsc	status,2,c
  3758  000D38  D004               	goto	l2268
  3759  000D3A  0E00               	movlw	0
  3760  000D3C  6E6E               	movwf	(_LcGotoXY$342+1)^0,c
  3761  000D3E  0E40               	movlw	64
  3762  000D40  D003               	goto	L4
  3763  000D42                     l2268:
  3764  000D42  0E00               	movlw	0
  3765  000D44  6E6E               	movwf	(_LcGotoXY$342+1)^0,c
  3766  000D46  0E00               	movlw	0
  3767  000D48                     L4:
  3768  000D48  6E6D               	movwf	_LcGotoXY$342^0,c
  3769  000D4A  506F               	movf	LcGotoXY@Column^0,w,c
  3770  000D4C  246D               	addwf	_LcGotoXY$342^0,w,c
  3771  000D4E  6E6B               	movwf	LcGotoXY@Fisics^0,c
  3772  000D50  0E00               	movlw	0
  3773  000D52  206E               	addwfc	(_LcGotoXY$342+1)^0,w,c
  3774  000D54  6E6C               	movwf	(LcGotoXY@Fisics+1)^0,c
  3775                           
  3776                           ;LcTLCD.c: 125:  WaitForBusy();
  3777  000D56  EC79  F006         	call	_WaitForBusy	;wreg free
  3778                           
  3779                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  3780  000D5A  506B               	movf	LcGotoXY@Fisics^0,w,c
  3781  000D5C  0980               	iorlw	128
  3782  000D5E  EC08  F007         	call	_CantaIR
  3783                           
  3784                           ;LcTLCD.c: 128:  RowAct = Row;
  3785  000D62  C06A  F036         	movff	LcGotoXY@Row,_RowAct
  3786                           
  3787                           ;LcTLCD.c: 129:  ColumnAct = Column;
  3788  000D66  C06F  F035         	movff	LcGotoXY@Column,_ColumnAct
  3789  000D6A  0012               	return		;funcret
  3790  000D6C                     __end_of_LcGotoXY:
  3791                           	callstack 0
  3792                           
  3793 ;; *************** function _CantaData *****************
  3794 ;; Defined at:
  3795 ;;		line 194 in file "LcTLCD.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  Data            1    wreg     unsigned char 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  Data            1    7[COMRAM] unsigned char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1
  3809 ;;      Params:         0       0       0
  3810 ;;      Locals:         1       0       0
  3811 ;;      Temps:          0       0       0
  3812 ;;      Totals:         1       0       0
  3813 ;;Total ram usage:        1 bytes
  3814 ;; Hardware stack levels used: 1
  3815 ;; Hardware stack levels required when called: 3
  3816 ;; This function calls:
  3817 ;;		_CantaPartAlta
  3818 ;;		_CantaPartBaixa
  3819 ;; This function is called by:
  3820 ;;		_LcPutChar
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text31
  3825  000DDE                     __ptext31:
  3826                           	callstack 0
  3827  000DDE                     _CantaData:
  3828                           	callstack 25
  3829                           
  3830                           ;incstack = 0
  3831                           ;CantaData@Data stored from wreg
  3832  000DDE  6E64               	movwf	CantaData@Data^0,c
  3833                           
  3834                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  3835  000DE0  9694               	bcf	148,3,c	;volatile
  3836  000DE2  9494               	bcf	148,2,c	;volatile
  3837  000DE4  9294               	bcf	148,1,c	;volatile
  3838  000DE6  9094               	bcf	148,0,c	;volatile
  3839                           
  3840                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  3841  000DE8  8A8B               	bsf	139,5,c	;volatile
  3842                           
  3843                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  3844  000DEA  9E8C               	bcf	140,7,c	;volatile
  3845                           
  3846                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  3847  000DEC  888B               	bsf	139,4,c	;volatile
  3848                           
  3849                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  3850  000DEE  5064               	movf	CantaData@Data^0,w,c
  3851  000DF0  EC88  F005         	call	_CantaPartAlta
  3852                           
  3853                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  3854  000DF4  888B               	bsf	139,4,c	;volatile
  3855                           
  3856                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  3857  000DF6  988B               	bcf	139,4,c	;volatile
  3858                           
  3859                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  3860  000DF8  988B               	bcf	139,4,c	;volatile
  3861                           
  3862                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  3863  000DFA  888B               	bsf	139,4,c	;volatile
  3864                           
  3865                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  3866  000DFC  5064               	movf	CantaData@Data^0,w,c
  3867  000DFE  EC54  F005         	call	_CantaPartBaixa
  3868                           
  3869                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  3870  000E02  888B               	bsf	139,4,c	;volatile
  3871                           
  3872                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  3873  000E04  988B               	bcf	139,4,c	;volatile
  3874                           
  3875                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3876  000E06  8694               	bsf	148,3,c	;volatile
  3877  000E08  8494               	bsf	148,2,c	;volatile
  3878  000E0A  8294               	bsf	148,1,c	;volatile
  3879  000E0C  8094               	bsf	148,0,c	;volatile
  3880  000E0E  0012               	return		;funcret
  3881  000E10                     __end_of_CantaData:
  3882                           	callstack 0
  3883                           
  3884 ;; *************** function _LcInit *****************
  3885 ;; Defined at:
  3886 ;;		line 41 in file "LcTLCD.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  rows            1    wreg     unsigned char 
  3889 ;;  columns         1   16[COMRAM] unsigned char 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  rows            1   17[COMRAM] unsigned char 
  3892 ;;  i               2   18[COMRAM] int 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1
  3902 ;;      Params:         1       0       0
  3903 ;;      Locals:         3       0       0
  3904 ;;      Temps:          0       0       0
  3905 ;;      Totals:         4       0       0
  3906 ;;Total ram usage:        4 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 5
  3909 ;; This function calls:
  3910 ;;		_CantaIR
  3911 ;;		_EscriuPrimeraOrdre
  3912 ;;		_Espera
  3913 ;;		_LcCursorOff
  3914 ;;		_TiGetTimer
  3915 ;;		_WaitForBusy
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text32
  3922  0008A0                     __ptext32:
  3923                           	callstack 0
  3924  0008A0                     _LcInit:
  3925                           	callstack 25
  3926                           
  3927                           ;incstack = 0
  3928                           ;LcInit@rows stored from wreg
  3929  0008A0  6E6E               	movwf	LcInit@rows^0,c
  3930                           
  3931                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  3932  0008A2  ECB6  F006         	call	_TiGetTimer	;wreg free
  3933  0008A6  6E34               	movwf	_Timer^0,c
  3934                           
  3935                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  3936  0008A8  C06E  F038         	movff	LcInit@rows,_Rows
  3937  0008AC  C06D  F037         	movff	LcInit@columns,_Columns
  3938                           
  3939                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  3940  0008B0  0E00               	movlw	0
  3941  0008B2  6E35               	movwf	_ColumnAct^0,c
  3942  0008B4  C035  F036         	movff	_ColumnAct,_RowAct
  3943                           
  3944                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  3945  0008B8  9894               	bcf	148,4,c	;volatile
  3946  0008BA  9E95               	bcf	149,7,c	;volatile
  3947  0008BC  9A94               	bcf	148,5,c	;volatile
  3948                           
  3949                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  3950  0008BE  0E00               	movlw	0
  3951  0008C0  6E70               	movwf	(LcInit@i+1)^0,c
  3952  0008C2  0E00               	movlw	0
  3953  0008C4  6E6F               	movwf	LcInit@i^0,c
  3954  0008C6                     l2392:
  3955                           
  3956                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  3957  0008C6  0E00               	movlw	0
  3958  0008C8  6E6A               	movwf	(Espera@ms+1)^0,c
  3959  0008CA  0E64               	movlw	100
  3960  0008CC  6E69               	movwf	Espera@ms^0,c
  3961  0008CE  5034               	movf	_Timer^0,w,c
  3962  0008D0  EC8A  F007         	call	_Espera
  3963                           
  3964                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  3965  0008D4  0E03               	movlw	3
  3966  0008D6  EC17  F005         	call	_EscriuPrimeraOrdre
  3967                           
  3968                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  3969  0008DA  0E00               	movlw	0
  3970  0008DC  6E6A               	movwf	(Espera@ms+1)^0,c
  3971  0008DE  0E05               	movlw	5
  3972  0008E0  6E69               	movwf	Espera@ms^0,c
  3973  0008E2  5034               	movf	_Timer^0,w,c
  3974  0008E4  EC8A  F007         	call	_Espera
  3975                           
  3976                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  3977  0008E8  0E03               	movlw	3
  3978  0008EA  EC17  F005         	call	_EscriuPrimeraOrdre
  3979                           
  3980                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  3981  0008EE  0E00               	movlw	0
  3982  0008F0  6E6A               	movwf	(Espera@ms+1)^0,c
  3983  0008F2  0E01               	movlw	1
  3984  0008F4  6E69               	movwf	Espera@ms^0,c
  3985  0008F6  5034               	movf	_Timer^0,w,c
  3986  0008F8  EC8A  F007         	call	_Espera
  3987                           
  3988                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  3989  0008FC  0E03               	movlw	3
  3990  0008FE  EC17  F005         	call	_EscriuPrimeraOrdre
  3991                           
  3992                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  3993  000902  0E00               	movlw	0
  3994  000904  6E6A               	movwf	(Espera@ms+1)^0,c
  3995  000906  0E01               	movlw	1
  3996  000908  6E69               	movwf	Espera@ms^0,c
  3997  00090A  5034               	movf	_Timer^0,w,c
  3998  00090C  EC8A  F007         	call	_Espera
  3999                           
  4000                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  4001  000910  0E02               	movlw	2
  4002  000912  EC17  F005         	call	_EscriuPrimeraOrdre
  4003                           
  4004                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  4005  000916  0E00               	movlw	0
  4006  000918  6E6A               	movwf	(Espera@ms+1)^0,c
  4007  00091A  0E04               	movlw	4
  4008  00091C  6E69               	movwf	Espera@ms^0,c
  4009  00091E  5034               	movf	_Timer^0,w,c
  4010  000920  EC8A  F007         	call	_Espera
  4011                           
  4012                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  4013  000924  0E28               	movlw	40
  4014  000926  EC08  F007         	call	_CantaIR
  4015                           
  4016                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  4017  00092A  EC79  F006         	call	_WaitForBusy	;wreg free
  4018  00092E  0E08               	movlw	8
  4019  000930  EC08  F007         	call	_CantaIR
  4020                           
  4021                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  4022  000934  EC79  F006         	call	_WaitForBusy	;wreg free
  4023  000938  0E01               	movlw	1
  4024  00093A  EC08  F007         	call	_CantaIR
  4025                           
  4026                           ;LcTLCD.c: 71:   Espera(Timer,3);
  4027  00093E  0E00               	movlw	0
  4028  000940  6E6A               	movwf	(Espera@ms+1)^0,c
  4029  000942  0E03               	movlw	3
  4030  000944  6E69               	movwf	Espera@ms^0,c
  4031  000946  5034               	movf	_Timer^0,w,c
  4032  000948  EC8A  F007         	call	_Espera
  4033                           
  4034                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  4035  00094C  EC79  F006         	call	_WaitForBusy	;wreg free
  4036  000950  0E06               	movlw	6
  4037  000952  EC08  F007         	call	_CantaIR
  4038                           
  4039                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  4040  000956  EC79  F006         	call	_WaitForBusy	;wreg free
  4041  00095A  0E0F               	movlw	15
  4042  00095C  EC08  F007         	call	_CantaIR
  4043                           
  4044                           ;LcTLCD.c: 74:  }
  4045  000960  4A6F               	infsnz	LcInit@i^0,f,c
  4046  000962  2A70               	incf	(LcInit@i+1)^0,f,c
  4047  000964  BE70               	btfsc	(LcInit@i+1)^0,7,c
  4048  000966  D7AF               	goto	l2392
  4049  000968  5070               	movf	(LcInit@i+1)^0,w,c
  4050  00096A  E104               	bnz	u1710
  4051  00096C  0E02               	movlw	2
  4052  00096E  5C6F               	subwf	LcInit@i^0,w,c
  4053  000970  A0D8               	btfss	status,0,c
  4054  000972  D7A9               	goto	l2392
  4055  000974                     u1710:
  4056                           
  4057                           ;LcTLCD.c: 79:     LcCursorOff();
  4058  000974  ECE8  F007         	call	_LcCursorOff	;wreg free
  4059  000978  0012               	return		;funcret
  4060  00097A                     __end_of_LcInit:
  4061                           	callstack 0
  4062                           
  4063 ;; *************** function _TiGetTimer *****************
  4064 ;; Defined at:
  4065 ;;		line 70 in file "TiTTimer.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      unsigned char 
  4072 ;; Registers used:
  4073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1
  4079 ;;      Params:         0       0       0
  4080 ;;      Locals:         0       0       0
  4081 ;;      Temps:          1       0       0
  4082 ;;      Totals:         1       0       0
  4083 ;;Total ram usage:        1 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; Hardware stack levels required when called: 2
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_LcInit
  4090 ;;		_Sinit
  4091 ;;		_TeInit
  4092 ;;		_Minit
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text33
  4097  000D6C                     __ptext33:
  4098                           	callstack 0
  4099  000D6C                     _TiGetTimer:
  4100                           	callstack 27
  4101                           
  4102                           ;TiTTimer.c: 74:     counter=0;
  4103                           
  4104                           ;incstack = 0
  4105  000D6C  0E00               	movlw	0
  4106  000D6E  6E2C               	movwf	_counter^0,c
  4107                           
  4108                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  4109  000D70  D007               	goto	l1374
  4110  000D72                     l1366:
  4111                           
  4112                           ;TiTTimer.c: 76:         counter++;
  4113  000D72  2A2C               	incf	_counter^0,f,c
  4114                           
  4115                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  4116  000D74  0E08               	movlw	8
  4117  000D76  182C               	xorwf	_counter^0,w,c
  4118  000D78  A4D8               	btfss	status,2,c
  4119  000D7A  D002               	goto	l1374
  4120  000D7C  0EFF               	movlw	255
  4121  000D7E  0012               	return	
  4122  000D80                     l1374:
  4123                           
  4124                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  4125  000D80  502C               	movf	_counter^0,w,c
  4126  000D82  0D03               	mullw	3
  4127  000D84  50F3               	movf	243,w,c
  4128  000D86  0F03               	addlw	low (_s_Timers+2)
  4129  000D88  6ED9               	movwf	fsr2l,c
  4130  000D8A  6ADA               	clrf	fsr2h,c
  4131  000D8C  04DE               	decf	postinc2,w,c
  4132  000D8E  B4D8               	btfsc	status,2,c
  4133  000D90  D7F0               	goto	l1366
  4134                           
  4135                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  4136  000D92  502C               	movf	_counter^0,w,c
  4137  000D94  0D03               	mullw	3
  4138  000D96  50F3               	movf	243,w,c
  4139  000D98  0F03               	addlw	low (_s_Timers+2)
  4140  000D9A  6ED9               	movwf	fsr2l,c
  4141  000D9C  6ADA               	clrf	fsr2h,c
  4142  000D9E  0E01               	movlw	1
  4143  000DA0  6EDF               	movwf	indf2,c
  4144                           
  4145                           ;TiTTimer.c: 80:     return (counter);
  4146  000DA2  502C               	movf	_counter^0,w,c
  4147  000DA4  0012               	return		;funcret
  4148  000DA6                     __end_of_TiGetTimer:
  4149                           	callstack 0
  4150                           
  4151 ;; *************** function _LcCursorOff *****************
  4152 ;; Defined at:
  4153 ;;		line 97 in file "LcTLCD.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;		None
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;		None
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMRAM   BANK0   BANK1
  4167 ;;      Params:         0       0       0
  4168 ;;      Locals:         0       0       0
  4169 ;;      Temps:          0       0       0
  4170 ;;      Totals:         0       0       0
  4171 ;;Total ram usage:        0 bytes
  4172 ;; Hardware stack levels used: 1
  4173 ;; Hardware stack levels required when called: 4
  4174 ;; This function calls:
  4175 ;;		_CantaIR
  4176 ;;		_WaitForBusy
  4177 ;; This function is called by:
  4178 ;;		_LcInit
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text34
  4183  000FD0                     __ptext34:
  4184                           	callstack 0
  4185  000FD0                     _LcCursorOff:
  4186                           	callstack 25
  4187                           
  4188                           ;LcTLCD.c: 100:  WaitForBusy();
  4189                           
  4190                           ;incstack = 0
  4191  000FD0  EC79  F006         	call	_WaitForBusy	;wreg free
  4192                           
  4193                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  4194  000FD4  0E0C               	movlw	12
  4195  000FD6  EC08  F007         	call	_CantaIR
  4196  000FDA  0012               	return		;funcret
  4197  000FDC                     __end_of_LcCursorOff:
  4198                           	callstack 0
  4199                           
  4200 ;; *************** function _WaitForBusy *****************
  4201 ;; Defined at:
  4202 ;;		line 210 in file "LcTLCD.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;		None
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  Busy            1   12[COMRAM] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1
  4216 ;;      Params:         0       0       0
  4217 ;;      Locals:         1       0       0
  4218 ;;      Temps:          0       0       0
  4219 ;;      Totals:         1       0       0
  4220 ;;Total ram usage:        1 bytes
  4221 ;; Hardware stack levels used: 1
  4222 ;; Hardware stack levels required when called: 3
  4223 ;; This function calls:
  4224 ;;		_TiGetTics
  4225 ;;		_TiResetTics
  4226 ;; This function is called by:
  4227 ;;		_LcInit
  4228 ;;		_LcClear
  4229 ;;		_LcCursorOff
  4230 ;;		_LcGotoXY
  4231 ;;		_LcPutChar
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text35
  4236  000CF2                     __ptext35:
  4237                           	callstack 0
  4238  000CF2                     _WaitForBusy:
  4239                           	callstack 25
  4240                           
  4241                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  4242                           
  4243                           ;incstack = 0
  4244  000CF2  8694               	bsf	148,3,c	;volatile
  4245  000CF4  8494               	bsf	148,2,c	;volatile
  4246  000CF6  8294               	bsf	148,1,c	;volatile
  4247  000CF8  8094               	bsf	148,0,c	;volatile
  4248                           
  4249                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  4250  000CFA  9A8B               	bcf	139,5,c	;volatile
  4251                           
  4252                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  4253  000CFC  8E8C               	bsf	140,7,c	;volatile
  4254                           
  4255                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  4256  000CFE  5034               	movf	_Timer^0,w,c
  4257  000D00  ECBA  F007         	call	_TiResetTics
  4258  000D04                     l2236:
  4259                           
  4260                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  4261  000D04  888B               	bsf	139,4,c	;volatile
  4262  000D06  888B               	bsf	139,4,c	;volatile
  4263                           
  4264                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  4265  000D08  0E00               	movlw	0
  4266  000D0A  B682               	btfsc	130,3,c	;volatile
  4267  000D0C  0E01               	movlw	1
  4268  000D0E  6E69               	movwf	WaitForBusy@Busy^0,c
  4269                           
  4270                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  4271  000D10  988B               	bcf	139,4,c	;volatile
  4272                           
  4273                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  4274  000D12  988B               	bcf	139,4,c	;volatile
  4275                           
  4276                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  4277  000D14  888B               	bsf	139,4,c	;volatile
  4278  000D16  888B               	bsf	139,4,c	;volatile
  4279                           
  4280                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  4281  000D18  988B               	bcf	139,4,c	;volatile
  4282                           
  4283                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  4284  000D1A  988B               	bcf	139,4,c	;volatile
  4285                           
  4286                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  4287  000D1C  5034               	movf	_Timer^0,w,c
  4288  000D1E  EC50  F007         	call	_TiGetTics
  4289  000D22  5062               	movf	?_TiGetTics^0,w,c
  4290  000D24  1063               	iorwf	(?_TiGetTics+1)^0,w,c
  4291  000D26  A4D8               	btfss	status,2,c
  4292  000D28  0012               	return	
  4293                           
  4294                           ;LcTLCD.c: 225:  } while(Busy);
  4295  000D2A  5069               	movf	WaitForBusy@Busy^0,w,c
  4296  000D2C  B4D8               	btfsc	status,2,c
  4297  000D2E  0012               	return	
  4298  000D30  D7E9               	goto	l2236
  4299  000D32                     __end_of_WaitForBusy:
  4300                           	callstack 0
  4301                           
  4302 ;; *************** function _CantaIR *****************
  4303 ;; Defined at:
  4304 ;;		line 178 in file "LcTLCD.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  IR              1    wreg     unsigned char 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  IR              1    7[COMRAM] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1
  4318 ;;      Params:         0       0       0
  4319 ;;      Locals:         1       0       0
  4320 ;;      Temps:          0       0       0
  4321 ;;      Totals:         1       0       0
  4322 ;;Total ram usage:        1 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; Hardware stack levels required when called: 3
  4325 ;; This function calls:
  4326 ;;		_CantaPartAlta
  4327 ;;		_CantaPartBaixa
  4328 ;; This function is called by:
  4329 ;;		_LcInit
  4330 ;;		_LcClear
  4331 ;;		_LcCursorOff
  4332 ;;		_LcGotoXY
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text36
  4337  000E10                     __ptext36:
  4338                           	callstack 0
  4339  000E10                     _CantaIR:
  4340                           	callstack 24
  4341                           
  4342                           ;incstack = 0
  4343                           ;CantaIR@IR stored from wreg
  4344  000E10  6E64               	movwf	CantaIR@IR^0,c
  4345                           
  4346                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  4347  000E12  9694               	bcf	148,3,c	;volatile
  4348  000E14  9494               	bcf	148,2,c	;volatile
  4349  000E16  9294               	bcf	148,1,c	;volatile
  4350  000E18  9094               	bcf	148,0,c	;volatile
  4351                           
  4352                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  4353  000E1A  9A8B               	bcf	139,5,c	;volatile
  4354                           
  4355                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  4356  000E1C  9E8C               	bcf	140,7,c	;volatile
  4357                           
  4358                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  4359  000E1E  888B               	bsf	139,4,c	;volatile
  4360                           
  4361                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  4362  000E20  5064               	movf	CantaIR@IR^0,w,c
  4363  000E22  EC88  F005         	call	_CantaPartAlta
  4364                           
  4365                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  4366  000E26  888B               	bsf	139,4,c	;volatile
  4367                           
  4368                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  4369  000E28  988B               	bcf	139,4,c	;volatile
  4370                           
  4371                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  4372  000E2A  988B               	bcf	139,4,c	;volatile
  4373                           
  4374                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  4375  000E2C  888B               	bsf	139,4,c	;volatile
  4376                           
  4377                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  4378  000E2E  5064               	movf	CantaIR@IR^0,w,c
  4379  000E30  EC54  F005         	call	_CantaPartBaixa
  4380                           
  4381                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  4382  000E34  888B               	bsf	139,4,c	;volatile
  4383                           
  4384                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  4385  000E36  988B               	bcf	139,4,c	;volatile
  4386                           
  4387                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  4388  000E38  8694               	bsf	148,3,c	;volatile
  4389  000E3A  8494               	bsf	148,2,c	;volatile
  4390  000E3C  8294               	bsf	148,1,c	;volatile
  4391  000E3E  8094               	bsf	148,0,c	;volatile
  4392  000E40  0012               	return		;funcret
  4393  000E42                     __end_of_CantaIR:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _CantaPartBaixa *****************
  4397 ;; Defined at:
  4398 ;;		line 171 in file "LcTLCD.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  c               1    wreg     unsigned char 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  c               1    6[COMRAM] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1
  4412 ;;      Params:         0       0       0
  4413 ;;      Locals:         1       0       0
  4414 ;;      Temps:          1       0       0
  4415 ;;      Totals:         2       0       0
  4416 ;;Total ram usage:        2 bytes
  4417 ;; Hardware stack levels used: 1
  4418 ;; Hardware stack levels required when called: 2
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_CantaIR
  4423 ;;		_CantaData
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text37
  4428  000AA8                     __ptext37:
  4429                           	callstack 0
  4430  000AA8                     _CantaPartBaixa:
  4431                           	callstack 24
  4432                           
  4433                           ;incstack = 0
  4434                           ;CantaPartBaixa@c stored from wreg
  4435  000AA8  6E63               	movwf	CantaPartBaixa@c^0,c
  4436                           
  4437                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  4438  000AAA  A663               	btfss	CantaPartBaixa@c^0,3,c
  4439  000AAC  D003               	goto	u1510
  4440  000AAE  6A62               	clrf	??_CantaPartBaixa^0,c
  4441  000AB0  2A62               	incf	??_CantaPartBaixa^0,f,c
  4442  000AB2  D001               	goto	u1528
  4443  000AB4                     u1510:
  4444  000AB4  6A62               	clrf	??_CantaPartBaixa^0,c
  4445  000AB6                     u1528:
  4446  000AB6  4662               	rlncf	??_CantaPartBaixa^0,f,c
  4447  000AB8  4662               	rlncf	??_CantaPartBaixa^0,f,c
  4448  000ABA  4662               	rlncf	??_CantaPartBaixa^0,f,c
  4449  000ABC  508B               	movf	139,w,c	;volatile
  4450  000ABE  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4451  000AC0  0BF7               	andlw	-9
  4452  000AC2  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4453  000AC4  6E8B               	movwf	139,c	;volatile
  4454                           
  4455                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  4456  000AC6  A463               	btfss	CantaPartBaixa@c^0,2,c
  4457  000AC8  D003               	goto	u1530
  4458  000ACA  6A62               	clrf	??_CantaPartBaixa^0,c
  4459  000ACC  2A62               	incf	??_CantaPartBaixa^0,f,c
  4460  000ACE  D001               	goto	u1548
  4461  000AD0                     u1530:
  4462  000AD0  6A62               	clrf	??_CantaPartBaixa^0,c
  4463  000AD2                     u1548:
  4464  000AD2  4662               	rlncf	??_CantaPartBaixa^0,f,c
  4465  000AD4  4662               	rlncf	??_CantaPartBaixa^0,f,c
  4466  000AD6  508B               	movf	139,w,c	;volatile
  4467  000AD8  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4468  000ADA  0BFB               	andlw	-5
  4469  000ADC  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4470  000ADE  6E8B               	movwf	139,c	;volatile
  4471                           
  4472                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  4473  000AE0  A263               	btfss	CantaPartBaixa@c^0,1,c
  4474  000AE2  D003               	goto	u1550
  4475  000AE4  6A62               	clrf	??_CantaPartBaixa^0,c
  4476  000AE6  2A62               	incf	??_CantaPartBaixa^0,f,c
  4477  000AE8  D001               	goto	u1568
  4478  000AEA                     u1550:
  4479  000AEA  6A62               	clrf	??_CantaPartBaixa^0,c
  4480  000AEC                     u1568:
  4481  000AEC  4662               	rlncf	??_CantaPartBaixa^0,f,c
  4482  000AEE  508B               	movf	139,w,c	;volatile
  4483  000AF0  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4484  000AF2  0BFD               	andlw	-3
  4485  000AF4  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4486  000AF6  6E8B               	movwf	139,c	;volatile
  4487                           
  4488                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  4489  000AF8  A063               	btfss	CantaPartBaixa@c^0,0,c
  4490  000AFA  D003               	goto	u1570
  4491  000AFC  6A62               	clrf	??_CantaPartBaixa^0,c
  4492  000AFE  2A62               	incf	??_CantaPartBaixa^0,f,c
  4493  000B00  D001               	goto	u1588
  4494  000B02                     u1570:
  4495  000B02  6A62               	clrf	??_CantaPartBaixa^0,c
  4496  000B04                     u1588:
  4497  000B04  508B               	movf	139,w,c	;volatile
  4498  000B06  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4499  000B08  0BFE               	andlw	-2
  4500  000B0A  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4501  000B0C  6E8B               	movwf	139,c	;volatile
  4502  000B0E  0012               	return		;funcret
  4503  000B10                     __end_of_CantaPartBaixa:
  4504                           	callstack 0
  4505                           
  4506 ;; *************** function _CantaPartAlta *****************
  4507 ;; Defined at:
  4508 ;;		line 164 in file "LcTLCD.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  c               1    wreg     unsigned char 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  c               1    6[COMRAM] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1
  4522 ;;      Params:         0       0       0
  4523 ;;      Locals:         1       0       0
  4524 ;;      Temps:          1       0       0
  4525 ;;      Totals:         2       0       0
  4526 ;;Total ram usage:        2 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; Hardware stack levels required when called: 2
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_CantaIR
  4533 ;;		_CantaData
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text38
  4538  000B10                     __ptext38:
  4539                           	callstack 0
  4540  000B10                     _CantaPartAlta:
  4541                           	callstack 24
  4542                           
  4543                           ;incstack = 0
  4544                           ;CantaPartAlta@c stored from wreg
  4545  000B10  6E63               	movwf	CantaPartAlta@c^0,c
  4546                           
  4547                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  4548  000B12  AE63               	btfss	CantaPartAlta@c^0,7,c
  4549  000B14  D003               	goto	u1430
  4550  000B16  6A62               	clrf	??_CantaPartAlta^0,c
  4551  000B18  2A62               	incf	??_CantaPartAlta^0,f,c
  4552  000B1A  D001               	goto	u1448
  4553  000B1C                     u1430:
  4554  000B1C  6A62               	clrf	??_CantaPartAlta^0,c
  4555  000B1E                     u1448:
  4556  000B1E  4662               	rlncf	??_CantaPartAlta^0,f,c
  4557  000B20  4662               	rlncf	??_CantaPartAlta^0,f,c
  4558  000B22  4662               	rlncf	??_CantaPartAlta^0,f,c
  4559  000B24  508B               	movf	139,w,c	;volatile
  4560  000B26  1862               	xorwf	??_CantaPartAlta^0,w,c
  4561  000B28  0BF7               	andlw	-9
  4562  000B2A  1862               	xorwf	??_CantaPartAlta^0,w,c
  4563  000B2C  6E8B               	movwf	139,c	;volatile
  4564                           
  4565                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  4566  000B2E  AC63               	btfss	CantaPartAlta@c^0,6,c
  4567  000B30  D003               	goto	u1450
  4568  000B32  6A62               	clrf	??_CantaPartAlta^0,c
  4569  000B34  2A62               	incf	??_CantaPartAlta^0,f,c
  4570  000B36  D001               	goto	u1468
  4571  000B38                     u1450:
  4572  000B38  6A62               	clrf	??_CantaPartAlta^0,c
  4573  000B3A                     u1468:
  4574  000B3A  4662               	rlncf	??_CantaPartAlta^0,f,c
  4575  000B3C  4662               	rlncf	??_CantaPartAlta^0,f,c
  4576  000B3E  508B               	movf	139,w,c	;volatile
  4577  000B40  1862               	xorwf	??_CantaPartAlta^0,w,c
  4578  000B42  0BFB               	andlw	-5
  4579  000B44  1862               	xorwf	??_CantaPartAlta^0,w,c
  4580  000B46  6E8B               	movwf	139,c	;volatile
  4581                           
  4582                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  4583  000B48  AA63               	btfss	CantaPartAlta@c^0,5,c
  4584  000B4A  D003               	goto	u1470
  4585  000B4C  6A62               	clrf	??_CantaPartAlta^0,c
  4586  000B4E  2A62               	incf	??_CantaPartAlta^0,f,c
  4587  000B50  D001               	goto	u1488
  4588  000B52                     u1470:
  4589  000B52  6A62               	clrf	??_CantaPartAlta^0,c
  4590  000B54                     u1488:
  4591  000B54  4662               	rlncf	??_CantaPartAlta^0,f,c
  4592  000B56  508B               	movf	139,w,c	;volatile
  4593  000B58  1862               	xorwf	??_CantaPartAlta^0,w,c
  4594  000B5A  0BFD               	andlw	-3
  4595  000B5C  1862               	xorwf	??_CantaPartAlta^0,w,c
  4596  000B5E  6E8B               	movwf	139,c	;volatile
  4597                           
  4598                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  4599  000B60  A863               	btfss	CantaPartAlta@c^0,4,c
  4600  000B62  D003               	goto	u1490
  4601  000B64  6A62               	clrf	??_CantaPartAlta^0,c
  4602  000B66  2A62               	incf	??_CantaPartAlta^0,f,c
  4603  000B68  D001               	goto	u1508
  4604  000B6A                     u1490:
  4605  000B6A  6A62               	clrf	??_CantaPartAlta^0,c
  4606  000B6C                     u1508:
  4607  000B6C  508B               	movf	139,w,c	;volatile
  4608  000B6E  1862               	xorwf	??_CantaPartAlta^0,w,c
  4609  000B70  0BFE               	andlw	-2
  4610  000B72  1862               	xorwf	??_CantaPartAlta^0,w,c
  4611  000B74  6E8B               	movwf	139,c	;volatile
  4612  000B76  0012               	return		;funcret
  4613  000B78                     __end_of_CantaPartAlta:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function _Espera *****************
  4617 ;; Defined at:
  4618 ;;		line 159 in file "LcTLCD.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  Timer           1    wreg     unsigned char 
  4621 ;;  ms              2   12[COMRAM] int 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  Timer           1   15[COMRAM] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1
  4633 ;;      Params:         2       0       0
  4634 ;;      Locals:         1       0       0
  4635 ;;      Temps:          1       0       0
  4636 ;;      Totals:         4       0       0
  4637 ;;Total ram usage:        4 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; Hardware stack levels required when called: 3
  4640 ;; This function calls:
  4641 ;;		_TiGetTics
  4642 ;;		_TiResetTics
  4643 ;; This function is called by:
  4644 ;;		_LcInit
  4645 ;;		_LcClear
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text39
  4650  000F14                     __ptext39:
  4651                           	callstack 0
  4652  000F14                     _Espera:
  4653                           	callstack 25
  4654                           
  4655                           ;incstack = 0
  4656                           ;Espera@Timer stored from wreg
  4657  000F14  6E6C               	movwf	Espera@Timer^0,c
  4658                           
  4659                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  4660  000F16  506C               	movf	Espera@Timer^0,w,c
  4661  000F18  ECBA  F007         	call	_TiResetTics
  4662  000F1C                     l2262:
  4663  000F1C  506C               	movf	Espera@Timer^0,w,c
  4664  000F1E  EC50  F007         	call	_TiGetTics
  4665  000F22  5069               	movf	Espera@ms^0,w,c
  4666  000F24  5C62               	subwf	?_TiGetTics^0,w,c
  4667  000F26  5063               	movf	(?_TiGetTics+1)^0,w,c
  4668  000F28  0A80               	xorlw	128
  4669  000F2A  6E6B               	movwf	??_Espera^0,c
  4670  000F2C  506A               	movf	(Espera@ms+1)^0,w,c
  4671  000F2E  0A80               	xorlw	128
  4672  000F30  586B               	subwfb	??_Espera^0,w,c
  4673  000F32  B0D8               	btfsc	status,0,c
  4674  000F34  0012               	return	
  4675  000F36  D7F2               	goto	l2262
  4676  000F38                     __end_of_Espera:
  4677                           	callstack 0
  4678                           
  4679 ;; *************** function _TiResetTics *****************
  4680 ;; Defined at:
  4681 ;;		line 55 in file "TiTTimer.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  Handle          1    wreg     unsigned char 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;  Handle          1    5[COMRAM] unsigned char 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1
  4695 ;;      Params:         0       0       0
  4696 ;;      Locals:         1       0       0
  4697 ;;      Temps:          0       0       0
  4698 ;;      Totals:         1       0       0
  4699 ;;Total ram usage:        1 bytes
  4700 ;; Hardware stack levels used: 1
  4701 ;; Hardware stack levels required when called: 2
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_Espera
  4706 ;;		_WaitForBusy
  4707 ;;		_SMotor
  4708 ;;		_TeTeclat
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text40
  4713  000F74                     __ptext40:
  4714                           	callstack 0
  4715  000F74                     _TiResetTics:
  4716                           	callstack 25
  4717                           
  4718                           ;incstack = 0
  4719                           ;TiResetTics@Handle stored from wreg
  4720  000F74  6E62               	movwf	TiResetTics@Handle^0,c
  4721                           
  4722                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  4723  000F76  5062               	movf	TiResetTics@Handle^0,w,c
  4724  000F78  0D03               	mullw	3
  4725  000F7A  50F3               	movf	243,w,c
  4726  000F7C  0F01               	addlw	low _s_Timers
  4727  000F7E  6ED9               	movwf	fsr2l,c
  4728  000F80  6ADA               	clrf	fsr2h,c
  4729  000F82  C022  FFDE         	movff	_h_Tics,postinc2
  4730  000F86  C023  FFDD         	movff	_h_Tics+1,postdec2
  4731  000F8A  0012               	return		;funcret
  4732  000F8C                     __end_of_TiResetTics:
  4733                           	callstack 0
  4734                           
  4735 ;; *************** function _TiGetTics *****************
  4736 ;; Defined at:
  4737 ;;		line 61 in file "TiTTimer.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  Handle          1    wreg     unsigned char 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  Handle          1    9[COMRAM] unsigned char 
  4742 ;;  actual          2   10[COMRAM] volatile unsigned int 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  2    5[COMRAM] int 
  4745 ;; Registers used:
  4746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1
  4752 ;;      Params:         2       0       0
  4753 ;;      Locals:         3       0       0
  4754 ;;      Temps:          2       0       0
  4755 ;;      Totals:         7       0       0
  4756 ;;Total ram usage:        7 bytes
  4757 ;; Hardware stack levels used: 1
  4758 ;; Hardware stack levels required when called: 2
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_Espera
  4763 ;;		_WaitForBusy
  4764 ;;		_SMotor
  4765 ;;		_TeTeclat
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text41
  4770  000EA0                     __ptext41:
  4771                           	callstack 0
  4772  000EA0                     _TiGetTics:
  4773                           	callstack 25
  4774                           
  4775                           ;incstack = 0
  4776                           ;TiGetTics@Handle stored from wreg
  4777  000EA0  6E66               	movwf	TiGetTics@Handle^0,c
  4778                           
  4779                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  4780  000EA2  C022  F067         	movff	_h_Tics,TiGetTics@actual	;volatile
  4781  000EA6  C023  F068         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  4782                           
  4783                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  4784  000EAA  5066               	movf	TiGetTics@Handle^0,w,c
  4785  000EAC  0D03               	mullw	3
  4786  000EAE  50F3               	movf	243,w,c
  4787  000EB0  0F01               	addlw	low _s_Timers
  4788  000EB2  6ED9               	movwf	fsr2l,c
  4789  000EB4  6ADA               	clrf	fsr2h,c
  4790  000EB6  CFDE F064          	movff	postinc2,??_TiGetTics
  4791  000EBA  CFDD F065          	movff	postdec2,??_TiGetTics+1
  4792  000EBE  5064               	movf	??_TiGetTics^0,w,c
  4793  000EC0  5C67               	subwf	TiGetTics@actual^0,w,c	;volatile
  4794  000EC2  6E62               	movwf	?_TiGetTics^0,c
  4795  000EC4  5065               	movf	(??_TiGetTics+1)^0,w,c
  4796  000EC6  5868               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  4797  000EC8  6E63               	movwf	(?_TiGetTics+1)^0,c
  4798  000ECA  0012               	return		;funcret
  4799  000ECC                     __end_of_TiGetTics:
  4800                           	callstack 0
  4801                           
  4802 ;; *************** function _EscriuPrimeraOrdre *****************
  4803 ;; Defined at:
  4804 ;;		line 228 in file "LcTLCD.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  ordre           1    wreg     unsigned char 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  ordre           1    6[COMRAM] unsigned char 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2, status,0
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1
  4818 ;;      Params:         0       0       0
  4819 ;;      Locals:         1       0       0
  4820 ;;      Temps:          1       0       0
  4821 ;;      Totals:         2       0       0
  4822 ;;Total ram usage:        2 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 2
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_LcInit
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text42
  4833  000A2E                     __ptext42:
  4834                           	callstack 0
  4835  000A2E                     _EscriuPrimeraOrdre:
  4836                           	callstack 27
  4837                           
  4838                           ;incstack = 0
  4839                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4840  000A2E  6E63               	movwf	EscriuPrimeraOrdre@ordre^0,c
  4841                           
  4842                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  4843  000A30  9694               	bcf	148,3,c	;volatile
  4844  000A32  9494               	bcf	148,2,c	;volatile
  4845  000A34  9294               	bcf	148,1,c	;volatile
  4846  000A36  9094               	bcf	148,0,c	;volatile
  4847  000A38  9A8B               	bcf	139,5,c	;volatile
  4848  000A3A  9E8C               	bcf	140,7,c	;volatile
  4849                           
  4850                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  4851  000A3C  888B               	bsf	139,4,c	;volatile
  4852  000A3E  888B               	bsf	139,4,c	;volatile
  4853                           
  4854                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  4855  000A40  A663               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4856  000A42  D003               	goto	u230
  4857  000A44  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4858  000A46  2A62               	incf	??_EscriuPrimeraOrdre^0,f,c
  4859  000A48  D001               	goto	u248
  4860  000A4A                     u230:
  4861  000A4A  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4862  000A4C                     u248:
  4863  000A4C  4662               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4864  000A4E  4662               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4865  000A50  4662               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4866  000A52  508B               	movf	139,w,c	;volatile
  4867  000A54  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4868  000A56  0BF7               	andlw	-9
  4869  000A58  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4870  000A5A  6E8B               	movwf	139,c	;volatile
  4871                           
  4872                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  4873  000A5C  A463               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4874  000A5E  D003               	goto	u250
  4875  000A60  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4876  000A62  2A62               	incf	??_EscriuPrimeraOrdre^0,f,c
  4877  000A64  D001               	goto	u268
  4878  000A66                     u250:
  4879  000A66  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4880  000A68                     u268:
  4881  000A68  4662               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4882  000A6A  4662               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4883  000A6C  508B               	movf	139,w,c	;volatile
  4884  000A6E  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4885  000A70  0BFB               	andlw	-5
  4886  000A72  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4887  000A74  6E8B               	movwf	139,c	;volatile
  4888                           
  4889                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  4890  000A76  A263               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4891  000A78  D003               	goto	u270
  4892  000A7A  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4893  000A7C  2A62               	incf	??_EscriuPrimeraOrdre^0,f,c
  4894  000A7E  D001               	goto	u288
  4895  000A80                     u270:
  4896  000A80  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4897  000A82                     u288:
  4898  000A82  4662               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4899  000A84  508B               	movf	139,w,c	;volatile
  4900  000A86  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4901  000A88  0BFD               	andlw	-3
  4902  000A8A  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4903  000A8C  6E8B               	movwf	139,c	;volatile
  4904                           
  4905                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  4906  000A8E  A063               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4907  000A90  D003               	goto	u290
  4908  000A92  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4909  000A94  2A62               	incf	??_EscriuPrimeraOrdre^0,f,c
  4910  000A96  D001               	goto	u308
  4911  000A98                     u290:
  4912  000A98  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4913  000A9A                     u308:
  4914  000A9A  508B               	movf	139,w,c	;volatile
  4915  000A9C  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4916  000A9E  0BFE               	andlw	-2
  4917  000AA0  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4918  000AA2  6E8B               	movwf	139,c	;volatile
  4919                           
  4920                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  4921  000AA4  988B               	bcf	139,4,c	;volatile
  4922  000AA6  0012               	return		;funcret
  4923  000AA8                     __end_of_EscriuPrimeraOrdre:
  4924                           	callstack 0
  4925                           
  4926 ;; *************** function _high_rsi *****************
  4927 ;; Defined at:
  4928 ;;		line 15 in file "main.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      void 
  4935 ;; Registers used:
  4936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1
  4942 ;;      Params:         0       0       0
  4943 ;;      Locals:         0       0       0
  4944 ;;      Temps:          4       0       0
  4945 ;;      Totals:         4       0       0
  4946 ;;Total ram usage:        4 bytes
  4947 ;; Hardware stack levels used: 1
  4948 ;; Hardware stack levels required when called: 1
  4949 ;; This function calls:
  4950 ;;		__TiRSITimer
  4951 ;; This function is called by:
  4952 ;;		Interrupt level 2
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	intcode
  4957  000008                     __pintcode:
  4958                           	callstack 0
  4959  000008                     _high_rsi:
  4960                           	callstack 24
  4961                           
  4962                           ;incstack = 0
  4963  000008  8274               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4964  00000A  CFD9 F05E          	movff	fsr2l,??_high_rsi
  4965  00000E  CFDA F05F          	movff	fsr2h,??_high_rsi+1
  4966  000012  CFF3 F060          	movff	prodl,??_high_rsi+2
  4967  000016  CFF4 F061          	movff	prodh,??_high_rsi+3
  4968                           
  4969                           ;main.c: 16:     LATBbits.LATB0 = 0;
  4970  00001A  ECBC  F005         	call	__TiRSITimer	;wreg free
  4971  00001E  C061  FFF4         	movff	??_high_rsi+3,prodh
  4972  000022  C060  FFF3         	movff	??_high_rsi+2,prodl
  4973  000026  C05F  FFDA         	movff	??_high_rsi+1,fsr2h
  4974  00002A  C05E  FFD9         	movff	??_high_rsi,fsr2l
  4975  00002E  9274               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4976  000030  0011               	retfie		f
  4977  000032                     __end_of_high_rsi:
  4978                           	callstack 0
  4979                           
  4980 ;; *************** function __TiRSITimer *****************
  4981 ;; Defined at:
  4982 ;;		line 37 in file "TiTTimer.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;		None
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;		None
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  1    wreg      void 
  4989 ;; Registers used:
  4990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMRAM   BANK0   BANK1
  4996 ;;      Params:         0       0       0
  4997 ;;      Locals:         0       0       0
  4998 ;;      Temps:          1       0       0
  4999 ;;      Totals:         1       0       0
  5000 ;;Total ram usage:        1 bytes
  5001 ;; Hardware stack levels used: 1
  5002 ;; This function calls:
  5003 ;;		Nothing
  5004 ;; This function is called by:
  5005 ;;		_high_rsi
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text44
  5010  000B78                     __ptext44:
  5011                           	callstack 0
  5012  000B78                     __TiRSITimer:
  5013                           	callstack 24
  5014                           
  5015                           ;TiTTimer.c: 39:     TMR0H = 223;
  5016                           
  5017                           ;incstack = 0
  5018  000B78  0EDF               	movlw	223
  5019  000B7A  6ED7               	movwf	215,c	;volatile
  5020                           
  5021                           ;TiTTimer.c: 40:     TMR0L = 148;
  5022  000B7C  0E94               	movlw	148
  5023  000B7E  6ED6               	movwf	214,c	;volatile
  5024                           
  5025                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  5026  000B80  94F2               	bcf	242,2,c	;volatile
  5027                           
  5028                           ;TiTTimer.c: 42:     h_Tics++;
  5029  000B82  4A22               	infsnz	_h_Tics^0,f,c
  5030  000B84  2A23               	incf	(_h_Tics+1)^0,f,c
  5031                           
  5032                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  5033  000B86  0E48               	movlw	72
  5034  000B88  5C22               	subwf	_h_Tics^0,w,c
  5035  000B8A  0EEE               	movlw	238
  5036  000B8C  5823               	subwfb	(_h_Tics+1)^0,w,c
  5037  000B8E  A0D8               	btfss	status,0,c
  5038  000B90  0012               	return	
  5039                           
  5040                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  5041  000B92  0E00               	movlw	0
  5042  000B94  6E2C               	movwf	_counter^0,c
  5043  000B96                     i2l1578:
  5044  000B96  0E07               	movlw	7
  5045  000B98  642C               	cpfsgt	_counter^0,c
  5046  000B9A  D001               	goto	i2l1582
  5047  000B9C  D015               	goto	i2l1590
  5048  000B9E                     i2l1582:
  5049                           
  5050                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  5051  000B9E  502C               	movf	_counter^0,w,c
  5052  000BA0  0D03               	mullw	3
  5053  000BA2  50F3               	movf	243,w,c
  5054  000BA4  0F03               	addlw	low (_s_Timers+2)
  5055  000BA6  6ED9               	movwf	fsr2l,c
  5056  000BA8  6ADA               	clrf	fsr2h,c
  5057  000BAA  04DE               	decf	postinc2,w,c
  5058  000BAC  A4D8               	btfss	status,2,c
  5059  000BAE  D00A               	goto	i2l1586
  5060                           
  5061                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  5062  000BB0  502C               	movf	_counter^0,w,c
  5063  000BB2  0D03               	mullw	3
  5064  000BB4  50F3               	movf	243,w,c
  5065  000BB6  0F01               	addlw	low _s_Timers
  5066  000BB8  6ED9               	movwf	fsr2l,c
  5067  000BBA  6ADA               	clrf	fsr2h,c
  5068  000BBC  5022               	movf	_h_Tics^0,w,c
  5069  000BBE  5EDE               	subwf	postinc2,f,c
  5070  000BC0  5023               	movf	(_h_Tics+1)^0,w,c
  5071  000BC2  5ADD               	subwfb	postdec2,f,c
  5072  000BC4                     i2l1586:
  5073                           
  5074                           ;TiTTimer.c: 50:         }
  5075  000BC4  2A2C               	incf	_counter^0,f,c
  5076  000BC6  D7E7               	goto	i2l1578
  5077  000BC8                     i2l1590:
  5078                           
  5079                           ;TiTTimer.c: 51:         h_Tics=0;
  5080  000BC8  0E00               	movlw	0
  5081  000BCA  6E23               	movwf	(_h_Tics+1)^0,c
  5082  000BCC  0E00               	movlw	0
  5083  000BCE  6E22               	movwf	_h_Tics^0,c
  5084  000BD0  0012               	return		;funcret
  5085  000BD2                     __end_of__TiRSITimer:
  5086                           	callstack 0
  5087                           
  5088                           	psect	rparam
  5089  0000                     
  5090                           	psect	temp
  5091  000074                     btemp:
  5092                           	callstack 0
  5093  000074                     	ds	1
  5094  0000                     int$flags	set	btemp
  5095  0000                     wtemp8	set	btemp+1
  5096  0000                     ttemp5	set	btemp+1
  5097  0000                     ttemp6	set	btemp+4
  5098  0000                     ttemp7	set	btemp+8
  5099                           
  5100                           	psect	idloc
  5101                           
  5102                           ;Config register IDLOC0 @ 0x200000
  5103                           ;	unspecified, using default values
  5104  200000                     	org	2097152
  5105  200000  FF                 	db	255
  5106                           
  5107                           ;Config register IDLOC1 @ 0x200001
  5108                           ;	unspecified, using default values
  5109  200001                     	org	2097153
  5110  200001  FF                 	db	255
  5111                           
  5112                           ;Config register IDLOC2 @ 0x200002
  5113                           ;	unspecified, using default values
  5114  200002                     	org	2097154
  5115  200002  FF                 	db	255
  5116                           
  5117                           ;Config register IDLOC3 @ 0x200003
  5118                           ;	unspecified, using default values
  5119  200003                     	org	2097155
  5120  200003  FF                 	db	255
  5121                           
  5122                           ;Config register IDLOC4 @ 0x200004
  5123                           ;	unspecified, using default values
  5124  200004                     	org	2097156
  5125  200004  FF                 	db	255
  5126                           
  5127                           ;Config register IDLOC5 @ 0x200005
  5128                           ;	unspecified, using default values
  5129  200005                     	org	2097157
  5130  200005  FF                 	db	255
  5131                           
  5132                           ;Config register IDLOC6 @ 0x200006
  5133                           ;	unspecified, using default values
  5134  200006                     	org	2097158
  5135  200006  FF                 	db	255
  5136                           
  5137                           ;Config register IDLOC7 @ 0x200007
  5138                           ;	unspecified, using default values
  5139  200007                     	org	2097159
  5140  200007  FF                 	db	255
  5141                           
  5142                           	psect	config
  5143                           
  5144                           ; Padding undefined space
  5145  300000                     	org	3145728
  5146  300000  FF                 	db	255
  5147                           
  5148                           ;Config register CONFIG1H @ 0x300001
  5149                           ;	Oscillator
  5150                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  5151                           ;	Fail-Safe Clock Monitor Enable bit
  5152                           ;	FCMEN = 0x0, unprogrammed default
  5153                           ;	Internal/External Oscillator Switchover bit
  5154                           ;	IESO = 0x0, unprogrammed default
  5155  300001                     	org	3145729
  5156  300001  06                 	db	6
  5157                           
  5158                           ;Config register CONFIG2L @ 0x300002
  5159                           ;	unspecified, using default values
  5160                           ;	Power-up Timer Enable bit
  5161                           ;	PWRT = 0x1, unprogrammed default
  5162                           ;	Brown-out Reset Enable bits
  5163                           ;	BOR = 0x3, unprogrammed default
  5164                           ;	Brown-out Reset Voltage bits
  5165                           ;	BORV = 0x3, unprogrammed default
  5166  300002                     	org	3145730
  5167  300002  1F                 	db	31
  5168                           
  5169                           ;Config register CONFIG2H @ 0x300003
  5170                           ;	Watchdog Timer Enable bit
  5171                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5172                           ;	Watchdog Timer Postscale Select bits
  5173                           ;	WDTPS = 0xF, unprogrammed default
  5174  300003                     	org	3145731
  5175  300003  1E                 	db	30
  5176                           
  5177                           ; Padding undefined space
  5178  300004                     	org	3145732
  5179  300004  FF                 	db	255
  5180                           
  5181                           ;Config register CONFIG3H @ 0x300005
  5182                           ;	CCP2 MUX bit
  5183                           ;	CCP2MX = 0x1, unprogrammed default
  5184                           ;	PORTB A/D Enable bit
  5185                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  5186                           ;	Low-Power Timer1 Oscillator Enable bit
  5187                           ;	LPT1OSC = 0x0, unprogrammed default
  5188                           ;	MCLR Pin Enable bit
  5189                           ;	MCLRE = 0x1, unprogrammed default
  5190  300005                     	org	3145733
  5191  300005  81                 	db	129
  5192                           
  5193                           ;Config register CONFIG4L @ 0x300006
  5194                           ;	Stack Full/Underflow Reset Enable bit
  5195                           ;	STVREN = 0x1, unprogrammed default
  5196                           ;	Single-Supply ICSP Enable bit
  5197                           ;	LVP = OFF, Single-Supply ICSP disabled
  5198                           ;	Boot Block Size Select bits
  5199                           ;	BBSIZ = 0x0, unprogrammed default
  5200                           ;	Extended Instruction Set Enable bit
  5201                           ;	XINST = 0x0, unprogrammed default
  5202                           ;	Background Debugger Enable bit
  5203                           ;	DEBUG = 0x1, unprogrammed default
  5204  300006                     	org	3145734
  5205  300006  81                 	db	129
  5206                           
  5207                           ; Padding undefined space
  5208  300007                     	org	3145735
  5209  300007  FF                 	db	255
  5210                           
  5211                           ;Config register CONFIG5L @ 0x300008
  5212                           ;	unspecified, using default values
  5213                           ;	Code Protection bit
  5214                           ;	CP0 = 0x1, unprogrammed default
  5215                           ;	Code Protection bit
  5216                           ;	CP1 = 0x1, unprogrammed default
  5217  300008                     	org	3145736
  5218  300008  03                 	db	3
  5219                           
  5220                           ;Config register CONFIG5H @ 0x300009
  5221                           ;	unspecified, using default values
  5222                           ;	Boot Block Code Protection bitProtect Boot
  5223                           ;	CPB = 0x1, unprogrammed default
  5224                           ;	Data EEPROM Code Protection bit
  5225                           ;	CPD = 0x1, unprogrammed default
  5226  300009                     	org	3145737
  5227  300009  C0                 	db	192
  5228                           
  5229                           ;Config register CONFIG6L @ 0x30000A
  5230                           ;	unspecified, using default values
  5231                           ;	Write Protection bit
  5232                           ;	WRT0 = 0x1, unprogrammed default
  5233                           ;	Write Protection bit
  5234                           ;	WRT1 = 0x1, unprogrammed default
  5235  30000A                     	org	3145738
  5236  30000A  03                 	db	3
  5237                           
  5238                           ;Config register CONFIG6H @ 0x30000B
  5239                           ;	unspecified, using default values
  5240                           ;	Configuration Register Write Protection bit
  5241                           ;	WRTC = 0x1, unprogrammed default
  5242                           ;	Boot Block Write Protection bit
  5243                           ;	WRTB = 0x1, unprogrammed default
  5244                           ;	Data EEPROM Write Protection bit
  5245                           ;	WRTD = 0x1, unprogrammed default
  5246  30000B                     	org	3145739
  5247  30000B  E0                 	db	224
  5248                           
  5249                           ;Config register CONFIG7L @ 0x30000C
  5250                           ;	unspecified, using default values
  5251                           ;	Table Read Protection bit
  5252                           ;	EBTR0 = 0x1, unprogrammed default
  5253                           ;	Table Read Protection bit
  5254                           ;	EBTR1 = 0x1, unprogrammed default
  5255  30000C                     	org	3145740
  5256  30000C  03                 	db	3
  5257                           
  5258                           ;Config register CONFIG7H @ 0x30000D
  5259                           ;	unspecified, using default values
  5260                           ;	Boot Block Table Read Protection bit
  5261                           ;	EBTRB = 0x1, unprogrammed default
  5262  30000D                     	org	3145741
  5263  30000D  40                 	db	64
  5264                           tosu	equ	0xFFF
  5265                           tosh	equ	0xFFE
  5266                           tosl	equ	0xFFD
  5267                           stkptr	equ	0xFFC
  5268                           pclatu	equ	0xFFB
  5269                           pclath	equ	0xFFA
  5270                           pcl	equ	0xFF9
  5271                           tblptru	equ	0xFF8
  5272                           tblptrh	equ	0xFF7
  5273                           tblptrl	equ	0xFF6
  5274                           tablat	equ	0xFF5
  5275                           prodh	equ	0xFF4
  5276                           prodl	equ	0xFF3
  5277                           indf0	equ	0xFEF
  5278                           postinc0	equ	0xFEE
  5279                           postdec0	equ	0xFED
  5280                           preinc0	equ	0xFEC
  5281                           plusw0	equ	0xFEB
  5282                           fsr0h	equ	0xFEA
  5283                           fsr0l	equ	0xFE9
  5284                           wreg	equ	0xFE8
  5285                           indf1	equ	0xFE7
  5286                           postinc1	equ	0xFE6
  5287                           postdec1	equ	0xFE5
  5288                           preinc1	equ	0xFE4
  5289                           plusw1	equ	0xFE3
  5290                           fsr1h	equ	0xFE2
  5291                           fsr1l	equ	0xFE1
  5292                           bsr	equ	0xFE0
  5293                           indf2	equ	0xFDF
  5294                           postinc2	equ	0xFDE
  5295                           postdec2	equ	0xFDD
  5296                           preinc2	equ	0xFDC
  5297                           plusw2	equ	0xFDB
  5298                           fsr2h	equ	0xFDA
  5299                           fsr2l	equ	0xFD9
  5300                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        27
    BSS         249
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     115
    BANK0           128      0       0
    BANK1           256      0     184

Pointer List with Targets:

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _menu->_LcPutChar
    _LcClear->_LcGotoXY
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8832
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                     _escriureEEPROM
                         _init_ports
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    5145
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                             _SMSoff
                              _SMSon
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     326
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2015
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1372
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1372
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1040
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _LcCursorOff
       _CantaIR
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _WaitForBusy
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriureEEPROM
   _init_ports
   _menu
     _LcClear
       _CantaIR
       _Espera
       _LcGotoXY
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _SMSoff
     _SMSon
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     16      73       1       91.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12B       7        0.0%
DATA                 0      0     12B       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 26 20:37:58 2022

               TiResetTics@Handle 0062                  _loginNOTRegister 039B  
                               _i 0025                                 _j 002B  
       ??_UcheckExistsNotFinished 0062            __end_of_compareStrings 0CB2  
                             l531 0984                               l419 027E  
                             l541 09AC                               l525 0F0C  
                             l534 0992                               l446 03DC  
                             l447 03EE                               l544 09E2  
                             l546 09E8                               l539 09A6  
                             l563 079A                               l564 07AA  
                             l566 07B6                               l589 0E90  
                             u230 0A4A                               u250 0A66  
                             u308 0A9A                               u270 0A80  
                             u248 0A4C                               u290 0A98  
                             u268 0A68                               u288 0A82  
                ??_CantaPartBaixa 0062                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 004D  
                            l1610 0E76                              l1434 0FCC  
                            l2236 0D04                              l2262 0F1C  
                            l1366 0D72                              l1374 0D80  
                            l2334 0C18                              l2326 0BFE  
                            l2510 0584                              l1470 0FC0  
                            l1462 0FB4                              l2328 0C08  
                            l2512 0586                              l2504 056C  
                            l2440 048A                              l1632 0DC2  
                            l1800 09A2                              l2600 0272  
                            l2530 05B2                              l2514 058C  
                            l2370 0C8A                              l2268 0D42  
                            l2524 05A8                              l1636 0DCA  
                            l2364 0C6E                              l2620 02B4  
                            l2612 0294                              l2470 04F8  
                            l2462 04D0                              l1830 0A24  
                            l2630 02D4                              l2392 08C6  
                            l2544 05DC                              l2448 049E  
                            l2640 02FC                              l2538 05CC  
                            l2730 0400                              l2548 05E4  
                            l2492 053C                              l2644 0306  
                            l2628 02CE                              l2486 0526  
                            l2830 069E                              l2822 0688  
                            l2750 07B0                              l2718 03CE  
                            l2670 034A                              l2638 02F6  
                            l2582 0238                              l2568 05F8  
                            l2824 068C                              l2816 0678  
                            l2808 0876                              l2680 0372  
                            l2672 0350                              l2656 031E  
                            l2592 025A                              l2576 0226  
                            l2736 0426                              l2498 0552  
                            l2850 06D2                              l2770 0804  
                            l2754 07C0                              l2682 0378  
                            l2914 0CDC                              l2860 06EC  
                            l2844 06BC                              l2828 0698  
                            l2780 0824                              l2764 07F4  
                            l2870 0728                              l2838 06AE  
                            l2686 0382                              l2598 026C  
                            l2880 073E                              l2864 06F8  
                            l2856 06E0                              l2784 0836  
                            l2768 07FE                              l2890 0756  
                            l2794 085A                              l2698 039A  
                            l2884 074A                              l2876 0736  
                            STR_1 020C                              STR_2 0201  
                            STR_3 021B                              STR_4 0214  
                            u2120 032E                              u1430 0B1C  
                            u1510 0AB4                              u2310 07BA  
                            _LATD 000F8C                              u1450 0B38  
                            u1530 0AD0                              u2250 0408  
                            u1508 0B6C                              u2420 063E  
                            u1700 0C96                              u2340 07EE  
                            u2260 0418                              u2252 040A  
                            u1470 0B52                              u1550 0AEA  
                            u1710 0974                              u2430 0648  
                            u2262 041A                              u2190 03AA  
                            u1448 0B1E                              u1528 0AB6  
                            u2440 0658                              u1490 0B6A  
                            u1570 0B02                              u1810 04EE  
                            u2450 0668                              u2355 07F0  
                            u1468 0B3A                              u1548 0AD2  
                            u2436 064A                              u2428 0640  
                            u2446 065A                              u1488 0B54  
                            u1568 0AEC                              u2456 066A  
                            u1588 0B04                              u1940 05BA  
                            u1950 05D4                              u1870 054C  
                 ??_SsetNovaTecla 0062                              _Rows 0038  
                            _main 0CB2                              _menu 0224  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0074  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 0EF0                              start 0032  
                 __end_of_CantaIR 0E42                     LcInit@columns 006D  
                    ___param_bank 000000                       Espera@Timer 006C  
                           ?_main 005D           __size_of_escriureEEPROM 002E  
                           ?_menu 005D                             _EEADR 000FA9  
                   ??_TiInitTimer 0062                             _T0CON 000FD5  
                 ?_compareStrings 0062                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _LcLCD 0E42  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _SMSon 1014                       _MNovaLletra 1004  
                           _Minit 100C                             _Sinit 0FFC  
                           _Timer 0034                             _Uinit 097A  
                           _s_ptr 0033                             _nou_s 039D  
                     _LcCursorOff 0FD0       __size_of_escriureCharEEPROM 0024  
                  __pbitbssCOMRAM 0398                             tablat 000FF5  
                     _LcNewString 0FDC                     ??_TiResetTics 0062  
                           ttemp5 0075                             ttemp6 0078  
                           ttemp7 007C                             status 000FD8  
                           wtemp8 0075     __size_of_UcheckExistsGetError 000C  
                __end_of_LcGotoXY 0D6C                  __end_of_LcLliure 0FD0  
                   ??__TiRSITimer 005D                        _TiGetTimer 0D6C  
         EscriuPrimeraOrdre@ordre 0063                   __initialization 0C24  
              __size_of_CantaData 0032                      __end_of_main 0CF2  
                    __end_of_menu 0488                  __end_of_TeTeclat 0798  
                   _indexNextUser 0026                            ??_main 0073  
                          ??_menu 0071                __size_of_LcPutChar 0052  
                   __activetblptr 000002                            ?_LcLCD 005D  
                          ?_SMSon 005D                            ?_Minit 005D  
                          ?_Sinit 005D                            ?_Uinit 005D  
             __end_of_TiInitTimer 0DDE                            _EEDATA 000FA8  
                          _EECON2 000FA7                         ??_LcClear 0070  
                       ??_CantaIR 0064                            i2l1590 0BC8  
                          i2l1582 0B9E                            i2l1586 0BC4  
                          i2l1578 0B96                    LcGotoXY@Fisics 006B  
                  LcGotoXY@Column 006F                     ??_WaitForBusy 0069  
              __size_of_TiGetTics 002C                    _sumaPulsacions 0032  
                          _SMSoff 101A                            _LcInit 08A0  
                  _UgetNumUsuaris 1020                            _SMotor 0488  
             escriureCharEEPROM@c 0063                            _TeInit 0FF4  
                          _Espera 0F14                      _LcGotoXY$342 006D  
                          _RowAct 0036               __end_of_TiResetTics 0F8C  
                          Uinit@i 0064                            Uinit@j 0065  
                __end_of_high_rsi 0032                            _h_Tics 0022  
             __end_of__TiRSITimer 0BD2                            clear_0 0C4A  
                          clear_1 0C58                        _UenviaChar 0F9C  
                          isa$std 000001                        UenviaPas@c 0063  
     __size_of_EscriuPrimeraOrdre 007A                      __pdataCOMRAM 0042  
          __size_of_CantaPartAlta 0068                __size_of_UenviaPas 0010  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentUsrIndex 0028                 __end_of_CantaData 0E10  
                    TeTeclat@cols 002E                     ?_UcheckExists 005D  
                      __accesstop 0080           __end_of__initialization 0C5E  
          __end_of_UgetNumUsuaris 1024                 __end_of_LcPutChar 0C24  
                   ___rparam_used 000001                     __end_of_LcLCD 0E72  
                     ?_TiGetTimer 005D                     __end_of_SMSon 101A  
                  __pcstackCOMRAM 005D                     __end_of_Minit 1014  
             __end_of_WaitForBusy 0D32                     __end_of_Sinit 1004  
                   __end_of_Uinit 0A2E                    _escriureEEPROM 0E72  
               __end_of_TiGetTics 0ECC                       _TiInitTimer 0DA6  
                         ??_LcLCD 0071                           ??_SMSon 0062  
                       ?_LcGotoXY 006A                         ?_LcLliure 005D  
                         ??_Minit 0063                           ??_Sinit 0063  
                         ??_Uinit 0062                    ??_UcheckExists 0062  
                      __pbssBANK1 0100                         ?_TeTeclat 005D  
                     _TiResetTics 0F74                   ?_UgetNumUsuaris 005D  
                   ??_UmotorUsers 0067                           ?_SMSoff 005D  
                         ?_LcInit 006D                     _CantaPartAlta 0B10  
                         ?_SMotor 005D                           ?_TeInit 005D  
                         ?_Espera 0069                 __end_of_UenviaPas 0F9C  
                     __TiRSITimer 0B78                  ??_compareStrings 0065  
          __end_of_escriureEEPROM 0EA0                       ?_UenviaChar 0062  
          __size_of_MsetNovaTecla 0008                           LcInit@i 006F  
                      ??_LcGotoXY 006B                      ?_MNovaLletra 005D  
                      ??_LcLliure 0062               __size_of_TiGetTimer 003A  
                    ?_LcCursorOff 005D                         ?_high_rsi 005D  
                         _LcClear 0ECC                           _CantaIR 0E10  
                    ?_LcNewString 0062                        ??_TeTeclat 0069  
                     _WaitForBusy 0CF2                    ?_CantaPartAlta 005D  
                         _Columns 0037             __end_of_SsetNovaTecla 0FEC  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00DA  
                         __Hparam 0000                   __size_of_SMotor 01AC  
                 __size_of_TeInit 0008                   __size_of_Espera 0024  
                         __Lparam 0000               __end_of_UmotorUsers 08A0  
        ?_UcheckExistsNotFinished 005D                   ?_escriureEEPROM 005D  
                    __psmallconst 0200                           __pcinit 0C24  
    __end_of_UcheckExistsGetError 0FC4                        _init_ports 0F38  
                         __ramtop 0200                           __ptext0 0CB2  
                         __ptext1 0224                           __ptext2 1020  
                         __ptext3 0F8C                           __ptext4 0F9C  
                         __ptext5 0FAC                           __ptext6 0FB8  
                         __ptext7 1024                           __ptext8 1014  
                         __ptext9 101A                         _T0CONbits 000FD5  
                       CantaIR@IR 0064                           _counter 002C  
                     UenviaChar@c 0063        __end_of_escriureCharEEPROM 0F14  
                LcNewString@new_s 0062                   WaitForBusy@Busy 0069  
                     Uinit@j_1016 0066                        ??_high_rsi 005E  
            end_of_initialization 0C5E                           _usuaris 0100  
         __size_of_CantaPartBaixa 0068                     __Lmediumconst 0000  
                 TiGetTics@Handle 0066                     _MsetNovaTecla 0FEC  
             __size_of_UenviaChar 0010                        _novaLletra 004B  
                 TiGetTics@actual 0067                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                      _numUsuaris 0027              __end_of_UcheckExists 1028  
                   TeTeclat@files 002D                     TeTeclat@state 002F  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                 ??_CantaPartAlta 0062                    ?_MsetNovaTecla 005D  
                       _CantaData 0DDE                       _UmotorUsers 0798  
 __end_of_UcheckExistsNotFinished 0FB8                    __end_of_SMSoff 1020  
                    ??_TiGetTimer 0062                    __end_of_LcInit 097A  
                  __end_of_SMotor 0634                         _LcPutChar 0BD2  
                  __end_of_TeInit 0FFC                    __end_of_Espera 0F38  
      __end_of_EscriuPrimeraOrdre 0AA8                     __pidataCOMRAM 0F58  
                     ?_init_ports 005D                         _ColumnAct 0035  
                    ?_TiInitTimer 005D               start_initialization 0C24  
                       _TiGetTics 0EA0                  ??_UgetNumUsuaris 0062  
                UmotorUsers@state 0024                 __size_of_LcGotoXY 003A  
              __end_of_TiGetTimer 0DA6              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                      ?_TiResetTics 005D  
            __size_of_LcCursorOff 000C                        ?_CantaData 005D  
            _UcheckExistsGetError 0FB8              __size_of_LcNewString 0008  
                        ??_SMSoff 0062                          ??_LcInit 006E  
                       _NovaTecla 004C                 __size_of_TeTeclat 0164  
                        ??_SMotor 0069                          ??_TeInit 0063  
                    ?__TiRSITimer 005D                          ??_Espera 006B  
                      ?_LcPutChar 005D                         _UenviaPas 0F8C  
                    ??_UenviaChar 0063                       __pbssCOMRAM 0001  
                      ?_TiGetTics 0062                   ??_MsetNovaTecla 0062  
                        ?_LcClear 005D                          ?_CantaIR 005D  
                  _CantaPartBaixa 0AA8             ?_UcheckExistsGetError 005D  
               __size_of_high_rsi 002A                      ?_WaitForBusy 005D  
             __size_of_init_ports 0020                MsetNovaTecla@tecla 0062  
              SsetNovaTecla@tecla 0062                __end_of_UenviaChar 0FAC  
                ??_escriureEEPROM 0062             __size_of_UcheckExists 0004  
                       __pintcode 0008                        ?_UenviaPas 0062  
                 CantaPartBaixa@c 0063                       __smallconst 0200  
                  __size_of_LcLCD 0030                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
                  __size_of_Sinit 0008                    __size_of_Uinit 00B4  
          __end_of_CantaPartBaixa 0B10                escriureEEPROM@caca 0062  
                     _do_register 0398                      _UcheckExists 1024  
                     ??_CantaData 0064                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   UenviaChar@pos 0062                _escriureCharEEPROM 0EF0  
                       _novaTecla 004F                       ??_LcPutChar 0070  
                        _RCONbits 000FD0                         _timerMenu 002A  
             ?_escriureCharEEPROM 0062            __size_of_SsetNovaTecla 0008  
                        Espera@ms 0069                          _LcGotoXY 0D32  
                        _LcLliure 0FC4                       ??_TiGetTics 0064  
         __size_of_compareStrings 0046              __size_of_TiInitTimer 0038  
                    _teclaPremuda 0051                       LcGotoXY@Row 006A  
                       copy_data0 0C38              ??_escriureCharEEPROM 0063  
                 ?_CantaPartBaixa 005D            ??_UcheckExistsGetError 0062  
           escriureCharEEPROM@pos 0062                  __size_of_LcClear 0024  
                __size_of_CantaIR 0032                          _TeTeclat 0634  
                    ?_UmotorUsers 005D                        _EECON1bits 000FA6  
            __size_of_TiResetTics 0018                          __Hrparam 0000  
                       menu@state 0029                          __Lrparam 0000  
            __size_of__TiRSITimer 005A                       ??_UenviaPas 0063  
                    ??_init_ports 0062                   _do_check_exists 039A  
                        __ptext10 0FDC                          __ptext11 0FC4  
              _EscriuPrimeraOrdre 0A2E                          __ptext20 0634  
                        __ptext12 0ECC                          __ptext21 0FE4  
                        __ptext13 0F38                          __ptext30 0D32  
                        __ptext22 0FEC                          __ptext14 0E72  
                        __ptext31 0DDE                          __ptext23 0FF4  
                        __ptext15 0798                          __ptext40 0F74  
                        __ptext32 08A0                          __ptext24 0FFC  
                        __ptext16 0EF0                          __ptext41 0EA0  
                        __ptext33 0D6C                          __ptext25 0488  
                        __ptext17 0C6C                          __ptext42 0A2E  
                        __ptext34 0FD0                          __ptext26 1004  
                        __ptext18 097A                          __ptext35 0CF2  
                        __ptext27 100C                          __ptext19 0DA6  
                        __ptext44 0B78                          __ptext36 0E10  
                        __ptext28 0E42                          __ptext37 0AA8  
                        __ptext29 0BD2                          __ptext38 0B10  
                        __ptext39 0F14                    CantaPartAlta@c 0063  
                     _lletraASCII 0050                          _high_rsi 0008  
                        _s_Timers 0001                       _lletraInici 0042  
             ?_EscriuPrimeraOrdre 005D                     __size_of_main 0040  
                   __size_of_menu 0264             __end_of_CantaPartAlta 0B78  
                   CantaData@Data 0064                          _tiTeclat 0030  
              __end_of_init_ports 0F58                          _setSMSon 039C  
                   _SsetNovaTecla 0FE4              __size_of_WaitForBusy 0040  
                        _timerSMS 004E                          isa$xinst 000000  
                        int$flags 0074                      UenviaPas@pos 0062  
            ??_EscriuPrimeraOrdre 0062                        LcInit@rows 006E  
         _UcheckExistsNotFinished 0FAC                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0062                     ??_LcCursorOff 006A  
                   ??_LcNewString 0063                          intlevel2 0000  
                      LcPutChar@c 0070                    ?_SsetNovaTecla 005D  
               MNovaLletra@lletra 0062                   compareStrings@a 0062  
                 compareStrings@b 0063                      _return_error 0399  
                  _compareStrings 0C6C                       _tmpPassword 0019  
             __end_of_MNovaLletra 100C             __end_of_MsetNovaTecla 0FF4  
                     _tmpUsername 0039               __end_of_LcCursorOff 0FDC  
                     SMotor@state 0031           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 0FE4              __size_of_UmotorUsers 0108  
