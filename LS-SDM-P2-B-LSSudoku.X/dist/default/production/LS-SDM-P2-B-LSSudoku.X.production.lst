

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu May 05 11:06:56 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   109  0000                     
   110                           ; Version 2.32
   111                           ; Generated 02/02/2021 GMT
   112                           ; 
   113                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18F4321 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145  0000                     
   146                           	psect	idataCOMRAM
   147  001D9E                     __pidataCOMRAM:
   148                           	callstack 0
   149                           
   150                           ;initializer for _arrayZero
   151  001D9E  30                 	db	48
   152  001D9F  20                 	db	32
   153  001DA0  00                 	db	0
   154                           
   155                           ;initializer for _convertir
   156  001DA1  FA                 	db	250
   157                           
   158                           ;initializer for _novaTeclaSIO
   159  001DA2  FF                 	db	255
   160                           
   161                           ;initializer for _direccioSIO
   162  001DA3  FF                 	db	255
   163                           
   164                           ;initializer for _usuariActualSIO
   165  001DA4  FF                 	db	255
   166                           
   167                           ;initializer for _novaTeclaJOC
   168  001DA5  FF                 	db	255
   169                           
   170                           ;initializer for _usuariJoc
   171  001DA6  FF                 	db	255
   172                           
   173                           ;initializer for GLCDMotor@max2
   174  001DA7  0F                 	db	15
   175                           
   176                           ;initializer for GLCDMotor@max1
   177  001DA8  0F                 	db	15
   178                           
   179                           ;initializer for _usuariLoguejat
   180  001DA9  FF                 	db	255
   181                           
   182                           ;initializer for _novaDireccio
   183  001DAA  FF                 	db	255
   184                           
   185                           ;initializer for _novaLletra
   186  001DAB  FF                 	db	255
   187                           
   188                           ;initializer for _NovaTecla
   189  001DAC  FF                 	db	255
   190                           
   191                           ;initializer for _ultimaTecla
   192  001DAD  FF                 	db	255
   193                           
   194                           ;initializer for _timerSMS
   195  001DAE  FF                 	db	255
   196                           
   197                           ;initializer for _novaTecla
   198  001DAF  FF                 	db	255
   199                           
   200                           ;initializer for _lletraASCII
   201  001DB0  FF                 	db	255
   202                           
   203                           ;initializer for _hora
   204  001DB1  33                 	db	51
   205  001DB2  30                 	db	48
   206  001DB3  3A                 	db	58
   207  001DB4  30                 	db	48
   208  001DB5  30                 	db	48
   209  001DB6  00                 	db	0
   210                           
   211                           ;initializer for _stringScore
   212  001DB7  30                 	db	48
   213  001DB8  30                 	db	48
   214  001DB9  30                 	db	48
   215  001DBA  00                 	db	0
   216                           
   217                           	psect	idataBANK0
   218  001CEA                     __pidataBANK0:
   219                           	callstack 0
   220                           
   221                           ;initializer for _lletraInici
   222  001CEA  41                 	db	65
   223  001CEB  44                 	db	68
   224  001CEC  47                 	db	71
   225  001CED  4A                 	db	74
   226  001CEE  4D                 	db	77
   227  001CEF  50                 	db	80
   228  001CF0  54                 	db	84
   229  001CF1  57                 	db	87
   230  001CF2  00                 	db	0
   231                           
   232                           ;initializer for _teclaPremuda
   233  001CF3  01                 	db	1
   234  001CF4  02                 	db	2
   235  001CF5  03                 	db	3
   236  001CF6  04                 	db	4
   237  001CF7  05                 	db	5
   238  001CF8  06                 	db	6
   239  001CF9  07                 	db	7
   240  001CFA  08                 	db	8
   241  001CFB  09                 	db	9
   242  001CFC  0A                 	db	10
   243  001CFD  00                 	db	0
   244  001CFE  0B                 	db	11
   245                           
   246                           ;initializer for _registerText
   247  001CFF  32                 	db	50
   248  001D00  2E                 	db	46
   249  001D01  52                 	db	82
   250  001D02  45                 	db	69
   251  001D03  47                 	db	71
   252  001D04  49                 	db	73
   253  001D05  53                 	db	83
   254  001D06  54                 	db	84
   255  001D07  45                 	db	69
   256  001D08  52                 	db	82
   257  001D09  00                 	db	0
   258                           
   259                           ;initializer for _loginText
   260  001D0A  31                 	db	49
   261  001D0B  2E                 	db	46
   262  001D0C  4C                 	db	76
   263  001D0D  4F                 	db	79
   264  001D0E  47                 	db	71
   265  001D0F  49                 	db	73
   266  001D10  4E                 	db	78
   267  001D11  00                 	db	0
   268                           
   269                           	psect	smallconst
   270  000200                     __psmallconst:
   271                           	callstack 0
   272  000200  00                 	db	0
   273  000201                     _menuList:
   274                           	callstack 0
   275  000201  31                 	db	49
   276  000202  2E                 	db	46
   277  000203  50                 	db	80
   278  000204  6C                 	db	108
   279  000205  61                 	db	97
   280  000206  79                 	db	121
   281  000207  20                 	db	32
   282  000208  61                 	db	97
   283  000209  20                 	db	32
   284  00020A  47                 	db	71
   285  00020B  61                 	db	97
   286  00020C  6D                 	db	109
   287  00020D  65                 	db	101
   288  00020E  00                 	db	0
   289  00020F  00                 	db	0
   290  000210  00                 	db	0
   291  000211  00                 	db	0
   292  000212  00                 	db	0
   293  000213  00                 	db	0
   294  000214  00                 	db	0
   295  000215  00                 	db	0
   296  000216  00                 	db	0
   297  000217  00                 	db	0
   298  000218  00                 	db	0
   299  000219  00                 	db	0
   300  00021A  00                 	db	0
   301  00021B  00                 	db	0
   302  00021C  00                 	db	0
   303  00021D  00                 	db	0
   304  00021E  32                 	db	50
   305  00021F  2E                 	db	46
   306  000220  4D                 	db	77
   307  000221  6F                 	db	111
   308  000222  64                 	db	100
   309  000223  69                 	db	105
   310  000224  66                 	db	102
   311  000225  79                 	db	121
   312  000226  20                 	db	32
   313  000227  54                 	db	84
   314  000228  69                 	db	105
   315  000229  6D                 	db	109
   316  00022A  65                 	db	101
   317  00022B  00                 	db	0
   318  00022C  00                 	db	0
   319  00022D  00                 	db	0
   320  00022E  00                 	db	0
   321  00022F  00                 	db	0
   322  000230  00                 	db	0
   323  000231  00                 	db	0
   324  000232  00                 	db	0
   325  000233  00                 	db	0
   326  000234  00                 	db	0
   327  000235  00                 	db	0
   328  000236  00                 	db	0
   329  000237  00                 	db	0
   330  000238  00                 	db	0
   331  000239  00                 	db	0
   332  00023A  00                 	db	0
   333  00023B  33                 	db	51
   334  00023C  2E                 	db	46
   335  00023D  53                 	db	83
   336  00023E  68                 	db	104
   337  00023F  6F                 	db	111
   338  000240  77                 	db	119
   339  000241  20                 	db	32
   340  000242  47                 	db	71
   341  000243  65                 	db	101
   342  000244  6E                 	db	110
   343  000245  65                 	db	101
   344  000246  72                 	db	114
   345  000247  61                 	db	97
   346  000248  6C                 	db	108
   347  000249  20                 	db	32
   348  00024A  54                 	db	84
   349  00024B  6F                 	db	111
   350  00024C  70                 	db	112
   351  00024D  20                 	db	32
   352  00024E  35                 	db	53
   353  00024F  20                 	db	32
   354  000250  53                 	db	83
   355  000251  63                 	db	99
   356  000252  6F                 	db	111
   357  000253  72                 	db	114
   358  000254  65                 	db	101
   359  000255  73                 	db	115
   360  000256  20                 	db	32
   361  000257  00                 	db	0
   362  000258  34                 	db	52
   363  000259  2E                 	db	46
   364  00025A  4C                 	db	76
   365  00025B  6F                 	db	111
   366  00025C  67                 	db	103
   367  00025D  6F                 	db	111
   368  00025E  75                 	db	117
   369  00025F  74                 	db	116
   370  000260  00                 	db	0
   371  000261  00                 	db	0
   372  000262  00                 	db	0
   373  000263  00                 	db	0
   374  000264  00                 	db	0
   375  000265  00                 	db	0
   376  000266  00                 	db	0
   377  000267  00                 	db	0
   378  000268  00                 	db	0
   379  000269  00                 	db	0
   380  00026A  00                 	db	0
   381  00026B  00                 	db	0
   382  00026C  00                 	db	0
   383  00026D  00                 	db	0
   384  00026E  00                 	db	0
   385  00026F  00                 	db	0
   386  000270  00                 	db	0
   387  000271  00                 	db	0
   388  000272  00                 	db	0
   389  000273  00                 	db	0
   390  000274  00                 	db	0
   391  000275  35                 	db	53
   392  000276  2E                 	db	46
   393  000277  53                 	db	83
   394  000278  68                 	db	104
   395  000279  6F                 	db	111
   396  00027A  77                 	db	119
   397  00027B  20                 	db	32
   398  00027C  41                 	db	65
   399  00027D  6C                 	db	108
   400  00027E  6C                 	db	108
   401  00027F  20                 	db	32
   402  000280  55                 	db	85
   403  000281  73                 	db	115
   404  000282  65                 	db	101
   405  000283  72                 	db	114
   406  000284  73                 	db	115
   407  000285  00                 	db	0
   408  000286  00                 	db	0
   409  000287  00                 	db	0
   410  000288  00                 	db	0
   411  000289  00                 	db	0
   412  00028A  00                 	db	0
   413  00028B  00                 	db	0
   414  00028C  00                 	db	0
   415  00028D  00                 	db	0
   416  00028E  00                 	db	0
   417  00028F  00                 	db	0
   418  000290  00                 	db	0
   419  000291  00                 	db	0
   420  000292                     __end_of_menuList:
   421                           	callstack 0
   422  0000                     _PIR1bits	set	3998
   423  0000                     _RCREG	set	4014
   424  0000                     _TXREG	set	4013
   425  0000                     _TXSTAbits	set	4012
   426  0000                     _ADCON0bits	set	4034
   427  0000                     _ADRESH	set	4036
   428  0000                     _ADCON2	set	4032
   429  0000                     _ADCON1	set	4033
   430  0000                     _ADCON0	set	4034
   431  0000                     _EECON2	set	4007
   432  0000                     _EEDATA	set	4008
   433  0000                     _EEADR	set	4009
   434  0000                     _T0CONbits	set	4053
   435  0000                     _TMR0L	set	4054
   436  0000                     _TMR0H	set	4055
   437  0000                     _T0CON	set	4053
   438  0000                     _INTCONbits	set	4082
   439  0000                     _RCONbits	set	4048
   440  0000                     _PORTDbits	set	3971
   441  0000                     _SPBRG	set	4015
   442  0000                     _SPBRGH	set	4016
   443  0000                     _BAUDCON	set	4024
   444  0000                     _RCSTA	set	4011
   445  0000                     _TXSTA	set	4012
   446  0000                     _EECON1bits	set	4006
   447  0000                     _LATD	set	3980
   448  0000                     _TRISD	set	3989
   449  0000                     _TRISC	set	3988
   450  0000                     _LATBbits	set	3978
   451  0000                     _TRISB	set	3987
   452  0000                     _TRISA	set	3986
   453  0000                     _PORTCbits	set	3970
   454  0000                     _LATDbits	set	3980
   455  0000                     _LATCbits	set	3979
   456  0000                     _TRISDbits	set	3989
   457  0000                     _TRISCbits	set	3988
   458  000292                     STR_5:
   459  000292  54                 	db	84	;'T'
   460  000293  49                 	db	73	;'I'
   461  000294  4D                 	db	77	;'M'
   462  000295  45                 	db	69	;'E'
   463  000296  20                 	db	32
   464  000297  52                 	db	82	;'R'
   465  000298  45                 	db	69	;'E'
   466  000299  4D                 	db	77	;'M'
   467  00029A  41                 	db	65	;'A'
   468  00029B  49                 	db	73	;'I'
   469  00029C  4E                 	db	78	;'N'
   470  00029D  49                 	db	73	;'I'
   471  00029E  4E                 	db	78	;'N'
   472  00029F  47                 	db	71	;'G'
   473  0002A0  3A                 	db	58	;':'
   474  0002A1  00                 	db	0
   475  0002A2                     STR_4:
   476  0002A2  4D                 	db	77	;'M'
   477  0002A3  6F                 	db	111	;'o'
   478  0002A4  64                 	db	100	;'d'
   479  0002A5  69                 	db	105	;'i'
   480  0002A6  66                 	db	102	;'f'
   481  0002A7  79                 	db	121	;'y'
   482  0002A8  20                 	db	32
   483  0002A9  54                 	db	84	;'T'
   484  0002AA  69                 	db	105	;'i'
   485  0002AB  6D                 	db	109	;'m'
   486  0002AC  65                 	db	101	;'e'
   487  0002AD  3A                 	db	58	;':'
   488  0002AE  00                 	db	0
   489  0002AF                     STR_7:
   490  0002AF  54                 	db	84	;'T'
   491  0002B0  49                 	db	73	;'I'
   492  0002B1  4D                 	db	77	;'M'
   493  0002B2  45                 	db	69	;'E'
   494  0002B3  20                 	db	32
   495  0002B4  4C                 	db	76	;'L'
   496  0002B5  45                 	db	69	;'E'
   497  0002B6  46                 	db	70	;'F'
   498  0002B7  54                 	db	84	;'T'
   499  0002B8  3A                 	db	58	;':'
   500  0002B9  20                 	db	32
   501  0002BA  00                 	db	0
   502  0002BB                     STR_3:
   503  0002BB  42                 	db	66	;'B'
   504  0002BC  59                 	db	89	;'Y'
   505  0002BD  45                 	db	69	;'E'
   506  0002BE  20                 	db	32
   507  0002BF  42                 	db	66	;'B'
   508  0002C0  59                 	db	89	;'Y'
   509  0002C1  45                 	db	69	;'E'
   510  0002C2  20                 	db	32
   511  0002C3  00                 	db	0
   512  0002C4                     STR_8:
   513  0002C4  53                 	db	83	;'S'
   514  0002C5  43                 	db	67	;'C'
   515  0002C6  4F                 	db	79	;'O'
   516  0002C7  52                 	db	82	;'R'
   517  0002C8  45                 	db	69	;'E'
   518  0002C9  3A                 	db	58	;':'
   519  0002CA  20                 	db	32
   520  0002CB  00                 	db	0
   521  0002CC                     STR_6:
   522  0002CC  45                 	db	69	;'E'
   523  0002CD  52                 	db	82	;'R'
   524  0002CE  52                 	db	82	;'R'
   525  0002CF  4F                 	db	79	;'O'
   526  0002D0  52                 	db	82	;'R'
   527  0002D1  53                 	db	83	;'S'
   528  0002D2  3A                 	db	58	;':'
   529  0002D3  00                 	db	0
   530  0002D4                     STR_2:
   531  0002D4  50                 	db	80	;'P'
   532  0002D5  53                 	db	83	;'S'
   533  0002D6  57                 	db	87	;'W'
   534  0002D7  44                 	db	68	;'D'
   535  0002D8  3A                 	db	58	;':'
   536  0002D9  20                 	db	32
   537  0002DA  00                 	db	0
   538  0002DB                     STR_1:
   539  0002DB  55                 	db	85	;'U'
   540  0002DC  53                 	db	83	;'S'
   541  0002DD  45                 	db	69	;'E'
   542  0002DE  52                 	db	82	;'R'
   543  0002DF  3A                 	db	58	;':'
   544  0002E0  20                 	db	32
   545  0002E1  00                 	db	0
   546  0002E2  00                 	db	0	; dummy byte at the end
   547  0000                     
   548                           ; #config settings
   549                           
   550                           	psect	cinit
   551  001762                     __pcinit:
   552                           	callstack 0
   553  001762                     start_initialization:
   554                           	callstack 0
   555  001762                     __initialization:
   556                           	callstack 0
   557                           
   558                           ; Initialize objects allocated to BANK0 (40 bytes)
   559                           ; load TBLPTR registers with __pidataBANK0
   560  001762  0EEA               	movlw	low __pidataBANK0
   561  001764  6EF6               	movwf	tblptrl,c
   562  001766  0E1C               	movlw	high __pidataBANK0
   563  001768  6EF7               	movwf	tblptrh,c
   564  00176A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   565  00176C  6EF8               	movwf	tblptru,c
   566  00176E  EE00  F080         	lfsr	0,__pdataBANK0
   567  001772  EE10 F028          	lfsr	1,40
   568  001776                     copy_data0:
   569  001776  0009               	tblrd		*+
   570  001778  CFF5 FFEE          	movff	tablat,postinc0
   571  00177C  50E5               	movf	postdec1,w,c
   572  00177E  50E1               	movf	fsr1l,w,c
   573  001780  E1FA               	bnz	copy_data0
   574                           
   575                           ; Initialize objects allocated to COMRAM (29 bytes)
   576                           ; load TBLPTR registers with __pidataCOMRAM
   577  001782  0E9E               	movlw	low __pidataCOMRAM
   578  001784  6EF6               	movwf	tblptrl,c
   579  001786  0E1D               	movlw	high __pidataCOMRAM
   580  001788  6EF7               	movwf	tblptrh,c
   581  00178A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   582  00178C  6EF8               	movwf	tblptru,c
   583  00178E  EE00  F045         	lfsr	0,__pdataCOMRAM
   584  001792  EE10 F01D          	lfsr	1,29
   585  001796                     copy_data1:
   586  001796  0009               	tblrd		*+
   587  001798  CFF5 FFEE          	movff	tablat,postinc0
   588  00179C  50E5               	movf	postdec1,w,c
   589  00179E  50E1               	movf	fsr1l,w,c
   590  0017A0  E1FA               	bnz	copy_data1
   591                           
   592                           ; Clear objects allocated to BANK1 (184 bytes)
   593  0017A2  EE01  F000         	lfsr	0,__pbssBANK1
   594  0017A6  0EB8               	movlw	184
   595  0017A8                     clear_0:
   596  0017A8  6AEE               	clrf	postinc0,c
   597  0017AA  06E8               	decf	wreg,f,c
   598  0017AC  E1FD               	bnz	clear_0
   599                           
   600                           ; Clear objects allocated to BANK0 (33 bytes)
   601  0017AE  EE00  F0A8         	lfsr	0,__pbssBANK0
   602  0017B2  0E21               	movlw	33
   603  0017B4                     clear_1:
   604  0017B4  6AEE               	clrf	postinc0,c
   605  0017B6  06E8               	decf	wreg,f,c
   606  0017B8  E1FD               	bnz	clear_1
   607                           
   608                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   609  0017BA  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   610  0017BC  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   611  0017BE  6A77               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   612                           
   613                           ; Clear objects allocated to COMRAM (68 bytes)
   614  0017C0  EE00  F001         	lfsr	0,__pbssCOMRAM
   615  0017C4  0E44               	movlw	68
   616  0017C6                     clear_2:
   617  0017C6  6AEE               	clrf	postinc0,c
   618  0017C8  06E8               	decf	wreg,f,c
   619  0017CA  E1FD               	bnz	clear_2
   620  0017CC                     end_of_initialization:
   621                           	callstack 0
   622  0017CC                     __end_of__initialization:
   623                           	callstack 0
   624  0017CC  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   625  0017CE  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   626  0017D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   627  0017D2  6EF8               	movwf	tblptru,c
   628  0017D4  0100               	movlb	0
   629  0017D6  EFED  F00B         	goto	_main	;jump to C main() function
   630                           
   631                           	psect	bitbssCOMRAM
   632  0003B8                     __pbitbssCOMRAM:
   633                           	callstack 0
   634  0003B8                     _Krebut:
   635                           	callstack 0
   636  0003B8                     	ds	1
   637  0003B9                     _jugantSIO:
   638                           	callstack 0
   639  0003B9                     	ds	1
   640  0003BA                     _jugantJoc:
   641                           	callstack 0
   642  0003BA                     	ds	1
   643  0003BB                     _tempsAcabat:
   644                           	callstack 0
   645  0003BB                     	ds	1
   646  0003BC                     _nouSegon:
   647                           	callstack 0
   648  0003BC                     	ds	1
   649  0003BD                     _jugant:
   650                           	callstack 0
   651  0003BD                     	ds	1
   652  0003BE                     _cap2:
   653                           	callstack 0
   654  0003BE                     	ds	1
   655  0003BF                     _cap1:
   656                           	callstack 0
   657  0003BF                     	ds	1
   658  0003C0                     _newString:
   659                           	callstack 0
   660  0003C0                     	ds	1
   661  0003C1                     _ferMenu:
   662                           	callstack 0
   663  0003C1                     	ds	1
   664  0003C2                     _reproduir:
   665                           	callstack 0
   666  0003C2                     	ds	1
   667  0003C3                     _borram:
   668                           	callstack 0
   669  0003C3                     	ds	1
   670  0003C4                     _do_register:
   671                           	callstack 0
   672  0003C4                     	ds	1
   673  0003C5                     _do_check_exists:
   674                           	callstack 0
   675  0003C5                     	ds	1
   676  0003C6                     _loginNOTRegister:
   677                           	callstack 0
   678  0003C6                     	ds	1
   679  0003C7                     _setSMSon:
   680                           	callstack 0
   681  0003C7                     	ds	1
   682  0003C8                     _nou_s:
   683                           	callstack 0
   684  0003C8                     	ds	1
   685                           
   686                           	psect	bssCOMRAM
   687  000001                     __pbssCOMRAM:
   688                           	callstack 0
   689  000001                     _userPtr:
   690                           	callstack 0
   691  000001                     	ds	2
   692  000003                     _h_Tics:
   693                           	callstack 0
   694  000003                     	ds	2
   695  000005                     _s_ptr:
   696                           	callstack 0
   697  000005                     	ds	2
   698  000007                     motorSIO@state:
   699                           	callstack 0
   700  000007                     	ds	1
   701  000008                     _timerSIO:
   702                           	callstack 0
   703  000008                     	ds	1
   704  000009                     _rebut:
   705                           	callstack 0
   706  000009                     	ds	1
   707  00000A                     motorJoc@state:
   708                           	callstack 0
   709  00000A                     	ds	1
   710  00000B                     _direccioJoc:
   711                           	callstack 0
   712  00000B                     	ds	1
   713  00000C                     motorHora@state:
   714                           	callstack 0
   715  00000C                     	ds	1
   716  00000D                     _segons:
   717                           	callstack 0
   718  00000D                     	ds	1
   719  00000E                     _timerHora:
   720                           	callstack 0
   721  00000E                     	ds	1
   722  00000F                     JoystickMotor@state:
   723                           	callstack 0
   724  00000F                     	ds	1
   725  000010                     _ultimaTeclaAD:
   726                           	callstack 0
   727  000010                     	ds	1
   728  000011                     GLCDMotor@length2:
   729                           	callstack 0
   730  000011                     	ds	1
   731  000012                     GLCDMotor@length1:
   732                           	callstack 0
   733  000012                     	ds	1
   734  000013                     GLCDMotor@k2:
   735                           	callstack 0
   736  000013                     	ds	1
   737  000014                     GLCDMotor@k1:
   738                           	callstack 0
   739  000014                     	ds	1
   740  000015                     GLCDMotor@min2:
   741                           	callstack 0
   742  000015                     	ds	1
   743  000016                     GLCDMotor@min1:
   744                           	callstack 0
   745  000016                     	ds	1
   746  000017                     GLCDMotor@j:
   747                           	callstack 0
   748  000017                     	ds	1
   749  000018                     GLCDMotor@state:
   750                           	callstack 0
   751  000018                     	ds	1
   752  000019                     _menuDaltGLCD:
   753                           	callstack 0
   754  000019                     	ds	1
   755  00001A                     _timerGLCD:
   756                           	callstack 0
   757  00001A                     	ds	1
   758  00001B                     motorAltaveu@state:
   759                           	callstack 0
   760  00001B                     	ds	1
   761  00001C                     _copsNota:
   762                           	callstack 0
   763  00001C                     	ds	1
   764  00001D                     _timerAltaveu:
   765                           	callstack 0
   766  00001D                     	ds	1
   767  00001E                     _nota:
   768                           	callstack 0
   769  00001E                     	ds	1
   770  00001F                     UmotorUsers@state:
   771                           	callstack 0
   772  00001F                     	ds	1
   773  000020                     _j:
   774                           	callstack 0
   775  000020                     	ds	1
   776  000021                     _i:
   777                           	callstack 0
   778  000021                     	ds	1
   779  000022                     _indexNextUserStruct:
   780                           	callstack 0
   781  000022                     	ds	1
   782  000023                     _indexNextUser:
   783                           	callstack 0
   784  000023                     	ds	1
   785  000024                     _numUsuaris:
   786                           	callstack 0
   787  000024                     	ds	1
   788  000025                     _currentUsrIndex:
   789                           	callstack 0
   790  000025                     	ds	1
   791  000026                     menu@state:
   792                           	callstack 0
   793  000026                     	ds	1
   794  000027                     _indexUsuari:
   795                           	callstack 0
   796  000027                     	ds	1
   797  000028                     _menuDalt:
   798                           	callstack 0
   799  000028                     	ds	1
   800  000029                     _timerMenu:
   801                           	callstack 0
   802  000029                     	ds	1
   803  00002A                     _tmp:
   804                           	callstack 0
   805  00002A                     	ds	1
   806  00002B                     _counter:
   807                           	callstack 0
   808  00002B                     	ds	1
   809  00002C                     TeTeclat@files:
   810                           	callstack 0
   811  00002C                     	ds	1
   812  00002D                     TeTeclat@cols:
   813                           	callstack 0
   814  00002D                     	ds	1
   815  00002E                     TeTeclat@state:
   816                           	callstack 0
   817  00002E                     	ds	1
   818  00002F                     _tiTeclat:
   819                           	callstack 0
   820  00002F                     	ds	1
   821  000030                     SMotor@state:
   822                           	callstack 0
   823  000030                     	ds	1
   824  000031                     _zeroTecla:
   825                           	callstack 0
   826  000031                     	ds	1
   827  000032                     _sumaPulsacions:
   828                           	callstack 0
   829  000032                     	ds	1
   830  000033                     _Timer:
   831                           	callstack 0
   832  000033                     	ds	1
   833  000034                     _ColumnAct:
   834                           	callstack 0
   835  000034                     	ds	1
   836  000035                     _RowAct:
   837                           	callstack 0
   838  000035                     	ds	1
   839  000036                     _Columns:
   840                           	callstack 0
   841  000036                     	ds	1
   842  000037                     _Rows:
   843                           	callstack 0
   844  000037                     	ds	1
   845  000038                     _tmpUsername:
   846                           	callstack 0
   847  000038                     	ds	9
   848  000041                     _horaTmp:
   849                           	callstack 0
   850  000041                     	ds	4
   851                           
   852                           	psect	dataCOMRAM
   853  000045                     __pdataCOMRAM:
   854                           	callstack 0
   855  000045                     _arrayZero:
   856                           	callstack 0
   857  000045                     	ds	3
   858  000048                     _convertir:
   859                           	callstack 0
   860  000048                     	ds	1
   861  000049                     _novaTeclaSIO:
   862                           	callstack 0
   863  000049                     	ds	1
   864  00004A                     _direccioSIO:
   865                           	callstack 0
   866  00004A                     	ds	1
   867  00004B                     _usuariActualSIO:
   868                           	callstack 0
   869  00004B                     	ds	1
   870  00004C                     _novaTeclaJOC:
   871                           	callstack 0
   872  00004C                     	ds	1
   873  00004D                     _usuariJoc:
   874                           	callstack 0
   875  00004D                     	ds	1
   876  00004E                     GLCDMotor@max2:
   877                           	callstack 0
   878  00004E                     	ds	1
   879  00004F                     GLCDMotor@max1:
   880                           	callstack 0
   881  00004F                     	ds	1
   882  000050                     _usuariLoguejat:
   883                           	callstack 0
   884  000050                     	ds	1
   885  000051                     _novaDireccio:
   886                           	callstack 0
   887  000051                     	ds	1
   888  000052                     _novaLletra:
   889                           	callstack 0
   890  000052                     	ds	1
   891  000053                     _NovaTecla:
   892                           	callstack 0
   893  000053                     	ds	1
   894  000054                     _ultimaTecla:
   895                           	callstack 0
   896  000054                     	ds	1
   897  000055                     _timerSMS:
   898                           	callstack 0
   899  000055                     	ds	1
   900  000056                     _novaTecla:
   901                           	callstack 0
   902  000056                     	ds	1
   903  000057                     _lletraASCII:
   904                           	callstack 0
   905  000057                     	ds	1
   906  000058                     _hora:
   907                           	callstack 0
   908  000058                     	ds	6
   909  00005E                     _stringScore:
   910                           	callstack 0
   911  00005E                     	ds	4
   912                           
   913                           	psect	bssBANK0
   914  0000A8                     __pbssBANK0:
   915                           	callstack 0
   916  0000A8                     _s_Timers:
   917                           	callstack 0
   918  0000A8                     	ds	24
   919  0000C0                     _tmpPassword:
   920                           	callstack 0
   921  0000C0                     	ds	9
   922                           
   923                           	psect	dataBANK0
   924  000080                     __pdataBANK0:
   925                           	callstack 0
   926  000080                     _lletraInici:
   927                           	callstack 0
   928  000080                     	ds	9
   929  000089                     _teclaPremuda:
   930                           	callstack 0
   931  000089                     	ds	12
   932  000095                     _registerText:
   933                           	callstack 0
   934  000095                     	ds	11
   935  0000A0                     _loginText:
   936                           	callstack 0
   937  0000A0                     	ds	8
   938                           
   939                           	psect	bssBANK1
   940  000100                     __pbssBANK1:
   941                           	callstack 0
   942  000100                     _usuaris:
   943                           	callstack 0
   944  000100                     	ds	184
   945                           
   946                           	psect	cstackBANK0
   947  0000C9                     __pcstackBANK0:
   948                           	callstack 0
   949  0000C9                     ??_motorSIO:
   950  0000C9                     ??_menu:
   951  0000C9                     ??_GLCDMotor:
   952                           
   953                           ; 1 bytes @ 0x0
   954  0000C9                     	ds	2
   955                           
   956                           	psect	cstackCOMRAM
   957  000062                     __pcstackCOMRAM:
   958                           	callstack 0
   959  000062                     
   960                           ; 1 bytes @ 0x0
   961  000062                     	ds	1
   962  000063                     ??_high_rsi:
   963                           
   964                           ; 1 bytes @ 0x1
   965  000063                     	ds	4
   966  000067                     ??_EscriuPrimeraOrdre:
   967  000067                     ??_Uinit:
   968  000067                     ??_UcheckExistsGetError:
   969  000067                     ??_CantaPartAlta:
   970  000067                     ??_CantaPartBaixa:
   971  000067                     ?_TiGetTics:
   972                           	callstack 0
   973  000067                     ?_UgetUserName:
   974                           	callstack 0
   975  000067                     SsetNovaTecla@tecla:
   976                           	callstack 0
   977  000067                     TiResetTics@Handle:
   978                           	callstack 0
   979  000067                     MsetNovaTecla@tecla:
   980                           	callstack 0
   981  000067                     MNovaLletra@lletra:
   982                           	callstack 0
   983  000067                     MNouJoystick@posicio:
   984                           	callstack 0
   985  000067                     UenviaChar@pos:
   986                           	callstack 0
   987  000067                     UenviaPas@pos:
   988                           	callstack 0
   989  000067                     escriureCharEEPROM@pos:
   990                           	callstack 0
   991  000067                     compareStrings@a:
   992                           	callstack 0
   993  000067                     escriureEEPROM@caca:
   994                           	callstack 0
   995  000067                     GLCDMostraMenu@num:
   996                           	callstack 0
   997  000067                     HActualitzaHora@nova:
   998                           	callstack 0
   999  000067                     JJuguem@usuari:
  1000                           	callstack 0
  1001  000067                     JnovaTecla@tecla:
  1002                           	callstack 0
  1003  000067                     JnovaDireccio@dir:
  1004                           	callstack 0
  1005  000067                     conversorJoystick@direc:
  1006                           	callstack 0
  1007  000067                     SIONovaDireccio@num:
  1008                           	callstack 0
  1009  000067                     SIOStartGame@usuari:
  1010                           	callstack 0
  1011  000067                     SIONovaTecla@tecla:
  1012                           	callstack 0
  1013  000067                     CToAConverteix@numero:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x5
  1017  000067                     	ds	1
  1018  000068                     ??_JoystickMotor:
  1019  000068                     CantaPartAlta@c:
  1020                           	callstack 0
  1021  000068                     CantaPartBaixa@c:
  1022                           	callstack 0
  1023  000068                     EscriuPrimeraOrdre@ordre:
  1024                           	callstack 0
  1025  000068                     UenviaChar@c:
  1026                           	callstack 0
  1027  000068                     UenviaPas@c:
  1028                           	callstack 0
  1029  000068                     escriureCharEEPROM@c:
  1030                           	callstack 0
  1031  000068                     compareStrings@b:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x6
  1035  000068                     	ds	1
  1036  000069                     ??_TiGetTics:
  1037  000069                     CantaIR@IR:
  1038                           	callstack 0
  1039  000069                     CantaData@Data:
  1040                           	callstack 0
  1041  000069                     UgetUserName@quin:
  1042                           	callstack 0
  1043  000069                     Uinit@i:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x7
  1047  000069                     	ds	1
  1048  00006A                     ??_compareStrings:
  1049  00006A                     Uinit@j:
  1050                           	callstack 0
  1051  00006A                     LcNewString@new_s:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x8
  1055  00006A                     	ds	1
  1056  00006B                     TiGetTics@Handle:
  1057                           	callstack 0
  1058  00006B                     Uinit@j_1156:
  1059                           	callstack 0
  1060                           
  1061                           ; 1 bytes @ 0x9
  1062  00006B                     	ds	1
  1063  00006C                     ??_UmotorUsers:
  1064  00006C                     TiGetTics@actual:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0xA
  1068  00006C                     	ds	2
  1069  00006E                     ??_SMotor:
  1070  00006E                     ??_motorHora:
  1071  00006E                     ??_motorAltaveu:
  1072  00006E                     ??_TeTeclat:
  1073  00006E                     WaitForBusy@Busy:
  1074                           	callstack 0
  1075  00006E                     Espera@ms:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xC
  1079  00006E                     	ds	1
  1080  00006F                     LcGotoXY@Row:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0xD
  1084  00006F                     	ds	1
  1085  000070                     ??_Espera:
  1086  000070                     LcGotoXY@Fisics:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0xE
  1090  000070                     	ds	1
  1091  000071                     Espera@Timer:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0xF
  1095  000071                     	ds	1
  1096  000072                     LcInit@columns:
  1097                           	callstack 0
  1098  000072                     _LcGotoXY$336:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x10
  1102  000072                     	ds	1
  1103  000073                     LcInit@rows:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x11
  1107  000073                     	ds	1
  1108  000074                     LcGotoXY@Column:
  1109                           	callstack 0
  1110  000074                     LcInit@i:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x12
  1114  000074                     	ds	1
  1115  000075                     ??_motorJoc:
  1116  000075                     LcPutChar@c:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x13
  1120  000075                     	ds	1
  1121  000076                     
  1122                           ; 1 bytes @ 0x14
  1123  000076                     	ds	1
  1124  000077                     
  1125                           ; 1 bytes @ 0x15
  1126 ;;
  1127 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1128 ;;
  1129 ;; *************** function _main *****************
  1130 ;; Defined at:
  1131 ;;		line 76 in file "main.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1
  1145 ;;      Params:         0       0       0
  1146 ;;      Locals:         0       0       0
  1147 ;;      Temps:          0       0       0
  1148 ;;      Totals:         0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels required when called: 7
  1151 ;; This function calls:
  1152 ;;		_CtoA
  1153 ;;		_GLCDInit
  1154 ;;		_GLCDMotor
  1155 ;;		_JoystickInit
  1156 ;;		_JoystickMotor
  1157 ;;		_LcInit
  1158 ;;		_LcLCD
  1159 ;;		_Minit
  1160 ;;		_SMotor
  1161 ;;		_Sinit
  1162 ;;		_TeInit
  1163 ;;		_TeTeclat
  1164 ;;		_TiInitTimer
  1165 ;;		_Uinit
  1166 ;;		_UmotorUsers
  1167 ;;		_escriure2usuarisStruct
  1168 ;;		_escriureEEPROM
  1169 ;;		_initAltaveu
  1170 ;;		_initHora
  1171 ;;		_initSIO
  1172 ;;		_init_eusart
  1173 ;;		_init_ports
  1174 ;;		_menu
  1175 ;;		_motorAltaveu
  1176 ;;		_motorHora
  1177 ;;		_motorJoc
  1178 ;;		_motorSIO
  1179 ;; This function is called by:
  1180 ;;		Startup code after reset
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text0
  1185  0017DA                     __ptext0:
  1186                           	callstack 0
  1187  0017DA                     _main:
  1188                           	callstack 24
  1189                           
  1190                           ;main.c: 77:     init_ports();
  1191                           
  1192                           ;incstack = 0
  1193  0017DA  ECBF  F00E         	call	_init_ports	;wreg free
  1194                           
  1195                           ;main.c: 78:     escriureEEPROM();
  1196  0017DE  EC32  F00E         	call	_escriureEEPROM	;wreg free
  1197                           
  1198                           ;main.c: 79:     init_eusart();
  1199  0017E2  ECEA  F00E         	call	_init_eusart	;wreg free
  1200                           
  1201                           ;main.c: 80:     TiInitTimer();
  1202  0017E6  EC93  F00D         	call	_TiInitTimer	;wreg free
  1203                           
  1204                           ;main.c: 81:     TeInit();
  1205  0017EA  EC7F  F00F         	call	_TeInit	;wreg free
  1206                           
  1207                           ;main.c: 82:     Sinit();
  1208  0017EE  EC83  F00F         	call	_Sinit	;wreg free
  1209                           
  1210                           ;main.c: 83:     SMotor();
  1211  0017F2  ECC1  F006         	call	_SMotor	;wreg free
  1212                           
  1213                           ;main.c: 84:     Uinit();
  1214  0017F6  ECCB  F00A         	call	_Uinit	;wreg free
  1215                           
  1216                           ;main.c: 85:     initAltaveu();
  1217  0017FA  EC73  F00F         	call	_initAltaveu	;wreg free
  1218                           
  1219                           ;main.c: 86:     GLCDInit();
  1220  0017FE  EC93  F00F         	call	_GLCDInit	;wreg free
  1221                           
  1222                           ;main.c: 87:     JoystickInit();
  1223  001802  ECFF  F00E         	call	_JoystickInit	;wreg free
  1224                           
  1225                           ;main.c: 88:     initHora();
  1226  001806  EC6F  F00F         	call	_initHora	;wreg free
  1227                           
  1228                           ;main.c: 89:     initSIO();
  1229  00180A  EC6B  F00F         	call	_initSIO	;wreg free
  1230                           
  1231                           ;main.c: 91:     LcInit(2,16);
  1232  00180E  0E10               	movlw	16
  1233  001810  6E72               	movwf	LcInit@columns^0,c
  1234  001812  0E02               	movlw	2
  1235  001814  ECA3  F009         	call	_LcInit
  1236                           
  1237                           ;main.c: 92:     Minit();
  1238  001818  EC8B  F00F         	call	_Minit	;wreg free
  1239                           
  1240                           ;main.c: 94:     escriure2usuarisStruct();
  1241  00181C  EC49  F00E         	call	_escriure2usuarisStruct	;wreg free
  1242  001820                     l6570:
  1243                           
  1244                           ;main.c: 97:         motorJoc();
  1245  001820  EC13  F00A         	call	_motorJoc	;wreg free
  1246                           
  1247                           ;main.c: 98:         motorSIO();
  1248  001824  ECB0  F005         	call	_motorSIO	;wreg free
  1249                           
  1250                           ;main.c: 99:         motorHora();
  1251  001828  EC25  F00B         	call	_motorHora	;wreg free
  1252                           
  1253                           ;main.c: 100:         JoystickMotor();
  1254  00182C  EC2E  F009         	call	_JoystickMotor	;wreg free
  1255                           
  1256                           ;main.c: 101:         menu();
  1257  001830  EC72  F001         	call	_menu	;wreg free
  1258                           
  1259                           ;main.c: 102:         CtoA();
  1260  001834  ECE5  F00D         	call	_CtoA	;wreg free
  1261                           
  1262                           ;main.c: 103:         motorAltaveu();
  1263  001838  EC70  F00A         	call	_motorAltaveu	;wreg free
  1264                           
  1265                           ;main.c: 104:         UmotorUsers();
  1266  00183C  ECBF  F007         	call	_UmotorUsers	;wreg free
  1267                           
  1268                           ;main.c: 105:         GLCDMotor();
  1269  001840  ECC4  F003         	call	_GLCDMotor	;wreg free
  1270                           
  1271                           ;main.c: 106:         TeTeclat();
  1272  001844  EC7C  F008         	call	_TeTeclat	;wreg free
  1273                           
  1274                           ;main.c: 107:         SMotor();
  1275  001848  ECC1  F006         	call	_SMotor	;wreg free
  1276                           
  1277                           ;main.c: 108:         LcLCD();
  1278  00184C  EC91  F00C         	call	_LcLCD	;wreg free
  1279  001850  D7E7               	goto	l6570
  1280  001852                     __end_of_main:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _motorSIO *****************
  1284 ;; Defined at:
  1285 ;;		line 42 in file "SIO.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/1
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1
  1299 ;;      Params:         0       0       0
  1300 ;;      Locals:         0       0       0
  1301 ;;      Temps:          0       2       0
  1302 ;;      Totals:         0       2       0
  1303 ;;Total ram usage:        2 bytes
  1304 ;; Hardware stack levels used: 1
  1305 ;; Hardware stack levels required when called: 6
  1306 ;; This function calls:
  1307 ;;		_CToAConverteix
  1308 ;;		_CToAHaAcabat
  1309 ;;		_CToAobtenir
  1310 ;;		_HGetTime
  1311 ;;		_LcClear
  1312 ;;		_LcGotoXY
  1313 ;;		_LcLliure
  1314 ;;		_LcNewString
  1315 ;;		_LcPutChar
  1316 ;;		_TiGetTics
  1317 ;;		_TiResetTics
  1318 ;;		_UgetUserName
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text1
  1325  000B60                     __ptext1:
  1326                           	callstack 0
  1327  000B60                     _motorSIO:
  1328                           	callstack 24
  1329                           
  1330                           ;SIO.c: 43:     static char state = 0;;SIO.c: 45:  switch(state) {
  1331                           
  1332                           ;incstack = 0
  1333  000B60  D0E8               	goto	l5954
  1334  000B62                     l5838:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;SIO.c: 47:    if (usuariActualSIO > -1) {
  1338  000B62  BE4B               	btfsc	_usuariActualSIO^0,7,c
  1339  000B64  0012               	return	
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;SIO.c: 48:     userPtr = UgetUserName(usuariActualSIO);
  1343  000B66  504B               	movf	_usuariActualSIO^0,w,c
  1344  000B68  ECF5  F00E         	call	_UgetUserName
  1345  000B6C  C067  F001         	movff	?_UgetUserName,_userPtr
  1346  000B70  C068  F002         	movff	?_UgetUserName+1,_userPtr+1
  1347                           
  1348                           ;SIO.c: 49:     jugantSIO = 1;
  1349  000B74  8277               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1350                           
  1351                           ;SIO.c: 50:     Krebut = 0;
  1352  000B76  9077               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1353                           
  1354                           ;SIO.c: 51:     state = 1;
  1355  000B78  0E01               	movlw	1
  1356  000B7A  6E07               	movwf	motorSIO@state^0,c
  1357  000B7C  0012               	return	
  1358  000B7E                     l5848:
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;SIO.c: 55:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1362  000B7E  C001  FFD9         	movff	_userPtr,fsr2l
  1363  000B82  C002  FFDA         	movff	_userPtr+1,fsr2h
  1364  000B86  50DF               	movf	indf2,w,c
  1365  000B88  B4D8               	btfsc	status,2,c
  1366                           
  1367                           ; BSR set to: 0
  1368  000B8A  A2AC               	btfss	172,1,c	;volatile
  1369  000B8C  D008               	goto	l5856
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;SIO.c: 56:     TXREG = '\0';
  1373  000B8E  0E00               	movlw	0
  1374  000B90  6EAD               	movwf	173,c	;volatile
  1375                           
  1376                           ;SIO.c: 57:     novaTeclaSIO = 0;
  1377  000B92  0E00               	movlw	0
  1378  000B94  6E49               	movwf	_novaTeclaSIO^0,c
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;SIO.c: 58:     LATBbits.LATB3 = 1;
  1382  000B96  868A               	bsf	138,3,c	;volatile
  1383                           
  1384                           ;SIO.c: 59:     state = 2;
  1385  000B98  0E02               	movlw	2
  1386  000B9A  6E07               	movwf	motorSIO@state^0,c
  1387                           
  1388                           ;SIO.c: 60:    }
  1389  000B9C  0012               	return	
  1390  000B9E                     l5856:
  1391                           
  1392                           ; BSR set to: 0
  1393  000B9E  C001  FFD9         	movff	_userPtr,fsr2l
  1394  000BA2  C002  FFDA         	movff	_userPtr+1,fsr2h
  1395  000BA6  50DF               	movf	indf2,w,c
  1396  000BA8  B4D8               	btfsc	status,2,c
  1397  000BAA  0012               	return	
  1398                           
  1399                           ; BSR set to: 0
  1400  000BAC  A2AC               	btfss	172,1,c	;volatile
  1401  000BAE  0012               	return	
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;SIO.c: 62:     TXREG = *userPtr;
  1405  000BB0  C001  FFD9         	movff	_userPtr,fsr2l
  1406  000BB4  C002  FFDA         	movff	_userPtr+1,fsr2h
  1407  000BB8  50DF               	movf	indf2,w,c
  1408  000BBA  6EAD               	movwf	173,c	;volatile
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;SIO.c: 63:     userPtr++;
  1412  000BBC  4A01               	infsnz	_userPtr^0,f,c
  1413  000BBE  2A02               	incf	(_userPtr+1)^0,f,c
  1414  000BC0  0012               	return	
  1415  000BC2                     l5864:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;SIO.c: 67:    if (RCREG == 'K') {
  1419  000BC2  0E4B               	movlw	75
  1420  000BC4  18AE               	xorwf	174,w,c
  1421  000BC6  A4D8               	btfss	status,2,c
  1422  000BC8  0012               	return	
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;SIO.c: 68:     Krebut = 1;
  1426  000BCA  8077               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1427  000BCC                     l5868:
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;SIO.c: 69:     state = 3;
  1431  000BCC  0E03               	movlw	3
  1432  000BCE  6E07               	movwf	motorSIO@state^0,c
  1433  000BD0  0012               	return	
  1434  000BD2                     l5870:
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;SIO.c: 73:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1438  000BD2  284A               	incf	_direccioSIO^0,w,c
  1439  000BD4  A4D8               	btfss	status,2,c
  1440                           
  1441                           ; BSR set to: 0
  1442  000BD6  A2AC               	btfss	172,1,c	;volatile
  1443  000BD8  D004               	goto	l5878
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;SIO.c: 74:     TXREG = direccioSIO;
  1447  000BDA  C04A  FFAD         	movff	_direccioSIO,4013	;volatile
  1448                           
  1449                           ;SIO.c: 75:     direccioSIO = -1;
  1450  000BDE  684A               	setf	_direccioSIO^0,c
  1451  000BE0  D7F5               	goto	l5868
  1452  000BE2                     l5878:
  1453                           
  1454                           ; BSR set to: 0
  1455  000BE2  0E30               	movlw	48
  1456  000BE4  6449               	cpfsgt	_novaTeclaSIO^0,c
  1457  000BE6  D00C               	goto	l1159
  1458                           
  1459                           ; BSR set to: 0
  1460  000BE8  0E3A               	movlw	58
  1461  000BEA  6049               	cpfslt	_novaTeclaSIO^0,c
  1462  000BEC  D009               	goto	l1159
  1463                           
  1464                           ; BSR set to: 0
  1465  000BEE  A2AC               	btfss	172,1,c	;volatile
  1466  000BF0  D007               	goto	l1159
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;SIO.c: 79:     TXREG = novaTeclaSIO;
  1470  000BF2  C049  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;SIO.c: 80:     novaTeclaSIO = 0;
  1474  000BF6  0E00               	movlw	0
  1475  000BF8  6E49               	movwf	_novaTeclaSIO^0,c
  1476                           
  1477                           ;SIO.c: 81:     state = 3;
  1478  000BFA  0E03               	movlw	3
  1479  000BFC  6E07               	movwf	motorSIO@state^0,c
  1480                           
  1481                           ;SIO.c: 82:    }
  1482  000BFE  0012               	return	
  1483  000C00                     l1159:
  1484                           
  1485                           ; BSR set to: 0
  1486  000C00  B277               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1487  000C02  D002               	goto	u5590
  1488                           
  1489                           ; BSR set to: 0
  1490  000C04  B2AC               	btfsc	172,1,c	;volatile
  1491  000C06  D002               	goto	u5600
  1492  000C08                     u5590:
  1493                           
  1494                           ; BSR set to: 0
  1495  000C08  AA9E               	btfss	158,5,c	;volatile
  1496  000C0A  0012               	return	
  1497  000C0C                     u5600:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;SIO.c: 84:     LcClear();
  1501  000C0C  EC9B  F00E         	call	_LcClear	;wreg free
  1502                           
  1503                           ;SIO.c: 85:     LcNewString("ERRORS:");
  1504  000C10  0ECC               	movlw	low STR_6
  1505  000C12  6E6A               	movwf	LcNewString@new_s^0,c
  1506  000C14  506A               	movf	LcNewString@new_s^0,w,c
  1507  000C16  A4D8               	btfss	status,2,c
  1508  000C18  0E02               	movlw	high __smallconst
  1509  000C1A  6E6B               	movwf	(LcNewString@new_s+1)^0,c
  1510  000C1C  EC43  F00F         	call	_LcNewString	;wreg free
  1511                           
  1512                           ;SIO.c: 86:     TXREG = 'F';
  1513  000C20  0E46               	movlw	70
  1514  000C22  6EAD               	movwf	173,c	;volatile
  1515                           
  1516                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1517  000C24  0E00               	movlw	0
  1518  000C26  6E49               	movwf	_novaTeclaSIO^0,c
  1519                           
  1520                           ;SIO.c: 88:     state = 4;
  1521  000C28  0E04               	movlw	4
  1522  000C2A  6E07               	movwf	motorSIO@state^0,c
  1523  000C2C  0012               	return	
  1524  000C2E                     l1166:
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;SIO.c: 92:    if (PIR1bits.RCIF) {
  1528  000C2E  AA9E               	btfss	158,5,c	;volatile
  1529  000C30  0012               	return	
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;SIO.c: 93:     CToAConverteix(RCREG);
  1533  000C32  50AE               	movf	174,w,c	;volatile
  1534  000C34  EC1F  F00F         	call	_CToAConverteix
  1535                           
  1536                           ;SIO.c: 94:     TiResetTics(timerSIO);
  1537  000C38  5008               	movf	_timerSIO^0,w,c
  1538  000C3A  ECDE  F00E         	call	_TiResetTics
  1539  000C3E                     l5904:
  1540                           
  1541                           ;SIO.c: 95:     state = 5;
  1542  000C3E  0E05               	movlw	5
  1543  000C40  6E07               	movwf	motorSIO@state^0,c
  1544  000C42  0012               	return	
  1545  000C44                     l5906:
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;SIO.c: 99:    if (TiGetTics(timerSIO) > 2490) {
  1549  000C44  5008               	movf	_timerSIO^0,w,c
  1550  000C46  EC5F  F00E         	call	_TiGetTics
  1551  000C4A  BE68               	btfsc	(?_TiGetTics+1)^0,7,c
  1552  000C4C  D013               	goto	l5914
  1553  000C4E  0EBB               	movlw	187
  1554  000C50  5C67               	subwf	?_TiGetTics^0,w,c
  1555  000C52  0E09               	movlw	9
  1556  000C54  5868               	subwfb	(?_TiGetTics+1)^0,w,c
  1557  000C56  A0D8               	btfss	status,0,c
  1558  000C58  D00D               	goto	l5914
  1559                           
  1560                           ;SIO.c: 100:     LcClear();
  1561  000C5A  EC9B  F00E         	call	_LcClear	;wreg free
  1562                           
  1563                           ;SIO.c: 101:     LcNewString("TIME LEFT: ");
  1564  000C5E  0EAF               	movlw	low STR_7
  1565  000C60  6E6A               	movwf	LcNewString@new_s^0,c
  1566  000C62  506A               	movf	LcNewString@new_s^0,w,c
  1567  000C64  A4D8               	btfss	status,2,c
  1568  000C66  0E02               	movlw	high __smallconst
  1569  000C68  6E6B               	movwf	(LcNewString@new_s+1)^0,c
  1570  000C6A  EC43  F00F         	call	_LcNewString	;wreg free
  1571                           
  1572                           ;SIO.c: 102:     state = 7;
  1573  000C6E  0E07               	movlw	7
  1574  000C70  6E07               	movwf	motorSIO@state^0,c
  1575                           
  1576                           ;SIO.c: 103:    }
  1577  000C72  0012               	return	
  1578  000C74                     l5914:
  1579  000C74  5008               	movf	_timerSIO^0,w,c
  1580  000C76  EC5F  F00E         	call	_TiGetTics
  1581  000C7A  BE68               	btfsc	(?_TiGetTics+1)^0,7,c
  1582  000C7C  D006               	goto	u5630
  1583  000C7E  0EBA               	movlw	186
  1584  000C80  5C67               	subwf	?_TiGetTics^0,w,c
  1585  000C82  0E09               	movlw	9
  1586  000C84  5868               	subwfb	(?_TiGetTics+1)^0,w,c
  1587  000C86  B0D8               	btfsc	status,0,c
  1588  000C88  0012               	return	
  1589  000C8A                     u5630:
  1590  000C8A  AA9E               	btfss	158,5,c	;volatile
  1591  000C8C  0012               	return	
  1592  000C8E  EC49  F00F         	call	_LcLliure	;wreg free
  1593  000C92  A0D8               	btfss	status,0,c
  1594  000C94  0012               	return	
  1595                           
  1596                           ;SIO.c: 105:     LcGotoXY(0,1);
  1597  000C96  0E01               	movlw	1
  1598  000C98  6E6F               	movwf	LcGotoXY@Row^0,c
  1599  000C9A  0E00               	movlw	0
  1600  000C9C  EC59  F00D         	call	_LcGotoXY
  1601                           
  1602                           ;SIO.c: 106:     LcPutChar(RCREG);
  1603  000CA0  50AE               	movf	174,w,c	;volatile
  1604  000CA2  ECED  F00C         	call	_LcPutChar
  1605                           
  1606                           ;SIO.c: 107:     state = 6;
  1607  000CA6  0E06               	movlw	6
  1608  000CA8  6E07               	movwf	motorSIO@state^0,c
  1609  000CAA  0012               	return	
  1610  000CAC                     l5924:
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;SIO.c: 111:    if (LcLliure()) {
  1614  000CAC  EC49  F00F         	call	_LcLliure	;wreg free
  1615  000CB0  A0D8               	btfss	status,0,c
  1616  000CB2  0012               	return	
  1617                           
  1618                           ;SIO.c: 112:     LcNewString(HGetTime());
  1619  000CB4  ECA8  F00F         	call	_HGetTime	;wreg free
  1620  000CB8  0100               	movlb	0	; () banked
  1621  000CBA  6FC9               	movwf	??_motorSIO& (0+255),b
  1622  000CBC  C0C9  F06A         	movff	??_motorSIO,LcNewString@new_s
  1623  000CC0  6A6B               	clrf	(LcNewString@new_s+1)^0,c
  1624  000CC2  EC43  F00F         	call	_LcNewString	;wreg free
  1625                           
  1626                           ;SIO.c: 113:     state = 8;
  1627  000CC6  0E08               	movlw	8
  1628  000CC8  6E07               	movwf	motorSIO@state^0,c
  1629  000CCA  0012               	return	
  1630  000CCC                     l1174:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;SIO.c: 117:    if (PIR1bits.RCIF) {
  1634  000CCC  AA9E               	btfss	158,5,c	;volatile
  1635  000CCE  0012               	return	
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;SIO.c: 118:     LcPutChar(RCREG);
  1639  000CD0  50AE               	movf	174,w,c	;volatile
  1640  000CD2  ECED  F00C         	call	_LcPutChar
  1641                           
  1642                           ;SIO.c: 119:                 TiResetTics(timerSIO);
  1643  000CD6  5008               	movf	_timerSIO^0,w,c
  1644  000CD8  ECDE  F00E         	call	_TiResetTics
  1645  000CDC  D7B0               	goto	l5904
  1646  000CDE                     l5934:
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;SIO.c: 124:    if (LcLliure()) {
  1650  000CDE  EC49  F00F         	call	_LcLliure	;wreg free
  1651  000CE2  A0D8               	btfss	status,0,c
  1652  000CE4  0012               	return	
  1653                           
  1654                           ;SIO.c: 125:     LcGotoXY(0,1);
  1655  000CE6  0E01               	movlw	1
  1656  000CE8  6E6F               	movwf	LcGotoXY@Row^0,c
  1657  000CEA  0E00               	movlw	0
  1658  000CEC  EC59  F00D         	call	_LcGotoXY
  1659                           
  1660                           ;SIO.c: 126:     LcNewString("SCORE: ");
  1661  000CF0  0EC4               	movlw	low STR_8
  1662  000CF2  6E6A               	movwf	LcNewString@new_s^0,c
  1663  000CF4  506A               	movf	LcNewString@new_s^0,w,c
  1664  000CF6  A4D8               	btfss	status,2,c
  1665  000CF8  0E02               	movlw	high __smallconst
  1666  000CFA  6E6B               	movwf	(LcNewString@new_s+1)^0,c
  1667  000CFC  EC43  F00F         	call	_LcNewString	;wreg free
  1668                           
  1669                           ;SIO.c: 127:     state = 9;
  1670  000D00  0E09               	movlw	9
  1671  000D02  6E07               	movwf	motorSIO@state^0,c
  1672  000D04  0012               	return	
  1673  000D06                     l5942:
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;SIO.c: 131:    if (LcLliure() && CToAHaAcabat() == 250) {
  1677  000D06  EC49  F00F         	call	_LcLliure	;wreg free
  1678  000D0A  A0D8               	btfss	status,0,c
  1679  000D0C  0012               	return	
  1680  000D0E  ECA2  F00F         	call	_CToAHaAcabat	;wreg free
  1681  000D12  0AFA               	xorlw	250
  1682  000D14  A4D8               	btfss	status,2,c
  1683  000D16  0012               	return	
  1684                           
  1685                           ;SIO.c: 132:     LcNewString(CToAobtenir());
  1686  000D18  ECA0  F00F         	call	_CToAobtenir	;wreg free
  1687  000D1C  0100               	movlb	0	; () banked
  1688  000D1E  6FC9               	movwf	??_motorSIO& (0+255),b
  1689  000D20  C0C9  F06A         	movff	??_motorSIO,LcNewString@new_s
  1690  000D24  6A6B               	clrf	(LcNewString@new_s+1)^0,c
  1691  000D26  EC43  F00F         	call	_LcNewString	;wreg free
  1692                           
  1693                           ;SIO.c: 133:     usuariActualSIO = -1;
  1694  000D2A  684B               	setf	_usuariActualSIO^0,c
  1695                           
  1696                           ;SIO.c: 134:     state = 0;
  1697  000D2C  0E00               	movlw	0
  1698  000D2E  6E07               	movwf	motorSIO@state^0,c
  1699  000D30  0012               	return	
  1700  000D32                     l5954:
  1701  000D32  5007               	movf	motorSIO@state^0,w,c
  1702  000D34  0100               	movlb	0	; () banked
  1703  000D36  6FC9               	movwf	??_motorSIO& (0+255),b
  1704  000D38  6BCA               	clrf	(??_motorSIO+1)& (0+255),b
  1705                           
  1706                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1707                           ; Switch size 1, requested type "simple"
  1708                           ; Number of cases is 1, Range of values is 0 to 0
  1709                           ; switch strategies available:
  1710                           ; Name         Instructions Cycles
  1711                           ; simple_byte            4     3 (average)
  1712                           ;	Chosen strategy is simple_byte
  1713  000D3A  51CA               	movf	(??_motorSIO+1)& (0+255),w,b
  1714  000D3C  0A00               	xorlw	0	; case 0
  1715  000D3E  A4D8               	btfss	status,2,c
  1716  000D40  0012               	return	
  1717                           
  1718                           ; BSR set to: 0
  1719                           ; Switch size 1, requested type "simple"
  1720                           ; Number of cases is 10, Range of values is 0 to 9
  1721                           ; switch strategies available:
  1722                           ; Name         Instructions Cycles
  1723                           ; simple_byte           31    16 (average)
  1724                           ;	Chosen strategy is simple_byte
  1725  000D42  51C9               	movf	??_motorSIO& (0+255),w,b
  1726  000D44  0A00               	xorlw	0	; case 0
  1727  000D46  B4D8               	btfsc	status,2,c
  1728  000D48  D70C               	goto	l5838
  1729  000D4A  0A01               	xorlw	1	; case 1
  1730  000D4C  B4D8               	btfsc	status,2,c
  1731  000D4E  D717               	goto	l5848
  1732  000D50  0A03               	xorlw	3	; case 2
  1733  000D52  B4D8               	btfsc	status,2,c
  1734  000D54  D736               	goto	l5864
  1735  000D56  0A01               	xorlw	1	; case 3
  1736  000D58  B4D8               	btfsc	status,2,c
  1737  000D5A  D73B               	goto	l5870
  1738  000D5C  0A07               	xorlw	7	; case 4
  1739  000D5E  B4D8               	btfsc	status,2,c
  1740  000D60  D766               	goto	l1166
  1741  000D62  0A01               	xorlw	1	; case 5
  1742  000D64  B4D8               	btfsc	status,2,c
  1743  000D66  D76E               	goto	l5906
  1744  000D68  0A03               	xorlw	3	; case 6
  1745  000D6A  B4D8               	btfsc	status,2,c
  1746  000D6C  D7AF               	goto	l1174
  1747  000D6E  0A01               	xorlw	1	; case 7
  1748  000D70  B4D8               	btfsc	status,2,c
  1749  000D72  D79C               	goto	l5924
  1750  000D74  0A0F               	xorlw	15	; case 8
  1751  000D76  B4D8               	btfsc	status,2,c
  1752  000D78  D7B2               	goto	l5934
  1753  000D7A  0A01               	xorlw	1	; case 9
  1754  000D7C  A4D8               	btfss	status,2,c
  1755  000D7E  0012               	return	
  1756  000D80  D7C2               	goto	l5942
  1757  000D82                     __end_of_motorSIO:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _CToAobtenir *****************
  1761 ;; Defined at:
  1762 ;;		line 7 in file "CtoA.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      PTR unsigned char 
  1769 ;; Registers used:
  1770 ;;		wreg
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1
  1776 ;;      Params:         2       0       0
  1777 ;;      Locals:         0       0       0
  1778 ;;      Temps:          0       0       0
  1779 ;;      Totals:         2       0       0
  1780 ;;Total ram usage:        2 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 2
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_motorSIO
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text2
  1791  001F40                     __ptext2:
  1792                           	callstack 0
  1793  001F40                     _CToAobtenir:
  1794                           	callstack 27
  1795                           
  1796                           ;CtoA.c: 8:     return stringScore;
  1797                           
  1798                           ;incstack = 0
  1799  001F40  0E5E               	movlw	_stringScore& (0+255)
  1800  001F42  0012               	return		;funcret
  1801  001F44                     __end_of_CToAobtenir:
  1802                           	callstack 0
  1803                           
  1804 ;; *************** function _CToAHaAcabat *****************
  1805 ;; Defined at:
  1806 ;;		line 10 in file "CtoA.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      unsigned char 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1
  1820 ;;      Params:         0       0       0
  1821 ;;      Locals:         0       0       0
  1822 ;;      Temps:          0       0       0
  1823 ;;      Totals:         0       0       0
  1824 ;;Total ram usage:        0 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; Hardware stack levels required when called: 2
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_motorSIO
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text3
  1835  001F44                     __ptext3:
  1836                           	callstack 0
  1837  001F44                     _CToAHaAcabat:
  1838                           	callstack 27
  1839                           
  1840                           ;CtoA.c: 11:     return convertir;
  1841                           
  1842                           ;incstack = 0
  1843  001F44  5048               	movf	_convertir^0,w,c
  1844  001F46  0012               	return		;funcret
  1845  001F48                     __end_of_CToAHaAcabat:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _CToAConverteix *****************
  1849 ;; Defined at:
  1850 ;;		line 19 in file "CtoA.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  numero          1    wreg     unsigned char 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  numero          1    5[COMRAM] unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1
  1864 ;;      Params:         0       0       0
  1865 ;;      Locals:         1       0       0
  1866 ;;      Temps:          0       0       0
  1867 ;;      Totals:         1       0       0
  1868 ;;Total ram usage:        1 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 3
  1871 ;; This function calls:
  1872 ;;		_CToAReset
  1873 ;; This function is called by:
  1874 ;;		_motorSIO
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text4
  1879  001E3E                     __ptext4:
  1880                           	callstack 0
  1881  001E3E                     _CToAConverteix:
  1882                           	callstack 26
  1883                           
  1884                           ;incstack = 0
  1885                           ;CToAConverteix@numero stored from wreg
  1886  001E3E  6E67               	movwf	CToAConverteix@numero^0,c
  1887                           
  1888                           ;CtoA.c: 20:     CToAReset();
  1889  001E40  EC18  F00F         	call	_CToAReset	;wreg free
  1890                           
  1891                           ;CtoA.c: 21:     convertir = numero;
  1892  001E44  C067  F048         	movff	CToAConverteix@numero,_convertir
  1893  001E48  0012               	return		;funcret
  1894  001E4A                     __end_of_CToAConverteix:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _CToAReset *****************
  1898 ;; Defined at:
  1899 ;;		line 14 in file "CtoA.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1
  1913 ;;      Params:         0       0       0
  1914 ;;      Locals:         0       0       0
  1915 ;;      Temps:          0       0       0
  1916 ;;      Totals:         0       0       0
  1917 ;;Total ram usage:        0 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 2
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_CToAConverteix
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text5
  1928  001E30                     __ptext5:
  1929                           	callstack 0
  1930  001E30                     _CToAReset:
  1931                           	callstack 26
  1932                           
  1933                           ;CtoA.c: 15:     stringScore[0] = '0';
  1934                           
  1935                           ;incstack = 0
  1936  001E30  0E30               	movlw	48
  1937  001E32  6E5E               	movwf	_stringScore^0,c
  1938                           
  1939                           ;CtoA.c: 16:     stringScore[1] = '0';
  1940  001E34  0E30               	movlw	48
  1941  001E36  6E5F               	movwf	(_stringScore+1)^0,c
  1942                           
  1943                           ;CtoA.c: 17:     stringScore[2] = '0';
  1944  001E38  0E30               	movlw	48
  1945  001E3A  6E60               	movwf	(_stringScore+2)^0,c
  1946  001E3C  0012               	return		;funcret
  1947  001E3E                     __end_of_CToAReset:
  1948                           	callstack 0
  1949                           
  1950 ;; *************** function _motorJoc *****************
  1951 ;; Defined at:
  1952 ;;		line 48 in file "Joc.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/1
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1
  1966 ;;      Params:         0       0       0
  1967 ;;      Locals:         0       0       0
  1968 ;;      Temps:          2       0       0
  1969 ;;      Totals:         2       0       0
  1970 ;;Total ram usage:        2 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; Hardware stack levels required when called: 5
  1973 ;; This function calls:
  1974 ;;		_HClearNouSegon
  1975 ;;		_HGetTime
  1976 ;;		_HJugant
  1977 ;;		_HNouSegon
  1978 ;;		_HnoJugant
  1979 ;;		_LcGotoXY
  1980 ;;		_LcLliure
  1981 ;;		_LcNewString
  1982 ;;		_SIONovaDireccio
  1983 ;;		_SIONovaTecla
  1984 ;;		_SIOStartGame
  1985 ;;		_SIOcheckKrebut
  1986 ;;		_SIOendGame
  1987 ;;		_conversorJoystick
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text6
  1994  001426                     __ptext6:
  1995                           	callstack 0
  1996  001426                     _motorJoc:
  1997                           	callstack 25
  1998                           
  1999                           ;Joc.c: 49:     static char state = 0;;Joc.c: 51:  switch(state) {
  2000                           
  2001                           ;incstack = 0
  2002  001426  D04A               	goto	l4612
  2003  001428                     l4560:
  2004                           
  2005                           ;Joc.c: 53:    if (usuariJoc != -1) {
  2006  001428  284D               	incf	_usuariJoc^0,w,c
  2007  00142A  B4D8               	btfsc	status,2,c
  2008  00142C  0012               	return	
  2009                           
  2010                           ;Joc.c: 54:     SIOStartGame(usuariJoc);
  2011  00142E  504D               	movf	_usuariJoc^0,w,c
  2012  001430  EC4F  F00F         	call	_SIOStartGame
  2013                           
  2014                           ;Joc.c: 55:     jugantJoc = 1;
  2015  001434  8477               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2016                           
  2017                           ;Joc.c: 56:     state = 2;
  2018  001436  0E02               	movlw	2
  2019  001438  6E0A               	movwf	motorJoc@state^0,c
  2020                           
  2021                           ;Joc.c: 58:   break;
  2022                           
  2023                           ;Joc.c: 57:    }
  2024  00143A  0012               	return	
  2025  00143C                     l1054:
  2026                           
  2027                           ;Joc.c: 60:    if (!jugantJoc) {
  2028  00143C  B477               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  2029  00143E  D009               	goto	l4576
  2030                           
  2031                           ;Joc.c: 61:     usuariJoc = -1;
  2032  001440  684D               	setf	_usuariJoc^0,c
  2033                           
  2034                           ;Joc.c: 62:     HnoJugant();
  2035  001442  ECA6  F00F         	call	_HnoJugant	;wreg free
  2036                           
  2037                           ;Joc.c: 63:     SIOendGame();
  2038  001446  ECA4  F00F         	call	_SIOendGame	;wreg free
  2039                           
  2040                           ;Joc.c: 64:     LATBbits.LATB3 = 0;
  2041  00144A  968A               	bcf	138,3,c	;volatile
  2042                           
  2043                           ;Joc.c: 65:     state = 0;
  2044  00144C  0E00               	movlw	0
  2045  00144E  6E0A               	movwf	motorJoc@state^0,c
  2046                           
  2047                           ;Joc.c: 66:    }
  2048  001450  0012               	return	
  2049  001452                     l4576:
  2050  001452  BE0B               	btfsc	_direccioJoc^0,7,c
  2051  001454  D009               	goto	l4584
  2052                           
  2053                           ;Joc.c: 68:     SIONovaDireccio(conversorJoystick(direccioJoc));
  2054  001456  500B               	movf	_direccioJoc^0,w,c
  2055  001458  ECAF  F00D         	call	_conversorJoystick
  2056  00145C  EC57  F00F         	call	_SIONovaDireccio
  2057                           
  2058                           ;Joc.c: 69:     direccioJoc = -1;
  2059  001460  680B               	setf	_direccioJoc^0,c
  2060  001462                     l4582:
  2061                           
  2062                           ;Joc.c: 70:     state = 1;
  2063  001462  0E01               	movlw	1
  2064  001464  6E0A               	movwf	motorJoc@state^0,c
  2065                           
  2066                           ;Joc.c: 71:    }
  2067  001466  0012               	return	
  2068  001468                     l4584:
  2069  001468  EC2B  F00F         	call	_HNouSegon	;wreg free
  2070  00146C  A0D8               	btfss	status,0,c
  2071  00146E  D014               	goto	l4596
  2072  001470  EC49  F00F         	call	_LcLliure	;wreg free
  2073  001474  A0D8               	btfss	status,0,c
  2074  001476  D010               	goto	l4596
  2075                           
  2076                           ;Joc.c: 73:     HClearNouSegon();
  2077  001478  ECAA  F00F         	call	_HClearNouSegon	;wreg free
  2078                           
  2079                           ;Joc.c: 74:     LcGotoXY(0,1);
  2080  00147C  0E01               	movlw	1
  2081  00147E  6E6F               	movwf	LcGotoXY@Row^0,c
  2082  001480  0E00               	movlw	0
  2083  001482  EC59  F00D         	call	_LcGotoXY
  2084                           
  2085                           ;Joc.c: 75:     LcNewString(HGetTime());
  2086  001486  ECA8  F00F         	call	_HGetTime	;wreg free
  2087  00148A  6E75               	movwf	??_motorJoc^0,c
  2088  00148C  C075  F06A         	movff	??_motorJoc,LcNewString@new_s
  2089  001490  6A6B               	clrf	(LcNewString@new_s+1)^0,c
  2090  001492  EC43  F00F         	call	_LcNewString	;wreg free
  2091  001496  D7E5               	goto	l4582
  2092  001498                     l4596:
  2093  001498  504C               	movf	_novaTeclaJOC^0,w,c
  2094  00149A  0A80               	xorlw	128
  2095  00149C  0F7F               	addlw	-129
  2096  00149E  A0D8               	btfss	status,0,c
  2097  0014A0  0012               	return	
  2098                           
  2099                           ;Joc.c: 79:     SIONovaTecla(novaTeclaJOC+48);
  2100  0014A2  504C               	movf	_novaTeclaJOC^0,w,c
  2101  0014A4  0F30               	addlw	48
  2102  0014A6  EC53  F00F         	call	_SIONovaTecla
  2103                           
  2104                           ;Joc.c: 80:     novaTeclaJOC = -1;
  2105  0014AA  684C               	setf	_novaTeclaJOC^0,c
  2106  0014AC  D7DA               	goto	l4582
  2107  0014AE                     l4604:
  2108                           
  2109                           ;Joc.c: 85:    if (SIOcheckKrebut()) {
  2110  0014AE  EC25  F00F         	call	_SIOcheckKrebut	;wreg free
  2111  0014B2  A0D8               	btfss	status,0,c
  2112  0014B4  0012               	return	
  2113                           
  2114                           ;Joc.c: 86:     HJugant();
  2115  0014B6  EC97  F00F         	call	_HJugant	;wreg free
  2116  0014BA  D7D3               	goto	l4582
  2117  0014BC                     l4612:
  2118  0014BC  500A               	movf	motorJoc@state^0,w,c
  2119  0014BE  6E75               	movwf	??_motorJoc^0,c
  2120  0014C0  6A76               	clrf	(??_motorJoc+1)^0,c
  2121                           
  2122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2123                           ; Switch size 1, requested type "simple"
  2124                           ; Number of cases is 1, Range of values is 0 to 0
  2125                           ; switch strategies available:
  2126                           ; Name         Instructions Cycles
  2127                           ; simple_byte            4     3 (average)
  2128                           ;	Chosen strategy is simple_byte
  2129  0014C2  5076               	movf	(??_motorJoc+1)^0,w,c
  2130  0014C4  0A00               	xorlw	0	; case 0
  2131  0014C6  A4D8               	btfss	status,2,c
  2132  0014C8  0012               	return	
  2133                           
  2134                           ; Switch size 1, requested type "simple"
  2135                           ; Number of cases is 3, Range of values is 0 to 2
  2136                           ; switch strategies available:
  2137                           ; Name         Instructions Cycles
  2138                           ; simple_byte           10     6 (average)
  2139                           ;	Chosen strategy is simple_byte
  2140  0014CA  5075               	movf	??_motorJoc^0,w,c
  2141  0014CC  0A00               	xorlw	0	; case 0
  2142  0014CE  B4D8               	btfsc	status,2,c
  2143  0014D0  D7AB               	goto	l4560
  2144  0014D2  0A01               	xorlw	1	; case 1
  2145  0014D4  B4D8               	btfsc	status,2,c
  2146  0014D6  D7B2               	goto	l1054
  2147  0014D8  0A03               	xorlw	3	; case 2
  2148  0014DA  A4D8               	btfss	status,2,c
  2149  0014DC  0012               	return	
  2150  0014DE  D7E7               	goto	l4604
  2151  0014E0                     __end_of_motorJoc:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function _conversorJoystick *****************
  2155 ;; Defined at:
  2156 ;;		line 31 in file "Joc.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  direc           1    wreg     unsigned char 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  direc           1    5[COMRAM] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      unsigned char 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/1
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1
  2170 ;;      Params:         0       0       0
  2171 ;;      Locals:         1       0       0
  2172 ;;      Temps:          0       0       0
  2173 ;;      Totals:         1       0       0
  2174 ;;Total ram usage:        1 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 2
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_motorJoc
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text7
  2185  001B5E                     __ptext7:
  2186                           	callstack 0
  2187  001B5E                     _conversorJoystick:
  2188                           	callstack 27
  2189                           
  2190                           ;incstack = 0
  2191                           ;conversorJoystick@direc stored from wreg
  2192  001B5E  6E67               	movwf	conversorJoystick@direc^0,c
  2193                           
  2194                           ;Joc.c: 33:     if (direc==2) {
  2195  001B60  0E02               	movlw	2
  2196  001B62  1867               	xorwf	conversorJoystick@direc^0,w,c
  2197  001B64  A4D8               	btfss	status,2,c
  2198  001B66  D002               	goto	l2184
  2199                           
  2200                           ;Joc.c: 34:         return 'W';
  2201  001B68  0E57               	movlw	87
  2202  001B6A  0012               	return	
  2203  001B6C                     l2184:
  2204                           
  2205                           ;Joc.c: 36:     if (direc==6) {
  2206  001B6C  0E06               	movlw	6
  2207  001B6E  1867               	xorwf	conversorJoystick@direc^0,w,c
  2208  001B70  A4D8               	btfss	status,2,c
  2209  001B72  D002               	goto	l2190
  2210                           
  2211                           ;Joc.c: 37:         return 'D';
  2212  001B74  0E44               	movlw	68
  2213  001B76  0012               	return	
  2214  001B78                     l2190:
  2215                           
  2216                           ;Joc.c: 39:     if (direc==8) {
  2217  001B78  0E08               	movlw	8
  2218  001B7A  1867               	xorwf	conversorJoystick@direc^0,w,c
  2219  001B7C  A4D8               	btfss	status,2,c
  2220  001B7E  D002               	goto	l2196
  2221                           
  2222                           ;Joc.c: 40:         return 'S';
  2223  001B80  0E53               	movlw	83
  2224  001B82  0012               	return	
  2225  001B84                     l2196:
  2226                           
  2227                           ;Joc.c: 42:     if (direc==4) {
  2228  001B84  0E04               	movlw	4
  2229  001B86  1867               	xorwf	conversorJoystick@direc^0,w,c
  2230  001B88  A4D8               	btfss	status,2,c
  2231  001B8A  D002               	goto	l2202
  2232                           
  2233                           ;Joc.c: 43:         return 'A';
  2234  001B8C  0E41               	movlw	65
  2235  001B8E  0012               	return	
  2236  001B90                     l2202:
  2237                           
  2238                           ;Joc.c: 45:     return 0;
  2239  001B90  0E00               	movlw	0
  2240  001B92  0012               	return		;funcret
  2241  001B94                     __end_of_conversorJoystick:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _SIOendGame *****************
  2245 ;; Defined at:
  2246 ;;		line 22 in file "SIO.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		None
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/1
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1
  2260 ;;      Params:         0       0       0
  2261 ;;      Locals:         0       0       0
  2262 ;;      Temps:          0       0       0
  2263 ;;      Totals:         0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 2
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_motorJoc
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text8
  2275  001F48                     __ptext8:
  2276                           	callstack 0
  2277  001F48                     _SIOendGame:
  2278                           	callstack 27
  2279                           
  2280                           ;SIO.c: 23:     jugantSIO = 0;
  2281                           
  2282                           ;incstack = 0
  2283  001F48  9277               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2284  001F4A  0012               	return		;funcret
  2285  001F4C                     __end_of_SIOendGame:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _SIOcheckKrebut *****************
  2289 ;; Defined at:
  2290 ;;		line 25 in file "SIO.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;		None               void
  2297 ;; Registers used:
  2298 ;;		status,0
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/1
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1
  2304 ;;      Params:         0       0       0
  2305 ;;      Locals:         0       0       0
  2306 ;;      Temps:          0       0       0
  2307 ;;      Totals:         0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 2
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_motorJoc
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text9
  2319  001E4A                     __ptext9:
  2320                           	callstack 0
  2321  001E4A                     _SIOcheckKrebut:
  2322                           	callstack 27
  2323                           
  2324                           ;SIO.c: 26:     return Krebut;
  2325                           
  2326                           ;incstack = 0
  2327  001E4A  B077               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2328  001E4C  D002               	goto	l2218
  2329  001E4E  90D8               	bcf	status,0,c
  2330  001E50  0012               	return	
  2331  001E52                     l2218:
  2332  001E52  80D8               	bsf	status,0,c
  2333  001E54  0012               	return		;funcret
  2334  001E56                     __end_of_SIOcheckKrebut:
  2335                           	callstack 0
  2336                           
  2337 ;; *************** function _SIOStartGame *****************
  2338 ;; Defined at:
  2339 ;;		line 32 in file "SIO.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  usuari          1    wreg     unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  usuari          1    5[COMRAM] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/1
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1
  2353 ;;      Params:         0       0       0
  2354 ;;      Locals:         1       0       0
  2355 ;;      Temps:          0       0       0
  2356 ;;      Totals:         1       0       0
  2357 ;;Total ram usage:        1 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; Hardware stack levels required when called: 2
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_motorJoc
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text10
  2368  001E9E                     __ptext10:
  2369                           	callstack 0
  2370  001E9E                     _SIOStartGame:
  2371                           	callstack 27
  2372                           
  2373                           ;incstack = 0
  2374                           ;SIOStartGame@usuari stored from wreg
  2375  001E9E  6E67               	movwf	SIOStartGame@usuari^0,c
  2376                           
  2377                           ;SIO.c: 33:     usuariActualSIO = usuari;
  2378  001EA0  C067  F04B         	movff	SIOStartGame@usuari,_usuariActualSIO
  2379  001EA4  0012               	return		;funcret
  2380  001EA6                     __end_of_SIOStartGame:
  2381                           	callstack 0
  2382                           
  2383 ;; *************** function _SIONovaTecla *****************
  2384 ;; Defined at:
  2385 ;;		line 39 in file "SIO.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  tecla           1    wreg     char 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  tecla           1    5[COMRAM] char 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/1
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1
  2399 ;;      Params:         0       0       0
  2400 ;;      Locals:         1       0       0
  2401 ;;      Temps:          0       0       0
  2402 ;;      Totals:         1       0       0
  2403 ;;Total ram usage:        1 bytes
  2404 ;; Hardware stack levels used: 1
  2405 ;; Hardware stack levels required when called: 2
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_motorJoc
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text11
  2414  001EA6                     __ptext11:
  2415                           	callstack 0
  2416  001EA6                     _SIONovaTecla:
  2417                           	callstack 27
  2418                           
  2419                           ;incstack = 0
  2420                           ;SIONovaTecla@tecla stored from wreg
  2421  001EA6  6E67               	movwf	SIONovaTecla@tecla^0,c
  2422                           
  2423                           ;SIO.c: 40:     novaTeclaSIO = tecla;
  2424  001EA8  C067  F049         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2425  001EAC  0012               	return		;funcret
  2426  001EAE                     __end_of_SIONovaTecla:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _SIONovaDireccio *****************
  2430 ;; Defined at:
  2431 ;;		line 28 in file "SIO.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  num             1    wreg     unsigned char 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  num             1    5[COMRAM] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/1
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1
  2445 ;;      Params:         0       0       0
  2446 ;;      Locals:         1       0       0
  2447 ;;      Temps:          0       0       0
  2448 ;;      Totals:         1       0       0
  2449 ;;Total ram usage:        1 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 2
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_motorJoc
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text12
  2460  001EAE                     __ptext12:
  2461                           	callstack 0
  2462  001EAE                     _SIONovaDireccio:
  2463                           	callstack 27
  2464                           
  2465                           ;incstack = 0
  2466                           ;SIONovaDireccio@num stored from wreg
  2467  001EAE  6E67               	movwf	SIONovaDireccio@num^0,c
  2468                           
  2469                           ;SIO.c: 29:     direccioSIO = num;
  2470  001EB0  C067  F04A         	movff	SIONovaDireccio@num,_direccioSIO
  2471  001EB4  0012               	return		;funcret
  2472  001EB6                     __end_of_SIONovaDireccio:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _HnoJugant *****************
  2476 ;; Defined at:
  2477 ;;		line 34 in file "Hora.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		None
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/1
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1
  2491 ;;      Params:         0       0       0
  2492 ;;      Locals:         0       0       0
  2493 ;;      Temps:          0       0       0
  2494 ;;      Totals:         0       0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 2
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_motorJoc
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text13
  2506  001F4C                     __ptext13:
  2507                           	callstack 0
  2508  001F4C                     _HnoJugant:
  2509                           	callstack 27
  2510                           
  2511                           ;Hora.c: 35:     jugant = 0;
  2512                           
  2513                           ;incstack = 0
  2514  001F4C  9A77               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2515  001F4E  0012               	return		;funcret
  2516  001F50                     __end_of_HnoJugant:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _HNouSegon *****************
  2520 ;; Defined at:
  2521 ;;		line 22 in file "Hora.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;		None               void
  2528 ;; Registers used:
  2529 ;;		status,0
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/1
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1
  2535 ;;      Params:         0       0       0
  2536 ;;      Locals:         0       0       0
  2537 ;;      Temps:          0       0       0
  2538 ;;      Totals:         0       0       0
  2539 ;;Total ram usage:        0 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 2
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_motorJoc
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text14
  2550  001E56                     __ptext14:
  2551                           	callstack 0
  2552  001E56                     _HNouSegon:
  2553                           	callstack 27
  2554                           
  2555                           ;Hora.c: 23:     return nouSegon;
  2556                           
  2557                           ;incstack = 0
  2558  001E56  B877               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2559  001E58  D002               	goto	l2164
  2560  001E5A  90D8               	bcf	status,0,c
  2561  001E5C  0012               	return	
  2562  001E5E                     l2164:
  2563  001E5E  80D8               	bsf	status,0,c
  2564  001E60  0012               	return		;funcret
  2565  001E62                     __end_of_HNouSegon:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _HJugant *****************
  2569 ;; Defined at:
  2570 ;;		line 37 in file "Hora.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		None
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/1
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1
  2584 ;;      Params:         0       0       0
  2585 ;;      Locals:         0       0       0
  2586 ;;      Temps:          0       0       0
  2587 ;;      Totals:         0       0       0
  2588 ;;Total ram usage:        0 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 2
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_motorJoc
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text15
  2599  001F2E                     __ptext15:
  2600                           	callstack 0
  2601  001F2E                     _HJugant:
  2602                           	callstack 27
  2603                           
  2604                           ;Hora.c: 38:     jugant = 1;
  2605                           
  2606                           ;incstack = 0
  2607  001F2E  8A77               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2608                           
  2609                           ;Hora.c: 39:     tempsAcabat = 0;
  2610  001F30  9677               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2611  001F32  0012               	return		;funcret
  2612  001F34                     __end_of_HJugant:
  2613                           	callstack 0
  2614                           
  2615 ;; *************** function _HGetTime *****************
  2616 ;; Defined at:
  2617 ;;		line 30 in file "Hora.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      PTR unsigned char 
  2624 ;; Registers used:
  2625 ;;		wreg
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1
  2631 ;;      Params:         2       0       0
  2632 ;;      Locals:         0       0       0
  2633 ;;      Temps:          0       0       0
  2634 ;;      Totals:         2       0       0
  2635 ;;Total ram usage:        2 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 2
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_motorJoc
  2642 ;;		_motorSIO
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text16
  2647  001F50                     __ptext16:
  2648                           	callstack 0
  2649  001F50                     _HGetTime:
  2650                           	callstack 27
  2651                           
  2652                           ;Hora.c: 31:     return hora;
  2653                           
  2654                           ;incstack = 0
  2655  001F50  0E58               	movlw	_hora& (0+255)
  2656  001F52  0012               	return		;funcret
  2657  001F54                     __end_of_HGetTime:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _HClearNouSegon *****************
  2661 ;; Defined at:
  2662 ;;		line 26 in file "Hora.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		None
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/1
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1
  2676 ;;      Params:         0       0       0
  2677 ;;      Locals:         0       0       0
  2678 ;;      Temps:          0       0       0
  2679 ;;      Totals:         0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 2
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_motorJoc
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text17
  2691  001F54                     __ptext17:
  2692                           	callstack 0
  2693  001F54                     _HClearNouSegon:
  2694                           	callstack 27
  2695                           
  2696                           ;Hora.c: 27:     nouSegon = 0;
  2697                           
  2698                           ;incstack = 0
  2699  001F54  9877               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2700  001F56  0012               	return		;funcret
  2701  001F58                     __end_of_HClearNouSegon:
  2702                           	callstack 0
  2703                           
  2704 ;; *************** function _motorHora *****************
  2705 ;; Defined at:
  2706 ;;		line 45 in file "Hora.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/1
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1
  2720 ;;      Params:         0       0       0
  2721 ;;      Locals:         0       0       0
  2722 ;;      Temps:          2       0       0
  2723 ;;      Totals:         2       0       0
  2724 ;;Total ram usage:        2 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; Hardware stack levels required when called: 3
  2727 ;; This function calls:
  2728 ;;		_TiGetTics
  2729 ;;		_TiResetTics
  2730 ;;		_playAltaveu
  2731 ;; This function is called by:
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text18
  2737  00164A                     __ptext18:
  2738                           	callstack 0
  2739  00164A                     _motorHora:
  2740                           	callstack 27
  2741                           
  2742                           ;Hora.c: 46:  static char state = 0;;Hora.c: 48:  switch(state) {
  2743                           
  2744                           ;incstack = 0
  2745  00164A  D042               	goto	l4794
  2746  00164C                     l4744:
  2747                           
  2748                           ;Hora.c: 50:    if (TiGetTics(timerHora) >= 1205) {
  2749  00164C  500E               	movf	_timerHora^0,w,c
  2750  00164E  EC5F  F00E         	call	_TiGetTics
  2751  001652  BE68               	btfsc	(?_TiGetTics+1)^0,7,c
  2752  001654  0012               	return	
  2753  001656  0EB5               	movlw	181
  2754  001658  5C67               	subwf	?_TiGetTics^0,w,c
  2755  00165A  0E04               	movlw	4
  2756  00165C  5868               	subwfb	(?_TiGetTics+1)^0,w,c
  2757  00165E  A0D8               	btfss	status,0,c
  2758  001660  0012               	return	
  2759                           
  2760                           ;Hora.c: 51:     TiResetTics(timerHora);
  2761  001662  500E               	movf	_timerHora^0,w,c
  2762  001664  ECDE  F00E         	call	_TiResetTics
  2763                           
  2764                           ;Hora.c: 52:     if(jugant){
  2765  001668  AA77               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2766  00166A  D02F               	goto	l4790
  2767                           
  2768                           ;Hora.c: 53:       nouSegon = 1;
  2769  00166C  8877               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2770                           
  2771                           ;Hora.c: 55:      hora[4]--;
  2772  00166E  065C               	decf	(_hora+4)^0,f,c
  2773                           
  2774                           ;Hora.c: 56:      if(hora[4] == ('0'-1)){
  2775  001670  0E2F               	movlw	47
  2776  001672  185C               	xorwf	(_hora+4)^0,w,c
  2777  001674  A4D8               	btfss	status,2,c
  2778  001676  D003               	goto	l4760
  2779                           
  2780                           ;Hora.c: 57:       hora[4] = '9';
  2781  001678  0E39               	movlw	57
  2782  00167A  6E5C               	movwf	(_hora+4)^0,c
  2783                           
  2784                           ;Hora.c: 58:       hora[3]--;
  2785  00167C  065B               	decf	(_hora+3)^0,f,c
  2786  00167E                     l4760:
  2787                           
  2788                           ;Hora.c: 61:      if(hora[3] == ('0'-1)){
  2789  00167E  0E2F               	movlw	47
  2790  001680  185B               	xorwf	(_hora+3)^0,w,c
  2791  001682  A4D8               	btfss	status,2,c
  2792  001684  D003               	goto	l4766
  2793                           
  2794                           ;Hora.c: 62:       hora[3] = '5';
  2795  001686  0E35               	movlw	53
  2796  001688  6E5B               	movwf	(_hora+3)^0,c
  2797                           
  2798                           ;Hora.c: 63:       hora[1]--;
  2799  00168A  0659               	decf	(_hora+1)^0,f,c
  2800  00168C                     l4766:
  2801                           
  2802                           ;Hora.c: 66:      if(hora[1] == ('0'-1)){
  2803  00168C  0E2F               	movlw	47
  2804  00168E  1859               	xorwf	(_hora+1)^0,w,c
  2805  001690  A4D8               	btfss	status,2,c
  2806  001692  D003               	goto	l4772
  2807                           
  2808                           ;Hora.c: 67:       hora[1] = '9';
  2809  001694  0E39               	movlw	57
  2810  001696  6E59               	movwf	(_hora+1)^0,c
  2811                           
  2812                           ;Hora.c: 68:       hora[0]--;
  2813  001698  0658               	decf	_hora^0,f,c
  2814  00169A                     l4772:
  2815                           
  2816                           ;Hora.c: 71:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2817  00169A  0E30               	movlw	48
  2818  00169C  1858               	xorwf	_hora^0,w,c
  2819  00169E  A4D8               	btfss	status,2,c
  2820  0016A0  D00C               	goto	l4782
  2821  0016A2  0E30               	movlw	48
  2822  0016A4  1859               	xorwf	(_hora+1)^0,w,c
  2823  0016A6  A4D8               	btfss	status,2,c
  2824  0016A8  D008               	goto	l4782
  2825  0016AA  0E30               	movlw	48
  2826  0016AC  185B               	xorwf	(_hora+3)^0,w,c
  2827  0016AE  A4D8               	btfss	status,2,c
  2828  0016B0  D004               	goto	l4782
  2829  0016B2  0E30               	movlw	48
  2830  0016B4  185C               	xorwf	(_hora+4)^0,w,c
  2831  0016B6  B4D8               	btfsc	status,2,c
  2832                           
  2833                           ;Hora.c: 72:       tempsAcabat = 1;
  2834  0016B8  8677               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2835  0016BA                     l4782:
  2836                           
  2837                           ;Hora.c: 75:      segons++;
  2838  0016BA  2A0D               	incf	_segons^0,f,c
  2839                           
  2840                           ;Hora.c: 76:      if(segons > 59){
  2841  0016BC  0E3B               	movlw	59
  2842  0016BE  640D               	cpfsgt	_segons^0,c
  2843  0016C0  D004               	goto	l4790
  2844                           
  2845                           ;Hora.c: 77:       playAltaveu();
  2846  0016C2  ECAC  F00F         	call	_playAltaveu	;wreg free
  2847                           
  2848                           ;Hora.c: 78:       segons = 0;
  2849  0016C6  0E00               	movlw	0
  2850  0016C8  6E0D               	movwf	_segons^0,c
  2851  0016CA                     l4790:
  2852                           
  2853                           ;Hora.c: 81:     state = 0;
  2854  0016CA  0E00               	movlw	0
  2855  0016CC  6E0C               	movwf	motorHora@state^0,c
  2856  0016CE  0012               	return	
  2857  0016D0                     l4794:
  2858  0016D0  500C               	movf	motorHora@state^0,w,c
  2859  0016D2  6E6E               	movwf	??_motorHora^0,c
  2860  0016D4  6A6F               	clrf	(??_motorHora+1)^0,c
  2861                           
  2862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2863                           ; Switch size 1, requested type "simple"
  2864                           ; Number of cases is 1, Range of values is 0 to 0
  2865                           ; switch strategies available:
  2866                           ; Name         Instructions Cycles
  2867                           ; simple_byte            4     3 (average)
  2868                           ;	Chosen strategy is simple_byte
  2869  0016D6  506F               	movf	(??_motorHora+1)^0,w,c
  2870  0016D8  0A00               	xorlw	0	; case 0
  2871  0016DA  A4D8               	btfss	status,2,c
  2872  0016DC  0012               	return	
  2873                           
  2874                           ; Switch size 1, requested type "simple"
  2875                           ; Number of cases is 1, Range of values is 0 to 0
  2876                           ; switch strategies available:
  2877                           ; Name         Instructions Cycles
  2878                           ; simple_byte            4     3 (average)
  2879                           ;	Chosen strategy is simple_byte
  2880  0016DE  506E               	movf	??_motorHora^0,w,c
  2881  0016E0  0A00               	xorlw	0	; case 0
  2882  0016E2  A4D8               	btfss	status,2,c
  2883  0016E4  0012               	return	
  2884  0016E6  D7B2               	goto	l4744
  2885  0016E8                     __end_of_motorHora:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _playAltaveu *****************
  2889 ;; Defined at:
  2890 ;;		line 14 in file "Altaveu.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		None
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/1
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1
  2904 ;;      Params:         0       0       0
  2905 ;;      Locals:         0       0       0
  2906 ;;      Temps:          0       0       0
  2907 ;;      Totals:         0       0       0
  2908 ;;Total ram usage:        0 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 2
  2911 ;; This function calls:
  2912 ;;		Nothing
  2913 ;; This function is called by:
  2914 ;;		_motorHora
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text19
  2919  001F58                     __ptext19:
  2920                           	callstack 0
  2921  001F58                     _playAltaveu:
  2922                           	callstack 27
  2923                           
  2924                           ;Altaveu.c: 15:     reproduir = 1;
  2925                           
  2926                           ;incstack = 0
  2927  001F58  8478               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2928  001F5A  0012               	return		;funcret
  2929  001F5C                     __end_of_playAltaveu:
  2930                           	callstack 0
  2931                           
  2932 ;; *************** function _motorAltaveu *****************
  2933 ;; Defined at:
  2934 ;;		line 17 in file "Altaveu.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/1
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1
  2948 ;;      Params:         0       0       0
  2949 ;;      Locals:         0       0       0
  2950 ;;      Temps:          3       0       0
  2951 ;;      Totals:         3       0       0
  2952 ;;Total ram usage:        3 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 3
  2955 ;; This function calls:
  2956 ;;		_TiGetTics
  2957 ;;		_TiResetTics
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text20
  2964  0014E0                     __ptext20:
  2965                           	callstack 0
  2966  0014E0                     _motorAltaveu:
  2967                           	callstack 27
  2968                           
  2969                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  2970                           
  2971                           ;incstack = 0
  2972  0014E0  D048               	goto	l5216
  2973  0014E2                     l752:
  2974                           
  2975                           ;Altaveu.c: 22:    if (reproduir) {
  2976  0014E2  A478               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2977  0014E4  0012               	return	
  2978                           
  2979                           ;Altaveu.c: 23:     nota = 1;
  2980  0014E6  0E01               	movlw	1
  2981  0014E8  6E1E               	movwf	_nota^0,c
  2982                           
  2983                           ;Altaveu.c: 24:     copsNota = 0;
  2984  0014EA  0E00               	movlw	0
  2985  0014EC  6E1C               	movwf	_copsNota^0,c
  2986                           
  2987                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  2988  0014EE  501D               	movf	_timerAltaveu^0,w,c
  2989  0014F0  ECDE  F00E         	call	_TiResetTics
  2990  0014F4                     l5180:
  2991                           
  2992                           ;Altaveu.c: 26:     state = 1;
  2993  0014F4  0E01               	movlw	1
  2994  0014F6  6E1B               	movwf	motorAltaveu@state^0,c
  2995  0014F8  0012               	return	
  2996  0014FA                     l5182:
  2997                           
  2998                           ;Altaveu.c: 30:    if (nota > 5) {
  2999  0014FA  0E05               	movlw	5
  3000  0014FC  641E               	cpfsgt	_nota^0,c
  3001  0014FE  D004               	goto	l5188
  3002                           
  3003                           ;Altaveu.c: 31:     reproduir = 0;
  3004  001500  9478               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  3005                           
  3006                           ;Altaveu.c: 32:     state = 0;
  3007  001502  0E00               	movlw	0
  3008  001504  6E1B               	movwf	motorAltaveu@state^0,c
  3009                           
  3010                           ;Altaveu.c: 33:    }
  3011  001506  0012               	return	
  3012  001508                     l5188:
  3013  001508  0EA8               	movlw	168
  3014  00150A  181C               	xorwf	_copsNota^0,w,c
  3015  00150C  A4D8               	btfss	status,2,c
  3016  00150E  D004               	goto	l5196
  3017                           
  3018                           ;Altaveu.c: 35:     nota++;
  3019  001510  2A1E               	incf	_nota^0,f,c
  3020                           
  3021                           ;Altaveu.c: 36:     copsNota = 0;
  3022  001512  0E00               	movlw	0
  3023  001514  6E1C               	movwf	_copsNota^0,c
  3024  001516  D7EE               	goto	l5180
  3025  001518                     l5196:
  3026  001518  501D               	movf	_timerAltaveu^0,w,c
  3027  00151A  EC5F  F00E         	call	_TiGetTics
  3028  00151E  501E               	movf	_nota^0,w,c
  3029  001520  6E6E               	movwf	??_motorAltaveu^0,c
  3030  001522  6A6F               	clrf	(??_motorAltaveu+1)^0,c
  3031  001524  5067               	movf	?_TiGetTics^0,w,c
  3032  001526  5C6E               	subwf	??_motorAltaveu^0,w,c
  3033  001528  506F               	movf	(??_motorAltaveu+1)^0,w,c
  3034  00152A  0A80               	xorlw	128
  3035  00152C  6E70               	movwf	(??_motorAltaveu+2)^0,c
  3036  00152E  5068               	movf	(?_TiGetTics+1)^0,w,c
  3037  001530  0A80               	xorlw	128
  3038  001532  5870               	subwfb	(??_motorAltaveu+2)^0,w,c
  3039  001534  B0D8               	btfsc	status,0,c
  3040  001536  0012               	return	
  3041                           
  3042                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  3043  001538  808A               	bsf	138,0,c	;volatile
  3044                           
  3045                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  3046  00153A  501D               	movf	_timerAltaveu^0,w,c
  3047  00153C  ECDE  F00E         	call	_TiResetTics
  3048                           
  3049                           ;Altaveu.c: 42:     state = 2;
  3050  001540  0E02               	movlw	2
  3051  001542  6E1B               	movwf	motorAltaveu@state^0,c
  3052  001544  0012               	return	
  3053  001546                     l5204:
  3054                           
  3055                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  3056  001546  501D               	movf	_timerAltaveu^0,w,c
  3057  001548  EC5F  F00E         	call	_TiGetTics
  3058  00154C  501E               	movf	_nota^0,w,c
  3059  00154E  6E6E               	movwf	??_motorAltaveu^0,c
  3060  001550  6A6F               	clrf	(??_motorAltaveu+1)^0,c
  3061  001552  5067               	movf	?_TiGetTics^0,w,c
  3062  001554  5C6E               	subwf	??_motorAltaveu^0,w,c
  3063  001556  506F               	movf	(??_motorAltaveu+1)^0,w,c
  3064  001558  0A80               	xorlw	128
  3065  00155A  6E70               	movwf	(??_motorAltaveu+2)^0,c
  3066  00155C  5068               	movf	(?_TiGetTics+1)^0,w,c
  3067  00155E  0A80               	xorlw	128
  3068  001560  5870               	subwfb	(??_motorAltaveu+2)^0,w,c
  3069  001562  B0D8               	btfsc	status,0,c
  3070  001564  0012               	return	
  3071                           
  3072                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  3073  001566  908A               	bcf	138,0,c	;volatile
  3074                           
  3075                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  3076  001568  501D               	movf	_timerAltaveu^0,w,c
  3077  00156A  ECDE  F00E         	call	_TiResetTics
  3078                           
  3079                           ;Altaveu.c: 49:     copsNota++;
  3080  00156E  2A1C               	incf	_copsNota^0,f,c
  3081  001570  D7C1               	goto	l5180
  3082  001572                     l5216:
  3083  001572  501B               	movf	motorAltaveu@state^0,w,c
  3084  001574  6E6E               	movwf	??_motorAltaveu^0,c
  3085  001576  6A6F               	clrf	(??_motorAltaveu+1)^0,c
  3086                           
  3087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3088                           ; Switch size 1, requested type "simple"
  3089                           ; Number of cases is 1, Range of values is 0 to 0
  3090                           ; switch strategies available:
  3091                           ; Name         Instructions Cycles
  3092                           ; simple_byte            4     3 (average)
  3093                           ;	Chosen strategy is simple_byte
  3094  001578  506F               	movf	(??_motorAltaveu+1)^0,w,c
  3095  00157A  0A00               	xorlw	0	; case 0
  3096  00157C  A4D8               	btfss	status,2,c
  3097  00157E  0012               	return	
  3098                           
  3099                           ; Switch size 1, requested type "simple"
  3100                           ; Number of cases is 3, Range of values is 0 to 2
  3101                           ; switch strategies available:
  3102                           ; Name         Instructions Cycles
  3103                           ; simple_byte           10     6 (average)
  3104                           ;	Chosen strategy is simple_byte
  3105  001580  506E               	movf	??_motorAltaveu^0,w,c
  3106  001582  0A00               	xorlw	0	; case 0
  3107  001584  B4D8               	btfsc	status,2,c
  3108  001586  D7AD               	goto	l752
  3109  001588  0A01               	xorlw	1	; case 1
  3110  00158A  B4D8               	btfsc	status,2,c
  3111  00158C  D7B6               	goto	l5182
  3112  00158E  0A03               	xorlw	3	; case 2
  3113  001590  A4D8               	btfss	status,2,c
  3114  001592  0012               	return	
  3115  001594  D7D8               	goto	l5204
  3116  001596                     __end_of_motorAltaveu:
  3117                           	callstack 0
  3118                           
  3119 ;; *************** function _menu *****************
  3120 ;; Defined at:
  3121 ;;		line 40 in file "Menu.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/1
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1
  3135 ;;      Params:         0       0       0
  3136 ;;      Locals:         0       0       0
  3137 ;;      Temps:          0       2       0
  3138 ;;      Totals:         0       2       0
  3139 ;;Total ram usage:        2 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; Hardware stack levels required when called: 6
  3142 ;; This function calls:
  3143 ;;		_GLCDMostraMenu
  3144 ;;		_HActualitzaHora
  3145 ;;		_JJuguem
  3146 ;;		_JendGame
  3147 ;;		_JnovaDireccio
  3148 ;;		_JnovaTecla
  3149 ;;		_LcClear
  3150 ;;		_LcGotoXY
  3151 ;;		_LcLliure
  3152 ;;		_LcNewString
  3153 ;;		_LcPutChar
  3154 ;;		_NoFerMenu
  3155 ;;		_SIOHaAcabatPuntuacions
  3156 ;;		_SMSoff
  3157 ;;		_SMSon
  3158 ;;		_SiFerMenu
  3159 ;;		_TiGetTics
  3160 ;;		_TiResetTics
  3161 ;;		_URegister
  3162 ;;		_UcheckExists
  3163 ;;		_UcheckExistsGetError
  3164 ;;		_UcheckExistsNotFinished
  3165 ;;		_UenviaChar
  3166 ;;		_UenviaPas
  3167 ;;		_UgetNumUsuaris
  3168 ;;		_UgetUserName
  3169 ;;		_checkHoraAcabat
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text21
  3176  0002E4                     __ptext21:
  3177                           	callstack 0
  3178  0002E4                     _menu:
  3179                           	callstack 24
  3180                           
  3181                           ;Menu.c: 41:  static char state = 0;;Menu.c: 43:  switch(state) {
  3182                           
  3183                           ;incstack = 0
  3184  0002E4  D202               	goto	l6332
  3185  0002E6                     l5966:
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;Menu.c: 45:    LcClear();
  3189  0002E6  EC9B  F00E         	call	_LcClear	;wreg free
  3190                           
  3191                           ;Menu.c: 46:    LcNewString(loginText);
  3192  0002EA  0EA0               	movlw	low _loginText
  3193  0002EC  6E6A               	movwf	LcNewString@new_s^0,c
  3194  0002EE  6A6B               	clrf	(LcNewString@new_s+1)^0,c
  3195  0002F0  EC43  F00F         	call	_LcNewString	;wreg free
  3196                           
  3197                           ;Menu.c: 47:    state = 1;
  3198  0002F4  0E01               	movlw	1
  3199  0002F6  6E26               	movwf	menu@state^0,c
  3200                           
  3201                           ;Menu.c: 48:   break;
  3202  0002F8  0012               	return	
  3203  0002FA                     l5972:
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;Menu.c: 50:    if (LcLliure()) {
  3207  0002FA  EC49  F00F         	call	_LcLliure	;wreg free
  3208  0002FE  A0D8               	btfss	status,0,c
  3209  000300  0012               	return	
  3210                           
  3211                           ;Menu.c: 51:     LcGotoXY(0,1);
  3212  000302  0E01               	movlw	1
  3213  000304  6E6F               	movwf	LcGotoXY@Row^0,c
  3214  000306  0E00               	movlw	0
  3215  000308  EC59  F00D         	call	_LcGotoXY
  3216                           
  3217                           ;Menu.c: 52:     LcNewString(registerText);
  3218  00030C  0E95               	movlw	low _registerText
  3219  00030E  6E6A               	movwf	LcNewString@new_s^0,c
  3220  000310  6A6B               	clrf	(LcNewString@new_s+1)^0,c
  3221  000312  EC43  F00F         	call	_LcNewString	;wreg free
  3222                           
  3223                           ;Menu.c: 53:     NovaTecla = -1;
  3224  000316  6853               	setf	_NovaTecla^0,c
  3225                           
  3226                           ;Menu.c: 54:     state = 2;
  3227  000318  0E02               	movlw	2
  3228  00031A  6E26               	movwf	menu@state^0,c
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;Menu.c: 56:   break;
  3232                           
  3233                           ;Menu.c: 55:    }
  3234  00031C  0012               	return	
  3235  00031E                     l5982:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;Menu.c: 58:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  3239  00031E  0453               	decf	_NovaTecla^0,w,c
  3240  000320  A4D8               	btfss	status,2,c
  3241  000322  D009               	goto	l5990
  3242                           
  3243                           ; BSR set to: 0
  3244  000324  ECAE  F00F         	call	_UgetNumUsuaris	;wreg free
  3245  000328  0900               	iorlw	0
  3246  00032A  B4D8               	btfsc	status,2,c
  3247  00032C  D004               	goto	l5990
  3248                           
  3249                           ;Menu.c: 59:     loginNOTRegister = 1;
  3250  00032E  8C78               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3251  000330                     l5988:
  3252                           
  3253                           ;Menu.c: 60:     state = 3;
  3254  000330  0E03               	movlw	3
  3255  000332  6E26               	movwf	menu@state^0,c
  3256                           
  3257                           ;Menu.c: 61:    }
  3258  000334  0012               	return	
  3259  000336                     l5990:
  3260  000336  0E02               	movlw	2
  3261  000338  1853               	xorwf	_NovaTecla^0,w,c
  3262  00033A  A4D8               	btfss	status,2,c
  3263  00033C  0012               	return	
  3264                           
  3265                           ;Menu.c: 63:     loginNOTRegister = 0;
  3266  00033E  9C78               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3267  000340  D7F7               	goto	l5988
  3268  000342                     l495:
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;Menu.c: 68:    NovaTecla = -1;
  3272  000342  6853               	setf	_NovaTecla^0,c
  3273                           
  3274                           ;Menu.c: 69:    novaLletra = -1;
  3275  000344  6852               	setf	_novaLletra^0,c
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;Menu.c: 70:    LcClear();
  3279  000346  EC9B  F00E         	call	_LcClear	;wreg free
  3280                           
  3281                           ;Menu.c: 71:    LcNewString("USER: ");
  3282  00034A  0EDB               	movlw	low STR_1
  3283  00034C  6E6A               	movwf	LcNewString@new_s^0,c
  3284  00034E  506A               	movf	LcNewString@new_s^0,w,c
  3285  000350  A4D8               	btfss	status,2,c
  3286  000352  0E02               	movlw	high __smallconst
  3287  000354  6E6B               	movwf	(LcNewString@new_s+1)^0,c
  3288  000356  EC43  F00F         	call	_LcNewString	;wreg free
  3289                           
  3290                           ;Menu.c: 72:    state = 4;
  3291  00035A  0E04               	movlw	4
  3292  00035C  6E26               	movwf	menu@state^0,c
  3293                           
  3294                           ;Menu.c: 73:   break;
  3295  00035E  0012               	return	
  3296  000360                     l6002:
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;Menu.c: 75:    if (LcLliure()) {
  3300  000360  EC49  F00F         	call	_LcLliure	;wreg free
  3301  000364  A0D8               	btfss	status,0,c
  3302  000366  0012               	return	
  3303                           
  3304                           ;Menu.c: 76:     LcGotoXY(0,1);
  3305  000368  0E01               	movlw	1
  3306  00036A  6E6F               	movwf	LcGotoXY@Row^0,c
  3307  00036C  0E00               	movlw	0
  3308  00036E  EC59  F00D         	call	_LcGotoXY
  3309                           
  3310                           ;Menu.c: 77:     LcNewString("PSWD: ");
  3311  000372  0ED4               	movlw	low STR_2
  3312  000374  6E6A               	movwf	LcNewString@new_s^0,c
  3313  000376  506A               	movf	LcNewString@new_s^0,w,c
  3314  000378  A4D8               	btfss	status,2,c
  3315  00037A  0E02               	movlw	high __smallconst
  3316  00037C  6E6B               	movwf	(LcNewString@new_s+1)^0,c
  3317  00037E  EC43  F00F         	call	_LcNewString	;wreg free
  3318                           
  3319                           ;Menu.c: 78:     state = 5;
  3320  000382  0E05               	movlw	5
  3321  000384  6E26               	movwf	menu@state^0,c
  3322  000386  0012               	return	
  3323  000388                     l6010:
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;Menu.c: 82:    if (LcLliure()) {
  3327  000388  EC49  F00F         	call	_LcLliure	;wreg free
  3328  00038C  A0D8               	btfss	status,0,c
  3329  00038E  0012               	return	
  3330                           
  3331                           ;Menu.c: 83:     LcGotoXY(6,0);
  3332  000390  0E00               	movlw	0
  3333  000392  6E6F               	movwf	LcGotoXY@Row^0,c
  3334  000394  0E06               	movlw	6
  3335  000396  EC59  F00D         	call	_LcGotoXY
  3336                           
  3337                           ;Menu.c: 84:     SMSon();
  3338  00039A  EC9A  F00F         	call	_SMSon	;wreg free
  3339                           
  3340                           ;Menu.c: 85:     tmp =0;
  3341  00039E  0E00               	movlw	0
  3342  0003A0  6E2A               	movwf	_tmp^0,c
  3343  0003A2                     l6018:
  3344                           
  3345                           ;Menu.c: 86:     state = 6;
  3346  0003A2  0E06               	movlw	6
  3347  0003A4  6E26               	movwf	menu@state^0,c
  3348  0003A6  0012               	return	
  3349  0003A8                     l6020:
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;Menu.c: 90:    if (novaLletra > 47 && NovaTecla != 10) {
  3353  0003A8  5052               	movf	_novaLletra^0,w,c
  3354  0003AA  0A80               	xorlw	128
  3355  0003AC  0F50               	addlw	-176
  3356  0003AE  A0D8               	btfss	status,0,c
  3357  0003B0  D00F               	goto	l6030
  3358                           
  3359                           ; BSR set to: 0
  3360  0003B2  0E0A               	movlw	10
  3361  0003B4  1853               	xorwf	_NovaTecla^0,w,c
  3362  0003B6  B4D8               	btfsc	status,2,c
  3363  0003B8  D00B               	goto	l6030
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;Menu.c: 91:     LcPutChar(novaLletra);
  3367  0003BA  5052               	movf	_novaLletra^0,w,c
  3368  0003BC  ECED  F00C         	call	_LcPutChar
  3369                           
  3370                           ;Menu.c: 92:     UenviaChar(novaLletra,tmp);
  3371  0003C0  C02A  F067         	movff	_tmp,UenviaChar@pos
  3372  0003C4  5052               	movf	_novaLletra^0,w,c
  3373  0003C6  EC10  F00F         	call	_UenviaChar
  3374  0003CA                     l6028:
  3375                           
  3376                           ;Menu.c: 93:     state = 7;
  3377  0003CA  0E07               	movlw	7
  3378  0003CC  6E26               	movwf	menu@state^0,c
  3379                           
  3380                           ;Menu.c: 94:    }
  3381  0003CE  0012               	return	
  3382  0003D0                     l6030:
  3383                           
  3384                           ; BSR set to: 0
  3385  0003D0  0E0B               	movlw	11
  3386  0003D2  1853               	xorwf	_NovaTecla^0,w,c
  3387  0003D4  A4D8               	btfss	status,2,c
  3388  0003D6  0012               	return	
  3389  0003D8  D7F8               	goto	l6028
  3390  0003DA                     l6034:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;Menu.c: 100:    if (tmp != 7 && NovaTecla != 11) {
  3394  0003DA  0E07               	movlw	7
  3395  0003DC  182A               	xorwf	_tmp^0,w,c
  3396  0003DE  B4D8               	btfsc	status,2,c
  3397  0003E0  D008               	goto	l6046
  3398                           
  3399                           ; BSR set to: 0
  3400  0003E2  0E0B               	movlw	11
  3401  0003E4  1853               	xorwf	_NovaTecla^0,w,c
  3402  0003E6  B4D8               	btfsc	status,2,c
  3403  0003E8  D004               	goto	l6046
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;Menu.c: 101:     tmp++;
  3407  0003EA  2A2A               	incf	_tmp^0,f,c
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;Menu.c: 102:     NovaTecla = -1;
  3411  0003EC  6853               	setf	_NovaTecla^0,c
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;Menu.c: 103:     novaLletra = -1;
  3415  0003EE  6852               	setf	_novaLletra^0,c
  3416  0003F0  D7D8               	goto	l6018
  3417  0003F2                     l6046:
  3418                           
  3419                           ; BSR set to: 0
  3420  0003F2  0E07               	movlw	7
  3421  0003F4  182A               	xorwf	_tmp^0,w,c
  3422  0003F6  B4D8               	btfsc	status,2,c
  3423  0003F8  D004               	goto	u5830
  3424                           
  3425                           ; BSR set to: 0
  3426  0003FA  0E0B               	movlw	11
  3427  0003FC  1853               	xorwf	_NovaTecla^0,w,c
  3428  0003FE  A4D8               	btfss	status,2,c
  3429  000400  0012               	return	
  3430  000402                     u5830:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;Menu.c: 107:     LcGotoXY(6,1);
  3434  000402  0E01               	movlw	1
  3435  000404  6E6F               	movwf	LcGotoXY@Row^0,c
  3436  000406  0E06               	movlw	6
  3437  000408  EC59  F00D         	call	_LcGotoXY
  3438                           
  3439                           ;Menu.c: 108:     UenviaChar('\0',tmp);
  3440  00040C  C02A  F067         	movff	_tmp,UenviaChar@pos
  3441  000410  0E00               	movlw	0
  3442  000412  EC10  F00F         	call	_UenviaChar
  3443                           
  3444                           ;Menu.c: 109:     NovaTecla = -1;
  3445  000416  6853               	setf	_NovaTecla^0,c
  3446                           
  3447                           ;Menu.c: 110:     novaLletra = -1;
  3448  000418  6852               	setf	_novaLletra^0,c
  3449                           
  3450                           ;Menu.c: 111:     tmp = 0;
  3451  00041A  0E00               	movlw	0
  3452  00041C  6E2A               	movwf	_tmp^0,c
  3453  00041E                     l6060:
  3454                           
  3455                           ;Menu.c: 112:     state = 8;
  3456  00041E  0E08               	movlw	8
  3457  000420  6E26               	movwf	menu@state^0,c
  3458  000422  0012               	return	
  3459  000424                     l6062:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;Menu.c: 116:    if (novaLletra > 47 && NovaTecla != 10) {
  3463  000424  5052               	movf	_novaLletra^0,w,c
  3464  000426  0A80               	xorlw	128
  3465  000428  0F50               	addlw	-176
  3466  00042A  A0D8               	btfss	status,0,c
  3467  00042C  D00F               	goto	l6072
  3468                           
  3469                           ; BSR set to: 0
  3470  00042E  0E0A               	movlw	10
  3471  000430  1853               	xorwf	_NovaTecla^0,w,c
  3472  000432  B4D8               	btfsc	status,2,c
  3473  000434  D00B               	goto	l6072
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;Menu.c: 117:     LcPutChar(novaLletra);
  3477  000436  5052               	movf	_novaLletra^0,w,c
  3478  000438  ECED  F00C         	call	_LcPutChar
  3479                           
  3480                           ;Menu.c: 118:     UenviaPas(novaLletra,tmp);
  3481  00043C  C02A  F067         	movff	_tmp,UenviaPas@pos
  3482  000440  5052               	movf	_novaLletra^0,w,c
  3483  000442  EC08  F00F         	call	_UenviaPas
  3484  000446                     l6070:
  3485                           
  3486                           ;Menu.c: 119:     state = 9;
  3487  000446  0E09               	movlw	9
  3488  000448  6E26               	movwf	menu@state^0,c
  3489                           
  3490                           ;Menu.c: 120:    }
  3491  00044A  0012               	return	
  3492  00044C                     l6072:
  3493                           
  3494                           ; BSR set to: 0
  3495  00044C  0E0B               	movlw	11
  3496  00044E  1853               	xorwf	_NovaTecla^0,w,c
  3497  000450  A4D8               	btfss	status,2,c
  3498  000452  0012               	return	
  3499  000454  D7F8               	goto	l6070
  3500  000456                     l6076:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;Menu.c: 126:    if (tmp != 7 && NovaTecla != 11) {
  3504  000456  0E07               	movlw	7
  3505  000458  182A               	xorwf	_tmp^0,w,c
  3506  00045A  B4D8               	btfsc	status,2,c
  3507  00045C  D008               	goto	l6088
  3508                           
  3509                           ; BSR set to: 0
  3510  00045E  0E0B               	movlw	11
  3511  000460  1853               	xorwf	_NovaTecla^0,w,c
  3512  000462  B4D8               	btfsc	status,2,c
  3513  000464  D004               	goto	l6088
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;Menu.c: 127:     tmp++;
  3517  000466  2A2A               	incf	_tmp^0,f,c
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;Menu.c: 128:     NovaTecla = -1;
  3521  000468  6853               	setf	_NovaTecla^0,c
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;Menu.c: 129:     novaLletra = -1;
  3525  00046A  6852               	setf	_novaLletra^0,c
  3526  00046C  D7D8               	goto	l6060
  3527  00046E                     l6088:
  3528                           
  3529                           ; BSR set to: 0
  3530  00046E  0E07               	movlw	7
  3531  000470  182A               	xorwf	_tmp^0,w,c
  3532  000472  B4D8               	btfsc	status,2,c
  3533  000474  D004               	goto	u5900
  3534                           
  3535                           ; BSR set to: 0
  3536  000476  0E0B               	movlw	11
  3537  000478  1853               	xorwf	_NovaTecla^0,w,c
  3538  00047A  A4D8               	btfss	status,2,c
  3539  00047C  0012               	return	
  3540  00047E                     u5900:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;Menu.c: 133:     UenviaPas('\0',tmp);
  3544  00047E  C02A  F067         	movff	_tmp,UenviaPas@pos
  3545  000482  0E00               	movlw	0
  3546  000484  EC08  F00F         	call	_UenviaPas
  3547                           
  3548                           ;Menu.c: 134:     NovaTecla = -1;
  3549  000488  6853               	setf	_NovaTecla^0,c
  3550                           
  3551                           ;Menu.c: 135:     novaLletra = -1;
  3552  00048A  6852               	setf	_novaLletra^0,c
  3553                           
  3554                           ;Menu.c: 136:     tmp = 0;
  3555  00048C  0E00               	movlw	0
  3556  00048E  6E2A               	movwf	_tmp^0,c
  3557                           
  3558                           ;Menu.c: 137:     UcheckExists();
  3559  000490  ECB0  F00F         	call	_UcheckExists	;wreg free
  3560                           
  3561                           ;Menu.c: 138:     SMSoff();
  3562  000494  EC9D  F00F         	call	_SMSoff	;wreg free
  3563                           
  3564                           ;Menu.c: 139:     state = 10;
  3565  000498  0E0A               	movlw	10
  3566  00049A  6E26               	movwf	menu@state^0,c
  3567  00049C  0012               	return	
  3568  00049E                     l6106:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;Menu.c: 143:    if (!UcheckExistsNotFinished()) {
  3572  00049E  EC37  F00F         	call	_UcheckExistsNotFinished	;wreg free
  3573  0004A2  B0D8               	btfsc	status,0,c
  3574  0004A4  0012               	return	
  3575                           
  3576                           ;Menu.c: 144:     indexUsuari = UcheckExistsGetError();
  3577  0004A6  EC5B  F00F         	call	_UcheckExistsGetError	;wreg free
  3578  0004AA  A0D8               	btfss	status,0,c
  3579  0004AC  D002               	goto	u5920
  3580  0004AE  0E01               	movlw	1
  3581  0004B0  D001               	goto	u5930
  3582  0004B2                     u5920:
  3583  0004B2  0E00               	movlw	0
  3584  0004B4                     u5930:
  3585  0004B4  6E27               	movwf	_indexUsuari^0,c
  3586                           
  3587                           ;Menu.c: 145:     state = 11;
  3588  0004B6  0E0B               	movlw	11
  3589  0004B8  6E26               	movwf	menu@state^0,c
  3590  0004BA  0012               	return	
  3591  0004BC                     l6112:
  3592                           
  3593                           ;Menu.c: 150:     state = 12;
  3594  0004BC  0E0C               	movlw	12
  3595  0004BE  6E26               	movwf	menu@state^0,c
  3596                           
  3597                           ;Menu.c: 151:    }
  3598  0004C0  0012               	return	
  3599  0004C2                     l6118:
  3600                           
  3601                           ;Menu.c: 154:     state = 0;
  3602  0004C2  0E00               	movlw	0
  3603  0004C4  6E26               	movwf	menu@state^0,c
  3604                           
  3605                           ;Menu.c: 155:    }
  3606  0004C6  0012               	return	
  3607  0004C8                     l6130:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;Menu.c: 165:    LcClear();
  3611  0004C8  EC9B  F00E         	call	_LcClear	;wreg free
  3612                           
  3613                           ;Menu.c: 166:    SiFerMenu();
  3614  0004CC  ECB4  F00F         	call	_SiFerMenu	;wreg free
  3615                           
  3616                           ;Menu.c: 167:    GLCDMostraMenu(menuDalt);
  3617  0004D0  5028               	movf	_menuDalt^0,w,c
  3618  0004D2  EC3D  F00F         	call	_GLCDMostraMenu
  3619                           
  3620                           ;Menu.c: 168:    novaDireccio = -1;
  3621  0004D6  6851               	setf	_novaDireccio^0,c
  3622                           
  3623                           ;Menu.c: 169:    NovaTecla = -1;
  3624  0004D8  6853               	setf	_NovaTecla^0,c
  3625                           
  3626                           ;Menu.c: 170:    state = 13;
  3627  0004DA  0E0D               	movlw	13
  3628  0004DC  6E26               	movwf	menu@state^0,c
  3629                           
  3630                           ;Menu.c: 171:   break;
  3631  0004DE  0012               	return	
  3632  0004E0                     l6142:
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;Menu.c: 173:    if (novaDireccio == 8) {
  3636  0004E0  0E08               	movlw	8
  3637  0004E2  1851               	xorwf	_novaDireccio^0,w,c
  3638  0004E4  A4D8               	btfss	status,2,c
  3639  0004E6  D005               	goto	l6150
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;Menu.c: 174:     if(menuDalt < 4) menuDalt++;
  3643  0004E8  0E04               	movlw	4
  3644  0004EA  6028               	cpfslt	_menuDalt^0,c
  3645  0004EC  D7E7               	goto	l6112
  3646                           
  3647                           ; BSR set to: 0
  3648  0004EE  2A28               	incf	_menuDalt^0,f,c
  3649  0004F0  D7E5               	goto	l6112
  3650  0004F2                     l6150:
  3651                           
  3652                           ; BSR set to: 0
  3653  0004F2  0E02               	movlw	2
  3654  0004F4  1851               	xorwf	_novaDireccio^0,w,c
  3655  0004F6  A4D8               	btfss	status,2,c
  3656  0004F8  D005               	goto	l6158
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;Menu.c: 178:     if(menuDalt > 0) menuDalt--;
  3660  0004FA  5028               	movf	_menuDalt^0,w,c
  3661  0004FC  B4D8               	btfsc	status,2,c
  3662  0004FE  D7DE               	goto	l6112
  3663                           
  3664                           ; BSR set to: 0
  3665  000500  0628               	decf	_menuDalt^0,f,c
  3666  000502  D7DC               	goto	l6112
  3667  000504                     l6158:
  3668                           
  3669                           ; BSR set to: 0
  3670  000504  0E0B               	movlw	11
  3671  000506  1853               	xorwf	_NovaTecla^0,w,c
  3672  000508  A4D8               	btfss	status,2,c
  3673  00050A  D013               	goto	l6170
  3674                           
  3675                           ; BSR set to: 0
  3676  00050C  0E03               	movlw	3
  3677  00050E  1828               	xorwf	_menuDalt^0,w,c
  3678  000510  A4D8               	btfss	status,2,c
  3679  000512  D00F               	goto	l6170
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;Menu.c: 182:     NoFerMenu();
  3683  000514  ECB8  F00F         	call	_NoFerMenu	;wreg free
  3684                           
  3685                           ;Menu.c: 183:     LcClear();
  3686  000518  EC9B  F00E         	call	_LcClear	;wreg free
  3687                           
  3688                           ;Menu.c: 184:     LcNewString("BYE BYE ");
  3689  00051C  0EBB               	movlw	low STR_3
  3690  00051E  6E6A               	movwf	LcNewString@new_s^0,c
  3691  000520  506A               	movf	LcNewString@new_s^0,w,c
  3692  000522  A4D8               	btfss	status,2,c
  3693  000524  0E02               	movlw	high __smallconst
  3694  000526  6E6B               	movwf	(LcNewString@new_s+1)^0,c
  3695  000528  EC43  F00F         	call	_LcNewString	;wreg free
  3696                           
  3697                           ;Menu.c: 185:     state = 14;
  3698  00052C  0E0E               	movlw	14
  3699  00052E  6E26               	movwf	menu@state^0,c
  3700                           
  3701                           ;Menu.c: 186:    }
  3702  000530  0012               	return	
  3703  000532                     l6170:
  3704                           
  3705                           ; BSR set to: 0
  3706  000532  0E0B               	movlw	11
  3707  000534  1853               	xorwf	_NovaTecla^0,w,c
  3708  000536  A4D8               	btfss	status,2,c
  3709  000538  D013               	goto	l6184
  3710                           
  3711                           ; BSR set to: 0
  3712  00053A  0428               	decf	_menuDalt^0,w,c
  3713  00053C  A4D8               	btfss	status,2,c
  3714  00053E  D010               	goto	l6184
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;Menu.c: 188:     LcClear();
  3718  000540  EC9B  F00E         	call	_LcClear	;wreg free
  3719                           
  3720                           ;Menu.c: 189:     NoFerMenu();
  3721  000544  ECB8  F00F         	call	_NoFerMenu	;wreg free
  3722                           
  3723                           ;Menu.c: 190:     LcNewString("Modify Time:");
  3724  000548  0EA2               	movlw	low STR_4
  3725  00054A  6E6A               	movwf	LcNewString@new_s^0,c
  3726  00054C  506A               	movf	LcNewString@new_s^0,w,c
  3727  00054E  A4D8               	btfss	status,2,c
  3728  000550  0E02               	movlw	high __smallconst
  3729  000552  6E6B               	movwf	(LcNewString@new_s+1)^0,c
  3730  000554  EC43  F00F         	call	_LcNewString	;wreg free
  3731                           
  3732                           ;Menu.c: 191:     NovaTecla = -1;
  3733  000558  6853               	setf	_NovaTecla^0,c
  3734                           
  3735                           ;Menu.c: 192:     state = 16;
  3736  00055A  0E10               	movlw	16
  3737  00055C  6E26               	movwf	menu@state^0,c
  3738                           
  3739                           ;Menu.c: 193:    }
  3740  00055E  0012               	return	
  3741  000560                     l6184:
  3742                           
  3743                           ; BSR set to: 0
  3744  000560  5028               	movf	_menuDalt^0,w,c
  3745  000562  A4D8               	btfss	status,2,c
  3746  000564  0012               	return	
  3747                           
  3748                           ; BSR set to: 0
  3749  000566  0E0B               	movlw	11
  3750  000568  1853               	xorwf	_NovaTecla^0,w,c
  3751  00056A  A4D8               	btfss	status,2,c
  3752  00056C  0012               	return	
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;Menu.c: 195:     NoFerMenu();
  3756  00056E  ECB8  F00F         	call	_NoFerMenu	;wreg free
  3757                           
  3758                           ;Menu.c: 196:     NovaTecla = -1;
  3759  000572  6853               	setf	_NovaTecla^0,c
  3760                           
  3761                           ;Menu.c: 197:     LcClear();
  3762  000574  EC9B  F00E         	call	_LcClear	;wreg free
  3763                           
  3764                           ;Menu.c: 198:     LcNewString("TIME REMAINING:");
  3765  000578  0E92               	movlw	low STR_5
  3766  00057A  6E6A               	movwf	LcNewString@new_s^0,c
  3767  00057C  506A               	movf	LcNewString@new_s^0,w,c
  3768  00057E  A4D8               	btfss	status,2,c
  3769  000580  0E02               	movlw	high __smallconst
  3770  000582  6E6B               	movwf	(LcNewString@new_s+1)^0,c
  3771  000584  EC43  F00F         	call	_LcNewString	;wreg free
  3772                           
  3773                           ;Menu.c: 199:     JJuguem(indexUsuari);
  3774  000588  5027               	movf	_indexUsuari^0,w,c
  3775  00058A  EC67  F00F         	call	_JJuguem
  3776  00058E                     l6198:
  3777                           
  3778                           ;Menu.c: 200:     state = 21;
  3779  00058E  0E15               	movlw	21
  3780  000590  6E26               	movwf	menu@state^0,c
  3781  000592  0012               	return	
  3782  000594                     l6200:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;Menu.c: 204:    if (LcLliure()) {
  3786  000594  EC49  F00F         	call	_LcLliure	;wreg free
  3787  000598  A0D8               	btfss	status,0,c
  3788  00059A  0012               	return	
  3789                           
  3790                           ;Menu.c: 205:     LcNewString(UgetUserName(indexUsuari));
  3791  00059C  5027               	movf	_indexUsuari^0,w,c
  3792  00059E  ECF5  F00E         	call	_UgetUserName
  3793  0005A2  C067  F06A         	movff	?_UgetUserName,LcNewString@new_s
  3794  0005A6  C068  F06B         	movff	?_UgetUserName+1,LcNewString@new_s+1
  3795  0005AA  EC43  F00F         	call	_LcNewString	;wreg free
  3796                           
  3797                           ;Menu.c: 206:     TiResetTics(timerMenu);
  3798  0005AE  5029               	movf	_timerMenu^0,w,c
  3799  0005B0  ECDE  F00E         	call	_TiResetTics
  3800                           
  3801                           ;Menu.c: 207:     state = 15;
  3802  0005B4  0E0F               	movlw	15
  3803  0005B6  6E26               	movwf	menu@state^0,c
  3804  0005B8  0012               	return	
  3805  0005BA                     l6208:
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;Menu.c: 211:    if (TiGetTics(timerMenu) > 2410) {
  3809  0005BA  5029               	movf	_timerMenu^0,w,c
  3810  0005BC  EC5F  F00E         	call	_TiGetTics
  3811  0005C0  BE68               	btfsc	(?_TiGetTics+1)^0,7,c
  3812  0005C2  0012               	return	
  3813  0005C4  0E6B               	movlw	107
  3814  0005C6  5C67               	subwf	?_TiGetTics^0,w,c
  3815  0005C8  0E09               	movlw	9
  3816  0005CA  5868               	subwfb	(?_TiGetTics+1)^0,w,c
  3817  0005CC  A0D8               	btfss	status,0,c
  3818  0005CE  0012               	return	
  3819  0005D0  D778               	goto	l6118
  3820  0005D2                     l6212:
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;Menu.c: 216:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3824  0005D2  EC49  F00F         	call	_LcLliure	;wreg free
  3825  0005D6  B0D8               	btfsc	status,0,c
  3826  0005D8  BE53               	btfsc	_NovaTecla^0,7,c
  3827  0005DA  D04B               	goto	l6278
  3828  0005DC  5053               	movf	_NovaTecla^0,w,c
  3829  0005DE  0A80               	xorlw	128
  3830  0005E0  0F76               	addlw	-138
  3831  0005E2  B0D8               	btfsc	status,0,c
  3832  0005E4  D046               	goto	l6278
  3833                           
  3834                           ;Menu.c: 217:     LcGotoXY(0,1);
  3835  0005E6  0E01               	movlw	1
  3836  0005E8  6E6F               	movwf	LcGotoXY@Row^0,c
  3837  0005EA  0E00               	movlw	0
  3838  0005EC  EC59  F00D         	call	_LcGotoXY
  3839                           
  3840                           ;Menu.c: 218:     horaTmp[0] = NovaTecla+48;
  3841  0005F0  5053               	movf	_NovaTecla^0,w,c
  3842  0005F2  0F30               	addlw	48
  3843  0005F4  6E41               	movwf	_horaTmp^0,c
  3844                           
  3845                           ;Menu.c: 219:     LcPutChar(horaTmp[0]);
  3846  0005F6  5041               	movf	_horaTmp^0,w,c
  3847  0005F8  ECED  F00C         	call	_LcPutChar
  3848                           
  3849                           ;Menu.c: 220:     NovaTecla = -1;
  3850  0005FC  6853               	setf	_NovaTecla^0,c
  3851                           
  3852                           ;Menu.c: 221:     state = 17;
  3853  0005FE  0E11               	movlw	17
  3854  000600                     L1:
  3855  000600  6E26               	movwf	menu@state^0,c
  3856                           
  3857                           ;Menu.c: 222:    }
  3858  000602  0012               	return	
  3859  000604                     L2:
  3860  000604  1853               	xorwf	_NovaTecla^0,w,c
  3861  000606  A4D8               	btfss	status,2,c
  3862  000608  0012               	return	
  3863  00060A  D758               	goto	l6112
  3864  00060C                     l6232:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;Menu.c: 228:    if (NovaTecla > -1 && NovaTecla < 10) {
  3868  00060C  BE53               	btfsc	_NovaTecla^0,7,c
  3869  00060E  D031               	goto	l6278
  3870                           
  3871                           ; BSR set to: 0
  3872  000610  5053               	movf	_NovaTecla^0,w,c
  3873  000612  0A80               	xorlw	128
  3874  000614  0F76               	addlw	-138
  3875  000616  B0D8               	btfsc	status,0,c
  3876  000618  D02C               	goto	l6278
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;Menu.c: 229:     horaTmp[1] = NovaTecla+48;
  3880  00061A  5053               	movf	_NovaTecla^0,w,c
  3881  00061C  0F30               	addlw	48
  3882  00061E  6E42               	movwf	(_horaTmp+1)^0,c
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;Menu.c: 230:     LcPutChar(horaTmp[1]);
  3886  000620  5042               	movf	(_horaTmp+1)^0,w,c
  3887  000622  ECED  F00C         	call	_LcPutChar
  3888                           
  3889                           ;Menu.c: 231:     NovaTecla = -1;
  3890  000626  6853               	setf	_NovaTecla^0,c
  3891                           
  3892                           ;Menu.c: 232:     LcPutChar(':');
  3893  000628  0E3A               	movlw	58
  3894  00062A  ECED  F00C         	call	_LcPutChar
  3895                           
  3896                           ;Menu.c: 233:     state = 18;
  3897  00062E  0E12               	movlw	18
  3898  000630  D7E7               	goto	L1
  3899  000632                     l6250:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;Menu.c: 240:    if (NovaTecla > -1 && NovaTecla < 10) {
  3903  000632  BE53               	btfsc	_NovaTecla^0,7,c
  3904  000634  D01E               	goto	l6278
  3905                           
  3906                           ; BSR set to: 0
  3907  000636  5053               	movf	_NovaTecla^0,w,c
  3908  000638  0A80               	xorlw	128
  3909  00063A  0F76               	addlw	-138
  3910  00063C  B0D8               	btfsc	status,0,c
  3911  00063E  D019               	goto	l6278
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;Menu.c: 241:     horaTmp[2] = NovaTecla+48;
  3915  000640  5053               	movf	_NovaTecla^0,w,c
  3916  000642  0F30               	addlw	48
  3917  000644  6E43               	movwf	(_horaTmp+2)^0,c
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;Menu.c: 242:     LcPutChar(horaTmp[2]);
  3921  000646  5043               	movf	(_horaTmp+2)^0,w,c
  3922  000648  ECED  F00C         	call	_LcPutChar
  3923                           
  3924                           ;Menu.c: 243:     NovaTecla = -1;
  3925  00064C  6853               	setf	_NovaTecla^0,c
  3926                           
  3927                           ;Menu.c: 244:     state = 19;
  3928  00064E  0E13               	movlw	19
  3929  000650  D7D7               	goto	L1
  3930  000652                     l6266:
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;Menu.c: 251:    if (NovaTecla > -1 && NovaTecla < 10) {
  3934  000652  BE53               	btfsc	_NovaTecla^0,7,c
  3935  000654  D00E               	goto	l6278
  3936                           
  3937                           ; BSR set to: 0
  3938  000656  5053               	movf	_NovaTecla^0,w,c
  3939  000658  0A80               	xorlw	128
  3940  00065A  0F76               	addlw	-138
  3941  00065C  B0D8               	btfsc	status,0,c
  3942  00065E  D009               	goto	l6278
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;Menu.c: 252:     horaTmp[3] = NovaTecla+48;
  3946  000660  5053               	movf	_NovaTecla^0,w,c
  3947  000662  0F30               	addlw	48
  3948  000664  6E44               	movwf	(_horaTmp+3)^0,c
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;Menu.c: 253:     LcPutChar(horaTmp[3]);
  3952  000666  5044               	movf	(_horaTmp+3)^0,w,c
  3953  000668  ECED  F00C         	call	_LcPutChar
  3954                           
  3955                           ;Menu.c: 254:     NovaTecla = -1;
  3956  00066C  6853               	setf	_NovaTecla^0,c
  3957                           
  3958                           ;Menu.c: 255:     state = 20;
  3959  00066E  0E14               	movlw	20
  3960  000670  D7C7               	goto	L1
  3961  000672                     l6278:
  3962                           
  3963                           ; BSR set to: 0
  3964  000672  0E0A               	movlw	10
  3965  000674  D7C7               	goto	L2
  3966  000676                     l6282:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;Menu.c: 262:    if (NovaTecla == 11) {
  3970  000676  0E0B               	movlw	11
  3971  000678  1853               	xorwf	_NovaTecla^0,w,c
  3972  00067A  A4D8               	btfss	status,2,c
  3973  00067C  D7FA               	goto	l6278
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;Menu.c: 263:     HActualitzaHora(horaTmp);
  3977  00067E  0E41               	movlw	low _horaTmp
  3978  000680  6E67               	movwf	HActualitzaHora@nova^0,c
  3979  000682  ECCA  F00D         	call	_HActualitzaHora	;wreg free
  3980                           
  3981                           ;Menu.c: 264:     NovaTecla = -1;
  3982  000686  6853               	setf	_NovaTecla^0,c
  3983  000688  D719               	goto	l6112
  3984  00068A                     l6294:
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;Menu.c: 272:    if (NovaTecla == 10 && LcLliure() || checkHoraAcabat()) {
  3988  00068A  0E0A               	movlw	10
  3989  00068C  1853               	xorwf	_NovaTecla^0,w,c
  3990  00068E  A4D8               	btfss	status,2,c
  3991  000690  D004               	goto	u6220
  3992                           
  3993                           ; BSR set to: 0
  3994  000692  EC49  F00F         	call	_LcLliure	;wreg free
  3995  000696  B0D8               	btfsc	status,0,c
  3996  000698  D004               	goto	u6230
  3997  00069A                     u6220:
  3998  00069A  EC31  F00F         	call	_checkHoraAcabat	;wreg free
  3999  00069E  A0D8               	btfss	status,0,c
  4000  0006A0  D007               	goto	l6306
  4001  0006A2                     u6230:
  4002                           
  4003                           ;Menu.c: 273:     LcClear();
  4004  0006A2  EC9B  F00E         	call	_LcClear	;wreg free
  4005                           
  4006                           ;Menu.c: 274:     JendGame();
  4007  0006A6  ECBA  F00F         	call	_JendGame	;wreg free
  4008                           
  4009                           ;Menu.c: 275:     state = 22;
  4010  0006AA  0E16               	movlw	22
  4011  0006AC  6E26               	movwf	menu@state^0,c
  4012                           
  4013                           ;Menu.c: 276:    }
  4014  0006AE  0012               	return	
  4015  0006B0                     l6306:
  4016  0006B0  5053               	movf	_NovaTecla^0,w,c
  4017  0006B2  0A80               	xorlw	128
  4018  0006B4  0F7F               	addlw	-129
  4019  0006B6  A0D8               	btfss	status,0,c
  4020  0006B8  D00A               	goto	l6316
  4021  0006BA  5053               	movf	_NovaTecla^0,w,c
  4022  0006BC  0A80               	xorlw	128
  4023  0006BE  0F76               	addlw	-138
  4024  0006C0  B0D8               	btfsc	status,0,c
  4025  0006C2  D005               	goto	l6316
  4026                           
  4027                           ;Menu.c: 278:     JnovaTecla(NovaTecla);
  4028  0006C4  5053               	movf	_NovaTecla^0,w,c
  4029  0006C6  EC5F  F00F         	call	_JnovaTecla
  4030                           
  4031                           ;Menu.c: 279:     NovaTecla = -1;
  4032  0006CA  6853               	setf	_NovaTecla^0,c
  4033  0006CC  D760               	goto	l6198
  4034  0006CE                     l6316:
  4035  0006CE  BE51               	btfsc	_novaDireccio^0,7,c
  4036  0006D0  0012               	return	
  4037                           
  4038                           ;Menu.c: 283:     JnovaDireccio(novaDireccio);
  4039  0006D2  5051               	movf	_novaDireccio^0,w,c
  4040  0006D4  EC63  F00F         	call	_JnovaDireccio
  4041                           
  4042                           ;Menu.c: 284:     novaDireccio = -1;
  4043  0006D8  6851               	setf	_novaDireccio^0,c
  4044  0006DA  D759               	goto	l6198
  4045  0006DC                     l6324:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;Menu.c: 289:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  4049  0006DC  ECB6  F00F         	call	_SIOHaAcabatPuntuacions	;wreg free
  4050  0006E0  0900               	iorlw	0
  4051  0006E2  B4D8               	btfsc	status,2,c
  4052  0006E4  0012               	return	
  4053  0006E6  0E0B               	movlw	11
  4054  0006E8  D78D               	goto	L2
  4055  0006EA                     l6332:
  4056  0006EA  5026               	movf	menu@state^0,w,c
  4057  0006EC  0100               	movlb	0	; () banked
  4058  0006EE  6FC9               	movwf	??_menu& (0+255),b
  4059  0006F0  6BCA               	clrf	(??_menu+1)& (0+255),b
  4060                           
  4061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4062                           ; Switch size 1, requested type "simple"
  4063                           ; Number of cases is 1, Range of values is 0 to 0
  4064                           ; switch strategies available:
  4065                           ; Name         Instructions Cycles
  4066                           ; simple_byte            4     3 (average)
  4067                           ;	Chosen strategy is simple_byte
  4068  0006F2  51CA               	movf	(??_menu+1)& (0+255),w,b
  4069  0006F4  0A00               	xorlw	0	; case 0
  4070  0006F6  A4D8               	btfss	status,2,c
  4071  0006F8  0012               	return	
  4072                           
  4073                           ; BSR set to: 0
  4074                           ; Switch size 1, requested type "simple"
  4075                           ; Number of cases is 23, Range of values is 0 to 22
  4076                           ; switch strategies available:
  4077                           ; Name         Instructions Cycles
  4078                           ; simple_byte           70    36 (average)
  4079                           ;	Chosen strategy is simple_byte
  4080  0006FA  51C9               	movf	??_menu& (0+255),w,b
  4081  0006FC  0A00               	xorlw	0	; case 0
  4082  0006FE  B4D8               	btfsc	status,2,c
  4083  000700  D5F2               	goto	l5966
  4084  000702  0A01               	xorlw	1	; case 1
  4085  000704  B4D8               	btfsc	status,2,c
  4086  000706  D5F9               	goto	l5972
  4087  000708  0A03               	xorlw	3	; case 2
  4088  00070A  B4D8               	btfsc	status,2,c
  4089  00070C  D608               	goto	l5982
  4090  00070E  0A01               	xorlw	1	; case 3
  4091  000710  B4D8               	btfsc	status,2,c
  4092  000712  D617               	goto	l495
  4093  000714  0A07               	xorlw	7	; case 4
  4094  000716  B4D8               	btfsc	status,2,c
  4095  000718  D623               	goto	l6002
  4096  00071A  0A01               	xorlw	1	; case 5
  4097  00071C  B4D8               	btfsc	status,2,c
  4098  00071E  D634               	goto	l6010
  4099  000720  0A03               	xorlw	3	; case 6
  4100  000722  B4D8               	btfsc	status,2,c
  4101  000724  D641               	goto	l6020
  4102  000726  0A01               	xorlw	1	; case 7
  4103  000728  B4D8               	btfsc	status,2,c
  4104  00072A  D657               	goto	l6034
  4105  00072C  0A0F               	xorlw	15	; case 8
  4106  00072E  B4D8               	btfsc	status,2,c
  4107  000730  D679               	goto	l6062
  4108  000732  0A01               	xorlw	1	; case 9
  4109  000734  B4D8               	btfsc	status,2,c
  4110  000736  D68F               	goto	l6076
  4111  000738  0A03               	xorlw	3	; case 10
  4112  00073A  B4D8               	btfsc	status,2,c
  4113  00073C  D6B0               	goto	l6106
  4114  00073E  0A01               	xorlw	1	; case 11
  4115  000740  B4D8               	btfsc	status,2,c
  4116  000742  D6BC               	goto	l6112
  4117  000744  0A07               	xorlw	7	; case 12
  4118  000746  B4D8               	btfsc	status,2,c
  4119  000748  D6BF               	goto	l6130
  4120  00074A  0A01               	xorlw	1	; case 13
  4121  00074C  B4D8               	btfsc	status,2,c
  4122  00074E  D6C8               	goto	l6142
  4123  000750  0A03               	xorlw	3	; case 14
  4124  000752  B4D8               	btfsc	status,2,c
  4125  000754  D71F               	goto	l6200
  4126  000756  0A01               	xorlw	1	; case 15
  4127  000758  B4D8               	btfsc	status,2,c
  4128  00075A  D72F               	goto	l6208
  4129  00075C  0A1F               	xorlw	31	; case 16
  4130  00075E  B4D8               	btfsc	status,2,c
  4131  000760  D738               	goto	l6212
  4132  000762  0A01               	xorlw	1	; case 17
  4133  000764  B4D8               	btfsc	status,2,c
  4134  000766  D752               	goto	l6232
  4135  000768  0A03               	xorlw	3	; case 18
  4136  00076A  B4D8               	btfsc	status,2,c
  4137  00076C  D762               	goto	l6250
  4138  00076E  0A01               	xorlw	1	; case 19
  4139  000770  B4D8               	btfsc	status,2,c
  4140  000772  D76F               	goto	l6266
  4141  000774  0A07               	xorlw	7	; case 20
  4142  000776  B4D8               	btfsc	status,2,c
  4143  000778  D77E               	goto	l6282
  4144  00077A  0A01               	xorlw	1	; case 21
  4145  00077C  B4D8               	btfsc	status,2,c
  4146  00077E  D785               	goto	l6294
  4147  000780  0A03               	xorlw	3	; case 22
  4148  000782  A4D8               	btfss	status,2,c
  4149  000784  0012               	return	
  4150  000786  D7AA               	goto	l6324
  4151  000788                     __end_of_menu:
  4152                           	callstack 0
  4153                           
  4154 ;; *************** function _checkHoraAcabat *****************
  4155 ;; Defined at:
  4156 ;;		line 41 in file "Hora.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;		None               void
  4163 ;; Registers used:
  4164 ;;		status,0
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1
  4170 ;;      Params:         0       0       0
  4171 ;;      Locals:         0       0       0
  4172 ;;      Temps:          0       0       0
  4173 ;;      Totals:         0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used: 1
  4176 ;; Hardware stack levels required when called: 2
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_menu
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text22
  4185  001E62                     __ptext22:
  4186                           	callstack 0
  4187  001E62                     _checkHoraAcabat:
  4188                           	callstack 27
  4189                           
  4190                           ;Hora.c: 42:     return tempsAcabat;
  4191                           
  4192                           ;incstack = 0
  4193  001E62  B677               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4194  001E64  D002               	goto	l4222
  4195  001E66  90D8               	bcf	status,0,c
  4196  001E68  0012               	return	
  4197  001E6A                     l4222:
  4198  001E6A  80D8               	bsf	status,0,c
  4199  001E6C  0012               	return		;funcret
  4200  001E6E                     __end_of_checkHoraAcabat:
  4201                           	callstack 0
  4202                           
  4203 ;; *************** function _UgetUserName *****************
  4204 ;; Defined at:
  4205 ;;		line 27 in file "Usuaris.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  quin            1    wreg     unsigned char 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  quin            1    7[COMRAM] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  2    5[COMRAM] PTR unsigned char 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0, prodl, prodh
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1
  4219 ;;      Params:         2       0       0
  4220 ;;      Locals:         1       0       0
  4221 ;;      Temps:          0       0       0
  4222 ;;      Totals:         3       0       0
  4223 ;;Total ram usage:        3 bytes
  4224 ;; Hardware stack levels used: 1
  4225 ;; Hardware stack levels required when called: 2
  4226 ;; This function calls:
  4227 ;;		Nothing
  4228 ;; This function is called by:
  4229 ;;		_menu
  4230 ;;		_motorSIO
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text23
  4235  001DEA                     __ptext23:
  4236                           	callstack 0
  4237  001DEA                     _UgetUserName:
  4238                           	callstack 27
  4239                           
  4240                           ;incstack = 0
  4241                           ;UgetUserName@quin stored from wreg
  4242  001DEA  6E69               	movwf	UgetUserName@quin^0,c
  4243                           
  4244                           ;Usuaris.c: 28:     return usuaris[quin].username;
  4245  001DEC  5069               	movf	UgetUserName@quin^0,w,c
  4246  001DEE  0D17               	mullw	23
  4247  001DF0  0E00               	movlw	low _usuaris
  4248  001DF2  24F3               	addwf	243,w,c
  4249  001DF4  6E67               	movwf	?_UgetUserName^0,c
  4250  001DF6  0E01               	movlw	high _usuaris
  4251  001DF8  20F4               	addwfc	prodh,w,c
  4252  001DFA  6E68               	movwf	(?_UgetUserName+1)^0,c
  4253  001DFC  0012               	return		;funcret
  4254  001DFE                     __end_of_UgetUserName:
  4255                           	callstack 0
  4256                           
  4257 ;; *************** function _UgetNumUsuaris *****************
  4258 ;; Defined at:
  4259 ;;		line 30 in file "Usuaris.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      unsigned char 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1
  4273 ;;      Params:         0       0       0
  4274 ;;      Locals:         0       0       0
  4275 ;;      Temps:          0       0       0
  4276 ;;      Totals:         0       0       0
  4277 ;;Total ram usage:        0 bytes
  4278 ;; Hardware stack levels used: 1
  4279 ;; Hardware stack levels required when called: 2
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_menu
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text24
  4288  001F5C                     __ptext24:
  4289                           	callstack 0
  4290  001F5C                     _UgetNumUsuaris:
  4291                           	callstack 27
  4292                           
  4293                           ;Usuaris.c: 31:     return numUsuaris;
  4294                           
  4295                           ;incstack = 0
  4296  001F5C  5024               	movf	_numUsuaris^0,w,c
  4297  001F5E  0012               	return		;funcret
  4298  001F60                     __end_of_UgetNumUsuaris:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _UenviaPas *****************
  4302 ;; Defined at:
  4303 ;;		line 46 in file "Usuaris.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  c               1    wreg     unsigned char 
  4306 ;;  pos             1    5[COMRAM] unsigned char 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  c               1    6[COMRAM] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1
  4318 ;;      Params:         1       0       0
  4319 ;;      Locals:         1       0       0
  4320 ;;      Temps:          0       0       0
  4321 ;;      Totals:         2       0       0
  4322 ;;Total ram usage:        2 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; Hardware stack levels required when called: 2
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_menu
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text25
  4333  001E10                     __ptext25:
  4334                           	callstack 0
  4335  001E10                     _UenviaPas:
  4336                           	callstack 27
  4337                           
  4338                           ;incstack = 0
  4339                           ;UenviaPas@c stored from wreg
  4340  001E10  6E68               	movwf	UenviaPas@c^0,c
  4341                           
  4342                           ;Usuaris.c: 47:     tmpPassword[pos] = c;
  4343  001E12  5067               	movf	UenviaPas@pos^0,w,c
  4344  001E14  0FC0               	addlw	low _tmpPassword
  4345  001E16  6ED9               	movwf	fsr2l,c
  4346  001E18  6ADA               	clrf	fsr2h,c
  4347  001E1A  C068  FFDF         	movff	UenviaPas@c,indf2
  4348  001E1E  0012               	return		;funcret
  4349  001E20                     __end_of_UenviaPas:
  4350                           	callstack 0
  4351                           
  4352 ;; *************** function _UenviaChar *****************
  4353 ;; Defined at:
  4354 ;;		line 43 in file "Usuaris.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  c               1    wreg     unsigned char 
  4357 ;;  pos             1    5[COMRAM] unsigned char 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  c               1    6[COMRAM] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1
  4369 ;;      Params:         1       0       0
  4370 ;;      Locals:         1       0       0
  4371 ;;      Temps:          0       0       0
  4372 ;;      Totals:         2       0       0
  4373 ;;Total ram usage:        2 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; Hardware stack levels required when called: 2
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_menu
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text26
  4384  001E20                     __ptext26:
  4385                           	callstack 0
  4386  001E20                     _UenviaChar:
  4387                           	callstack 27
  4388                           
  4389                           ;incstack = 0
  4390                           ;UenviaChar@c stored from wreg
  4391  001E20  6E68               	movwf	UenviaChar@c^0,c
  4392                           
  4393                           ;Usuaris.c: 44:     tmpUsername[pos] = c;
  4394  001E22  5067               	movf	UenviaChar@pos^0,w,c
  4395  001E24  0F38               	addlw	low _tmpUsername
  4396  001E26  6ED9               	movwf	fsr2l,c
  4397  001E28  6ADA               	clrf	fsr2h,c
  4398  001E2A  C068  FFDF         	movff	UenviaChar@c,indf2
  4399  001E2E  0012               	return		;funcret
  4400  001E30                     __end_of_UenviaChar:
  4401                           	callstack 0
  4402                           
  4403 ;; *************** function _UcheckExistsNotFinished *****************
  4404 ;; Defined at:
  4405 ;;		line 37 in file "Usuaris.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;		None               void
  4412 ;; Registers used:
  4413 ;;		status,0
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1
  4419 ;;      Params:         0       0       0
  4420 ;;      Locals:         0       0       0
  4421 ;;      Temps:          0       0       0
  4422 ;;      Totals:         0       0       0
  4423 ;;Total ram usage:        0 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; Hardware stack levels required when called: 2
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_menu
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text27
  4434  001E6E                     __ptext27:
  4435                           	callstack 0
  4436  001E6E                     _UcheckExistsNotFinished:
  4437                           	callstack 27
  4438                           
  4439                           ;Usuaris.c: 38:     return do_check_exists;
  4440                           
  4441                           ;incstack = 0
  4442  001E6E  BA78               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4443  001E70  D002               	goto	l4184
  4444  001E72  90D8               	bcf	status,0,c
  4445  001E74  0012               	return	
  4446  001E76                     l4184:
  4447  001E76  80D8               	bsf	status,0,c
  4448  001E78  0012               	return		;funcret
  4449  001E7A                     __end_of_UcheckExistsNotFinished:
  4450                           	callstack 0
  4451                           
  4452 ;; *************** function _UcheckExistsGetError *****************
  4453 ;; Defined at:
  4454 ;;		line 40 in file "Usuaris.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;		None
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;		None               void
  4461 ;; Registers used:
  4462 ;;		wreg, status,0
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1
  4468 ;;      Params:         0       0       0
  4469 ;;      Locals:         0       0       0
  4470 ;;      Temps:          1       0       0
  4471 ;;      Totals:         1       0       0
  4472 ;;Total ram usage:        1 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: 2
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_menu
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text28
  4483  001EB6                     __ptext28:
  4484                           	callstack 0
  4485  001EB6                     _UcheckExistsGetError:
  4486                           	callstack 27
  4487                           
  4488                           ;Usuaris.c: 41:     return usuariLoguejat;
  4489                           
  4490                           ;incstack = 0
  4491  001EB6  C050  F067         	movff	_usuariLoguejat,??_UcheckExistsGetError
  4492  001EBA  3067               	rrcf	??_UcheckExistsGetError^0,w,c
  4493  001EBC  0012               	return		;funcret
  4494  001EBE                     __end_of_UcheckExistsGetError:
  4495                           	callstack 0
  4496                           
  4497 ;; *************** function _UcheckExists *****************
  4498 ;; Defined at:
  4499 ;;		line 34 in file "Usuaris.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;		None
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;		None
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      void 
  4506 ;; Registers used:
  4507 ;;		None
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMRAM   BANK0   BANK1
  4513 ;;      Params:         0       0       0
  4514 ;;      Locals:         0       0       0
  4515 ;;      Temps:          0       0       0
  4516 ;;      Totals:         0       0       0
  4517 ;;Total ram usage:        0 bytes
  4518 ;; Hardware stack levels used: 1
  4519 ;; Hardware stack levels required when called: 2
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		_menu
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text29
  4528  001F60                     __ptext29:
  4529                           	callstack 0
  4530  001F60                     _UcheckExists:
  4531                           	callstack 27
  4532                           
  4533                           ;Usuaris.c: 35:     do_check_exists = 1;
  4534                           
  4535                           ;incstack = 0
  4536  001F60  8A78               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4537  001F62  0012               	return		;funcret
  4538  001F64                     __end_of_UcheckExists:
  4539                           	callstack 0
  4540                           
  4541 ;; *************** function _URegister *****************
  4542 ;; Defined at:
  4543 ;;		line 54 in file "Usuaris.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		None
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1
  4557 ;;      Params:         0       0       0
  4558 ;;      Locals:         0       0       0
  4559 ;;      Temps:          0       0       0
  4560 ;;      Totals:         0       0       0
  4561 ;;Total ram usage:        0 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 2
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_menu
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text30
  4572  001F64                     __ptext30:
  4573                           	callstack 0
  4574  001F64                     _URegister:
  4575                           	callstack 27
  4576                           
  4577                           ;Usuaris.c: 55:     do_register = 1;
  4578                           
  4579                           ;incstack = 0
  4580  001F64  8878               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  4581  001F66  0012               	return		;funcret
  4582  001F68                     __end_of_URegister:
  4583                           	callstack 0
  4584                           
  4585 ;; *************** function _SiFerMenu *****************
  4586 ;; Defined at:
  4587 ;;		line 19 in file "GestioLCD.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;		None
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		None
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1
  4601 ;;      Params:         0       0       0
  4602 ;;      Locals:         0       0       0
  4603 ;;      Temps:          0       0       0
  4604 ;;      Totals:         0       0       0
  4605 ;;Total ram usage:        0 bytes
  4606 ;; Hardware stack levels used: 1
  4607 ;; Hardware stack levels required when called: 2
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_menu
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           	psect	text31
  4616  001F68                     __ptext31:
  4617                           	callstack 0
  4618  001F68                     _SiFerMenu:
  4619                           	callstack 27
  4620                           
  4621                           ;GestioLCD.c: 20:     ferMenu = 1;
  4622                           
  4623                           ;incstack = 0
  4624  001F68  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4625  001F6A  0012               	return		;funcret
  4626  001F6C                     __end_of_SiFerMenu:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function _SMSon *****************
  4630 ;; Defined at:
  4631 ;;		line 130 in file "Ssms.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		None
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1
  4645 ;;      Params:         0       0       0
  4646 ;;      Locals:         0       0       0
  4647 ;;      Temps:          0       0       0
  4648 ;;      Totals:         0       0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 2
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_menu
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text32
  4660  001F34                     __ptext32:
  4661                           	callstack 0
  4662  001F34                     _SMSon:
  4663                           	callstack 27
  4664                           
  4665                           ;Ssms.c: 131:     setSMSon = 1;
  4666                           
  4667                           ;incstack = 0
  4668  001F34  8E78               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4669                           
  4670                           ;Ssms.c: 132:     novaTecla = -1;
  4671  001F36  6856               	setf	_novaTecla^0,c
  4672  001F38  0012               	return		;funcret
  4673  001F3A                     __end_of_SMSon:
  4674                           	callstack 0
  4675                           
  4676 ;; *************** function _SMSoff *****************
  4677 ;; Defined at:
  4678 ;;		line 135 in file "Ssms.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;		None
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		None
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1
  4692 ;;      Params:         0       0       0
  4693 ;;      Locals:         0       0       0
  4694 ;;      Temps:          0       0       0
  4695 ;;      Totals:         0       0       0
  4696 ;;Total ram usage:        0 bytes
  4697 ;; Hardware stack levels used: 1
  4698 ;; Hardware stack levels required when called: 2
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_menu
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text33
  4707  001F3A                     __ptext33:
  4708                           	callstack 0
  4709  001F3A                     _SMSoff:
  4710                           	callstack 27
  4711                           
  4712                           ;Ssms.c: 136:     setSMSon = 0;
  4713                           
  4714                           ;incstack = 0
  4715  001F3A  9E78               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4716                           
  4717                           ;Ssms.c: 137:     novaTecla = -1;
  4718  001F3C  6856               	setf	_novaTecla^0,c
  4719  001F3E  0012               	return		;funcret
  4720  001F40                     __end_of_SMSoff:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function _SIOHaAcabatPuntuacions *****************
  4724 ;; Defined at:
  4725 ;;		line 36 in file "SIO.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      char 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1
  4739 ;;      Params:         0       0       0
  4740 ;;      Locals:         0       0       0
  4741 ;;      Temps:          0       0       0
  4742 ;;      Totals:         0       0       0
  4743 ;;Total ram usage:        0 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 2
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_menu
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text34
  4754  001F6C                     __ptext34:
  4755                           	callstack 0
  4756  001F6C                     _SIOHaAcabatPuntuacions:
  4757                           	callstack 27
  4758                           
  4759                           ;SIO.c: 37:     return usuariActualSIO;
  4760                           
  4761                           ;incstack = 0
  4762  001F6C  504B               	movf	_usuariActualSIO^0,w,c
  4763  001F6E  0012               	return		;funcret
  4764  001F70                     __end_of_SIOHaAcabatPuntuacions:
  4765                           	callstack 0
  4766                           
  4767 ;; *************** function _NoFerMenu *****************
  4768 ;; Defined at:
  4769 ;;		line 22 in file "GestioLCD.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;		None
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      void 
  4776 ;; Registers used:
  4777 ;;		None
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1
  4783 ;;      Params:         0       0       0
  4784 ;;      Locals:         0       0       0
  4785 ;;      Temps:          0       0       0
  4786 ;;      Totals:         0       0       0
  4787 ;;Total ram usage:        0 bytes
  4788 ;; Hardware stack levels used: 1
  4789 ;; Hardware stack levels required when called: 2
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_menu
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text35
  4798  001F70                     __ptext35:
  4799                           	callstack 0
  4800  001F70                     _NoFerMenu:
  4801                           	callstack 27
  4802                           
  4803                           ;GestioLCD.c: 23:     ferMenu = 0;
  4804                           
  4805                           ;incstack = 0
  4806  001F70  9278               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4807  001F72  0012               	return		;funcret
  4808  001F74                     __end_of_NoFerMenu:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function _JnovaTecla *****************
  4812 ;; Defined at:
  4813 ;;		line 16 in file "Joc.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  tecla           1    wreg     char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  tecla           1    5[COMRAM] char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1
  4827 ;;      Params:         0       0       0
  4828 ;;      Locals:         1       0       0
  4829 ;;      Temps:          0       0       0
  4830 ;;      Totals:         1       0       0
  4831 ;;Total ram usage:        1 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; Hardware stack levels required when called: 2
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_menu
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text36
  4842  001EBE                     __ptext36:
  4843                           	callstack 0
  4844  001EBE                     _JnovaTecla:
  4845                           	callstack 27
  4846                           
  4847                           ;incstack = 0
  4848                           ;JnovaTecla@tecla stored from wreg
  4849  001EBE  6E67               	movwf	JnovaTecla@tecla^0,c
  4850                           
  4851                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  4852  001EC0  C067  F04C         	movff	JnovaTecla@tecla,_novaTeclaJOC
  4853  001EC4  0012               	return		;funcret
  4854  001EC6                     __end_of_JnovaTecla:
  4855                           	callstack 0
  4856                           
  4857 ;; *************** function _JnovaDireccio *****************
  4858 ;; Defined at:
  4859 ;;		line 19 in file "Joc.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  dir             1    wreg     unsigned char 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  dir             1    5[COMRAM] unsigned char 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1
  4873 ;;      Params:         0       0       0
  4874 ;;      Locals:         1       0       0
  4875 ;;      Temps:          0       0       0
  4876 ;;      Totals:         1       0       0
  4877 ;;Total ram usage:        1 bytes
  4878 ;; Hardware stack levels used: 1
  4879 ;; Hardware stack levels required when called: 2
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_menu
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text37
  4888  001EC6                     __ptext37:
  4889                           	callstack 0
  4890  001EC6                     _JnovaDireccio:
  4891                           	callstack 27
  4892                           
  4893                           ;incstack = 0
  4894                           ;JnovaDireccio@dir stored from wreg
  4895  001EC6  6E67               	movwf	JnovaDireccio@dir^0,c
  4896                           
  4897                           ;Joc.c: 20:     direccioJoc = dir;
  4898  001EC8  C067  F00B         	movff	JnovaDireccio@dir,_direccioJoc
  4899  001ECC  0012               	return		;funcret
  4900  001ECE                     __end_of_JnovaDireccio:
  4901                           	callstack 0
  4902                           
  4903 ;; *************** function _JendGame *****************
  4904 ;; Defined at:
  4905 ;;		line 27 in file "Joc.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		None
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1
  4919 ;;      Params:         0       0       0
  4920 ;;      Locals:         0       0       0
  4921 ;;      Temps:          0       0       0
  4922 ;;      Totals:         0       0       0
  4923 ;;Total ram usage:        0 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; Hardware stack levels required when called: 2
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_menu
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text38
  4934  001F74                     __ptext38:
  4935                           	callstack 0
  4936  001F74                     _JendGame:
  4937                           	callstack 27
  4938                           
  4939                           ;Joc.c: 28:     jugantJoc = 0;
  4940                           
  4941                           ;incstack = 0
  4942  001F74  9477               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  4943  001F76  0012               	return		;funcret
  4944  001F78                     __end_of_JendGame:
  4945                           	callstack 0
  4946                           
  4947 ;; *************** function _JJuguem *****************
  4948 ;; Defined at:
  4949 ;;		line 13 in file "Joc.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  usuari          1    wreg     unsigned char 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  usuari          1    5[COMRAM] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1
  4963 ;;      Params:         0       0       0
  4964 ;;      Locals:         1       0       0
  4965 ;;      Temps:          0       0       0
  4966 ;;      Totals:         1       0       0
  4967 ;;Total ram usage:        1 bytes
  4968 ;; Hardware stack levels used: 1
  4969 ;; Hardware stack levels required when called: 2
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_menu
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           	psect	text39
  4978  001ECE                     __ptext39:
  4979                           	callstack 0
  4980  001ECE                     _JJuguem:
  4981                           	callstack 27
  4982                           
  4983                           ;incstack = 0
  4984                           ;JJuguem@usuari stored from wreg
  4985  001ECE  6E67               	movwf	JJuguem@usuari^0,c
  4986                           
  4987                           ;Joc.c: 14:     usuariJoc = usuari;
  4988  001ED0  C067  F04D         	movff	JJuguem@usuari,_usuariJoc
  4989  001ED4  0012               	return		;funcret
  4990  001ED6                     __end_of_JJuguem:
  4991                           	callstack 0
  4992                           
  4993 ;; *************** function _HActualitzaHora *****************
  4994 ;; Defined at:
  4995 ;;		line 15 in file "Hora.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  nova            1    5[COMRAM] PTR unsigned char 
  4998 ;;		 -> horaTmp(4), 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      void 
  5003 ;; Registers used:
  5004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1
  5010 ;;      Params:         1       0       0
  5011 ;;      Locals:         0       0       0
  5012 ;;      Temps:          0       0       0
  5013 ;;      Totals:         1       0       0
  5014 ;;Total ram usage:        1 bytes
  5015 ;; Hardware stack levels used: 1
  5016 ;; Hardware stack levels required when called: 2
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_menu
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text40
  5025  001B94                     __ptext40:
  5026                           	callstack 0
  5027  001B94                     _HActualitzaHora:
  5028                           	callstack 27
  5029                           
  5030                           ;Hora.c: 16:     hora[0] = nova[0];
  5031                           
  5032                           ;incstack = 0
  5033  001B94  5067               	movf	HActualitzaHora@nova^0,w,c
  5034  001B96  6ED9               	movwf	fsr2l,c
  5035  001B98  6ADA               	clrf	fsr2h,c
  5036  001B9A  50DF               	movf	indf2,w,c
  5037  001B9C  6E58               	movwf	_hora^0,c
  5038                           
  5039                           ;Hora.c: 17:     hora[1] = nova[1];
  5040  001B9E  5067               	movf	HActualitzaHora@nova^0,w,c
  5041  001BA0  6ED9               	movwf	fsr2l,c
  5042  001BA2  6ADA               	clrf	fsr2h,c
  5043  001BA4  0E01               	movlw	1
  5044  001BA6  26D9               	addwf	fsr2l,f,c
  5045  001BA8  50DF               	movf	indf2,w,c
  5046  001BAA  6E59               	movwf	(_hora+1)^0,c
  5047                           
  5048                           ;Hora.c: 18:     hora[3] = nova[2];
  5049  001BAC  5067               	movf	HActualitzaHora@nova^0,w,c
  5050  001BAE  6ED9               	movwf	fsr2l,c
  5051  001BB0  6ADA               	clrf	fsr2h,c
  5052  001BB2  0E02               	movlw	2
  5053  001BB4  26D9               	addwf	fsr2l,f,c
  5054  001BB6  50DF               	movf	indf2,w,c
  5055  001BB8  6E5B               	movwf	(_hora+3)^0,c
  5056                           
  5057                           ;Hora.c: 19:     hora[4] = nova[3];
  5058  001BBA  5067               	movf	HActualitzaHora@nova^0,w,c
  5059  001BBC  6ED9               	movwf	fsr2l,c
  5060  001BBE  6ADA               	clrf	fsr2h,c
  5061  001BC0  0E03               	movlw	3
  5062  001BC2  26D9               	addwf	fsr2l,f,c
  5063  001BC4  50DF               	movf	indf2,w,c
  5064  001BC6  6E5C               	movwf	(_hora+4)^0,c
  5065  001BC8  0012               	return		;funcret
  5066  001BCA                     __end_of_HActualitzaHora:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function _GLCDMostraMenu *****************
  5070 ;; Defined at:
  5071 ;;		line 30 in file "GestioLCD.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  num             1    wreg     unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  num             1    5[COMRAM] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1
  5085 ;;      Params:         0       0       0
  5086 ;;      Locals:         1       0       0
  5087 ;;      Temps:          0       0       0
  5088 ;;      Totals:         1       0       0
  5089 ;;Total ram usage:        1 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 2
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_menu
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text41
  5100  001E7A                     __ptext41:
  5101                           	callstack 0
  5102  001E7A                     _GLCDMostraMenu:
  5103                           	callstack 27
  5104                           
  5105                           ;incstack = 0
  5106                           ;GLCDMostraMenu@num stored from wreg
  5107  001E7A  6E67               	movwf	GLCDMostraMenu@num^0,c
  5108                           
  5109                           ;GestioLCD.c: 31:     newString = 1;
  5110  001E7C  8078               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5111                           
  5112                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5113  001E7E  C067  F019         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5114                           
  5115                           ;GestioLCD.c: 33:     ferMenu = 1;
  5116  001E82  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5117  001E84  0012               	return		;funcret
  5118  001E86                     __end_of_GLCDMostraMenu:
  5119                           	callstack 0
  5120                           
  5121 ;; *************** function _init_ports *****************
  5122 ;; Defined at:
  5123 ;;		line 26 in file "main.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;		None
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;		None
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      void 
  5130 ;; Registers used:
  5131 ;;		wreg, status,2
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1
  5137 ;;      Params:         0       0       0
  5138 ;;      Locals:         0       0       0
  5139 ;;      Temps:          0       0       0
  5140 ;;      Totals:         0       0       0
  5141 ;;Total ram usage:        0 bytes
  5142 ;; Hardware stack levels used: 1
  5143 ;; Hardware stack levels required when called: 2
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_main
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text42
  5152  001D7E                     __ptext42:
  5153                           	callstack 0
  5154  001D7E                     _init_ports:
  5155                           	callstack 28
  5156                           
  5157                           ;incstack = 0
  5158  001D7E  0E03               	movlw	3
  5159  001D80  6E92               	movwf	146,c	;volatile
  5160  001D82  0EE0               	movlw	224
  5161  001D84  6E93               	movwf	147,c	;volatile
  5162  001D86  968A               	bcf	138,3,c	;volatile
  5163  001D88  908A               	bcf	138,0,c	;volatile
  5164  001D8A  928A               	bcf	138,1,c	;volatile
  5165                           
  5166                           ;main.c: 49:     TRISC = 0xC0;
  5167  001D8C  0EC0               	movlw	192
  5168  001D8E  6E94               	movwf	148,c	;volatile
  5169                           
  5170                           ;main.c: 59:     TRISD = 0x8F;
  5171  001D90  0E8F               	movlw	143
  5172  001D92  6E95               	movwf	149,c	;volatile
  5173                           
  5174                           ;main.c: 60:     LATD = 0x00;
  5175  001D94  0E00               	movlw	0
  5176  001D96  6E8C               	movwf	140,c	;volatile
  5177                           
  5178                           ;main.c: 63:     EECON1bits.EEPGD = 1;
  5179  001D98  8EA6               	bsf	166,7,c	;volsfr
  5180                           
  5181                           ;main.c: 64:     EECON1bits.CFGS = 0;
  5182  001D9A  9CA6               	bcf	166,6,c	;volsfr
  5183  001D9C  0012               	return		;funcret
  5184  001D9E                     __end_of_init_ports:
  5185                           	callstack 0
  5186                           
  5187 ;; *************** function _init_eusart *****************
  5188 ;; Defined at:
  5189 ;;		line 67 in file "main.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1
  5203 ;;      Params:         0       0       0
  5204 ;;      Locals:         0       0       0
  5205 ;;      Temps:          0       0       0
  5206 ;;      Totals:         0       0       0
  5207 ;;Total ram usage:        0 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; Hardware stack levels required when called: 2
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_main
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text43
  5218  001DD4                     __ptext43:
  5219                           	callstack 0
  5220  001DD4                     _init_eusart:
  5221                           	callstack 28
  5222                           
  5223                           ;main.c: 68:     TXSTA = 0x24;
  5224                           
  5225                           ;incstack = 0
  5226  001DD4  0E24               	movlw	36
  5227  001DD6  6EAC               	movwf	172,c	;volatile
  5228                           
  5229                           ;main.c: 69:     RCSTA = 0x90;
  5230  001DD8  0E90               	movlw	144
  5231  001DDA  6EAB               	movwf	171,c	;volatile
  5232                           
  5233                           ;main.c: 70:     BAUDCON = 0x08;
  5234  001DDC  0E08               	movlw	8
  5235  001DDE  6EB8               	movwf	184,c	;volatile
  5236                           
  5237                           ;main.c: 71:     SPBRGH = 0x04;
  5238  001DE0  0E04               	movlw	4
  5239  001DE2  6EB0               	movwf	176,c	;volatile
  5240                           
  5241                           ;main.c: 72:     SPBRG = 0x10;
  5242  001DE4  0E10               	movlw	16
  5243  001DE6  6EAF               	movwf	175,c	;volatile
  5244  001DE8  0012               	return		;funcret
  5245  001DEA                     __end_of_init_eusart:
  5246                           	callstack 0
  5247                           
  5248 ;; *************** function _initSIO *****************
  5249 ;; Defined at:
  5250 ;;		line 18 in file "SIO.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1
  5264 ;;      Params:         0       0       0
  5265 ;;      Locals:         0       0       0
  5266 ;;      Temps:          0       0       0
  5267 ;;      Totals:         0       0       0
  5268 ;;Total ram usage:        0 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 3
  5271 ;; This function calls:
  5272 ;;		_TiGetTimer
  5273 ;; This function is called by:
  5274 ;;		_main
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text44
  5279  001ED6                     __ptext44:
  5280                           	callstack 0
  5281  001ED6                     _initSIO:
  5282                           	callstack 27
  5283                           
  5284                           ;SIO.c: 19:     timerSIO = TiGetTimer();
  5285                           
  5286                           ;incstack = 0
  5287  001ED6  EC76  F00D         	call	_TiGetTimer	;wreg free
  5288  001EDA  6E08               	movwf	_timerSIO^0,c
  5289  001EDC  0012               	return		;funcret
  5290  001EDE                     __end_of_initSIO:
  5291                           	callstack 0
  5292                           
  5293 ;; *************** function _initHora *****************
  5294 ;; Defined at:
  5295 ;;		line 11 in file "Hora.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;		None
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;		None
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      void 
  5302 ;; Registers used:
  5303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1
  5309 ;;      Params:         0       0       0
  5310 ;;      Locals:         0       0       0
  5311 ;;      Temps:          0       0       0
  5312 ;;      Totals:         0       0       0
  5313 ;;Total ram usage:        0 bytes
  5314 ;; Hardware stack levels used: 1
  5315 ;; Hardware stack levels required when called: 3
  5316 ;; This function calls:
  5317 ;;		_TiGetTimer
  5318 ;; This function is called by:
  5319 ;;		_main
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text45
  5324  001EDE                     __ptext45:
  5325                           	callstack 0
  5326  001EDE                     _initHora:
  5327                           	callstack 27
  5328                           
  5329                           ;Hora.c: 12:     timerHora = TiGetTimer();
  5330                           
  5331                           ;incstack = 0
  5332  001EDE  EC76  F00D         	call	_TiGetTimer	;wreg free
  5333  001EE2  6E0E               	movwf	_timerHora^0,c
  5334  001EE4  0012               	return		;funcret
  5335  001EE6                     __end_of_initHora:
  5336                           	callstack 0
  5337                           
  5338 ;; *************** function _initAltaveu *****************
  5339 ;; Defined at:
  5340 ;;		line 10 in file "Altaveu.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1
  5354 ;;      Params:         0       0       0
  5355 ;;      Locals:         0       0       0
  5356 ;;      Temps:          0       0       0
  5357 ;;      Totals:         0       0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used: 1
  5360 ;; Hardware stack levels required when called: 3
  5361 ;; This function calls:
  5362 ;;		_TiGetTimer
  5363 ;; This function is called by:
  5364 ;;		_main
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text46
  5369  001EE6                     __ptext46:
  5370                           	callstack 0
  5371  001EE6                     _initAltaveu:
  5372                           	callstack 27
  5373                           
  5374                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  5375                           
  5376                           ;incstack = 0
  5377  001EE6  EC76  F00D         	call	_TiGetTimer	;wreg free
  5378  001EEA  6E1D               	movwf	_timerAltaveu^0,c
  5379  001EEC  0012               	return		;funcret
  5380  001EEE                     __end_of_initAltaveu:
  5381                           	callstack 0
  5382                           
  5383 ;; *************** function _escriureEEPROM *****************
  5384 ;; Defined at:
  5385 ;;		line 208 in file "Usuaris.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  caca            1    5[COMRAM] unsigned char 
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      void 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1
  5399 ;;      Params:         0       0       0
  5400 ;;      Locals:         1       0       0
  5401 ;;      Temps:          0       0       0
  5402 ;;      Totals:         1       0       0
  5403 ;;Total ram usage:        1 bytes
  5404 ;; Hardware stack levels used: 1
  5405 ;; Hardware stack levels required when called: 2
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_main
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text47
  5414  001C64                     __ptext47:
  5415                           	callstack 0
  5416  001C64                     _escriureEEPROM:
  5417                           	callstack 28
  5418                           
  5419                           ;Usuaris.c: 209:     for(unsigned char caca = 0; caca < 160; caca++){
  5420                           
  5421                           ;incstack = 0
  5422  001C64  0E00               	movlw	0
  5423  001C66  6E67               	movwf	escriureEEPROM@caca^0,c
  5424  001C68                     l2342:
  5425                           
  5426                           ;Usuaris.c: 210:         EEADR = 0;
  5427  001C68  0E00               	movlw	0
  5428  001C6A  6EA9               	movwf	169,c	;volatile
  5429                           
  5430                           ;Usuaris.c: 211:         EEDATA = 0;
  5431  001C6C  0E00               	movlw	0
  5432  001C6E  6EA8               	movwf	168,c	;volatile
  5433                           
  5434                           ;Usuaris.c: 212:         EECON1bits.EEPGD = 0;
  5435  001C70  9EA6               	bcf	166,7,c	;volsfr
  5436                           
  5437                           ;Usuaris.c: 213:         EECON1bits.CFGS = 0;
  5438  001C72  9CA6               	bcf	166,6,c	;volsfr
  5439                           
  5440                           ;Usuaris.c: 214:         EECON1bits.WREN = 1;
  5441  001C74  84A6               	bsf	166,2,c	;volsfr
  5442                           
  5443                           ;Usuaris.c: 215:         INTCONbits.GIE = 0;
  5444  001C76  9EF2               	bcf	242,7,c	;volatile
  5445                           
  5446                           ;Usuaris.c: 216:         EECON2 = 85;
  5447  001C78  0E55               	movlw	85
  5448  001C7A  6EA7               	movwf	167,c	;volsfr
  5449                           
  5450                           ;Usuaris.c: 217:         EECON2 = 170;
  5451  001C7C  0EAA               	movlw	170
  5452  001C7E  6EA7               	movwf	167,c	;volsfr
  5453                           
  5454                           ;Usuaris.c: 218:          EECON1bits.WR = 1;
  5455  001C80  82A6               	bsf	166,1,c	;volsfr
  5456  001C82                     l721:
  5457                           
  5458                           ;Usuaris.c: 219:         while(EECON1bits.WR){
  5459  001C82  B2A6               	btfsc	166,1,c	;volsfr
  5460  001C84  D7FE               	goto	l721
  5461                           
  5462                           ;Usuaris.c: 224:     }
  5463  001C86  2A67               	incf	escriureEEPROM@caca^0,f,c
  5464  001C88  0E9F               	movlw	159
  5465  001C8A  6467               	cpfsgt	escriureEEPROM@caca^0,c
  5466  001C8C  D7ED               	goto	l2342
  5467                           
  5468                           ;Usuaris.c: 225:    INTCONbits.GIE = 1;
  5469  001C8E  8EF2               	bsf	242,7,c	;volatile
  5470  001C90  0012               	return		;funcret
  5471  001C92                     __end_of_escriureEEPROM:
  5472                           	callstack 0
  5473                           
  5474 ;; *************** function _escriure2usuarisStruct *****************
  5475 ;; Defined at:
  5476 ;;		line 115 in file "Usuaris.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;		None
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, status,2
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 3F/1
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1
  5490 ;;      Params:         0       0       0
  5491 ;;      Locals:         0       0       0
  5492 ;;      Temps:          0       0       0
  5493 ;;      Totals:         0       0       0
  5494 ;;Total ram usage:        0 bytes
  5495 ;; Hardware stack levels used: 1
  5496 ;; Hardware stack levels required when called: 2
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		_main
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text48
  5505  001C92                     __ptext48:
  5506                           	callstack 0
  5507  001C92                     _escriure2usuarisStruct:
  5508                           	callstack 28
  5509                           
  5510                           ;Usuaris.c: 117:     usuaris[0].username[0] = 1;
  5511                           
  5512                           ;incstack = 0
  5513  001C92  0E01               	movlw	1
  5514  001C94  0101               	movlb	1	; () banked
  5515  001C96  6F00               	movwf	_usuaris& (0+255),b
  5516                           
  5517                           ;Usuaris.c: 118:     usuaris[0].password[0] = 1;
  5518  001C98  0E01               	movlw	1
  5519  001C9A  6F09               	movwf	(_usuaris+9)& (0+255),b
  5520                           
  5521                           ;Usuaris.c: 119:     usuaris[1].username[0] = '1';
  5522  001C9C  0E31               	movlw	49
  5523  001C9E  6F17               	movwf	(_usuaris+23)& (0+255),b
  5524                           
  5525                           ;Usuaris.c: 120:     usuaris[1].password[0] = '1';
  5526  001CA0  0E31               	movlw	49
  5527  001CA2  6F20               	movwf	(_usuaris+32)& (0+255),b
  5528                           
  5529                           ;Usuaris.c: 121:     usuaris[0].username[1] = '\0';
  5530  001CA4  0E00               	movlw	0
  5531  001CA6  6F01               	movwf	(_usuaris+1)& (0+255),b
  5532                           
  5533                           ;Usuaris.c: 122:     usuaris[0].password[1] = '\0';
  5534  001CA8  0E00               	movlw	0
  5535  001CAA  6F0A               	movwf	(_usuaris+10)& (0+255),b
  5536                           
  5537                           ;Usuaris.c: 123:     usuaris[1].username[1] = '\0';
  5538  001CAC  0E00               	movlw	0
  5539  001CAE  6F18               	movwf	(_usuaris+24)& (0+255),b
  5540                           
  5541                           ;Usuaris.c: 124:     usuaris[1].password[1] = '\0';
  5542  001CB0  0E00               	movlw	0
  5543  001CB2  6F21               	movwf	(_usuaris+33)& (0+255),b
  5544                           
  5545                           ;Usuaris.c: 125:     numUsuaris = 2;
  5546  001CB4  0E02               	movlw	2
  5547  001CB6  6E24               	movwf	_numUsuaris^0,c
  5548                           
  5549                           ;Usuaris.c: 126:     indexNextUser = 2;
  5550  001CB8  0E02               	movlw	2
  5551  001CBA  6E23               	movwf	_indexNextUser^0,c
  5552                           
  5553                           ; BSR set to: 1
  5554  001CBC  0012               	return		;funcret
  5555  001CBE                     __end_of_escriure2usuarisStruct:
  5556                           	callstack 0
  5557                           
  5558 ;; *************** function _UmotorUsers *****************
  5559 ;; Defined at:
  5560 ;;		line 139 in file "Usuaris.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;		None
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      void 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/1
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1
  5574 ;;      Params:         0       0       0
  5575 ;;      Locals:         0       0       0
  5576 ;;      Temps:          2       0       0
  5577 ;;      Totals:         2       0       0
  5578 ;;Total ram usage:        2 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; Hardware stack levels required when called: 3
  5581 ;; This function calls:
  5582 ;;		_compareStrings
  5583 ;;		_escriureCharEEPROM
  5584 ;; This function is called by:
  5585 ;;		_main
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text49
  5590  000F7E                     __ptext49:
  5591                           	callstack 0
  5592  000F7E                     _UmotorUsers:
  5593                           	callstack 27
  5594                           
  5595                           ;Usuaris.c: 140: static char state = 0;;Usuaris.c: 142:  switch(state) {
  5596                           
  5597                           ; BSR set to: 1
  5598                           ;incstack = 0
  5599  000F7E  D0A7               	goto	l5302
  5600  000F80                     l693:
  5601                           
  5602                           ;Usuaris.c: 144:    if (!do_check_exists && !do_register) {
  5603  000F80  AA78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5604  000F82  B878               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  5605  000F84  D005               	goto	l694
  5606                           
  5607                           ;Usuaris.c: 145:     i = 0;
  5608  000F86  0E00               	movlw	0
  5609  000F88  6E21               	movwf	_i^0,c
  5610                           
  5611                           ;Usuaris.c: 146:     j = 0;
  5612  000F8A  0E00               	movlw	0
  5613  000F8C  6E20               	movwf	_j^0,c
  5614                           
  5615                           ;Usuaris.c: 147:    }
  5616  000F8E  0012               	return	
  5617  000F90                     l694:
  5618  000F90  AA78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5619  000F92  D004               	goto	l696
  5620                           
  5621                           ;Usuaris.c: 149:     usuariLoguejat = -1;
  5622  000F94  6850               	setf	_usuariLoguejat^0,c
  5623  000F96                     l5230:
  5624                           
  5625                           ;Usuaris.c: 150:     state = 1;
  5626  000F96  0E01               	movlw	1
  5627  000F98  6E1F               	movwf	UmotorUsers@state^0,c
  5628                           
  5629                           ;Usuaris.c: 151:    }
  5630  000F9A  0012               	return	
  5631  000F9C                     l696:
  5632  000F9C  A878               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  5633  000F9E  0012               	return	
  5634  000FA0                     u4800:
  5635                           
  5636                           ;Usuaris.c: 153:     state = 2;
  5637  000FA0  0E02               	movlw	2
  5638  000FA2  6E1F               	movwf	UmotorUsers@state^0,c
  5639                           
  5640                           ;Usuaris.c: 155:   break;
  5641  000FA4  0012               	return	
  5642  000FA6                     l5234:
  5643                           
  5644                           ;Usuaris.c: 158:    if (i < numUsuaris) {
  5645  000FA6  5024               	movf	_numUsuaris^0,w,c
  5646  000FA8  5C21               	subwf	_i^0,w,c
  5647  000FAA  B0D8               	btfsc	status,0,c
  5648  000FAC  D014               	goto	l5244
  5649                           
  5650                           ;Usuaris.c: 159:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  5651  000FAE  0E38               	movlw	low _tmpUsername
  5652  000FB0  6E67               	movwf	compareStrings@a^0,c
  5653  000FB2  5021               	movf	_i^0,w,c
  5654  000FB4  0D17               	mullw	23
  5655  000FB6  0E00               	movlw	low _usuaris
  5656  000FB8  24F3               	addwf	243,w,c
  5657  000FBA  6E68               	movwf	compareStrings@b^0,c
  5658  000FBC  0E01               	movlw	high _usuaris
  5659  000FBE  20F4               	addwfc	prodh,w,c
  5660  000FC0  6E69               	movwf	(compareStrings@b+1)^0,c
  5661  000FC2  EC16  F00D         	call	_compareStrings	;wreg free
  5662  000FC6  0900               	iorlw	0
  5663  000FC8  A4D8               	btfss	status,2,c
  5664  000FCA  D003               	goto	l5240
  5665                           
  5666                           ;Usuaris.c: 160:      usuariLoguejat = i;
  5667  000FCC  C021  F050         	movff	_i,_usuariLoguejat
  5668                           
  5669                           ;Usuaris.c: 161:                     LATBbits.LATB3 = 1;
  5670  000FD0  868A               	bsf	138,3,c	;volatile
  5671  000FD2                     l5240:
  5672                           
  5673                           ;Usuaris.c: 166:     i++;
  5674  000FD2  2A21               	incf	_i^0,f,c
  5675  000FD4  D7E0               	goto	l5230
  5676  000FD6                     l5244:
  5677  000FD6  5024               	movf	_numUsuaris^0,w,c
  5678  000FD8  1821               	xorwf	_i^0,w,c
  5679  000FDA  A4D8               	btfss	status,2,c
  5680  000FDC  0012               	return	
  5681                           
  5682                           ;Usuaris.c: 170:     do_check_exists = 0;
  5683  000FDE  9A78               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5684  000FE0                     l5248:
  5685                           
  5686                           ;Usuaris.c: 171:     state = 0;
  5687  000FE0  0E00               	movlw	0
  5688  000FE2  6E1F               	movwf	UmotorUsers@state^0,c
  5689  000FE4  0012               	return	
  5690  000FE6                     l5250:
  5691                           
  5692                           ;Usuaris.c: 176:    if (i != 8) {
  5693  000FE6  0E08               	movlw	8
  5694  000FE8  1821               	xorwf	_i^0,w,c
  5695  000FEA  B4D8               	btfsc	status,2,c
  5696  000FEC  D022               	goto	l5262
  5697                           
  5698                           ;Usuaris.c: 177:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  5699  000FEE  C023  F067         	movff	_indexNextUser,escriureCharEEPROM@pos
  5700  000FF2  5021               	movf	_i^0,w,c
  5701  000FF4  0F38               	addlw	low _tmpUsername
  5702  000FF6  6ED9               	movwf	fsr2l,c
  5703  000FF8  6ADA               	clrf	fsr2h,c
  5704  000FFA  50DF               	movf	indf2,w,c
  5705  000FFC  EC89  F00E         	call	_escriureCharEEPROM
  5706  001000  2A23               	incf	_indexNextUser^0,f,c
  5707                           
  5708                           ;Usuaris.c: 178:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  5709  001002  5021               	movf	_i^0,w,c
  5710  001004  0F38               	addlw	low _tmpUsername
  5711  001006  6ED9               	movwf	fsr2l,c
  5712  001008  6ADA               	clrf	fsr2h,c
  5713  00100A  5022               	movf	_indexNextUserStruct^0,w,c
  5714  00100C  0D17               	mullw	23
  5715  00100E  0E00               	movlw	low _usuaris
  5716  001010  6E6C               	movwf	??_UmotorUsers^0,c
  5717  001012  0E01               	movlw	high _usuaris
  5718  001014  6E6D               	movwf	(??_UmotorUsers+1)^0,c
  5719  001016  50F3               	movf	243,w,c
  5720  001018  266C               	addwf	??_UmotorUsers^0,f,c
  5721  00101A  50F4               	movf	244,w,c
  5722  00101C  226D               	addwfc	(??_UmotorUsers+1)^0,f,c
  5723  00101E  5021               	movf	_i^0,w,c
  5724  001020  246C               	addwf	??_UmotorUsers^0,w,c
  5725  001022  6EE1               	movwf	fsr1l,c
  5726  001024  0E00               	movlw	0
  5727  001026  206D               	addwfc	(??_UmotorUsers+1)^0,w,c
  5728  001028  6EE2               	movwf	fsr1h,c
  5729  00102A  CFDF FFE7          	movff	indf2,indf1
  5730                           
  5731                           ;Usuaris.c: 179:     i++;
  5732  00102E  2A21               	incf	_i^0,f,c
  5733  001030  D7B7               	goto	u4800
  5734  001032                     l5262:
  5735  001032  0E08               	movlw	8
  5736  001034  1821               	xorwf	_i^0,w,c
  5737  001036  A4D8               	btfss	status,2,c
  5738  001038  0012               	return	
  5739                           
  5740                           ;Usuaris.c: 183:     i = 0;
  5741  00103A  0E00               	movlw	0
  5742  00103C  6E21               	movwf	_i^0,c
  5743                           
  5744                           ;Usuaris.c: 184:     state = 3;
  5745  00103E  0E03               	movlw	3
  5746  001040  6E1F               	movwf	UmotorUsers@state^0,c
  5747  001042  0012               	return	
  5748  001044                     l5266:
  5749                           
  5750                           ;Usuaris.c: 188:    if (i != 8) {
  5751  001044  0E08               	movlw	8
  5752  001046  1821               	xorwf	_i^0,w,c
  5753  001048  B4D8               	btfsc	status,2,c
  5754  00104A  D028               	goto	l5278
  5755                           
  5756                           ;Usuaris.c: 189:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  5757  00104C  C023  F067         	movff	_indexNextUser,escriureCharEEPROM@pos
  5758  001050  5021               	movf	_i^0,w,c
  5759  001052  0FC0               	addlw	low _tmpPassword
  5760  001054  6ED9               	movwf	fsr2l,c
  5761  001056  6ADA               	clrf	fsr2h,c
  5762  001058  50DF               	movf	indf2,w,c
  5763  00105A  EC89  F00E         	call	_escriureCharEEPROM
  5764  00105E  2A23               	incf	_indexNextUser^0,f,c
  5765                           
  5766                           ;Usuaris.c: 190:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  5767  001060  5021               	movf	_i^0,w,c
  5768  001062  0FC0               	addlw	low _tmpPassword
  5769  001064  6ED9               	movwf	fsr2l,c
  5770  001066  6ADA               	clrf	fsr2h,c
  5771  001068  5022               	movf	_indexNextUserStruct^0,w,c
  5772  00106A  0D17               	mullw	23
  5773  00106C  0E00               	movlw	low _usuaris
  5774  00106E  6E6C               	movwf	??_UmotorUsers^0,c
  5775  001070  0E01               	movlw	high _usuaris
  5776  001072  6E6D               	movwf	(??_UmotorUsers+1)^0,c
  5777  001074  0E09               	movlw	9
  5778  001076  266C               	addwf	??_UmotorUsers^0,f,c
  5779  001078  0E00               	movlw	0
  5780  00107A  226D               	addwfc	(??_UmotorUsers+1)^0,f,c
  5781  00107C  50F3               	movf	243,w,c
  5782  00107E  266C               	addwf	??_UmotorUsers^0,f,c
  5783  001080  50F4               	movf	244,w,c
  5784  001082  226D               	addwfc	(??_UmotorUsers+1)^0,f,c
  5785  001084  5021               	movf	_i^0,w,c
  5786  001086  246C               	addwf	??_UmotorUsers^0,w,c
  5787  001088  6EE1               	movwf	fsr1l,c
  5788  00108A  0E00               	movlw	0
  5789  00108C  206D               	addwfc	(??_UmotorUsers+1)^0,w,c
  5790  00108E  6EE2               	movwf	fsr1h,c
  5791  001090  CFDF FFE7          	movff	indf2,indf1
  5792                           
  5793                           ;Usuaris.c: 191:     i++;
  5794  001094  2A21               	incf	_i^0,f,c
  5795                           
  5796                           ;Usuaris.c: 192:     state = 3;
  5797  001096  0E03               	movlw	3
  5798  001098  6E1F               	movwf	UmotorUsers@state^0,c
  5799                           
  5800                           ;Usuaris.c: 193:    }
  5801  00109A  0012               	return	
  5802  00109C                     l5278:
  5803  00109C  0E08               	movlw	8
  5804  00109E  1821               	xorwf	_i^0,w,c
  5805  0010A0  A4D8               	btfss	status,2,c
  5806  0010A2  0012               	return	
  5807                           
  5808                           ;Usuaris.c: 195:     do_register = 0;
  5809  0010A4  9878               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5810                           
  5811                           ;Usuaris.c: 196:     indexNextUser++;
  5812  0010A6  2A23               	incf	_indexNextUser^0,f,c
  5813                           
  5814                           ;Usuaris.c: 197:     if(indexNextUser == 159) indexNextUser = 16;
  5815  0010A8  0E9F               	movlw	159
  5816  0010AA  1823               	xorwf	_indexNextUser^0,w,c
  5817  0010AC  A4D8               	btfss	status,2,c
  5818  0010AE  D002               	goto	l5288
  5819  0010B0  0E10               	movlw	16
  5820  0010B2  6E23               	movwf	_indexNextUser^0,c
  5821  0010B4                     l5288:
  5822                           
  5823                           ;Usuaris.c: 198:     indexNextUserStruct++;
  5824  0010B4  2A22               	incf	_indexNextUserStruct^0,f,c
  5825                           
  5826                           ;Usuaris.c: 199:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  5827  0010B6  0E08               	movlw	8
  5828  0010B8  1822               	xorwf	_indexNextUserStruct^0,w,c
  5829  0010BA  A4D8               	btfss	status,2,c
  5830  0010BC  D002               	goto	l5294
  5831  0010BE  0E00               	movlw	0
  5832  0010C0  6E22               	movwf	_indexNextUserStruct^0,c
  5833  0010C2                     l5294:
  5834                           
  5835                           ;Usuaris.c: 200:     if(numUsuaris != 8) numUsuaris++;
  5836  0010C2  0E08               	movlw	8
  5837  0010C4  1824               	xorwf	_numUsuaris^0,w,c
  5838  0010C6  B4D8               	btfsc	status,2,c
  5839  0010C8  D78B               	goto	l5248
  5840  0010CA  2A24               	incf	_numUsuaris^0,f,c
  5841  0010CC  D789               	goto	l5248
  5842  0010CE                     l5302:
  5843  0010CE  501F               	movf	UmotorUsers@state^0,w,c
  5844  0010D0  6E6C               	movwf	??_UmotorUsers^0,c
  5845  0010D2  6A6D               	clrf	(??_UmotorUsers+1)^0,c
  5846                           
  5847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5848                           ; Switch size 1, requested type "simple"
  5849                           ; Number of cases is 1, Range of values is 0 to 0
  5850                           ; switch strategies available:
  5851                           ; Name         Instructions Cycles
  5852                           ; simple_byte            4     3 (average)
  5853                           ;	Chosen strategy is simple_byte
  5854  0010D4  506D               	movf	(??_UmotorUsers+1)^0,w,c
  5855  0010D6  0A00               	xorlw	0	; case 0
  5856  0010D8  A4D8               	btfss	status,2,c
  5857  0010DA  0012               	return	
  5858                           
  5859                           ; Switch size 1, requested type "simple"
  5860                           ; Number of cases is 4, Range of values is 0 to 3
  5861                           ; switch strategies available:
  5862                           ; Name         Instructions Cycles
  5863                           ; simple_byte           13     7 (average)
  5864                           ;	Chosen strategy is simple_byte
  5865  0010DC  506C               	movf	??_UmotorUsers^0,w,c
  5866  0010DE  0A00               	xorlw	0	; case 0
  5867  0010E0  B4D8               	btfsc	status,2,c
  5868  0010E2  D74E               	goto	l693
  5869  0010E4  0A01               	xorlw	1	; case 1
  5870  0010E6  B4D8               	btfsc	status,2,c
  5871  0010E8  D75E               	goto	l5234
  5872  0010EA  0A03               	xorlw	3	; case 2
  5873  0010EC  B4D8               	btfsc	status,2,c
  5874  0010EE  D77B               	goto	l5250
  5875  0010F0  0A01               	xorlw	1	; case 3
  5876  0010F2  A4D8               	btfss	status,2,c
  5877  0010F4  0012               	return	
  5878  0010F6  D7A6               	goto	l5266
  5879  0010F8                     __end_of_UmotorUsers:
  5880                           	callstack 0
  5881                           
  5882 ;; *************** function _escriureCharEEPROM *****************
  5883 ;; Defined at:
  5884 ;;		line 57 in file "Usuaris.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  c               1    wreg     unsigned char 
  5887 ;;  pos             1    5[COMRAM] unsigned char 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  c               1    6[COMRAM] unsigned char 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		wreg, status,2
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/1
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1
  5899 ;;      Params:         1       0       0
  5900 ;;      Locals:         1       0       0
  5901 ;;      Temps:          0       0       0
  5902 ;;      Totals:         2       0       0
  5903 ;;Total ram usage:        2 bytes
  5904 ;; Hardware stack levels used: 1
  5905 ;; Hardware stack levels required when called: 2
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_UmotorUsers
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text50
  5914  001D12                     __ptext50:
  5915                           	callstack 0
  5916  001D12                     _escriureCharEEPROM:
  5917                           	callstack 27
  5918                           
  5919                           ;incstack = 0
  5920                           ;escriureCharEEPROM@c stored from wreg
  5921  001D12  6E68               	movwf	escriureCharEEPROM@c^0,c
  5922                           
  5923                           ;Usuaris.c: 58:     EEADR = pos;
  5924  001D14  C067  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  5925                           
  5926                           ;Usuaris.c: 59:     EEDATA = c;
  5927  001D18  C068  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  5928                           
  5929                           ;Usuaris.c: 60:     EECON1bits.EEPGD = 0;
  5930  001D1C  9EA6               	bcf	166,7,c	;volsfr
  5931                           
  5932                           ;Usuaris.c: 61:     EECON1bits.CFGS = 0;
  5933  001D1E  9CA6               	bcf	166,6,c	;volsfr
  5934                           
  5935                           ;Usuaris.c: 62:     EECON1bits.WREN = 1;
  5936  001D20  84A6               	bsf	166,2,c	;volsfr
  5937                           
  5938                           ;Usuaris.c: 63:     INTCONbits.GIE = 0;
  5939  001D22  9EF2               	bcf	242,7,c	;volatile
  5940                           
  5941                           ;Usuaris.c: 64:     EECON2 = 85;
  5942  001D24  0E55               	movlw	85
  5943  001D26  6EA7               	movwf	167,c	;volsfr
  5944                           
  5945                           ;Usuaris.c: 65:     EECON2 = 170;
  5946  001D28  0EAA               	movlw	170
  5947  001D2A  6EA7               	movwf	167,c	;volsfr
  5948                           
  5949                           ;Usuaris.c: 66:     EECON1bits.WR = 1;
  5950  001D2C  82A6               	bsf	166,1,c	;volsfr
  5951  001D2E                     l652:
  5952  001D2E  B2A6               	btfsc	166,1,c	;volsfr
  5953  001D30  D7FE               	goto	l652
  5954                           
  5955                           ;Usuaris.c: 68:     INTCONbits.GIE = 1;
  5956  001D32  8EF2               	bsf	242,7,c	;volatile
  5957  001D34  0012               	return		;funcret
  5958  001D36                     __end_of_escriureCharEEPROM:
  5959                           	callstack 0
  5960                           
  5961 ;; *************** function _compareStrings *****************
  5962 ;; Defined at:
  5963 ;;		line 129 in file "Usuaris.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  a               1    5[COMRAM] PTR const unsigned char 
  5966 ;;		 -> tmpUsername(9), 
  5967 ;;  b               2    6[COMRAM] PTR const unsigned char 
  5968 ;;		 -> usuaris.username(9), usuaris(184), 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;		None
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  1    wreg      unsigned char 
  5973 ;; Registers used:
  5974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/1
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1
  5980 ;;      Params:         3       0       0
  5981 ;;      Locals:         0       0       0
  5982 ;;      Temps:          2       0       0
  5983 ;;      Totals:         5       0       0
  5984 ;;Total ram usage:        5 bytes
  5985 ;; Hardware stack levels used: 1
  5986 ;; Hardware stack levels required when called: 2
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_UmotorUsers
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text51
  5995  001A2C                     __ptext51:
  5996                           	callstack 0
  5997  001A2C                     _compareStrings:
  5998                           	callstack 27
  5999                           
  6000                           ;Usuaris.c: 130:     while (*a){
  6001                           
  6002                           ;incstack = 0
  6003  001A2C  D00E               	goto	l4262
  6004  001A2E                     l4256:
  6005                           
  6006                           ;Usuaris.c: 131:         if (*a != *b)break;
  6007  001A2E  C068  FFD9         	movff	compareStrings@b,fsr2l
  6008  001A32  C069  FFDA         	movff	compareStrings@b+1,fsr2h
  6009  001A36  5067               	movf	compareStrings@a^0,w,c
  6010  001A38  6EE1               	movwf	fsr1l,c
  6011  001A3A  6AE2               	clrf	fsr1h,c
  6012  001A3C  50DE               	movf	postinc2,w,c
  6013  001A3E  18E6               	xorwf	postinc1,w,c
  6014  001A40  A4D8               	btfss	status,2,c
  6015  001A42  D009               	goto	u3300
  6016                           
  6017                           ;Usuaris.c: 132:         a++;
  6018  001A44  2A67               	incf	compareStrings@a^0,f,c
  6019                           
  6020                           ;Usuaris.c: 133:         b++;
  6021  001A46  4A68               	infsnz	compareStrings@b^0,f,c
  6022  001A48  2A69               	incf	(compareStrings@b+1)^0,f,c
  6023  001A4A                     l4262:
  6024                           
  6025                           ;Usuaris.c: 130:     while (*a){
  6026  001A4A  5067               	movf	compareStrings@a^0,w,c
  6027  001A4C  6ED9               	movwf	fsr2l,c
  6028  001A4E  6ADA               	clrf	fsr2h,c
  6029  001A50  50DF               	movf	indf2,w,c
  6030  001A52  A4D8               	btfss	status,2,c
  6031  001A54  D7EC               	goto	l4256
  6032  001A56                     u3300:
  6033                           
  6034                           ;Usuaris.c: 135:     return *(const unsigned char*)a - *(const unsigned char*)b;
  6035  001A56  C068  FFD9         	movff	compareStrings@b,fsr2l
  6036  001A5A  C069  FFDA         	movff	compareStrings@b+1,fsr2h
  6037  001A5E  50DF               	movf	indf2,w,c
  6038  001A60  6E6A               	movwf	??_compareStrings^0,c
  6039  001A62  5067               	movf	compareStrings@a^0,w,c
  6040  001A64  6ED9               	movwf	fsr2l,c
  6041  001A66  6ADA               	clrf	fsr2h,c
  6042  001A68  50DF               	movf	indf2,w,c
  6043  001A6A  6E6B               	movwf	(??_compareStrings+1)^0,c
  6044  001A6C  506A               	movf	??_compareStrings^0,w,c
  6045  001A6E  5C6B               	subwf	(??_compareStrings+1)^0,w,c
  6046  001A70  0012               	return		;funcret
  6047  001A72                     __end_of_compareStrings:
  6048                           	callstack 0
  6049                           
  6050 ;; *************** function _Uinit *****************
  6051 ;; Defined at:
  6052 ;;		line 70 in file "Usuaris.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  j               1    9[COMRAM] unsigned char 
  6057 ;;  j               1    8[COMRAM] unsigned char 
  6058 ;;  i               1    7[COMRAM] unsigned char 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      void 
  6061 ;; Registers used:
  6062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMRAM   BANK0   BANK1
  6068 ;;      Params:         0       0       0
  6069 ;;      Locals:         3       0       0
  6070 ;;      Temps:          2       0       0
  6071 ;;      Totals:         5       0       0
  6072 ;;Total ram usage:        5 bytes
  6073 ;; Hardware stack levels used: 1
  6074 ;; Hardware stack levels required when called: 2
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_main
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text52
  6083  001596                     __ptext52:
  6084                           	callstack 0
  6085  001596                     _Uinit:
  6086                           	callstack 28
  6087                           
  6088                           ;Usuaris.c: 75:     EEADR = 0;
  6089                           
  6090                           ;incstack = 0
  6091  001596  0E00               	movlw	0
  6092  001598  6EA9               	movwf	169,c	;volatile
  6093                           
  6094                           ;Usuaris.c: 76:     EECON1bits.EEPGD = 0;
  6095  00159A  9EA6               	bcf	166,7,c	;volsfr
  6096                           
  6097                           ;Usuaris.c: 77:     EECON1bits.CFGS = 0;
  6098  00159C  9CA6               	bcf	166,6,c	;volsfr
  6099                           
  6100                           ;Usuaris.c: 78:     EECON1bits.RD = 1;
  6101  00159E  80A6               	bsf	166,0,c	;volsfr
  6102  0015A0                     l658:
  6103  0015A0  B0A6               	btfsc	166,0,c	;volsfr
  6104  0015A2  D7FE               	goto	l658
  6105                           
  6106                           ;Usuaris.c: 80:     numUsuaris = EEDATA;
  6107  0015A4  CFA8 F024          	movff	4008,_numUsuaris	;volatile
  6108                           
  6109                           ;Usuaris.c: 83:     EEADR++;
  6110  0015A8  2AA9               	incf	169,f,c	;volatile
  6111                           
  6112                           ;Usuaris.c: 84:     EECON1bits.EEPGD = 0;
  6113  0015AA  9EA6               	bcf	166,7,c	;volsfr
  6114                           
  6115                           ;Usuaris.c: 85:     EECON1bits.CFGS = 0;
  6116  0015AC  9CA6               	bcf	166,6,c	;volsfr
  6117  0015AE                     l661:
  6118  0015AE  B0A6               	btfsc	166,0,c	;volsfr
  6119  0015B0  D7FE               	goto	l661
  6120                           
  6121                           ;Usuaris.c: 88:     indexNextUser = EEDATA;
  6122  0015B2  CFA8 F023          	movff	4008,_indexNextUser	;volatile
  6123                           
  6124                           ;Usuaris.c: 90:     EEADR++;
  6125  0015B6  2AA9               	incf	169,f,c	;volatile
  6126                           
  6127                           ;Usuaris.c: 92:     for(char i = 0; i< numUsuaris; i++){
  6128  0015B8  0E00               	movlw	0
  6129  0015BA  6E69               	movwf	Uinit@i^0,c
  6130  0015BC  D041               	goto	l2590
  6131  0015BE                     l2560:
  6132                           
  6133                           ;Usuaris.c: 93:         for(char j = 0; j<9; j++){
  6134  0015BE  0E00               	movlw	0
  6135  0015C0  6E6A               	movwf	Uinit@j^0,c
  6136  0015C2                     l666:
  6137                           
  6138                           ;Usuaris.c: 94:             EECON1bits.EEPGD = 0;
  6139  0015C2  9EA6               	bcf	166,7,c	;volsfr
  6140                           
  6141                           ;Usuaris.c: 95:             EECON1bits.CFGS = 0;
  6142  0015C4  9CA6               	bcf	166,6,c	;volsfr
  6143                           
  6144                           ;Usuaris.c: 96:             EECON1bits.RD = 1;
  6145  0015C6  80A6               	bsf	166,0,c	;volsfr
  6146  0015C8                     l668:
  6147  0015C8  B0A6               	btfsc	166,0,c	;volsfr
  6148  0015CA  D7FE               	goto	l668
  6149                           
  6150                           ;Usuaris.c: 98:             usuaris[i].username[j] = EEDATA;
  6151  0015CC  5069               	movf	Uinit@i^0,w,c
  6152  0015CE  0D17               	mullw	23
  6153  0015D0  0E00               	movlw	low _usuaris
  6154  0015D2  6E67               	movwf	??_Uinit^0,c
  6155  0015D4  0E01               	movlw	high _usuaris
  6156  0015D6  6E68               	movwf	(??_Uinit+1)^0,c
  6157  0015D8  50F3               	movf	243,w,c
  6158  0015DA  2667               	addwf	??_Uinit^0,f,c
  6159  0015DC  50F4               	movf	244,w,c
  6160  0015DE  2268               	addwfc	(??_Uinit+1)^0,f,c
  6161  0015E0  506A               	movf	Uinit@j^0,w,c
  6162  0015E2  2467               	addwf	??_Uinit^0,w,c
  6163  0015E4  6ED9               	movwf	fsr2l,c
  6164  0015E6  0E00               	movlw	0
  6165  0015E8  2068               	addwfc	(??_Uinit+1)^0,w,c
  6166  0015EA  6EDA               	movwf	fsr2h,c
  6167  0015EC  CFA8 FFDF          	movff	4008,indf2	;volatile
  6168                           
  6169                           ;Usuaris.c: 99:             EEADR++;
  6170  0015F0  2AA9               	incf	169,f,c	;volatile
  6171                           
  6172                           ;Usuaris.c: 100:         }
  6173  0015F2  2A6A               	incf	Uinit@j^0,f,c
  6174  0015F4  0E08               	movlw	8
  6175  0015F6  646A               	cpfsgt	Uinit@j^0,c
  6176  0015F8  D7E4               	goto	l666
  6177                           
  6178                           ;Usuaris.c: 101:         for(char j = 0; j<9; j++){
  6179  0015FA  0E00               	movlw	0
  6180  0015FC  6E6B               	movwf	Uinit@j_1156^0,c
  6181  0015FE                     l671:
  6182                           
  6183                           ;Usuaris.c: 102:             EECON1bits.EEPGD = 0;
  6184  0015FE  9EA6               	bcf	166,7,c	;volsfr
  6185                           
  6186                           ;Usuaris.c: 103:             EECON1bits.CFGS = 0;
  6187  001600  9CA6               	bcf	166,6,c	;volsfr
  6188                           
  6189                           ;Usuaris.c: 104:             EECON1bits.RD = 1;
  6190  001602  80A6               	bsf	166,0,c	;volsfr
  6191  001604                     l673:
  6192  001604  B0A6               	btfsc	166,0,c	;volsfr
  6193  001606  D7FE               	goto	l673
  6194                           
  6195                           ;Usuaris.c: 106:             usuaris[i].password[j] = EEDATA;
  6196  001608  5069               	movf	Uinit@i^0,w,c
  6197  00160A  0D17               	mullw	23
  6198  00160C  0E00               	movlw	low _usuaris
  6199  00160E  6E67               	movwf	??_Uinit^0,c
  6200  001610  0E01               	movlw	high _usuaris
  6201  001612  6E68               	movwf	(??_Uinit+1)^0,c
  6202  001614  0E09               	movlw	9
  6203  001616  2667               	addwf	??_Uinit^0,f,c
  6204  001618  0E00               	movlw	0
  6205  00161A  2268               	addwfc	(??_Uinit+1)^0,f,c
  6206  00161C  50F3               	movf	243,w,c
  6207  00161E  2667               	addwf	??_Uinit^0,f,c
  6208  001620  50F4               	movf	244,w,c
  6209  001622  2268               	addwfc	(??_Uinit+1)^0,f,c
  6210  001624  506B               	movf	Uinit@j_1156^0,w,c
  6211  001626  2467               	addwf	??_Uinit^0,w,c
  6212  001628  6ED9               	movwf	fsr2l,c
  6213  00162A  0E00               	movlw	0
  6214  00162C  2068               	addwfc	(??_Uinit+1)^0,w,c
  6215  00162E  6EDA               	movwf	fsr2h,c
  6216  001630  CFA8 FFDF          	movff	4008,indf2	;volatile
  6217                           
  6218                           ;Usuaris.c: 107:             EEADR++;
  6219  001634  2AA9               	incf	169,f,c	;volatile
  6220                           
  6221                           ;Usuaris.c: 108:         }
  6222  001636  2A6B               	incf	Uinit@j_1156^0,f,c
  6223  001638  0E08               	movlw	8
  6224  00163A  646B               	cpfsgt	Uinit@j_1156^0,c
  6225  00163C  D7E0               	goto	l671
  6226                           
  6227                           ;Usuaris.c: 109:     }
  6228  00163E  2A69               	incf	Uinit@i^0,f,c
  6229  001640                     l2590:
  6230  001640  5024               	movf	_numUsuaris^0,w,c
  6231  001642  5C69               	subwf	Uinit@i^0,w,c
  6232  001644  B0D8               	btfsc	status,0,c
  6233  001646  0012               	return	
  6234  001648  D7BA               	goto	l2560
  6235  00164A                     __end_of_Uinit:
  6236                           	callstack 0
  6237                           
  6238 ;; *************** function _TiInitTimer *****************
  6239 ;; Defined at:
  6240 ;;		line 18 in file "TiTTimer.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;		None
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;		None
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  1    wreg      void 
  6247 ;; Registers used:
  6248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMRAM   BANK0   BANK1
  6254 ;;      Params:         0       0       0
  6255 ;;      Locals:         0       0       0
  6256 ;;      Temps:          0       0       0
  6257 ;;      Totals:         0       0       0
  6258 ;;Total ram usage:        0 bytes
  6259 ;; Hardware stack levels used: 1
  6260 ;; Hardware stack levels required when called: 2
  6261 ;; This function calls:
  6262 ;;		Nothing
  6263 ;; This function is called by:
  6264 ;;		_main
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text53
  6269  001B26                     __ptext53:
  6270                           	callstack 0
  6271  001B26                     _TiInitTimer:
  6272                           	callstack 28
  6273                           
  6274                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  6275                           
  6276                           ;incstack = 0
  6277  001B26  9ED0               	bcf	208,7,c	;volatile
  6278                           
  6279                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  6280  001B28  8EF2               	bsf	242,7,c	;volatile
  6281                           
  6282                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  6283  001B2A  8CF2               	bsf	242,6,c	;volatile
  6284                           
  6285                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  6286  001B2C  8AF2               	bsf	242,5,c	;volatile
  6287                           
  6288                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  6289  001B2E  94F2               	bcf	242,2,c	;volatile
  6290                           
  6291                           ;TiTTimer.c: 25:     T0CON = 136;
  6292  001B30  0E88               	movlw	136
  6293  001B32  6ED5               	movwf	213,c	;volatile
  6294                           
  6295                           ;TiTTimer.c: 27:     TMR0H = 223;
  6296  001B34  0EDF               	movlw	223
  6297  001B36  6ED7               	movwf	215,c	;volatile
  6298                           
  6299                           ;TiTTimer.c: 28:     TMR0L = 148;
  6300  001B38  0E94               	movlw	148
  6301  001B3A  6ED6               	movwf	214,c	;volatile
  6302                           
  6303                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  6304  001B3C  8ED5               	bsf	213,7,c	;volatile
  6305                           
  6306                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  6307  001B3E  0E00               	movlw	0
  6308  001B40  6E2B               	movwf	_counter^0,c
  6309  001B42                     l4370:
  6310  001B42  0E07               	movlw	7
  6311  001B44  642B               	cpfsgt	_counter^0,c
  6312  001B46  D001               	goto	l4374
  6313  001B48  0012               	return	
  6314  001B4A                     l4374:
  6315                           
  6316                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  6317  001B4A  502B               	movf	_counter^0,w,c
  6318  001B4C  0D03               	mullw	3
  6319  001B4E  50F3               	movf	243,w,c
  6320  001B50  0FAA               	addlw	low (_s_Timers+2)
  6321  001B52  6ED9               	movwf	fsr2l,c
  6322  001B54  6ADA               	clrf	fsr2h,c
  6323  001B56  0E00               	movlw	0
  6324  001B58  6EDF               	movwf	indf2,c
  6325                           
  6326                           ;TiTTimer.c: 33:     }
  6327  001B5A  2A2B               	incf	_counter^0,f,c
  6328  001B5C  D7F2               	goto	l4370
  6329  001B5E                     __end_of_TiInitTimer:
  6330                           	callstack 0
  6331                           
  6332 ;; *************** function _TeTeclat *****************
  6333 ;; Defined at:
  6334 ;;		line 22 in file "TeTeclat.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      void 
  6341 ;; Registers used:
  6342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/1
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1
  6348 ;;      Params:         0       0       0
  6349 ;;      Locals:         0       0       0
  6350 ;;      Temps:          3       0       0
  6351 ;;      Totals:         3       0       0
  6352 ;;Total ram usage:        3 bytes
  6353 ;; Hardware stack levels used: 1
  6354 ;; Hardware stack levels required when called: 3
  6355 ;; This function calls:
  6356 ;;		_MsetNovaTecla
  6357 ;;		_SsetNovaTecla
  6358 ;;		_TiGetTics
  6359 ;;		_TiResetTics
  6360 ;; This function is called by:
  6361 ;;		_main
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text54
  6366  0010F8                     __ptext54:
  6367                           	callstack 0
  6368  0010F8                     _TeTeclat:
  6369                           	callstack 27
  6370                           
  6371                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  6372                           
  6373                           ;incstack = 0
  6374  0010F8  A083               	btfss	131,0,c	;volatile
  6375  0010FA  D003               	goto	u5300
  6376  0010FC  6A6E               	clrf	??_TeTeclat^0,c
  6377  0010FE  2A6E               	incf	??_TeTeclat^0,f,c
  6378  001100  D001               	goto	u5308
  6379  001102                     u5300:
  6380  001102  6A6E               	clrf	??_TeTeclat^0,c
  6381  001104                     u5308:
  6382  001104  A283               	btfss	131,1,c	;volatile
  6383  001106  D002               	goto	u5310
  6384  001108  0E01               	movlw	1
  6385  00110A  D001               	goto	u5316
  6386  00110C                     u5310:
  6387  00110C  0E00               	movlw	0
  6388  00110E                     u5316:
  6389  00110E  0D02               	mullw	2
  6390  001110  CFF3 F06F          	movff	prodl,??_TeTeclat+1
  6391  001114  A483               	btfss	131,2,c	;volatile
  6392  001116  D002               	goto	u5320
  6393  001118  0E01               	movlw	1
  6394  00111A  D001               	goto	u5326
  6395  00111C                     u5320:
  6396  00111C  0E00               	movlw	0
  6397  00111E                     u5326:
  6398  00111E  0D03               	mullw	3
  6399  001120  CFF3 F070          	movff	prodl,??_TeTeclat+2
  6400  001124  A683               	btfss	131,3,c	;volatile
  6401  001126  D002               	goto	u5330
  6402  001128  0E01               	movlw	1
  6403  00112A  D001               	goto	u5336
  6404  00112C                     u5330:
  6405  00112C  0E00               	movlw	0
  6406  00112E                     u5336:
  6407  00112E  0D04               	mullw	4
  6408  001130  50F3               	movf	243,w,c
  6409  001132  2470               	addwf	(??_TeTeclat+2)^0,w,c
  6410  001134  246F               	addwf	(??_TeTeclat+1)^0,w,c
  6411  001136  246E               	addwf	??_TeTeclat^0,w,c
  6412  001138  6E2C               	movwf	TeTeclat@files^0,c
  6413                           
  6414                           ;TeTeclat.c: 27:  switch(state) {
  6415  00113A  D06F               	goto	l5578
  6416  00113C                     l5504:
  6417                           
  6418                           ;TeTeclat.c: 29:    if (files==0) {
  6419  00113C  502C               	movf	TeTeclat@files^0,w,c
  6420  00113E  A4D8               	btfss	status,2,c
  6421  001140  D007               	goto	l5512
  6422                           
  6423                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  6424  001142  888C               	bsf	140,4,c	;volatile
  6425                           
  6426                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  6427  001144  9A8C               	bcf	140,5,c	;volatile
  6428                           
  6429                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  6430  001146  9C8C               	bcf	140,6,c	;volatile
  6431                           
  6432                           ;TeTeclat.c: 33:     cols=0;
  6433  001148  0E00               	movlw	0
  6434  00114A  6E2D               	movwf	TeTeclat@cols^0,c
  6435  00114C                     l5510:
  6436                           
  6437                           ;TeTeclat.c: 34:     state++;
  6438  00114C  2A2E               	incf	TeTeclat@state^0,f,c
  6439                           
  6440                           ;TeTeclat.c: 35:    }
  6441  00114E  0012               	return	
  6442  001150                     l5512:
  6443  001150  502C               	movf	TeTeclat@files^0,w,c
  6444  001152  B4D8               	btfsc	status,2,c
  6445  001154  0012               	return	
  6446                           
  6447                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  6448  001156  502F               	movf	_tiTeclat^0,w,c
  6449  001158  ECDE  F00E         	call	_TiResetTics
  6450  00115C                     l5516:
  6451                           
  6452                           ;TeTeclat.c: 38:     state = 3;
  6453  00115C  0E03               	movlw	3
  6454  00115E  6E2E               	movwf	TeTeclat@state^0,c
  6455  001160  0012               	return	
  6456  001162                     l5518:
  6457                           
  6458                           ;TeTeclat.c: 42:    if (files==0) {
  6459  001162  502C               	movf	TeTeclat@files^0,w,c
  6460  001164  A4D8               	btfss	status,2,c
  6461  001166  D005               	goto	l5526
  6462                           
  6463                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  6464  001168  988C               	bcf	140,4,c	;volatile
  6465                           
  6466                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  6467  00116A  8A8C               	bsf	140,5,c	;volatile
  6468                           
  6469                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  6470  00116C  9C8C               	bcf	140,6,c	;volatile
  6471                           
  6472                           ;TeTeclat.c: 46:     cols=1;
  6473  00116E  0E01               	movlw	1
  6474  001170  D7EC               	goto	L3
  6475  001172                     l5526:
  6476  001172  502C               	movf	TeTeclat@files^0,w,c
  6477  001174  B4D8               	btfsc	status,2,c
  6478  001176  0012               	return	
  6479                           
  6480                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  6481  001178  502F               	movf	_tiTeclat^0,w,c
  6482  00117A  ECDE  F00E         	call	_TiResetTics
  6483  00117E  D7EE               	goto	l5516
  6484  001180                     l5532:
  6485                           
  6486                           ;TeTeclat.c: 55:    if (files==0) {
  6487  001180  502C               	movf	TeTeclat@files^0,w,c
  6488  001182  A4D8               	btfss	status,2,c
  6489  001184  D008               	goto	l5538
  6490                           
  6491                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  6492  001186  988C               	bcf	140,4,c	;volatile
  6493                           
  6494                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  6495  001188  9A8C               	bcf	140,5,c	;volatile
  6496                           
  6497                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  6498  00118A  8C8C               	bsf	140,6,c	;volatile
  6499                           
  6500                           ;TeTeclat.c: 59:     cols=2;
  6501  00118C  0E02               	movlw	2
  6502  00118E  6E2D               	movwf	TeTeclat@cols^0,c
  6503                           
  6504                           ;TeTeclat.c: 60:     state = 0;
  6505  001190  0E00               	movlw	0
  6506  001192  6E2E               	movwf	TeTeclat@state^0,c
  6507                           
  6508                           ;TeTeclat.c: 61:    }
  6509  001194  0012               	return	
  6510  001196                     l5538:
  6511  001196  502C               	movf	TeTeclat@files^0,w,c
  6512  001198  B4D8               	btfsc	status,2,c
  6513  00119A  0012               	return	
  6514                           
  6515                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  6516  00119C  502F               	movf	_tiTeclat^0,w,c
  6517  00119E  ECDE  F00E         	call	_TiResetTics
  6518  0011A2  D7D4               	goto	l5510
  6519  0011A4                     l5544:
  6520                           
  6521                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  6522  0011A4  502F               	movf	_tiTeclat^0,w,c
  6523  0011A6  EC5F  F00E         	call	_TiGetTics
  6524  0011AA  BE68               	btfsc	(?_TiGetTics+1)^0,7,c
  6525  0011AC  0012               	return	
  6526  0011AE  D7CE               	goto	l5510
  6527  0011B0                     l5548:
  6528                           
  6529                           ;TeTeclat.c: 73:    if (files==0) {
  6530  0011B0  502C               	movf	TeTeclat@files^0,w,c
  6531  0011B2  A4D8               	btfss	status,2,c
  6532  0011B4  D003               	goto	l5552
  6533                           
  6534                           ;TeTeclat.c: 74:     state = 1;
  6535  0011B6  0E01               	movlw	1
  6536  0011B8  6E2E               	movwf	TeTeclat@state^0,c
  6537                           
  6538                           ;TeTeclat.c: 75:    }
  6539  0011BA  0012               	return	
  6540  0011BC                     l5552:
  6541  0011BC  502C               	movf	TeTeclat@files^0,w,c
  6542  0011BE  B4D8               	btfsc	status,2,c
  6543  0011C0  0012               	return	
  6544                           
  6545                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  6546  0011C2  502C               	movf	TeTeclat@files^0,w,c
  6547  0011C4  0D03               	mullw	3
  6548  0011C6  50F3               	movf	243,w,c
  6549  0011C8  0F86               	addlw	low (_teclaPremuda+253)
  6550  0011CA  242D               	addwf	TeTeclat@cols^0,w,c
  6551  0011CC  6ED9               	movwf	fsr2l,c
  6552  0011CE  6ADA               	clrf	fsr2h,c
  6553  0011D0  50DF               	movf	indf2,w,c
  6554  0011D2  EC7B  F00F         	call	_MsetNovaTecla
  6555                           
  6556                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  6557  0011D6  502C               	movf	TeTeclat@files^0,w,c
  6558  0011D8  0D03               	mullw	3
  6559  0011DA  50F3               	movf	243,w,c
  6560  0011DC  0F86               	addlw	low (_teclaPremuda+253)
  6561  0011DE  242D               	addwf	TeTeclat@cols^0,w,c
  6562  0011E0  6ED9               	movwf	fsr2l,c
  6563  0011E2  6ADA               	clrf	fsr2h,c
  6564  0011E4  50DF               	movf	indf2,w,c
  6565  0011E6  EC77  F00F         	call	_SsetNovaTecla
  6566  0011EA  D7B0               	goto	l5510
  6567  0011EC                     l5558:
  6568                           
  6569                           ;TeTeclat.c: 84:    if (files==0) {
  6570  0011EC  502C               	movf	TeTeclat@files^0,w,c
  6571  0011EE  A4D8               	btfss	status,2,c
  6572  0011F0  0012               	return	
  6573                           
  6574                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  6575  0011F2  502F               	movf	_tiTeclat^0,w,c
  6576  0011F4  ECDE  F00E         	call	_TiResetTics
  6577  0011F8  D7A9               	goto	l5510
  6578  0011FA                     l5564:
  6579                           
  6580                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  6581  0011FA  502F               	movf	_tiTeclat^0,w,c
  6582  0011FC  EC5F  F00E         	call	_TiGetTics
  6583  001200  D7D4               	goto	L4
  6584  001202                     l5568:
  6585                           
  6586                           ;TeTeclat.c: 95:    if (files!=0) {
  6587  001202  502C               	movf	TeTeclat@files^0,w,c
  6588  001204  B4D8               	btfsc	status,2,c
  6589  001206  D003               	goto	l5572
  6590                           
  6591                           ;TeTeclat.c: 96:     state = 5;
  6592  001208  0E05               	movlw	5
  6593  00120A  6E2E               	movwf	TeTeclat@state^0,c
  6594                           
  6595                           ;TeTeclat.c: 97:    }
  6596  00120C  0012               	return	
  6597  00120E                     l5572:
  6598  00120E  502C               	movf	TeTeclat@files^0,w,c
  6599  001210  A4D8               	btfss	status,2,c
  6600  001212  0012               	return	
  6601                           
  6602                           ;TeTeclat.c: 99:     state = 0;
  6603  001214  0E00               	movlw	0
  6604  001216  6E2E               	movwf	TeTeclat@state^0,c
  6605  001218  0012               	return	
  6606  00121A                     l5578:
  6607  00121A  502E               	movf	TeTeclat@state^0,w,c
  6608  00121C  6E6E               	movwf	??_TeTeclat^0,c
  6609  00121E  6A6F               	clrf	(??_TeTeclat+1)^0,c
  6610                           
  6611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6612                           ; Switch size 1, requested type "simple"
  6613                           ; Number of cases is 1, Range of values is 0 to 0
  6614                           ; switch strategies available:
  6615                           ; Name         Instructions Cycles
  6616                           ; simple_byte            4     3 (average)
  6617                           ;	Chosen strategy is simple_byte
  6618  001220  506F               	movf	(??_TeTeclat+1)^0,w,c
  6619  001222  0A00               	xorlw	0	; case 0
  6620  001224  A4D8               	btfss	status,2,c
  6621  001226  0012               	return	
  6622                           
  6623                           ; Switch size 1, requested type "simple"
  6624                           ; Number of cases is 8, Range of values is 0 to 7
  6625                           ; switch strategies available:
  6626                           ; Name         Instructions Cycles
  6627                           ; simple_byte           25    13 (average)
  6628                           ;	Chosen strategy is simple_byte
  6629  001228  506E               	movf	??_TeTeclat^0,w,c
  6630  00122A  0A00               	xorlw	0	; case 0
  6631  00122C  B4D8               	btfsc	status,2,c
  6632  00122E  D786               	goto	l5504
  6633  001230  0A01               	xorlw	1	; case 1
  6634  001232  B4D8               	btfsc	status,2,c
  6635  001234  D796               	goto	l5518
  6636  001236  0A03               	xorlw	3	; case 2
  6637  001238  B4D8               	btfsc	status,2,c
  6638  00123A  D7A2               	goto	l5532
  6639  00123C  0A01               	xorlw	1	; case 3
  6640  00123E  B4D8               	btfsc	status,2,c
  6641  001240  D7B1               	goto	l5544
  6642  001242  0A07               	xorlw	7	; case 4
  6643  001244  B4D8               	btfsc	status,2,c
  6644  001246  D7B4               	goto	l5548
  6645  001248  0A01               	xorlw	1	; case 5
  6646  00124A  B4D8               	btfsc	status,2,c
  6647  00124C  D7CF               	goto	l5558
  6648  00124E  0A03               	xorlw	3	; case 6
  6649  001250  B4D8               	btfsc	status,2,c
  6650  001252  D7D3               	goto	l5564
  6651  001254  0A01               	xorlw	1	; case 7
  6652  001256  A4D8               	btfss	status,2,c
  6653  001258  0012               	return	
  6654  00125A  D7D3               	goto	l5568
  6655  00125C                     __end_of_TeTeclat:
  6656                           	callstack 0
  6657                           
  6658 ;; *************** function _SsetNovaTecla *****************
  6659 ;; Defined at:
  6660 ;;		line 126 in file "Ssms.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  tecla           1    wreg     unsigned char 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;  tecla           1    5[COMRAM] unsigned char 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/1
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1
  6674 ;;      Params:         0       0       0
  6675 ;;      Locals:         1       0       0
  6676 ;;      Temps:          0       0       0
  6677 ;;      Totals:         1       0       0
  6678 ;;Total ram usage:        1 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; Hardware stack levels required when called: 2
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_TeTeclat
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text55
  6689  001EEE                     __ptext55:
  6690                           	callstack 0
  6691  001EEE                     _SsetNovaTecla:
  6692                           	callstack 27
  6693                           
  6694                           ;incstack = 0
  6695                           ;SsetNovaTecla@tecla stored from wreg
  6696  001EEE  6E67               	movwf	SsetNovaTecla@tecla^0,c
  6697                           
  6698                           ;Ssms.c: 127:     novaTecla = tecla;
  6699  001EF0  C067  F056         	movff	SsetNovaTecla@tecla,_novaTecla
  6700  001EF4  0012               	return		;funcret
  6701  001EF6                     __end_of_SsetNovaTecla:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function _MsetNovaTecla *****************
  6705 ;; Defined at:
  6706 ;;		line 29 in file "Menu.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  tecla           1    wreg     unsigned char 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  tecla           1    5[COMRAM] unsigned char 
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1    wreg      void 
  6713 ;; Registers used:
  6714 ;;		wreg
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/1
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1
  6720 ;;      Params:         0       0       0
  6721 ;;      Locals:         1       0       0
  6722 ;;      Temps:          0       0       0
  6723 ;;      Totals:         1       0       0
  6724 ;;Total ram usage:        1 bytes
  6725 ;; Hardware stack levels used: 1
  6726 ;; Hardware stack levels required when called: 2
  6727 ;; This function calls:
  6728 ;;		Nothing
  6729 ;; This function is called by:
  6730 ;;		_TeTeclat
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text56
  6735  001EF6                     __ptext56:
  6736                           	callstack 0
  6737  001EF6                     _MsetNovaTecla:
  6738                           	callstack 27
  6739                           
  6740                           ;incstack = 0
  6741                           ;MsetNovaTecla@tecla stored from wreg
  6742  001EF6  6E67               	movwf	MsetNovaTecla@tecla^0,c
  6743                           
  6744                           ;Menu.c: 30:     NovaTecla = tecla;
  6745  001EF8  C067  F053         	movff	MsetNovaTecla@tecla,_NovaTecla
  6746  001EFC  0012               	return		;funcret
  6747  001EFE                     __end_of_MsetNovaTecla:
  6748                           	callstack 0
  6749                           
  6750 ;; *************** function _TeInit *****************
  6751 ;; Defined at:
  6752 ;;		line 18 in file "TeTeclat.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      void 
  6759 ;; Registers used:
  6760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1
  6766 ;;      Params:         0       0       0
  6767 ;;      Locals:         0       0       0
  6768 ;;      Temps:          0       0       0
  6769 ;;      Totals:         0       0       0
  6770 ;;Total ram usage:        0 bytes
  6771 ;; Hardware stack levels used: 1
  6772 ;; Hardware stack levels required when called: 3
  6773 ;; This function calls:
  6774 ;;		_TiGetTimer
  6775 ;; This function is called by:
  6776 ;;		_main
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           	psect	text57
  6781  001EFE                     __ptext57:
  6782                           	callstack 0
  6783  001EFE                     _TeInit:
  6784                           	callstack 27
  6785                           
  6786                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  6787                           
  6788                           ;incstack = 0
  6789  001EFE  EC76  F00D         	call	_TiGetTimer	;wreg free
  6790  001F02  6E2F               	movwf	_tiTeclat^0,c
  6791  001F04  0012               	return		;funcret
  6792  001F06                     __end_of_TeInit:
  6793                           	callstack 0
  6794                           
  6795 ;; *************** function _Sinit *****************
  6796 ;; Defined at:
  6797 ;;		line 18 in file "Ssms.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;		None
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      void 
  6804 ;; Registers used:
  6805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMRAM   BANK0   BANK1
  6811 ;;      Params:         0       0       0
  6812 ;;      Locals:         0       0       0
  6813 ;;      Temps:          0       0       0
  6814 ;;      Totals:         0       0       0
  6815 ;;Total ram usage:        0 bytes
  6816 ;; Hardware stack levels used: 1
  6817 ;; Hardware stack levels required when called: 3
  6818 ;; This function calls:
  6819 ;;		_TiGetTimer
  6820 ;; This function is called by:
  6821 ;;		_main
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text58
  6826  001F06                     __ptext58:
  6827                           	callstack 0
  6828  001F06                     _Sinit:
  6829                           	callstack 27
  6830                           
  6831                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  6832                           
  6833                           ;incstack = 0
  6834  001F06  EC76  F00D         	call	_TiGetTimer	;wreg free
  6835  001F0A  6E55               	movwf	_timerSMS^0,c
  6836  001F0C  0012               	return		;funcret
  6837  001F0E                     __end_of_Sinit:
  6838                           	callstack 0
  6839                           
  6840 ;; *************** function _SMotor *****************
  6841 ;; Defined at:
  6842 ;;		line 22 in file "Ssms.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;		None
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;		None
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      void 
  6849 ;; Registers used:
  6850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1
  6856 ;;      Params:         0       0       0
  6857 ;;      Locals:         0       0       0
  6858 ;;      Temps:          2       0       0
  6859 ;;      Totals:         2       0       0
  6860 ;;Total ram usage:        2 bytes
  6861 ;; Hardware stack levels used: 1
  6862 ;; Hardware stack levels required when called: 3
  6863 ;; This function calls:
  6864 ;;		_MNovaLletra
  6865 ;;		_TiGetTics
  6866 ;;		_TiResetTics
  6867 ;; This function is called by:
  6868 ;;		_main
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           	psect	text59
  6873  000D82                     __ptext59:
  6874                           	callstack 0
  6875  000D82                     _SMotor:
  6876                           	callstack 27
  6877                           
  6878                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  6879                           
  6880                           ;incstack = 0
  6881  000D82  D0DF               	goto	l4542
  6882  000D84                     l4386:
  6883                           
  6884                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  6885  000D84  2856               	incf	_novaTecla^0,w,c
  6886  000D86  A4D8               	btfss	status,2,c
  6887  000D88  AE78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6888  000D8A  D006               	goto	l4394
  6889                           
  6890                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  6891  000D8C  5055               	movf	_timerSMS^0,w,c
  6892  000D8E  ECDE  F00E         	call	_TiResetTics
  6893                           
  6894                           ;Ssms.c: 29:     state = 3;
  6895  000D92  0E03               	movlw	3
  6896  000D94  6E30               	movwf	SMotor@state^0,c
  6897                           
  6898                           ;Ssms.c: 30:    }
  6899  000D96  0012               	return	
  6900  000D98                     l4394:
  6901  000D98  2856               	incf	_novaTecla^0,w,c
  6902  000D9A  A4D8               	btfss	status,2,c
  6903  000D9C  0012               	return	
  6904  000D9E  5055               	movf	_timerSMS^0,w,c
  6905  000DA0  EC5F  F00E         	call	_TiGetTics
  6906  000DA4  BE68               	btfsc	(?_TiGetTics+1)^0,7,c
  6907  000DA6  0012               	return	
  6908  000DA8  0E5A               	movlw	90
  6909  000DAA  5C67               	subwf	?_TiGetTics^0,w,c
  6910  000DAC  0E02               	movlw	2
  6911  000DAE  5868               	subwfb	(?_TiGetTics+1)^0,w,c
  6912  000DB0  A0D8               	btfss	status,0,c
  6913  000DB2  0012               	return	
  6914  000DB4  2857               	incf	_lletraASCII^0,w,c
  6915  000DB6  B4D8               	btfsc	status,2,c
  6916  000DB8  0012               	return	
  6917  000DBA  AE78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6918  000DBC  0012               	return	
  6919                           
  6920                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  6921  000DBE  5057               	movf	_lletraASCII^0,w,c
  6922  000DC0  EC87  F00F         	call	_MNovaLletra
  6923                           
  6924                           ;Ssms.c: 33:     lletraASCII = -1;
  6925  000DC4  6857               	setf	_lletraASCII^0,c
  6926                           
  6927                           ;Ssms.c: 34:     ultimaTecla = -1;
  6928  000DC6  6854               	setf	_ultimaTecla^0,c
  6929                           
  6930                           ;Ssms.c: 35:     zeroTecla = 0;
  6931  000DC8  0E00               	movlw	0
  6932  000DCA  6E31               	movwf	_zeroTecla^0,c
  6933  000DCC                     l4410:
  6934                           
  6935                           ;Ssms.c: 36:     state = 0;
  6936  000DCC  0E00               	movlw	0
  6937  000DCE  6E30               	movwf	SMotor@state^0,c
  6938  000DD0  0012               	return	
  6939  000DD2                     l4412:
  6940                           
  6941                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  6942  000DD2  5054               	movf	_ultimaTecla^0,w,c
  6943  000DD4  1856               	xorwf	_novaTecla^0,w,c
  6944  000DD6  A4D8               	btfss	status,2,c
  6945  000DD8  D011               	goto	l4422
  6946  000DDA  5055               	movf	_timerSMS^0,w,c
  6947  000DDC  EC5F  F00E         	call	_TiGetTics
  6948  000DE0  BE68               	btfsc	(?_TiGetTics+1)^0,7,c
  6949  000DE2  D006               	goto	u3470
  6950  000DE4  0E5A               	movlw	90
  6951  000DE6  5C67               	subwf	?_TiGetTics^0,w,c
  6952  000DE8  0E02               	movlw	2
  6953  000DEA  5868               	subwfb	(?_TiGetTics+1)^0,w,c
  6954  000DEC  B0D8               	btfsc	status,0,c
  6955  000DEE  D006               	goto	l4422
  6956  000DF0                     u3470:
  6957                           
  6958                           ;Ssms.c: 41:     novaTecla = -1;
  6959  000DF0  6856               	setf	_novaTecla^0,c
  6960                           
  6961                           ;Ssms.c: 42:     sumaPulsacions++;
  6962  000DF2  2A32               	incf	_sumaPulsacions^0,f,c
  6963                           
  6964                           ;Ssms.c: 43:     lletraASCII++;
  6965  000DF4  2A57               	incf	_lletraASCII^0,f,c
  6966                           
  6967                           ;Ssms.c: 44:     state = 2;
  6968  000DF6  0E02               	movlw	2
  6969  000DF8  6E30               	movwf	SMotor@state^0,c
  6970                           
  6971                           ;Ssms.c: 45:    }
  6972  000DFA  0012               	return	
  6973  000DFC                     l4422:
  6974  000DFC  2856               	incf	_novaTecla^0,w,c
  6975  000DFE  B4D8               	btfsc	status,2,c
  6976  000E00  0012               	return	
  6977  000E02  5054               	movf	_ultimaTecla^0,w,c
  6978  000E04  1856               	xorwf	_novaTecla^0,w,c
  6979  000E06  B4D8               	btfsc	status,2,c
  6980  000E08  0012               	return	
  6981                           
  6982                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  6983  000E0A  5057               	movf	_lletraASCII^0,w,c
  6984  000E0C  EC87  F00F         	call	_MNovaLletra
  6985                           
  6986                           ;Ssms.c: 48:     if(novaTecla != 0){
  6987  000E10  5056               	movf	_novaTecla^0,w,c
  6988  000E12  B4D8               	btfsc	status,2,c
  6989  000E14  D006               	goto	l4434
  6990                           
  6991                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  6992  000E16  5056               	movf	_novaTecla^0,w,c
  6993  000E18  0F7E               	addlw	low (_lletraInici+254)
  6994  000E1A  6ED9               	movwf	fsr2l,c
  6995  000E1C  6ADA               	clrf	fsr2h,c
  6996  000E1E  50DF               	movf	indf2,w,c
  6997  000E20  D001               	goto	L11
  6998  000E22                     l4434:
  6999                           
  7000                           ;Ssms.c: 52:       lletraASCII = '0';
  7001  000E22  0E30               	movlw	48
  7002  000E24                     L11:
  7003  000E24  6E57               	movwf	_lletraASCII^0,c
  7004                           
  7005                           ;Ssms.c: 53:       zeroTecla=0;
  7006  000E26  0E00               	movlw	0
  7007  000E28  6E31               	movwf	_zeroTecla^0,c
  7008                           
  7009                           ;Ssms.c: 55:     ultimaTecla = novaTecla;
  7010  000E2A  C056  F054         	movff	_novaTecla,_ultimaTecla
  7011                           
  7012                           ;Ssms.c: 56:     sumaPulsacions = 0;
  7013  000E2E  0E00               	movlw	0
  7014  000E30  6E32               	movwf	_sumaPulsacions^0,c
  7015                           
  7016                           ;Ssms.c: 57:     novaTecla = -1;
  7017  000E32  6856               	setf	_novaTecla^0,c
  7018                           
  7019                           ;Ssms.c: 58:     state = 0;
  7020  000E34  0E00               	movlw	0
  7021  000E36  6E30               	movwf	SMotor@state^0,c
  7022  000E38  0012               	return	
  7023  000E3A                     l4440:
  7024                           
  7025                           ;Ssms.c: 62:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  7026  000E3A  0E07               	movlw	7
  7027  000E3C  1854               	xorwf	_ultimaTecla^0,w,c
  7028  000E3E  B4D8               	btfsc	status,2,c
  7029  000E40  D00A               	goto	l4448
  7030  000E42  0E09               	movlw	9
  7031  000E44  1854               	xorwf	_ultimaTecla^0,w,c
  7032  000E46  B4D8               	btfsc	status,2,c
  7033  000E48  D006               	goto	l4448
  7034  000E4A  5054               	movf	_ultimaTecla^0,w,c
  7035  000E4C  B4D8               	btfsc	status,2,c
  7036  000E4E  D003               	goto	l4448
  7037                           
  7038                           ;Ssms.c: 63:     state = 5;
  7039  000E50  0E05               	movlw	5
  7040  000E52  6E30               	movwf	SMotor@state^0,c
  7041                           
  7042                           ;Ssms.c: 64:    }
  7043  000E54  0012               	return	
  7044  000E56                     l4448:
  7045  000E56  0E07               	movlw	7
  7046  000E58  1854               	xorwf	_ultimaTecla^0,w,c
  7047  000E5A  B4D8               	btfsc	status,2,c
  7048  000E5C  D004               	goto	u3550
  7049  000E5E  0E09               	movlw	9
  7050  000E60  1854               	xorwf	_ultimaTecla^0,w,c
  7051  000E62  A4D8               	btfss	status,2,c
  7052  000E64  D003               	goto	l4454
  7053  000E66                     u3550:
  7054                           
  7055                           ;Ssms.c: 66:     state = 6;
  7056  000E66  0E06               	movlw	6
  7057  000E68  6E30               	movwf	SMotor@state^0,c
  7058                           
  7059                           ;Ssms.c: 67:    }
  7060  000E6A  0012               	return	
  7061  000E6C                     l4454:
  7062  000E6C  5054               	movf	_ultimaTecla^0,w,c
  7063  000E6E  A4D8               	btfss	status,2,c
  7064  000E70  0012               	return	
  7065                           
  7066                           ;Ssms.c: 69:     zeroTecla++;
  7067  000E72  2A31               	incf	_zeroTecla^0,f,c
  7068                           
  7069                           ;Ssms.c: 70:     if(zeroTecla == 2) zeroTecla = 0;
  7070  000E74  0E02               	movlw	2
  7071  000E76  1831               	xorwf	_zeroTecla^0,w,c
  7072  000E78  A4D8               	btfss	status,2,c
  7073  000E7A  D002               	goto	l4462
  7074  000E7C  0E00               	movlw	0
  7075  000E7E  6E31               	movwf	_zeroTecla^0,c
  7076  000E80                     l4462:
  7077                           
  7078                           ;Ssms.c: 71:     lletraASCII = arrayZero[zeroTecla];
  7079  000E80  5031               	movf	_zeroTecla^0,w,c
  7080  000E82  0F45               	addlw	low _arrayZero
  7081  000E84  6ED9               	movwf	fsr2l,c
  7082  000E86  6ADA               	clrf	fsr2h,c
  7083  000E88  50DF               	movf	indf2,w,c
  7084  000E8A  D04B               	goto	L6
  7085  000E8C                     l4466:
  7086                           
  7087                           ;Ssms.c: 76:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  7088  000E8C  5056               	movf	_novaTecla^0,w,c
  7089  000E8E  0A80               	xorlw	128
  7090  000E90  0F7E               	addlw	-130
  7091  000E92  B0D8               	btfsc	status,0,c
  7092  000E94  D003               	goto	u3590
  7093  000E96  5056               	movf	_novaTecla^0,w,c
  7094  000E98  A4D8               	btfss	status,2,c
  7095  000E9A  D008               	goto	l4474
  7096  000E9C                     u3590:
  7097  000E9C  5056               	movf	_novaTecla^0,w,c
  7098  000E9E  0A80               	xorlw	128
  7099  000EA0  0F76               	addlw	-138
  7100  000EA2  B0D8               	btfsc	status,0,c
  7101  000EA4  D003               	goto	l4474
  7102                           
  7103                           ;Ssms.c: 77:     state = 1;
  7104  000EA6  0E01               	movlw	1
  7105  000EA8  6E30               	movwf	SMotor@state^0,c
  7106                           
  7107                           ;Ssms.c: 78:    }
  7108  000EAA  0012               	return	
  7109  000EAC                     l4474:
  7110  000EAC  5056               	movf	_novaTecla^0,w,c
  7111  000EAE  B4D8               	btfsc	status,2,c
  7112  000EB0  D00E               	goto	l4486
  7113  000EB2  5056               	movf	_novaTecla^0,w,c
  7114  000EB4  0A80               	xorlw	128
  7115  000EB6  0F7E               	addlw	-130
  7116  000EB8  B0D8               	btfsc	status,0,c
  7117  000EBA  D009               	goto	l4486
  7118  000EBC  2857               	incf	_lletraASCII^0,w,c
  7119  000EBE  A4D8               	btfss	status,2,c
  7120  000EC0  D006               	goto	l4486
  7121                           
  7122                           ;Ssms.c: 80:     MNovaLletra(novaTecla+48);
  7123  000EC2  5056               	movf	_novaTecla^0,w,c
  7124  000EC4  0F30               	addlw	48
  7125  000EC6  EC87  F00F         	call	_MNovaLletra
  7126  000ECA                     l4482:
  7127                           
  7128                           ;Ssms.c: 81:     novaTecla = -1;
  7129  000ECA  6856               	setf	_novaTecla^0,c
  7130  000ECC  D77F               	goto	l4410
  7131  000ECE                     l4486:
  7132  000ECE  5056               	movf	_novaTecla^0,w,c
  7133  000ED0  B4D8               	btfsc	status,2,c
  7134  000ED2  0012               	return	
  7135  000ED4  5056               	movf	_novaTecla^0,w,c
  7136  000ED6  0A80               	xorlw	128
  7137  000ED8  0F7E               	addlw	-130
  7138  000EDA  B0D8               	btfsc	status,0,c
  7139  000EDC  0012               	return	
  7140  000EDE  2857               	incf	_lletraASCII^0,w,c
  7141  000EE0  B4D8               	btfsc	status,2,c
  7142  000EE2  0012               	return	
  7143                           
  7144                           ;Ssms.c: 85:     MNovaLletra(lletraASCII);
  7145  000EE4  5057               	movf	_lletraASCII^0,w,c
  7146  000EE6  EC87  F00F         	call	_MNovaLletra
  7147                           
  7148                           ;Ssms.c: 86:     lletraASCII = -1;
  7149  000EEA  6857               	setf	_lletraASCII^0,c
  7150                           
  7151                           ;Ssms.c: 87:     state = 4;
  7152  000EEC  0E04               	movlw	4
  7153  000EEE  6E30               	movwf	SMotor@state^0,c
  7154  000EF0  0012               	return	
  7155  000EF2                     l4498:
  7156                           
  7157                           ;Ssms.c: 91:    MNovaLletra(novaTecla+48);
  7158  000EF2  5056               	movf	_novaTecla^0,w,c
  7159  000EF4  0F30               	addlw	48
  7160  000EF6  EC87  F00F         	call	_MNovaLletra
  7161  000EFA  D7E7               	goto	l4482
  7162  000EFC                     l4504:
  7163                           
  7164                           ;Ssms.c: 96:    if (sumaPulsacions == 4) {
  7165  000EFC  0E04               	movlw	4
  7166  000EFE  1832               	xorwf	_sumaPulsacions^0,w,c
  7167  000F00  A4D8               	btfss	status,2,c
  7168  000F02  D009               	goto	l4512
  7169  000F04                     u3670:
  7170                           
  7171                           ;Ssms.c: 97:     lletraASCII = lletraInici[ultimaTecla-2];
  7172  000F04  5054               	movf	_ultimaTecla^0,w,c
  7173  000F06  0F7E               	addlw	low (_lletraInici+254)
  7174  000F08  6ED9               	movwf	fsr2l,c
  7175  000F0A  6ADA               	clrf	fsr2h,c
  7176  000F0C  50DF               	movf	indf2,w,c
  7177  000F0E  6E57               	movwf	_lletraASCII^0,c
  7178                           
  7179                           ;Ssms.c: 98:     sumaPulsacions = 0;
  7180  000F10  0E00               	movlw	0
  7181  000F12  6E32               	movwf	_sumaPulsacions^0,c
  7182  000F14  D75B               	goto	l4410
  7183  000F16                     l4512:
  7184  000F16  0E03               	movlw	3
  7185  000F18  1832               	xorwf	_sumaPulsacions^0,w,c
  7186  000F1A  A4D8               	btfss	status,2,c
  7187  000F1C  D004               	goto	l4518
  7188  000F1E                     u3680:
  7189                           
  7190                           ;Ssms.c: 102:     lletraASCII = ultimaTecla+48;
  7191  000F1E  5054               	movf	_ultimaTecla^0,w,c
  7192  000F20  0F30               	addlw	48
  7193  000F22                     L6:
  7194  000F22  6E57               	movwf	_lletraASCII^0,c
  7195  000F24  D753               	goto	l4410
  7196  000F26                     l4518:
  7197  000F26  0E03               	movlw	3
  7198  000F28  6032               	cpfslt	_sumaPulsacions^0,c
  7199  000F2A  0012               	return	
  7200  000F2C  D74F               	goto	l4410
  7201  000F2E                     l4522:
  7202                           
  7203                           ;Ssms.c: 110:    if (sumaPulsacions == 4) {
  7204  000F2E  0E04               	movlw	4
  7205  000F30  1832               	xorwf	_sumaPulsacions^0,w,c
  7206  000F32  B4D8               	btfsc	status,2,c
  7207  000F34  D7F4               	goto	u3680
  7208  000F36  0E05               	movlw	5
  7209  000F38  1832               	xorwf	_sumaPulsacions^0,w,c
  7210  000F3A  B4D8               	btfsc	status,2,c
  7211  000F3C  D7E3               	goto	u3670
  7212  000F3E  0E04               	movlw	4
  7213  000F40  D7F3               	goto	L7
  7214  000F42                     l4542:
  7215  000F42  5030               	movf	SMotor@state^0,w,c
  7216  000F44  6E6E               	movwf	??_SMotor^0,c
  7217  000F46  6A6F               	clrf	(??_SMotor+1)^0,c
  7218                           
  7219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7220                           ; Switch size 1, requested type "simple"
  7221                           ; Number of cases is 1, Range of values is 0 to 0
  7222                           ; switch strategies available:
  7223                           ; Name         Instructions Cycles
  7224                           ; simple_byte            4     3 (average)
  7225                           ;	Chosen strategy is simple_byte
  7226  000F48  506F               	movf	(??_SMotor+1)^0,w,c
  7227  000F4A  0A00               	xorlw	0	; case 0
  7228  000F4C  A4D8               	btfss	status,2,c
  7229  000F4E  0012               	return	
  7230                           
  7231                           ; Switch size 1, requested type "simple"
  7232                           ; Number of cases is 7, Range of values is 0 to 6
  7233                           ; switch strategies available:
  7234                           ; Name         Instructions Cycles
  7235                           ; simple_byte           22    12 (average)
  7236                           ;	Chosen strategy is simple_byte
  7237  000F50  506E               	movf	??_SMotor^0,w,c
  7238  000F52  0A00               	xorlw	0	; case 0
  7239  000F54  B4D8               	btfsc	status,2,c
  7240  000F56  D716               	goto	l4386
  7241  000F58  0A01               	xorlw	1	; case 1
  7242  000F5A  B4D8               	btfsc	status,2,c
  7243  000F5C  D73A               	goto	l4412
  7244  000F5E  0A03               	xorlw	3	; case 2
  7245  000F60  B4D8               	btfsc	status,2,c
  7246  000F62  D76B               	goto	l4440
  7247  000F64  0A01               	xorlw	1	; case 3
  7248  000F66  B4D8               	btfsc	status,2,c
  7249  000F68  D791               	goto	l4466
  7250  000F6A  0A07               	xorlw	7	; case 4
  7251  000F6C  B4D8               	btfsc	status,2,c
  7252  000F6E  D7C1               	goto	l4498
  7253  000F70  0A01               	xorlw	1	; case 5
  7254  000F72  B4D8               	btfsc	status,2,c
  7255  000F74  D7C3               	goto	l4504
  7256  000F76  0A03               	xorlw	3	; case 6
  7257  000F78  A4D8               	btfss	status,2,c
  7258  000F7A  0012               	return	
  7259  000F7C  D7D8               	goto	l4522
  7260  000F7E                     __end_of_SMotor:
  7261                           	callstack 0
  7262                           
  7263 ;; *************** function _MNovaLletra *****************
  7264 ;; Defined at:
  7265 ;;		line 33 in file "Menu.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  lletra          1    wreg     unsigned char 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  lletra          1    5[COMRAM] unsigned char 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  1    wreg      void 
  7272 ;; Registers used:
  7273 ;;		wreg
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1
  7279 ;;      Params:         0       0       0
  7280 ;;      Locals:         1       0       0
  7281 ;;      Temps:          0       0       0
  7282 ;;      Totals:         1       0       0
  7283 ;;Total ram usage:        1 bytes
  7284 ;; Hardware stack levels used: 1
  7285 ;; Hardware stack levels required when called: 2
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_SMotor
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text60
  7294  001F0E                     __ptext60:
  7295                           	callstack 0
  7296  001F0E                     _MNovaLletra:
  7297                           	callstack 27
  7298                           
  7299                           ;incstack = 0
  7300                           ;MNovaLletra@lletra stored from wreg
  7301  001F0E  6E67               	movwf	MNovaLletra@lletra^0,c
  7302                           
  7303                           ;Menu.c: 34:     novaLletra = lletra;
  7304  001F10  C067  F052         	movff	MNovaLletra@lletra,_novaLletra
  7305  001F14  0012               	return		;funcret
  7306  001F16                     __end_of_MNovaLletra:
  7307                           	callstack 0
  7308                           
  7309 ;; *************** function _Minit *****************
  7310 ;; Defined at:
  7311 ;;		line 26 in file "Menu.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      void 
  7318 ;; Registers used:
  7319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMRAM   BANK0   BANK1
  7325 ;;      Params:         0       0       0
  7326 ;;      Locals:         0       0       0
  7327 ;;      Temps:          0       0       0
  7328 ;;      Totals:         0       0       0
  7329 ;;Total ram usage:        0 bytes
  7330 ;; Hardware stack levels used: 1
  7331 ;; Hardware stack levels required when called: 3
  7332 ;; This function calls:
  7333 ;;		_TiGetTimer
  7334 ;; This function is called by:
  7335 ;;		_main
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text61
  7340  001F16                     __ptext61:
  7341                           	callstack 0
  7342  001F16                     _Minit:
  7343                           	callstack 27
  7344                           
  7345                           ;Menu.c: 27:     timerMenu = TiGetTimer();
  7346                           
  7347                           ;incstack = 0
  7348  001F16  EC76  F00D         	call	_TiGetTimer	;wreg free
  7349  001F1A  6E29               	movwf	_timerMenu^0,c
  7350  001F1C  0012               	return		;funcret
  7351  001F1E                     __end_of_Minit:
  7352                           	callstack 0
  7353                           
  7354 ;; *************** function _LcLCD *****************
  7355 ;; Defined at:
  7356 ;;		line 246 in file "LcTLCD.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;		None
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;		None
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      void 
  7363 ;; Registers used:
  7364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/1
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1
  7370 ;;      Params:         0       0       0
  7371 ;;      Locals:         0       0       0
  7372 ;;      Temps:          0       0       0
  7373 ;;      Totals:         0       0       0
  7374 ;;Total ram usage:        0 bytes
  7375 ;; Hardware stack levels used: 1
  7376 ;; Hardware stack levels required when called: 6
  7377 ;; This function calls:
  7378 ;;		_LcPutChar
  7379 ;; This function is called by:
  7380 ;;		_main
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text62
  7385  001922                     __ptext62:
  7386                           	callstack 0
  7387  001922                     _LcLCD:
  7388                           	callstack 24
  7389                           
  7390                           ;LcTLCD.c: 247:     if(nou_s == 1){
  7391                           
  7392                           ;incstack = 0
  7393  001922  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7394  001924  0012               	return	
  7395                           
  7396                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  7397  001926  C005  FFF6         	movff	_s_ptr,tblptrl
  7398  00192A  C006  FFF7         	movff	_s_ptr+1,tblptrh
  7399  00192E  6AF8               	clrf	tblptru,c
  7400  001930  0E01               	movlw	(high __ramtop+-1)
  7401  001932  64F7               	cpfsgt	tblptrh,c
  7402  001934  D003               	bra	u3337
  7403  001936  0008               	tblrd		*
  7404  001938  50F5               	movf	tablat,w,c
  7405  00193A  D005               	bra	u3330
  7406  00193C                     u3337:
  7407  00193C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7408  001940  CFF7 FFE2          	movff	tblptrh,fsr1h
  7409  001944  50E7               	movf	indf1,w,c
  7410  001946                     u3330:
  7411  001946  ECED  F00C         	call	_LcPutChar
  7412                           
  7413                           ;LcTLCD.c: 249:         s_ptr++;
  7414  00194A  4A05               	infsnz	_s_ptr^0,f,c
  7415  00194C  2A06               	incf	(_s_ptr+1)^0,f,c
  7416                           
  7417                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  7418  00194E  C005  FFF6         	movff	_s_ptr,tblptrl
  7419  001952  C006  FFF7         	movff	_s_ptr+1,tblptrh
  7420  001956  6AF8               	clrf	tblptru,c
  7421  001958  0E01               	movlw	(high __ramtop+-1)
  7422  00195A  64F7               	cpfsgt	tblptrh,c
  7423  00195C  D003               	bra	u3347
  7424  00195E  0008               	tblrd		*
  7425  001960  50F5               	movf	tablat,w,c
  7426  001962  D005               	bra	u3340
  7427  001964                     u3347:
  7428  001964  CFF6 FFE1          	movff	tblptrl,fsr1l
  7429  001968  CFF7 FFE2          	movff	tblptrh,fsr1h
  7430  00196C  50E7               	movf	indf1,w,c
  7431  00196E                     u3340:
  7432  00196E  0900               	iorlw	0
  7433  001970  A4D8               	btfss	status,2,c
  7434  001972  0012               	return	
  7435                           
  7436                           ;LcTLCD.c: 251:             nou_s = 0;
  7437  001974  9079               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7438                           
  7439                           ;LcTLCD.c: 252:             s_ptr=0;
  7440  001976  0E00               	movlw	0
  7441  001978  6E05               	movwf	_s_ptr^0,c
  7442  00197A  0E00               	movlw	0
  7443  00197C  6E06               	movwf	(_s_ptr+1)^0,c
  7444  00197E  0012               	return		;funcret
  7445  001980                     __end_of_LcLCD:
  7446                           	callstack 0
  7447                           
  7448 ;; *************** function _LcInit *****************
  7449 ;; Defined at:
  7450 ;;		line 41 in file "LcTLCD.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;  rows            1    wreg     unsigned char 
  7453 ;;  columns         1   16[COMRAM] unsigned char 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;  rows            1   17[COMRAM] unsigned char 
  7456 ;;  i               2   18[COMRAM] int 
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  1    wreg      void 
  7459 ;; Registers used:
  7460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMRAM   BANK0   BANK1
  7466 ;;      Params:         1       0       0
  7467 ;;      Locals:         3       0       0
  7468 ;;      Temps:          0       0       0
  7469 ;;      Totals:         4       0       0
  7470 ;;Total ram usage:        4 bytes
  7471 ;; Hardware stack levels used: 1
  7472 ;; Hardware stack levels required when called: 4
  7473 ;; This function calls:
  7474 ;;		_CantaIR
  7475 ;;		_EscriuPrimeraOrdre
  7476 ;;		_Espera
  7477 ;;		_TiGetTimer
  7478 ;;		_WaitForBusy
  7479 ;; This function is called by:
  7480 ;;		_main
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text63
  7485  001346                     __ptext63:
  7486                           	callstack 0
  7487  001346                     _LcInit:
  7488                           	callstack 26
  7489                           
  7490                           ;incstack = 0
  7491                           ;LcInit@rows stored from wreg
  7492  001346  6E73               	movwf	LcInit@rows^0,c
  7493                           
  7494                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  7495  001348  EC76  F00D         	call	_TiGetTimer	;wreg free
  7496  00134C  6E33               	movwf	_Timer^0,c
  7497                           
  7498                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  7499  00134E  C073  F037         	movff	LcInit@rows,_Rows
  7500  001352  C072  F036         	movff	LcInit@columns,_Columns
  7501                           
  7502                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  7503  001356  0E00               	movlw	0
  7504  001358  6E34               	movwf	_ColumnAct^0,c
  7505  00135A  C034  F035         	movff	_ColumnAct,_RowAct
  7506                           
  7507                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  7508  00135E  9894               	bcf	148,4,c	;volatile
  7509  001360  9E95               	bcf	149,7,c	;volatile
  7510  001362  9A94               	bcf	148,5,c	;volatile
  7511                           
  7512                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  7513  001364  0E00               	movlw	0
  7514  001366  6E75               	movwf	(LcInit@i+1)^0,c
  7515  001368  0E00               	movlw	0
  7516  00136A  6E74               	movwf	LcInit@i^0,c
  7517  00136C                     l4292:
  7518                           
  7519                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  7520  00136C  0E00               	movlw	0
  7521  00136E  6E6F               	movwf	(Espera@ms+1)^0,c
  7522  001370  0E64               	movlw	100
  7523  001372  6E6E               	movwf	Espera@ms^0,c
  7524  001374  5033               	movf	_Timer^0,w,c
  7525  001376  ECAD  F00E         	call	_Espera
  7526                           
  7527                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  7528  00137A  0E03               	movlw	3
  7529  00137C  EC74  F00B         	call	_EscriuPrimeraOrdre
  7530                           
  7531                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  7532  001380  0E00               	movlw	0
  7533  001382  6E6F               	movwf	(Espera@ms+1)^0,c
  7534  001384  0E05               	movlw	5
  7535  001386  6E6E               	movwf	Espera@ms^0,c
  7536  001388  5033               	movf	_Timer^0,w,c
  7537  00138A  ECAD  F00E         	call	_Espera
  7538                           
  7539                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  7540  00138E  0E03               	movlw	3
  7541  001390  EC74  F00B         	call	_EscriuPrimeraOrdre
  7542                           
  7543                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  7544  001394  0E00               	movlw	0
  7545  001396  6E6F               	movwf	(Espera@ms+1)^0,c
  7546  001398  0E01               	movlw	1
  7547  00139A  6E6E               	movwf	Espera@ms^0,c
  7548  00139C  5033               	movf	_Timer^0,w,c
  7549  00139E  ECAD  F00E         	call	_Espera
  7550                           
  7551                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  7552  0013A2  0E03               	movlw	3
  7553  0013A4  EC74  F00B         	call	_EscriuPrimeraOrdre
  7554                           
  7555                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  7556  0013A8  0E00               	movlw	0
  7557  0013AA  6E6F               	movwf	(Espera@ms+1)^0,c
  7558  0013AC  0E01               	movlw	1
  7559  0013AE  6E6E               	movwf	Espera@ms^0,c
  7560  0013B0  5033               	movf	_Timer^0,w,c
  7561  0013B2  ECAD  F00E         	call	_Espera
  7562                           
  7563                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  7564  0013B6  0E02               	movlw	2
  7565  0013B8  EC74  F00B         	call	_EscriuPrimeraOrdre
  7566                           
  7567                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  7568  0013BC  0E00               	movlw	0
  7569  0013BE  6E6F               	movwf	(Espera@ms+1)^0,c
  7570  0013C0  0E04               	movlw	4
  7571  0013C2  6E6E               	movwf	Espera@ms^0,c
  7572  0013C4  5033               	movf	_Timer^0,w,c
  7573  0013C6  ECAD  F00E         	call	_Espera
  7574                           
  7575                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  7576  0013CA  0E28               	movlw	40
  7577  0013CC  EC19  F00E         	call	_CantaIR
  7578                           
  7579                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  7580  0013D0  EC39  F00D         	call	_WaitForBusy	;wreg free
  7581  0013D4  0E08               	movlw	8
  7582  0013D6  EC19  F00E         	call	_CantaIR
  7583                           
  7584                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  7585  0013DA  EC39  F00D         	call	_WaitForBusy	;wreg free
  7586  0013DE  0E01               	movlw	1
  7587  0013E0  EC19  F00E         	call	_CantaIR
  7588                           
  7589                           ;LcTLCD.c: 71:   Espera(Timer,3);
  7590  0013E4  0E00               	movlw	0
  7591  0013E6  6E6F               	movwf	(Espera@ms+1)^0,c
  7592  0013E8  0E03               	movlw	3
  7593  0013EA  6E6E               	movwf	Espera@ms^0,c
  7594  0013EC  5033               	movf	_Timer^0,w,c
  7595  0013EE  ECAD  F00E         	call	_Espera
  7596                           
  7597                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  7598  0013F2  EC39  F00D         	call	_WaitForBusy	;wreg free
  7599  0013F6  0E06               	movlw	6
  7600  0013F8  EC19  F00E         	call	_CantaIR
  7601                           
  7602                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  7603  0013FC  EC39  F00D         	call	_WaitForBusy	;wreg free
  7604  001400  0E0F               	movlw	15
  7605  001402  EC19  F00E         	call	_CantaIR
  7606                           
  7607                           ;LcTLCD.c: 74:  }
  7608  001406  4A74               	infsnz	LcInit@i^0,f,c
  7609  001408  2A75               	incf	(LcInit@i+1)^0,f,c
  7610  00140A  BE75               	btfsc	(LcInit@i+1)^0,7,c
  7611  00140C  D7AF               	goto	l4292
  7612  00140E  5075               	movf	(LcInit@i+1)^0,w,c
  7613  001410  E104               	bnz	u3310
  7614  001412  0E02               	movlw	2
  7615  001414  5C74               	subwf	LcInit@i^0,w,c
  7616  001416  A0D8               	btfss	status,0,c
  7617  001418  D7A9               	goto	l4292
  7618  00141A                     u3310:
  7619                           
  7620                           ;LcTLCD.c: 80:     WaitForBusy();
  7621  00141A  EC39  F00D         	call	_WaitForBusy	;wreg free
  7622                           
  7623                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  7624  00141E  0E0C               	movlw	12
  7625  001420  EC19  F00E         	call	_CantaIR
  7626  001424  0012               	return		;funcret
  7627  001426                     __end_of_LcInit:
  7628                           	callstack 0
  7629                           
  7630 ;; *************** function _EscriuPrimeraOrdre *****************
  7631 ;; Defined at:
  7632 ;;		line 230 in file "LcTLCD.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  ordre           1    wreg     unsigned char 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  ordre           1    6[COMRAM] unsigned char 
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      void 
  7639 ;; Registers used:
  7640 ;;		wreg, status,2, status,0
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMRAM   BANK0   BANK1
  7646 ;;      Params:         0       0       0
  7647 ;;      Locals:         1       0       0
  7648 ;;      Temps:          1       0       0
  7649 ;;      Totals:         2       0       0
  7650 ;;Total ram usage:        2 bytes
  7651 ;; Hardware stack levels used: 1
  7652 ;; Hardware stack levels required when called: 2
  7653 ;; This function calls:
  7654 ;;		Nothing
  7655 ;; This function is called by:
  7656 ;;		_LcInit
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text64
  7661  0016E8                     __ptext64:
  7662                           	callstack 0
  7663  0016E8                     _EscriuPrimeraOrdre:
  7664                           	callstack 27
  7665                           
  7666                           ;incstack = 0
  7667                           ;EscriuPrimeraOrdre@ordre stored from wreg
  7668  0016E8  6E68               	movwf	EscriuPrimeraOrdre@ordre^0,c
  7669                           
  7670                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  7671  0016EA  9694               	bcf	148,3,c	;volatile
  7672  0016EC  9494               	bcf	148,2,c	;volatile
  7673  0016EE  9294               	bcf	148,1,c	;volatile
  7674  0016F0  9094               	bcf	148,0,c	;volatile
  7675  0016F2  9A8B               	bcf	139,5,c	;volatile
  7676  0016F4  9E8C               	bcf	140,7,c	;volatile
  7677                           
  7678                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  7679  0016F6  888B               	bsf	139,4,c	;volatile
  7680  0016F8  888B               	bsf	139,4,c	;volatile
  7681                           
  7682                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  7683  0016FA  A668               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  7684  0016FC  D003               	goto	u230
  7685  0016FE  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  7686  001700  2A67               	incf	??_EscriuPrimeraOrdre^0,f,c
  7687  001702  D001               	goto	u248
  7688  001704                     u230:
  7689  001704  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  7690  001706                     u248:
  7691  001706  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7692  001708  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7693  00170A  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7694  00170C  508B               	movf	139,w,c	;volatile
  7695  00170E  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7696  001710  0BF7               	andlw	-9
  7697  001712  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7698  001714  6E8B               	movwf	139,c	;volatile
  7699                           
  7700                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  7701  001716  A468               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  7702  001718  D003               	goto	u250
  7703  00171A  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  7704  00171C  2A67               	incf	??_EscriuPrimeraOrdre^0,f,c
  7705  00171E  D001               	goto	u268
  7706  001720                     u250:
  7707  001720  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  7708  001722                     u268:
  7709  001722  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7710  001724  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7711  001726  508B               	movf	139,w,c	;volatile
  7712  001728  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7713  00172A  0BFB               	andlw	-5
  7714  00172C  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7715  00172E  6E8B               	movwf	139,c	;volatile
  7716                           
  7717                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  7718  001730  A268               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  7719  001732  D003               	goto	u270
  7720  001734  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  7721  001736  2A67               	incf	??_EscriuPrimeraOrdre^0,f,c
  7722  001738  D001               	goto	u288
  7723  00173A                     u270:
  7724  00173A  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  7725  00173C                     u288:
  7726  00173C  4667               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7727  00173E  508B               	movf	139,w,c	;volatile
  7728  001740  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7729  001742  0BFD               	andlw	-3
  7730  001744  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7731  001746  6E8B               	movwf	139,c	;volatile
  7732                           
  7733                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  7734  001748  A068               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  7735  00174A  D003               	goto	u290
  7736  00174C  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  7737  00174E  2A67               	incf	??_EscriuPrimeraOrdre^0,f,c
  7738  001750  D001               	goto	u308
  7739  001752                     u290:
  7740  001752  6A67               	clrf	??_EscriuPrimeraOrdre^0,c
  7741  001754                     u308:
  7742  001754  508B               	movf	139,w,c	;volatile
  7743  001756  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7744  001758  0BFE               	andlw	-2
  7745  00175A  1867               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7746  00175C  6E8B               	movwf	139,c	;volatile
  7747                           
  7748                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  7749  00175E  988B               	bcf	139,4,c	;volatile
  7750  001760  0012               	return		;funcret
  7751  001762                     __end_of_EscriuPrimeraOrdre:
  7752                           	callstack 0
  7753                           
  7754 ;; *************** function _JoystickMotor *****************
  7755 ;; Defined at:
  7756 ;;		line 18 in file "Joystick.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;		None
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;		None
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  1    wreg      void 
  7763 ;; Registers used:
  7764 ;;		wreg, status,2, status,0, cstack
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/1
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMRAM   BANK0   BANK1
  7770 ;;      Params:         0       0       0
  7771 ;;      Locals:         0       0       0
  7772 ;;      Temps:          2       0       0
  7773 ;;      Totals:         2       0       0
  7774 ;;Total ram usage:        2 bytes
  7775 ;; Hardware stack levels used: 1
  7776 ;; Hardware stack levels required when called: 3
  7777 ;; This function calls:
  7778 ;;		_MNouJoystick
  7779 ;; This function is called by:
  7780 ;;		_main
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           	psect	text65
  7785  00125C                     __ptext65:
  7786                           	callstack 0
  7787  00125C                     _JoystickMotor:
  7788                           	callstack 27
  7789                           
  7790                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  7791                           
  7792                           ;incstack = 0
  7793  00125C  D05A               	goto	l2928
  7794  00125E                     l902:
  7795                           
  7796                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7797  00125E  B2C2               	btfsc	194,1,c	;volatile
  7798  001260  D00B               	goto	l903
  7799  001262  0EC8               	movlw	200
  7800  001264  60C4               	cpfslt	196,c	;volatile
  7801  001266  D008               	goto	l903
  7802  001268  0E32               	movlw	50
  7803  00126A  64C4               	cpfsgt	196,c	;volatile
  7804  00126C  D005               	goto	l903
  7805                           
  7806                           ;Joystick.c: 23:     ADCON0 = 0x07;
  7807  00126E  0E07               	movlw	7
  7808  001270  6EC2               	movwf	194,c	;volatile
  7809                           
  7810                           ;Joystick.c: 24:                 cap1 = 1;
  7811  001272  8E77               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7812  001274                     l2858:
  7813                           
  7814                           ;Joystick.c: 25:     state++;
  7815  001274  2A0F               	incf	JoystickMotor@state^0,f,c
  7816                           
  7817                           ;Joystick.c: 26:    }
  7818  001276  D05B               	goto	l910
  7819  001278                     l903:
  7820  001278  B2C2               	btfsc	194,1,c	;volatile
  7821  00127A  D010               	goto	l905
  7822  00127C  0EC7               	movlw	199
  7823  00127E  64C4               	cpfsgt	196,c	;volatile
  7824  001280  D00D               	goto	l905
  7825                           
  7826                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  7827  001282  0E02               	movlw	2
  7828  001284  1810               	xorwf	_ultimaTeclaAD^0,w,c
  7829  001286  B4D8               	btfsc	status,2,c
  7830  001288  D003               	goto	l2866
  7831  00128A  0E02               	movlw	2
  7832  00128C  EC8F  F00F         	call	_MNouJoystick
  7833  001290                     l2866:
  7834                           
  7835                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  7836  001290  0E02               	movlw	2
  7837  001292  6E10               	movwf	_ultimaTeclaAD^0,c
  7838                           
  7839                           ;Joystick.c: 30:     ADCON0 = 0x07;
  7840  001294  0E07               	movlw	7
  7841  001296  6EC2               	movwf	194,c	;volatile
  7842                           
  7843                           ;Joystick.c: 31:                 cap1 = 0;
  7844  001298  9E77               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7845  00129A  D7EC               	goto	l2858
  7846  00129C                     l905:
  7847  00129C  B2C2               	btfsc	194,1,c	;volatile
  7848  00129E  D047               	goto	l910
  7849  0012A0  0E33               	movlw	51
  7850  0012A2  60C4               	cpfslt	196,c	;volatile
  7851  0012A4  D044               	goto	l910
  7852                           
  7853                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  7854  0012A6  0E08               	movlw	8
  7855  0012A8  1810               	xorwf	_ultimaTeclaAD^0,w,c
  7856  0012AA  B4D8               	btfsc	status,2,c
  7857  0012AC  D003               	goto	l2880
  7858  0012AE  0E08               	movlw	8
  7859  0012B0  EC8F  F00F         	call	_MNouJoystick
  7860  0012B4                     l2880:
  7861                           
  7862                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  7863  0012B4  0E08               	movlw	8
  7864  0012B6  D7ED               	goto	L8
  7865  0012B8                     l911:
  7866                           
  7867                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7868  0012B8  B2C2               	btfsc	194,1,c	;volatile
  7869  0012BA  D00B               	goto	l912
  7870  0012BC  0EC8               	movlw	200
  7871  0012BE  60C4               	cpfslt	196,c	;volatile
  7872  0012C0  D008               	goto	l912
  7873  0012C2  0E32               	movlw	50
  7874  0012C4  64C4               	cpfsgt	196,c	;volatile
  7875  0012C6  D005               	goto	l912
  7876                           
  7877                           ;Joystick.c: 44:     ADCON0 = 0x03;
  7878  0012C8  0E03               	movlw	3
  7879  0012CA  6EC2               	movwf	194,c	;volatile
  7880                           
  7881                           ;Joystick.c: 45:                 cap2 = 1;
  7882  0012CC  8C77               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7883  0012CE                     l2896:
  7884                           
  7885                           ;Joystick.c: 46:     state--;
  7886  0012CE  060F               	decf	JoystickMotor@state^0,f,c
  7887                           
  7888                           ;Joystick.c: 47:    }
  7889  0012D0  D02E               	goto	l910
  7890  0012D2                     l912:
  7891  0012D2  B2C2               	btfsc	194,1,c	;volatile
  7892  0012D4  D010               	goto	l914
  7893  0012D6  0EC7               	movlw	199
  7894  0012D8  64C4               	cpfsgt	196,c	;volatile
  7895  0012DA  D00D               	goto	l914
  7896                           
  7897                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  7898  0012DC  0E06               	movlw	6
  7899  0012DE  1810               	xorwf	_ultimaTeclaAD^0,w,c
  7900  0012E0  B4D8               	btfsc	status,2,c
  7901  0012E2  D003               	goto	l2904
  7902  0012E4  0E06               	movlw	6
  7903  0012E6  EC8F  F00F         	call	_MNouJoystick
  7904  0012EA                     l2904:
  7905                           
  7906                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  7907  0012EA  0E06               	movlw	6
  7908  0012EC  6E10               	movwf	_ultimaTeclaAD^0,c
  7909                           
  7910                           ;Joystick.c: 51:     ADCON0 = 0x03;
  7911  0012EE  0E03               	movlw	3
  7912  0012F0  6EC2               	movwf	194,c	;volatile
  7913                           
  7914                           ;Joystick.c: 52:                 cap2 = 0;
  7915  0012F2  9C77               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7916  0012F4  D7EC               	goto	l2896
  7917  0012F6                     l914:
  7918  0012F6  B2C2               	btfsc	194,1,c	;volatile
  7919  0012F8  D01A               	goto	l910
  7920  0012FA  0E33               	movlw	51
  7921  0012FC  60C4               	cpfslt	196,c	;volatile
  7922  0012FE  D017               	goto	l910
  7923                           
  7924                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  7925  001300  0E04               	movlw	4
  7926  001302  1810               	xorwf	_ultimaTeclaAD^0,w,c
  7927  001304  B4D8               	btfsc	status,2,c
  7928  001306  D003               	goto	l2918
  7929  001308  0E04               	movlw	4
  7930  00130A  EC8F  F00F         	call	_MNouJoystick
  7931  00130E                     l2918:
  7932                           
  7933                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  7934  00130E  0E04               	movlw	4
  7935  001310  D7ED               	goto	L9
  7936  001312                     l2928:
  7937  001312  500F               	movf	JoystickMotor@state^0,w,c
  7938  001314  6E68               	movwf	??_JoystickMotor^0,c
  7939  001316  6A69               	clrf	(??_JoystickMotor+1)^0,c
  7940                           
  7941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7942                           ; Switch size 1, requested type "simple"
  7943                           ; Number of cases is 1, Range of values is 0 to 0
  7944                           ; switch strategies available:
  7945                           ; Name         Instructions Cycles
  7946                           ; simple_byte            4     3 (average)
  7947                           ;	Chosen strategy is simple_byte
  7948  001318  5069               	movf	(??_JoystickMotor+1)^0,w,c
  7949  00131A  0A00               	xorlw	0	; case 0
  7950  00131C  A4D8               	btfss	status,2,c
  7951  00131E  D007               	goto	l910
  7952                           
  7953                           ; Switch size 1, requested type "simple"
  7954                           ; Number of cases is 2, Range of values is 0 to 1
  7955                           ; switch strategies available:
  7956                           ; Name         Instructions Cycles
  7957                           ; simple_byte            7     4 (average)
  7958                           ;	Chosen strategy is simple_byte
  7959  001320  5068               	movf	??_JoystickMotor^0,w,c
  7960  001322  0A00               	xorlw	0	; case 0
  7961  001324  B4D8               	btfsc	status,2,c
  7962  001326  D79B               	goto	l902
  7963  001328  0A01               	xorlw	1	; case 1
  7964  00132A  B4D8               	btfsc	status,2,c
  7965  00132C  D7C5               	goto	l911
  7966  00132E                     l910:
  7967                           
  7968                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  7969  00132E  AE77               	btfss	(_cap1/(0+8))^0,_cap1& (0+7),c
  7970  001330  0012               	return	
  7971  001332  AC77               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  7972  001334  0012               	return	
  7973  001336  5010               	movf	_ultimaTeclaAD^0,w,c
  7974  001338  B4D8               	btfsc	status,2,c
  7975  00133A  0012               	return	
  7976                           
  7977                           ;Joystick.c: 66:         MNouJoystick(-1);
  7978  00133C  0EFF               	movlw	255
  7979  00133E  EC8F  F00F         	call	_MNouJoystick
  7980                           
  7981                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  7982  001342  6810               	setf	_ultimaTeclaAD^0,c
  7983  001344  0012               	return		;funcret
  7984  001346                     __end_of_JoystickMotor:
  7985                           	callstack 0
  7986                           
  7987 ;; *************** function _MNouJoystick *****************
  7988 ;; Defined at:
  7989 ;;		line 36 in file "Menu.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;  posicio         1    wreg     char 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;  posicio         1    5[COMRAM] char 
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  1    wreg      void 
  7996 ;; Registers used:
  7997 ;;		wreg
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/1
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1
  8003 ;;      Params:         0       0       0
  8004 ;;      Locals:         1       0       0
  8005 ;;      Temps:          0       0       0
  8006 ;;      Totals:         1       0       0
  8007 ;;Total ram usage:        1 bytes
  8008 ;; Hardware stack levels used: 1
  8009 ;; Hardware stack levels required when called: 2
  8010 ;; This function calls:
  8011 ;;		Nothing
  8012 ;; This function is called by:
  8013 ;;		_JoystickMotor
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           	psect	text66
  8018  001F1E                     __ptext66:
  8019                           	callstack 0
  8020  001F1E                     _MNouJoystick:
  8021                           	callstack 27
  8022                           
  8023                           ;incstack = 0
  8024                           ;MNouJoystick@posicio stored from wreg
  8025  001F1E  6E67               	movwf	MNouJoystick@posicio^0,c
  8026                           
  8027                           ;Menu.c: 37:     novaDireccio = posicio;
  8028  001F20  C067  F051         	movff	MNouJoystick@posicio,_novaDireccio
  8029  001F24  0012               	return		;funcret
  8030  001F26                     __end_of_MNouJoystick:
  8031                           	callstack 0
  8032                           
  8033 ;; *************** function _JoystickInit *****************
  8034 ;; Defined at:
  8035 ;;		line 12 in file "Joystick.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;		None
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;		None
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      void 
  8042 ;; Registers used:
  8043 ;;		wreg, status,2
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1
  8049 ;;      Params:         0       0       0
  8050 ;;      Locals:         0       0       0
  8051 ;;      Temps:          0       0       0
  8052 ;;      Totals:         0       0       0
  8053 ;;Total ram usage:        0 bytes
  8054 ;; Hardware stack levels used: 1
  8055 ;; Hardware stack levels required when called: 2
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_main
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text67
  8064  001DFE                     __ptext67:
  8065                           	callstack 0
  8066  001DFE                     _JoystickInit:
  8067                           	callstack 28
  8068                           
  8069                           ;Joystick.c: 13:     ADCON0 = 0x01;
  8070                           
  8071                           ;incstack = 0
  8072  001DFE  0E01               	movlw	1
  8073  001E00  6EC2               	movwf	194,c	;volatile
  8074                           
  8075                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  8076  001E02  0E0D               	movlw	13
  8077  001E04  6EC1               	movwf	193,c	;volatile
  8078                           
  8079                           ;Joystick.c: 15:     ADCON2 = 0x09;
  8080  001E06  0E09               	movlw	9
  8081  001E08  6EC0               	movwf	192,c	;volatile
  8082                           
  8083                           ;Joystick.c: 16:     ADRESH = 127;
  8084  001E0A  0E7F               	movlw	127
  8085  001E0C  6EC4               	movwf	196,c	;volatile
  8086  001E0E  0012               	return		;funcret
  8087  001E10                     __end_of_JoystickInit:
  8088                           	callstack 0
  8089                           
  8090 ;; *************** function _GLCDMotor *****************
  8091 ;; Defined at:
  8092 ;;		line 36 in file "GestioLCD.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;		None
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  1    wreg      void 
  8099 ;; Registers used:
  8100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/1
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1
  8106 ;;      Params:         0       0       0
  8107 ;;      Locals:         0       0       0
  8108 ;;      Temps:          0       2       0
  8109 ;;      Totals:         0       2       0
  8110 ;;Total ram usage:        2 bytes
  8111 ;; Hardware stack levels used: 1
  8112 ;; Hardware stack levels required when called: 6
  8113 ;; This function calls:
  8114 ;;		_LcClear
  8115 ;;		_LcGotoXY
  8116 ;;		_LcLliure
  8117 ;;		_LcNewString
  8118 ;;		_LcPutChar
  8119 ;;		_TiGetTics
  8120 ;;		_TiResetTics
  8121 ;; This function is called by:
  8122 ;;		_main
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           	psect	text68
  8127  000788                     __ptext68:
  8128                           	callstack 0
  8129  000788                     _GLCDMotor:
  8130                           	callstack 24
  8131                           
  8132                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  8133                           
  8134                           ;incstack = 0
  8135  000788  D1BD               	goto	l6530
  8136  00078A                     l6344:
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  8140  00078A  0E11               	movlw	17
  8141  00078C  6012               	cpfslt	GLCDMotor@length1^0,c
  8142  00078E  D018               	goto	l6354
  8143                           
  8144                           ; BSR set to: 0
  8145  000790  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8146  000792  D016               	goto	l6354
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  8150  000794  0E00               	movlw	0
  8151  000796  6E6F               	movwf	LcGotoXY@Row^0,c
  8152  000798  0E00               	movlw	0
  8153  00079A  EC59  F00D         	call	_LcGotoXY
  8154                           
  8155                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  8156  00079E  5019               	movf	_menuDaltGLCD^0,w,c
  8157  0007A0  0D1D               	mullw	29
  8158  0007A2  50F3               	movf	243,w,c
  8159  0007A4  0F01               	addlw	low _menuList
  8160  0007A6  0100               	movlb	0	; () banked
  8161  0007A8  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8162  0007AA  C0C9  F06A         	movff	??_GLCDMotor,LcNewString@new_s
  8163  0007AE  506A               	movf	LcNewString@new_s^0,w,c
  8164  0007B0  A4D8               	btfss	status,2,c
  8165  0007B2  0E02               	movlw	high __smallconst
  8166  0007B4  6E6B               	movwf	(LcNewString@new_s+1)^0,c
  8167  0007B6  EC43  F00F         	call	_LcNewString	;wreg free
  8168                           
  8169                           ;GestioLCD.c: 53:     state = 5;
  8170  0007BA  0E05               	movlw	5
  8171  0007BC  6E18               	movwf	GLCDMotor@state^0,c
  8172                           
  8173                           ;GestioLCD.c: 54:    }
  8174  0007BE  0012               	return	
  8175  0007C0                     l6354:
  8176                           
  8177                           ; BSR set to: 0
  8178  0007C0  0E10               	movlw	16
  8179  0007C2  6412               	cpfsgt	GLCDMotor@length1^0,c
  8180  0007C4  0012               	return	
  8181                           
  8182                           ; BSR set to: 0
  8183  0007C6  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8184  0007C8  0012               	return	
  8185  0007CA                     u6320:
  8186                           
  8187                           ;GestioLCD.c: 56:     state++;
  8188  0007CA  2A18               	incf	GLCDMotor@state^0,f,c
  8189  0007CC  0012               	return	
  8190  0007CE                     l6360:
  8191                           
  8192                           ; BSR set to: 0
  8193                           ;GestioLCD.c: 60:    if (j>=16) {
  8194  0007CE  0E0F               	movlw	15
  8195  0007D0  6417               	cpfsgt	GLCDMotor@j^0,c
  8196  0007D2  D02B               	goto	l6374
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;GestioLCD.c: 61:     min1++;
  8200  0007D4  2A16               	incf	GLCDMotor@min1^0,f,c
  8201                           
  8202                           ;GestioLCD.c: 62:     max1++;
  8203  0007D6  2A4F               	incf	GLCDMotor@max1^0,f,c
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  8207  0007D8  5019               	movf	_menuDaltGLCD^0,w,c
  8208  0007DA  0D1D               	mullw	29
  8209  0007DC  50F3               	movf	243,w,c
  8210  0007DE  0F01               	addlw	low _menuList
  8211  0007E0  244F               	addwf	GLCDMotor@max1^0,w,c
  8212  0007E2  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8213  0007E4  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8214  0007E8                     	if	1	;There is more than 1 active tblptr byte
  8215  0007E8  0E02               	movlw	high __smallconst
  8216  0007EA  6EF7               	movwf	tblptrh,c
  8217  0007EC                     	endif
  8218  0007EC                     	if	0	;tblptru may be non-zero
  8219  0007EC                     	endif
  8220  0007EC                     	if	0	;tblptru may be non-zero
  8221  0007EC                     	endif
  8222  0007EC  0008               	tblrd		*
  8223  0007EE  50F5               	movf	tablat,w,c
  8224  0007F0  0900               	iorlw	0
  8225  0007F2  A4D8               	btfss	status,2,c
  8226  0007F4  D002               	goto	l6368
  8227                           
  8228                           ; BSR set to: 0
  8229  0007F6  0E00               	movlw	0
  8230  0007F8  6E4F               	movwf	GLCDMotor@max1^0,c
  8231  0007FA                     l6368:
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  8235  0007FA  5019               	movf	_menuDaltGLCD^0,w,c
  8236  0007FC  0D1D               	mullw	29
  8237  0007FE  50F3               	movf	243,w,c
  8238  000800  0F01               	addlw	low _menuList
  8239  000802  2416               	addwf	GLCDMotor@min1^0,w,c
  8240  000804  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8241  000806  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8242  00080A                     	if	1	;There is more than 1 active tblptr byte
  8243  00080A  0E02               	movlw	high __smallconst
  8244  00080C  6EF7               	movwf	tblptrh,c
  8245  00080E                     	endif
  8246  00080E                     	if	0	;tblptru may be non-zero
  8247  00080E                     	endif
  8248  00080E                     	if	0	;tblptru may be non-zero
  8249  00080E                     	endif
  8250  00080E  0008               	tblrd		*
  8251  000810  50F5               	movf	tablat,w,c
  8252  000812  0900               	iorlw	0
  8253  000814  A4D8               	btfss	status,2,c
  8254  000816  D002               	goto	l833
  8255                           
  8256                           ; BSR set to: 0
  8257  000818  0E00               	movlw	0
  8258  00081A  6E16               	movwf	GLCDMotor@min1^0,c
  8259  00081C                     l833:
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;GestioLCD.c: 65:     j=0;
  8263  00081C  0E00               	movlw	0
  8264  00081E  6E17               	movwf	GLCDMotor@j^0,c
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;GestioLCD.c: 66:     k1=min1;
  8268  000820  C016  F014         	movff	GLCDMotor@min1,GLCDMotor@k1
  8269                           
  8270                           ;GestioLCD.c: 67:     state = 6;
  8271  000824  0E06               	movlw	6
  8272  000826  6E18               	movwf	GLCDMotor@state^0,c
  8273                           
  8274                           ;GestioLCD.c: 68:    }
  8275  000828  0012               	return	
  8276  00082A                     l6374:
  8277                           
  8278                           ; BSR set to: 0
  8279  00082A  0E10               	movlw	16
  8280  00082C  6017               	cpfslt	GLCDMotor@j^0,c
  8281  00082E  0012               	return	
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  8285  000830  0E00               	movlw	0
  8286  000832  6E6F               	movwf	LcGotoXY@Row^0,c
  8287  000834  5017               	movf	GLCDMotor@j^0,w,c
  8288  000836  EC59  F00D         	call	_LcGotoXY
  8289                           
  8290                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  8291  00083A  5019               	movf	_menuDaltGLCD^0,w,c
  8292  00083C  0D1D               	mullw	29
  8293  00083E  50F3               	movf	243,w,c
  8294  000840  0F01               	addlw	low _menuList
  8295  000842  2414               	addwf	GLCDMotor@k1^0,w,c
  8296  000844  0100               	movlb	0	; () banked
  8297  000846  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8298  000848  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8299  00084C                     	if	1	;There is more than 1 active tblptr byte
  8300  00084C  0E02               	movlw	high __smallconst
  8301  00084E  6EF7               	movwf	tblptrh,c
  8302  000850                     	endif
  8303  000850                     	if	0	;tblptru may be non-zero
  8304  000850                     	endif
  8305  000850                     	if	0	;tblptru may be non-zero
  8306  000850                     	endif
  8307  000850  0008               	tblrd		*
  8308  000852  50F5               	movf	tablat,w,c
  8309  000854  ECED  F00C         	call	_LcPutChar
  8310                           
  8311                           ;GestioLCD.c: 72:     j++;
  8312  000858  2A17               	incf	GLCDMotor@j^0,f,c
  8313                           
  8314                           ;GestioLCD.c: 73:     k1++;
  8315  00085A  2A14               	incf	GLCDMotor@k1^0,f,c
  8316                           
  8317                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  8318  00085C  5019               	movf	_menuDaltGLCD^0,w,c
  8319  00085E  0D1D               	mullw	29
  8320  000860  50F3               	movf	243,w,c
  8321  000862  0F01               	addlw	low _menuList
  8322  000864  2414               	addwf	GLCDMotor@k1^0,w,c
  8323  000866  0100               	movlb	0	; () banked
  8324  000868  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8325  00086A  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8326  00086E                     	if	1	;There is more than 1 active tblptr byte
  8327  00086E  0E02               	movlw	high __smallconst
  8328  000870  6EF7               	movwf	tblptrh,c
  8329  000872                     	endif
  8330  000872                     	if	0	;tblptru may be non-zero
  8331  000872                     	endif
  8332  000872                     	if	0	;tblptru may be non-zero
  8333  000872                     	endif
  8334  000872  0008               	tblrd		*
  8335  000874  50F5               	movf	tablat,w,c
  8336  000876  0900               	iorlw	0
  8337  000878  A4D8               	btfss	status,2,c
  8338  00087A  0012               	return	
  8339                           
  8340                           ; BSR set to: 0
  8341  00087C  0E00               	movlw	0
  8342  00087E  6E14               	movwf	GLCDMotor@k1^0,c
  8343  000880  0012               	return	
  8344  000882                     l6388:
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  8348  000882  0E04               	movlw	4
  8349  000884  6019               	cpfslt	_menuDaltGLCD^0,c
  8350  000886  D012               	goto	u6420
  8351  000888  D7A0               	goto	u6320
  8352  00088A                     u6390:
  8353                           
  8354                           ;GestioLCD.c: 82:     state = 0;
  8355  00088A  0E00               	movlw	0
  8356  00088C  6E18               	movwf	GLCDMotor@state^0,c
  8357  00088E  0012               	return	
  8358  000890                     l6396:
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  8362  000890  EC49  F00F         	call	_LcLliure	;wreg free
  8363  000894  A0D8               	btfss	status,0,c
  8364  000896  D006               	goto	l6402
  8365  000898  0E04               	movlw	4
  8366  00089A  6019               	cpfslt	_menuDaltGLCD^0,c
  8367  00089C  D003               	goto	l6402
  8368                           
  8369                           ;GestioLCD.c: 87:     state = 7;
  8370  00089E  0E07               	movlw	7
  8371  0008A0  6E18               	movwf	GLCDMotor@state^0,c
  8372                           
  8373                           ;GestioLCD.c: 88:    }
  8374  0008A2  0012               	return	
  8375  0008A4                     l6402:
  8376  0008A4  EC49  F00F         	call	_LcLliure	;wreg free
  8377  0008A8  A0D8               	btfss	status,0,c
  8378  0008AA  0012               	return	
  8379  0008AC                     u6420:
  8380  0008AC  0E03               	movlw	3
  8381  0008AE  6419               	cpfsgt	_menuDaltGLCD^0,c
  8382  0008B0  0012               	return	
  8383  0008B2  D7EB               	goto	u6390
  8384  0008B4                     l845:
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  8388  0008B4  A078               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  8389  0008B6  0012               	return	
  8390                           
  8391                           ; BSR set to: 0
  8392  0008B8  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8393  0008BA  0012               	return	
  8394                           
  8395                           ; BSR set to: 0
  8396                           ;GestioLCD.c: 95:     length1 = 0;
  8397  0008BC  0E00               	movlw	0
  8398  0008BE  6E12               	movwf	GLCDMotor@length1^0,c
  8399                           
  8400                           ;GestioLCD.c: 96:     length2 = 0;
  8401  0008C0  0E00               	movlw	0
  8402  0008C2  6E11               	movwf	GLCDMotor@length2^0,c
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  8406  0008C4  0E00               	movlw	0
  8407  0008C6  6E6F               	movwf	LcGotoXY@Row^0,c
  8408  0008C8  0E00               	movlw	0
  8409  0008CA  EC59  F00D         	call	_LcGotoXY
  8410                           
  8411                           ;GestioLCD.c: 98:     min1 = 0;
  8412  0008CE  0E00               	movlw	0
  8413  0008D0  6E16               	movwf	GLCDMotor@min1^0,c
  8414                           
  8415                           ;GestioLCD.c: 99:     max1 = 15;
  8416  0008D2  0E0F               	movlw	15
  8417  0008D4  6E4F               	movwf	GLCDMotor@max1^0,c
  8418                           
  8419                           ;GestioLCD.c: 100:     min2 = 0;
  8420  0008D6  0E00               	movlw	0
  8421  0008D8  6E15               	movwf	GLCDMotor@min2^0,c
  8422                           
  8423                           ;GestioLCD.c: 101:     max2 = 15;
  8424  0008DA  0E0F               	movlw	15
  8425  0008DC  6E4E               	movwf	GLCDMotor@max2^0,c
  8426                           
  8427                           ;GestioLCD.c: 102:     j = 0;
  8428  0008DE  0E00               	movlw	0
  8429  0008E0  6E17               	movwf	GLCDMotor@j^0,c
  8430                           
  8431                           ;GestioLCD.c: 103:     k1 = 0;
  8432  0008E2  0E00               	movlw	0
  8433  0008E4  6E14               	movwf	GLCDMotor@k1^0,c
  8434                           
  8435                           ;GestioLCD.c: 104:     k2 = 0;
  8436  0008E6  0E00               	movlw	0
  8437  0008E8  6E13               	movwf	GLCDMotor@k2^0,c
  8438                           
  8439                           ;GestioLCD.c: 105:     newString = 0;
  8440  0008EA  9078               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  8441  0008EC  D76E               	goto	u6320
  8442  0008EE                     l6432:
  8443                           
  8444                           ; BSR set to: 0
  8445                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  8446  0008EE  5019               	movf	_menuDaltGLCD^0,w,c
  8447  0008F0  0D1D               	mullw	29
  8448  0008F2  50F3               	movf	243,w,c
  8449  0008F4  0F01               	addlw	low _menuList
  8450  0008F6  2412               	addwf	GLCDMotor@length1^0,w,c
  8451  0008F8  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8452  0008FA  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8453  0008FE                     	if	1	;There is more than 1 active tblptr byte
  8454  0008FE  0E02               	movlw	high __smallconst
  8455  000900  6EF7               	movwf	tblptrh,c
  8456  000902                     	endif
  8457  000902                     	if	0	;tblptru may be non-zero
  8458  000902                     	endif
  8459  000902                     	if	0	;tblptru may be non-zero
  8460  000902                     	endif
  8461  000902  0008               	tblrd		*
  8462  000904  50F5               	movf	tablat,w,c
  8463  000906  0900               	iorlw	0
  8464  000908  A4D8               	btfss	status,2,c
  8465  00090A  D004               	goto	l6438
  8466                           
  8467                           ; BSR set to: 0
  8468  00090C  0E03               	movlw	3
  8469  00090E  6419               	cpfsgt	_menuDaltGLCD^0,c
  8470  000910  D001               	goto	l6438
  8471  000912  D75B               	goto	u6320
  8472  000914                     l6438:
  8473                           
  8474                           ; BSR set to: 0
  8475  000914  5019               	movf	_menuDaltGLCD^0,w,c
  8476  000916  0D1D               	mullw	29
  8477  000918  50F3               	movf	243,w,c
  8478  00091A  0F01               	addlw	low _menuList
  8479  00091C  2412               	addwf	GLCDMotor@length1^0,w,c
  8480  00091E  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8481  000920  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8482  000924                     	if	1	;There is more than 1 active tblptr byte
  8483  000924  0E02               	movlw	high __smallconst
  8484  000926  6EF7               	movwf	tblptrh,c
  8485  000928                     	endif
  8486  000928                     	if	0	;tblptru may be non-zero
  8487  000928                     	endif
  8488  000928                     	if	0	;tblptru may be non-zero
  8489  000928                     	endif
  8490  000928  0008               	tblrd		*
  8491  00092A  50F5               	movf	tablat,w,c
  8492  00092C  0900               	iorlw	0
  8493  00092E  B4D8               	btfsc	status,2,c
  8494  000930  D002               	goto	l6442
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;GestioLCD.c: 114:     length1++;
  8498  000932  2A12               	incf	GLCDMotor@length1^0,f,c
  8499                           
  8500                           ;GestioLCD.c: 115:    }
  8501  000934  0012               	return	
  8502  000936                     l6442:
  8503                           
  8504                           ; BSR set to: 0
  8505  000936  0E04               	movlw	4
  8506  000938  6019               	cpfslt	_menuDaltGLCD^0,c
  8507  00093A  0012               	return	
  8508                           
  8509                           ; BSR set to: 0
  8510  00093C  5019               	movf	_menuDaltGLCD^0,w,c
  8511  00093E  0D1D               	mullw	29
  8512  000940  50F3               	movf	243,w,c
  8513  000942  0F01               	addlw	low _menuList
  8514  000944  2412               	addwf	GLCDMotor@length1^0,w,c
  8515  000946  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8516  000948  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8517  00094C                     	if	1	;There is more than 1 active tblptr byte
  8518  00094C  0E02               	movlw	high __smallconst
  8519  00094E  6EF7               	movwf	tblptrh,c
  8520  000950                     	endif
  8521  000950                     	if	0	;tblptru may be non-zero
  8522  000950                     	endif
  8523  000950                     	if	0	;tblptru may be non-zero
  8524  000950                     	endif
  8525  000950  0008               	tblrd		*
  8526  000952  50F5               	movf	tablat,w,c
  8527  000954  0900               	iorlw	0
  8528  000956  A4D8               	btfss	status,2,c
  8529  000958  0012               	return	
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;GestioLCD.c: 117:     state = 13;
  8533  00095A  0E0D               	movlw	13
  8534  00095C  6E18               	movwf	GLCDMotor@state^0,c
  8535  00095E  0012               	return	
  8536  000960                     l6448:
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  8540  000960  0E11               	movlw	17
  8541  000962  6011               	cpfslt	GLCDMotor@length2^0,c
  8542  000964  D01A               	goto	l6458
  8543                           
  8544                           ; BSR set to: 0
  8545  000966  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8546  000968  D018               	goto	l6458
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  8550  00096A  0E01               	movlw	1
  8551  00096C  6E6F               	movwf	LcGotoXY@Row^0,c
  8552  00096E  0E00               	movlw	0
  8553  000970  EC59  F00D         	call	_LcGotoXY
  8554                           
  8555                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  8556  000974  5019               	movf	_menuDaltGLCD^0,w,c
  8557  000976  0D1D               	mullw	29
  8558  000978  CFF3 F0C9          	movff	prodl,??_GLCDMotor
  8559  00097C  0E1D               	movlw	29
  8560  00097E  0100               	movlb	0	; () banked
  8561  000980  27C9               	addwf	??_GLCDMotor& (0+255),f,b
  8562  000982  51C9               	movf	??_GLCDMotor& (0+255),w,b
  8563  000984  0F01               	addlw	low _menuList
  8564  000986  6FCA               	movwf	(??_GLCDMotor+1)& (0+255),b
  8565  000988  C0CA  F06A         	movff	??_GLCDMotor+1,LcNewString@new_s
  8566  00098C  506A               	movf	LcNewString@new_s^0,w,c
  8567  00098E  A4D8               	btfss	status,2,c
  8568  000990  0E02               	movlw	high __smallconst
  8569  000992  6E6B               	movwf	(LcNewString@new_s+1)^0,c
  8570  000994  EC43  F00F         	call	_LcNewString	;wreg free
  8571  000998  D718               	goto	u6320
  8572  00099A                     l6458:
  8573                           
  8574                           ; BSR set to: 0
  8575  00099A  0E10               	movlw	16
  8576  00099C  6411               	cpfsgt	GLCDMotor@length2^0,c
  8577  00099E  0012               	return	
  8578                           
  8579                           ; BSR set to: 0
  8580  0009A0  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8581  0009A2  0012               	return	
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;GestioLCD.c: 127:     state = 9;
  8585  0009A4  0E09               	movlw	9
  8586  0009A6  6E18               	movwf	GLCDMotor@state^0,c
  8587  0009A8  0012               	return	
  8588  0009AA                     l6464:
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;GestioLCD.c: 131:    if (j<16) {
  8592  0009AA  0E10               	movlw	16
  8593  0009AC  6017               	cpfslt	GLCDMotor@j^0,c
  8594  0009AE  D02D               	goto	l6478
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  8598  0009B0  0E01               	movlw	1
  8599  0009B2  6E6F               	movwf	LcGotoXY@Row^0,c
  8600  0009B4  5017               	movf	GLCDMotor@j^0,w,c
  8601  0009B6  EC59  F00D         	call	_LcGotoXY
  8602                           
  8603                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  8604  0009BA  5019               	movf	_menuDaltGLCD^0,w,c
  8605  0009BC  0D1D               	mullw	29
  8606  0009BE  50F3               	movf	243,w,c
  8607  0009C0  0F01               	addlw	low _menuList
  8608  0009C2  2413               	addwf	GLCDMotor@k2^0,w,c
  8609  0009C4  0100               	movlb	0	; () banked
  8610  0009C6  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8611  0009C8  0E1D               	movlw	29
  8612  0009CA  27C9               	addwf	??_GLCDMotor& (0+255),f,b
  8613  0009CC  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8614  0009D0                     	if	1	;There is more than 1 active tblptr byte
  8615  0009D0  0E02               	movlw	high __smallconst
  8616  0009D2  6EF7               	movwf	tblptrh,c
  8617  0009D4                     	endif
  8618  0009D4                     	if	0	;tblptru may be non-zero
  8619  0009D4                     	endif
  8620  0009D4                     	if	0	;tblptru may be non-zero
  8621  0009D4                     	endif
  8622  0009D4  0008               	tblrd		*
  8623  0009D6  50F5               	movf	tablat,w,c
  8624  0009D8  ECED  F00C         	call	_LcPutChar
  8625                           
  8626                           ;GestioLCD.c: 134:     j++;
  8627  0009DC  2A17               	incf	GLCDMotor@j^0,f,c
  8628                           
  8629                           ;GestioLCD.c: 135:     k2++;
  8630  0009DE  2A13               	incf	GLCDMotor@k2^0,f,c
  8631                           
  8632                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  8633  0009E0  5019               	movf	_menuDaltGLCD^0,w,c
  8634  0009E2  0D1D               	mullw	29
  8635  0009E4  50F3               	movf	243,w,c
  8636  0009E6  0F01               	addlw	low _menuList
  8637  0009E8  2413               	addwf	GLCDMotor@k2^0,w,c
  8638  0009EA  0100               	movlb	0	; () banked
  8639  0009EC  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8640  0009EE  0E1D               	movlw	29
  8641  0009F0  27C9               	addwf	??_GLCDMotor& (0+255),f,b
  8642  0009F2  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8643  0009F6                     	if	1	;There is more than 1 active tblptr byte
  8644  0009F6  0E02               	movlw	high __smallconst
  8645  0009F8  6EF7               	movwf	tblptrh,c
  8646  0009FA                     	endif
  8647  0009FA                     	if	0	;tblptru may be non-zero
  8648  0009FA                     	endif
  8649  0009FA                     	if	0	;tblptru may be non-zero
  8650  0009FA                     	endif
  8651  0009FA  0008               	tblrd		*
  8652  0009FC  50F5               	movf	tablat,w,c
  8653  0009FE  0900               	iorlw	0
  8654  000A00  A4D8               	btfss	status,2,c
  8655  000A02  0012               	return	
  8656                           
  8657                           ; BSR set to: 0
  8658  000A04  0E00               	movlw	0
  8659  000A06  6E13               	movwf	GLCDMotor@k2^0,c
  8660  000A08  0012               	return	
  8661  000A0A                     l6478:
  8662                           
  8663                           ; BSR set to: 0
  8664  000A0A  0E0F               	movlw	15
  8665  000A0C  6417               	cpfsgt	GLCDMotor@j^0,c
  8666  000A0E  0012               	return	
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;GestioLCD.c: 139:     min2++;
  8670  000A10  2A15               	incf	GLCDMotor@min2^0,f,c
  8671                           
  8672                           ;GestioLCD.c: 140:     max2++;
  8673  000A12  2A4E               	incf	GLCDMotor@max2^0,f,c
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  8677  000A14  5019               	movf	_menuDaltGLCD^0,w,c
  8678  000A16  0D1D               	mullw	29
  8679  000A18  50F3               	movf	243,w,c
  8680  000A1A  0F01               	addlw	low _menuList
  8681  000A1C  244E               	addwf	GLCDMotor@max2^0,w,c
  8682  000A1E  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8683  000A20  0E1D               	movlw	29
  8684  000A22  27C9               	addwf	??_GLCDMotor& (0+255),f,b
  8685  000A24  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8686  000A28                     	if	1	;There is more than 1 active tblptr byte
  8687  000A28  0E02               	movlw	high __smallconst
  8688  000A2A  6EF7               	movwf	tblptrh,c
  8689  000A2C                     	endif
  8690  000A2C                     	if	0	;tblptru may be non-zero
  8691  000A2C                     	endif
  8692  000A2C                     	if	0	;tblptru may be non-zero
  8693  000A2C                     	endif
  8694  000A2C  0008               	tblrd		*
  8695  000A2E  50F5               	movf	tablat,w,c
  8696  000A30  0900               	iorlw	0
  8697  000A32  A4D8               	btfss	status,2,c
  8698  000A34  D002               	goto	l6486
  8699                           
  8700                           ; BSR set to: 0
  8701  000A36  0E00               	movlw	0
  8702  000A38  6E4E               	movwf	GLCDMotor@max2^0,c
  8703  000A3A                     l6486:
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  8707  000A3A  5019               	movf	_menuDaltGLCD^0,w,c
  8708  000A3C  0D1D               	mullw	29
  8709  000A3E  50F3               	movf	243,w,c
  8710  000A40  0F01               	addlw	low _menuList
  8711  000A42  2415               	addwf	GLCDMotor@min2^0,w,c
  8712  000A44  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8713  000A46  0E1D               	movlw	29
  8714  000A48  27C9               	addwf	??_GLCDMotor& (0+255),f,b
  8715  000A4A  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8716  000A4E                     	if	1	;There is more than 1 active tblptr byte
  8717  000A4E  0E02               	movlw	high __smallconst
  8718  000A50  6EF7               	movwf	tblptrh,c
  8719  000A52                     	endif
  8720  000A52                     	if	0	;tblptru may be non-zero
  8721  000A52                     	endif
  8722  000A52                     	if	0	;tblptru may be non-zero
  8723  000A52                     	endif
  8724  000A52  0008               	tblrd		*
  8725  000A54  50F5               	movf	tablat,w,c
  8726  000A56  0900               	iorlw	0
  8727  000A58  A4D8               	btfss	status,2,c
  8728  000A5A  D002               	goto	l863
  8729                           
  8730                           ; BSR set to: 0
  8731  000A5C  0E00               	movlw	0
  8732  000A5E  6E15               	movwf	GLCDMotor@min2^0,c
  8733  000A60                     l863:
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;GestioLCD.c: 143:     j=0;
  8737  000A60  0E00               	movlw	0
  8738  000A62  6E17               	movwf	GLCDMotor@j^0,c
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;GestioLCD.c: 144:     k2=min2;
  8742  000A64  C015  F013         	movff	GLCDMotor@min2,GLCDMotor@k2
  8743  000A68  D6B0               	goto	u6320
  8744  000A6A                     l6494:
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  8748  000A6A  501A               	movf	_timerGLCD^0,w,c
  8749  000A6C  EC5F  F00E         	call	_TiGetTics
  8750  000A70  BE68               	btfsc	(?_TiGetTics+1)^0,7,c
  8751  000A72  D00E               	goto	l865
  8752  000A74  0EB5               	movlw	181
  8753  000A76  5C67               	subwf	?_TiGetTics^0,w,c
  8754  000A78  0E04               	movlw	4
  8755  000A7A  5868               	subwfb	(?_TiGetTics+1)^0,w,c
  8756  000A7C  B0D8               	btfsc	status,0,c
  8757  000A7E  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8758  000A80  D007               	goto	l865
  8759  000A82  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8760  000A84  D005               	goto	l865
  8761                           
  8762                           ;GestioLCD.c: 150:     LcClear();
  8763  000A86  EC9B  F00E         	call	_LcClear	;wreg free
  8764  000A8A                     l6502:
  8765                           
  8766                           ;GestioLCD.c: 151:     state = 2;
  8767  000A8A  0E02               	movlw	2
  8768  000A8C  6E18               	movwf	GLCDMotor@state^0,c
  8769                           
  8770                           ;GestioLCD.c: 152:    }
  8771  000A8E  0012               	return	
  8772  000A90                     l865:
  8773  000A90  A078               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  8774  000A92  0012               	return	
  8775  000A94  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8776  000A96  0012               	return	
  8777                           
  8778                           ;GestioLCD.c: 154:     LcClear();
  8779  000A98  EC9B  F00E         	call	_LcClear	;wreg free
  8780  000A9C  D6F6               	goto	u6390
  8781  000A9E                     l6510:
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  8785  000A9E  501A               	movf	_timerGLCD^0,w,c
  8786  000AA0  ECDE  F00E         	call	_TiResetTics
  8787  000AA4  D692               	goto	u6320
  8788  000AA6                     l6514:
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;GestioLCD.c: 163:    if (LcLliure()) {
  8792  000AA6  EC49  F00F         	call	_LcLliure	;wreg free
  8793  000AAA  A0D8               	btfss	status,0,c
  8794  000AAC  0012               	return	
  8795                           
  8796                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  8797  000AAE  501A               	movf	_timerGLCD^0,w,c
  8798  000AB0  ECDE  F00E         	call	_TiResetTics
  8799                           
  8800                           ;GestioLCD.c: 165:     state = 11;
  8801  000AB4  0E0B               	movlw	11
  8802  000AB6  6E18               	movwf	GLCDMotor@state^0,c
  8803  000AB8  0012               	return	
  8804  000ABA                     l6520:
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  8808  000ABA  5019               	movf	_menuDaltGLCD^0,w,c
  8809  000ABC  0D1D               	mullw	29
  8810  000ABE  50F3               	movf	243,w,c
  8811  000AC0  0F01               	addlw	low _menuList
  8812  000AC2  2411               	addwf	GLCDMotor@length2^0,w,c
  8813  000AC4  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8814  000AC6  0E1D               	movlw	29
  8815  000AC8  27C9               	addwf	??_GLCDMotor& (0+255),f,b
  8816  000ACA  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8817  000ACE                     	if	1	;There is more than 1 active tblptr byte
  8818  000ACE  0E02               	movlw	high __smallconst
  8819  000AD0  6EF7               	movwf	tblptrh,c
  8820  000AD2                     	endif
  8821  000AD2                     	if	0	;tblptru may be non-zero
  8822  000AD2                     	endif
  8823  000AD2                     	if	0	;tblptru may be non-zero
  8824  000AD2                     	endif
  8825  000AD2  0008               	tblrd		*
  8826  000AD4  50F5               	movf	tablat,w,c
  8827  000AD6  0900               	iorlw	0
  8828  000AD8  B4D8               	btfsc	status,2,c
  8829  000ADA  D002               	goto	l6524
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;GestioLCD.c: 170:     length2++;
  8833  000ADC  2A11               	incf	GLCDMotor@length2^0,f,c
  8834                           
  8835                           ;GestioLCD.c: 171:    }
  8836  000ADE  0012               	return	
  8837  000AE0                     l6524:
  8838                           
  8839                           ; BSR set to: 0
  8840  000AE0  5019               	movf	_menuDaltGLCD^0,w,c
  8841  000AE2  0D1D               	mullw	29
  8842  000AE4  50F3               	movf	243,w,c
  8843  000AE6  0F01               	addlw	low _menuList
  8844  000AE8  2411               	addwf	GLCDMotor@length2^0,w,c
  8845  000AEA  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8846  000AEC  0E1D               	movlw	29
  8847  000AEE  27C9               	addwf	??_GLCDMotor& (0+255),f,b
  8848  000AF0  C0C9  FFF6         	movff	??_GLCDMotor,tblptrl
  8849  000AF4                     	if	1	;There is more than 1 active tblptr byte
  8850  000AF4  0E02               	movlw	high __smallconst
  8851  000AF6  6EF7               	movwf	tblptrh,c
  8852  000AF8                     	endif
  8853  000AF8                     	if	0	;tblptru may be non-zero
  8854  000AF8                     	endif
  8855  000AF8                     	if	0	;tblptru may be non-zero
  8856  000AF8                     	endif
  8857  000AF8  0008               	tblrd		*
  8858  000AFA  50F5               	movf	tablat,w,c
  8859  000AFC  0900               	iorlw	0
  8860  000AFE  A4D8               	btfss	status,2,c
  8861  000B00  0012               	return	
  8862  000B02  D7C3               	goto	l6502
  8863  000B04                     l6530:
  8864  000B04  5018               	movf	GLCDMotor@state^0,w,c
  8865  000B06  0100               	movlb	0	; () banked
  8866  000B08  6FC9               	movwf	??_GLCDMotor& (0+255),b
  8867  000B0A  6BCA               	clrf	(??_GLCDMotor+1)& (0+255),b
  8868                           
  8869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8870                           ; Switch size 1, requested type "simple"
  8871                           ; Number of cases is 1, Range of values is 0 to 0
  8872                           ; switch strategies available:
  8873                           ; Name         Instructions Cycles
  8874                           ; simple_byte            4     3 (average)
  8875                           ;	Chosen strategy is simple_byte
  8876  000B0C  51CA               	movf	(??_GLCDMotor+1)& (0+255),w,b
  8877  000B0E  0A00               	xorlw	0	; case 0
  8878  000B10  A4D8               	btfss	status,2,c
  8879  000B12  0012               	return	
  8880                           
  8881                           ; BSR set to: 0
  8882                           ; Switch size 1, requested type "simple"
  8883                           ; Number of cases is 12, Range of values is 0 to 13
  8884                           ; switch strategies available:
  8885                           ; Name         Instructions Cycles
  8886                           ; simple_byte           37    19 (average)
  8887                           ;	Chosen strategy is simple_byte
  8888  000B14  51C9               	movf	??_GLCDMotor& (0+255),w,b
  8889  000B16  0A00               	xorlw	0	; case 0
  8890  000B18  B4D8               	btfsc	status,2,c
  8891  000B1A  D6CC               	goto	l845
  8892  000B1C  0A01               	xorlw	1	; case 1
  8893  000B1E  B4D8               	btfsc	status,2,c
  8894  000B20  D6E6               	goto	l6432
  8895  000B22  0A03               	xorlw	3	; case 2
  8896  000B24  B4D8               	btfsc	status,2,c
  8897  000B26  D631               	goto	l6344
  8898  000B28  0A01               	xorlw	1	; case 3
  8899  000B2A  B4D8               	btfsc	status,2,c
  8900  000B2C  D650               	goto	l6360
  8901  000B2E  0A06               	xorlw	6	; case 5
  8902  000B30  B4D8               	btfsc	status,2,c
  8903  000B32  D6AE               	goto	l6396
  8904  000B34  0A03               	xorlw	3	; case 6
  8905  000B36  B4D8               	btfsc	status,2,c
  8906  000B38  D6A4               	goto	l6388
  8907  000B3A  0A01               	xorlw	1	; case 7
  8908  000B3C  B4D8               	btfsc	status,2,c
  8909  000B3E  D710               	goto	l6448
  8910  000B40  0A0F               	xorlw	15	; case 8
  8911  000B42  B4D8               	btfsc	status,2,c
  8912  000B44  D7B0               	goto	l6514
  8913  000B46  0A01               	xorlw	1	; case 9
  8914  000B48  B4D8               	btfsc	status,2,c
  8915  000B4A  D72F               	goto	l6464
  8916  000B4C  0A03               	xorlw	3	; case 10
  8917  000B4E  B4D8               	btfsc	status,2,c
  8918  000B50  D7A6               	goto	l6510
  8919  000B52  0A01               	xorlw	1	; case 11
  8920  000B54  B4D8               	btfsc	status,2,c
  8921  000B56  D789               	goto	l6494
  8922  000B58  0A06               	xorlw	6	; case 13
  8923  000B5A  A4D8               	btfss	status,2,c
  8924  000B5C  0012               	return	
  8925  000B5E  D7AD               	goto	l6520
  8926  000B60                     __end_of_GLCDMotor:
  8927                           	callstack 0
  8928                           
  8929 ;; *************** function _LcPutChar *****************
  8930 ;; Defined at:
  8931 ;;		line 134 in file "LcTLCD.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;  c               1    wreg     unsigned char 
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;  c               1   19[COMRAM] unsigned char 
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      void 
  8938 ;; Registers used:
  8939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1
  8945 ;;      Params:         0       0       0
  8946 ;;      Locals:         1       0       0
  8947 ;;      Temps:          0       0       0
  8948 ;;      Totals:         1       0       0
  8949 ;;Total ram usage:        1 bytes
  8950 ;; Hardware stack levels used: 1
  8951 ;; Hardware stack levels required when called: 5
  8952 ;; This function calls:
  8953 ;;		_CantaData
  8954 ;;		_LcGotoXY
  8955 ;;		_WaitForBusy
  8956 ;; This function is called by:
  8957 ;;		_LcLCD
  8958 ;;		_menu
  8959 ;;		_GLCDMotor
  8960 ;;		_motorSIO
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           	psect	text69
  8965  0019DA                     __ptext69:
  8966                           	callstack 0
  8967  0019DA                     _LcPutChar:
  8968                           	callstack 24
  8969                           
  8970                           ;incstack = 0
  8971                           ;LcPutChar@c stored from wreg
  8972  0019DA  6E75               	movwf	LcPutChar@c^0,c
  8973                           
  8974                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  8975  0019DC  EC39  F00D         	call	_WaitForBusy	;wreg free
  8976  0019E0  5075               	movf	LcPutChar@c^0,w,c
  8977  0019E2  EC00  F00E         	call	_CantaData
  8978                           
  8979                           ;LcTLCD.c: 138:  ++ColumnAct;
  8980  0019E6  2A34               	incf	_ColumnAct^0,f,c
  8981                           
  8982                           ;LcTLCD.c: 140:  if (Rows == 2) {
  8983  0019E8  0E02               	movlw	2
  8984  0019EA  1837               	xorwf	_Rows^0,w,c
  8985  0019EC  A4D8               	btfss	status,2,c
  8986  0019EE  D010               	goto	l4140
  8987                           
  8988                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  8989  0019F0  0E27               	movlw	39
  8990  0019F2  6434               	cpfsgt	_ColumnAct^0,c
  8991  0019F4  D00D               	goto	l4140
  8992                           
  8993                           ;LcTLCD.c: 142:    ColumnAct = 0;
  8994  0019F6  0E00               	movlw	0
  8995  0019F8  6E34               	movwf	_ColumnAct^0,c
  8996                           
  8997                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  8998  0019FA  2A35               	incf	_RowAct^0,f,c
  8999  0019FC  0E01               	movlw	1
  9000  0019FE  6435               	cpfsgt	_RowAct^0,c
  9001  001A00  D002               	goto	l4138
  9002  001A02  0E00               	movlw	0
  9003  001A04  6E35               	movwf	_RowAct^0,c
  9004  001A06                     l4138:
  9005                           
  9006                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  9007  001A06  C035  F06F         	movff	_RowAct,LcGotoXY@Row
  9008  001A0A  5034               	movf	_ColumnAct^0,w,c
  9009  001A0C  EC59  F00D         	call	_LcGotoXY
  9010  001A10                     l4140:
  9011                           
  9012                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  9013  001A10  0435               	decf	_RowAct^0,w,c
  9014  001A12  A4D8               	btfss	status,2,c
  9015  001A14  0012               	return	
  9016                           
  9017                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  9018  001A16  0E27               	movlw	39
  9019  001A18  6434               	cpfsgt	_ColumnAct^0,c
  9020  001A1A  D002               	goto	l4146
  9021  001A1C  0E00               	movlw	0
  9022  001A1E  6E34               	movwf	_ColumnAct^0,c
  9023  001A20                     l4146:
  9024                           
  9025                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  9026  001A20  C035  F06F         	movff	_RowAct,LcGotoXY@Row
  9027  001A24  5034               	movf	_ColumnAct^0,w,c
  9028  001A26  EC59  F00D         	call	_LcGotoXY
  9029  001A2A  0012               	return		;funcret
  9030  001A2C                     __end_of_LcPutChar:
  9031                           	callstack 0
  9032                           
  9033 ;; *************** function _CantaData *****************
  9034 ;; Defined at:
  9035 ;;		line 196 in file "LcTLCD.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  Data            1    wreg     unsigned char 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  Data            1    7[COMRAM] unsigned char 
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1
  9049 ;;      Params:         0       0       0
  9050 ;;      Locals:         1       0       0
  9051 ;;      Temps:          0       0       0
  9052 ;;      Totals:         1       0       0
  9053 ;;Total ram usage:        1 bytes
  9054 ;; Hardware stack levels used: 1
  9055 ;; Hardware stack levels required when called: 3
  9056 ;; This function calls:
  9057 ;;		_CantaPartAlta
  9058 ;;		_CantaPartBaixa
  9059 ;; This function is called by:
  9060 ;;		_LcPutChar
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text70
  9065  001C00                     __ptext70:
  9066                           	callstack 0
  9067  001C00                     _CantaData:
  9068                           	callstack 25
  9069                           
  9070                           ;incstack = 0
  9071                           ;CantaData@Data stored from wreg
  9072  001C00  6E69               	movwf	CantaData@Data^0,c
  9073                           
  9074                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9075  001C02  9694               	bcf	148,3,c	;volatile
  9076  001C04  9494               	bcf	148,2,c	;volatile
  9077  001C06  9294               	bcf	148,1,c	;volatile
  9078  001C08  9094               	bcf	148,0,c	;volatile
  9079                           
  9080                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  9081  001C0A  8A8B               	bsf	139,5,c	;volatile
  9082                           
  9083                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  9084  001C0C  9E8C               	bcf	140,7,c	;volatile
  9085                           
  9086                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  9087  001C0E  888B               	bsf	139,4,c	;volatile
  9088                           
  9089                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  9090  001C10  5069               	movf	CantaData@Data^0,w,c
  9091  001C12  EC5D  F00C         	call	_CantaPartAlta
  9092                           
  9093                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  9094  001C16  888B               	bsf	139,4,c	;volatile
  9095                           
  9096                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  9097  001C18  988B               	bcf	139,4,c	;volatile
  9098                           
  9099                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  9100  001C1A  988B               	bcf	139,4,c	;volatile
  9101                           
  9102                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  9103  001C1C  888B               	bsf	139,4,c	;volatile
  9104                           
  9105                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  9106  001C1E  5069               	movf	CantaData@Data^0,w,c
  9107  001C20  EC29  F00C         	call	_CantaPartBaixa
  9108                           
  9109                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  9110  001C24  888B               	bsf	139,4,c	;volatile
  9111                           
  9112                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  9113  001C26  988B               	bcf	139,4,c	;volatile
  9114                           
  9115                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9116  001C28  8694               	bsf	148,3,c	;volatile
  9117  001C2A  8494               	bsf	148,2,c	;volatile
  9118  001C2C  8294               	bsf	148,1,c	;volatile
  9119  001C2E  8094               	bsf	148,0,c	;volatile
  9120  001C30  0012               	return		;funcret
  9121  001C32                     __end_of_CantaData:
  9122                           	callstack 0
  9123                           
  9124 ;; *************** function _LcNewString *****************
  9125 ;; Defined at:
  9126 ;;		line 241 in file "LcTLCD.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9129 ;;		 -> stringScore(4), STR_8(8), STR_7(12), STR_6(8), 
  9130 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  9131 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  9132 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg, status,2, status,0
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMRAM   BANK0   BANK1
  9144 ;;      Params:         2       0       0
  9145 ;;      Locals:         0       0       0
  9146 ;;      Temps:          0       0       0
  9147 ;;      Totals:         2       0       0
  9148 ;;Total ram usage:        2 bytes
  9149 ;; Hardware stack levels used: 1
  9150 ;; Hardware stack levels required when called: 2
  9151 ;; This function calls:
  9152 ;;		Nothing
  9153 ;; This function is called by:
  9154 ;;		_menu
  9155 ;;		_GLCDMotor
  9156 ;;		_motorJoc
  9157 ;;		_motorSIO
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text71
  9162  001E86                     __ptext71:
  9163                           	callstack 0
  9164  001E86                     _LcNewString:
  9165                           	callstack 27
  9166                           
  9167                           ;LcTLCD.c: 242:     s_ptr = new_s;
  9168                           
  9169                           ;incstack = 0
  9170  001E86  C06A  F005         	movff	LcNewString@new_s,_s_ptr
  9171  001E8A  C06B  F006         	movff	LcNewString@new_s+1,_s_ptr+1
  9172                           
  9173                           ;LcTLCD.c: 243:     nou_s = 1;
  9174  001E8E  8079               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9175  001E90  0012               	return		;funcret
  9176  001E92                     __end_of_LcNewString:
  9177                           	callstack 0
  9178                           
  9179 ;; *************** function _LcLliure *****************
  9180 ;; Defined at:
  9181 ;;		line 257 in file "LcTLCD.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;		None
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;		None
  9186 ;; Return value:  Size  Location     Type
  9187 ;;		None               void
  9188 ;; Registers used:
  9189 ;;		status,0
  9190 ;; Tracked objects:
  9191 ;;		On entry : 0/0
  9192 ;;		On exit  : 0/0
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMRAM   BANK0   BANK1
  9195 ;;      Params:         0       0       0
  9196 ;;      Locals:         0       0       0
  9197 ;;      Temps:          0       0       0
  9198 ;;      Totals:         0       0       0
  9199 ;;Total ram usage:        0 bytes
  9200 ;; Hardware stack levels used: 1
  9201 ;; Hardware stack levels required when called: 2
  9202 ;; This function calls:
  9203 ;;		Nothing
  9204 ;; This function is called by:
  9205 ;;		_menu
  9206 ;;		_GLCDMotor
  9207 ;;		_motorJoc
  9208 ;;		_motorSIO
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           	psect	text72
  9213  001E92                     __ptext72:
  9214                           	callstack 0
  9215  001E92                     _LcLliure:
  9216                           	callstack 27
  9217                           
  9218                           ;LcTLCD.c: 258:     return !nou_s;
  9219                           
  9220                           ;incstack = 0
  9221  001E92  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9222  001E94  D002               	goto	l4156
  9223  001E96  90D8               	bcf	status,0,c
  9224  001E98  0012               	return	
  9225  001E9A                     l4156:
  9226  001E9A  80D8               	bsf	status,0,c
  9227  001E9C  0012               	return		;funcret
  9228  001E9E                     __end_of_LcLliure:
  9229                           	callstack 0
  9230                           
  9231 ;; *************** function _LcClear *****************
  9232 ;; Defined at:
  9233 ;;		line 84 in file "LcTLCD.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;		None
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;		None
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  1    wreg      void 
  9240 ;; Registers used:
  9241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1
  9247 ;;      Params:         0       0       0
  9248 ;;      Locals:         0       0       0
  9249 ;;      Temps:          0       0       0
  9250 ;;      Totals:         0       0       0
  9251 ;;Total ram usage:        0 bytes
  9252 ;; Hardware stack levels used: 1
  9253 ;; Hardware stack levels required when called: 5
  9254 ;; This function calls:
  9255 ;;		_CantaIR
  9256 ;;		_Espera
  9257 ;;		_LcGotoXY
  9258 ;;		_WaitForBusy
  9259 ;; This function is called by:
  9260 ;;		_menu
  9261 ;;		_GLCDMotor
  9262 ;;		_motorSIO
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           
  9266                           	psect	text73
  9267  001D36                     __ptext73:
  9268                           	callstack 0
  9269  001D36                     _LcClear:
  9270                           	callstack 24
  9271                           
  9272                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  9273                           
  9274                           ;incstack = 0
  9275  001D36  EC39  F00D         	call	_WaitForBusy	;wreg free
  9276  001D3A  0E01               	movlw	1
  9277  001D3C  EC19  F00E         	call	_CantaIR
  9278                           
  9279                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  9280  001D40  0E00               	movlw	0
  9281  001D42  6E6F               	movwf	(Espera@ms+1)^0,c
  9282  001D44  0E03               	movlw	3
  9283  001D46  6E6E               	movwf	Espera@ms^0,c
  9284  001D48  5033               	movf	_Timer^0,w,c
  9285  001D4A  ECAD  F00E         	call	_Espera
  9286                           
  9287                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  9288  001D4E  0E00               	movlw	0
  9289  001D50  6E6F               	movwf	LcGotoXY@Row^0,c
  9290  001D52  0E00               	movlw	0
  9291  001D54  EC59  F00D         	call	_LcGotoXY
  9292  001D58  0012               	return		;funcret
  9293  001D5A                     __end_of_LcClear:
  9294                           	callstack 0
  9295                           
  9296 ;; *************** function _LcGotoXY *****************
  9297 ;; Defined at:
  9298 ;;		line 106 in file "LcTLCD.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;  Column          1    wreg     unsigned char 
  9301 ;;  Row             1   13[COMRAM] unsigned char 
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;  Column          1   18[COMRAM] unsigned char 
  9304 ;;  Fisics          2   14[COMRAM] int 
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      void 
  9307 ;; Registers used:
  9308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK0   BANK1
  9314 ;;      Params:         1       0       0
  9315 ;;      Locals:         5       0       0
  9316 ;;      Temps:          0       0       0
  9317 ;;      Totals:         6       0       0
  9318 ;;Total ram usage:        6 bytes
  9319 ;; Hardware stack levels used: 1
  9320 ;; Hardware stack levels required when called: 4
  9321 ;; This function calls:
  9322 ;;		_CantaIR
  9323 ;;		_WaitForBusy
  9324 ;; This function is called by:
  9325 ;;		_LcClear
  9326 ;;		_LcPutChar
  9327 ;;		_menu
  9328 ;;		_GLCDMotor
  9329 ;;		_motorJoc
  9330 ;;		_motorSIO
  9331 ;; This function uses a non-reentrant model
  9332 ;;
  9333                           
  9334                           	psect	text74
  9335  001AB2                     __ptext74:
  9336                           	callstack 0
  9337  001AB2                     _LcGotoXY:
  9338                           	callstack 24
  9339                           
  9340                           ;incstack = 0
  9341                           ;LcGotoXY@Column stored from wreg
  9342  001AB2  6E74               	movwf	LcGotoXY@Column^0,c
  9343                           
  9344                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  9345  001AB4  506F               	movf	LcGotoXY@Row^0,w,c
  9346  001AB6  B4D8               	btfsc	status,2,c
  9347  001AB8  D004               	goto	l4066
  9348  001ABA  0E00               	movlw	0
  9349  001ABC  6E73               	movwf	(_LcGotoXY$336+1)^0,c
  9350  001ABE  0E40               	movlw	64
  9351  001AC0  D003               	goto	L10
  9352  001AC2                     l4066:
  9353  001AC2  0E00               	movlw	0
  9354  001AC4  6E73               	movwf	(_LcGotoXY$336+1)^0,c
  9355  001AC6  0E00               	movlw	0
  9356  001AC8                     L10:
  9357  001AC8  6E72               	movwf	_LcGotoXY$336^0,c
  9358  001ACA  5074               	movf	LcGotoXY@Column^0,w,c
  9359  001ACC  2472               	addwf	_LcGotoXY$336^0,w,c
  9360  001ACE  6E70               	movwf	LcGotoXY@Fisics^0,c
  9361  001AD0  0E00               	movlw	0
  9362  001AD2  2073               	addwfc	(_LcGotoXY$336+1)^0,w,c
  9363  001AD4  6E71               	movwf	(LcGotoXY@Fisics+1)^0,c
  9364                           
  9365                           ;LcTLCD.c: 127:  WaitForBusy();
  9366  001AD6  EC39  F00D         	call	_WaitForBusy	;wreg free
  9367                           
  9368                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  9369  001ADA  5070               	movf	LcGotoXY@Fisics^0,w,c
  9370  001ADC  0980               	iorlw	128
  9371  001ADE  EC19  F00E         	call	_CantaIR
  9372                           
  9373                           ;LcTLCD.c: 130:  RowAct = Row;
  9374  001AE2  C06F  F035         	movff	LcGotoXY@Row,_RowAct
  9375                           
  9376                           ;LcTLCD.c: 131:  ColumnAct = Column;
  9377  001AE6  C074  F034         	movff	LcGotoXY@Column,_ColumnAct
  9378  001AEA  0012               	return		;funcret
  9379  001AEC                     __end_of_LcGotoXY:
  9380                           	callstack 0
  9381                           
  9382 ;; *************** function _WaitForBusy *****************
  9383 ;; Defined at:
  9384 ;;		line 212 in file "LcTLCD.c"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;		None
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;  Busy            1   12[COMRAM] unsigned char 
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  1    wreg      void 
  9391 ;; Registers used:
  9392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMRAM   BANK0   BANK1
  9398 ;;      Params:         0       0       0
  9399 ;;      Locals:         1       0       0
  9400 ;;      Temps:          0       0       0
  9401 ;;      Totals:         1       0       0
  9402 ;;Total ram usage:        1 bytes
  9403 ;; Hardware stack levels used: 1
  9404 ;; Hardware stack levels required when called: 3
  9405 ;; This function calls:
  9406 ;;		_TiGetTics
  9407 ;;		_TiResetTics
  9408 ;; This function is called by:
  9409 ;;		_LcInit
  9410 ;;		_LcClear
  9411 ;;		_LcGotoXY
  9412 ;;		_LcPutChar
  9413 ;; This function uses a non-reentrant model
  9414 ;;
  9415                           
  9416                           	psect	text75
  9417  001A72                     __ptext75:
  9418                           	callstack 0
  9419  001A72                     _WaitForBusy:
  9420                           	callstack 25
  9421                           
  9422                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9423                           
  9424                           ;incstack = 0
  9425  001A72  8694               	bsf	148,3,c	;volatile
  9426  001A74  8494               	bsf	148,2,c	;volatile
  9427  001A76  8294               	bsf	148,1,c	;volatile
  9428  001A78  8094               	bsf	148,0,c	;volatile
  9429                           
  9430                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  9431  001A7A  9A8B               	bcf	139,5,c	;volatile
  9432                           
  9433                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  9434  001A7C  8E8C               	bsf	140,7,c	;volatile
  9435                           
  9436                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  9437  001A7E  5033               	movf	_Timer^0,w,c
  9438  001A80  ECDE  F00E         	call	_TiResetTics
  9439  001A84                     l4034:
  9440                           
  9441                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9442  001A84  888B               	bsf	139,4,c	;volatile
  9443  001A86  888B               	bsf	139,4,c	;volatile
  9444                           
  9445                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  9446  001A88  0E00               	movlw	0
  9447  001A8A  B682               	btfsc	130,3,c	;volatile
  9448  001A8C  0E01               	movlw	1
  9449  001A8E  6E6E               	movwf	WaitForBusy@Busy^0,c
  9450                           
  9451                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  9452  001A90  988B               	bcf	139,4,c	;volatile
  9453                           
  9454                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  9455  001A92  988B               	bcf	139,4,c	;volatile
  9456                           
  9457                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9458  001A94  888B               	bsf	139,4,c	;volatile
  9459  001A96  888B               	bsf	139,4,c	;volatile
  9460                           
  9461                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  9462  001A98  988B               	bcf	139,4,c	;volatile
  9463                           
  9464                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  9465  001A9A  988B               	bcf	139,4,c	;volatile
  9466                           
  9467                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  9468  001A9C  5033               	movf	_Timer^0,w,c
  9469  001A9E  EC5F  F00E         	call	_TiGetTics
  9470  001AA2  5067               	movf	?_TiGetTics^0,w,c
  9471  001AA4  1068               	iorwf	(?_TiGetTics+1)^0,w,c
  9472  001AA6  A4D8               	btfss	status,2,c
  9473  001AA8  0012               	return	
  9474                           
  9475                           ;LcTLCD.c: 227:  } while(Busy);
  9476  001AAA  506E               	movf	WaitForBusy@Busy^0,w,c
  9477  001AAC  B4D8               	btfsc	status,2,c
  9478  001AAE  0012               	return	
  9479  001AB0  D7E9               	goto	l4034
  9480  001AB2                     __end_of_WaitForBusy:
  9481                           	callstack 0
  9482                           
  9483 ;; *************** function _CantaIR *****************
  9484 ;; Defined at:
  9485 ;;		line 180 in file "LcTLCD.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;  IR              1    wreg     unsigned char 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;  IR              1    7[COMRAM] unsigned char 
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		wreg, status,2, status,0, cstack
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1
  9499 ;;      Params:         0       0       0
  9500 ;;      Locals:         1       0       0
  9501 ;;      Temps:          0       0       0
  9502 ;;      Totals:         1       0       0
  9503 ;;Total ram usage:        1 bytes
  9504 ;; Hardware stack levels used: 1
  9505 ;; Hardware stack levels required when called: 3
  9506 ;; This function calls:
  9507 ;;		_CantaPartAlta
  9508 ;;		_CantaPartBaixa
  9509 ;; This function is called by:
  9510 ;;		_LcInit
  9511 ;;		_LcClear
  9512 ;;		_LcGotoXY
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           	psect	text76
  9517  001C32                     __ptext76:
  9518                           	callstack 0
  9519  001C32                     _CantaIR:
  9520                           	callstack 24
  9521                           
  9522                           ;incstack = 0
  9523                           ;CantaIR@IR stored from wreg
  9524  001C32  6E69               	movwf	CantaIR@IR^0,c
  9525                           
  9526                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9527  001C34  9694               	bcf	148,3,c	;volatile
  9528  001C36  9494               	bcf	148,2,c	;volatile
  9529  001C38  9294               	bcf	148,1,c	;volatile
  9530  001C3A  9094               	bcf	148,0,c	;volatile
  9531                           
  9532                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  9533  001C3C  9A8B               	bcf	139,5,c	;volatile
  9534                           
  9535                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  9536  001C3E  9E8C               	bcf	140,7,c	;volatile
  9537                           
  9538                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  9539  001C40  888B               	bsf	139,4,c	;volatile
  9540                           
  9541                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  9542  001C42  5069               	movf	CantaIR@IR^0,w,c
  9543  001C44  EC5D  F00C         	call	_CantaPartAlta
  9544                           
  9545                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9546  001C48  888B               	bsf	139,4,c	;volatile
  9547                           
  9548                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  9549  001C4A  988B               	bcf	139,4,c	;volatile
  9550                           
  9551                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  9552  001C4C  988B               	bcf	139,4,c	;volatile
  9553                           
  9554                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  9555  001C4E  888B               	bsf	139,4,c	;volatile
  9556                           
  9557                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  9558  001C50  5069               	movf	CantaIR@IR^0,w,c
  9559  001C52  EC29  F00C         	call	_CantaPartBaixa
  9560                           
  9561                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9562  001C56  888B               	bsf	139,4,c	;volatile
  9563                           
  9564                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  9565  001C58  988B               	bcf	139,4,c	;volatile
  9566                           
  9567                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9568  001C5A  8694               	bsf	148,3,c	;volatile
  9569  001C5C  8494               	bsf	148,2,c	;volatile
  9570  001C5E  8294               	bsf	148,1,c	;volatile
  9571  001C60  8094               	bsf	148,0,c	;volatile
  9572  001C62  0012               	return		;funcret
  9573  001C64                     __end_of_CantaIR:
  9574                           	callstack 0
  9575                           
  9576 ;; *************** function _CantaPartBaixa *****************
  9577 ;; Defined at:
  9578 ;;		line 173 in file "LcTLCD.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  c               1    wreg     unsigned char 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  c               1    6[COMRAM] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      void 
  9585 ;; Registers used:
  9586 ;;		wreg, status,2, status,0
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1
  9592 ;;      Params:         0       0       0
  9593 ;;      Locals:         1       0       0
  9594 ;;      Temps:          1       0       0
  9595 ;;      Totals:         2       0       0
  9596 ;;Total ram usage:        2 bytes
  9597 ;; Hardware stack levels used: 1
  9598 ;; Hardware stack levels required when called: 2
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		_CantaIR
  9603 ;;		_CantaData
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           	psect	text77
  9608  001852                     __ptext77:
  9609                           	callstack 0
  9610  001852                     _CantaPartBaixa:
  9611                           	callstack 24
  9612                           
  9613                           ;incstack = 0
  9614                           ;CantaPartBaixa@c stored from wreg
  9615  001852  6E68               	movwf	CantaPartBaixa@c^0,c
  9616                           
  9617                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  9618  001854  A668               	btfss	CantaPartBaixa@c^0,3,c
  9619  001856  D003               	goto	u3060
  9620  001858  6A67               	clrf	??_CantaPartBaixa^0,c
  9621  00185A  2A67               	incf	??_CantaPartBaixa^0,f,c
  9622  00185C  D001               	goto	u3078
  9623  00185E                     u3060:
  9624  00185E  6A67               	clrf	??_CantaPartBaixa^0,c
  9625  001860                     u3078:
  9626  001860  4667               	rlncf	??_CantaPartBaixa^0,f,c
  9627  001862  4667               	rlncf	??_CantaPartBaixa^0,f,c
  9628  001864  4667               	rlncf	??_CantaPartBaixa^0,f,c
  9629  001866  508B               	movf	139,w,c	;volatile
  9630  001868  1867               	xorwf	??_CantaPartBaixa^0,w,c
  9631  00186A  0BF7               	andlw	-9
  9632  00186C  1867               	xorwf	??_CantaPartBaixa^0,w,c
  9633  00186E  6E8B               	movwf	139,c	;volatile
  9634                           
  9635                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  9636  001870  A468               	btfss	CantaPartBaixa@c^0,2,c
  9637  001872  D003               	goto	u3080
  9638  001874  6A67               	clrf	??_CantaPartBaixa^0,c
  9639  001876  2A67               	incf	??_CantaPartBaixa^0,f,c
  9640  001878  D001               	goto	u3098
  9641  00187A                     u3080:
  9642  00187A  6A67               	clrf	??_CantaPartBaixa^0,c
  9643  00187C                     u3098:
  9644  00187C  4667               	rlncf	??_CantaPartBaixa^0,f,c
  9645  00187E  4667               	rlncf	??_CantaPartBaixa^0,f,c
  9646  001880  508B               	movf	139,w,c	;volatile
  9647  001882  1867               	xorwf	??_CantaPartBaixa^0,w,c
  9648  001884  0BFB               	andlw	-5
  9649  001886  1867               	xorwf	??_CantaPartBaixa^0,w,c
  9650  001888  6E8B               	movwf	139,c	;volatile
  9651                           
  9652                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  9653  00188A  A268               	btfss	CantaPartBaixa@c^0,1,c
  9654  00188C  D003               	goto	u3100
  9655  00188E  6A67               	clrf	??_CantaPartBaixa^0,c
  9656  001890  2A67               	incf	??_CantaPartBaixa^0,f,c
  9657  001892  D001               	goto	u3118
  9658  001894                     u3100:
  9659  001894  6A67               	clrf	??_CantaPartBaixa^0,c
  9660  001896                     u3118:
  9661  001896  4667               	rlncf	??_CantaPartBaixa^0,f,c
  9662  001898  508B               	movf	139,w,c	;volatile
  9663  00189A  1867               	xorwf	??_CantaPartBaixa^0,w,c
  9664  00189C  0BFD               	andlw	-3
  9665  00189E  1867               	xorwf	??_CantaPartBaixa^0,w,c
  9666  0018A0  6E8B               	movwf	139,c	;volatile
  9667                           
  9668                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  9669  0018A2  A068               	btfss	CantaPartBaixa@c^0,0,c
  9670  0018A4  D003               	goto	u3120
  9671  0018A6  6A67               	clrf	??_CantaPartBaixa^0,c
  9672  0018A8  2A67               	incf	??_CantaPartBaixa^0,f,c
  9673  0018AA  D001               	goto	u3138
  9674  0018AC                     u3120:
  9675  0018AC  6A67               	clrf	??_CantaPartBaixa^0,c
  9676  0018AE                     u3138:
  9677  0018AE  508B               	movf	139,w,c	;volatile
  9678  0018B0  1867               	xorwf	??_CantaPartBaixa^0,w,c
  9679  0018B2  0BFE               	andlw	-2
  9680  0018B4  1867               	xorwf	??_CantaPartBaixa^0,w,c
  9681  0018B6  6E8B               	movwf	139,c	;volatile
  9682  0018B8  0012               	return		;funcret
  9683  0018BA                     __end_of_CantaPartBaixa:
  9684                           	callstack 0
  9685                           
  9686 ;; *************** function _CantaPartAlta *****************
  9687 ;; Defined at:
  9688 ;;		line 166 in file "LcTLCD.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;  c               1    wreg     unsigned char 
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;  c               1    6[COMRAM] unsigned char 
  9693 ;; Return value:  Size  Location     Type
  9694 ;;                  1    wreg      void 
  9695 ;; Registers used:
  9696 ;;		wreg, status,2, status,0
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1
  9702 ;;      Params:         0       0       0
  9703 ;;      Locals:         1       0       0
  9704 ;;      Temps:          1       0       0
  9705 ;;      Totals:         2       0       0
  9706 ;;Total ram usage:        2 bytes
  9707 ;; Hardware stack levels used: 1
  9708 ;; Hardware stack levels required when called: 2
  9709 ;; This function calls:
  9710 ;;		Nothing
  9711 ;; This function is called by:
  9712 ;;		_CantaIR
  9713 ;;		_CantaData
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           	psect	text78
  9718  0018BA                     __ptext78:
  9719                           	callstack 0
  9720  0018BA                     _CantaPartAlta:
  9721                           	callstack 24
  9722                           
  9723                           ;incstack = 0
  9724                           ;CantaPartAlta@c stored from wreg
  9725  0018BA  6E68               	movwf	CantaPartAlta@c^0,c
  9726                           
  9727                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  9728  0018BC  AE68               	btfss	CantaPartAlta@c^0,7,c
  9729  0018BE  D003               	goto	u2980
  9730  0018C0  6A67               	clrf	??_CantaPartAlta^0,c
  9731  0018C2  2A67               	incf	??_CantaPartAlta^0,f,c
  9732  0018C4  D001               	goto	u2998
  9733  0018C6                     u2980:
  9734  0018C6  6A67               	clrf	??_CantaPartAlta^0,c
  9735  0018C8                     u2998:
  9736  0018C8  4667               	rlncf	??_CantaPartAlta^0,f,c
  9737  0018CA  4667               	rlncf	??_CantaPartAlta^0,f,c
  9738  0018CC  4667               	rlncf	??_CantaPartAlta^0,f,c
  9739  0018CE  508B               	movf	139,w,c	;volatile
  9740  0018D0  1867               	xorwf	??_CantaPartAlta^0,w,c
  9741  0018D2  0BF7               	andlw	-9
  9742  0018D4  1867               	xorwf	??_CantaPartAlta^0,w,c
  9743  0018D6  6E8B               	movwf	139,c	;volatile
  9744                           
  9745                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  9746  0018D8  AC68               	btfss	CantaPartAlta@c^0,6,c
  9747  0018DA  D003               	goto	u3000
  9748  0018DC  6A67               	clrf	??_CantaPartAlta^0,c
  9749  0018DE  2A67               	incf	??_CantaPartAlta^0,f,c
  9750  0018E0  D001               	goto	u3018
  9751  0018E2                     u3000:
  9752  0018E2  6A67               	clrf	??_CantaPartAlta^0,c
  9753  0018E4                     u3018:
  9754  0018E4  4667               	rlncf	??_CantaPartAlta^0,f,c
  9755  0018E6  4667               	rlncf	??_CantaPartAlta^0,f,c
  9756  0018E8  508B               	movf	139,w,c	;volatile
  9757  0018EA  1867               	xorwf	??_CantaPartAlta^0,w,c
  9758  0018EC  0BFB               	andlw	-5
  9759  0018EE  1867               	xorwf	??_CantaPartAlta^0,w,c
  9760  0018F0  6E8B               	movwf	139,c	;volatile
  9761                           
  9762                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  9763  0018F2  AA68               	btfss	CantaPartAlta@c^0,5,c
  9764  0018F4  D003               	goto	u3020
  9765  0018F6  6A67               	clrf	??_CantaPartAlta^0,c
  9766  0018F8  2A67               	incf	??_CantaPartAlta^0,f,c
  9767  0018FA  D001               	goto	u3038
  9768  0018FC                     u3020:
  9769  0018FC  6A67               	clrf	??_CantaPartAlta^0,c
  9770  0018FE                     u3038:
  9771  0018FE  4667               	rlncf	??_CantaPartAlta^0,f,c
  9772  001900  508B               	movf	139,w,c	;volatile
  9773  001902  1867               	xorwf	??_CantaPartAlta^0,w,c
  9774  001904  0BFD               	andlw	-3
  9775  001906  1867               	xorwf	??_CantaPartAlta^0,w,c
  9776  001908  6E8B               	movwf	139,c	;volatile
  9777                           
  9778                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  9779  00190A  A868               	btfss	CantaPartAlta@c^0,4,c
  9780  00190C  D003               	goto	u3040
  9781  00190E  6A67               	clrf	??_CantaPartAlta^0,c
  9782  001910  2A67               	incf	??_CantaPartAlta^0,f,c
  9783  001912  D001               	goto	u3058
  9784  001914                     u3040:
  9785  001914  6A67               	clrf	??_CantaPartAlta^0,c
  9786  001916                     u3058:
  9787  001916  508B               	movf	139,w,c	;volatile
  9788  001918  1867               	xorwf	??_CantaPartAlta^0,w,c
  9789  00191A  0BFE               	andlw	-2
  9790  00191C  1867               	xorwf	??_CantaPartAlta^0,w,c
  9791  00191E  6E8B               	movwf	139,c	;volatile
  9792  001920  0012               	return		;funcret
  9793  001922                     __end_of_CantaPartAlta:
  9794                           	callstack 0
  9795                           
  9796 ;; *************** function _Espera *****************
  9797 ;; Defined at:
  9798 ;;		line 161 in file "LcTLCD.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  Timer           1    wreg     unsigned char 
  9801 ;;  ms              2   12[COMRAM] int 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;  Timer           1   15[COMRAM] unsigned char 
  9804 ;; Return value:  Size  Location     Type
  9805 ;;                  1    wreg      void 
  9806 ;; Registers used:
  9807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9808 ;; Tracked objects:
  9809 ;;		On entry : 0/0
  9810 ;;		On exit  : 0/0
  9811 ;;		Unchanged: 0/0
  9812 ;; Data sizes:     COMRAM   BANK0   BANK1
  9813 ;;      Params:         2       0       0
  9814 ;;      Locals:         1       0       0
  9815 ;;      Temps:          1       0       0
  9816 ;;      Totals:         4       0       0
  9817 ;;Total ram usage:        4 bytes
  9818 ;; Hardware stack levels used: 1
  9819 ;; Hardware stack levels required when called: 3
  9820 ;; This function calls:
  9821 ;;		_TiGetTics
  9822 ;;		_TiResetTics
  9823 ;; This function is called by:
  9824 ;;		_LcInit
  9825 ;;		_LcClear
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829                           	psect	text79
  9830  001D5A                     __ptext79:
  9831                           	callstack 0
  9832  001D5A                     _Espera:
  9833                           	callstack 25
  9834                           
  9835                           ;incstack = 0
  9836                           ;Espera@Timer stored from wreg
  9837  001D5A  6E71               	movwf	Espera@Timer^0,c
  9838                           
  9839                           ;LcTLCD.c: 162:  TiResetTics(Timer);
  9840  001D5C  5071               	movf	Espera@Timer^0,w,c
  9841  001D5E  ECDE  F00E         	call	_TiResetTics
  9842  001D62                     l4060:
  9843  001D62  5071               	movf	Espera@Timer^0,w,c
  9844  001D64  EC5F  F00E         	call	_TiGetTics
  9845  001D68  506E               	movf	Espera@ms^0,w,c
  9846  001D6A  5C67               	subwf	?_TiGetTics^0,w,c
  9847  001D6C  5068               	movf	(?_TiGetTics+1)^0,w,c
  9848  001D6E  0A80               	xorlw	128
  9849  001D70  6E70               	movwf	??_Espera^0,c
  9850  001D72  506F               	movf	(Espera@ms+1)^0,w,c
  9851  001D74  0A80               	xorlw	128
  9852  001D76  5870               	subwfb	??_Espera^0,w,c
  9853  001D78  B0D8               	btfsc	status,0,c
  9854  001D7A  0012               	return	
  9855  001D7C  D7F2               	goto	l4060
  9856  001D7E                     __end_of_Espera:
  9857                           	callstack 0
  9858                           
  9859 ;; *************** function _TiResetTics *****************
  9860 ;; Defined at:
  9861 ;;		line 55 in file "TiTTimer.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  Handle          1    wreg     unsigned char 
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;  Handle          1    5[COMRAM] unsigned char 
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  1    wreg      void 
  9868 ;; Registers used:
  9869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1
  9875 ;;      Params:         0       0       0
  9876 ;;      Locals:         1       0       0
  9877 ;;      Temps:          0       0       0
  9878 ;;      Totals:         1       0       0
  9879 ;;Total ram usage:        1 bytes
  9880 ;; Hardware stack levels used: 1
  9881 ;; Hardware stack levels required when called: 2
  9882 ;; This function calls:
  9883 ;;		Nothing
  9884 ;; This function is called by:
  9885 ;;		_Espera
  9886 ;;		_WaitForBusy
  9887 ;;		_SMotor
  9888 ;;		_TeTeclat
  9889 ;;		_menu
  9890 ;;		_motorAltaveu
  9891 ;;		_GLCDMotor
  9892 ;;		_motorHora
  9893 ;;		_motorSIO
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text80
  9898  001DBC                     __ptext80:
  9899                           	callstack 0
  9900  001DBC                     _TiResetTics:
  9901                           	callstack 27
  9902                           
  9903                           ;incstack = 0
  9904                           ;TiResetTics@Handle stored from wreg
  9905  001DBC  6E67               	movwf	TiResetTics@Handle^0,c
  9906                           
  9907                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  9908  001DBE  5067               	movf	TiResetTics@Handle^0,w,c
  9909  001DC0  0D03               	mullw	3
  9910  001DC2  50F3               	movf	243,w,c
  9911  001DC4  0FA8               	addlw	low _s_Timers
  9912  001DC6  6ED9               	movwf	fsr2l,c
  9913  001DC8  6ADA               	clrf	fsr2h,c
  9914  001DCA  C003  FFDE         	movff	_h_Tics,postinc2
  9915  001DCE  C004  FFDD         	movff	_h_Tics+1,postdec2
  9916  001DD2  0012               	return		;funcret
  9917  001DD4                     __end_of_TiResetTics:
  9918                           	callstack 0
  9919                           
  9920 ;; *************** function _TiGetTics *****************
  9921 ;; Defined at:
  9922 ;;		line 61 in file "TiTTimer.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  Handle          1    wreg     unsigned char 
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;  Handle          1    9[COMRAM] unsigned char 
  9927 ;;  actual          2   10[COMRAM] volatile unsigned int 
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  2    5[COMRAM] int 
  9930 ;; Registers used:
  9931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMRAM   BANK0   BANK1
  9937 ;;      Params:         2       0       0
  9938 ;;      Locals:         3       0       0
  9939 ;;      Temps:          2       0       0
  9940 ;;      Totals:         7       0       0
  9941 ;;Total ram usage:        7 bytes
  9942 ;; Hardware stack levels used: 1
  9943 ;; Hardware stack levels required when called: 2
  9944 ;; This function calls:
  9945 ;;		Nothing
  9946 ;; This function is called by:
  9947 ;;		_Espera
  9948 ;;		_WaitForBusy
  9949 ;;		_SMotor
  9950 ;;		_TeTeclat
  9951 ;;		_menu
  9952 ;;		_motorAltaveu
  9953 ;;		_GLCDMotor
  9954 ;;		_motorHora
  9955 ;;		_motorSIO
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           	psect	text81
  9960  001CBE                     __ptext81:
  9961                           	callstack 0
  9962  001CBE                     _TiGetTics:
  9963                           	callstack 27
  9964                           
  9965                           ;incstack = 0
  9966                           ;TiGetTics@Handle stored from wreg
  9967  001CBE  6E6B               	movwf	TiGetTics@Handle^0,c
  9968                           
  9969                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  9970  001CC0  C003  F06C         	movff	_h_Tics,TiGetTics@actual	;volatile
  9971  001CC4  C004  F06D         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  9972                           
  9973                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  9974  001CC8  506B               	movf	TiGetTics@Handle^0,w,c
  9975  001CCA  0D03               	mullw	3
  9976  001CCC  50F3               	movf	243,w,c
  9977  001CCE  0FA8               	addlw	low _s_Timers
  9978  001CD0  6ED9               	movwf	fsr2l,c
  9979  001CD2  6ADA               	clrf	fsr2h,c
  9980  001CD4  CFDE F069          	movff	postinc2,??_TiGetTics
  9981  001CD8  CFDD F06A          	movff	postdec2,??_TiGetTics+1
  9982  001CDC  5069               	movf	??_TiGetTics^0,w,c
  9983  001CDE  5C6C               	subwf	TiGetTics@actual^0,w,c	;volatile
  9984  001CE0  6E67               	movwf	?_TiGetTics^0,c
  9985  001CE2  506A               	movf	(??_TiGetTics+1)^0,w,c
  9986  001CE4  586D               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  9987  001CE6  6E68               	movwf	(?_TiGetTics+1)^0,c
  9988  001CE8  0012               	return		;funcret
  9989  001CEA                     __end_of_TiGetTics:
  9990                           	callstack 0
  9991                           
  9992 ;; *************** function _GLCDInit *****************
  9993 ;; Defined at:
  9994 ;;		line 26 in file "GestioLCD.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;		None
  9997 ;; Auto vars:     Size  Location     Type
  9998 ;;		None
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  1    wreg      void 
 10001 ;; Registers used:
 10002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMRAM   BANK0   BANK1
 10008 ;;      Params:         0       0       0
 10009 ;;      Locals:         0       0       0
 10010 ;;      Temps:          0       0       0
 10011 ;;      Totals:         0       0       0
 10012 ;;Total ram usage:        0 bytes
 10013 ;; Hardware stack levels used: 1
 10014 ;; Hardware stack levels required when called: 3
 10015 ;; This function calls:
 10016 ;;		_TiGetTimer
 10017 ;; This function is called by:
 10018 ;;		_main
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text82
 10023  001F26                     __ptext82:
 10024                           	callstack 0
 10025  001F26                     _GLCDInit:
 10026                           	callstack 27
 10027                           
 10028                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 10029                           
 10030                           ;incstack = 0
 10031  001F26  EC76  F00D         	call	_TiGetTimer	;wreg free
 10032  001F2A  6E1A               	movwf	_timerGLCD^0,c
 10033  001F2C  0012               	return		;funcret
 10034  001F2E                     __end_of_GLCDInit:
 10035                           	callstack 0
 10036                           
 10037 ;; *************** function _TiGetTimer *****************
 10038 ;; Defined at:
 10039 ;;		line 70 in file "TiTTimer.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;		None
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;		None
 10044 ;; Return value:  Size  Location     Type
 10045 ;;                  1    wreg      unsigned char 
 10046 ;; Registers used:
 10047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10048 ;; Tracked objects:
 10049 ;;		On entry : 0/0
 10050 ;;		On exit  : 0/0
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMRAM   BANK0   BANK1
 10053 ;;      Params:         0       0       0
 10054 ;;      Locals:         0       0       0
 10055 ;;      Temps:          1       0       0
 10056 ;;      Totals:         1       0       0
 10057 ;;Total ram usage:        1 bytes
 10058 ;; Hardware stack levels used: 1
 10059 ;; Hardware stack levels required when called: 2
 10060 ;; This function calls:
 10061 ;;		Nothing
 10062 ;; This function is called by:
 10063 ;;		_LcInit
 10064 ;;		_Sinit
 10065 ;;		_TeInit
 10066 ;;		_Minit
 10067 ;;		_initAltaveu
 10068 ;;		_GLCDInit
 10069 ;;		_initHora
 10070 ;;		_initSIO
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           	psect	text83
 10075  001AEC                     __ptext83:
 10076                           	callstack 0
 10077  001AEC                     _TiGetTimer:
 10078                           	callstack 27
 10079                           
 10080                           ;TiTTimer.c: 74:     counter=0;
 10081                           
 10082                           ;incstack = 0
 10083  001AEC  0E00               	movlw	0
 10084  001AEE  6E2B               	movwf	_counter^0,c
 10085                           
 10086                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10087  001AF0  D007               	goto	l4106
 10088  001AF2                     l4098:
 10089                           
 10090                           ;TiTTimer.c: 76:         counter++;
 10091  001AF2  2A2B               	incf	_counter^0,f,c
 10092                           
 10093                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10094  001AF4  0E08               	movlw	8
 10095  001AF6  182B               	xorwf	_counter^0,w,c
 10096  001AF8  A4D8               	btfss	status,2,c
 10097  001AFA  D002               	goto	l4106
 10098  001AFC  0EFF               	movlw	255
 10099  001AFE  0012               	return	
 10100  001B00                     l4106:
 10101                           
 10102                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10103  001B00  502B               	movf	_counter^0,w,c
 10104  001B02  0D03               	mullw	3
 10105  001B04  50F3               	movf	243,w,c
 10106  001B06  0FAA               	addlw	low (_s_Timers+2)
 10107  001B08  6ED9               	movwf	fsr2l,c
 10108  001B0A  6ADA               	clrf	fsr2h,c
 10109  001B0C  04DE               	decf	postinc2,w,c
 10110  001B0E  B4D8               	btfsc	status,2,c
 10111  001B10  D7F0               	goto	l4098
 10112                           
 10113                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10114  001B12  502B               	movf	_counter^0,w,c
 10115  001B14  0D03               	mullw	3
 10116  001B16  50F3               	movf	243,w,c
 10117  001B18  0FAA               	addlw	low (_s_Timers+2)
 10118  001B1A  6ED9               	movwf	fsr2l,c
 10119  001B1C  6ADA               	clrf	fsr2h,c
 10120  001B1E  0E01               	movlw	1
 10121  001B20  6EDF               	movwf	indf2,c
 10122                           
 10123                           ;TiTTimer.c: 80:     return (counter);
 10124  001B22  502B               	movf	_counter^0,w,c
 10125  001B24  0012               	return		;funcret
 10126  001B26                     __end_of_TiGetTimer:
 10127                           	callstack 0
 10128                           
 10129 ;; *************** function _CtoA *****************
 10130 ;; Defined at:
 10131 ;;		line 24 in file "CtoA.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;		None
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;		None
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  1    wreg      void 
 10138 ;; Registers used:
 10139 ;;		wreg, status,2, status,0
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/1
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMRAM   BANK0   BANK1
 10145 ;;      Params:         0       0       0
 10146 ;;      Locals:         0       0       0
 10147 ;;      Temps:          0       0       0
 10148 ;;      Totals:         0       0       0
 10149 ;;Total ram usage:        0 bytes
 10150 ;; Hardware stack levels used: 1
 10151 ;; Hardware stack levels required when called: 2
 10152 ;; This function calls:
 10153 ;;		Nothing
 10154 ;; This function is called by:
 10155 ;;		_main
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           	psect	text84
 10160  001BCA                     __ptext84:
 10161                           	callstack 0
 10162  001BCA                     _CtoA:
 10163                           	callstack 28
 10164                           
 10165                           ;CtoA.c: 25:     if (convertir != 250) {
 10166                           
 10167                           ;incstack = 0
 10168  001BCA  0EFA               	movlw	250
 10169  001BCC  1848               	xorwf	_convertir^0,w,c
 10170  001BCE  B4D8               	btfsc	status,2,c
 10171  001BD0  0012               	return	
 10172                           
 10173                           ;CtoA.c: 26:     if (convertir != 0){
 10174  001BD2  5048               	movf	_convertir^0,w,c
 10175  001BD4  B4D8               	btfsc	status,2,c
 10176  001BD6  D011               	goto	l3336
 10177                           
 10178                           ;CtoA.c: 27:      stringScore[2]++;
 10179  001BD8  2A60               	incf	(_stringScore+2)^0,f,c
 10180                           
 10181                           ;CtoA.c: 28:      if (stringScore[2] == 58) {
 10182  001BDA  0E3A               	movlw	58
 10183  001BDC  1860               	xorwf	(_stringScore+2)^0,w,c
 10184  001BDE  A4D8               	btfss	status,2,c
 10185  001BE0  D003               	goto	l3328
 10186                           
 10187                           ;CtoA.c: 29:       stringScore[2] = '0';
 10188  001BE2  0E30               	movlw	48
 10189  001BE4  6E60               	movwf	(_stringScore+2)^0,c
 10190                           
 10191                           ;CtoA.c: 30:       stringScore[1]++;
 10192  001BE6  2A5F               	incf	(_stringScore+1)^0,f,c
 10193  001BE8                     l3328:
 10194                           
 10195                           ;CtoA.c: 32:      if (stringScore[1] == 58) {
 10196  001BE8  0E3A               	movlw	58
 10197  001BEA  185F               	xorwf	(_stringScore+1)^0,w,c
 10198  001BEC  A4D8               	btfss	status,2,c
 10199  001BEE  D003               	goto	l3334
 10200                           
 10201                           ;CtoA.c: 33:       stringScore[1] = '0';
 10202  001BF0  0E30               	movlw	48
 10203  001BF2  6E5F               	movwf	(_stringScore+1)^0,c
 10204                           
 10205                           ;CtoA.c: 34:       stringScore[0]++;
 10206  001BF4  2A5E               	incf	_stringScore^0,f,c
 10207  001BF6                     l3334:
 10208                           
 10209                           ;CtoA.c: 36:      convertir--;
 10210  001BF6  0648               	decf	_convertir^0,f,c
 10211                           
 10212                           ;CtoA.c: 37:     } else {
 10213  001BF8  0012               	return	
 10214  001BFA                     l3336:
 10215                           
 10216                           ;CtoA.c: 38:      convertir = 250;
 10217  001BFA  0EFA               	movlw	250
 10218  001BFC  6E48               	movwf	_convertir^0,c
 10219  001BFE  0012               	return		;funcret
 10220  001C00                     __end_of_CtoA:
 10221                           	callstack 0
 10222                           
 10223 ;; *************** function _high_rsi *****************
 10224 ;; Defined at:
 10225 ;;		line 22 in file "main.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;		None
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;		None
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMRAM   BANK0   BANK1
 10239 ;;      Params:         0       0       0
 10240 ;;      Locals:         0       0       0
 10241 ;;      Temps:          4       0       0
 10242 ;;      Totals:         4       0       0
 10243 ;;Total ram usage:        4 bytes
 10244 ;; Hardware stack levels used: 1
 10245 ;; Hardware stack levels required when called: 1
 10246 ;; This function calls:
 10247 ;;		__TiRSITimer
 10248 ;; This function is called by:
 10249 ;;		Interrupt level 2
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253                           	psect	intcode
 10254  000008                     __pintcode:
 10255                           	callstack 0
 10256  000008                     _high_rsi:
 10257                           	callstack 24
 10258                           
 10259                           ;incstack = 0
 10260  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10261  00000A  CFD9 F063          	movff	fsr2l,??_high_rsi
 10262  00000E  CFDA F064          	movff	fsr2h,??_high_rsi+1
 10263  000012  CFF3 F065          	movff	prodl,??_high_rsi+2
 10264  000016  CFF4 F066          	movff	prodh,??_high_rsi+3
 10265  00001A  ECC0  F00C         	call	__TiRSITimer	;wreg free
 10266  00001E  C066  FFF4         	movff	??_high_rsi+3,prodh
 10267  000022  C065  FFF3         	movff	??_high_rsi+2,prodl
 10268  000026  C064  FFDA         	movff	??_high_rsi+1,fsr2h
 10269  00002A  C063  FFD9         	movff	??_high_rsi,fsr2l
 10270  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10271  000030  0011               	retfie		f
 10272  000032                     __end_of_high_rsi:
 10273                           	callstack 0
 10274                           
 10275 ;; *************** function __TiRSITimer *****************
 10276 ;; Defined at:
 10277 ;;		line 37 in file "TiTTimer.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;		None
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;		None
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  1    wreg      void 
 10284 ;; Registers used:
 10285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMRAM   BANK0   BANK1
 10291 ;;      Params:         0       0       0
 10292 ;;      Locals:         0       0       0
 10293 ;;      Temps:          1       0       0
 10294 ;;      Totals:         1       0       0
 10295 ;;Total ram usage:        1 bytes
 10296 ;; Hardware stack levels used: 1
 10297 ;; This function calls:
 10298 ;;		Nothing
 10299 ;; This function is called by:
 10300 ;;		_high_rsi
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           	psect	text86
 10305  001980                     __ptext86:
 10306                           	callstack 0
 10307  001980                     __TiRSITimer:
 10308                           	callstack 24
 10309                           
 10310                           ;TiTTimer.c: 39:     TMR0H = 223;
 10311                           
 10312                           ;incstack = 0
 10313  001980  0EDF               	movlw	223
 10314  001982  6ED7               	movwf	215,c	;volatile
 10315                           
 10316                           ;TiTTimer.c: 40:     TMR0L = 148;
 10317  001984  0E94               	movlw	148
 10318  001986  6ED6               	movwf	214,c	;volatile
 10319                           
 10320                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 10321  001988  94F2               	bcf	242,2,c	;volatile
 10322                           
 10323                           ;TiTTimer.c: 42:     h_Tics++;
 10324  00198A  4A03               	infsnz	_h_Tics^0,f,c
 10325  00198C  2A04               	incf	(_h_Tics+1)^0,f,c
 10326                           
 10327                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 10328  00198E  0E48               	movlw	72
 10329  001990  5C03               	subwf	_h_Tics^0,w,c
 10330  001992  0EEE               	movlw	238
 10331  001994  5804               	subwfb	(_h_Tics+1)^0,w,c
 10332  001996  A0D8               	btfss	status,0,c
 10333  001998  0012               	return	
 10334                           
 10335                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 10336  00199A  0E00               	movlw	0
 10337  00199C  6E2B               	movwf	_counter^0,c
 10338  00199E                     i2l4350:
 10339  00199E  0E07               	movlw	7
 10340  0019A0  642B               	cpfsgt	_counter^0,c
 10341  0019A2  D001               	goto	i2l4354
 10342  0019A4  D015               	goto	i2l4362
 10343  0019A6                     i2l4354:
 10344                           
 10345                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 10346  0019A6  502B               	movf	_counter^0,w,c
 10347  0019A8  0D03               	mullw	3
 10348  0019AA  50F3               	movf	243,w,c
 10349  0019AC  0FAA               	addlw	low (_s_Timers+2)
 10350  0019AE  6ED9               	movwf	fsr2l,c
 10351  0019B0  6ADA               	clrf	fsr2h,c
 10352  0019B2  04DE               	decf	postinc2,w,c
 10353  0019B4  A4D8               	btfss	status,2,c
 10354  0019B6  D00A               	goto	i2l4358
 10355                           
 10356                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 10357  0019B8  502B               	movf	_counter^0,w,c
 10358  0019BA  0D03               	mullw	3
 10359  0019BC  50F3               	movf	243,w,c
 10360  0019BE  0FA8               	addlw	low _s_Timers
 10361  0019C0  6ED9               	movwf	fsr2l,c
 10362  0019C2  6ADA               	clrf	fsr2h,c
 10363  0019C4  5003               	movf	_h_Tics^0,w,c
 10364  0019C6  5EDE               	subwf	postinc2,f,c
 10365  0019C8  5004               	movf	(_h_Tics+1)^0,w,c
 10366  0019CA  5ADD               	subwfb	postdec2,f,c
 10367  0019CC                     i2l4358:
 10368                           
 10369                           ;TiTTimer.c: 50:         }
 10370  0019CC  2A2B               	incf	_counter^0,f,c
 10371  0019CE  D7E7               	goto	i2l4350
 10372  0019D0                     i2l4362:
 10373                           
 10374                           ;TiTTimer.c: 51:         h_Tics=0;
 10375  0019D0  0E00               	movlw	0
 10376  0019D2  6E04               	movwf	(_h_Tics+1)^0,c
 10377  0019D4  0E00               	movlw	0
 10378  0019D6  6E03               	movwf	_h_Tics^0,c
 10379  0019D8  0012               	return		;funcret
 10380  0019DA                     __end_of__TiRSITimer:
 10381                           	callstack 0
 10382                           
 10383                           	psect	rparam
 10384  0000                     
 10385                           	psect	temp
 10386  00007A                     btemp:
 10387                           	callstack 0
 10388  00007A                     	ds	1
 10389  0000                     int$flags	set	btemp
 10390  0000                     wtemp8	set	btemp+1
 10391  0000                     ttemp5	set	btemp+1
 10392  0000                     ttemp6	set	btemp+4
 10393  0000                     ttemp7	set	btemp+8
 10394                           
 10395                           	psect	idloc
 10396                           
 10397                           ;Config register IDLOC0 @ 0x200000
 10398                           ;	unspecified, using default values
 10399  200000                     	org	2097152
 10400  200000  FF                 	db	255
 10401                           
 10402                           ;Config register IDLOC1 @ 0x200001
 10403                           ;	unspecified, using default values
 10404  200001                     	org	2097153
 10405  200001  FF                 	db	255
 10406                           
 10407                           ;Config register IDLOC2 @ 0x200002
 10408                           ;	unspecified, using default values
 10409  200002                     	org	2097154
 10410  200002  FF                 	db	255
 10411                           
 10412                           ;Config register IDLOC3 @ 0x200003
 10413                           ;	unspecified, using default values
 10414  200003                     	org	2097155
 10415  200003  FF                 	db	255
 10416                           
 10417                           ;Config register IDLOC4 @ 0x200004
 10418                           ;	unspecified, using default values
 10419  200004                     	org	2097156
 10420  200004  FF                 	db	255
 10421                           
 10422                           ;Config register IDLOC5 @ 0x200005
 10423                           ;	unspecified, using default values
 10424  200005                     	org	2097157
 10425  200005  FF                 	db	255
 10426                           
 10427                           ;Config register IDLOC6 @ 0x200006
 10428                           ;	unspecified, using default values
 10429  200006                     	org	2097158
 10430  200006  FF                 	db	255
 10431                           
 10432                           ;Config register IDLOC7 @ 0x200007
 10433                           ;	unspecified, using default values
 10434  200007                     	org	2097159
 10435  200007  FF                 	db	255
 10436                           
 10437                           	psect	config
 10438                           
 10439                           ; Padding undefined space
 10440  300000                     	org	3145728
 10441  300000  FF                 	db	255
 10442                           
 10443                           ;Config register CONFIG1H @ 0x300001
 10444                           ;	Oscillator
 10445                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 10446                           ;	Fail-Safe Clock Monitor Enable bit
 10447                           ;	FCMEN = 0x0, unprogrammed default
 10448                           ;	Internal/External Oscillator Switchover bit
 10449                           ;	IESO = 0x0, unprogrammed default
 10450  300001                     	org	3145729
 10451  300001  06                 	db	6
 10452                           
 10453                           ;Config register CONFIG2L @ 0x300002
 10454                           ;	unspecified, using default values
 10455                           ;	Power-up Timer Enable bit
 10456                           ;	PWRT = 0x1, unprogrammed default
 10457                           ;	Brown-out Reset Enable bits
 10458                           ;	BOR = 0x3, unprogrammed default
 10459                           ;	Brown-out Reset Voltage bits
 10460                           ;	BORV = 0x3, unprogrammed default
 10461  300002                     	org	3145730
 10462  300002  1F                 	db	31
 10463                           
 10464                           ;Config register CONFIG2H @ 0x300003
 10465                           ;	Watchdog Timer Enable bit
 10466                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10467                           ;	Watchdog Timer Postscale Select bits
 10468                           ;	WDTPS = 0xF, unprogrammed default
 10469  300003                     	org	3145731
 10470  300003  1E                 	db	30
 10471                           
 10472                           ; Padding undefined space
 10473  300004                     	org	3145732
 10474  300004  FF                 	db	255
 10475                           
 10476                           ;Config register CONFIG3H @ 0x300005
 10477                           ;	CCP2 MUX bit
 10478                           ;	CCP2MX = 0x1, unprogrammed default
 10479                           ;	PORTB A/D Enable bit
 10480                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10481                           ;	Low-Power Timer1 Oscillator Enable bit
 10482                           ;	LPT1OSC = 0x0, unprogrammed default
 10483                           ;	MCLR Pin Enable bit
 10484                           ;	MCLRE = 0x1, unprogrammed default
 10485  300005                     	org	3145733
 10486  300005  81                 	db	129
 10487                           
 10488                           ;Config register CONFIG4L @ 0x300006
 10489                           ;	Stack Full/Underflow Reset Enable bit
 10490                           ;	STVREN = 0x1, unprogrammed default
 10491                           ;	Single-Supply ICSP Enable bit
 10492                           ;	LVP = OFF, Single-Supply ICSP disabled
 10493                           ;	Boot Block Size Select bits
 10494                           ;	BBSIZ = 0x0, unprogrammed default
 10495                           ;	Extended Instruction Set Enable bit
 10496                           ;	XINST = 0x0, unprogrammed default
 10497                           ;	Background Debugger Enable bit
 10498                           ;	DEBUG = 0x1, unprogrammed default
 10499  300006                     	org	3145734
 10500  300006  81                 	db	129
 10501                           
 10502                           ; Padding undefined space
 10503  300007                     	org	3145735
 10504  300007  FF                 	db	255
 10505                           
 10506                           ;Config register CONFIG5L @ 0x300008
 10507                           ;	unspecified, using default values
 10508                           ;	Code Protection bit
 10509                           ;	CP0 = 0x1, unprogrammed default
 10510                           ;	Code Protection bit
 10511                           ;	CP1 = 0x1, unprogrammed default
 10512  300008                     	org	3145736
 10513  300008  03                 	db	3
 10514                           
 10515                           ;Config register CONFIG5H @ 0x300009
 10516                           ;	unspecified, using default values
 10517                           ;	Boot Block Code Protection bitProtect Boot
 10518                           ;	CPB = 0x1, unprogrammed default
 10519                           ;	Data EEPROM Code Protection bit
 10520                           ;	CPD = 0x1, unprogrammed default
 10521  300009                     	org	3145737
 10522  300009  C0                 	db	192
 10523                           
 10524                           ;Config register CONFIG6L @ 0x30000A
 10525                           ;	unspecified, using default values
 10526                           ;	Write Protection bit
 10527                           ;	WRT0 = 0x1, unprogrammed default
 10528                           ;	Write Protection bit
 10529                           ;	WRT1 = 0x1, unprogrammed default
 10530  30000A                     	org	3145738
 10531  30000A  03                 	db	3
 10532                           
 10533                           ;Config register CONFIG6H @ 0x30000B
 10534                           ;	unspecified, using default values
 10535                           ;	Configuration Register Write Protection bit
 10536                           ;	WRTC = 0x1, unprogrammed default
 10537                           ;	Boot Block Write Protection bit
 10538                           ;	WRTB = 0x1, unprogrammed default
 10539                           ;	Data EEPROM Write Protection bit
 10540                           ;	WRTD = 0x1, unprogrammed default
 10541  30000B                     	org	3145739
 10542  30000B  E0                 	db	224
 10543                           
 10544                           ;Config register CONFIG7L @ 0x30000C
 10545                           ;	unspecified, using default values
 10546                           ;	Table Read Protection bit
 10547                           ;	EBTR0 = 0x1, unprogrammed default
 10548                           ;	Table Read Protection bit
 10549                           ;	EBTR1 = 0x1, unprogrammed default
 10550  30000C                     	org	3145740
 10551  30000C  03                 	db	3
 10552                           
 10553                           ;Config register CONFIG7H @ 0x30000D
 10554                           ;	unspecified, using default values
 10555                           ;	Boot Block Table Read Protection bit
 10556                           ;	EBTRB = 0x1, unprogrammed default
 10557  30000D                     	org	3145741
 10558  30000D  40                 	db	64
 10559                           tosu	equ	0xFFF
 10560                           tosh	equ	0xFFE
 10561                           tosl	equ	0xFFD
 10562                           stkptr	equ	0xFFC
 10563                           pclatu	equ	0xFFB
 10564                           pclath	equ	0xFFA
 10565                           pcl	equ	0xFF9
 10566                           tblptru	equ	0xFF8
 10567                           tblptrh	equ	0xFF7
 10568                           tblptrl	equ	0xFF6
 10569                           tablat	equ	0xFF5
 10570                           prodh	equ	0xFF4
 10571                           prodl	equ	0xFF3
 10572                           indf0	equ	0xFEF
 10573                           postinc0	equ	0xFEE
 10574                           postdec0	equ	0xFED
 10575                           preinc0	equ	0xFEC
 10576                           plusw0	equ	0xFEB
 10577                           fsr0h	equ	0xFEA
 10578                           fsr0l	equ	0xFE9
 10579                           wreg	equ	0xFE8
 10580                           indf1	equ	0xFE7
 10581                           postinc1	equ	0xFE6
 10582                           postdec1	equ	0xFE5
 10583                           preinc1	equ	0xFE4
 10584                           plusw1	equ	0xFE3
 10585                           fsr1h	equ	0xFE2
 10586                           fsr1l	equ	0xFE1
 10587                           bsr	equ	0xFE0
 10588                           indf2	equ	0xFDF
 10589                           postinc2	equ	0xFDE
 10590                           postdec2	equ	0xFDD
 10591                           preinc2	equ	0xFDC
 10592                           plusw2	equ	0xFDB
 10593                           fsr2h	equ	0xFDA
 10594                           fsr2l	equ	0xFD9
 10595                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    145
    Data        69
    BSS         285
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     21     121
    BANK0           128      2      75
    BANK1           256      0     184

Pointer List with Targets:

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 4
		 -> stringScore(COMRAM[4]), 

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[4]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[4]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_motorJoc
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_GLCDMotor
    _main->_menu
    _main->_motorSIO

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   30660
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    7632
                                              0 BANK0      2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    3004
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    8261
                                              0 BANK0      2     2      0
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
                    _checkHoraAcabat
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1993
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1201
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    7595
                                              0 BANK0      2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1993
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1238
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2636
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1661
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
     _checkHoraAcabat
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      2      4B       4       58.6%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     15      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17C       7        0.0%
DATA                 0      0     17C       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu May 05 11:06:56 2022

               TiResetTics@Handle 0067                  _loginNOTRegister 03C6  
                               _i 0021                                 _j 0020  
                UgetUserName@quin 0069         ??_UcheckExistsNotFinished 0067  
          __end_of_compareStrings 1A72                               l721 1C82  
                             l652 1D2E                               l661 15AE  
                             l910 132E                               l902 125E  
                             l911 12B8                               l903 1278  
                             l671 15FE                               l495 0342  
                             l912 12D2                               l752 14E2  
                             l833 081C                               l905 129C  
                             l673 1604                               l914 12F6  
                             l666 15C2                               l658 15A0  
                             l668 15C8                               l845 08B4  
                             l693 0F80                               l694 0F90  
                             l863 0A60                               l696 0F9C  
                             l865 0A90                               u230 1704  
                             u250 1720                               u308 1754  
                             u270 173A                               u248 1706  
                             u290 1752                               u268 1722  
                             u288 173C                               _tmp 002A  
                ??_CantaPartBaixa 0067                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 0054  
              __size_of_GLCDMotor 03D8                              l1054 143C  
                            l2202 1B90                              l1174 0CCC  
                            l1166 0C2E                              l1159 0C00  
                            l2218 1E52                              l2164 1E5E  
                            l2342 1C68                              l2190 1B78  
                            l2184 1B6C                              l4106 1B00  
                            l4034 1A84                              l4060 1D62  
                            l4140 1A10                              l2196 1B84  
                            l3334 1BF6                              l4222 1E6A  
                            l3328 1BE8                              l3336 1BFA  
                            l2560 15BE                              l4066 1AC2  
                            l4146 1A20                              l4138 1A06  
                            l4410 0DCC                              l6010 0388  
                            l6002 0360                              l4156 1E9A  
                            l4412 0DD2                              l6020 03A8  
                            l5204 1546                              l4422 0DFC  
                            l2590 1640                              l4262 1A4A  
                            l5230 0F96                              l5302 10CE  
                            l6030 03D0                              l2904 12EA  
                            l4512 0F16                              l4504 0EFC  
                            l4440 0E3A                              l4256 1A2E  
                            l5240 0FD2                              l4184 1E76  
                            l6200 0594                              l6112 04BC  
                            l5216 1572                              l4098 1AF2  
                            l4522 0F2E                              l4434 0E22  
                            l4370 1B42                              l5250 0FE6  
                            l5234 0FA6                              l6130 04C8  
                            l6106 049E                              l6034 03DA  
                            l6018 03A2                              l4292 136C  
                            l5244 0FD6                              l6212 05D2  
                            l6060 041E                              l6028 03CA  
                            l5180 14F4                              l4604 14AE  
                            l4612 14BC                              l2918 130E  
                            l4518 0F26                              l4462 0E80  
                            l4454 0E6C                              l4542 0F42  
                            l5510 114C                              l4374 1B4A  
                            l5262 1032                              l6150 04F2  
                            l6142 04E0                              l6118 04C2  
                            l6070 0446                              l6062 0424  
                            l6046 03F2                              l5182 14FA  
                            l2880 12B4                              l2928 1312  
                            l4448 0E56                              l5512 1150  
                            l5504 113C                              l5248 0FE0  
                            l6232 060C                              l6208 05BA  
                            l6072 044C                              l4560 1428  
                            l6402 08A4                              l2866 1290  
                            l2858 1274                              l4482 0ECA  
                            l4474 0EAC                              l4466 0E8C  
                            l4394 0D98                              l4386 0D84  
                            l5266 1044                              l6306 06B0  
                            l6250 0632                              l6170 0532  
                            l5532 1180                              l5516 115C  
                            l6324 06DC                              l6316 06CE  
                            l6076 0456                              l6332 06EA  
                            l5196 1518                              l5188 1508  
                            l6510 0A9E                              l6502 0A8A  
                            l4486 0ECE                              l5526 1172  
                            l5518 1162                              l5294 10C2  
                            l5278 109C                              l6158 0504  
                            l4582 1462                              l6520 0ABA  
                            l6432 08EE                              l6360 07CE  
                            l6344 078A                              l2896 12CE  
                            l5552 11BC                              l5544 11A4  
                            l5288 10B4                              l6184 0560  
                            l6088 046E                              l4760 167E  
                            l4744 164C                              l4584 1468  
                            l4576 1452                              l6514 0AA6  
                            l6442 0936                              l6354 07C0  
                            l6530 0B04                              l4498 0EF2  
                            l5538 1196                              l6282 0676  
                            l6266 0652                              l6524 0AE0  
                            l5572 120E                              l5564 11FA  
                            l5548 11B0                              l4772 169A  
                            l4596 1498                              l6438 0914  
                            l6374 082A                              l5558 11EC  
                            l6294 068A                              l6278 0672  
                            l6198 058E                              l4782 16BA  
                            l4766 168C                              l4790 16CA  
                            l6464 09AA                              l6448 0960  
                            l6368 07FA                              l5568 1202  
                            l5904 0C3E                              l6458 099A  
                            l5578 121A                              l4794 16D0  
                            l5914 0C74                              l5906 0C44  
                            l6570 1820                              l6396 0890  
                            l6388 0882                              l5924 0CAC  
                            l6494 0A6A                              l6486 0A3A  
                            l6478 0A0A                              l5942 0D06  
                            l5934 0CDE                              l5870 0BD2  
                            l5838 0B62                              l5864 0BC2  
                            l5856 0B9E                              l5848 0B7E  
                            l5954 0D32                              l5972 02FA  
                            l5868 0BCC                              l5990 0336  
                            l5982 031E                              l5966 02E6  
                            l5878 0BE2                              l5988 0330  
                            STR_1 02DB                              STR_2 02D4  
                            STR_3 02BB                              STR_4 02A2  
                            STR_5 0292                              STR_6 02CC  
                            STR_7 02AF                              STR_8 02C4  
                            u3000 18E2                              u3020 18FC  
                            u3100 1894                              u3040 1914  
                            u3120 18AC                              _LATD 000F8C  
                            u3018 18E4                              u3060 185E  
                            u3300 1A56                              u3038 18FE  
                            u3118 1896                              u3310 141A  
                            u3080 187A                              u3058 1916  
                            u3138 18AE                              u3330 1946  
                            u3340 196E                              u3078 1860  
                            u3337 193C                              u3098 187C  
                            u3347 1964                              u5300 1102  
                            u3550 0E66                              u3470 0DF0  
                            u5310 110C                              u5320 111C  
                            u5330 112C                              u5316 110E  
                            u5308 1104                              u6220 069A  
                            u3670 0F04                              u3590 0E9C  
                            u5326 111E                              u6230 06A2  
                            u6320 07CA                              u3680 0F1E  
                            u5336 112E                              u4800 0FA0  
                            u5600 0C0C                              u2980 18C6  
                            u6420 08AC                              u5630 0C8A  
                            u5900 047E                              u2998 18C8  
                            u6390 088A                              u5830 0402  
                            u5590 0C08                              u5920 04B2  
                            u5930 04B4                              _CtoA 1BCA  
                 ??_SsetNovaTecla 0067            __end_of_SIOcheckKrebut 1E56  
                            _cap1 03BF                              _Rows 0037  
                            _cap2 03BE                              _main 17DA  
                            _hora 0058                              _menu 02E4  
                            _nota 001E                   __end_of_HJugant 1F34  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 007A                   __end_of_JJuguem 1ED6  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 1D5A                              start 0032  
                 __end_of_CantaIR 1C64                      ?_initAltaveu 0062  
                   LcInit@columns 0072                      ___param_bank 000000  
                     _stringScore 005E                  __end_of_GLCDInit 1F2E  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 1F54  
                           ?_CtoA 0062                __size_of_CToAReset 000E  
                     Espera@Timer 0071                             ?_main 0062  
         __size_of_escriureEEPROM 002E                             ?_menu 0062  
                           _EEADR 000FA9                     ??_TiInitTimer 0067  
                           _T0CON 000FD5                   ?_compareStrings 0067  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 1922  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 0062                             _TXREG 000FAD  
                           _SMSon 1F34                             _TXSTA 000FAC  
                     _MNovaLletra 1F0E                             _Minit 1F16  
                __end_of_HGetTime 1F54                             _Sinit 1F06  
                           _Timer 0033                             _Uinit 1596  
                 __end_of_initSIO 1EDE                             _rebut 0009  
                           _s_ptr 0005                             _nou_s 03C8  
           __end_of_JoystickMotor 1346                   _HActualitzaHora 1B94  
     __size_of_escriureCharEEPROM 0024                    __pbitbssCOMRAM 03B8  
                           tablat 000FF5                       _LcNewString 1E86  
                   ??_TiResetTics 0067                   ?_SIOcheckKrebut 0062  
                           ttemp5 007B                             ttemp6 007E  
                           ttemp7 0082                             status 000FD8  
                ?_checkHoraAcabat 0062                             wtemp8 007B  
   __size_of_UcheckExistsGetError 0008                __size_of_HNouSegon 000C  
                __end_of_LcGotoXY 1AEC              CToAConverteix@numero 0067  
                __end_of_LcLliure 1E9E                     ??__TiRSITimer 0062  
                      _TiGetTimer 1AEC           EscriuPrimeraOrdre@ordre 0068  
                    __end_of_CtoA 1C00                  __end_of_JendGame 1F78  
                     ?_SIOendGame 0062                   __initialization 1762  
              __size_of_CantaData 0032                      __end_of_main 1852  
          __end_of_HClearNouSegon 1F58                      __end_of_menu 0788  
         ?_SIOHaAcabatPuntuacions 0062             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 0062                 __end_of_GLCDMotor 0B60  
                __end_of_TeTeclat 125C                     _indexNextUser 0023  
                          ??_CtoA 0067                            ??_main 0077  
                          ??_menu 00C9                __size_of_LcPutChar 0052  
                   __activetblptr 000002                     _ultimaTeclaAD 0010  
          __size_of_JnovaDireccio 0008                  GLCDMotor@length1 0012  
                GLCDMotor@length2 0011                        _JnovaTecla 1EBE  
                          ?_LcLCD 0062                            ?_SMSon 0062  
                    ?_CToAobtenir 0067                            ?_Minit 0062  
                          ?_Sinit 0062                            ?_Uinit 0062  
              __size_of_NoFerMenu 0004                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
             __end_of_TiInitTimer 1B5E                            _ADRESH 000FC4  
                          _EEDATA 000FA8                         ??_HJugant 0067  
                          _EECON2 000FA7                __size_of_URegister 0004  
              __size_of_HnoJugant 0004                         ??_JJuguem 0067  
              __size_of_SiFerMenu 0004          ??_escriure2usuarisStruct 0067  
                       ??_LcClear 0075                         ??_CantaIR 0069  
                          i2l4350 199E                            i2l4362 19D0  
                          i2l4354 19A6                            i2l4358 19CC  
                  LcGotoXY@Fisics 0070                    LcGotoXY@Column 0074  
                   ??_WaitForBusy 006E                __size_of_TiGetTics 002C  
                          _SPBRGH 000FB0                    _sumaPulsacions 0032  
               __end_of_CToAReset 1E3E                            _SMSoff 1F3A  
              SIONovaDireccio@num 0067                            _LcInit 1346  
                    _MNouJoystick 1F1E                    _UgetNumUsuaris 1F5C  
                          _SMotor 0D82               escriureCharEEPROM@c 0068  
                          _TeInit 1EFE                            _Espera 1D5A  
                    _LcGotoXY$336 0072                            _Krebut 03B8  
  __end_of_SIOHaAcabatPuntuacions 1F70                            _RowAct 0035  
             __end_of_TiResetTics 1DD4                            Uinit@i 0069  
                          Uinit@j 006A                  __end_of_high_rsi 0032  
                          _h_Tics 0003                   ?_HClearNouSegon 0062  
                   ?_CToAHaAcabat 0062                  __end_of_initHora 1EE6  
                          _borram 03C3               __end_of__TiRSITimer 19DA  
                __end_of_menuList 0292                            clear_0 17A8  
                          clear_1 17B4                            clear_2 17C6  
                          _jugant 03BD                            _segons 000D  
                      _UenviaChar 1E20                            isa$std 000001  
                      UenviaPas@c 0068       __size_of_EscriuPrimeraOrdre 007A  
               __end_of_HNouSegon 1E62                         ??_initSIO 0068  
                    __pdataCOMRAM 0045            __size_of_CantaPartAlta 0068  
                __end_of_motorSIO 0D82                __size_of_UenviaPas 0010  
         __end_of_HActualitzaHora 1BCA                 ??_SIONovaDireccio 0067  
                __end_of_motorJoc 14E0                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  ??_CToAConverteix 0067  
                 _currentUsrIndex 0025               __size_of_SIOendGame 0004  
               __end_of_CantaData 1C32                      TeTeclat@cols 002D  
                       ?_GLCDInit 0062                     ?_UcheckExists 0062  
                      __accesstop 0080           __end_of__initialization 17CC  
          __end_of_UgetNumUsuaris 1F60                 __end_of_LcPutChar 1A2C  
                   _JnovaDireccio 1EC6                  JnovaDireccio@dir 0067  
                   ___rparam_used 000001                     __end_of_LcLCD 1980  
                     ?_TiGetTimer 0062                     __end_of_SMSon 1F3A  
               SIONovaTecla@tecla 0067                    __pcstackCOMRAM 0062  
                   __end_of_Minit 1F1E               __end_of_WaitForBusy 1AB2  
                   __end_of_Sinit 1F0E                     __end_of_Uinit 164A  
               __end_of_NoFerMenu 1F74                         ?_HGetTime 0067  
                    __pidataBANK0 1CEA                    ??_CToAHaAcabat 0067  
            __size_of_initAltaveu 0008                 __end_of_URegister 1F68  
               __end_of_HnoJugant 1F50                 __end_of_SiFerMenu 1F6C  
                  _escriureEEPROM 1C64                 __end_of_TiGetTics 1CEA  
                     _TiInitTimer 1B26                       ?_JnovaTecla 0062  
                         ??_LcLCD 0076                           ??_SMSon 0067  
                       ?_LcGotoXY 006F                         ?_LcLliure 0062  
                         ??_Minit 0068                           ??_Sinit 0068  
                 JnovaTecla@tecla 0067                           ??_Uinit 0067  
            __size_of_init_eusart 0016                         ?_JendGame 0062  
                  ??_UcheckExists 0067               MNouJoystick@posicio 0067  
                      ??_GLCDInit 0068           __size_of_GLCDMostraMenu 000C  
                      __pbssBANK0 00A8                        __pbssBANK1 0100  
 __size_of_escriure2usuarisStruct 002C                         ?_TeTeclat 0062  
                     _TiResetTics 1DBC                   ?_UgetNumUsuaris 0062  
                  ?_JnovaDireccio 0062                     ??_UmotorUsers 006C  
                   ?_JoystickInit 0062                           ?_SMSoff 0062  
                         ?_LcInit 0072                     _CantaPartAlta 18BA  
                         ?_SMotor 0062                           ?_TeInit 0062  
                         ?_Espera 006E                 __end_of_UenviaPas 1E20  
                     __TiRSITimer 1980               _indexNextUserStruct 0022  
                      ??_HGetTime 0069                     ?_UgetUserName 0067  
                ??_compareStrings 006A            __end_of_escriureEEPROM 1C92  
                         _BAUDCON 000FB8                       ?_UenviaChar 0067  
            __size_of_playAltaveu 0004                __size_of_motorHora 009E  
          __size_of_MsetNovaTecla 0008                           LcInit@i 0074  
                ?_HActualitzaHora 0067                        ??_LcGotoXY 0070  
                    ?_MNovaLletra 0062                        ??_LcLliure 0067  
                ??_SIOcheckKrebut 0067               __size_of_TiGetTimer 003A  
            __size_of_CToAobtenir 0004                        ??_JendGame 0067  
                         _HJugant 1F2E                         ?_high_rsi 0062  
                         _JJuguem 1ECE                           _LcClear 1D36  
                         _CantaIR 1C32                      ?_LcNewString 006A  
                  ??_JoystickInit 0067                         ?_initHora 0062  
                      ??_TeTeclat 006E                       _WaitForBusy 1A72  
                  ?_CantaPartAlta 0062                           _Columns 0036  
           __end_of_SsetNovaTecla 1EF6                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00E0                           __Hparam 0000  
                 __size_of_SMotor 01FC               __size_of_JnovaTecla 0008  
                 __size_of_TeInit 0008                   __size_of_Espera 0024  
                         __Lparam 0000                      ??_SIOendGame 0067  
                       ?_motorSIO 0062                         ?_motorJoc 0062  
                  ??_UgetUserName 0069               __end_of_UmotorUsers 10F8  
        ?_UcheckExistsNotFinished 0062                   ?_escriureEEPROM 0062  
                   ?_motorAltaveu 0062                      __psmallconst 0200  
          _escriure2usuarisStruct 1C92                           __pcinit 1762  
    __end_of_UcheckExistsGetError 1EBE                           _ferMenu 03C1  
                      _init_ports 1D7E                           __ramtop 0200  
                         __ptext0 17DA                           __ptext1 0B60  
                         __ptext2 1F40                           __ptext3 1F44  
                         __ptext4 1E3E                           __ptext5 1E30  
                         __ptext6 1426                           __ptext7 1B5E  
                         __ptext8 1F48                           __ptext9 1E4A  
                       _T0CONbits 000FD5                         _GLCDMotor 0788  
                       CantaIR@IR 0069                           _initSIO 1ED6  
                         _counter 002B                           _horaTmp 0041  
          conversorJoystick@direc 0067                       UenviaChar@c 0068  
      __end_of_escriureCharEEPROM 1D36                  LcNewString@new_s 006A  
                 WaitForBusy@Busy 006E                       Uinit@j_1156 006B  
                         _userPtr 0001                 GLCDMostraMenu@num 0067  
              __end_of_SIOendGame 1F4C                        ??_high_rsi 0063  
            __end_of_CToAHaAcabat 1F48              end_of_initialization 17CC  
                         _usuaris 0100                   ??_JnovaDireccio 0067  
                      ??_initHora 0068           __size_of_CantaPartBaixa 0068  
                   __Lmediumconst 0000                   TiGetTics@Handle 006B  
                   _MsetNovaTecla 1EF6               __size_of_UenviaChar 0010  
               _conversorJoystick 1B5E                 __end_of_motorHora 16E8  
                ??_HClearNouSegon 0067                        _novaLletra 0052  
              ?_conversorJoystick 0062                   _usuariActualSIO 004B  
                      ??_motorSIO 00C9                         _CToAReset 1E30  
                      ??_motorJoc 0075                   TiGetTics@actual 006C  
                   ?_SIONovaTecla 0062                        GLCDMotor@j 0017  
                         postdec1 000FE5                           postdec2 000FDD  
                 _SIONovaDireccio 1EAE                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 006E          __size_of_checkHoraAcabat 000C  
                      _numUsuaris 0024              __end_of_UcheckExists 1F64  
                   TeTeclat@files 002C               ??_conversorJoystick 0067  
              SIOStartGame@usuari 0067            __size_of_JoystickMotor 00EA  
                   TeTeclat@state 002E                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 0062  
                   ?_SIOStartGame 0062                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _HNouSegon 1E56  
                  _GLCDMostraMenu 1E7A         __end_of_conversorJoystick 1B94  
                 ??_CantaPartAlta 0067                    ?_MsetNovaTecla 0062  
                       _CantaData 1C00                 __size_of_GLCDInit 0008  
                     _UmotorUsers 0F7E                         _TXSTAbits 000FAC  
 __end_of_UcheckExistsNotFinished 1E7A                    __end_of_SMSoff 1F40  
                    ??_TiGetTimer 0067                    __end_of_LcInit 1426  
                  ??_SIONovaTecla 0067                        ?_CToAReset 0062  
                  __end_of_SMotor 0F7E                         _LcPutChar 19DA  
                  __end_of_TeInit 1F06                 motorAltaveu@state 001B  
                  __end_of_Espera 1D7E                    GLCDMotor@state 0018  
      __end_of_EscriuPrimeraOrdre 1762                 __size_of_HGetTime 0004  
                   __pidataCOMRAM 1D9E                       ?_init_ports 0062  
                       _NoFerMenu 1F70                         _ColumnAct 0034  
            __end_of_JoystickInit 1E10                    ??_SIOStartGame 0067  
                       _URegister 1F64                         _HnoJugant 1F4C  
                    ?_TiInitTimer 0062                      ??_JnovaTecla 0067  
                       _SiFerMenu 1F68               start_initialization 1762  
                       _TiGetTics 1CBE            __end_of_GLCDMostraMenu 1E86  
                      ?_HNouSegon 0062                  ??_UgetNumUsuaris 0067  
                UmotorUsers@state 001F                 __size_of_LcGotoXY 003A  
            __end_of_UgetUserName 1DFE                __end_of_TiGetTimer 1B26  
                   JJuguem@usuari 0067              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                     _JoystickMotor 125C  
               __size_of_JendGame 0004                      ?_TiResetTics 0062  
                      ?_CantaData 0062              _UcheckExistsGetError 1EB6  
         __end_of_SIONovaDireccio 1EB6              __size_of_LcNewString 000C  
                        ??_SMSoff 0067                          ??_LcInit 0073  
                       _NovaTecla 0053                 __size_of_TeTeclat 0164  
                        ??_SMotor 006E                          ??_TeInit 0068  
                    ?__TiRSITimer 0062                     ??_initAltaveu 0068  
                        ??_Espera 0070                __end_of_JnovaTecla 1EC6  
                      ?_LcPutChar 0062                         _UenviaPas 1E10  
                     __pdataBANK0 0080                    motorHora@state 000C  
                    _menuDaltGLCD 0019                      ??_UenviaChar 0068  
                      ?_NoFerMenu 0062                       ??_GLCDMotor 00C9  
                      ?_URegister 0062                        ?_HnoJugant 0062  
               ??_checkHoraAcabat 0067                     ??_init_eusart 0067  
                      ?_SiFerMenu 0062                       __pbssCOMRAM 0001  
           __size_of_CToAHaAcabat 0004                     __pcstackBANK0 00C9  
                      ?_TiGetTics 0067                   ?_GLCDMostraMenu 0062  
                        ?_HJugant 0062                    ?_JoystickMotor 0062  
                 ??_MsetNovaTecla 0067              __end_of_motorAltaveu 1596  
                        ?_JJuguem 0062                          ?_LcClear 0062  
                        ?_CantaIR 0062        __size_of_conversorJoystick 0036  
                  _CantaPartBaixa 1852          ??_SIOHaAcabatPuntuacions 0067  
           ?_UcheckExistsGetError 0062                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 0062               __size_of_init_ports 0020  
              MsetNovaTecla@tecla 0067                SsetNovaTecla@tecla 0067  
              __end_of_UenviaChar 1E30           __size_of_CToAConverteix 000C  
               __size_of_initHora 0008                  ??_escriureEEPROM 0067  
           __size_of_UcheckExists 0004                       ??_CToAReset 0067  
         ?_escriure2usuarisStruct 0062                         __pintcode 0008  
                   ??_playAltaveu 0067                        ?_UenviaPas 0067  
               __size_of_motorSIO 0222                 __size_of_motorJoc 00BA  
                 CantaPartBaixa@c 0068                      _CToAHaAcabat 1F44  
             __end_of_initAltaveu 1EEE                         _arrayZero 0045  
                        ?_initSIO 0062                       __smallconst 0200  
                       _convertir 0048                     ??_CToAobtenir 0069  
                  __size_of_LcLCD 005E                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 1EAE                    __size_of_Sinit 0008  
                     ??_HNouSegon 0067                    __size_of_Uinit 00B4  
                     _direccioSIO 004A                       _direccioJoc 000B  
          __end_of_CantaPartBaixa 18BA                JoystickMotor@state 000F  
                        _GLCDInit 1F26                escriureEEPROM@caca 0067  
                     _do_register 03C4               __end_of_init_eusart 1DEA  
                       _newString 03C0                      _UcheckExists 1F60  
                       _loginText 00A0                         _jugantSIO 03B9  
        __size_of_HActualitzaHora 0036                         _jugantJoc 03BA  
                     ??_CantaData 0069                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   ?_MNouJoystick 0062                  ?_SIONovaDireccio 0062  
            __end_of_SIOStartGame 1EA6                     UenviaChar@pos 0067  
  __end_of_escriure2usuarisStruct 1CBE                _escriureCharEEPROM 1D12  
                       _novaTecla 0056                     motorSIO@state 0007  
                        _PIR1bits 000F9E                       ??_LcPutChar 0075  
                       _timerGLCD 001A                         _motorHora 164A  
                        _RCONbits 000FD0                         _reproduir 03C2  
                        _HGetTime 1F50             __size_of_JoystickInit 0012  
                       _timerHora 000E                         _timerMenu 0029  
             ?_escriureCharEEPROM 0067                       ??_NoFerMenu 0067  
                      _ADCON0bits 000FC2                       ??_URegister 0067  
                     ??_HnoJugant 0067                       ??_SiFerMenu 0067  
           __size_of_UgetUserName 0014               __end_of_playAltaveu 1F5C  
          __size_of_SsetNovaTecla 0008                          Espera@ms 006E  
                       _zeroTecla 0031                          _LcGotoXY 1AB2  
                  _usuariLoguejat 0050                          _LcLliure 1E92  
                     ??_TiGetTics 0069           __size_of_compareStrings 0046  
            __size_of_TiInitTimer 0038                   ??_JoystickMotor 0068  
                   GLCDMotor@max1 004F                     GLCDMotor@max2 004E  
                   GLCDMotor@min1 0016                     GLCDMotor@min2 0015  
                    _teclaPremuda 0089                          _JendGame 1F74  
                       _usuariJoc 004D                       LcGotoXY@Row 006F  
                       copy_data0 1776                         copy_data1 1796  
            ??_escriureCharEEPROM 0068                   ?_CantaPartBaixa 0062  
             __end_of_CToAobtenir 1F44                  __size_of_HJugant 0006  
          ??_UcheckExistsGetError 0067             escriureCharEEPROM@pos 0067  
                __size_of_JJuguem 0008                  __size_of_LcClear 0024  
                __size_of_CantaIR 0032                          _TeTeclat 10F8  
           __end_of_JnovaDireccio 1ECE                    ??_MNouJoystick 0067  
 __size_of_SIOHaAcabatPuntuacions 0004                      ?_UmotorUsers 0062  
                    _JoystickInit 1DFE                        _EECON1bits 000FA6  
                    _registerText 0095                       _indexUsuari 0027  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0018  
                   motorJoc@state 000A                          __Hrparam 0000  
                     _initAltaveu 1EE6                         menu@state 0026  
                        __Lrparam 0000                        ?_motorHora 0062  
            __size_of__TiRSITimer 005A                      _UgetUserName 1DEA  
                     ??_UenviaPas 0068                      _novaDireccio 0051  
                    ??_init_ports 0067               HActualitzaHora@nova 0067  
                     _init_eusart 1DD4                  __size_of_initSIO 0008  
           __size_of_motorAltaveu 00B6                      _novaTeclaJOC 004C  
                    _novaTeclaSIO 0049                   _do_check_exists 03C5  
                        __ptext10 1E9E                          __ptext11 1EA6  
              _EscriuPrimeraOrdre 16E8                          __ptext20 14E0  
                        __ptext12 1EAE                          __ptext21 02E4  
                        __ptext13 1F4C                          __ptext30 1F64  
                        __ptext22 1E62                          __ptext14 1E56  
                        __ptext31 1F68                          __ptext23 1DEA  
                        __ptext15 1F2E                          __ptext40 1B94  
                        __ptext32 1F34                          __ptext24 1F5C  
                        __ptext16 1F50                          __ptext41 1E7A  
                        __ptext33 1F3A                          __ptext25 1E10  
                        __ptext17 1F54                          __ptext50 1D12  
                        __ptext42 1D7E                          __ptext34 1F6C  
                        __ptext26 1E20                          __ptext18 164A  
                        __ptext51 1A2C                          __ptext43 1DD4  
                        __ptext35 1F70                          __ptext27 1E6E  
                        __ptext19 1F58                          __ptext60 1F0E  
                        __ptext52 1596                          __ptext44 1ED6  
                        __ptext36 1EBE                          __ptext28 1EB6  
                        __ptext61 1F16                          __ptext53 1B26  
                        __ptext45 1EDE                          __ptext37 1EC6  
                        __ptext29 1F60                          __ptext70 1C00  
                        __ptext62 1922                          __ptext54 10F8  
                        __ptext46 1EE6                          __ptext38 1F74  
                        __ptext71 1E86                          __ptext63 1346  
                        __ptext55 1EEE                          __ptext47 1C64  
                        __ptext39 1ECE                          __ptext80 1DBC  
                        __ptext72 1E92                          __ptext64 16E8  
                        __ptext56 1EF6                          __ptext48 1C92  
                        __ptext81 1CBE                          __ptext73 1D36  
                        __ptext65 125C                          __ptext57 1EFE  
                        __ptext49 0F7E                          __ptext82 1F26  
                        __ptext74 1AB2                          __ptext66 1F1E  
                        __ptext58 1F06                          __ptext83 1AEC  
                        __ptext75 1A72                          __ptext67 1DFE  
                        __ptext59 0D82                          __ptext84 1BCA  
                        __ptext76 1C32                          __ptext68 0788  
                        __ptext77 1852                          __ptext69 19DA  
                        __ptext86 1980                          __ptext78 18BA  
                        __ptext79 1D5A                    CantaPartAlta@c 0068  
                     _lletraASCII 0057                          _high_rsi 0008  
                        _copsNota 001C                          _s_Timers 00A8  
                   __size_of_CtoA 0036                          _initHora 1EDE  
                     _lletraInici 0080                          _menuDalt 0028  
                        _menuList 0201               ?_EscriuPrimeraOrdre 0062  
                   __size_of_main 0078                     __size_of_menu 04A4  
           __end_of_CantaPartAlta 1922                    _CToAConverteix 1E3E  
                   CantaData@Data 0069                          _tiTeclat 002F  
              __end_of_init_ports 1D9E                          _setSMSon 03C7  
                   _SsetNovaTecla 1EEE              __size_of_WaitForBusy 0040  
                        _nouSegon 03BC                          _motorSIO 0B60  
               ??_HActualitzaHora 0068                          _motorJoc 1426  
                 _checkHoraAcabat 1E62                          _timerSIO 0008  
                        _timerSMS 0055                          isa$xinst 000000  
                        int$flags 007A                      UenviaPas@pos 0067  
                     _playAltaveu 1F58                      _motorAltaveu 14E0  
         __size_of_HClearNouSegon 0004            _SIOHaAcabatPuntuacions 1F6C  
            ??_EscriuPrimeraOrdre 0067                        LcInit@rows 0073  
                ??_GLCDMostraMenu 0067             __size_of_SIONovaTecla 0008  
         _UcheckExistsNotFinished 1E6E                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0067                       _CToAobtenir 1F40  
           __size_of_SIOStartGame 0008                     ??_LcNewString 006C  
                        intlevel2 0000                      _timerAltaveu 001D  
          __end_of_CToAConverteix 1E4A                        LcPutChar@c 0075  
                  ?_SsetNovaTecla 0062                 MNovaLletra@lletra 0067  
                 compareStrings@a 0067                   compareStrings@b 0068  
                     ??_motorHora 006E                      _SIONovaTecla 1EA6  
                     _tempsAcabat 03BB                       GLCDMotor@k1 0014  
                     GLCDMotor@k2 0013              __end_of_MNouJoystick 1F26  
                    _SIOStartGame 1E9E                    _compareStrings 1A2C  
                     _tmpPassword 00C0               __end_of_MNovaLletra 1F16  
                 ?_CToAConverteix 0062             __end_of_MsetNovaTecla 1EFE  
         __end_of_checkHoraAcabat 1E6E                       _tmpUsername 0038  
                  _SIOcheckKrebut 1E4A                       SMotor@state 0030  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 1E92  
            __size_of_UmotorUsers 017A                        _SIOendGame 1F48  
