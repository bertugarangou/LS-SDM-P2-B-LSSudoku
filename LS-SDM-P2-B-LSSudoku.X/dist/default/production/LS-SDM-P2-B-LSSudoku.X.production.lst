

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed May 04 13:46:39 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100  0000                     
   101                           ; Version 2.32
   102                           ; Generated 02/02/2021 GMT
   103                           ; 
   104                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution. Publication is not required when
   118                           ;        this file is used in an embedded application.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC18F4321 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136  0000                     
   137                           	psect	idataCOMRAM
   138  001B56                     __pidataCOMRAM:
   139                           	callstack 0
   140                           
   141                           ;initializer for _lletraInici
   142  001B56  41                 	db	65
   143  001B57  44                 	db	68
   144  001B58  47                 	db	71
   145  001B59  4A                 	db	74
   146  001B5A  4D                 	db	77
   147  001B5B  50                 	db	80
   148  001B5C  54                 	db	84
   149  001B5D  57                 	db	87
   150  001B5E  00                 	db	0
   151                           
   152                           ;initializer for _arrayZero
   153  001B5F  30                 	db	48
   154  001B60  20                 	db	32
   155  001B61  00                 	db	0
   156                           
   157                           ;initializer for _novaTeclaSIO
   158  001B62  FF                 	db	255
   159                           
   160                           ;initializer for _novaDireccioSIO
   161  001B63  FF                 	db	255
   162                           
   163                           ;initializer for _usuariActualSIO
   164  001B64  FF                 	db	255
   165                           
   166                           ;initializer for _novaTeclaJOC
   167  001B65  FF                 	db	255
   168                           
   169                           ;initializer for _usuariJoc
   170  001B66  FF                 	db	255
   171                           
   172                           ;initializer for GLCDMotor@max2
   173  001B67  0F                 	db	15
   174                           
   175                           ;initializer for GLCDMotor@max1
   176  001B68  0F                 	db	15
   177                           
   178                           ;initializer for _usuariLoguejat
   179  001B69  FF                 	db	255
   180                           
   181                           ;initializer for _novaDireccio
   182  001B6A  FF                 	db	255
   183                           
   184                           ;initializer for _novaLletra
   185  001B6B  FF                 	db	255
   186                           
   187                           ;initializer for _NovaTecla
   188  001B6C  FF                 	db	255
   189                           
   190                           ;initializer for _ultimaTecla
   191  001B6D  FF                 	db	255
   192                           
   193                           ;initializer for _timerSMS
   194  001B6E  FF                 	db	255
   195                           
   196                           ;initializer for _novaTecla
   197  001B6F  FF                 	db	255
   198                           
   199                           ;initializer for _lletraASCII
   200  001B70  FF                 	db	255
   201                           
   202                           ;initializer for _hora
   203  001B71  33                 	db	51
   204  001B72  30                 	db	48
   205  001B73  3A                 	db	58
   206  001B74  30                 	db	48
   207  001B75  30                 	db	48
   208  001B76  00                 	db	0
   209                           
   210                           	psect	idataBANK0
   211  001B98                     __pidataBANK0:
   212                           	callstack 0
   213                           
   214                           ;initializer for _teclaPremuda
   215  001B98  01                 	db	1
   216  001B99  02                 	db	2
   217  001B9A  03                 	db	3
   218  001B9B  04                 	db	4
   219  001B9C  05                 	db	5
   220  001B9D  06                 	db	6
   221  001B9E  07                 	db	7
   222  001B9F  08                 	db	8
   223  001BA0  09                 	db	9
   224  001BA1  0A                 	db	10
   225  001BA2  00                 	db	0
   226  001BA3  0B                 	db	11
   227                           
   228                           ;initializer for _registerText
   229  001BA4  32                 	db	50
   230  001BA5  2E                 	db	46
   231  001BA6  52                 	db	82
   232  001BA7  45                 	db	69
   233  001BA8  47                 	db	71
   234  001BA9  49                 	db	73
   235  001BAA  53                 	db	83
   236  001BAB  54                 	db	84
   237  001BAC  45                 	db	69
   238  001BAD  52                 	db	82
   239  001BAE  00                 	db	0
   240                           
   241                           ;initializer for _loginText
   242  001BAF  31                 	db	49
   243  001BB0  2E                 	db	46
   244  001BB1  4C                 	db	76
   245  001BB2  4F                 	db	79
   246  001BB3  47                 	db	71
   247  001BB4  49                 	db	73
   248  001BB5  4E                 	db	78
   249  001BB6  00                 	db	0
   250                           
   251                           	psect	smallconst
   252  000200                     __psmallconst:
   253                           	callstack 0
   254  000200  00                 	db	0
   255  000201                     _menuList:
   256                           	callstack 0
   257  000201  31                 	db	49
   258  000202  2E                 	db	46
   259  000203  50                 	db	80
   260  000204  6C                 	db	108
   261  000205  61                 	db	97
   262  000206  79                 	db	121
   263  000207  20                 	db	32
   264  000208  61                 	db	97
   265  000209  20                 	db	32
   266  00020A  47                 	db	71
   267  00020B  61                 	db	97
   268  00020C  6D                 	db	109
   269  00020D  65                 	db	101
   270  00020E  00                 	db	0
   271  00020F  00                 	db	0
   272  000210  00                 	db	0
   273  000211  00                 	db	0
   274  000212  00                 	db	0
   275  000213  00                 	db	0
   276  000214  00                 	db	0
   277  000215  00                 	db	0
   278  000216  00                 	db	0
   279  000217  00                 	db	0
   280  000218  00                 	db	0
   281  000219  00                 	db	0
   282  00021A  00                 	db	0
   283  00021B  00                 	db	0
   284  00021C  00                 	db	0
   285  00021D  00                 	db	0
   286  00021E  32                 	db	50
   287  00021F  2E                 	db	46
   288  000220  4D                 	db	77
   289  000221  6F                 	db	111
   290  000222  64                 	db	100
   291  000223  69                 	db	105
   292  000224  66                 	db	102
   293  000225  79                 	db	121
   294  000226  20                 	db	32
   295  000227  54                 	db	84
   296  000228  69                 	db	105
   297  000229  6D                 	db	109
   298  00022A  65                 	db	101
   299  00022B  00                 	db	0
   300  00022C  00                 	db	0
   301  00022D  00                 	db	0
   302  00022E  00                 	db	0
   303  00022F  00                 	db	0
   304  000230  00                 	db	0
   305  000231  00                 	db	0
   306  000232  00                 	db	0
   307  000233  00                 	db	0
   308  000234  00                 	db	0
   309  000235  00                 	db	0
   310  000236  00                 	db	0
   311  000237  00                 	db	0
   312  000238  00                 	db	0
   313  000239  00                 	db	0
   314  00023A  00                 	db	0
   315  00023B  33                 	db	51
   316  00023C  2E                 	db	46
   317  00023D  53                 	db	83
   318  00023E  68                 	db	104
   319  00023F  6F                 	db	111
   320  000240  77                 	db	119
   321  000241  20                 	db	32
   322  000242  47                 	db	71
   323  000243  65                 	db	101
   324  000244  6E                 	db	110
   325  000245  65                 	db	101
   326  000246  72                 	db	114
   327  000247  61                 	db	97
   328  000248  6C                 	db	108
   329  000249  20                 	db	32
   330  00024A  54                 	db	84
   331  00024B  6F                 	db	111
   332  00024C  70                 	db	112
   333  00024D  20                 	db	32
   334  00024E  35                 	db	53
   335  00024F  20                 	db	32
   336  000250  53                 	db	83
   337  000251  63                 	db	99
   338  000252  6F                 	db	111
   339  000253  72                 	db	114
   340  000254  65                 	db	101
   341  000255  73                 	db	115
   342  000256  20                 	db	32
   343  000257  00                 	db	0
   344  000258  34                 	db	52
   345  000259  2E                 	db	46
   346  00025A  4C                 	db	76
   347  00025B  6F                 	db	111
   348  00025C  67                 	db	103
   349  00025D  6F                 	db	111
   350  00025E  75                 	db	117
   351  00025F  74                 	db	116
   352  000260  00                 	db	0
   353  000261  00                 	db	0
   354  000262  00                 	db	0
   355  000263  00                 	db	0
   356  000264  00                 	db	0
   357  000265  00                 	db	0
   358  000266  00                 	db	0
   359  000267  00                 	db	0
   360  000268  00                 	db	0
   361  000269  00                 	db	0
   362  00026A  00                 	db	0
   363  00026B  00                 	db	0
   364  00026C  00                 	db	0
   365  00026D  00                 	db	0
   366  00026E  00                 	db	0
   367  00026F  00                 	db	0
   368  000270  00                 	db	0
   369  000271  00                 	db	0
   370  000272  00                 	db	0
   371  000273  00                 	db	0
   372  000274  00                 	db	0
   373  000275  35                 	db	53
   374  000276  2E                 	db	46
   375  000277  53                 	db	83
   376  000278  68                 	db	104
   377  000279  6F                 	db	111
   378  00027A  77                 	db	119
   379  00027B  20                 	db	32
   380  00027C  41                 	db	65
   381  00027D  6C                 	db	108
   382  00027E  6C                 	db	108
   383  00027F  20                 	db	32
   384  000280  55                 	db	85
   385  000281  73                 	db	115
   386  000282  65                 	db	101
   387  000283  72                 	db	114
   388  000284  73                 	db	115
   389  000285  00                 	db	0
   390  000286  00                 	db	0
   391  000287  00                 	db	0
   392  000288  00                 	db	0
   393  000289  00                 	db	0
   394  00028A  00                 	db	0
   395  00028B  00                 	db	0
   396  00028C  00                 	db	0
   397  00028D  00                 	db	0
   398  00028E  00                 	db	0
   399  00028F  00                 	db	0
   400  000290  00                 	db	0
   401  000291  00                 	db	0
   402  000292                     __end_of_menuList:
   403                           	callstack 0
   404  0000                     _RCREG	set	4014
   405  0000                     _TXREG	set	4013
   406  0000                     _TXSTAbits	set	4012
   407  0000                     _ADCON0bits	set	4034
   408  0000                     _ADRESH	set	4036
   409  0000                     _ADCON2	set	4032
   410  0000                     _ADCON1	set	4033
   411  0000                     _ADCON0	set	4034
   412  0000                     _EECON2	set	4007
   413  0000                     _EEDATA	set	4008
   414  0000                     _EEADR	set	4009
   415  0000                     _T0CONbits	set	4053
   416  0000                     _TMR0L	set	4054
   417  0000                     _TMR0H	set	4055
   418  0000                     _T0CON	set	4053
   419  0000                     _INTCONbits	set	4082
   420  0000                     _RCONbits	set	4048
   421  0000                     _PORTDbits	set	3971
   422  0000                     _SPBRG	set	4015
   423  0000                     _SPBRGH	set	4016
   424  0000                     _BAUDCON	set	4024
   425  0000                     _RCSTA	set	4011
   426  0000                     _TXSTA	set	4012
   427  0000                     _EECON1bits	set	4006
   428  0000                     _LATD	set	3980
   429  0000                     _TRISD	set	3989
   430  0000                     _TRISC	set	3988
   431  0000                     _LATBbits	set	3978
   432  0000                     _TRISB	set	3987
   433  0000                     _TRISA	set	3986
   434  0000                     _PORTCbits	set	3970
   435  0000                     _LATDbits	set	3980
   436  0000                     _LATCbits	set	3979
   437  0000                     _TRISDbits	set	3989
   438  0000                     _TRISCbits	set	3988
   439  000292                     STR_5:
   440  000292  54                 	db	84	;'T'
   441  000293  49                 	db	73	;'I'
   442  000294  4D                 	db	77	;'M'
   443  000295  45                 	db	69	;'E'
   444  000296  20                 	db	32
   445  000297  52                 	db	82	;'R'
   446  000298  45                 	db	69	;'E'
   447  000299  4D                 	db	77	;'M'
   448  00029A  41                 	db	65	;'A'
   449  00029B  49                 	db	73	;'I'
   450  00029C  4E                 	db	78	;'N'
   451  00029D  49                 	db	73	;'I'
   452  00029E  4E                 	db	78	;'N'
   453  00029F  47                 	db	71	;'G'
   454  0002A0  3A                 	db	58	;':'
   455  0002A1  00                 	db	0
   456  0002A2                     STR_4:
   457  0002A2  4D                 	db	77	;'M'
   458  0002A3  6F                 	db	111	;'o'
   459  0002A4  64                 	db	100	;'d'
   460  0002A5  69                 	db	105	;'i'
   461  0002A6  66                 	db	102	;'f'
   462  0002A7  79                 	db	121	;'y'
   463  0002A8  20                 	db	32
   464  0002A9  54                 	db	84	;'T'
   465  0002AA  69                 	db	105	;'i'
   466  0002AB  6D                 	db	109	;'m'
   467  0002AC  65                 	db	101	;'e'
   468  0002AD  3A                 	db	58	;':'
   469  0002AE  00                 	db	0
   470  0002AF                     STR_3:
   471  0002AF  42                 	db	66	;'B'
   472  0002B0  59                 	db	89	;'Y'
   473  0002B1  45                 	db	69	;'E'
   474  0002B2  20                 	db	32
   475  0002B3  42                 	db	66	;'B'
   476  0002B4  59                 	db	89	;'Y'
   477  0002B5  45                 	db	69	;'E'
   478  0002B6  20                 	db	32
   479  0002B7  00                 	db	0
   480  0002B8                     STR_2:
   481  0002B8  50                 	db	80	;'P'
   482  0002B9  53                 	db	83	;'S'
   483  0002BA  57                 	db	87	;'W'
   484  0002BB  44                 	db	68	;'D'
   485  0002BC  3A                 	db	58	;':'
   486  0002BD  20                 	db	32
   487  0002BE  00                 	db	0
   488  0002BF                     STR_1:
   489  0002BF  55                 	db	85	;'U'
   490  0002C0  53                 	db	83	;'S'
   491  0002C1  45                 	db	69	;'E'
   492  0002C2  52                 	db	82	;'R'
   493  0002C3  3A                 	db	58	;':'
   494  0002C4  20                 	db	32
   495  0002C5  00                 	db	0
   496  0002C6  00                 	db	0	; dummy byte at the end
   497  0000                     
   498                           ; #config settings
   499                           
   500                           	psect	cinit
   501  0015D4                     __pcinit:
   502                           	callstack 0
   503  0015D4                     start_initialization:
   504                           	callstack 0
   505  0015D4                     __initialization:
   506                           	callstack 0
   507                           
   508                           ; Initialize objects allocated to BANK0 (31 bytes)
   509                           ; load TBLPTR registers with __pidataBANK0
   510  0015D4  0E98               	movlw	low __pidataBANK0
   511  0015D6  6EF6               	movwf	tblptrl,c
   512  0015D8  0E1B               	movlw	high __pidataBANK0
   513  0015DA  6EF7               	movwf	tblptrh,c
   514  0015DC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   515  0015DE  6EF8               	movwf	tblptru,c
   516  0015E0  EE00  F0A1         	lfsr	0,__pdataBANK0
   517  0015E4  EE10 F01F          	lfsr	1,31
   518  0015E8                     copy_data0:
   519  0015E8  0009               	tblrd		*+
   520  0015EA  CFF5 FFEE          	movff	tablat,postinc0
   521  0015EE  50E5               	movf	postdec1,w,c
   522  0015F0  50E1               	movf	fsr1l,w,c
   523  0015F2  E1FA               	bnz	copy_data0
   524                           
   525                           ; Initialize objects allocated to COMRAM (33 bytes)
   526                           ; load TBLPTR registers with __pidataCOMRAM
   527  0015F4  0E56               	movlw	low __pidataCOMRAM
   528  0015F6  6EF6               	movwf	tblptrl,c
   529  0015F8  0E1B               	movlw	high __pidataCOMRAM
   530  0015FA  6EF7               	movwf	tblptrh,c
   531  0015FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   532  0015FE  6EF8               	movwf	tblptru,c
   533  001600  EE00  F044         	lfsr	0,__pdataCOMRAM
   534  001604  EE10 F021          	lfsr	1,33
   535  001608                     copy_data1:
   536  001608  0009               	tblrd		*+
   537  00160A  CFF5 FFEE          	movff	tablat,postinc0
   538  00160E  50E5               	movf	postdec1,w,c
   539  001610  50E1               	movf	fsr1l,w,c
   540  001612  E1FA               	bnz	copy_data1
   541                           
   542                           ; Clear objects allocated to BANK1 (184 bytes)
   543  001614  EE01  F000         	lfsr	0,__pbssBANK1
   544  001618  0EB8               	movlw	184
   545  00161A                     clear_0:
   546  00161A  6AEE               	clrf	postinc0,c
   547  00161C  06E8               	decf	wreg,f,c
   548  00161E  E1FD               	bnz	clear_0
   549                           
   550                           ; Clear objects allocated to BANK0 (33 bytes)
   551  001620  EE00  F080         	lfsr	0,__pbssBANK0
   552  001624  0E21               	movlw	33
   553  001626                     clear_1:
   554  001626  6AEE               	clrf	postinc0,c
   555  001628  06E8               	decf	wreg,f,c
   556  00162A  E1FD               	bnz	clear_1
   557                           
   558                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   559  00162C  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   560  00162E  6A78               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   561                           
   562                           ; Clear objects allocated to COMRAM (67 bytes)
   563  001630  EE00  F001         	lfsr	0,__pbssCOMRAM
   564  001634  0E43               	movlw	67
   565  001636                     clear_2:
   566  001636  6AEE               	clrf	postinc0,c
   567  001638  06E8               	decf	wreg,f,c
   568  00163A  E1FD               	bnz	clear_2
   569  00163C                     end_of_initialization:
   570                           	callstack 0
   571  00163C                     __end_of__initialization:
   572                           	callstack 0
   573  00163C  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   574  00163E  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   575  001640  0E00               	movlw	low (__Lmediumconst shr (0+16))
   576  001642  6EF8               	movwf	tblptru,c
   577  001644  0100               	movlb	0
   578  001646  EF25  F00B         	goto	_main	;jump to C main() function
   579                           
   580                           	psect	bitbssCOMRAM
   581  0003C0                     __pbitbssCOMRAM:
   582                           	callstack 0
   583  0003C0                     _Krebut:
   584                           	callstack 0
   585  0003C0                     	ds	1
   586  0003C1                     _nouSegon:
   587                           	callstack 0
   588  0003C1                     	ds	1
   589  0003C2                     _jugant:
   590                           	callstack 0
   591  0003C2                     	ds	1
   592  0003C3                     _cap2:
   593                           	callstack 0
   594  0003C3                     	ds	1
   595  0003C4                     _cap1:
   596                           	callstack 0
   597  0003C4                     	ds	1
   598  0003C5                     _newString:
   599                           	callstack 0
   600  0003C5                     	ds	1
   601  0003C6                     _ferMenu:
   602                           	callstack 0
   603  0003C6                     	ds	1
   604  0003C7                     _reproduir:
   605                           	callstack 0
   606  0003C7                     	ds	1
   607  0003C8                     _borram:
   608                           	callstack 0
   609  0003C8                     	ds	1
   610  0003C9                     _do_register:
   611                           	callstack 0
   612  0003C9                     	ds	1
   613  0003CA                     _do_check_exists:
   614                           	callstack 0
   615  0003CA                     	ds	1
   616  0003CB                     _loginNOTRegister:
   617                           	callstack 0
   618  0003CB                     	ds	1
   619  0003CC                     _setSMSon:
   620                           	callstack 0
   621  0003CC                     	ds	1
   622  0003CD                     _nou_s:
   623                           	callstack 0
   624  0003CD                     	ds	1
   625                           
   626                           	psect	bssCOMRAM
   627  000001                     __pbssCOMRAM:
   628                           	callstack 0
   629  000001                     _userPtr:
   630                           	callstack 0
   631  000001                     	ds	2
   632  000003                     _h_Tics:
   633                           	callstack 0
   634  000003                     	ds	2
   635  000005                     _s_ptr:
   636                           	callstack 0
   637  000005                     	ds	2
   638  000007                     motorSIO@state:
   639                           	callstack 0
   640  000007                     	ds	1
   641  000008                     _rebut:
   642                           	callstack 0
   643  000008                     	ds	1
   644  000009                     motorJoc@state:
   645                           	callstack 0
   646  000009                     	ds	1
   647  00000A                     _novaDireccioJOC:
   648                           	callstack 0
   649  00000A                     	ds	1
   650  00000B                     motorHora@state:
   651                           	callstack 0
   652  00000B                     	ds	1
   653  00000C                     _segons:
   654                           	callstack 0
   655  00000C                     	ds	1
   656  00000D                     _timerHora:
   657                           	callstack 0
   658  00000D                     	ds	1
   659  00000E                     JoystickMotor@state:
   660                           	callstack 0
   661  00000E                     	ds	1
   662  00000F                     _ultimaTeclaAD:
   663                           	callstack 0
   664  00000F                     	ds	1
   665  000010                     GLCDMotor@length2:
   666                           	callstack 0
   667  000010                     	ds	1
   668  000011                     GLCDMotor@length1:
   669                           	callstack 0
   670  000011                     	ds	1
   671  000012                     GLCDMotor@k2:
   672                           	callstack 0
   673  000012                     	ds	1
   674  000013                     GLCDMotor@k1:
   675                           	callstack 0
   676  000013                     	ds	1
   677  000014                     GLCDMotor@min2:
   678                           	callstack 0
   679  000014                     	ds	1
   680  000015                     GLCDMotor@min1:
   681                           	callstack 0
   682  000015                     	ds	1
   683  000016                     GLCDMotor@j:
   684                           	callstack 0
   685  000016                     	ds	1
   686  000017                     GLCDMotor@state:
   687                           	callstack 0
   688  000017                     	ds	1
   689  000018                     _menuDaltGLCD:
   690                           	callstack 0
   691  000018                     	ds	1
   692  000019                     _timerGLCD:
   693                           	callstack 0
   694  000019                     	ds	1
   695  00001A                     motorAltaveu@state:
   696                           	callstack 0
   697  00001A                     	ds	1
   698  00001B                     _copsNota:
   699                           	callstack 0
   700  00001B                     	ds	1
   701  00001C                     _timerAltaveu:
   702                           	callstack 0
   703  00001C                     	ds	1
   704  00001D                     _nota:
   705                           	callstack 0
   706  00001D                     	ds	1
   707  00001E                     UmotorUsers@state:
   708                           	callstack 0
   709  00001E                     	ds	1
   710  00001F                     _j:
   711                           	callstack 0
   712  00001F                     	ds	1
   713  000020                     _i:
   714                           	callstack 0
   715  000020                     	ds	1
   716  000021                     _indexNextUserStruct:
   717                           	callstack 0
   718  000021                     	ds	1
   719  000022                     _indexNextUser:
   720                           	callstack 0
   721  000022                     	ds	1
   722  000023                     _numUsuaris:
   723                           	callstack 0
   724  000023                     	ds	1
   725  000024                     _currentUsrIndex:
   726                           	callstack 0
   727  000024                     	ds	1
   728  000025                     menu@state:
   729                           	callstack 0
   730  000025                     	ds	1
   731  000026                     _indexUsuari:
   732                           	callstack 0
   733  000026                     	ds	1
   734  000027                     _menuDalt:
   735                           	callstack 0
   736  000027                     	ds	1
   737  000028                     _timerMenu:
   738                           	callstack 0
   739  000028                     	ds	1
   740  000029                     _tmp:
   741                           	callstack 0
   742  000029                     	ds	1
   743  00002A                     _counter:
   744                           	callstack 0
   745  00002A                     	ds	1
   746  00002B                     TeTeclat@files:
   747                           	callstack 0
   748  00002B                     	ds	1
   749  00002C                     TeTeclat@cols:
   750                           	callstack 0
   751  00002C                     	ds	1
   752  00002D                     TeTeclat@state:
   753                           	callstack 0
   754  00002D                     	ds	1
   755  00002E                     _tiTeclat:
   756                           	callstack 0
   757  00002E                     	ds	1
   758  00002F                     SMotor@state:
   759                           	callstack 0
   760  00002F                     	ds	1
   761  000030                     _zeroTecla:
   762                           	callstack 0
   763  000030                     	ds	1
   764  000031                     _sumaPulsacions:
   765                           	callstack 0
   766  000031                     	ds	1
   767  000032                     _Timer:
   768                           	callstack 0
   769  000032                     	ds	1
   770  000033                     _ColumnAct:
   771                           	callstack 0
   772  000033                     	ds	1
   773  000034                     _RowAct:
   774                           	callstack 0
   775  000034                     	ds	1
   776  000035                     _Columns:
   777                           	callstack 0
   778  000035                     	ds	1
   779  000036                     _Rows:
   780                           	callstack 0
   781  000036                     	ds	1
   782  000037                     _tmpUsername:
   783                           	callstack 0
   784  000037                     	ds	9
   785  000040                     _horaTmp:
   786                           	callstack 0
   787  000040                     	ds	4
   788                           
   789                           	psect	dataCOMRAM
   790  000044                     __pdataCOMRAM:
   791                           	callstack 0
   792  000044                     _lletraInici:
   793                           	callstack 0
   794  000044                     	ds	9
   795  00004D                     _arrayZero:
   796                           	callstack 0
   797  00004D                     	ds	3
   798  000050                     _novaTeclaSIO:
   799                           	callstack 0
   800  000050                     	ds	1
   801  000051                     _novaDireccioSIO:
   802                           	callstack 0
   803  000051                     	ds	1
   804  000052                     _usuariActualSIO:
   805                           	callstack 0
   806  000052                     	ds	1
   807  000053                     _novaTeclaJOC:
   808                           	callstack 0
   809  000053                     	ds	1
   810  000054                     _usuariJoc:
   811                           	callstack 0
   812  000054                     	ds	1
   813  000055                     GLCDMotor@max2:
   814                           	callstack 0
   815  000055                     	ds	1
   816  000056                     GLCDMotor@max1:
   817                           	callstack 0
   818  000056                     	ds	1
   819  000057                     _usuariLoguejat:
   820                           	callstack 0
   821  000057                     	ds	1
   822  000058                     _novaDireccio:
   823                           	callstack 0
   824  000058                     	ds	1
   825  000059                     _novaLletra:
   826                           	callstack 0
   827  000059                     	ds	1
   828  00005A                     _NovaTecla:
   829                           	callstack 0
   830  00005A                     	ds	1
   831  00005B                     _ultimaTecla:
   832                           	callstack 0
   833  00005B                     	ds	1
   834  00005C                     _timerSMS:
   835                           	callstack 0
   836  00005C                     	ds	1
   837  00005D                     _novaTecla:
   838                           	callstack 0
   839  00005D                     	ds	1
   840  00005E                     _lletraASCII:
   841                           	callstack 0
   842  00005E                     	ds	1
   843  00005F                     _hora:
   844                           	callstack 0
   845  00005F                     	ds	6
   846                           
   847                           	psect	bssBANK0
   848  000080                     __pbssBANK0:
   849                           	callstack 0
   850  000080                     _s_Timers:
   851                           	callstack 0
   852  000080                     	ds	24
   853  000098                     _tmpPassword:
   854                           	callstack 0
   855  000098                     	ds	9
   856                           
   857                           	psect	dataBANK0
   858  0000A1                     __pdataBANK0:
   859                           	callstack 0
   860  0000A1                     _teclaPremuda:
   861                           	callstack 0
   862  0000A1                     	ds	12
   863  0000AD                     _registerText:
   864                           	callstack 0
   865  0000AD                     	ds	11
   866  0000B8                     _loginText:
   867                           	callstack 0
   868  0000B8                     	ds	8
   869                           
   870                           	psect	bssBANK1
   871  000100                     __pbssBANK1:
   872                           	callstack 0
   873  000100                     _usuaris:
   874                           	callstack 0
   875  000100                     	ds	184
   876                           
   877                           	psect	cstackBANK0
   878  0000C0                     __pcstackBANK0:
   879                           	callstack 0
   880  0000C0                     ??_motorJoc:
   881  0000C0                     LcInit@rows:
   882                           	callstack 0
   883  0000C0                     LcPutChar@c:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x0
   887  0000C0                     	ds	1
   888  0000C1                     ??_menu:
   889  0000C1                     ??_GLCDMotor:
   890  0000C1                     LcInit@i:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x1
   894  0000C1                     	ds	2
   895                           
   896                           	psect	cstackCOMRAM
   897  000065                     __pcstackCOMRAM:
   898                           	callstack 0
   899  000065                     
   900                           ; 1 bytes @ 0x0
   901  000065                     	ds	1
   902  000066                     ??_high_rsi:
   903                           
   904                           ; 1 bytes @ 0x1
   905  000066                     	ds	4
   906  00006A                     ??_EscriuPrimeraOrdre:
   907  00006A                     ??_Uinit:
   908  00006A                     ??_UcheckExistsGetError:
   909  00006A                     ??_CantaPartAlta:
   910  00006A                     ??_CantaPartBaixa:
   911  00006A                     ?_TiGetTics:
   912                           	callstack 0
   913  00006A                     ?_UgetUserName:
   914                           	callstack 0
   915  00006A                     SsetNovaTecla@tecla:
   916                           	callstack 0
   917  00006A                     TiResetTics@Handle:
   918                           	callstack 0
   919  00006A                     MsetNovaTecla@tecla:
   920                           	callstack 0
   921  00006A                     MNovaLletra@lletra:
   922                           	callstack 0
   923  00006A                     MNouJoystick@posicio:
   924                           	callstack 0
   925  00006A                     UenviaChar@pos:
   926                           	callstack 0
   927  00006A                     UenviaPas@pos:
   928                           	callstack 0
   929  00006A                     escriureCharEEPROM@pos:
   930                           	callstack 0
   931  00006A                     compareStrings@a:
   932                           	callstack 0
   933  00006A                     escriureEEPROM@caca:
   934                           	callstack 0
   935  00006A                     GLCDMostraMenu@num:
   936                           	callstack 0
   937  00006A                     HActualitzaHora@nova:
   938                           	callstack 0
   939  00006A                     JJuguem@usuari:
   940                           	callstack 0
   941  00006A                     JnovaTecla@tecla:
   942                           	callstack 0
   943  00006A                     JnovaDireccio@dir:
   944                           	callstack 0
   945  00006A                     SIONovaDireccio@num:
   946                           	callstack 0
   947  00006A                     SIOStartGame@usuari:
   948                           	callstack 0
   949  00006A                     SIONovaTecla@tecla:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x5
   953  00006A                     	ds	1
   954  00006B                     ??_JoystickMotor:
   955  00006B                     CantaPartAlta@c:
   956                           	callstack 0
   957  00006B                     CantaPartBaixa@c:
   958                           	callstack 0
   959  00006B                     EscriuPrimeraOrdre@ordre:
   960                           	callstack 0
   961  00006B                     UenviaChar@c:
   962                           	callstack 0
   963  00006B                     UenviaPas@c:
   964                           	callstack 0
   965  00006B                     escriureCharEEPROM@c:
   966                           	callstack 0
   967  00006B                     compareStrings@b:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x6
   971  00006B                     	ds	1
   972  00006C                     ??_TiGetTics:
   973  00006C                     CantaIR@IR:
   974                           	callstack 0
   975  00006C                     CantaData@Data:
   976                           	callstack 0
   977  00006C                     UgetUserName@quin:
   978                           	callstack 0
   979  00006C                     Uinit@i:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x7
   983  00006C                     	ds	1
   984  00006D                     ??_motorSIO:
   985  00006D                     ??_compareStrings:
   986  00006D                     Uinit@j:
   987                           	callstack 0
   988  00006D                     LcNewString@new_s:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x8
   992  00006D                     	ds	1
   993  00006E                     TiGetTics@Handle:
   994                           	callstack 0
   995  00006E                     Uinit@j_1140:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x9
   999  00006E                     	ds	1
  1000  00006F                     ??_UmotorUsers:
  1001  00006F                     TiGetTics@actual:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0xA
  1005  00006F                     	ds	2
  1006  000071                     ??_SMotor:
  1007  000071                     ??_motorHora:
  1008  000071                     ??_motorAltaveu:
  1009  000071                     ??_TeTeclat:
  1010  000071                     WaitForBusy@Busy:
  1011                           	callstack 0
  1012  000071                     Espera@ms:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0xC
  1016  000071                     	ds	1
  1017  000072                     LcGotoXY@Row:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0xD
  1021  000072                     	ds	1
  1022  000073                     ??_Espera:
  1023  000073                     LcGotoXY@Fisics:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0xE
  1027  000073                     	ds	1
  1028  000074                     Espera@Timer:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0xF
  1032  000074                     	ds	1
  1033  000075                     LcInit@columns:
  1034                           	callstack 0
  1035  000075                     _LcGotoXY$336:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x10
  1039  000075                     	ds	1
  1040  000076                     
  1041                           ; 1 bytes @ 0x11
  1042  000076                     	ds	1
  1043  000077                     LcGotoXY@Column:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x12
  1047  000077                     	ds	1
  1048  000078                     
  1049                           ; 1 bytes @ 0x13
  1050 ;;
  1051 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1052 ;;
  1053 ;; *************** function _main *****************
  1054 ;; Defined at:
  1055 ;;		line 75 in file "main.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1
  1069 ;;      Params:         0       0       0
  1070 ;;      Locals:         0       0       0
  1071 ;;      Temps:          0       0       0
  1072 ;;      Totals:         0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels required when called: 7
  1075 ;; This function calls:
  1076 ;;		_GLCDInit
  1077 ;;		_GLCDMotor
  1078 ;;		_JoystickInit
  1079 ;;		_JoystickMotor
  1080 ;;		_LcInit
  1081 ;;		_LcLCD
  1082 ;;		_Minit
  1083 ;;		_SMotor
  1084 ;;		_Sinit
  1085 ;;		_TeInit
  1086 ;;		_TeTeclat
  1087 ;;		_TiInitTimer
  1088 ;;		_Uinit
  1089 ;;		_UmotorUsers
  1090 ;;		_escriure2usuarisStruct
  1091 ;;		_escriureEEPROM
  1092 ;;		_initAltaveu
  1093 ;;		_initHora
  1094 ;;		_init_eusart
  1095 ;;		_init_ports
  1096 ;;		_menu
  1097 ;;		_motorAltaveu
  1098 ;;		_motorHora
  1099 ;;		_motorJoc
  1100 ;;		_motorSIO
  1101 ;; This function is called by:
  1102 ;;		Startup code after reset
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text0
  1107  00164A                     __ptext0:
  1108                           	callstack 0
  1109  00164A                     _main:
  1110                           	callstack 24
  1111                           
  1112                           ;main.c: 76:     init_ports();
  1113                           
  1114                           ;incstack = 0
  1115  00164A  ECBC  F00D         	call	_init_ports	;wreg free
  1116                           
  1117                           ;main.c: 77:     escriureEEPROM();
  1118  00164E  EC32  F00D         	call	_escriureEEPROM	;wreg free
  1119                           
  1120                           ;main.c: 78:     init_eusart();
  1121  001652  ECE8  F00D         	call	_init_eusart	;wreg free
  1122                           
  1123                           ;main.c: 79:     TiInitTimer();
  1124  001656  ECC9  F00C         	call	_TiInitTimer	;wreg free
  1125                           
  1126                           ;main.c: 80:     TeInit();
  1127  00165A  EC6C  F00E         	call	_TeInit	;wreg free
  1128                           
  1129                           ;main.c: 81:     Sinit();
  1130  00165E  EC70  F00E         	call	_Sinit	;wreg free
  1131                           
  1132                           ;main.c: 82:     SMotor();
  1133  001662  EC92  F005         	call	_SMotor	;wreg free
  1134                           
  1135                           ;main.c: 83:     Uinit();
  1136  001666  EC14  F00A         	call	_Uinit	;wreg free
  1137                           
  1138                           ;main.c: 84:     initAltaveu();
  1139  00166A  EC60  F00E         	call	_initAltaveu	;wreg free
  1140                           
  1141                           ;main.c: 85:     GLCDInit();
  1142  00166E  EC80  F00E         	call	_GLCDInit	;wreg free
  1143                           
  1144                           ;main.c: 86:     JoystickInit();
  1145  001672  ECFD  F00D         	call	_JoystickInit	;wreg free
  1146                           
  1147                           ;main.c: 87:     initHora();
  1148  001676  EC5C  F00E         	call	_initHora	;wreg free
  1149                           
  1150                           ;main.c: 89:     LcInit(2,16);
  1151  00167A  0E10               	movlw	16
  1152  00167C  6E75               	movwf	LcInit@columns^0,c
  1153  00167E  0E02               	movlw	2
  1154  001680  ECEC  F008         	call	_LcInit
  1155                           
  1156                           ;main.c: 90:     Minit();
  1157  001684  EC78  F00E         	call	_Minit	;wreg free
  1158                           
  1159                           ;main.c: 92:     escriure2usuarisStruct();
  1160  001688  EC49  F00D         	call	_escriure2usuarisStruct	;wreg free
  1161  00168C                     l6726:
  1162                           
  1163                           ;main.c: 95:         motorJoc();
  1164  00168C  ECBA  F009         	call	_motorJoc	;wreg free
  1165                           
  1166                           ;main.c: 96:         motorSIO();
  1167  001690  ECFF  F007         	call	_motorSIO	;wreg free
  1168                           
  1169                           ;main.c: 97:         motorHora();
  1170  001694  EC6E  F00A         	call	_motorHora	;wreg free
  1171                           
  1172                           ;main.c: 98:         JoystickMotor();
  1173  001698  EC76  F008         	call	_JoystickMotor	;wreg free
  1174                           
  1175                           ;main.c: 99:         menu();
  1176  00169C  EC64  F001         	call	_menu	;wreg free
  1177                           
  1178                           ;main.c: 100:         motorAltaveu();
  1179  0016A0  EC5F  F009         	call	_motorAltaveu	;wreg free
  1180                           
  1181                           ;main.c: 101:         UmotorUsers();
  1182  0016A4  EC90  F006         	call	_UmotorUsers	;wreg free
  1183                           
  1184                           ;main.c: 102:         GLCDMotor();
  1185  0016A8  ECA6  F003         	call	_GLCDMotor	;wreg free
  1186                           
  1187                           ;main.c: 103:         TeTeclat();
  1188  0016AC  EC4D  F007         	call	_TeTeclat	;wreg free
  1189                           
  1190                           ;main.c: 104:         SMotor();
  1191  0016B0  EC92  F005         	call	_SMotor	;wreg free
  1192                           
  1193                           ;main.c: 105:         LcLCD();
  1194  0016B4  ECC5  F00B         	call	_LcLCD	;wreg free
  1195  0016B8  D7E9               	goto	l6726
  1196  0016BA                     __end_of_main:
  1197                           	callstack 0
  1198                           
  1199 ;; *************** function _motorSIO *****************
  1200 ;; Defined at:
  1201 ;;		line 34 in file "SIO.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/1
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1
  1215 ;;      Params:         0       0       0
  1216 ;;      Locals:         0       0       0
  1217 ;;      Temps:          2       0       0
  1218 ;;      Totals:         2       0       0
  1219 ;;Total ram usage:        2 bytes
  1220 ;; Hardware stack levels used: 1
  1221 ;; Hardware stack levels required when called: 3
  1222 ;; This function calls:
  1223 ;;		_UgetUserName
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text1
  1230  000FFE                     __ptext1:
  1231                           	callstack 0
  1232  000FFE                     _motorSIO:
  1233                           	callstack 27
  1234                           
  1235                           ;SIO.c: 35:     static char state = 0;;SIO.c: 37:  switch(state) {
  1236                           
  1237                           ;incstack = 0
  1238  000FFE  D060               	goto	l4410
  1239  001000                     l4350:
  1240                           
  1241                           ;SIO.c: 39:    if (usuariActualSIO > -1) {
  1242  001000  BE52               	btfsc	_usuariActualSIO^0,7,c
  1243  001002  0012               	return	
  1244                           
  1245                           ;SIO.c: 40:     userPtr = UgetUserName(usuariActualSIO);
  1246  001004  5052               	movf	_usuariActualSIO^0,w,c
  1247  001006  ECF3  F00D         	call	_UgetUserName
  1248  00100A  C06A  F001         	movff	?_UgetUserName,_userPtr
  1249  00100E  C06B  F002         	movff	?_UgetUserName+1,_userPtr+1
  1250                           
  1251                           ;SIO.c: 41:     jugant = 1;
  1252  001012  8478               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  1253                           
  1254                           ;SIO.c: 42:                 Krebut = 0;
  1255  001014  9078               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1256                           
  1257                           ;SIO.c: 43:     state = 1;
  1258  001016  0E01               	movlw	1
  1259  001018  6E07               	movwf	motorSIO@state^0,c
  1260  00101A  0012               	return	
  1261  00101C                     l4360:
  1262                           
  1263                           ;SIO.c: 47:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1264  00101C  C001  FFD9         	movff	_userPtr,fsr2l
  1265  001020  C002  FFDA         	movff	_userPtr+1,fsr2h
  1266  001024  50DF               	movf	indf2,w,c
  1267  001026  B4D8               	btfsc	status,2,c
  1268  001028  A2AC               	btfss	172,1,c	;volatile
  1269  00102A  D008               	goto	l4368
  1270                           
  1271                           ;SIO.c: 48:     TXREG = '\0';
  1272  00102C  0E00               	movlw	0
  1273  00102E  6EAD               	movwf	173,c	;volatile
  1274                           
  1275                           ;SIO.c: 49:     novaTeclaSIO = 0;
  1276  001030  0E00               	movlw	0
  1277  001032  6E50               	movwf	_novaTeclaSIO^0,c
  1278                           
  1279                           ;SIO.c: 50:     LATBbits.LATB3 = 1;
  1280  001034  868A               	bsf	138,3,c	;volatile
  1281                           
  1282                           ;SIO.c: 51:     state = 2;
  1283  001036  0E02               	movlw	2
  1284  001038  6E07               	movwf	motorSIO@state^0,c
  1285                           
  1286                           ;SIO.c: 52:    }
  1287  00103A  0012               	return	
  1288  00103C                     l4368:
  1289  00103C  C001  FFD9         	movff	_userPtr,fsr2l
  1290  001040  C002  FFDA         	movff	_userPtr+1,fsr2h
  1291  001044  50DF               	movf	indf2,w,c
  1292  001046  B4D8               	btfsc	status,2,c
  1293  001048  0012               	return	
  1294  00104A  A2AC               	btfss	172,1,c	;volatile
  1295  00104C  0012               	return	
  1296                           
  1297                           ;SIO.c: 54:     TXREG = *userPtr;
  1298  00104E  C001  FFD9         	movff	_userPtr,fsr2l
  1299  001052  C002  FFDA         	movff	_userPtr+1,fsr2h
  1300  001056  50DF               	movf	indf2,w,c
  1301  001058  6EAD               	movwf	173,c	;volatile
  1302                           
  1303                           ;SIO.c: 55:     userPtr++;
  1304  00105A  4A01               	infsnz	_userPtr^0,f,c
  1305  00105C  2A02               	incf	(_userPtr+1)^0,f,c
  1306  00105E  0012               	return	
  1307  001060                     l4376:
  1308                           
  1309                           ;SIO.c: 59:    if (RCREG == 'K') {
  1310  001060  0E4B               	movlw	75
  1311  001062  18AE               	xorwf	174,w,c
  1312  001064  A4D8               	btfss	status,2,c
  1313  001066  0012               	return	
  1314                           
  1315                           ;SIO.c: 60:     Krebut = 1;
  1316  001068  8078               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1317  00106A                     l4380:
  1318                           
  1319                           ;SIO.c: 61:     state = 3;
  1320  00106A  0E03               	movlw	3
  1321  00106C  6E07               	movwf	motorSIO@state^0,c
  1322  00106E  0012               	return	
  1323  001070                     l4382:
  1324                           
  1325                           ;SIO.c: 65:    if (novaDireccioSIO != -1 && TXSTAbits.TRMT) {
  1326  001070  2851               	incf	_novaDireccioSIO^0,w,c
  1327  001072  A4D8               	btfss	status,2,c
  1328  001074  A2AC               	btfss	172,1,c	;volatile
  1329  001076  D004               	goto	l4390
  1330                           
  1331                           ;SIO.c: 66:     TXREG = novaDireccioSIO;
  1332  001078  C051  FFAD         	movff	_novaDireccioSIO,4013	;volatile
  1333                           
  1334                           ;SIO.c: 67:     novaDireccioSIO = -1;
  1335  00107C  6851               	setf	_novaDireccioSIO^0,c
  1336  00107E  D7F5               	goto	l4380
  1337  001080                     l4390:
  1338  001080  5050               	movf	_novaTeclaSIO^0,w,c
  1339  001082  0A80               	xorlw	128
  1340  001084  0F7F               	addlw	-129
  1341  001086  A0D8               	btfss	status,0,c
  1342  001088  D00D               	goto	l4400
  1343  00108A  5050               	movf	_novaTeclaSIO^0,w,c
  1344  00108C  0A80               	xorlw	128
  1345  00108E  0F76               	addlw	-138
  1346  001090  A0D8               	btfss	status,0,c
  1347  001092  A2AC               	btfss	172,1,c	;volatile
  1348  001094  D007               	goto	l4400
  1349                           
  1350                           ;SIO.c: 71:     TXREG = novaTeclaSIO;
  1351  001096  C050  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1352                           
  1353                           ;SIO.c: 72:     novaTeclaSIO = 0;
  1354  00109A  0E00               	movlw	0
  1355  00109C  6E50               	movwf	_novaTeclaSIO^0,c
  1356                           
  1357                           ;SIO.c: 73:     state = 3;
  1358  00109E  0E03               	movlw	3
  1359  0010A0  6E07               	movwf	motorSIO@state^0,c
  1360                           
  1361                           ;SIO.c: 74:    }
  1362  0010A2  0012               	return	
  1363  0010A4                     l4400:
  1364  0010A4  0E0A               	movlw	10
  1365  0010A6  1850               	xorwf	_novaTeclaSIO^0,w,c
  1366  0010A8  A4D8               	btfss	status,2,c
  1367  0010AA  0012               	return	
  1368  0010AC  A2AC               	btfss	172,1,c	;volatile
  1369  0010AE  0012               	return	
  1370                           
  1371                           ;SIO.c: 76:     TXREG = 'F';
  1372  0010B0  0E46               	movlw	70
  1373  0010B2  6EAD               	movwf	173,c	;volatile
  1374                           
  1375                           ;SIO.c: 77:     novaTeclaSIO = 0;
  1376  0010B4  0E00               	movlw	0
  1377  0010B6  6E50               	movwf	_novaTeclaSIO^0,c
  1378                           
  1379                           ;SIO.c: 78:     jugant = 0;
  1380  0010B8  9478               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  1381                           
  1382                           ;SIO.c: 79:     state = 4;
  1383  0010BA  0E04               	movlw	4
  1384  0010BC  6E07               	movwf	motorSIO@state^0,c
  1385  0010BE  0012               	return	
  1386  0010C0                     l4410:
  1387  0010C0  5007               	movf	motorSIO@state^0,w,c
  1388  0010C2  6E6D               	movwf	??_motorSIO^0,c
  1389  0010C4  6A6E               	clrf	(??_motorSIO+1)^0,c
  1390                           
  1391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1392                           ; Switch size 1, requested type "simple"
  1393                           ; Number of cases is 1, Range of values is 0 to 0
  1394                           ; switch strategies available:
  1395                           ; Name         Instructions Cycles
  1396                           ; simple_byte            4     3 (average)
  1397                           ;	Chosen strategy is simple_byte
  1398  0010C6  506E               	movf	(??_motorSIO+1)^0,w,c
  1399  0010C8  0A00               	xorlw	0	; case 0
  1400  0010CA  A4D8               	btfss	status,2,c
  1401  0010CC  0012               	return	
  1402                           
  1403                           ; Switch size 1, requested type "simple"
  1404                           ; Number of cases is 5, Range of values is 0 to 4
  1405                           ; switch strategies available:
  1406                           ; Name         Instructions Cycles
  1407                           ; simple_byte           16     9 (average)
  1408                           ;	Chosen strategy is simple_byte
  1409  0010CE  506D               	movf	??_motorSIO^0,w,c
  1410  0010D0  0A00               	xorlw	0	; case 0
  1411  0010D2  B4D8               	btfsc	status,2,c
  1412  0010D4  D795               	goto	l4350
  1413  0010D6  0A01               	xorlw	1	; case 1
  1414  0010D8  B4D8               	btfsc	status,2,c
  1415  0010DA  D7A0               	goto	l4360
  1416  0010DC  0A03               	xorlw	3	; case 2
  1417  0010DE  B4D8               	btfsc	status,2,c
  1418  0010E0  D7BF               	goto	l4376
  1419  0010E2  0A01               	xorlw	1	; case 3
  1420  0010E4  B4D8               	btfsc	status,2,c
  1421  0010E6  D7C4               	goto	l4382
  1422  0010E8  0A07               	xorlw	7	; case 4
  1423  0010EA  0012               	return	
  1424  0010EC                     __end_of_motorSIO:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _motorJoc *****************
  1428 ;; Defined at:
  1429 ;;		line 26 in file "Joc.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/1
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1
  1443 ;;      Params:         0       0       0
  1444 ;;      Locals:         0       0       0
  1445 ;;      Temps:          0       2       0
  1446 ;;      Totals:         0       2       0
  1447 ;;Total ram usage:        2 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 5
  1450 ;; This function calls:
  1451 ;;		_HClearNouSegon
  1452 ;;		_HGetTime
  1453 ;;		_HJugant
  1454 ;;		_HNouSegon
  1455 ;;		_HnoJugant
  1456 ;;		_LcGotoXY
  1457 ;;		_LcLliure
  1458 ;;		_LcNewString
  1459 ;;		_SIOJugant
  1460 ;;		_SIONovaDireccio
  1461 ;;		_SIONovaTecla
  1462 ;;		_SIOStartGame
  1463 ;;		_SIOcheckKrebut
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text2
  1470  001374                     __ptext2:
  1471                           	callstack 0
  1472  001374                     _motorJoc:
  1473                           	callstack 25
  1474                           
  1475                           ;Joc.c: 27:     static char state = 0;;Joc.c: 29:  switch(state) {
  1476                           
  1477                           ;incstack = 0
  1478  001374  D046               	goto	l5938
  1479  001376                     l5888:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;Joc.c: 31:    if (usuariJoc != -1) {
  1483  001376  2854               	incf	_usuariJoc^0,w,c
  1484  001378  B4D8               	btfsc	status,2,c
  1485  00137A  0012               	return	
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;Joc.c: 32:     SIOStartGame(usuariJoc);
  1489  00137C  5054               	movf	_usuariJoc^0,w,c
  1490  00137E  EC40  F00E         	call	_SIOStartGame
  1491                           
  1492                           ;Joc.c: 33:     state = 2;
  1493  001382  0E02               	movlw	2
  1494  001384  6E09               	movwf	motorJoc@state^0,c
  1495                           
  1496                           ;Joc.c: 35:   break;
  1497                           
  1498                           ;Joc.c: 34:    }
  1499  001386  0012               	return	
  1500  001388                     l5894:
  1501                           
  1502                           ; BSR set to: 0
  1503                           ;Joc.c: 37:    if (!SIOJugant()) {
  1504  001388  EC1C  F00E         	call	_SIOJugant	;wreg free
  1505  00138C  B0D8               	btfsc	status,0,c
  1506  00138E  D006               	goto	l5902
  1507                           
  1508                           ;Joc.c: 38:     usuariJoc = -1;
  1509  001390  6854               	setf	_usuariJoc^0,c
  1510                           
  1511                           ;Joc.c: 39:     HnoJugant();
  1512  001392  EC8A  F00E         	call	_HnoJugant	;wreg free
  1513                           
  1514                           ;Joc.c: 40:     state = 0;
  1515  001396  0E00               	movlw	0
  1516  001398  6E09               	movwf	motorJoc@state^0,c
  1517                           
  1518                           ;Joc.c: 41:    }
  1519  00139A  0012               	return	
  1520  00139C                     l5902:
  1521  00139C  BE0A               	btfsc	_novaDireccioJOC^0,7,c
  1522  00139E  D007               	goto	l5910
  1523                           
  1524                           ;Joc.c: 43:     SIONovaDireccio(novaDireccioJOC);
  1525  0013A0  500A               	movf	_novaDireccioJOC^0,w,c
  1526  0013A2  EC48  F00E         	call	_SIONovaDireccio
  1527                           
  1528                           ;Joc.c: 44:     novaDireccioJOC = -1;
  1529  0013A6  680A               	setf	_novaDireccioJOC^0,c
  1530  0013A8                     l5908:
  1531                           
  1532                           ;Joc.c: 45:     state = 1;
  1533  0013A8  0E01               	movlw	1
  1534  0013AA  6E09               	movwf	motorJoc@state^0,c
  1535                           
  1536                           ;Joc.c: 46:    }
  1537  0013AC  0012               	return	
  1538  0013AE                     l5910:
  1539  0013AE  EC22  F00E         	call	_HNouSegon	;wreg free
  1540  0013B2  A0D8               	btfss	status,0,c
  1541  0013B4  D015               	goto	l5922
  1542  0013B6  EC3A  F00E         	call	_LcLliure	;wreg free
  1543  0013BA  A0D8               	btfss	status,0,c
  1544  0013BC  D011               	goto	l5922
  1545                           
  1546                           ;Joc.c: 48:     HClearNouSegon();
  1547  0013BE  EC90  F00E         	call	_HClearNouSegon	;wreg free
  1548                           
  1549                           ;Joc.c: 49:     LcGotoXY(0,1);
  1550  0013C2  0E01               	movlw	1
  1551  0013C4  6E72               	movwf	LcGotoXY@Row^0,c
  1552  0013C6  0E00               	movlw	0
  1553  0013C8  EC8F  F00C         	call	_LcGotoXY
  1554                           
  1555                           ;Joc.c: 50:     LcNewString(HGetTime());
  1556  0013CC  EC8E  F00E         	call	_HGetTime	;wreg free
  1557  0013D0  0100               	movlb	0	; () banked
  1558  0013D2  6FC0               	movwf	??_motorJoc& (0+255),b
  1559  0013D4  C0C0  F06D         	movff	??_motorJoc,LcNewString@new_s
  1560  0013D8  6A6E               	clrf	(LcNewString@new_s+1)^0,c
  1561  0013DA  EC34  F00E         	call	_LcNewString	;wreg free
  1562  0013DE  D7E4               	goto	l5908
  1563  0013E0                     l5922:
  1564  0013E0  5053               	movf	_novaTeclaJOC^0,w,c
  1565  0013E2  0A80               	xorlw	128
  1566  0013E4  0F7F               	addlw	-129
  1567  0013E6  A0D8               	btfss	status,0,c
  1568  0013E8  0012               	return	
  1569                           
  1570                           ;Joc.c: 54:     SIONovaTecla(novaTeclaJOC);
  1571  0013EA  5053               	movf	_novaTeclaJOC^0,w,c
  1572  0013EC  EC44  F00E         	call	_SIONovaTecla
  1573                           
  1574                           ;Joc.c: 55:     novaTeclaJOC = -1;
  1575  0013F0  6853               	setf	_novaTeclaJOC^0,c
  1576  0013F2  D7DA               	goto	l5908
  1577  0013F4                     l5930:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;Joc.c: 60:    if (SIOcheckKrebut()) {
  1581  0013F4  EC16  F00E         	call	_SIOcheckKrebut	;wreg free
  1582  0013F8  A0D8               	btfss	status,0,c
  1583  0013FA  0012               	return	
  1584                           
  1585                           ;Joc.c: 61:     HJugant();
  1586  0013FC  EC8C  F00E         	call	_HJugant	;wreg free
  1587  001400  D7D3               	goto	l5908
  1588  001402                     l5938:
  1589  001402  5009               	movf	motorJoc@state^0,w,c
  1590  001404  0100               	movlb	0	; () banked
  1591  001406  6FC0               	movwf	??_motorJoc& (0+255),b
  1592  001408  6BC1               	clrf	(??_motorJoc+1)& (0+255),b
  1593                           
  1594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1595                           ; Switch size 1, requested type "simple"
  1596                           ; Number of cases is 1, Range of values is 0 to 0
  1597                           ; switch strategies available:
  1598                           ; Name         Instructions Cycles
  1599                           ; simple_byte            4     3 (average)
  1600                           ;	Chosen strategy is simple_byte
  1601  00140A  51C1               	movf	(??_motorJoc+1)& (0+255),w,b
  1602  00140C  0A00               	xorlw	0	; case 0
  1603  00140E  A4D8               	btfss	status,2,c
  1604  001410  0012               	return	
  1605                           
  1606                           ; BSR set to: 0
  1607                           ; Switch size 1, requested type "simple"
  1608                           ; Number of cases is 3, Range of values is 0 to 2
  1609                           ; switch strategies available:
  1610                           ; Name         Instructions Cycles
  1611                           ; simple_byte           10     6 (average)
  1612                           ;	Chosen strategy is simple_byte
  1613  001412  51C0               	movf	??_motorJoc& (0+255),w,b
  1614  001414  0A00               	xorlw	0	; case 0
  1615  001416  B4D8               	btfsc	status,2,c
  1616  001418  D7AE               	goto	l5888
  1617  00141A  0A01               	xorlw	1	; case 1
  1618  00141C  B4D8               	btfsc	status,2,c
  1619  00141E  D7B4               	goto	l5894
  1620  001420  0A03               	xorlw	3	; case 2
  1621  001422  A4D8               	btfss	status,2,c
  1622  001424  0012               	return	
  1623  001426  D7E6               	goto	l5930
  1624  001428                     __end_of_motorJoc:
  1625                           	callstack 0
  1626                           
  1627 ;; *************** function _SIOcheckKrebut *****************
  1628 ;; Defined at:
  1629 ;;		line 13 in file "SIO.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;		None               void
  1636 ;; Registers used:
  1637 ;;		status,0
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1
  1643 ;;      Params:         0       0       0
  1644 ;;      Locals:         0       0       0
  1645 ;;      Temps:          0       0       0
  1646 ;;      Totals:         0       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 2
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_motorJoc
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text3
  1658  001C2C                     __ptext3:
  1659                           	callstack 0
  1660  001C2C                     _SIOcheckKrebut:
  1661                           	callstack 27
  1662                           
  1663                           ;SIO.c: 14:     return Krebut;
  1664                           
  1665                           ;incstack = 0
  1666  001C2C  B078               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1667  001C2E  D002               	goto	l2080
  1668  001C30  90D8               	bcf	status,0,c
  1669  001C32  0012               	return	
  1670  001C34                     l2080:
  1671  001C34  80D8               	bsf	status,0,c
  1672  001C36  0012               	return		;funcret
  1673  001C38                     __end_of_SIOcheckKrebut:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _SIOStartGame *****************
  1677 ;; Defined at:
  1678 ;;		line 20 in file "SIO.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  usuari          1    wreg     unsigned char 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  usuari          1    5[COMRAM] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1
  1692 ;;      Params:         0       0       0
  1693 ;;      Locals:         1       0       0
  1694 ;;      Temps:          0       0       0
  1695 ;;      Totals:         1       0       0
  1696 ;;Total ram usage:        1 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 2
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_motorJoc
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text4
  1707  001C80                     __ptext4:
  1708                           	callstack 0
  1709  001C80                     _SIOStartGame:
  1710                           	callstack 27
  1711                           
  1712                           ;incstack = 0
  1713                           ;SIOStartGame@usuari stored from wreg
  1714  001C80  6E6A               	movwf	SIOStartGame@usuari^0,c
  1715                           
  1716                           ;SIO.c: 21:     usuariActualSIO = usuari;
  1717  001C82  C06A  F052         	movff	SIOStartGame@usuari,_usuariActualSIO
  1718  001C86  0012               	return		;funcret
  1719  001C88                     __end_of_SIOStartGame:
  1720                           	callstack 0
  1721                           
  1722 ;; *************** function _SIONovaTecla *****************
  1723 ;; Defined at:
  1724 ;;		line 27 in file "SIO.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  tecla           1    wreg     char 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  tecla           1    5[COMRAM] char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1
  1738 ;;      Params:         0       0       0
  1739 ;;      Locals:         1       0       0
  1740 ;;      Temps:          0       0       0
  1741 ;;      Totals:         1       0       0
  1742 ;;Total ram usage:        1 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 2
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_motorJoc
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text5
  1753  001C88                     __ptext5:
  1754                           	callstack 0
  1755  001C88                     _SIONovaTecla:
  1756                           	callstack 27
  1757                           
  1758                           ;incstack = 0
  1759                           ;SIONovaTecla@tecla stored from wreg
  1760  001C88  6E6A               	movwf	SIONovaTecla@tecla^0,c
  1761                           
  1762                           ;SIO.c: 28:     novaTeclaSIO = tecla;
  1763  001C8A  C06A  F050         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  1764  001C8E  0012               	return		;funcret
  1765  001C90                     __end_of_SIONovaTecla:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _SIONovaDireccio *****************
  1769 ;; Defined at:
  1770 ;;		line 16 in file "SIO.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  num             1    wreg     unsigned char 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  num             1    5[COMRAM] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1
  1784 ;;      Params:         0       0       0
  1785 ;;      Locals:         1       0       0
  1786 ;;      Temps:          0       0       0
  1787 ;;      Totals:         1       0       0
  1788 ;;Total ram usage:        1 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 2
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_motorJoc
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text6
  1799  001C90                     __ptext6:
  1800                           	callstack 0
  1801  001C90                     _SIONovaDireccio:
  1802                           	callstack 27
  1803                           
  1804                           ;incstack = 0
  1805                           ;SIONovaDireccio@num stored from wreg
  1806  001C90  6E6A               	movwf	SIONovaDireccio@num^0,c
  1807                           
  1808                           ;SIO.c: 17:     novaDireccioSIO = num;
  1809  001C92  C06A  F051         	movff	SIONovaDireccio@num,_novaDireccioSIO
  1810  001C96  0012               	return		;funcret
  1811  001C98                     __end_of_SIONovaDireccio:
  1812                           	callstack 0
  1813                           
  1814 ;; *************** function _SIOJugant *****************
  1815 ;; Defined at:
  1816 ;;		line 30 in file "SIO.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;		None               void
  1823 ;; Registers used:
  1824 ;;		status,0
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1
  1830 ;;      Params:         0       0       0
  1831 ;;      Locals:         0       0       0
  1832 ;;      Temps:          0       0       0
  1833 ;;      Totals:         0       0       0
  1834 ;;Total ram usage:        0 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 2
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_motorJoc
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text7
  1845  001C38                     __ptext7:
  1846                           	callstack 0
  1847  001C38                     _SIOJugant:
  1848                           	callstack 27
  1849                           
  1850                           ;SIO.c: 31:     return jugant;
  1851                           
  1852                           ;incstack = 0
  1853  001C38  B478               	btfsc	(_jugant/(0+8))^0,_jugant& (0+7),c
  1854  001C3A  D002               	goto	l2068
  1855  001C3C  90D8               	bcf	status,0,c
  1856  001C3E  0012               	return	
  1857  001C40                     l2068:
  1858  001C40  80D8               	bsf	status,0,c
  1859  001C42  0012               	return		;funcret
  1860  001C44                     __end_of_SIOJugant:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _HnoJugant *****************
  1864 ;; Defined at:
  1865 ;;		line 33 in file "Hora.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		None
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1
  1879 ;;      Params:         0       0       0
  1880 ;;      Locals:         0       0       0
  1881 ;;      Temps:          0       0       0
  1882 ;;      Totals:         0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 2
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_motorJoc
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text8
  1894  001D14                     __ptext8:
  1895                           	callstack 0
  1896  001D14                     _HnoJugant:
  1897                           	callstack 27
  1898                           
  1899                           ;Hora.c: 34:     jugant = 0;
  1900                           
  1901                           ;incstack = 0
  1902  001D14  9478               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  1903  001D16  0012               	return		;funcret
  1904  001D18                     __end_of_HnoJugant:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _HNouSegon *****************
  1908 ;; Defined at:
  1909 ;;		line 21 in file "Hora.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;		None               void
  1916 ;; Registers used:
  1917 ;;		status,0
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1
  1923 ;;      Params:         0       0       0
  1924 ;;      Locals:         0       0       0
  1925 ;;      Temps:          0       0       0
  1926 ;;      Totals:         0       0       0
  1927 ;;Total ram usage:        0 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 2
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_motorJoc
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text9
  1938  001C44                     __ptext9:
  1939                           	callstack 0
  1940  001C44                     _HNouSegon:
  1941                           	callstack 27
  1942                           
  1943                           ;Hora.c: 22:     return nouSegon;
  1944                           
  1945                           ;incstack = 0
  1946  001C44  B278               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  1947  001C46  D002               	goto	l2048
  1948  001C48  90D8               	bcf	status,0,c
  1949  001C4A  0012               	return	
  1950  001C4C                     l2048:
  1951  001C4C  80D8               	bsf	status,0,c
  1952  001C4E  0012               	return		;funcret
  1953  001C50                     __end_of_HNouSegon:
  1954                           	callstack 0
  1955                           
  1956 ;; *************** function _HJugant *****************
  1957 ;; Defined at:
  1958 ;;		line 36 in file "Hora.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		None
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1
  1972 ;;      Params:         0       0       0
  1973 ;;      Locals:         0       0       0
  1974 ;;      Temps:          0       0       0
  1975 ;;      Totals:         0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used: 1
  1978 ;; Hardware stack levels required when called: 2
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_motorJoc
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text10
  1987  001D18                     __ptext10:
  1988                           	callstack 0
  1989  001D18                     _HJugant:
  1990                           	callstack 27
  1991                           
  1992                           ;Hora.c: 37:     jugant = 1;
  1993                           
  1994                           ;incstack = 0
  1995  001D18  8478               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  1996  001D1A  0012               	return		;funcret
  1997  001D1C                     __end_of_HJugant:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function _HGetTime *****************
  2001 ;; Defined at:
  2002 ;;		line 29 in file "Hora.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      PTR unsigned char 
  2009 ;; Registers used:
  2010 ;;		wreg
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1
  2016 ;;      Params:         2       0       0
  2017 ;;      Locals:         0       0       0
  2018 ;;      Temps:          0       0       0
  2019 ;;      Totals:         2       0       0
  2020 ;;Total ram usage:        2 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 2
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_motorJoc
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text11
  2031  001D1C                     __ptext11:
  2032                           	callstack 0
  2033  001D1C                     _HGetTime:
  2034                           	callstack 27
  2035                           
  2036                           ;Hora.c: 30:     return hora;
  2037                           
  2038                           ;incstack = 0
  2039  001D1C  0E5F               	movlw	_hora& (0+255)
  2040  001D1E  0012               	return		;funcret
  2041  001D20                     __end_of_HGetTime:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _HClearNouSegon *****************
  2045 ;; Defined at:
  2046 ;;		line 25 in file "Hora.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		None
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1
  2060 ;;      Params:         0       0       0
  2061 ;;      Locals:         0       0       0
  2062 ;;      Temps:          0       0       0
  2063 ;;      Totals:         0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; Hardware stack levels required when called: 2
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_motorJoc
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text12
  2075  001D20                     __ptext12:
  2076                           	callstack 0
  2077  001D20                     _HClearNouSegon:
  2078                           	callstack 27
  2079                           
  2080                           ;Hora.c: 26:     nouSegon = 0;
  2081                           
  2082                           ;incstack = 0
  2083  001D20  9278               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2084  001D22  0012               	return		;funcret
  2085  001D24                     __end_of_HClearNouSegon:
  2086                           	callstack 0
  2087                           
  2088 ;; *************** function _motorHora *****************
  2089 ;; Defined at:
  2090 ;;		line 40 in file "Hora.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;		None
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/1
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1
  2104 ;;      Params:         0       0       0
  2105 ;;      Locals:         0       0       0
  2106 ;;      Temps:          2       0       0
  2107 ;;      Totals:         2       0       0
  2108 ;;Total ram usage:        2 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 3
  2111 ;; This function calls:
  2112 ;;		_TiGetTics
  2113 ;;		_TiResetTics
  2114 ;;		_playAltaveu
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text13
  2121  0014DC                     __ptext13:
  2122                           	callstack 0
  2123  0014DC                     _motorHora:
  2124                           	callstack 27
  2125                           
  2126                           ;Hora.c: 41:  static char state = 0;;Hora.c: 43:  switch(state) {
  2127                           
  2128                           ;incstack = 0
  2129  0014DC  D032               	goto	l5998
  2130  0014DE                     l5950:
  2131                           
  2132                           ;Hora.c: 45:    if (TiGetTics(timerHora) >= 1205) {
  2133  0014DE  500D               	movf	_timerHora^0,w,c
  2134  0014E0  EC5F  F00D         	call	_TiGetTics
  2135  0014E4  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  2136  0014E6  0012               	return	
  2137  0014E8  0EB5               	movlw	181
  2138  0014EA  5C6A               	subwf	?_TiGetTics^0,w,c
  2139  0014EC  0E04               	movlw	4
  2140  0014EE  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  2141  0014F0  A0D8               	btfss	status,0,c
  2142  0014F2  0012               	return	
  2143                           
  2144                           ;Hora.c: 46:     TiResetTics(timerHora);
  2145  0014F4  500D               	movf	_timerHora^0,w,c
  2146  0014F6  ECDC  F00D         	call	_TiResetTics
  2147                           
  2148                           ;Hora.c: 47:     if(jugant){
  2149  0014FA  A478               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2150  0014FC  D01F               	goto	l5994
  2151                           
  2152                           ;Hora.c: 48:       nouSegon = 1;
  2153  0014FE  8278               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2154                           
  2155                           ;Hora.c: 50:      hora[4]--;
  2156  001500  0663               	decf	(_hora+4)^0,f,c
  2157                           
  2158                           ;Hora.c: 51:      if(hora[4] == ('0'-1)){
  2159  001502  0E2F               	movlw	47
  2160  001504  1863               	xorwf	(_hora+4)^0,w,c
  2161  001506  A4D8               	btfss	status,2,c
  2162  001508  D003               	goto	l5966
  2163                           
  2164                           ;Hora.c: 52:       hora[4] = '9';
  2165  00150A  0E39               	movlw	57
  2166  00150C  6E63               	movwf	(_hora+4)^0,c
  2167                           
  2168                           ;Hora.c: 53:       hora[3]--;
  2169  00150E  0662               	decf	(_hora+3)^0,f,c
  2170  001510                     l5966:
  2171                           
  2172                           ;Hora.c: 56:      if(hora[3] == ('0'-1)){
  2173  001510  0E2F               	movlw	47
  2174  001512  1862               	xorwf	(_hora+3)^0,w,c
  2175  001514  A4D8               	btfss	status,2,c
  2176  001516  D003               	goto	l5972
  2177                           
  2178                           ;Hora.c: 57:       hora[3] = '5';
  2179  001518  0E35               	movlw	53
  2180  00151A  6E62               	movwf	(_hora+3)^0,c
  2181                           
  2182                           ;Hora.c: 58:       hora[1]--;
  2183  00151C  0660               	decf	(_hora+1)^0,f,c
  2184  00151E                     l5972:
  2185                           
  2186                           ;Hora.c: 61:      if(hora[1] == ('0'-1)){
  2187  00151E  0E2F               	movlw	47
  2188  001520  1860               	xorwf	(_hora+1)^0,w,c
  2189  001522  A4D8               	btfss	status,2,c
  2190  001524  D003               	goto	l5978
  2191                           
  2192                           ;Hora.c: 62:       hora[1] = '9';
  2193  001526  0E39               	movlw	57
  2194  001528  6E60               	movwf	(_hora+1)^0,c
  2195                           
  2196                           ;Hora.c: 63:       hora[0]--;
  2197  00152A  065F               	decf	_hora^0,f,c
  2198  00152C                     l5978:
  2199                           
  2200                           ;Hora.c: 70:      segons++;
  2201  00152C  2A0C               	incf	_segons^0,f,c
  2202                           
  2203                           ;Hora.c: 71:      if(segons > 59){
  2204  00152E  0E3B               	movlw	59
  2205  001530  640C               	cpfsgt	_segons^0,c
  2206  001532  D004               	goto	l5994
  2207                           
  2208                           ;Hora.c: 72:       playAltaveu();
  2209  001534  EC92  F00E         	call	_playAltaveu	;wreg free
  2210                           
  2211                           ;Hora.c: 73:       segons = 0;
  2212  001538  0E00               	movlw	0
  2213  00153A  6E0C               	movwf	_segons^0,c
  2214  00153C                     l5994:
  2215                           
  2216                           ;Hora.c: 76:     state = 0;
  2217  00153C  0E00               	movlw	0
  2218  00153E  6E0B               	movwf	motorHora@state^0,c
  2219  001540  0012               	return	
  2220  001542                     l5998:
  2221  001542  500B               	movf	motorHora@state^0,w,c
  2222  001544  6E71               	movwf	??_motorHora^0,c
  2223  001546  6A72               	clrf	(??_motorHora+1)^0,c
  2224                           
  2225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2226                           ; Switch size 1, requested type "simple"
  2227                           ; Number of cases is 1, Range of values is 0 to 0
  2228                           ; switch strategies available:
  2229                           ; Name         Instructions Cycles
  2230                           ; simple_byte            4     3 (average)
  2231                           ;	Chosen strategy is simple_byte
  2232  001548  5072               	movf	(??_motorHora+1)^0,w,c
  2233  00154A  0A00               	xorlw	0	; case 0
  2234  00154C  A4D8               	btfss	status,2,c
  2235  00154E  0012               	return	
  2236                           
  2237                           ; Switch size 1, requested type "simple"
  2238                           ; Number of cases is 1, Range of values is 0 to 0
  2239                           ; switch strategies available:
  2240                           ; Name         Instructions Cycles
  2241                           ; simple_byte            4     3 (average)
  2242                           ;	Chosen strategy is simple_byte
  2243  001550  5071               	movf	??_motorHora^0,w,c
  2244  001552  0A00               	xorlw	0	; case 0
  2245  001554  A4D8               	btfss	status,2,c
  2246  001556  0012               	return	
  2247  001558  D7C2               	goto	l5950
  2248  00155A                     __end_of_motorHora:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _playAltaveu *****************
  2252 ;; Defined at:
  2253 ;;		line 14 in file "Altaveu.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		None
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/1
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1
  2267 ;;      Params:         0       0       0
  2268 ;;      Locals:         0       0       0
  2269 ;;      Temps:          0       0       0
  2270 ;;      Totals:         0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 2
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_motorHora
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text14
  2282  001D24                     __ptext14:
  2283                           	callstack 0
  2284  001D24                     _playAltaveu:
  2285                           	callstack 27
  2286                           
  2287                           ;Altaveu.c: 15:     reproduir = 1;
  2288                           
  2289                           ;incstack = 0
  2290  001D24  8E78               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2291  001D26  0012               	return		;funcret
  2292  001D28                     __end_of_playAltaveu:
  2293                           	callstack 0
  2294                           
  2295 ;; *************** function _motorAltaveu *****************
  2296 ;; Defined at:
  2297 ;;		line 17 in file "Altaveu.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/1
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1
  2311 ;;      Params:         0       0       0
  2312 ;;      Locals:         0       0       0
  2313 ;;      Temps:          3       0       0
  2314 ;;      Totals:         3       0       0
  2315 ;;Total ram usage:        3 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 3
  2318 ;; This function calls:
  2319 ;;		_TiGetTics
  2320 ;;		_TiResetTics
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text15
  2327  0012BE                     __ptext15:
  2328                           	callstack 0
  2329  0012BE                     _motorAltaveu:
  2330                           	callstack 27
  2331                           
  2332                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  2333                           
  2334                           ;incstack = 0
  2335  0012BE  D048               	goto	l6412
  2336  0012C0                     l739:
  2337                           
  2338                           ;Altaveu.c: 22:    if (reproduir) {
  2339  0012C0  AE78               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2340  0012C2  0012               	return	
  2341                           
  2342                           ;Altaveu.c: 23:     nota = 1;
  2343  0012C4  0E01               	movlw	1
  2344  0012C6  6E1D               	movwf	_nota^0,c
  2345                           
  2346                           ;Altaveu.c: 24:     copsNota = 0;
  2347  0012C8  0E00               	movlw	0
  2348  0012CA  6E1B               	movwf	_copsNota^0,c
  2349                           
  2350                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  2351  0012CC  501C               	movf	_timerAltaveu^0,w,c
  2352  0012CE  ECDC  F00D         	call	_TiResetTics
  2353  0012D2                     l6376:
  2354                           
  2355                           ;Altaveu.c: 26:     state = 1;
  2356  0012D2  0E01               	movlw	1
  2357  0012D4  6E1A               	movwf	motorAltaveu@state^0,c
  2358  0012D6  0012               	return	
  2359  0012D8                     l6378:
  2360                           
  2361                           ;Altaveu.c: 30:    if (nota > 5) {
  2362  0012D8  0E05               	movlw	5
  2363  0012DA  641D               	cpfsgt	_nota^0,c
  2364  0012DC  D004               	goto	l6384
  2365                           
  2366                           ;Altaveu.c: 31:     reproduir = 0;
  2367  0012DE  9E78               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2368                           
  2369                           ;Altaveu.c: 32:     state = 0;
  2370  0012E0  0E00               	movlw	0
  2371  0012E2  6E1A               	movwf	motorAltaveu@state^0,c
  2372                           
  2373                           ;Altaveu.c: 33:    }
  2374  0012E4  0012               	return	
  2375  0012E6                     l6384:
  2376  0012E6  0EA8               	movlw	168
  2377  0012E8  181B               	xorwf	_copsNota^0,w,c
  2378  0012EA  A4D8               	btfss	status,2,c
  2379  0012EC  D004               	goto	l6392
  2380                           
  2381                           ;Altaveu.c: 35:     nota++;
  2382  0012EE  2A1D               	incf	_nota^0,f,c
  2383                           
  2384                           ;Altaveu.c: 36:     copsNota = 0;
  2385  0012F0  0E00               	movlw	0
  2386  0012F2  6E1B               	movwf	_copsNota^0,c
  2387  0012F4  D7EE               	goto	l6376
  2388  0012F6                     l6392:
  2389  0012F6  501C               	movf	_timerAltaveu^0,w,c
  2390  0012F8  EC5F  F00D         	call	_TiGetTics
  2391  0012FC  501D               	movf	_nota^0,w,c
  2392  0012FE  6E71               	movwf	??_motorAltaveu^0,c
  2393  001300  6A72               	clrf	(??_motorAltaveu+1)^0,c
  2394  001302  506A               	movf	?_TiGetTics^0,w,c
  2395  001304  5C71               	subwf	??_motorAltaveu^0,w,c
  2396  001306  5072               	movf	(??_motorAltaveu+1)^0,w,c
  2397  001308  0A80               	xorlw	128
  2398  00130A  6E73               	movwf	(??_motorAltaveu+2)^0,c
  2399  00130C  506B               	movf	(?_TiGetTics+1)^0,w,c
  2400  00130E  0A80               	xorlw	128
  2401  001310  5873               	subwfb	(??_motorAltaveu+2)^0,w,c
  2402  001312  B0D8               	btfsc	status,0,c
  2403  001314  0012               	return	
  2404                           
  2405                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  2406  001316  808A               	bsf	138,0,c	;volatile
  2407                           
  2408                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  2409  001318  501C               	movf	_timerAltaveu^0,w,c
  2410  00131A  ECDC  F00D         	call	_TiResetTics
  2411                           
  2412                           ;Altaveu.c: 42:     state = 2;
  2413  00131E  0E02               	movlw	2
  2414  001320  6E1A               	movwf	motorAltaveu@state^0,c
  2415  001322  0012               	return	
  2416  001324                     l6400:
  2417                           
  2418                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  2419  001324  501C               	movf	_timerAltaveu^0,w,c
  2420  001326  EC5F  F00D         	call	_TiGetTics
  2421  00132A  501D               	movf	_nota^0,w,c
  2422  00132C  6E71               	movwf	??_motorAltaveu^0,c
  2423  00132E  6A72               	clrf	(??_motorAltaveu+1)^0,c
  2424  001330  506A               	movf	?_TiGetTics^0,w,c
  2425  001332  5C71               	subwf	??_motorAltaveu^0,w,c
  2426  001334  5072               	movf	(??_motorAltaveu+1)^0,w,c
  2427  001336  0A80               	xorlw	128
  2428  001338  6E73               	movwf	(??_motorAltaveu+2)^0,c
  2429  00133A  506B               	movf	(?_TiGetTics+1)^0,w,c
  2430  00133C  0A80               	xorlw	128
  2431  00133E  5873               	subwfb	(??_motorAltaveu+2)^0,w,c
  2432  001340  B0D8               	btfsc	status,0,c
  2433  001342  0012               	return	
  2434                           
  2435                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  2436  001344  908A               	bcf	138,0,c	;volatile
  2437                           
  2438                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  2439  001346  501C               	movf	_timerAltaveu^0,w,c
  2440  001348  ECDC  F00D         	call	_TiResetTics
  2441                           
  2442                           ;Altaveu.c: 49:     copsNota++;
  2443  00134C  2A1B               	incf	_copsNota^0,f,c
  2444  00134E  D7C1               	goto	l6376
  2445  001350                     l6412:
  2446  001350  501A               	movf	motorAltaveu@state^0,w,c
  2447  001352  6E71               	movwf	??_motorAltaveu^0,c
  2448  001354  6A72               	clrf	(??_motorAltaveu+1)^0,c
  2449                           
  2450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2451                           ; Switch size 1, requested type "simple"
  2452                           ; Number of cases is 1, Range of values is 0 to 0
  2453                           ; switch strategies available:
  2454                           ; Name         Instructions Cycles
  2455                           ; simple_byte            4     3 (average)
  2456                           ;	Chosen strategy is simple_byte
  2457  001356  5072               	movf	(??_motorAltaveu+1)^0,w,c
  2458  001358  0A00               	xorlw	0	; case 0
  2459  00135A  A4D8               	btfss	status,2,c
  2460  00135C  0012               	return	
  2461                           
  2462                           ; Switch size 1, requested type "simple"
  2463                           ; Number of cases is 3, Range of values is 0 to 2
  2464                           ; switch strategies available:
  2465                           ; Name         Instructions Cycles
  2466                           ; simple_byte           10     6 (average)
  2467                           ;	Chosen strategy is simple_byte
  2468  00135E  5071               	movf	??_motorAltaveu^0,w,c
  2469  001360  0A00               	xorlw	0	; case 0
  2470  001362  B4D8               	btfsc	status,2,c
  2471  001364  D7AD               	goto	l739
  2472  001366  0A01               	xorlw	1	; case 1
  2473  001368  B4D8               	btfsc	status,2,c
  2474  00136A  D7B6               	goto	l6378
  2475  00136C  0A03               	xorlw	3	; case 2
  2476  00136E  A4D8               	btfss	status,2,c
  2477  001370  0012               	return	
  2478  001372  D7D8               	goto	l6400
  2479  001374                     __end_of_motorAltaveu:
  2480                           	callstack 0
  2481                           
  2482 ;; *************** function _menu *****************
  2483 ;; Defined at:
  2484 ;;		line 39 in file "Menu.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/1
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1
  2498 ;;      Params:         0       0       0
  2499 ;;      Locals:         0       0       0
  2500 ;;      Temps:          0       2       0
  2501 ;;      Totals:         0       2       0
  2502 ;;Total ram usage:        2 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 6
  2505 ;; This function calls:
  2506 ;;		_GLCDMostraMenu
  2507 ;;		_HActualitzaHora
  2508 ;;		_JJuguem
  2509 ;;		_JUsuari
  2510 ;;		_JnovaDireccio
  2511 ;;		_JnovaTecla
  2512 ;;		_LcClear
  2513 ;;		_LcGotoXY
  2514 ;;		_LcLliure
  2515 ;;		_LcNewString
  2516 ;;		_LcPutChar
  2517 ;;		_NoFerMenu
  2518 ;;		_SMSoff
  2519 ;;		_SMSon
  2520 ;;		_SiFerMenu
  2521 ;;		_TiGetTics
  2522 ;;		_TiResetTics
  2523 ;;		_URegister
  2524 ;;		_UcheckExists
  2525 ;;		_UcheckExistsGetError
  2526 ;;		_UcheckExistsNotFinished
  2527 ;;		_UenviaChar
  2528 ;;		_UenviaPas
  2529 ;;		_UgetNumUsuaris
  2530 ;;		_UgetUserName
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text16
  2537  0002C8                     __ptext16:
  2538                           	callstack 0
  2539  0002C8                     _menu:
  2540                           	callstack 24
  2541                           
  2542                           ;Menu.c: 40:  static char state = 0;;Menu.c: 42:  switch(state) {
  2543                           
  2544                           ;incstack = 0
  2545  0002C8  D1F4               	goto	l6360
  2546  0002CA                     l6006:
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;Menu.c: 44:    LcClear();
  2550  0002CA  EC87  F00D         	call	_LcClear	;wreg free
  2551                           
  2552                           ;Menu.c: 45:    LcNewString(loginText);
  2553  0002CE  0EB8               	movlw	low _loginText
  2554  0002D0  6E6D               	movwf	LcNewString@new_s^0,c
  2555  0002D2  6A6E               	clrf	(LcNewString@new_s+1)^0,c
  2556  0002D4  EC34  F00E         	call	_LcNewString	;wreg free
  2557                           
  2558                           ;Menu.c: 46:    state = 1;
  2559  0002D8  0E01               	movlw	1
  2560  0002DA  6E25               	movwf	menu@state^0,c
  2561                           
  2562                           ;Menu.c: 47:   break;
  2563  0002DC  0012               	return	
  2564  0002DE                     l6012:
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;Menu.c: 49:    if (LcLliure()) {
  2568  0002DE  EC3A  F00E         	call	_LcLliure	;wreg free
  2569  0002E2  A0D8               	btfss	status,0,c
  2570  0002E4  0012               	return	
  2571                           
  2572                           ;Menu.c: 50:     LcGotoXY(0,1);
  2573  0002E6  0E01               	movlw	1
  2574  0002E8  6E72               	movwf	LcGotoXY@Row^0,c
  2575  0002EA  0E00               	movlw	0
  2576  0002EC  EC8F  F00C         	call	_LcGotoXY
  2577                           
  2578                           ;Menu.c: 51:     LcNewString(registerText);
  2579  0002F0  0EAD               	movlw	low _registerText
  2580  0002F2  6E6D               	movwf	LcNewString@new_s^0,c
  2581  0002F4  6A6E               	clrf	(LcNewString@new_s+1)^0,c
  2582  0002F6  EC34  F00E         	call	_LcNewString	;wreg free
  2583                           
  2584                           ;Menu.c: 52:     NovaTecla = -1;
  2585  0002FA  685A               	setf	_NovaTecla^0,c
  2586                           
  2587                           ;Menu.c: 53:     state = 2;
  2588  0002FC  0E02               	movlw	2
  2589  0002FE  6E25               	movwf	menu@state^0,c
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;Menu.c: 55:   break;
  2593                           
  2594                           ;Menu.c: 54:    }
  2595  000300  0012               	return	
  2596  000302                     l6022:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;Menu.c: 57:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  2600  000302  045A               	decf	_NovaTecla^0,w,c
  2601  000304  A4D8               	btfss	status,2,c
  2602  000306  D009               	goto	l6030
  2603                           
  2604                           ; BSR set to: 0
  2605  000308  EC94  F00E         	call	_UgetNumUsuaris	;wreg free
  2606  00030C  0900               	iorlw	0
  2607  00030E  B4D8               	btfsc	status,2,c
  2608  000310  D004               	goto	l6030
  2609                           
  2610                           ;Menu.c: 58:     loginNOTRegister = 1;
  2611  000312  8679               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2612  000314                     l6028:
  2613                           
  2614                           ;Menu.c: 59:     state = 3;
  2615  000314  0E03               	movlw	3
  2616  000316  6E25               	movwf	menu@state^0,c
  2617                           
  2618                           ;Menu.c: 60:    }
  2619  000318  0012               	return	
  2620  00031A                     l6030:
  2621  00031A  0E02               	movlw	2
  2622  00031C  185A               	xorwf	_NovaTecla^0,w,c
  2623  00031E  A4D8               	btfss	status,2,c
  2624  000320  0012               	return	
  2625                           
  2626                           ;Menu.c: 62:     loginNOTRegister = 0;
  2627  000322  9679               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2628  000324  D7F7               	goto	l6028
  2629  000326                     l487:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;Menu.c: 67:    NovaTecla = -1;
  2633  000326  685A               	setf	_NovaTecla^0,c
  2634                           
  2635                           ;Menu.c: 68:    novaLletra = -1;
  2636  000328  6859               	setf	_novaLletra^0,c
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;Menu.c: 69:    LcClear();
  2640  00032A  EC87  F00D         	call	_LcClear	;wreg free
  2641                           
  2642                           ;Menu.c: 70:    LcNewString("USER: ");
  2643  00032E  0EBF               	movlw	low STR_1
  2644  000330  6E6D               	movwf	LcNewString@new_s^0,c
  2645  000332  506D               	movf	LcNewString@new_s^0,w,c
  2646  000334  A4D8               	btfss	status,2,c
  2647  000336  0E02               	movlw	high __smallconst
  2648  000338  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  2649  00033A  EC34  F00E         	call	_LcNewString	;wreg free
  2650                           
  2651                           ;Menu.c: 71:    state = 4;
  2652  00033E  0E04               	movlw	4
  2653  000340  6E25               	movwf	menu@state^0,c
  2654                           
  2655                           ;Menu.c: 72:   break;
  2656  000342  0012               	return	
  2657  000344                     l6042:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;Menu.c: 74:    if (LcLliure()) {
  2661  000344  EC3A  F00E         	call	_LcLliure	;wreg free
  2662  000348  A0D8               	btfss	status,0,c
  2663  00034A  0012               	return	
  2664                           
  2665                           ;Menu.c: 75:     LcGotoXY(0,1);
  2666  00034C  0E01               	movlw	1
  2667  00034E  6E72               	movwf	LcGotoXY@Row^0,c
  2668  000350  0E00               	movlw	0
  2669  000352  EC8F  F00C         	call	_LcGotoXY
  2670                           
  2671                           ;Menu.c: 76:     LcNewString("PSWD: ");
  2672  000356  0EB8               	movlw	low STR_2
  2673  000358  6E6D               	movwf	LcNewString@new_s^0,c
  2674  00035A  506D               	movf	LcNewString@new_s^0,w,c
  2675  00035C  A4D8               	btfss	status,2,c
  2676  00035E  0E02               	movlw	high __smallconst
  2677  000360  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  2678  000362  EC34  F00E         	call	_LcNewString	;wreg free
  2679                           
  2680                           ;Menu.c: 77:     state = 5;
  2681  000366  0E05               	movlw	5
  2682  000368  6E25               	movwf	menu@state^0,c
  2683  00036A  0012               	return	
  2684  00036C                     l6050:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;Menu.c: 81:    if (LcLliure()) {
  2688  00036C  EC3A  F00E         	call	_LcLliure	;wreg free
  2689  000370  A0D8               	btfss	status,0,c
  2690  000372  0012               	return	
  2691                           
  2692                           ;Menu.c: 82:     LcGotoXY(6,0);
  2693  000374  0E00               	movlw	0
  2694  000376  6E72               	movwf	LcGotoXY@Row^0,c
  2695  000378  0E06               	movlw	6
  2696  00037A  EC8F  F00C         	call	_LcGotoXY
  2697                           
  2698                           ;Menu.c: 83:     SMSon();
  2699  00037E  EC84  F00E         	call	_SMSon	;wreg free
  2700                           
  2701                           ;Menu.c: 84:     tmp =0;
  2702  000382  0E00               	movlw	0
  2703  000384  6E29               	movwf	_tmp^0,c
  2704  000386                     l6058:
  2705                           
  2706                           ;Menu.c: 85:     state = 6;
  2707  000386  0E06               	movlw	6
  2708  000388  6E25               	movwf	menu@state^0,c
  2709  00038A  0012               	return	
  2710  00038C                     l6060:
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;Menu.c: 89:    if (novaLletra > 47 && NovaTecla != 10) {
  2714  00038C  5059               	movf	_novaLletra^0,w,c
  2715  00038E  0A80               	xorlw	128
  2716  000390  0F50               	addlw	-176
  2717  000392  A0D8               	btfss	status,0,c
  2718  000394  D00F               	goto	l6070
  2719                           
  2720                           ; BSR set to: 0
  2721  000396  0E0A               	movlw	10
  2722  000398  185A               	xorwf	_NovaTecla^0,w,c
  2723  00039A  B4D8               	btfsc	status,2,c
  2724  00039C  D00B               	goto	l6070
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;Menu.c: 90:     LcPutChar(novaLletra);
  2728  00039E  5059               	movf	_novaLletra^0,w,c
  2729  0003A0  EC21  F00C         	call	_LcPutChar
  2730                           
  2731                           ;Menu.c: 91:     UenviaChar(novaLletra,tmp);
  2732  0003A4  C029  F06A         	movff	_tmp,UenviaChar@pos
  2733  0003A8  5059               	movf	_novaLletra^0,w,c
  2734  0003AA  EC0E  F00E         	call	_UenviaChar
  2735  0003AE                     l6068:
  2736                           
  2737                           ;Menu.c: 92:     state = 7;
  2738  0003AE  0E07               	movlw	7
  2739  0003B0  6E25               	movwf	menu@state^0,c
  2740                           
  2741                           ;Menu.c: 93:    }
  2742  0003B2  0012               	return	
  2743  0003B4                     l6070:
  2744                           
  2745                           ; BSR set to: 0
  2746  0003B4  0E0B               	movlw	11
  2747  0003B6  185A               	xorwf	_NovaTecla^0,w,c
  2748  0003B8  A4D8               	btfss	status,2,c
  2749  0003BA  0012               	return	
  2750  0003BC  D7F8               	goto	l6068
  2751  0003BE                     l6074:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;Menu.c: 99:    if (tmp != 7 && NovaTecla != 11) {
  2755  0003BE  0E07               	movlw	7
  2756  0003C0  1829               	xorwf	_tmp^0,w,c
  2757  0003C2  B4D8               	btfsc	status,2,c
  2758  0003C4  D008               	goto	l6086
  2759                           
  2760                           ; BSR set to: 0
  2761  0003C6  0E0B               	movlw	11
  2762  0003C8  185A               	xorwf	_NovaTecla^0,w,c
  2763  0003CA  B4D8               	btfsc	status,2,c
  2764  0003CC  D004               	goto	l6086
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;Menu.c: 100:     tmp++;
  2768  0003CE  2A29               	incf	_tmp^0,f,c
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;Menu.c: 101:     NovaTecla = -1;
  2772  0003D0  685A               	setf	_NovaTecla^0,c
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;Menu.c: 102:     novaLletra = -1;
  2776  0003D2  6859               	setf	_novaLletra^0,c
  2777  0003D4  D7D8               	goto	l6058
  2778  0003D6                     l6086:
  2779                           
  2780                           ; BSR set to: 0
  2781  0003D6  0E07               	movlw	7
  2782  0003D8  1829               	xorwf	_tmp^0,w,c
  2783  0003DA  B4D8               	btfsc	status,2,c
  2784  0003DC  D004               	goto	u6020
  2785                           
  2786                           ; BSR set to: 0
  2787  0003DE  0E0B               	movlw	11
  2788  0003E0  185A               	xorwf	_NovaTecla^0,w,c
  2789  0003E2  A4D8               	btfss	status,2,c
  2790  0003E4  0012               	return	
  2791  0003E6                     u6020:
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;Menu.c: 106:     LcGotoXY(6,1);
  2795  0003E6  0E01               	movlw	1
  2796  0003E8  6E72               	movwf	LcGotoXY@Row^0,c
  2797  0003EA  0E06               	movlw	6
  2798  0003EC  EC8F  F00C         	call	_LcGotoXY
  2799                           
  2800                           ;Menu.c: 107:     UenviaChar('\0',tmp);
  2801  0003F0  C029  F06A         	movff	_tmp,UenviaChar@pos
  2802  0003F4  0E00               	movlw	0
  2803  0003F6  EC0E  F00E         	call	_UenviaChar
  2804                           
  2805                           ;Menu.c: 108:     NovaTecla = -1;
  2806  0003FA  685A               	setf	_NovaTecla^0,c
  2807                           
  2808                           ;Menu.c: 109:     novaLletra = -1;
  2809  0003FC  6859               	setf	_novaLletra^0,c
  2810                           
  2811                           ;Menu.c: 110:     tmp = 0;
  2812  0003FE  0E00               	movlw	0
  2813  000400  6E29               	movwf	_tmp^0,c
  2814  000402                     l6100:
  2815                           
  2816                           ;Menu.c: 111:     state = 8;
  2817  000402  0E08               	movlw	8
  2818  000404  6E25               	movwf	menu@state^0,c
  2819  000406  0012               	return	
  2820  000408                     l6102:
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;Menu.c: 115:    if (novaLletra > 47 && NovaTecla != 10) {
  2824  000408  5059               	movf	_novaLletra^0,w,c
  2825  00040A  0A80               	xorlw	128
  2826  00040C  0F50               	addlw	-176
  2827  00040E  A0D8               	btfss	status,0,c
  2828  000410  D00F               	goto	l6112
  2829                           
  2830                           ; BSR set to: 0
  2831  000412  0E0A               	movlw	10
  2832  000414  185A               	xorwf	_NovaTecla^0,w,c
  2833  000416  B4D8               	btfsc	status,2,c
  2834  000418  D00B               	goto	l6112
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;Menu.c: 116:     LcPutChar(novaLletra);
  2838  00041A  5059               	movf	_novaLletra^0,w,c
  2839  00041C  EC21  F00C         	call	_LcPutChar
  2840                           
  2841                           ;Menu.c: 117:     UenviaPas(novaLletra,tmp);
  2842  000420  C029  F06A         	movff	_tmp,UenviaPas@pos
  2843  000424  5059               	movf	_novaLletra^0,w,c
  2844  000426  EC06  F00E         	call	_UenviaPas
  2845  00042A                     l6110:
  2846                           
  2847                           ;Menu.c: 118:     state = 9;
  2848  00042A  0E09               	movlw	9
  2849  00042C  6E25               	movwf	menu@state^0,c
  2850                           
  2851                           ;Menu.c: 119:    }
  2852  00042E  0012               	return	
  2853  000430                     l6112:
  2854                           
  2855                           ; BSR set to: 0
  2856  000430  0E0B               	movlw	11
  2857  000432  185A               	xorwf	_NovaTecla^0,w,c
  2858  000434  A4D8               	btfss	status,2,c
  2859  000436  0012               	return	
  2860  000438  D7F8               	goto	l6110
  2861  00043A                     l6116:
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;Menu.c: 125:    if (tmp != 7 && NovaTecla != 11) {
  2865  00043A  0E07               	movlw	7
  2866  00043C  1829               	xorwf	_tmp^0,w,c
  2867  00043E  B4D8               	btfsc	status,2,c
  2868  000440  D008               	goto	l6128
  2869                           
  2870                           ; BSR set to: 0
  2871  000442  0E0B               	movlw	11
  2872  000444  185A               	xorwf	_NovaTecla^0,w,c
  2873  000446  B4D8               	btfsc	status,2,c
  2874  000448  D004               	goto	l6128
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;Menu.c: 126:     tmp++;
  2878  00044A  2A29               	incf	_tmp^0,f,c
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;Menu.c: 127:     NovaTecla = -1;
  2882  00044C  685A               	setf	_NovaTecla^0,c
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;Menu.c: 128:     novaLletra = -1;
  2886  00044E  6859               	setf	_novaLletra^0,c
  2887  000450  D7D8               	goto	l6100
  2888  000452                     l6128:
  2889                           
  2890                           ; BSR set to: 0
  2891  000452  0E07               	movlw	7
  2892  000454  1829               	xorwf	_tmp^0,w,c
  2893  000456  B4D8               	btfsc	status,2,c
  2894  000458  D004               	goto	u6090
  2895                           
  2896                           ; BSR set to: 0
  2897  00045A  0E0B               	movlw	11
  2898  00045C  185A               	xorwf	_NovaTecla^0,w,c
  2899  00045E  A4D8               	btfss	status,2,c
  2900  000460  0012               	return	
  2901  000462                     u6090:
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;Menu.c: 132:     UenviaPas('\0',tmp);
  2905  000462  C029  F06A         	movff	_tmp,UenviaPas@pos
  2906  000466  0E00               	movlw	0
  2907  000468  EC06  F00E         	call	_UenviaPas
  2908                           
  2909                           ;Menu.c: 133:     NovaTecla = -1;
  2910  00046C  685A               	setf	_NovaTecla^0,c
  2911                           
  2912                           ;Menu.c: 134:     novaLletra = -1;
  2913  00046E  6859               	setf	_novaLletra^0,c
  2914                           
  2915                           ;Menu.c: 135:     tmp = 0;
  2916  000470  0E00               	movlw	0
  2917  000472  6E29               	movwf	_tmp^0,c
  2918                           
  2919                           ;Menu.c: 136:     UcheckExists();
  2920  000474  EC96  F00E         	call	_UcheckExists	;wreg free
  2921                           
  2922                           ;Menu.c: 137:     SMSoff();
  2923  000478  EC87  F00E         	call	_SMSoff	;wreg free
  2924                           
  2925                           ;Menu.c: 138:     state = 10;
  2926  00047C  0E0A               	movlw	10
  2927  00047E  6E25               	movwf	menu@state^0,c
  2928  000480  0012               	return	
  2929  000482                     l6146:
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;Menu.c: 142:    if (!UcheckExistsNotFinished()) {
  2933  000482  EC28  F00E         	call	_UcheckExistsNotFinished	;wreg free
  2934  000486  B0D8               	btfsc	status,0,c
  2935  000488  0012               	return	
  2936                           
  2937                           ;Menu.c: 143:     indexUsuari = UcheckExistsGetError();
  2938  00048A  EC4C  F00E         	call	_UcheckExistsGetError	;wreg free
  2939  00048E  A0D8               	btfss	status,0,c
  2940  000490  D002               	goto	u6110
  2941  000492  0E01               	movlw	1
  2942  000494  D001               	goto	u6120
  2943  000496                     u6110:
  2944  000496  0E00               	movlw	0
  2945  000498                     u6120:
  2946  000498  6E26               	movwf	_indexUsuari^0,c
  2947                           
  2948                           ;Menu.c: 144:     state = 11;
  2949  00049A  0E0B               	movlw	11
  2950  00049C  6E25               	movwf	menu@state^0,c
  2951  00049E  0012               	return	
  2952  0004A0                     l6152:
  2953                           
  2954                           ;Menu.c: 149:     state = 12;
  2955  0004A0  0E0C               	movlw	12
  2956  0004A2  6E25               	movwf	menu@state^0,c
  2957                           
  2958                           ;Menu.c: 150:    }
  2959  0004A4  0012               	return	
  2960  0004A6                     l6158:
  2961                           
  2962                           ;Menu.c: 153:     state = 0;
  2963  0004A6  0E00               	movlw	0
  2964  0004A8  6E25               	movwf	menu@state^0,c
  2965                           
  2966                           ;Menu.c: 154:    }
  2967  0004AA  0012               	return	
  2968  0004AC                     l6170:
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;Menu.c: 164:    LcClear();
  2972  0004AC  EC87  F00D         	call	_LcClear	;wreg free
  2973                           
  2974                           ;Menu.c: 165:    SiFerMenu();
  2975  0004B0  EC9A  F00E         	call	_SiFerMenu	;wreg free
  2976                           
  2977                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  2978  0004B4  5027               	movf	_menuDalt^0,w,c
  2979  0004B6  EC2E  F00E         	call	_GLCDMostraMenu
  2980                           
  2981                           ;Menu.c: 167:    novaDireccio = -1;
  2982  0004BA  6858               	setf	_novaDireccio^0,c
  2983                           
  2984                           ;Menu.c: 168:    NovaTecla = -1;
  2985  0004BC  685A               	setf	_NovaTecla^0,c
  2986                           
  2987                           ;Menu.c: 169:    state = 13;
  2988  0004BE  0E0D               	movlw	13
  2989  0004C0  6E25               	movwf	menu@state^0,c
  2990                           
  2991                           ;Menu.c: 170:   break;
  2992  0004C2  0012               	return	
  2993  0004C4                     l6182:
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;Menu.c: 172:    if (novaDireccio == 8) {
  2997  0004C4  0E08               	movlw	8
  2998  0004C6  1858               	xorwf	_novaDireccio^0,w,c
  2999  0004C8  A4D8               	btfss	status,2,c
  3000  0004CA  D005               	goto	l6190
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  3004  0004CC  0E04               	movlw	4
  3005  0004CE  6027               	cpfslt	_menuDalt^0,c
  3006  0004D0  D7E7               	goto	l6152
  3007                           
  3008                           ; BSR set to: 0
  3009  0004D2  2A27               	incf	_menuDalt^0,f,c
  3010  0004D4  D7E5               	goto	l6152
  3011  0004D6                     l6190:
  3012                           
  3013                           ; BSR set to: 0
  3014  0004D6  0E02               	movlw	2
  3015  0004D8  1858               	xorwf	_novaDireccio^0,w,c
  3016  0004DA  A4D8               	btfss	status,2,c
  3017  0004DC  D005               	goto	l6198
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  3021  0004DE  5027               	movf	_menuDalt^0,w,c
  3022  0004E0  B4D8               	btfsc	status,2,c
  3023  0004E2  D7DE               	goto	l6152
  3024                           
  3025                           ; BSR set to: 0
  3026  0004E4  0627               	decf	_menuDalt^0,f,c
  3027  0004E6  D7DC               	goto	l6152
  3028  0004E8                     l6198:
  3029                           
  3030                           ; BSR set to: 0
  3031  0004E8  0E0B               	movlw	11
  3032  0004EA  185A               	xorwf	_NovaTecla^0,w,c
  3033  0004EC  A4D8               	btfss	status,2,c
  3034  0004EE  D013               	goto	l6210
  3035                           
  3036                           ; BSR set to: 0
  3037  0004F0  0E03               	movlw	3
  3038  0004F2  1827               	xorwf	_menuDalt^0,w,c
  3039  0004F4  A4D8               	btfss	status,2,c
  3040  0004F6  D00F               	goto	l6210
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;Menu.c: 181:     NoFerMenu();
  3044  0004F8  EC9C  F00E         	call	_NoFerMenu	;wreg free
  3045                           
  3046                           ;Menu.c: 182:     LcClear();
  3047  0004FC  EC87  F00D         	call	_LcClear	;wreg free
  3048                           
  3049                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  3050  000500  0EAF               	movlw	low STR_3
  3051  000502  6E6D               	movwf	LcNewString@new_s^0,c
  3052  000504  506D               	movf	LcNewString@new_s^0,w,c
  3053  000506  A4D8               	btfss	status,2,c
  3054  000508  0E02               	movlw	high __smallconst
  3055  00050A  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  3056  00050C  EC34  F00E         	call	_LcNewString	;wreg free
  3057                           
  3058                           ;Menu.c: 184:     state = 14;
  3059  000510  0E0E               	movlw	14
  3060  000512  6E25               	movwf	menu@state^0,c
  3061                           
  3062                           ;Menu.c: 185:    }
  3063  000514  0012               	return	
  3064  000516                     l6210:
  3065                           
  3066                           ; BSR set to: 0
  3067  000516  0E0B               	movlw	11
  3068  000518  185A               	xorwf	_NovaTecla^0,w,c
  3069  00051A  A4D8               	btfss	status,2,c
  3070  00051C  D013               	goto	l6224
  3071                           
  3072                           ; BSR set to: 0
  3073  00051E  0427               	decf	_menuDalt^0,w,c
  3074  000520  A4D8               	btfss	status,2,c
  3075  000522  D010               	goto	l6224
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;Menu.c: 187:     LcClear();
  3079  000524  EC87  F00D         	call	_LcClear	;wreg free
  3080                           
  3081                           ;Menu.c: 188:     NoFerMenu();
  3082  000528  EC9C  F00E         	call	_NoFerMenu	;wreg free
  3083                           
  3084                           ;Menu.c: 189:     LcNewString("Modify Time:");
  3085  00052C  0EA2               	movlw	low STR_4
  3086  00052E  6E6D               	movwf	LcNewString@new_s^0,c
  3087  000530  506D               	movf	LcNewString@new_s^0,w,c
  3088  000532  A4D8               	btfss	status,2,c
  3089  000534  0E02               	movlw	high __smallconst
  3090  000536  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  3091  000538  EC34  F00E         	call	_LcNewString	;wreg free
  3092                           
  3093                           ;Menu.c: 190:     NovaTecla = -1;
  3094  00053C  685A               	setf	_NovaTecla^0,c
  3095                           
  3096                           ;Menu.c: 191:     state = 16;
  3097  00053E  0E10               	movlw	16
  3098  000540  6E25               	movwf	menu@state^0,c
  3099                           
  3100                           ;Menu.c: 192:    }
  3101  000542  0012               	return	
  3102  000544                     l6224:
  3103                           
  3104                           ; BSR set to: 0
  3105  000544  5027               	movf	_menuDalt^0,w,c
  3106  000546  A4D8               	btfss	status,2,c
  3107  000548  0012               	return	
  3108                           
  3109                           ; BSR set to: 0
  3110  00054A  0E0B               	movlw	11
  3111  00054C  185A               	xorwf	_NovaTecla^0,w,c
  3112  00054E  A4D8               	btfss	status,2,c
  3113  000550  0012               	return	
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;Menu.c: 194:     NoFerMenu();
  3117  000552  EC9C  F00E         	call	_NoFerMenu	;wreg free
  3118                           
  3119                           ;Menu.c: 195:     NovaTecla = -1;
  3120  000556  685A               	setf	_NovaTecla^0,c
  3121                           
  3122                           ;Menu.c: 196:     LcClear();
  3123  000558  EC87  F00D         	call	_LcClear	;wreg free
  3124                           
  3125                           ;Menu.c: 197:     LcNewString("TIME REMAINING:");
  3126  00055C  0E92               	movlw	low STR_5
  3127  00055E  6E6D               	movwf	LcNewString@new_s^0,c
  3128  000560  506D               	movf	LcNewString@new_s^0,w,c
  3129  000562  A4D8               	btfss	status,2,c
  3130  000564  0E02               	movlw	high __smallconst
  3131  000566  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  3132  000568  EC34  F00E         	call	_LcNewString	;wreg free
  3133                           
  3134                           ;Menu.c: 198:     JJuguem(indexUsuari);
  3135  00056C  5026               	movf	_indexUsuari^0,w,c
  3136  00056E  EC58  F00E         	call	_JJuguem
  3137  000572                     l6238:
  3138                           
  3139                           ;Menu.c: 199:     state = 21;
  3140  000572  0E15               	movlw	21
  3141  000574  6E25               	movwf	menu@state^0,c
  3142  000576  0012               	return	
  3143  000578                     l6240:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;Menu.c: 203:    if (LcLliure()) {
  3147  000578  EC3A  F00E         	call	_LcLliure	;wreg free
  3148  00057C  A0D8               	btfss	status,0,c
  3149  00057E  0012               	return	
  3150                           
  3151                           ;Menu.c: 204:     LcNewString(UgetUserName(indexUsuari));
  3152  000580  5026               	movf	_indexUsuari^0,w,c
  3153  000582  ECF3  F00D         	call	_UgetUserName
  3154  000586  C06A  F06D         	movff	?_UgetUserName,LcNewString@new_s
  3155  00058A  C06B  F06E         	movff	?_UgetUserName+1,LcNewString@new_s+1
  3156  00058E  EC34  F00E         	call	_LcNewString	;wreg free
  3157                           
  3158                           ;Menu.c: 205:     TiResetTics(timerMenu);
  3159  000592  5028               	movf	_timerMenu^0,w,c
  3160  000594  ECDC  F00D         	call	_TiResetTics
  3161                           
  3162                           ;Menu.c: 206:     state = 15;
  3163  000598  0E0F               	movlw	15
  3164  00059A  6E25               	movwf	menu@state^0,c
  3165  00059C  0012               	return	
  3166  00059E                     l6248:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;Menu.c: 210:    if (TiGetTics(timerMenu) > 2410) {
  3170  00059E  5028               	movf	_timerMenu^0,w,c
  3171  0005A0  EC5F  F00D         	call	_TiGetTics
  3172  0005A4  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  3173  0005A6  0012               	return	
  3174  0005A8  0E6B               	movlw	107
  3175  0005AA  5C6A               	subwf	?_TiGetTics^0,w,c
  3176  0005AC  0E09               	movlw	9
  3177  0005AE  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  3178  0005B0  A0D8               	btfss	status,0,c
  3179  0005B2  0012               	return	
  3180  0005B4  D778               	goto	l6158
  3181  0005B6                     l6252:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;Menu.c: 215:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3185  0005B6  EC3A  F00E         	call	_LcLliure	;wreg free
  3186  0005BA  B0D8               	btfsc	status,0,c
  3187  0005BC  BE5A               	btfsc	_NovaTecla^0,7,c
  3188  0005BE  D047               	goto	l6318
  3189  0005C0  505A               	movf	_NovaTecla^0,w,c
  3190  0005C2  0A80               	xorlw	128
  3191  0005C4  0F76               	addlw	-138
  3192  0005C6  B0D8               	btfsc	status,0,c
  3193  0005C8  D042               	goto	l6318
  3194                           
  3195                           ;Menu.c: 216:     LcGotoXY(0,1);
  3196  0005CA  0E01               	movlw	1
  3197  0005CC  6E72               	movwf	LcGotoXY@Row^0,c
  3198  0005CE  0E00               	movlw	0
  3199  0005D0  EC8F  F00C         	call	_LcGotoXY
  3200                           
  3201                           ;Menu.c: 217:     horaTmp[0] = NovaTecla+48;
  3202  0005D4  505A               	movf	_NovaTecla^0,w,c
  3203  0005D6  0F30               	addlw	48
  3204  0005D8  6E40               	movwf	_horaTmp^0,c
  3205                           
  3206                           ;Menu.c: 218:     LcPutChar(horaTmp[0]);
  3207  0005DA  5040               	movf	_horaTmp^0,w,c
  3208  0005DC  EC21  F00C         	call	_LcPutChar
  3209                           
  3210                           ;Menu.c: 219:     NovaTecla = -1;
  3211  0005E0  685A               	setf	_NovaTecla^0,c
  3212                           
  3213                           ;Menu.c: 220:     state = 17;
  3214  0005E2  0E11               	movlw	17
  3215  0005E4                     L1:
  3216  0005E4  6E25               	movwf	menu@state^0,c
  3217                           
  3218                           ;Menu.c: 221:    }
  3219  0005E6  0012               	return	
  3220  0005E8                     l6272:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;Menu.c: 227:    if (NovaTecla > -1 && NovaTecla < 10) {
  3224  0005E8  BE5A               	btfsc	_NovaTecla^0,7,c
  3225  0005EA  D031               	goto	l6318
  3226                           
  3227                           ; BSR set to: 0
  3228  0005EC  505A               	movf	_NovaTecla^0,w,c
  3229  0005EE  0A80               	xorlw	128
  3230  0005F0  0F76               	addlw	-138
  3231  0005F2  B0D8               	btfsc	status,0,c
  3232  0005F4  D02C               	goto	l6318
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;Menu.c: 228:     horaTmp[1] = NovaTecla+48;
  3236  0005F6  505A               	movf	_NovaTecla^0,w,c
  3237  0005F8  0F30               	addlw	48
  3238  0005FA  6E41               	movwf	(_horaTmp+1)^0,c
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;Menu.c: 229:     LcPutChar(horaTmp[1]);
  3242  0005FC  5041               	movf	(_horaTmp+1)^0,w,c
  3243  0005FE  EC21  F00C         	call	_LcPutChar
  3244                           
  3245                           ;Menu.c: 230:     NovaTecla = -1;
  3246  000602  685A               	setf	_NovaTecla^0,c
  3247                           
  3248                           ;Menu.c: 231:     LcPutChar(':');
  3249  000604  0E3A               	movlw	58
  3250  000606  EC21  F00C         	call	_LcPutChar
  3251                           
  3252                           ;Menu.c: 232:     state = 18;
  3253  00060A  0E12               	movlw	18
  3254  00060C  D7EB               	goto	L1
  3255  00060E                     l6290:
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;Menu.c: 239:    if (NovaTecla > -1 && NovaTecla < 10) {
  3259  00060E  BE5A               	btfsc	_NovaTecla^0,7,c
  3260  000610  D01E               	goto	l6318
  3261                           
  3262                           ; BSR set to: 0
  3263  000612  505A               	movf	_NovaTecla^0,w,c
  3264  000614  0A80               	xorlw	128
  3265  000616  0F76               	addlw	-138
  3266  000618  B0D8               	btfsc	status,0,c
  3267  00061A  D019               	goto	l6318
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;Menu.c: 240:     horaTmp[2] = NovaTecla+48;
  3271  00061C  505A               	movf	_NovaTecla^0,w,c
  3272  00061E  0F30               	addlw	48
  3273  000620  6E42               	movwf	(_horaTmp+2)^0,c
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;Menu.c: 241:     LcPutChar(horaTmp[2]);
  3277  000622  5042               	movf	(_horaTmp+2)^0,w,c
  3278  000624  EC21  F00C         	call	_LcPutChar
  3279                           
  3280                           ;Menu.c: 242:     NovaTecla = -1;
  3281  000628  685A               	setf	_NovaTecla^0,c
  3282                           
  3283                           ;Menu.c: 243:     state = 19;
  3284  00062A  0E13               	movlw	19
  3285  00062C  D7DB               	goto	L1
  3286  00062E                     l6306:
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;Menu.c: 250:    if (NovaTecla > -1 && NovaTecla < 10) {
  3290  00062E  BE5A               	btfsc	_NovaTecla^0,7,c
  3291  000630  D00E               	goto	l6318
  3292                           
  3293                           ; BSR set to: 0
  3294  000632  505A               	movf	_NovaTecla^0,w,c
  3295  000634  0A80               	xorlw	128
  3296  000636  0F76               	addlw	-138
  3297  000638  B0D8               	btfsc	status,0,c
  3298  00063A  D009               	goto	l6318
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;Menu.c: 251:     horaTmp[3] = NovaTecla+48;
  3302  00063C  505A               	movf	_NovaTecla^0,w,c
  3303  00063E  0F30               	addlw	48
  3304  000640  6E43               	movwf	(_horaTmp+3)^0,c
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;Menu.c: 252:     LcPutChar(horaTmp[3]);
  3308  000642  5043               	movf	(_horaTmp+3)^0,w,c
  3309  000644  EC21  F00C         	call	_LcPutChar
  3310                           
  3311                           ;Menu.c: 253:     NovaTecla = -1;
  3312  000648  685A               	setf	_NovaTecla^0,c
  3313                           
  3314                           ;Menu.c: 254:     state = 20;
  3315  00064A  0E14               	movlw	20
  3316  00064C  D7CB               	goto	L1
  3317  00064E                     l6318:
  3318                           
  3319                           ; BSR set to: 0
  3320  00064E  0E0A               	movlw	10
  3321  000650  185A               	xorwf	_NovaTecla^0,w,c
  3322  000652  A4D8               	btfss	status,2,c
  3323  000654  0012               	return	
  3324  000656  D724               	goto	l6152
  3325  000658                     l6322:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;Menu.c: 261:    if (NovaTecla == 11) {
  3329  000658  0E0B               	movlw	11
  3330  00065A  185A               	xorwf	_NovaTecla^0,w,c
  3331  00065C  A4D8               	btfss	status,2,c
  3332  00065E  D7F7               	goto	l6318
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;Menu.c: 262:     HActualitzaHora(horaTmp);
  3336  000660  0E40               	movlw	low _horaTmp
  3337  000662  6E6A               	movwf	HActualitzaHora@nova^0,c
  3338  000664  ECE5  F00C         	call	_HActualitzaHora	;wreg free
  3339                           
  3340                           ;Menu.c: 263:     NovaTecla = -1;
  3341  000668  685A               	setf	_NovaTecla^0,c
  3342  00066A  D71A               	goto	l6152
  3343  00066C                     l6334:
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;Menu.c: 271:    if (NovaTecla == 11 && JUsuari() && LcLliure()) {
  3347  00066C  0E0B               	movlw	11
  3348  00066E  185A               	xorwf	_NovaTecla^0,w,c
  3349  000670  A4D8               	btfss	status,2,c
  3350  000672  D00E               	goto	l6344
  3351                           
  3352                           ; BSR set to: 0
  3353  000674  EC9E  F00E         	call	_JUsuari	;wreg free
  3354  000678  0900               	iorlw	0
  3355  00067A  B4D8               	btfsc	status,2,c
  3356  00067C  D009               	goto	l6344
  3357  00067E  EC3A  F00E         	call	_LcLliure	;wreg free
  3358  000682  A0D8               	btfss	status,0,c
  3359  000684  D005               	goto	l6344
  3360                           
  3361                           ;Menu.c: 272:     LcClear();
  3362  000686  EC87  F00D         	call	_LcClear	;wreg free
  3363                           
  3364                           ;Menu.c: 273:     state = 22;
  3365  00068A  0E16               	movlw	22
  3366  00068C  6E25               	movwf	menu@state^0,c
  3367                           
  3368                           ;Menu.c: 274:    }
  3369  00068E  0012               	return	
  3370  000690                     l6344:
  3371  000690  BE5A               	btfsc	_NovaTecla^0,7,c
  3372  000692  D009               	goto	l6352
  3373  000694  505A               	movf	_NovaTecla^0,w,c
  3374  000696  0A80               	xorlw	128
  3375  000698  0F76               	addlw	-138
  3376  00069A  B0D8               	btfsc	status,0,c
  3377  00069C  D004               	goto	l6352
  3378                           
  3379                           ;Menu.c: 276:     JnovaTecla(NovaTecla);
  3380  00069E  505A               	movf	_NovaTecla^0,w,c
  3381  0006A0  EC50  F00E         	call	_JnovaTecla
  3382  0006A4  D766               	goto	l6238
  3383  0006A6                     l6352:
  3384  0006A6  BE58               	btfsc	_novaDireccio^0,7,c
  3385  0006A8  0012               	return	
  3386                           
  3387                           ;Menu.c: 280:     JnovaDireccio(novaDireccio);
  3388  0006AA  5058               	movf	_novaDireccio^0,w,c
  3389  0006AC  EC54  F00E         	call	_JnovaDireccio
  3390  0006B0  D760               	goto	l6238
  3391  0006B2                     l6360:
  3392  0006B2  5025               	movf	menu@state^0,w,c
  3393  0006B4  0100               	movlb	0	; () banked
  3394  0006B6  6FC1               	movwf	??_menu& (0+255),b
  3395  0006B8  6BC2               	clrf	(??_menu+1)& (0+255),b
  3396                           
  3397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3398                           ; Switch size 1, requested type "simple"
  3399                           ; Number of cases is 1, Range of values is 0 to 0
  3400                           ; switch strategies available:
  3401                           ; Name         Instructions Cycles
  3402                           ; simple_byte            4     3 (average)
  3403                           ;	Chosen strategy is simple_byte
  3404  0006BA  51C2               	movf	(??_menu+1)& (0+255),w,b
  3405  0006BC  0A00               	xorlw	0	; case 0
  3406  0006BE  A4D8               	btfss	status,2,c
  3407  0006C0  0012               	return	
  3408                           
  3409                           ; BSR set to: 0
  3410                           ; Switch size 1, requested type "simple"
  3411                           ; Number of cases is 23, Range of values is 0 to 22
  3412                           ; switch strategies available:
  3413                           ; Name         Instructions Cycles
  3414                           ; simple_byte           70    36 (average)
  3415                           ;	Chosen strategy is simple_byte
  3416  0006C2  51C1               	movf	??_menu& (0+255),w,b
  3417  0006C4  0A00               	xorlw	0	; case 0
  3418  0006C6  B4D8               	btfsc	status,2,c
  3419  0006C8  D600               	goto	l6006
  3420  0006CA  0A01               	xorlw	1	; case 1
  3421  0006CC  B4D8               	btfsc	status,2,c
  3422  0006CE  D607               	goto	l6012
  3423  0006D0  0A03               	xorlw	3	; case 2
  3424  0006D2  B4D8               	btfsc	status,2,c
  3425  0006D4  D616               	goto	l6022
  3426  0006D6  0A01               	xorlw	1	; case 3
  3427  0006D8  B4D8               	btfsc	status,2,c
  3428  0006DA  D625               	goto	l487
  3429  0006DC  0A07               	xorlw	7	; case 4
  3430  0006DE  B4D8               	btfsc	status,2,c
  3431  0006E0  D631               	goto	l6042
  3432  0006E2  0A01               	xorlw	1	; case 5
  3433  0006E4  B4D8               	btfsc	status,2,c
  3434  0006E6  D642               	goto	l6050
  3435  0006E8  0A03               	xorlw	3	; case 6
  3436  0006EA  B4D8               	btfsc	status,2,c
  3437  0006EC  D64F               	goto	l6060
  3438  0006EE  0A01               	xorlw	1	; case 7
  3439  0006F0  B4D8               	btfsc	status,2,c
  3440  0006F2  D665               	goto	l6074
  3441  0006F4  0A0F               	xorlw	15	; case 8
  3442  0006F6  B4D8               	btfsc	status,2,c
  3443  0006F8  D687               	goto	l6102
  3444  0006FA  0A01               	xorlw	1	; case 9
  3445  0006FC  B4D8               	btfsc	status,2,c
  3446  0006FE  D69D               	goto	l6116
  3447  000700  0A03               	xorlw	3	; case 10
  3448  000702  B4D8               	btfsc	status,2,c
  3449  000704  D6BE               	goto	l6146
  3450  000706  0A01               	xorlw	1	; case 11
  3451  000708  B4D8               	btfsc	status,2,c
  3452  00070A  D6CA               	goto	l6152
  3453  00070C  0A07               	xorlw	7	; case 12
  3454  00070E  B4D8               	btfsc	status,2,c
  3455  000710  D6CD               	goto	l6170
  3456  000712  0A01               	xorlw	1	; case 13
  3457  000714  B4D8               	btfsc	status,2,c
  3458  000716  D6D6               	goto	l6182
  3459  000718  0A03               	xorlw	3	; case 14
  3460  00071A  B4D8               	btfsc	status,2,c
  3461  00071C  D72D               	goto	l6240
  3462  00071E  0A01               	xorlw	1	; case 15
  3463  000720  B4D8               	btfsc	status,2,c
  3464  000722  D73D               	goto	l6248
  3465  000724  0A1F               	xorlw	31	; case 16
  3466  000726  B4D8               	btfsc	status,2,c
  3467  000728  D746               	goto	l6252
  3468  00072A  0A01               	xorlw	1	; case 17
  3469  00072C  B4D8               	btfsc	status,2,c
  3470  00072E  D75C               	goto	l6272
  3471  000730  0A03               	xorlw	3	; case 18
  3472  000732  B4D8               	btfsc	status,2,c
  3473  000734  D76C               	goto	l6290
  3474  000736  0A01               	xorlw	1	; case 19
  3475  000738  B4D8               	btfsc	status,2,c
  3476  00073A  D779               	goto	l6306
  3477  00073C  0A07               	xorlw	7	; case 20
  3478  00073E  B4D8               	btfsc	status,2,c
  3479  000740  D78B               	goto	l6322
  3480  000742  0A01               	xorlw	1	; case 21
  3481  000744  B4D8               	btfsc	status,2,c
  3482  000746  D792               	goto	l6334
  3483  000748  0A03               	xorlw	3	; case 22
  3484  00074A  0012               	return	
  3485  00074C                     __end_of_menu:
  3486                           	callstack 0
  3487                           
  3488 ;; *************** function _UgetUserName *****************
  3489 ;; Defined at:
  3490 ;;		line 27 in file "Usuaris.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  quin            1    wreg     unsigned char 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  quin            1    7[COMRAM] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  2    5[COMRAM] PTR unsigned char 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, prodl, prodh
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/1
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1
  3504 ;;      Params:         2       0       0
  3505 ;;      Locals:         1       0       0
  3506 ;;      Temps:          0       0       0
  3507 ;;      Totals:         3       0       0
  3508 ;;Total ram usage:        3 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 2
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_menu
  3515 ;;		_motorSIO
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text17
  3520  001BE6                     __ptext17:
  3521                           	callstack 0
  3522  001BE6                     _UgetUserName:
  3523                           	callstack 27
  3524                           
  3525                           ;incstack = 0
  3526                           ;UgetUserName@quin stored from wreg
  3527  001BE6  6E6C               	movwf	UgetUserName@quin^0,c
  3528                           
  3529                           ;Usuaris.c: 28:     return usuaris[quin].username;
  3530  001BE8  506C               	movf	UgetUserName@quin^0,w,c
  3531  001BEA  0D17               	mullw	23
  3532  001BEC  0E00               	movlw	low _usuaris
  3533  001BEE  24F3               	addwf	243,w,c
  3534  001BF0  6E6A               	movwf	?_UgetUserName^0,c
  3535  001BF2  0E01               	movlw	high _usuaris
  3536  001BF4  20F4               	addwfc	prodh,w,c
  3537  001BF6  6E6B               	movwf	(?_UgetUserName+1)^0,c
  3538  001BF8  0012               	return		;funcret
  3539  001BFA                     __end_of_UgetUserName:
  3540                           	callstack 0
  3541                           
  3542 ;; *************** function _UgetNumUsuaris *****************
  3543 ;; Defined at:
  3544 ;;		line 30 in file "Usuaris.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      unsigned char 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1
  3558 ;;      Params:         0       0       0
  3559 ;;      Locals:         0       0       0
  3560 ;;      Temps:          0       0       0
  3561 ;;      Totals:         0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; Hardware stack levels required when called: 2
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_menu
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text18
  3573  001D28                     __ptext18:
  3574                           	callstack 0
  3575  001D28                     _UgetNumUsuaris:
  3576                           	callstack 27
  3577                           
  3578                           ;Usuaris.c: 31:     return numUsuaris;
  3579                           
  3580                           ;incstack = 0
  3581  001D28  5023               	movf	_numUsuaris^0,w,c
  3582  001D2A  0012               	return		;funcret
  3583  001D2C                     __end_of_UgetNumUsuaris:
  3584                           	callstack 0
  3585                           
  3586 ;; *************** function _UenviaPas *****************
  3587 ;; Defined at:
  3588 ;;		line 46 in file "Usuaris.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  c               1    wreg     unsigned char 
  3591 ;;  pos             1    5[COMRAM] unsigned char 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  c               1    6[COMRAM] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1
  3603 ;;      Params:         1       0       0
  3604 ;;      Locals:         1       0       0
  3605 ;;      Temps:          0       0       0
  3606 ;;      Totals:         2       0       0
  3607 ;;Total ram usage:        2 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 2
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_menu
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text19
  3618  001C0C                     __ptext19:
  3619                           	callstack 0
  3620  001C0C                     _UenviaPas:
  3621                           	callstack 27
  3622                           
  3623                           ;incstack = 0
  3624                           ;UenviaPas@c stored from wreg
  3625  001C0C  6E6B               	movwf	UenviaPas@c^0,c
  3626                           
  3627                           ;Usuaris.c: 47:     tmpPassword[pos] = c;
  3628  001C0E  506A               	movf	UenviaPas@pos^0,w,c
  3629  001C10  0F98               	addlw	low _tmpPassword
  3630  001C12  6ED9               	movwf	fsr2l,c
  3631  001C14  6ADA               	clrf	fsr2h,c
  3632  001C16  C06B  FFDF         	movff	UenviaPas@c,indf2
  3633  001C1A  0012               	return		;funcret
  3634  001C1C                     __end_of_UenviaPas:
  3635                           	callstack 0
  3636                           
  3637 ;; *************** function _UenviaChar *****************
  3638 ;; Defined at:
  3639 ;;		line 43 in file "Usuaris.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  c               1    wreg     unsigned char 
  3642 ;;  pos             1    5[COMRAM] unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  c               1    6[COMRAM] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1
  3654 ;;      Params:         1       0       0
  3655 ;;      Locals:         1       0       0
  3656 ;;      Temps:          0       0       0
  3657 ;;      Totals:         2       0       0
  3658 ;;Total ram usage:        2 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 2
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_menu
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text20
  3669  001C1C                     __ptext20:
  3670                           	callstack 0
  3671  001C1C                     _UenviaChar:
  3672                           	callstack 27
  3673                           
  3674                           ;incstack = 0
  3675                           ;UenviaChar@c stored from wreg
  3676  001C1C  6E6B               	movwf	UenviaChar@c^0,c
  3677                           
  3678                           ;Usuaris.c: 44:     tmpUsername[pos] = c;
  3679  001C1E  506A               	movf	UenviaChar@pos^0,w,c
  3680  001C20  0F37               	addlw	low _tmpUsername
  3681  001C22  6ED9               	movwf	fsr2l,c
  3682  001C24  6ADA               	clrf	fsr2h,c
  3683  001C26  C06B  FFDF         	movff	UenviaChar@c,indf2
  3684  001C2A  0012               	return		;funcret
  3685  001C2C                     __end_of_UenviaChar:
  3686                           	callstack 0
  3687                           
  3688 ;; *************** function _UcheckExistsNotFinished *****************
  3689 ;; Defined at:
  3690 ;;		line 37 in file "Usuaris.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;		None
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;		None               void
  3697 ;; Registers used:
  3698 ;;		status,0
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1
  3704 ;;      Params:         0       0       0
  3705 ;;      Locals:         0       0       0
  3706 ;;      Temps:          0       0       0
  3707 ;;      Totals:         0       0       0
  3708 ;;Total ram usage:        0 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; Hardware stack levels required when called: 2
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		_menu
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text21
  3719  001C50                     __ptext21:
  3720                           	callstack 0
  3721  001C50                     _UcheckExistsNotFinished:
  3722                           	callstack 27
  3723                           
  3724                           ;Usuaris.c: 38:     return do_check_exists;
  3725                           
  3726                           ;incstack = 0
  3727  001C50  B479               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  3728  001C52  D002               	goto	l3932
  3729  001C54  90D8               	bcf	status,0,c
  3730  001C56  0012               	return	
  3731  001C58                     l3932:
  3732  001C58  80D8               	bsf	status,0,c
  3733  001C5A  0012               	return		;funcret
  3734  001C5C                     __end_of_UcheckExistsNotFinished:
  3735                           	callstack 0
  3736                           
  3737 ;; *************** function _UcheckExistsGetError *****************
  3738 ;; Defined at:
  3739 ;;		line 40 in file "Usuaris.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;		None
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;		None
  3744 ;; Return value:  Size  Location     Type
  3745 ;;		None               void
  3746 ;; Registers used:
  3747 ;;		wreg, status,0
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1
  3753 ;;      Params:         0       0       0
  3754 ;;      Locals:         0       0       0
  3755 ;;      Temps:          1       0       0
  3756 ;;      Totals:         1       0       0
  3757 ;;Total ram usage:        1 bytes
  3758 ;; Hardware stack levels used: 1
  3759 ;; Hardware stack levels required when called: 2
  3760 ;; This function calls:
  3761 ;;		Nothing
  3762 ;; This function is called by:
  3763 ;;		_menu
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text22
  3768  001C98                     __ptext22:
  3769                           	callstack 0
  3770  001C98                     _UcheckExistsGetError:
  3771                           	callstack 27
  3772                           
  3773                           ;Usuaris.c: 41:     return usuariLoguejat;
  3774                           
  3775                           ;incstack = 0
  3776  001C98  C057  F06A         	movff	_usuariLoguejat,??_UcheckExistsGetError
  3777  001C9C  306A               	rrcf	??_UcheckExistsGetError^0,w,c
  3778  001C9E  0012               	return		;funcret
  3779  001CA0                     __end_of_UcheckExistsGetError:
  3780                           	callstack 0
  3781                           
  3782 ;; *************** function _UcheckExists *****************
  3783 ;; Defined at:
  3784 ;;		line 34 in file "Usuaris.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;		None
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1    wreg      void 
  3791 ;; Registers used:
  3792 ;;		None
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1
  3798 ;;      Params:         0       0       0
  3799 ;;      Locals:         0       0       0
  3800 ;;      Temps:          0       0       0
  3801 ;;      Totals:         0       0       0
  3802 ;;Total ram usage:        0 bytes
  3803 ;; Hardware stack levels used: 1
  3804 ;; Hardware stack levels required when called: 2
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_menu
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text23
  3813  001D2C                     __ptext23:
  3814                           	callstack 0
  3815  001D2C                     _UcheckExists:
  3816                           	callstack 27
  3817                           
  3818                           ;Usuaris.c: 35:     do_check_exists = 1;
  3819                           
  3820                           ;incstack = 0
  3821  001D2C  8479               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  3822  001D2E  0012               	return		;funcret
  3823  001D30                     __end_of_UcheckExists:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _URegister *****************
  3827 ;; Defined at:
  3828 ;;		line 54 in file "Usuaris.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		None
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1
  3842 ;;      Params:         0       0       0
  3843 ;;      Locals:         0       0       0
  3844 ;;      Temps:          0       0       0
  3845 ;;      Totals:         0       0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 2
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_menu
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text24
  3857  001D30                     __ptext24:
  3858                           	callstack 0
  3859  001D30                     _URegister:
  3860                           	callstack 27
  3861                           
  3862                           ;Usuaris.c: 55:     do_register = 1;
  3863                           
  3864                           ;incstack = 0
  3865  001D30  8279               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  3866  001D32  0012               	return		;funcret
  3867  001D34                     __end_of_URegister:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function _SiFerMenu *****************
  3871 ;; Defined at:
  3872 ;;		line 19 in file "GestioLCD.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		None
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1
  3886 ;;      Params:         0       0       0
  3887 ;;      Locals:         0       0       0
  3888 ;;      Temps:          0       0       0
  3889 ;;      Totals:         0       0       0
  3890 ;;Total ram usage:        0 bytes
  3891 ;; Hardware stack levels used: 1
  3892 ;; Hardware stack levels required when called: 2
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_menu
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text25
  3901  001D34                     __ptext25:
  3902                           	callstack 0
  3903  001D34                     _SiFerMenu:
  3904                           	callstack 27
  3905                           
  3906                           ;GestioLCD.c: 20:     ferMenu = 1;
  3907                           
  3908                           ;incstack = 0
  3909  001D34  8C78               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  3910  001D36  0012               	return		;funcret
  3911  001D38                     __end_of_SiFerMenu:
  3912                           	callstack 0
  3913                           
  3914 ;; *************** function _SMSon *****************
  3915 ;; Defined at:
  3916 ;;		line 130 in file "Ssms.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		None
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1
  3930 ;;      Params:         0       0       0
  3931 ;;      Locals:         0       0       0
  3932 ;;      Temps:          0       0       0
  3933 ;;      Totals:         0       0       0
  3934 ;;Total ram usage:        0 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; Hardware stack levels required when called: 2
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_menu
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text26
  3945  001D08                     __ptext26:
  3946                           	callstack 0
  3947  001D08                     _SMSon:
  3948                           	callstack 27
  3949                           
  3950                           ;Ssms.c: 131:     setSMSon = 1;
  3951                           
  3952                           ;incstack = 0
  3953  001D08  8879               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3954                           
  3955                           ;Ssms.c: 132:     novaTecla = -1;
  3956  001D0A  685D               	setf	_novaTecla^0,c
  3957  001D0C  0012               	return		;funcret
  3958  001D0E                     __end_of_SMSon:
  3959                           	callstack 0
  3960                           
  3961 ;; *************** function _SMSoff *****************
  3962 ;; Defined at:
  3963 ;;		line 135 in file "Ssms.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;		None
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		None
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1
  3977 ;;      Params:         0       0       0
  3978 ;;      Locals:         0       0       0
  3979 ;;      Temps:          0       0       0
  3980 ;;      Totals:         0       0       0
  3981 ;;Total ram usage:        0 bytes
  3982 ;; Hardware stack levels used: 1
  3983 ;; Hardware stack levels required when called: 2
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_menu
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text27
  3992  001D0E                     __ptext27:
  3993                           	callstack 0
  3994  001D0E                     _SMSoff:
  3995                           	callstack 27
  3996                           
  3997                           ;Ssms.c: 136:     setSMSon = 0;
  3998                           
  3999                           ;incstack = 0
  4000  001D0E  9879               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4001                           
  4002                           ;Ssms.c: 137:     novaTecla = -1;
  4003  001D10  685D               	setf	_novaTecla^0,c
  4004  001D12  0012               	return		;funcret
  4005  001D14                     __end_of_SMSoff:
  4006                           	callstack 0
  4007                           
  4008 ;; *************** function _NoFerMenu *****************
  4009 ;; Defined at:
  4010 ;;		line 22 in file "GestioLCD.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		None
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1
  4024 ;;      Params:         0       0       0
  4025 ;;      Locals:         0       0       0
  4026 ;;      Temps:          0       0       0
  4027 ;;      Totals:         0       0       0
  4028 ;;Total ram usage:        0 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 2
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_menu
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text28
  4039  001D38                     __ptext28:
  4040                           	callstack 0
  4041  001D38                     _NoFerMenu:
  4042                           	callstack 27
  4043                           
  4044                           ;GestioLCD.c: 23:     ferMenu = 0;
  4045                           
  4046                           ;incstack = 0
  4047  001D38  9C78               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4048  001D3A  0012               	return		;funcret
  4049  001D3C                     __end_of_NoFerMenu:
  4050                           	callstack 0
  4051                           
  4052 ;; *************** function _JnovaTecla *****************
  4053 ;; Defined at:
  4054 ;;		line 15 in file "Joc.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  tecla           1    wreg     unsigned char 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  tecla           1    5[COMRAM] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      void 
  4061 ;; Registers used:
  4062 ;;		wreg
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1
  4068 ;;      Params:         0       0       0
  4069 ;;      Locals:         1       0       0
  4070 ;;      Temps:          0       0       0
  4071 ;;      Totals:         1       0       0
  4072 ;;Total ram usage:        1 bytes
  4073 ;; Hardware stack levels used: 1
  4074 ;; Hardware stack levels required when called: 2
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_menu
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text29
  4083  001CA0                     __ptext29:
  4084                           	callstack 0
  4085  001CA0                     _JnovaTecla:
  4086                           	callstack 27
  4087                           
  4088                           ;incstack = 0
  4089                           ;JnovaTecla@tecla stored from wreg
  4090  001CA0  6E6A               	movwf	JnovaTecla@tecla^0,c
  4091                           
  4092                           ;Joc.c: 16:     novaTeclaJOC = tecla;
  4093  001CA2  C06A  F053         	movff	JnovaTecla@tecla,_novaTeclaJOC
  4094  001CA6  0012               	return		;funcret
  4095  001CA8                     __end_of_JnovaTecla:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function _JnovaDireccio *****************
  4099 ;; Defined at:
  4100 ;;		line 18 in file "Joc.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  dir             1    wreg     unsigned char 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  dir             1    5[COMRAM] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1
  4114 ;;      Params:         0       0       0
  4115 ;;      Locals:         1       0       0
  4116 ;;      Temps:          0       0       0
  4117 ;;      Totals:         1       0       0
  4118 ;;Total ram usage:        1 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 2
  4121 ;; This function calls:
  4122 ;;		Nothing
  4123 ;; This function is called by:
  4124 ;;		_menu
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text30
  4129  001CA8                     __ptext30:
  4130                           	callstack 0
  4131  001CA8                     _JnovaDireccio:
  4132                           	callstack 27
  4133                           
  4134                           ;incstack = 0
  4135                           ;JnovaDireccio@dir stored from wreg
  4136  001CA8  6E6A               	movwf	JnovaDireccio@dir^0,c
  4137                           
  4138                           ;Joc.c: 19:     novaDireccioJOC = dir;
  4139  001CAA  C06A  F00A         	movff	JnovaDireccio@dir,_novaDireccioJOC
  4140  001CAE  0012               	return		;funcret
  4141  001CB0                     __end_of_JnovaDireccio:
  4142                           	callstack 0
  4143                           
  4144 ;; *************** function _JUsuari *****************
  4145 ;; Defined at:
  4146 ;;		line 22 in file "Joc.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      char 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1
  4160 ;;      Params:         0       0       0
  4161 ;;      Locals:         0       0       0
  4162 ;;      Temps:          0       0       0
  4163 ;;      Totals:         0       0       0
  4164 ;;Total ram usage:        0 bytes
  4165 ;; Hardware stack levels used: 1
  4166 ;; Hardware stack levels required when called: 2
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_menu
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text31
  4175  001D3C                     __ptext31:
  4176                           	callstack 0
  4177  001D3C                     _JUsuari:
  4178                           	callstack 27
  4179                           
  4180                           ;Joc.c: 23:     return usuariJoc;
  4181                           
  4182                           ;incstack = 0
  4183  001D3C  5054               	movf	_usuariJoc^0,w,c
  4184  001D3E  0012               	return		;funcret
  4185  001D40                     __end_of_JUsuari:
  4186                           	callstack 0
  4187                           
  4188 ;; *************** function _JJuguem *****************
  4189 ;; Defined at:
  4190 ;;		line 12 in file "Joc.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  usuari          1    wreg     unsigned char 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  usuari          1    5[COMRAM] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1
  4204 ;;      Params:         0       0       0
  4205 ;;      Locals:         1       0       0
  4206 ;;      Temps:          0       0       0
  4207 ;;      Totals:         1       0       0
  4208 ;;Total ram usage:        1 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 2
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_menu
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text32
  4219  001CB0                     __ptext32:
  4220                           	callstack 0
  4221  001CB0                     _JJuguem:
  4222                           	callstack 27
  4223                           
  4224                           ;incstack = 0
  4225                           ;JJuguem@usuari stored from wreg
  4226  001CB0  6E6A               	movwf	JJuguem@usuari^0,c
  4227                           
  4228                           ;Joc.c: 13:     usuariJoc = usuari;
  4229  001CB2  C06A  F054         	movff	JJuguem@usuari,_usuariJoc
  4230  001CB6  0012               	return		;funcret
  4231  001CB8                     __end_of_JJuguem:
  4232                           	callstack 0
  4233                           
  4234 ;; *************** function _HActualitzaHora *****************
  4235 ;; Defined at:
  4236 ;;		line 14 in file "Hora.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  nova            1    5[COMRAM] PTR unsigned char 
  4239 ;;		 -> horaTmp(4), 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1
  4251 ;;      Params:         1       0       0
  4252 ;;      Locals:         0       0       0
  4253 ;;      Temps:          0       0       0
  4254 ;;      Totals:         1       0       0
  4255 ;;Total ram usage:        1 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 2
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_menu
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text33
  4266  0019CA                     __ptext33:
  4267                           	callstack 0
  4268  0019CA                     _HActualitzaHora:
  4269                           	callstack 27
  4270                           
  4271                           ;Hora.c: 15:     hora[0] = nova[0];
  4272                           
  4273                           ;incstack = 0
  4274  0019CA  506A               	movf	HActualitzaHora@nova^0,w,c
  4275  0019CC  6ED9               	movwf	fsr2l,c
  4276  0019CE  6ADA               	clrf	fsr2h,c
  4277  0019D0  50DF               	movf	indf2,w,c
  4278  0019D2  6E5F               	movwf	_hora^0,c
  4279                           
  4280                           ;Hora.c: 16:     hora[1] = nova[1];
  4281  0019D4  506A               	movf	HActualitzaHora@nova^0,w,c
  4282  0019D6  6ED9               	movwf	fsr2l,c
  4283  0019D8  6ADA               	clrf	fsr2h,c
  4284  0019DA  0E01               	movlw	1
  4285  0019DC  26D9               	addwf	fsr2l,f,c
  4286  0019DE  50DF               	movf	indf2,w,c
  4287  0019E0  6E60               	movwf	(_hora+1)^0,c
  4288                           
  4289                           ;Hora.c: 17:     hora[3] = nova[2];
  4290  0019E2  506A               	movf	HActualitzaHora@nova^0,w,c
  4291  0019E4  6ED9               	movwf	fsr2l,c
  4292  0019E6  6ADA               	clrf	fsr2h,c
  4293  0019E8  0E02               	movlw	2
  4294  0019EA  26D9               	addwf	fsr2l,f,c
  4295  0019EC  50DF               	movf	indf2,w,c
  4296  0019EE  6E62               	movwf	(_hora+3)^0,c
  4297                           
  4298                           ;Hora.c: 18:     hora[4] = nova[3];
  4299  0019F0  506A               	movf	HActualitzaHora@nova^0,w,c
  4300  0019F2  6ED9               	movwf	fsr2l,c
  4301  0019F4  6ADA               	clrf	fsr2h,c
  4302  0019F6  0E03               	movlw	3
  4303  0019F8  26D9               	addwf	fsr2l,f,c
  4304  0019FA  50DF               	movf	indf2,w,c
  4305  0019FC  6E63               	movwf	(_hora+4)^0,c
  4306  0019FE  0012               	return		;funcret
  4307  001A00                     __end_of_HActualitzaHora:
  4308                           	callstack 0
  4309                           
  4310 ;; *************** function _GLCDMostraMenu *****************
  4311 ;; Defined at:
  4312 ;;		line 30 in file "GestioLCD.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  num             1    wreg     unsigned char 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  num             1    5[COMRAM] unsigned char 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1
  4326 ;;      Params:         0       0       0
  4327 ;;      Locals:         1       0       0
  4328 ;;      Temps:          0       0       0
  4329 ;;      Totals:         1       0       0
  4330 ;;Total ram usage:        1 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; Hardware stack levels required when called: 2
  4333 ;; This function calls:
  4334 ;;		Nothing
  4335 ;; This function is called by:
  4336 ;;		_menu
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text34
  4341  001C5C                     __ptext34:
  4342                           	callstack 0
  4343  001C5C                     _GLCDMostraMenu:
  4344                           	callstack 27
  4345                           
  4346                           ;incstack = 0
  4347                           ;GLCDMostraMenu@num stored from wreg
  4348  001C5C  6E6A               	movwf	GLCDMostraMenu@num^0,c
  4349                           
  4350                           ;GestioLCD.c: 31:     newString = 1;
  4351  001C5E  8A78               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  4352                           
  4353                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  4354  001C60  C06A  F018         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  4355                           
  4356                           ;GestioLCD.c: 33:     ferMenu = 1;
  4357  001C64  8C78               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4358  001C66  0012               	return		;funcret
  4359  001C68                     __end_of_GLCDMostraMenu:
  4360                           	callstack 0
  4361                           
  4362 ;; *************** function _init_ports *****************
  4363 ;; Defined at:
  4364 ;;		line 25 in file "main.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1    wreg      void 
  4371 ;; Registers used:
  4372 ;;		wreg, status,2
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1
  4378 ;;      Params:         0       0       0
  4379 ;;      Locals:         0       0       0
  4380 ;;      Temps:          0       0       0
  4381 ;;      Totals:         0       0       0
  4382 ;;Total ram usage:        0 bytes
  4383 ;; Hardware stack levels used: 1
  4384 ;; Hardware stack levels required when called: 2
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_main
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text35
  4393  001B78                     __ptext35:
  4394                           	callstack 0
  4395  001B78                     _init_ports:
  4396                           	callstack 28
  4397                           
  4398                           ;incstack = 0
  4399  001B78  0E03               	movlw	3
  4400  001B7A  6E92               	movwf	146,c	;volatile
  4401  001B7C  0EE0               	movlw	224
  4402  001B7E  6E93               	movwf	147,c	;volatile
  4403  001B80  968A               	bcf	138,3,c	;volatile
  4404  001B82  908A               	bcf	138,0,c	;volatile
  4405  001B84  928A               	bcf	138,1,c	;volatile
  4406                           
  4407                           ;main.c: 48:     TRISC = 0xC0;
  4408  001B86  0EC0               	movlw	192
  4409  001B88  6E94               	movwf	148,c	;volatile
  4410                           
  4411                           ;main.c: 58:     TRISD = 0x8F;
  4412  001B8A  0E8F               	movlw	143
  4413  001B8C  6E95               	movwf	149,c	;volatile
  4414                           
  4415                           ;main.c: 59:     LATD = 0x00;
  4416  001B8E  0E00               	movlw	0
  4417  001B90  6E8C               	movwf	140,c	;volatile
  4418                           
  4419                           ;main.c: 62:     EECON1bits.EEPGD = 1;
  4420  001B92  8EA6               	bsf	166,7,c	;volsfr
  4421                           
  4422                           ;main.c: 63:     EECON1bits.CFGS = 0;
  4423  001B94  9CA6               	bcf	166,6,c	;volsfr
  4424  001B96  0012               	return		;funcret
  4425  001B98                     __end_of_init_ports:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _init_eusart *****************
  4429 ;; Defined at:
  4430 ;;		line 66 in file "main.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;		None
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1
  4444 ;;      Params:         0       0       0
  4445 ;;      Locals:         0       0       0
  4446 ;;      Temps:          0       0       0
  4447 ;;      Totals:         0       0       0
  4448 ;;Total ram usage:        0 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 2
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text36
  4459  001BD0                     __ptext36:
  4460                           	callstack 0
  4461  001BD0                     _init_eusart:
  4462                           	callstack 28
  4463                           
  4464                           ;main.c: 67:     TXSTA = 0x24;
  4465                           
  4466                           ;incstack = 0
  4467  001BD0  0E24               	movlw	36
  4468  001BD2  6EAC               	movwf	172,c	;volatile
  4469                           
  4470                           ;main.c: 68:     RCSTA = 0x90;
  4471  001BD4  0E90               	movlw	144
  4472  001BD6  6EAB               	movwf	171,c	;volatile
  4473                           
  4474                           ;main.c: 69:     BAUDCON = 0x08;
  4475  001BD8  0E08               	movlw	8
  4476  001BDA  6EB8               	movwf	184,c	;volatile
  4477                           
  4478                           ;main.c: 70:     SPBRGH = 0x04;
  4479  001BDC  0E04               	movlw	4
  4480  001BDE  6EB0               	movwf	176,c	;volatile
  4481                           
  4482                           ;main.c: 71:     SPBRG = 0x10;
  4483  001BE0  0E10               	movlw	16
  4484  001BE2  6EAF               	movwf	175,c	;volatile
  4485  001BE4  0012               	return		;funcret
  4486  001BE6                     __end_of_init_eusart:
  4487                           	callstack 0
  4488                           
  4489 ;; *************** function _initHora *****************
  4490 ;; Defined at:
  4491 ;;		line 10 in file "Hora.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;		None
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;		None
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1
  4505 ;;      Params:         0       0       0
  4506 ;;      Locals:         0       0       0
  4507 ;;      Temps:          0       0       0
  4508 ;;      Totals:         0       0       0
  4509 ;;Total ram usage:        0 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 3
  4512 ;; This function calls:
  4513 ;;		_TiGetTimer
  4514 ;; This function is called by:
  4515 ;;		_main
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text37
  4520  001CB8                     __ptext37:
  4521                           	callstack 0
  4522  001CB8                     _initHora:
  4523                           	callstack 27
  4524                           
  4525                           ;Hora.c: 11:     timerHora = TiGetTimer();
  4526                           
  4527                           ;incstack = 0
  4528  001CB8  ECAC  F00C         	call	_TiGetTimer	;wreg free
  4529  001CBC  6E0D               	movwf	_timerHora^0,c
  4530  001CBE  0012               	return		;funcret
  4531  001CC0                     __end_of_initHora:
  4532                           	callstack 0
  4533                           
  4534 ;; *************** function _initAltaveu *****************
  4535 ;; Defined at:
  4536 ;;		line 10 in file "Altaveu.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  1    wreg      void 
  4543 ;; Registers used:
  4544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1
  4550 ;;      Params:         0       0       0
  4551 ;;      Locals:         0       0       0
  4552 ;;      Temps:          0       0       0
  4553 ;;      Totals:         0       0       0
  4554 ;;Total ram usage:        0 bytes
  4555 ;; Hardware stack levels used: 1
  4556 ;; Hardware stack levels required when called: 3
  4557 ;; This function calls:
  4558 ;;		_TiGetTimer
  4559 ;; This function is called by:
  4560 ;;		_main
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text38
  4565  001CC0                     __ptext38:
  4566                           	callstack 0
  4567  001CC0                     _initAltaveu:
  4568                           	callstack 27
  4569                           
  4570                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  4571                           
  4572                           ;incstack = 0
  4573  001CC0  ECAC  F00C         	call	_TiGetTimer	;wreg free
  4574  001CC4  6E1C               	movwf	_timerAltaveu^0,c
  4575  001CC6  0012               	return		;funcret
  4576  001CC8                     __end_of_initAltaveu:
  4577                           	callstack 0
  4578                           
  4579 ;; *************** function _escriureEEPROM *****************
  4580 ;; Defined at:
  4581 ;;		line 208 in file "Usuaris.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;		None
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  caca            1    5[COMRAM] unsigned char 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2, status,0
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1
  4595 ;;      Params:         0       0       0
  4596 ;;      Locals:         1       0       0
  4597 ;;      Temps:          0       0       0
  4598 ;;      Totals:         1       0       0
  4599 ;;Total ram usage:        1 bytes
  4600 ;; Hardware stack levels used: 1
  4601 ;; Hardware stack levels required when called: 2
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_main
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text39
  4610  001A64                     __ptext39:
  4611                           	callstack 0
  4612  001A64                     _escriureEEPROM:
  4613                           	callstack 28
  4614                           
  4615                           ;Usuaris.c: 209:     for(unsigned char caca = 0; caca < 160; caca++){
  4616                           
  4617                           ;incstack = 0
  4618  001A64  0E00               	movlw	0
  4619  001A66  6E6A               	movwf	escriureEEPROM@caca^0,c
  4620  001A68                     l2192:
  4621                           
  4622                           ;Usuaris.c: 210:         EEADR = 0;
  4623  001A68  0E00               	movlw	0
  4624  001A6A  6EA9               	movwf	169,c	;volatile
  4625                           
  4626                           ;Usuaris.c: 211:         EEDATA = 0;
  4627  001A6C  0E00               	movlw	0
  4628  001A6E  6EA8               	movwf	168,c	;volatile
  4629                           
  4630                           ;Usuaris.c: 212:         EECON1bits.EEPGD = 0;
  4631  001A70  9EA6               	bcf	166,7,c	;volsfr
  4632                           
  4633                           ;Usuaris.c: 213:         EECON1bits.CFGS = 0;
  4634  001A72  9CA6               	bcf	166,6,c	;volsfr
  4635                           
  4636                           ;Usuaris.c: 214:         EECON1bits.WREN = 1;
  4637  001A74  84A6               	bsf	166,2,c	;volsfr
  4638                           
  4639                           ;Usuaris.c: 215:         INTCONbits.GIE = 0;
  4640  001A76  9EF2               	bcf	242,7,c	;volatile
  4641                           
  4642                           ;Usuaris.c: 216:         EECON2 = 85;
  4643  001A78  0E55               	movlw	85
  4644  001A7A  6EA7               	movwf	167,c	;volsfr
  4645                           
  4646                           ;Usuaris.c: 217:         EECON2 = 170;
  4647  001A7C  0EAA               	movlw	170
  4648  001A7E  6EA7               	movwf	167,c	;volsfr
  4649                           
  4650                           ;Usuaris.c: 218:          EECON1bits.WR = 1;
  4651  001A80  82A6               	bsf	166,1,c	;volsfr
  4652  001A82                     l708:
  4653                           
  4654                           ;Usuaris.c: 219:         while(EECON1bits.WR){
  4655  001A82  B2A6               	btfsc	166,1,c	;volsfr
  4656  001A84  D7FE               	goto	l708
  4657                           
  4658                           ;Usuaris.c: 224:     }
  4659  001A86  2A6A               	incf	escriureEEPROM@caca^0,f,c
  4660  001A88  0E9F               	movlw	159
  4661  001A8A  646A               	cpfsgt	escriureEEPROM@caca^0,c
  4662  001A8C  D7ED               	goto	l2192
  4663                           
  4664                           ;Usuaris.c: 225:    INTCONbits.GIE = 1;
  4665  001A8E  8EF2               	bsf	242,7,c	;volatile
  4666  001A90  0012               	return		;funcret
  4667  001A92                     __end_of_escriureEEPROM:
  4668                           	callstack 0
  4669                           
  4670 ;; *************** function _escriure2usuarisStruct *****************
  4671 ;; Defined at:
  4672 ;;		line 115 in file "Usuaris.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;		None
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 3F/1
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1
  4686 ;;      Params:         0       0       0
  4687 ;;      Locals:         0       0       0
  4688 ;;      Temps:          0       0       0
  4689 ;;      Totals:         0       0       0
  4690 ;;Total ram usage:        0 bytes
  4691 ;; Hardware stack levels used: 1
  4692 ;; Hardware stack levels required when called: 2
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_main
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text40
  4701  001A92                     __ptext40:
  4702                           	callstack 0
  4703  001A92                     _escriure2usuarisStruct:
  4704                           	callstack 28
  4705                           
  4706                           ;Usuaris.c: 117:     usuaris[0].username[0] = 1;
  4707                           
  4708                           ;incstack = 0
  4709  001A92  0E01               	movlw	1
  4710  001A94  0101               	movlb	1	; () banked
  4711  001A96  6F00               	movwf	_usuaris& (0+255),b
  4712                           
  4713                           ;Usuaris.c: 118:     usuaris[0].password[0] = 1;
  4714  001A98  0E01               	movlw	1
  4715  001A9A  6F09               	movwf	(_usuaris+9)& (0+255),b
  4716                           
  4717                           ;Usuaris.c: 119:     usuaris[1].username[0] = '1';
  4718  001A9C  0E31               	movlw	49
  4719  001A9E  6F17               	movwf	(_usuaris+23)& (0+255),b
  4720                           
  4721                           ;Usuaris.c: 120:     usuaris[1].password[0] = '1';
  4722  001AA0  0E31               	movlw	49
  4723  001AA2  6F20               	movwf	(_usuaris+32)& (0+255),b
  4724                           
  4725                           ;Usuaris.c: 121:     usuaris[0].username[1] = '\0';
  4726  001AA4  0E00               	movlw	0
  4727  001AA6  6F01               	movwf	(_usuaris+1)& (0+255),b
  4728                           
  4729                           ;Usuaris.c: 122:     usuaris[0].password[1] = '\0';
  4730  001AA8  0E00               	movlw	0
  4731  001AAA  6F0A               	movwf	(_usuaris+10)& (0+255),b
  4732                           
  4733                           ;Usuaris.c: 123:     usuaris[1].username[1] = '\0';
  4734  001AAC  0E00               	movlw	0
  4735  001AAE  6F18               	movwf	(_usuaris+24)& (0+255),b
  4736                           
  4737                           ;Usuaris.c: 124:     usuaris[1].password[1] = '\0';
  4738  001AB0  0E00               	movlw	0
  4739  001AB2  6F21               	movwf	(_usuaris+33)& (0+255),b
  4740                           
  4741                           ;Usuaris.c: 125:     numUsuaris = 2;
  4742  001AB4  0E02               	movlw	2
  4743  001AB6  6E23               	movwf	_numUsuaris^0,c
  4744                           
  4745                           ;Usuaris.c: 126:     indexNextUser = 2;
  4746  001AB8  0E02               	movlw	2
  4747  001ABA  6E22               	movwf	_indexNextUser^0,c
  4748                           
  4749                           ; BSR set to: 1
  4750  001ABC  0012               	return		;funcret
  4751  001ABE                     __end_of_escriure2usuarisStruct:
  4752                           	callstack 0
  4753                           
  4754 ;; *************** function _UmotorUsers *****************
  4755 ;; Defined at:
  4756 ;;		line 139 in file "Usuaris.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/1
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1
  4770 ;;      Params:         0       0       0
  4771 ;;      Locals:         0       0       0
  4772 ;;      Temps:          2       0       0
  4773 ;;      Totals:         2       0       0
  4774 ;;Total ram usage:        2 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 3
  4777 ;; This function calls:
  4778 ;;		_compareStrings
  4779 ;;		_escriureCharEEPROM
  4780 ;; This function is called by:
  4781 ;;		_main
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text41
  4786  000D20                     __ptext41:
  4787                           	callstack 0
  4788  000D20                     _UmotorUsers:
  4789                           	callstack 27
  4790                           
  4791                           ;Usuaris.c: 140: static char state = 0;;Usuaris.c: 142:  switch(state) {
  4792                           
  4793                           ; BSR set to: 1
  4794                           ;incstack = 0
  4795  000D20  D0A7               	goto	l4962
  4796  000D22                     l680:
  4797                           
  4798                           ;Usuaris.c: 144:    if (!do_check_exists && !do_register) {
  4799  000D22  A479               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4800  000D24  B279               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  4801  000D26  D005               	goto	l681
  4802                           
  4803                           ;Usuaris.c: 145:     i = 0;
  4804  000D28  0E00               	movlw	0
  4805  000D2A  6E20               	movwf	_i^0,c
  4806                           
  4807                           ;Usuaris.c: 146:     j = 0;
  4808  000D2C  0E00               	movlw	0
  4809  000D2E  6E1F               	movwf	_j^0,c
  4810                           
  4811                           ;Usuaris.c: 147:    }
  4812  000D30  0012               	return	
  4813  000D32                     l681:
  4814  000D32  A479               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4815  000D34  D004               	goto	l683
  4816                           
  4817                           ;Usuaris.c: 149:     usuariLoguejat = -1;
  4818  000D36  6857               	setf	_usuariLoguejat^0,c
  4819  000D38                     l4890:
  4820                           
  4821                           ;Usuaris.c: 150:     state = 1;
  4822  000D38  0E01               	movlw	1
  4823  000D3A  6E1E               	movwf	UmotorUsers@state^0,c
  4824                           
  4825                           ;Usuaris.c: 151:    }
  4826  000D3C  0012               	return	
  4827  000D3E                     l683:
  4828  000D3E  A279               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  4829  000D40  0012               	return	
  4830  000D42                     u4370:
  4831                           
  4832                           ;Usuaris.c: 153:     state = 2;
  4833  000D42  0E02               	movlw	2
  4834  000D44  6E1E               	movwf	UmotorUsers@state^0,c
  4835                           
  4836                           ;Usuaris.c: 155:   break;
  4837  000D46  0012               	return	
  4838  000D48                     l4894:
  4839                           
  4840                           ;Usuaris.c: 158:    if (i < numUsuaris) {
  4841  000D48  5023               	movf	_numUsuaris^0,w,c
  4842  000D4A  5C20               	subwf	_i^0,w,c
  4843  000D4C  B0D8               	btfsc	status,0,c
  4844  000D4E  D014               	goto	l4904
  4845                           
  4846                           ;Usuaris.c: 159:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  4847  000D50  0E37               	movlw	low _tmpUsername
  4848  000D52  6E6A               	movwf	compareStrings@a^0,c
  4849  000D54  5020               	movf	_i^0,w,c
  4850  000D56  0D17               	mullw	23
  4851  000D58  0E00               	movlw	low _usuaris
  4852  000D5A  24F3               	addwf	243,w,c
  4853  000D5C  6E6B               	movwf	compareStrings@b^0,c
  4854  000D5E  0E01               	movlw	high _usuaris
  4855  000D60  20F4               	addwfc	prodh,w,c
  4856  000D62  6E6C               	movwf	(compareStrings@b+1)^0,c
  4857  000D64  EC4C  F00C         	call	_compareStrings	;wreg free
  4858  000D68  0900               	iorlw	0
  4859  000D6A  A4D8               	btfss	status,2,c
  4860  000D6C  D003               	goto	l4900
  4861                           
  4862                           ;Usuaris.c: 160:      usuariLoguejat = i;
  4863  000D6E  C020  F057         	movff	_i,_usuariLoguejat
  4864                           
  4865                           ;Usuaris.c: 161:                     LATBbits.LATB3 = 1;
  4866  000D72  868A               	bsf	138,3,c	;volatile
  4867  000D74                     l4900:
  4868                           
  4869                           ;Usuaris.c: 166:     i++;
  4870  000D74  2A20               	incf	_i^0,f,c
  4871  000D76  D7E0               	goto	l4890
  4872  000D78                     l4904:
  4873  000D78  5023               	movf	_numUsuaris^0,w,c
  4874  000D7A  1820               	xorwf	_i^0,w,c
  4875  000D7C  A4D8               	btfss	status,2,c
  4876  000D7E  0012               	return	
  4877                           
  4878                           ;Usuaris.c: 170:     do_check_exists = 0;
  4879  000D80  9479               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4880  000D82                     l4908:
  4881                           
  4882                           ;Usuaris.c: 171:     state = 0;
  4883  000D82  0E00               	movlw	0
  4884  000D84  6E1E               	movwf	UmotorUsers@state^0,c
  4885  000D86  0012               	return	
  4886  000D88                     l4910:
  4887                           
  4888                           ;Usuaris.c: 176:    if (i != 8) {
  4889  000D88  0E08               	movlw	8
  4890  000D8A  1820               	xorwf	_i^0,w,c
  4891  000D8C  B4D8               	btfsc	status,2,c
  4892  000D8E  D022               	goto	l4922
  4893                           
  4894                           ;Usuaris.c: 177:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  4895  000D90  C022  F06A         	movff	_indexNextUser,escriureCharEEPROM@pos
  4896  000D94  5020               	movf	_i^0,w,c
  4897  000D96  0F37               	addlw	low _tmpUsername
  4898  000D98  6ED9               	movwf	fsr2l,c
  4899  000D9A  6ADA               	clrf	fsr2h,c
  4900  000D9C  50DF               	movf	indf2,w,c
  4901  000D9E  EC75  F00D         	call	_escriureCharEEPROM
  4902  000DA2  2A22               	incf	_indexNextUser^0,f,c
  4903                           
  4904                           ;Usuaris.c: 178:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  4905  000DA4  5020               	movf	_i^0,w,c
  4906  000DA6  0F37               	addlw	low _tmpUsername
  4907  000DA8  6ED9               	movwf	fsr2l,c
  4908  000DAA  6ADA               	clrf	fsr2h,c
  4909  000DAC  5021               	movf	_indexNextUserStruct^0,w,c
  4910  000DAE  0D17               	mullw	23
  4911  000DB0  0E00               	movlw	low _usuaris
  4912  000DB2  6E6F               	movwf	??_UmotorUsers^0,c
  4913  000DB4  0E01               	movlw	high _usuaris
  4914  000DB6  6E70               	movwf	(??_UmotorUsers+1)^0,c
  4915  000DB8  50F3               	movf	243,w,c
  4916  000DBA  266F               	addwf	??_UmotorUsers^0,f,c
  4917  000DBC  50F4               	movf	244,w,c
  4918  000DBE  2270               	addwfc	(??_UmotorUsers+1)^0,f,c
  4919  000DC0  5020               	movf	_i^0,w,c
  4920  000DC2  246F               	addwf	??_UmotorUsers^0,w,c
  4921  000DC4  6EE1               	movwf	fsr1l,c
  4922  000DC6  0E00               	movlw	0
  4923  000DC8  2070               	addwfc	(??_UmotorUsers+1)^0,w,c
  4924  000DCA  6EE2               	movwf	fsr1h,c
  4925  000DCC  CFDF FFE7          	movff	indf2,indf1
  4926                           
  4927                           ;Usuaris.c: 179:     i++;
  4928  000DD0  2A20               	incf	_i^0,f,c
  4929  000DD2  D7B7               	goto	u4370
  4930  000DD4                     l4922:
  4931  000DD4  0E08               	movlw	8
  4932  000DD6  1820               	xorwf	_i^0,w,c
  4933  000DD8  A4D8               	btfss	status,2,c
  4934  000DDA  0012               	return	
  4935                           
  4936                           ;Usuaris.c: 183:     i = 0;
  4937  000DDC  0E00               	movlw	0
  4938  000DDE  6E20               	movwf	_i^0,c
  4939                           
  4940                           ;Usuaris.c: 184:     state = 3;
  4941  000DE0  0E03               	movlw	3
  4942  000DE2  6E1E               	movwf	UmotorUsers@state^0,c
  4943  000DE4  0012               	return	
  4944  000DE6                     l4926:
  4945                           
  4946                           ;Usuaris.c: 188:    if (i != 8) {
  4947  000DE6  0E08               	movlw	8
  4948  000DE8  1820               	xorwf	_i^0,w,c
  4949  000DEA  B4D8               	btfsc	status,2,c
  4950  000DEC  D028               	goto	l4938
  4951                           
  4952                           ;Usuaris.c: 189:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  4953  000DEE  C022  F06A         	movff	_indexNextUser,escriureCharEEPROM@pos
  4954  000DF2  5020               	movf	_i^0,w,c
  4955  000DF4  0F98               	addlw	low _tmpPassword
  4956  000DF6  6ED9               	movwf	fsr2l,c
  4957  000DF8  6ADA               	clrf	fsr2h,c
  4958  000DFA  50DF               	movf	indf2,w,c
  4959  000DFC  EC75  F00D         	call	_escriureCharEEPROM
  4960  000E00  2A22               	incf	_indexNextUser^0,f,c
  4961                           
  4962                           ;Usuaris.c: 190:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  4963  000E02  5020               	movf	_i^0,w,c
  4964  000E04  0F98               	addlw	low _tmpPassword
  4965  000E06  6ED9               	movwf	fsr2l,c
  4966  000E08  6ADA               	clrf	fsr2h,c
  4967  000E0A  5021               	movf	_indexNextUserStruct^0,w,c
  4968  000E0C  0D17               	mullw	23
  4969  000E0E  0E00               	movlw	low _usuaris
  4970  000E10  6E6F               	movwf	??_UmotorUsers^0,c
  4971  000E12  0E01               	movlw	high _usuaris
  4972  000E14  6E70               	movwf	(??_UmotorUsers+1)^0,c
  4973  000E16  0E09               	movlw	9
  4974  000E18  266F               	addwf	??_UmotorUsers^0,f,c
  4975  000E1A  0E00               	movlw	0
  4976  000E1C  2270               	addwfc	(??_UmotorUsers+1)^0,f,c
  4977  000E1E  50F3               	movf	243,w,c
  4978  000E20  266F               	addwf	??_UmotorUsers^0,f,c
  4979  000E22  50F4               	movf	244,w,c
  4980  000E24  2270               	addwfc	(??_UmotorUsers+1)^0,f,c
  4981  000E26  5020               	movf	_i^0,w,c
  4982  000E28  246F               	addwf	??_UmotorUsers^0,w,c
  4983  000E2A  6EE1               	movwf	fsr1l,c
  4984  000E2C  0E00               	movlw	0
  4985  000E2E  2070               	addwfc	(??_UmotorUsers+1)^0,w,c
  4986  000E30  6EE2               	movwf	fsr1h,c
  4987  000E32  CFDF FFE7          	movff	indf2,indf1
  4988                           
  4989                           ;Usuaris.c: 191:     i++;
  4990  000E36  2A20               	incf	_i^0,f,c
  4991                           
  4992                           ;Usuaris.c: 192:     state = 3;
  4993  000E38  0E03               	movlw	3
  4994  000E3A  6E1E               	movwf	UmotorUsers@state^0,c
  4995                           
  4996                           ;Usuaris.c: 193:    }
  4997  000E3C  0012               	return	
  4998  000E3E                     l4938:
  4999  000E3E  0E08               	movlw	8
  5000  000E40  1820               	xorwf	_i^0,w,c
  5001  000E42  A4D8               	btfss	status,2,c
  5002  000E44  0012               	return	
  5003                           
  5004                           ;Usuaris.c: 195:     do_register = 0;
  5005  000E46  9279               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5006                           
  5007                           ;Usuaris.c: 196:     indexNextUser++;
  5008  000E48  2A22               	incf	_indexNextUser^0,f,c
  5009                           
  5010                           ;Usuaris.c: 197:     if(indexNextUser == 159) indexNextUser = 16;
  5011  000E4A  0E9F               	movlw	159
  5012  000E4C  1822               	xorwf	_indexNextUser^0,w,c
  5013  000E4E  A4D8               	btfss	status,2,c
  5014  000E50  D002               	goto	l4948
  5015  000E52  0E10               	movlw	16
  5016  000E54  6E22               	movwf	_indexNextUser^0,c
  5017  000E56                     l4948:
  5018                           
  5019                           ;Usuaris.c: 198:     indexNextUserStruct++;
  5020  000E56  2A21               	incf	_indexNextUserStruct^0,f,c
  5021                           
  5022                           ;Usuaris.c: 199:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  5023  000E58  0E08               	movlw	8
  5024  000E5A  1821               	xorwf	_indexNextUserStruct^0,w,c
  5025  000E5C  A4D8               	btfss	status,2,c
  5026  000E5E  D002               	goto	l4954
  5027  000E60  0E00               	movlw	0
  5028  000E62  6E21               	movwf	_indexNextUserStruct^0,c
  5029  000E64                     l4954:
  5030                           
  5031                           ;Usuaris.c: 200:     if(numUsuaris != 8) numUsuaris++;
  5032  000E64  0E08               	movlw	8
  5033  000E66  1823               	xorwf	_numUsuaris^0,w,c
  5034  000E68  B4D8               	btfsc	status,2,c
  5035  000E6A  D78B               	goto	l4908
  5036  000E6C  2A23               	incf	_numUsuaris^0,f,c
  5037  000E6E  D789               	goto	l4908
  5038  000E70                     l4962:
  5039  000E70  501E               	movf	UmotorUsers@state^0,w,c
  5040  000E72  6E6F               	movwf	??_UmotorUsers^0,c
  5041  000E74  6A70               	clrf	(??_UmotorUsers+1)^0,c
  5042                           
  5043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5044                           ; Switch size 1, requested type "simple"
  5045                           ; Number of cases is 1, Range of values is 0 to 0
  5046                           ; switch strategies available:
  5047                           ; Name         Instructions Cycles
  5048                           ; simple_byte            4     3 (average)
  5049                           ;	Chosen strategy is simple_byte
  5050  000E76  5070               	movf	(??_UmotorUsers+1)^0,w,c
  5051  000E78  0A00               	xorlw	0	; case 0
  5052  000E7A  A4D8               	btfss	status,2,c
  5053  000E7C  0012               	return	
  5054                           
  5055                           ; Switch size 1, requested type "simple"
  5056                           ; Number of cases is 4, Range of values is 0 to 3
  5057                           ; switch strategies available:
  5058                           ; Name         Instructions Cycles
  5059                           ; simple_byte           13     7 (average)
  5060                           ;	Chosen strategy is simple_byte
  5061  000E7E  506F               	movf	??_UmotorUsers^0,w,c
  5062  000E80  0A00               	xorlw	0	; case 0
  5063  000E82  B4D8               	btfsc	status,2,c
  5064  000E84  D74E               	goto	l680
  5065  000E86  0A01               	xorlw	1	; case 1
  5066  000E88  B4D8               	btfsc	status,2,c
  5067  000E8A  D75E               	goto	l4894
  5068  000E8C  0A03               	xorlw	3	; case 2
  5069  000E8E  B4D8               	btfsc	status,2,c
  5070  000E90  D77B               	goto	l4910
  5071  000E92  0A01               	xorlw	1	; case 3
  5072  000E94  A4D8               	btfss	status,2,c
  5073  000E96  0012               	return	
  5074  000E98  D7A6               	goto	l4926
  5075  000E9A                     __end_of_UmotorUsers:
  5076                           	callstack 0
  5077                           
  5078 ;; *************** function _escriureCharEEPROM *****************
  5079 ;; Defined at:
  5080 ;;		line 57 in file "Usuaris.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  c               1    wreg     unsigned char 
  5083 ;;  pos             1    5[COMRAM] unsigned char 
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;  c               1    6[COMRAM] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  1    wreg      void 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/1
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1
  5095 ;;      Params:         1       0       0
  5096 ;;      Locals:         1       0       0
  5097 ;;      Temps:          0       0       0
  5098 ;;      Totals:         2       0       0
  5099 ;;Total ram usage:        2 bytes
  5100 ;; Hardware stack levels used: 1
  5101 ;; Hardware stack levels required when called: 2
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_UmotorUsers
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text42
  5110  001AEA                     __ptext42:
  5111                           	callstack 0
  5112  001AEA                     _escriureCharEEPROM:
  5113                           	callstack 27
  5114                           
  5115                           ;incstack = 0
  5116                           ;escriureCharEEPROM@c stored from wreg
  5117  001AEA  6E6B               	movwf	escriureCharEEPROM@c^0,c
  5118                           
  5119                           ;Usuaris.c: 58:     EEADR = pos;
  5120  001AEC  C06A  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  5121                           
  5122                           ;Usuaris.c: 59:     EEDATA = c;
  5123  001AF0  C06B  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  5124                           
  5125                           ;Usuaris.c: 60:     EECON1bits.EEPGD = 0;
  5126  001AF4  9EA6               	bcf	166,7,c	;volsfr
  5127                           
  5128                           ;Usuaris.c: 61:     EECON1bits.CFGS = 0;
  5129  001AF6  9CA6               	bcf	166,6,c	;volsfr
  5130                           
  5131                           ;Usuaris.c: 62:     EECON1bits.WREN = 1;
  5132  001AF8  84A6               	bsf	166,2,c	;volsfr
  5133                           
  5134                           ;Usuaris.c: 63:     INTCONbits.GIE = 0;
  5135  001AFA  9EF2               	bcf	242,7,c	;volatile
  5136                           
  5137                           ;Usuaris.c: 64:     EECON2 = 85;
  5138  001AFC  0E55               	movlw	85
  5139  001AFE  6EA7               	movwf	167,c	;volsfr
  5140                           
  5141                           ;Usuaris.c: 65:     EECON2 = 170;
  5142  001B00  0EAA               	movlw	170
  5143  001B02  6EA7               	movwf	167,c	;volsfr
  5144                           
  5145                           ;Usuaris.c: 66:     EECON1bits.WR = 1;
  5146  001B04  82A6               	bsf	166,1,c	;volsfr
  5147  001B06                     l639:
  5148  001B06  B2A6               	btfsc	166,1,c	;volsfr
  5149  001B08  D7FE               	goto	l639
  5150                           
  5151                           ;Usuaris.c: 68:     INTCONbits.GIE = 1;
  5152  001B0A  8EF2               	bsf	242,7,c	;volatile
  5153  001B0C  0012               	return		;funcret
  5154  001B0E                     __end_of_escriureCharEEPROM:
  5155                           	callstack 0
  5156                           
  5157 ;; *************** function _compareStrings *****************
  5158 ;; Defined at:
  5159 ;;		line 129 in file "Usuaris.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  a               1    5[COMRAM] PTR const unsigned char 
  5162 ;;		 -> tmpUsername(9), 
  5163 ;;  b               2    6[COMRAM] PTR const unsigned char 
  5164 ;;		 -> usuaris.username(9), usuaris(184), 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      unsigned char 
  5169 ;; Registers used:
  5170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/1
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1
  5176 ;;      Params:         3       0       0
  5177 ;;      Locals:         0       0       0
  5178 ;;      Temps:          2       0       0
  5179 ;;      Totals:         5       0       0
  5180 ;;Total ram usage:        5 bytes
  5181 ;; Hardware stack levels used: 1
  5182 ;; Hardware stack levels required when called: 2
  5183 ;; This function calls:
  5184 ;;		Nothing
  5185 ;; This function is called by:
  5186 ;;		_UmotorUsers
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text43
  5191  001898                     __ptext43:
  5192                           	callstack 0
  5193  001898                     _compareStrings:
  5194                           	callstack 27
  5195                           
  5196                           ;Usuaris.c: 130:     while (*a){
  5197                           
  5198                           ;incstack = 0
  5199  001898  D00E               	goto	l4000
  5200  00189A                     l3994:
  5201                           
  5202                           ;Usuaris.c: 131:         if (*a != *b)break;
  5203  00189A  C06B  FFD9         	movff	compareStrings@b,fsr2l
  5204  00189E  C06C  FFDA         	movff	compareStrings@b+1,fsr2h
  5205  0018A2  506A               	movf	compareStrings@a^0,w,c
  5206  0018A4  6EE1               	movwf	fsr1l,c
  5207  0018A6  6AE2               	clrf	fsr1h,c
  5208  0018A8  50DE               	movf	postinc2,w,c
  5209  0018AA  18E6               	xorwf	postinc1,w,c
  5210  0018AC  A4D8               	btfss	status,2,c
  5211  0018AE  D009               	goto	u3040
  5212                           
  5213                           ;Usuaris.c: 132:         a++;
  5214  0018B0  2A6A               	incf	compareStrings@a^0,f,c
  5215                           
  5216                           ;Usuaris.c: 133:         b++;
  5217  0018B2  4A6B               	infsnz	compareStrings@b^0,f,c
  5218  0018B4  2A6C               	incf	(compareStrings@b+1)^0,f,c
  5219  0018B6                     l4000:
  5220                           
  5221                           ;Usuaris.c: 130:     while (*a){
  5222  0018B6  506A               	movf	compareStrings@a^0,w,c
  5223  0018B8  6ED9               	movwf	fsr2l,c
  5224  0018BA  6ADA               	clrf	fsr2h,c
  5225  0018BC  50DF               	movf	indf2,w,c
  5226  0018BE  A4D8               	btfss	status,2,c
  5227  0018C0  D7EC               	goto	l3994
  5228  0018C2                     u3040:
  5229                           
  5230                           ;Usuaris.c: 135:     return *(const unsigned char*)a - *(const unsigned char*)b;
  5231  0018C2  C06B  FFD9         	movff	compareStrings@b,fsr2l
  5232  0018C6  C06C  FFDA         	movff	compareStrings@b+1,fsr2h
  5233  0018CA  50DF               	movf	indf2,w,c
  5234  0018CC  6E6D               	movwf	??_compareStrings^0,c
  5235  0018CE  506A               	movf	compareStrings@a^0,w,c
  5236  0018D0  6ED9               	movwf	fsr2l,c
  5237  0018D2  6ADA               	clrf	fsr2h,c
  5238  0018D4  50DF               	movf	indf2,w,c
  5239  0018D6  6E6E               	movwf	(??_compareStrings+1)^0,c
  5240  0018D8  506D               	movf	??_compareStrings^0,w,c
  5241  0018DA  5C6E               	subwf	(??_compareStrings+1)^0,w,c
  5242  0018DC  0012               	return		;funcret
  5243  0018DE                     __end_of_compareStrings:
  5244                           	callstack 0
  5245                           
  5246 ;; *************** function _Uinit *****************
  5247 ;; Defined at:
  5248 ;;		line 70 in file "Usuaris.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;		None
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  j               1    9[COMRAM] unsigned char 
  5253 ;;  j               1    8[COMRAM] unsigned char 
  5254 ;;  i               1    7[COMRAM] unsigned char 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1
  5264 ;;      Params:         0       0       0
  5265 ;;      Locals:         3       0       0
  5266 ;;      Temps:          2       0       0
  5267 ;;      Totals:         5       0       0
  5268 ;;Total ram usage:        5 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 2
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_main
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text44
  5279  001428                     __ptext44:
  5280                           	callstack 0
  5281  001428                     _Uinit:
  5282                           	callstack 28
  5283                           
  5284                           ;Usuaris.c: 75:     EEADR = 0;
  5285                           
  5286                           ;incstack = 0
  5287  001428  0E00               	movlw	0
  5288  00142A  6EA9               	movwf	169,c	;volatile
  5289                           
  5290                           ;Usuaris.c: 76:     EECON1bits.EEPGD = 0;
  5291  00142C  9EA6               	bcf	166,7,c	;volsfr
  5292                           
  5293                           ;Usuaris.c: 77:     EECON1bits.CFGS = 0;
  5294  00142E  9CA6               	bcf	166,6,c	;volsfr
  5295                           
  5296                           ;Usuaris.c: 78:     EECON1bits.RD = 1;
  5297  001430  80A6               	bsf	166,0,c	;volsfr
  5298  001432                     l645:
  5299  001432  B0A6               	btfsc	166,0,c	;volsfr
  5300  001434  D7FE               	goto	l645
  5301                           
  5302                           ;Usuaris.c: 80:     numUsuaris = EEDATA;
  5303  001436  CFA8 F023          	movff	4008,_numUsuaris	;volatile
  5304                           
  5305                           ;Usuaris.c: 83:     EEADR++;
  5306  00143A  2AA9               	incf	169,f,c	;volatile
  5307                           
  5308                           ;Usuaris.c: 84:     EECON1bits.EEPGD = 0;
  5309  00143C  9EA6               	bcf	166,7,c	;volsfr
  5310                           
  5311                           ;Usuaris.c: 85:     EECON1bits.CFGS = 0;
  5312  00143E  9CA6               	bcf	166,6,c	;volsfr
  5313  001440                     l648:
  5314  001440  B0A6               	btfsc	166,0,c	;volsfr
  5315  001442  D7FE               	goto	l648
  5316                           
  5317                           ;Usuaris.c: 88:     indexNextUser = EEDATA;
  5318  001444  CFA8 F022          	movff	4008,_indexNextUser	;volatile
  5319                           
  5320                           ;Usuaris.c: 90:     EEADR++;
  5321  001448  2AA9               	incf	169,f,c	;volatile
  5322                           
  5323                           ;Usuaris.c: 92:     for(char i = 0; i< numUsuaris; i++){
  5324  00144A  0E00               	movlw	0
  5325  00144C  6E6C               	movwf	Uinit@i^0,c
  5326  00144E  D041               	goto	l2440
  5327  001450                     l2410:
  5328                           
  5329                           ;Usuaris.c: 93:         for(char j = 0; j<9; j++){
  5330  001450  0E00               	movlw	0
  5331  001452  6E6D               	movwf	Uinit@j^0,c
  5332  001454                     l653:
  5333                           
  5334                           ;Usuaris.c: 94:             EECON1bits.EEPGD = 0;
  5335  001454  9EA6               	bcf	166,7,c	;volsfr
  5336                           
  5337                           ;Usuaris.c: 95:             EECON1bits.CFGS = 0;
  5338  001456  9CA6               	bcf	166,6,c	;volsfr
  5339                           
  5340                           ;Usuaris.c: 96:             EECON1bits.RD = 1;
  5341  001458  80A6               	bsf	166,0,c	;volsfr
  5342  00145A                     l655:
  5343  00145A  B0A6               	btfsc	166,0,c	;volsfr
  5344  00145C  D7FE               	goto	l655
  5345                           
  5346                           ;Usuaris.c: 98:             usuaris[i].username[j] = EEDATA;
  5347  00145E  506C               	movf	Uinit@i^0,w,c
  5348  001460  0D17               	mullw	23
  5349  001462  0E00               	movlw	low _usuaris
  5350  001464  6E6A               	movwf	??_Uinit^0,c
  5351  001466  0E01               	movlw	high _usuaris
  5352  001468  6E6B               	movwf	(??_Uinit+1)^0,c
  5353  00146A  50F3               	movf	243,w,c
  5354  00146C  266A               	addwf	??_Uinit^0,f,c
  5355  00146E  50F4               	movf	244,w,c
  5356  001470  226B               	addwfc	(??_Uinit+1)^0,f,c
  5357  001472  506D               	movf	Uinit@j^0,w,c
  5358  001474  246A               	addwf	??_Uinit^0,w,c
  5359  001476  6ED9               	movwf	fsr2l,c
  5360  001478  0E00               	movlw	0
  5361  00147A  206B               	addwfc	(??_Uinit+1)^0,w,c
  5362  00147C  6EDA               	movwf	fsr2h,c
  5363  00147E  CFA8 FFDF          	movff	4008,indf2	;volatile
  5364                           
  5365                           ;Usuaris.c: 99:             EEADR++;
  5366  001482  2AA9               	incf	169,f,c	;volatile
  5367                           
  5368                           ;Usuaris.c: 100:         }
  5369  001484  2A6D               	incf	Uinit@j^0,f,c
  5370  001486  0E08               	movlw	8
  5371  001488  646D               	cpfsgt	Uinit@j^0,c
  5372  00148A  D7E4               	goto	l653
  5373                           
  5374                           ;Usuaris.c: 101:         for(char j = 0; j<9; j++){
  5375  00148C  0E00               	movlw	0
  5376  00148E  6E6E               	movwf	Uinit@j_1140^0,c
  5377  001490                     l658:
  5378                           
  5379                           ;Usuaris.c: 102:             EECON1bits.EEPGD = 0;
  5380  001490  9EA6               	bcf	166,7,c	;volsfr
  5381                           
  5382                           ;Usuaris.c: 103:             EECON1bits.CFGS = 0;
  5383  001492  9CA6               	bcf	166,6,c	;volsfr
  5384                           
  5385                           ;Usuaris.c: 104:             EECON1bits.RD = 1;
  5386  001494  80A6               	bsf	166,0,c	;volsfr
  5387  001496                     l660:
  5388  001496  B0A6               	btfsc	166,0,c	;volsfr
  5389  001498  D7FE               	goto	l660
  5390                           
  5391                           ;Usuaris.c: 106:             usuaris[i].password[j] = EEDATA;
  5392  00149A  506C               	movf	Uinit@i^0,w,c
  5393  00149C  0D17               	mullw	23
  5394  00149E  0E00               	movlw	low _usuaris
  5395  0014A0  6E6A               	movwf	??_Uinit^0,c
  5396  0014A2  0E01               	movlw	high _usuaris
  5397  0014A4  6E6B               	movwf	(??_Uinit+1)^0,c
  5398  0014A6  0E09               	movlw	9
  5399  0014A8  266A               	addwf	??_Uinit^0,f,c
  5400  0014AA  0E00               	movlw	0
  5401  0014AC  226B               	addwfc	(??_Uinit+1)^0,f,c
  5402  0014AE  50F3               	movf	243,w,c
  5403  0014B0  266A               	addwf	??_Uinit^0,f,c
  5404  0014B2  50F4               	movf	244,w,c
  5405  0014B4  226B               	addwfc	(??_Uinit+1)^0,f,c
  5406  0014B6  506E               	movf	Uinit@j_1140^0,w,c
  5407  0014B8  246A               	addwf	??_Uinit^0,w,c
  5408  0014BA  6ED9               	movwf	fsr2l,c
  5409  0014BC  0E00               	movlw	0
  5410  0014BE  206B               	addwfc	(??_Uinit+1)^0,w,c
  5411  0014C0  6EDA               	movwf	fsr2h,c
  5412  0014C2  CFA8 FFDF          	movff	4008,indf2	;volatile
  5413                           
  5414                           ;Usuaris.c: 107:             EEADR++;
  5415  0014C6  2AA9               	incf	169,f,c	;volatile
  5416                           
  5417                           ;Usuaris.c: 108:         }
  5418  0014C8  2A6E               	incf	Uinit@j_1140^0,f,c
  5419  0014CA  0E08               	movlw	8
  5420  0014CC  646E               	cpfsgt	Uinit@j_1140^0,c
  5421  0014CE  D7E0               	goto	l658
  5422                           
  5423                           ;Usuaris.c: 109:     }
  5424  0014D0  2A6C               	incf	Uinit@i^0,f,c
  5425  0014D2                     l2440:
  5426  0014D2  5023               	movf	_numUsuaris^0,w,c
  5427  0014D4  5C6C               	subwf	Uinit@i^0,w,c
  5428  0014D6  B0D8               	btfsc	status,0,c
  5429  0014D8  0012               	return	
  5430  0014DA  D7BA               	goto	l2410
  5431  0014DC                     __end_of_Uinit:
  5432                           	callstack 0
  5433                           
  5434 ;; *************** function _TiInitTimer *****************
  5435 ;; Defined at:
  5436 ;;		line 18 in file "TiTTimer.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;		None
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;		None
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      void 
  5443 ;; Registers used:
  5444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1
  5450 ;;      Params:         0       0       0
  5451 ;;      Locals:         0       0       0
  5452 ;;      Temps:          0       0       0
  5453 ;;      Totals:         0       0       0
  5454 ;;Total ram usage:        0 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; Hardware stack levels required when called: 2
  5457 ;; This function calls:
  5458 ;;		Nothing
  5459 ;; This function is called by:
  5460 ;;		_main
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text45
  5465  001992                     __ptext45:
  5466                           	callstack 0
  5467  001992                     _TiInitTimer:
  5468                           	callstack 28
  5469                           
  5470                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  5471                           
  5472                           ;incstack = 0
  5473  001992  9ED0               	bcf	208,7,c	;volatile
  5474                           
  5475                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  5476  001994  8EF2               	bsf	242,7,c	;volatile
  5477                           
  5478                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  5479  001996  8CF2               	bsf	242,6,c	;volatile
  5480                           
  5481                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  5482  001998  8AF2               	bsf	242,5,c	;volatile
  5483                           
  5484                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  5485  00199A  94F2               	bcf	242,2,c	;volatile
  5486                           
  5487                           ;TiTTimer.c: 25:     T0CON = 136;
  5488  00199C  0E88               	movlw	136
  5489  00199E  6ED5               	movwf	213,c	;volatile
  5490                           
  5491                           ;TiTTimer.c: 27:     TMR0H = 223;
  5492  0019A0  0EDF               	movlw	223
  5493  0019A2  6ED7               	movwf	215,c	;volatile
  5494                           
  5495                           ;TiTTimer.c: 28:     TMR0L = 148;
  5496  0019A4  0E94               	movlw	148
  5497  0019A6  6ED6               	movwf	214,c	;volatile
  5498                           
  5499                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  5500  0019A8  8ED5               	bsf	213,7,c	;volatile
  5501                           
  5502                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  5503  0019AA  0E00               	movlw	0
  5504  0019AC  6E2A               	movwf	_counter^0,c
  5505  0019AE                     l4104:
  5506  0019AE  0E07               	movlw	7
  5507  0019B0  642A               	cpfsgt	_counter^0,c
  5508  0019B2  D001               	goto	l4108
  5509  0019B4  0012               	return	
  5510  0019B6                     l4108:
  5511                           
  5512                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  5513  0019B6  502A               	movf	_counter^0,w,c
  5514  0019B8  0D03               	mullw	3
  5515  0019BA  50F3               	movf	243,w,c
  5516  0019BC  0F82               	addlw	low (_s_Timers+2)
  5517  0019BE  6ED9               	movwf	fsr2l,c
  5518  0019C0  6ADA               	clrf	fsr2h,c
  5519  0019C2  0E00               	movlw	0
  5520  0019C4  6EDF               	movwf	indf2,c
  5521                           
  5522                           ;TiTTimer.c: 33:     }
  5523  0019C6  2A2A               	incf	_counter^0,f,c
  5524  0019C8  D7F2               	goto	l4104
  5525  0019CA                     __end_of_TiInitTimer:
  5526                           	callstack 0
  5527                           
  5528 ;; *************** function _TeTeclat *****************
  5529 ;; Defined at:
  5530 ;;		line 22 in file "TeTeclat.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;		None
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/1
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMRAM   BANK0   BANK1
  5544 ;;      Params:         0       0       0
  5545 ;;      Locals:         0       0       0
  5546 ;;      Temps:          3       0       0
  5547 ;;      Totals:         3       0       0
  5548 ;;Total ram usage:        3 bytes
  5549 ;; Hardware stack levels used: 1
  5550 ;; Hardware stack levels required when called: 3
  5551 ;; This function calls:
  5552 ;;		_MsetNovaTecla
  5553 ;;		_SsetNovaTecla
  5554 ;;		_TiGetTics
  5555 ;;		_TiResetTics
  5556 ;; This function is called by:
  5557 ;;		_main
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text46
  5562  000E9A                     __ptext46:
  5563                           	callstack 0
  5564  000E9A                     _TeTeclat:
  5565                           	callstack 27
  5566                           
  5567                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  5568                           
  5569                           ;incstack = 0
  5570  000E9A  A083               	btfss	131,0,c	;volatile
  5571  000E9C  D003               	goto	u6900
  5572  000E9E  6A71               	clrf	??_TeTeclat^0,c
  5573  000EA0  2A71               	incf	??_TeTeclat^0,f,c
  5574  000EA2  D001               	goto	u6908
  5575  000EA4                     u6900:
  5576  000EA4  6A71               	clrf	??_TeTeclat^0,c
  5577  000EA6                     u6908:
  5578  000EA6  A283               	btfss	131,1,c	;volatile
  5579  000EA8  D002               	goto	u6910
  5580  000EAA  0E01               	movlw	1
  5581  000EAC  D001               	goto	u6916
  5582  000EAE                     u6910:
  5583  000EAE  0E00               	movlw	0
  5584  000EB0                     u6916:
  5585  000EB0  0D02               	mullw	2
  5586  000EB2  CFF3 F072          	movff	prodl,??_TeTeclat+1
  5587  000EB6  A483               	btfss	131,2,c	;volatile
  5588  000EB8  D002               	goto	u6920
  5589  000EBA  0E01               	movlw	1
  5590  000EBC  D001               	goto	u6926
  5591  000EBE                     u6920:
  5592  000EBE  0E00               	movlw	0
  5593  000EC0                     u6926:
  5594  000EC0  0D03               	mullw	3
  5595  000EC2  CFF3 F073          	movff	prodl,??_TeTeclat+2
  5596  000EC6  A683               	btfss	131,3,c	;volatile
  5597  000EC8  D002               	goto	u6930
  5598  000ECA  0E01               	movlw	1
  5599  000ECC  D001               	goto	u6936
  5600  000ECE                     u6930:
  5601  000ECE  0E00               	movlw	0
  5602  000ED0                     u6936:
  5603  000ED0  0D04               	mullw	4
  5604  000ED2  50F3               	movf	243,w,c
  5605  000ED4  2473               	addwf	(??_TeTeclat+2)^0,w,c
  5606  000ED6  2472               	addwf	(??_TeTeclat+1)^0,w,c
  5607  000ED8  2471               	addwf	??_TeTeclat^0,w,c
  5608  000EDA  6E2B               	movwf	TeTeclat@files^0,c
  5609                           
  5610                           ;TeTeclat.c: 27:  switch(state) {
  5611  000EDC  D06F               	goto	l6690
  5612  000EDE                     l6616:
  5613                           
  5614                           ;TeTeclat.c: 29:    if (files==0) {
  5615  000EDE  502B               	movf	TeTeclat@files^0,w,c
  5616  000EE0  A4D8               	btfss	status,2,c
  5617  000EE2  D007               	goto	l6624
  5618                           
  5619                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  5620  000EE4  888C               	bsf	140,4,c	;volatile
  5621                           
  5622                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  5623  000EE6  9A8C               	bcf	140,5,c	;volatile
  5624                           
  5625                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  5626  000EE8  9C8C               	bcf	140,6,c	;volatile
  5627                           
  5628                           ;TeTeclat.c: 33:     cols=0;
  5629  000EEA  0E00               	movlw	0
  5630  000EEC  6E2C               	movwf	TeTeclat@cols^0,c
  5631  000EEE                     l6622:
  5632                           
  5633                           ;TeTeclat.c: 34:     state++;
  5634  000EEE  2A2D               	incf	TeTeclat@state^0,f,c
  5635                           
  5636                           ;TeTeclat.c: 35:    }
  5637  000EF0  0012               	return	
  5638  000EF2                     l6624:
  5639  000EF2  502B               	movf	TeTeclat@files^0,w,c
  5640  000EF4  B4D8               	btfsc	status,2,c
  5641  000EF6  0012               	return	
  5642                           
  5643                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  5644  000EF8  502E               	movf	_tiTeclat^0,w,c
  5645  000EFA  ECDC  F00D         	call	_TiResetTics
  5646  000EFE                     l6628:
  5647                           
  5648                           ;TeTeclat.c: 38:     state = 3;
  5649  000EFE  0E03               	movlw	3
  5650  000F00  6E2D               	movwf	TeTeclat@state^0,c
  5651  000F02  0012               	return	
  5652  000F04                     l6630:
  5653                           
  5654                           ;TeTeclat.c: 42:    if (files==0) {
  5655  000F04  502B               	movf	TeTeclat@files^0,w,c
  5656  000F06  A4D8               	btfss	status,2,c
  5657  000F08  D005               	goto	l6638
  5658                           
  5659                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  5660  000F0A  988C               	bcf	140,4,c	;volatile
  5661                           
  5662                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  5663  000F0C  8A8C               	bsf	140,5,c	;volatile
  5664                           
  5665                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  5666  000F0E  9C8C               	bcf	140,6,c	;volatile
  5667                           
  5668                           ;TeTeclat.c: 46:     cols=1;
  5669  000F10  0E01               	movlw	1
  5670  000F12  D7EC               	goto	L2
  5671  000F14                     l6638:
  5672  000F14  502B               	movf	TeTeclat@files^0,w,c
  5673  000F16  B4D8               	btfsc	status,2,c
  5674  000F18  0012               	return	
  5675                           
  5676                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  5677  000F1A  502E               	movf	_tiTeclat^0,w,c
  5678  000F1C  ECDC  F00D         	call	_TiResetTics
  5679  000F20  D7EE               	goto	l6628
  5680  000F22                     l6644:
  5681                           
  5682                           ;TeTeclat.c: 55:    if (files==0) {
  5683  000F22  502B               	movf	TeTeclat@files^0,w,c
  5684  000F24  A4D8               	btfss	status,2,c
  5685  000F26  D008               	goto	l6650
  5686                           
  5687                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  5688  000F28  988C               	bcf	140,4,c	;volatile
  5689                           
  5690                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  5691  000F2A  9A8C               	bcf	140,5,c	;volatile
  5692                           
  5693                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  5694  000F2C  8C8C               	bsf	140,6,c	;volatile
  5695                           
  5696                           ;TeTeclat.c: 59:     cols=2;
  5697  000F2E  0E02               	movlw	2
  5698  000F30  6E2C               	movwf	TeTeclat@cols^0,c
  5699                           
  5700                           ;TeTeclat.c: 60:     state = 0;
  5701  000F32  0E00               	movlw	0
  5702  000F34  6E2D               	movwf	TeTeclat@state^0,c
  5703                           
  5704                           ;TeTeclat.c: 61:    }
  5705  000F36  0012               	return	
  5706  000F38                     l6650:
  5707  000F38  502B               	movf	TeTeclat@files^0,w,c
  5708  000F3A  B4D8               	btfsc	status,2,c
  5709  000F3C  0012               	return	
  5710                           
  5711                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  5712  000F3E  502E               	movf	_tiTeclat^0,w,c
  5713  000F40  ECDC  F00D         	call	_TiResetTics
  5714  000F44  D7D4               	goto	l6622
  5715  000F46                     l6656:
  5716                           
  5717                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  5718  000F46  502E               	movf	_tiTeclat^0,w,c
  5719  000F48  EC5F  F00D         	call	_TiGetTics
  5720  000F4C  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  5721  000F4E  0012               	return	
  5722  000F50  D7CE               	goto	l6622
  5723  000F52                     l6660:
  5724                           
  5725                           ;TeTeclat.c: 73:    if (files==0) {
  5726  000F52  502B               	movf	TeTeclat@files^0,w,c
  5727  000F54  A4D8               	btfss	status,2,c
  5728  000F56  D003               	goto	l6664
  5729                           
  5730                           ;TeTeclat.c: 74:     state = 1;
  5731  000F58  0E01               	movlw	1
  5732  000F5A  6E2D               	movwf	TeTeclat@state^0,c
  5733                           
  5734                           ;TeTeclat.c: 75:    }
  5735  000F5C  0012               	return	
  5736  000F5E                     l6664:
  5737  000F5E  502B               	movf	TeTeclat@files^0,w,c
  5738  000F60  B4D8               	btfsc	status,2,c
  5739  000F62  0012               	return	
  5740                           
  5741                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  5742  000F64  502B               	movf	TeTeclat@files^0,w,c
  5743  000F66  0D03               	mullw	3
  5744  000F68  50F3               	movf	243,w,c
  5745  000F6A  0F9E               	addlw	low (_teclaPremuda+253)
  5746  000F6C  242C               	addwf	TeTeclat@cols^0,w,c
  5747  000F6E  6ED9               	movwf	fsr2l,c
  5748  000F70  6ADA               	clrf	fsr2h,c
  5749  000F72  50DF               	movf	indf2,w,c
  5750  000F74  EC68  F00E         	call	_MsetNovaTecla
  5751                           
  5752                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  5753  000F78  502B               	movf	TeTeclat@files^0,w,c
  5754  000F7A  0D03               	mullw	3
  5755  000F7C  50F3               	movf	243,w,c
  5756  000F7E  0F9E               	addlw	low (_teclaPremuda+253)
  5757  000F80  242C               	addwf	TeTeclat@cols^0,w,c
  5758  000F82  6ED9               	movwf	fsr2l,c
  5759  000F84  6ADA               	clrf	fsr2h,c
  5760  000F86  50DF               	movf	indf2,w,c
  5761  000F88  EC64  F00E         	call	_SsetNovaTecla
  5762  000F8C  D7B0               	goto	l6622
  5763  000F8E                     l6670:
  5764                           
  5765                           ;TeTeclat.c: 84:    if (files==0) {
  5766  000F8E  502B               	movf	TeTeclat@files^0,w,c
  5767  000F90  A4D8               	btfss	status,2,c
  5768  000F92  0012               	return	
  5769                           
  5770                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  5771  000F94  502E               	movf	_tiTeclat^0,w,c
  5772  000F96  ECDC  F00D         	call	_TiResetTics
  5773  000F9A  D7A9               	goto	l6622
  5774  000F9C                     l6676:
  5775                           
  5776                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  5777  000F9C  502E               	movf	_tiTeclat^0,w,c
  5778  000F9E  EC5F  F00D         	call	_TiGetTics
  5779  000FA2  D7D4               	goto	L3
  5780  000FA4                     l6680:
  5781                           
  5782                           ;TeTeclat.c: 95:    if (files!=0) {
  5783  000FA4  502B               	movf	TeTeclat@files^0,w,c
  5784  000FA6  B4D8               	btfsc	status,2,c
  5785  000FA8  D003               	goto	l6684
  5786                           
  5787                           ;TeTeclat.c: 96:     state = 5;
  5788  000FAA  0E05               	movlw	5
  5789  000FAC  6E2D               	movwf	TeTeclat@state^0,c
  5790                           
  5791                           ;TeTeclat.c: 97:    }
  5792  000FAE  0012               	return	
  5793  000FB0                     l6684:
  5794  000FB0  502B               	movf	TeTeclat@files^0,w,c
  5795  000FB2  A4D8               	btfss	status,2,c
  5796  000FB4  0012               	return	
  5797                           
  5798                           ;TeTeclat.c: 99:     state = 0;
  5799  000FB6  0E00               	movlw	0
  5800  000FB8  6E2D               	movwf	TeTeclat@state^0,c
  5801  000FBA  0012               	return	
  5802  000FBC                     l6690:
  5803  000FBC  502D               	movf	TeTeclat@state^0,w,c
  5804  000FBE  6E71               	movwf	??_TeTeclat^0,c
  5805  000FC0  6A72               	clrf	(??_TeTeclat+1)^0,c
  5806                           
  5807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5808                           ; Switch size 1, requested type "simple"
  5809                           ; Number of cases is 1, Range of values is 0 to 0
  5810                           ; switch strategies available:
  5811                           ; Name         Instructions Cycles
  5812                           ; simple_byte            4     3 (average)
  5813                           ;	Chosen strategy is simple_byte
  5814  000FC2  5072               	movf	(??_TeTeclat+1)^0,w,c
  5815  000FC4  0A00               	xorlw	0	; case 0
  5816  000FC6  A4D8               	btfss	status,2,c
  5817  000FC8  0012               	return	
  5818                           
  5819                           ; Switch size 1, requested type "simple"
  5820                           ; Number of cases is 8, Range of values is 0 to 7
  5821                           ; switch strategies available:
  5822                           ; Name         Instructions Cycles
  5823                           ; simple_byte           25    13 (average)
  5824                           ;	Chosen strategy is simple_byte
  5825  000FCA  5071               	movf	??_TeTeclat^0,w,c
  5826  000FCC  0A00               	xorlw	0	; case 0
  5827  000FCE  B4D8               	btfsc	status,2,c
  5828  000FD0  D786               	goto	l6616
  5829  000FD2  0A01               	xorlw	1	; case 1
  5830  000FD4  B4D8               	btfsc	status,2,c
  5831  000FD6  D796               	goto	l6630
  5832  000FD8  0A03               	xorlw	3	; case 2
  5833  000FDA  B4D8               	btfsc	status,2,c
  5834  000FDC  D7A2               	goto	l6644
  5835  000FDE  0A01               	xorlw	1	; case 3
  5836  000FE0  B4D8               	btfsc	status,2,c
  5837  000FE2  D7B1               	goto	l6656
  5838  000FE4  0A07               	xorlw	7	; case 4
  5839  000FE6  B4D8               	btfsc	status,2,c
  5840  000FE8  D7B4               	goto	l6660
  5841  000FEA  0A01               	xorlw	1	; case 5
  5842  000FEC  B4D8               	btfsc	status,2,c
  5843  000FEE  D7CF               	goto	l6670
  5844  000FF0  0A03               	xorlw	3	; case 6
  5845  000FF2  B4D8               	btfsc	status,2,c
  5846  000FF4  D7D3               	goto	l6676
  5847  000FF6  0A01               	xorlw	1	; case 7
  5848  000FF8  A4D8               	btfss	status,2,c
  5849  000FFA  0012               	return	
  5850  000FFC  D7D3               	goto	l6680
  5851  000FFE                     __end_of_TeTeclat:
  5852                           	callstack 0
  5853                           
  5854 ;; *************** function _SsetNovaTecla *****************
  5855 ;; Defined at:
  5856 ;;		line 126 in file "Ssms.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  tecla           1    wreg     unsigned char 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;  tecla           1    5[COMRAM] unsigned char 
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  1    wreg      void 
  5863 ;; Registers used:
  5864 ;;		wreg
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/1
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1
  5870 ;;      Params:         0       0       0
  5871 ;;      Locals:         1       0       0
  5872 ;;      Temps:          0       0       0
  5873 ;;      Totals:         1       0       0
  5874 ;;Total ram usage:        1 bytes
  5875 ;; Hardware stack levels used: 1
  5876 ;; Hardware stack levels required when called: 2
  5877 ;; This function calls:
  5878 ;;		Nothing
  5879 ;; This function is called by:
  5880 ;;		_TeTeclat
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text47
  5885  001CC8                     __ptext47:
  5886                           	callstack 0
  5887  001CC8                     _SsetNovaTecla:
  5888                           	callstack 27
  5889                           
  5890                           ;incstack = 0
  5891                           ;SsetNovaTecla@tecla stored from wreg
  5892  001CC8  6E6A               	movwf	SsetNovaTecla@tecla^0,c
  5893                           
  5894                           ;Ssms.c: 127:     novaTecla = tecla;
  5895  001CCA  C06A  F05D         	movff	SsetNovaTecla@tecla,_novaTecla
  5896  001CCE  0012               	return		;funcret
  5897  001CD0                     __end_of_SsetNovaTecla:
  5898                           	callstack 0
  5899                           
  5900 ;; *************** function _MsetNovaTecla *****************
  5901 ;; Defined at:
  5902 ;;		line 28 in file "Menu.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  tecla           1    wreg     unsigned char 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  tecla           1    5[COMRAM] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/1
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1
  5916 ;;      Params:         0       0       0
  5917 ;;      Locals:         1       0       0
  5918 ;;      Temps:          0       0       0
  5919 ;;      Totals:         1       0       0
  5920 ;;Total ram usage:        1 bytes
  5921 ;; Hardware stack levels used: 1
  5922 ;; Hardware stack levels required when called: 2
  5923 ;; This function calls:
  5924 ;;		Nothing
  5925 ;; This function is called by:
  5926 ;;		_TeTeclat
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text48
  5931  001CD0                     __ptext48:
  5932                           	callstack 0
  5933  001CD0                     _MsetNovaTecla:
  5934                           	callstack 27
  5935                           
  5936                           ;incstack = 0
  5937                           ;MsetNovaTecla@tecla stored from wreg
  5938  001CD0  6E6A               	movwf	MsetNovaTecla@tecla^0,c
  5939                           
  5940                           ;Menu.c: 29:     NovaTecla = tecla;
  5941  001CD2  C06A  F05A         	movff	MsetNovaTecla@tecla,_NovaTecla
  5942  001CD6  0012               	return		;funcret
  5943  001CD8                     __end_of_MsetNovaTecla:
  5944                           	callstack 0
  5945                           
  5946 ;; *************** function _TeInit *****************
  5947 ;; Defined at:
  5948 ;;		line 18 in file "TeTeclat.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;		None
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  1    wreg      void 
  5955 ;; Registers used:
  5956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1
  5962 ;;      Params:         0       0       0
  5963 ;;      Locals:         0       0       0
  5964 ;;      Temps:          0       0       0
  5965 ;;      Totals:         0       0       0
  5966 ;;Total ram usage:        0 bytes
  5967 ;; Hardware stack levels used: 1
  5968 ;; Hardware stack levels required when called: 3
  5969 ;; This function calls:
  5970 ;;		_TiGetTimer
  5971 ;; This function is called by:
  5972 ;;		_main
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text49
  5977  001CD8                     __ptext49:
  5978                           	callstack 0
  5979  001CD8                     _TeInit:
  5980                           	callstack 27
  5981                           
  5982                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  5983                           
  5984                           ;incstack = 0
  5985  001CD8  ECAC  F00C         	call	_TiGetTimer	;wreg free
  5986  001CDC  6E2E               	movwf	_tiTeclat^0,c
  5987  001CDE  0012               	return		;funcret
  5988  001CE0                     __end_of_TeInit:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _Sinit *****************
  5992 ;; Defined at:
  5993 ;;		line 18 in file "Ssms.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;		None
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;		None
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      void 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1
  6007 ;;      Params:         0       0       0
  6008 ;;      Locals:         0       0       0
  6009 ;;      Temps:          0       0       0
  6010 ;;      Totals:         0       0       0
  6011 ;;Total ram usage:        0 bytes
  6012 ;; Hardware stack levels used: 1
  6013 ;; Hardware stack levels required when called: 3
  6014 ;; This function calls:
  6015 ;;		_TiGetTimer
  6016 ;; This function is called by:
  6017 ;;		_main
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text50
  6022  001CE0                     __ptext50:
  6023                           	callstack 0
  6024  001CE0                     _Sinit:
  6025                           	callstack 27
  6026                           
  6027                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  6028                           
  6029                           ;incstack = 0
  6030  001CE0  ECAC  F00C         	call	_TiGetTimer	;wreg free
  6031  001CE4  6E5C               	movwf	_timerSMS^0,c
  6032  001CE6  0012               	return		;funcret
  6033  001CE8                     __end_of_Sinit:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _SMotor *****************
  6037 ;; Defined at:
  6038 ;;		line 22 in file "Ssms.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1
  6052 ;;      Params:         0       0       0
  6053 ;;      Locals:         0       0       0
  6054 ;;      Temps:          2       0       0
  6055 ;;      Totals:         2       0       0
  6056 ;;Total ram usage:        2 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 3
  6059 ;; This function calls:
  6060 ;;		_MNovaLletra
  6061 ;;		_TiGetTics
  6062 ;;		_TiResetTics
  6063 ;; This function is called by:
  6064 ;;		_main
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text51
  6069  000B24                     __ptext51:
  6070                           	callstack 0
  6071  000B24                     _SMotor:
  6072                           	callstack 27
  6073                           
  6074                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  6075                           
  6076                           ;incstack = 0
  6077  000B24  D0DF               	goto	l5872
  6078  000B26                     l5716:
  6079                           
  6080                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  6081  000B26  285D               	incf	_novaTecla^0,w,c
  6082  000B28  A4D8               	btfss	status,2,c
  6083  000B2A  A879               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6084  000B2C  D006               	goto	l5724
  6085                           
  6086                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  6087  000B2E  505C               	movf	_timerSMS^0,w,c
  6088  000B30  ECDC  F00D         	call	_TiResetTics
  6089                           
  6090                           ;Ssms.c: 29:     state = 3;
  6091  000B34  0E03               	movlw	3
  6092  000B36  6E2F               	movwf	SMotor@state^0,c
  6093                           
  6094                           ;Ssms.c: 30:    }
  6095  000B38  0012               	return	
  6096  000B3A                     l5724:
  6097  000B3A  285D               	incf	_novaTecla^0,w,c
  6098  000B3C  A4D8               	btfss	status,2,c
  6099  000B3E  0012               	return	
  6100  000B40  505C               	movf	_timerSMS^0,w,c
  6101  000B42  EC5F  F00D         	call	_TiGetTics
  6102  000B46  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  6103  000B48  0012               	return	
  6104  000B4A  0E5A               	movlw	90
  6105  000B4C  5C6A               	subwf	?_TiGetTics^0,w,c
  6106  000B4E  0E02               	movlw	2
  6107  000B50  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  6108  000B52  A0D8               	btfss	status,0,c
  6109  000B54  0012               	return	
  6110  000B56  285E               	incf	_lletraASCII^0,w,c
  6111  000B58  B4D8               	btfsc	status,2,c
  6112  000B5A  0012               	return	
  6113  000B5C  A879               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6114  000B5E  0012               	return	
  6115                           
  6116                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  6117  000B60  505E               	movf	_lletraASCII^0,w,c
  6118  000B62  EC74  F00E         	call	_MNovaLletra
  6119                           
  6120                           ;Ssms.c: 33:     lletraASCII = -1;
  6121  000B66  685E               	setf	_lletraASCII^0,c
  6122                           
  6123                           ;Ssms.c: 34:     ultimaTecla = -1;
  6124  000B68  685B               	setf	_ultimaTecla^0,c
  6125                           
  6126                           ;Ssms.c: 35:     zeroTecla = 0;
  6127  000B6A  0E00               	movlw	0
  6128  000B6C  6E30               	movwf	_zeroTecla^0,c
  6129  000B6E                     l5740:
  6130                           
  6131                           ;Ssms.c: 36:     state = 0;
  6132  000B6E  0E00               	movlw	0
  6133  000B70  6E2F               	movwf	SMotor@state^0,c
  6134  000B72  0012               	return	
  6135  000B74                     l5742:
  6136                           
  6137                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  6138  000B74  505B               	movf	_ultimaTecla^0,w,c
  6139  000B76  185D               	xorwf	_novaTecla^0,w,c
  6140  000B78  A4D8               	btfss	status,2,c
  6141  000B7A  D011               	goto	l5752
  6142  000B7C  505C               	movf	_timerSMS^0,w,c
  6143  000B7E  EC5F  F00D         	call	_TiGetTics
  6144  000B82  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  6145  000B84  D006               	goto	u5510
  6146  000B86  0E5A               	movlw	90
  6147  000B88  5C6A               	subwf	?_TiGetTics^0,w,c
  6148  000B8A  0E02               	movlw	2
  6149  000B8C  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  6150  000B8E  B0D8               	btfsc	status,0,c
  6151  000B90  D006               	goto	l5752
  6152  000B92                     u5510:
  6153                           
  6154                           ;Ssms.c: 41:     novaTecla = -1;
  6155  000B92  685D               	setf	_novaTecla^0,c
  6156                           
  6157                           ;Ssms.c: 42:     sumaPulsacions++;
  6158  000B94  2A31               	incf	_sumaPulsacions^0,f,c
  6159                           
  6160                           ;Ssms.c: 43:     lletraASCII++;
  6161  000B96  2A5E               	incf	_lletraASCII^0,f,c
  6162                           
  6163                           ;Ssms.c: 44:     state = 2;
  6164  000B98  0E02               	movlw	2
  6165  000B9A  6E2F               	movwf	SMotor@state^0,c
  6166                           
  6167                           ;Ssms.c: 45:    }
  6168  000B9C  0012               	return	
  6169  000B9E                     l5752:
  6170  000B9E  285D               	incf	_novaTecla^0,w,c
  6171  000BA0  B4D8               	btfsc	status,2,c
  6172  000BA2  0012               	return	
  6173  000BA4  505B               	movf	_ultimaTecla^0,w,c
  6174  000BA6  185D               	xorwf	_novaTecla^0,w,c
  6175  000BA8  B4D8               	btfsc	status,2,c
  6176  000BAA  0012               	return	
  6177                           
  6178                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  6179  000BAC  505E               	movf	_lletraASCII^0,w,c
  6180  000BAE  EC74  F00E         	call	_MNovaLletra
  6181                           
  6182                           ;Ssms.c: 48:     if(novaTecla != 0){
  6183  000BB2  505D               	movf	_novaTecla^0,w,c
  6184  000BB4  B4D8               	btfsc	status,2,c
  6185  000BB6  D006               	goto	l5764
  6186                           
  6187                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  6188  000BB8  505D               	movf	_novaTecla^0,w,c
  6189  000BBA  0F42               	addlw	low (_lletraInici+254)
  6190  000BBC  6ED9               	movwf	fsr2l,c
  6191  000BBE  6ADA               	clrf	fsr2h,c
  6192  000BC0  50DF               	movf	indf2,w,c
  6193  000BC2  D001               	goto	L10
  6194  000BC4                     l5764:
  6195                           
  6196                           ;Ssms.c: 52:       lletraASCII = '0';
  6197  000BC4  0E30               	movlw	48
  6198  000BC6                     L10:
  6199  000BC6  6E5E               	movwf	_lletraASCII^0,c
  6200                           
  6201                           ;Ssms.c: 53:       zeroTecla=0;
  6202  000BC8  0E00               	movlw	0
  6203  000BCA  6E30               	movwf	_zeroTecla^0,c
  6204                           
  6205                           ;Ssms.c: 55:     ultimaTecla = novaTecla;
  6206  000BCC  C05D  F05B         	movff	_novaTecla,_ultimaTecla
  6207                           
  6208                           ;Ssms.c: 56:     sumaPulsacions = 0;
  6209  000BD0  0E00               	movlw	0
  6210  000BD2  6E31               	movwf	_sumaPulsacions^0,c
  6211                           
  6212                           ;Ssms.c: 57:     novaTecla = -1;
  6213  000BD4  685D               	setf	_novaTecla^0,c
  6214                           
  6215                           ;Ssms.c: 58:     state = 0;
  6216  000BD6  0E00               	movlw	0
  6217  000BD8  6E2F               	movwf	SMotor@state^0,c
  6218  000BDA  0012               	return	
  6219  000BDC                     l5770:
  6220                           
  6221                           ;Ssms.c: 62:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  6222  000BDC  0E07               	movlw	7
  6223  000BDE  185B               	xorwf	_ultimaTecla^0,w,c
  6224  000BE0  B4D8               	btfsc	status,2,c
  6225  000BE2  D00A               	goto	l5778
  6226  000BE4  0E09               	movlw	9
  6227  000BE6  185B               	xorwf	_ultimaTecla^0,w,c
  6228  000BE8  B4D8               	btfsc	status,2,c
  6229  000BEA  D006               	goto	l5778
  6230  000BEC  505B               	movf	_ultimaTecla^0,w,c
  6231  000BEE  B4D8               	btfsc	status,2,c
  6232  000BF0  D003               	goto	l5778
  6233                           
  6234                           ;Ssms.c: 63:     state = 5;
  6235  000BF2  0E05               	movlw	5
  6236  000BF4  6E2F               	movwf	SMotor@state^0,c
  6237                           
  6238                           ;Ssms.c: 64:    }
  6239  000BF6  0012               	return	
  6240  000BF8                     l5778:
  6241  000BF8  0E07               	movlw	7
  6242  000BFA  185B               	xorwf	_ultimaTecla^0,w,c
  6243  000BFC  B4D8               	btfsc	status,2,c
  6244  000BFE  D004               	goto	u5590
  6245  000C00  0E09               	movlw	9
  6246  000C02  185B               	xorwf	_ultimaTecla^0,w,c
  6247  000C04  A4D8               	btfss	status,2,c
  6248  000C06  D003               	goto	l5784
  6249  000C08                     u5590:
  6250                           
  6251                           ;Ssms.c: 66:     state = 6;
  6252  000C08  0E06               	movlw	6
  6253  000C0A  6E2F               	movwf	SMotor@state^0,c
  6254                           
  6255                           ;Ssms.c: 67:    }
  6256  000C0C  0012               	return	
  6257  000C0E                     l5784:
  6258  000C0E  505B               	movf	_ultimaTecla^0,w,c
  6259  000C10  A4D8               	btfss	status,2,c
  6260  000C12  0012               	return	
  6261                           
  6262                           ;Ssms.c: 69:     zeroTecla++;
  6263  000C14  2A30               	incf	_zeroTecla^0,f,c
  6264                           
  6265                           ;Ssms.c: 70:     if(zeroTecla == 2) zeroTecla = 0;
  6266  000C16  0E02               	movlw	2
  6267  000C18  1830               	xorwf	_zeroTecla^0,w,c
  6268  000C1A  A4D8               	btfss	status,2,c
  6269  000C1C  D002               	goto	l5792
  6270  000C1E  0E00               	movlw	0
  6271  000C20  6E30               	movwf	_zeroTecla^0,c
  6272  000C22                     l5792:
  6273                           
  6274                           ;Ssms.c: 71:     lletraASCII = arrayZero[zeroTecla];
  6275  000C22  5030               	movf	_zeroTecla^0,w,c
  6276  000C24  0F4D               	addlw	low _arrayZero
  6277  000C26  6ED9               	movwf	fsr2l,c
  6278  000C28  6ADA               	clrf	fsr2h,c
  6279  000C2A  50DF               	movf	indf2,w,c
  6280  000C2C  D04B               	goto	L5
  6281  000C2E                     l5796:
  6282                           
  6283                           ;Ssms.c: 76:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  6284  000C2E  505D               	movf	_novaTecla^0,w,c
  6285  000C30  0A80               	xorlw	128
  6286  000C32  0F7E               	addlw	-130
  6287  000C34  B0D8               	btfsc	status,0,c
  6288  000C36  D003               	goto	u5630
  6289  000C38  505D               	movf	_novaTecla^0,w,c
  6290  000C3A  A4D8               	btfss	status,2,c
  6291  000C3C  D008               	goto	l5804
  6292  000C3E                     u5630:
  6293  000C3E  505D               	movf	_novaTecla^0,w,c
  6294  000C40  0A80               	xorlw	128
  6295  000C42  0F76               	addlw	-138
  6296  000C44  B0D8               	btfsc	status,0,c
  6297  000C46  D003               	goto	l5804
  6298                           
  6299                           ;Ssms.c: 77:     state = 1;
  6300  000C48  0E01               	movlw	1
  6301  000C4A  6E2F               	movwf	SMotor@state^0,c
  6302                           
  6303                           ;Ssms.c: 78:    }
  6304  000C4C  0012               	return	
  6305  000C4E                     l5804:
  6306  000C4E  505D               	movf	_novaTecla^0,w,c
  6307  000C50  B4D8               	btfsc	status,2,c
  6308  000C52  D00E               	goto	l5816
  6309  000C54  505D               	movf	_novaTecla^0,w,c
  6310  000C56  0A80               	xorlw	128
  6311  000C58  0F7E               	addlw	-130
  6312  000C5A  B0D8               	btfsc	status,0,c
  6313  000C5C  D009               	goto	l5816
  6314  000C5E  285E               	incf	_lletraASCII^0,w,c
  6315  000C60  A4D8               	btfss	status,2,c
  6316  000C62  D006               	goto	l5816
  6317                           
  6318                           ;Ssms.c: 80:     MNovaLletra(novaTecla+48);
  6319  000C64  505D               	movf	_novaTecla^0,w,c
  6320  000C66  0F30               	addlw	48
  6321  000C68  EC74  F00E         	call	_MNovaLletra
  6322  000C6C                     l5812:
  6323                           
  6324                           ;Ssms.c: 81:     novaTecla = -1;
  6325  000C6C  685D               	setf	_novaTecla^0,c
  6326  000C6E  D77F               	goto	l5740
  6327  000C70                     l5816:
  6328  000C70  505D               	movf	_novaTecla^0,w,c
  6329  000C72  B4D8               	btfsc	status,2,c
  6330  000C74  0012               	return	
  6331  000C76  505D               	movf	_novaTecla^0,w,c
  6332  000C78  0A80               	xorlw	128
  6333  000C7A  0F7E               	addlw	-130
  6334  000C7C  B0D8               	btfsc	status,0,c
  6335  000C7E  0012               	return	
  6336  000C80  285E               	incf	_lletraASCII^0,w,c
  6337  000C82  B4D8               	btfsc	status,2,c
  6338  000C84  0012               	return	
  6339                           
  6340                           ;Ssms.c: 85:     MNovaLletra(lletraASCII);
  6341  000C86  505E               	movf	_lletraASCII^0,w,c
  6342  000C88  EC74  F00E         	call	_MNovaLletra
  6343                           
  6344                           ;Ssms.c: 86:     lletraASCII = -1;
  6345  000C8C  685E               	setf	_lletraASCII^0,c
  6346                           
  6347                           ;Ssms.c: 87:     state = 4;
  6348  000C8E  0E04               	movlw	4
  6349  000C90  6E2F               	movwf	SMotor@state^0,c
  6350  000C92  0012               	return	
  6351  000C94                     l5828:
  6352                           
  6353                           ;Ssms.c: 91:    MNovaLletra(novaTecla+48);
  6354  000C94  505D               	movf	_novaTecla^0,w,c
  6355  000C96  0F30               	addlw	48
  6356  000C98  EC74  F00E         	call	_MNovaLletra
  6357  000C9C  D7E7               	goto	l5812
  6358  000C9E                     l5834:
  6359                           
  6360                           ;Ssms.c: 96:    if (sumaPulsacions == 4) {
  6361  000C9E  0E04               	movlw	4
  6362  000CA0  1831               	xorwf	_sumaPulsacions^0,w,c
  6363  000CA2  A4D8               	btfss	status,2,c
  6364  000CA4  D009               	goto	l5842
  6365  000CA6                     u5710:
  6366                           
  6367                           ;Ssms.c: 97:     lletraASCII = lletraInici[ultimaTecla-2];
  6368  000CA6  505B               	movf	_ultimaTecla^0,w,c
  6369  000CA8  0F42               	addlw	low (_lletraInici+254)
  6370  000CAA  6ED9               	movwf	fsr2l,c
  6371  000CAC  6ADA               	clrf	fsr2h,c
  6372  000CAE  50DF               	movf	indf2,w,c
  6373  000CB0  6E5E               	movwf	_lletraASCII^0,c
  6374                           
  6375                           ;Ssms.c: 98:     sumaPulsacions = 0;
  6376  000CB2  0E00               	movlw	0
  6377  000CB4  6E31               	movwf	_sumaPulsacions^0,c
  6378  000CB6  D75B               	goto	l5740
  6379  000CB8                     l5842:
  6380  000CB8  0E03               	movlw	3
  6381  000CBA  1831               	xorwf	_sumaPulsacions^0,w,c
  6382  000CBC  A4D8               	btfss	status,2,c
  6383  000CBE  D004               	goto	l5848
  6384  000CC0                     u5720:
  6385                           
  6386                           ;Ssms.c: 102:     lletraASCII = ultimaTecla+48;
  6387  000CC0  505B               	movf	_ultimaTecla^0,w,c
  6388  000CC2  0F30               	addlw	48
  6389  000CC4                     L5:
  6390  000CC4  6E5E               	movwf	_lletraASCII^0,c
  6391  000CC6  D753               	goto	l5740
  6392  000CC8                     l5848:
  6393  000CC8  0E03               	movlw	3
  6394  000CCA  6031               	cpfslt	_sumaPulsacions^0,c
  6395  000CCC  0012               	return	
  6396  000CCE  D74F               	goto	l5740
  6397  000CD0                     l5852:
  6398                           
  6399                           ;Ssms.c: 110:    if (sumaPulsacions == 4) {
  6400  000CD0  0E04               	movlw	4
  6401  000CD2  1831               	xorwf	_sumaPulsacions^0,w,c
  6402  000CD4  B4D8               	btfsc	status,2,c
  6403  000CD6  D7F4               	goto	u5720
  6404  000CD8  0E05               	movlw	5
  6405  000CDA  1831               	xorwf	_sumaPulsacions^0,w,c
  6406  000CDC  B4D8               	btfsc	status,2,c
  6407  000CDE  D7E3               	goto	u5710
  6408  000CE0  0E04               	movlw	4
  6409  000CE2  D7F3               	goto	L6
  6410  000CE4                     l5872:
  6411  000CE4  502F               	movf	SMotor@state^0,w,c
  6412  000CE6  6E71               	movwf	??_SMotor^0,c
  6413  000CE8  6A72               	clrf	(??_SMotor+1)^0,c
  6414                           
  6415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6416                           ; Switch size 1, requested type "simple"
  6417                           ; Number of cases is 1, Range of values is 0 to 0
  6418                           ; switch strategies available:
  6419                           ; Name         Instructions Cycles
  6420                           ; simple_byte            4     3 (average)
  6421                           ;	Chosen strategy is simple_byte
  6422  000CEA  5072               	movf	(??_SMotor+1)^0,w,c
  6423  000CEC  0A00               	xorlw	0	; case 0
  6424  000CEE  A4D8               	btfss	status,2,c
  6425  000CF0  0012               	return	
  6426                           
  6427                           ; Switch size 1, requested type "simple"
  6428                           ; Number of cases is 7, Range of values is 0 to 6
  6429                           ; switch strategies available:
  6430                           ; Name         Instructions Cycles
  6431                           ; simple_byte           22    12 (average)
  6432                           ;	Chosen strategy is simple_byte
  6433  000CF2  5071               	movf	??_SMotor^0,w,c
  6434  000CF4  0A00               	xorlw	0	; case 0
  6435  000CF6  B4D8               	btfsc	status,2,c
  6436  000CF8  D716               	goto	l5716
  6437  000CFA  0A01               	xorlw	1	; case 1
  6438  000CFC  B4D8               	btfsc	status,2,c
  6439  000CFE  D73A               	goto	l5742
  6440  000D00  0A03               	xorlw	3	; case 2
  6441  000D02  B4D8               	btfsc	status,2,c
  6442  000D04  D76B               	goto	l5770
  6443  000D06  0A01               	xorlw	1	; case 3
  6444  000D08  B4D8               	btfsc	status,2,c
  6445  000D0A  D791               	goto	l5796
  6446  000D0C  0A07               	xorlw	7	; case 4
  6447  000D0E  B4D8               	btfsc	status,2,c
  6448  000D10  D7C1               	goto	l5828
  6449  000D12  0A01               	xorlw	1	; case 5
  6450  000D14  B4D8               	btfsc	status,2,c
  6451  000D16  D7C3               	goto	l5834
  6452  000D18  0A03               	xorlw	3	; case 6
  6453  000D1A  A4D8               	btfss	status,2,c
  6454  000D1C  0012               	return	
  6455  000D1E  D7D8               	goto	l5852
  6456  000D20                     __end_of_SMotor:
  6457                           	callstack 0
  6458                           
  6459 ;; *************** function _MNovaLletra *****************
  6460 ;; Defined at:
  6461 ;;		line 32 in file "Menu.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;  lletra          1    wreg     unsigned char 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;  lletra          1    5[COMRAM] unsigned char 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		wreg
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1
  6475 ;;      Params:         0       0       0
  6476 ;;      Locals:         1       0       0
  6477 ;;      Temps:          0       0       0
  6478 ;;      Totals:         1       0       0
  6479 ;;Total ram usage:        1 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 2
  6482 ;; This function calls:
  6483 ;;		Nothing
  6484 ;; This function is called by:
  6485 ;;		_SMotor
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text52
  6490  001CE8                     __ptext52:
  6491                           	callstack 0
  6492  001CE8                     _MNovaLletra:
  6493                           	callstack 27
  6494                           
  6495                           ;incstack = 0
  6496                           ;MNovaLletra@lletra stored from wreg
  6497  001CE8  6E6A               	movwf	MNovaLletra@lletra^0,c
  6498                           
  6499                           ;Menu.c: 33:     novaLletra = lletra;
  6500  001CEA  C06A  F059         	movff	MNovaLletra@lletra,_novaLletra
  6501  001CEE  0012               	return		;funcret
  6502  001CF0                     __end_of_MNovaLletra:
  6503                           	callstack 0
  6504                           
  6505 ;; *************** function _Minit *****************
  6506 ;; Defined at:
  6507 ;;		line 25 in file "Menu.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1
  6521 ;;      Params:         0       0       0
  6522 ;;      Locals:         0       0       0
  6523 ;;      Temps:          0       0       0
  6524 ;;      Totals:         0       0       0
  6525 ;;Total ram usage:        0 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; Hardware stack levels required when called: 3
  6528 ;; This function calls:
  6529 ;;		_TiGetTimer
  6530 ;; This function is called by:
  6531 ;;		_main
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text53
  6536  001CF0                     __ptext53:
  6537                           	callstack 0
  6538  001CF0                     _Minit:
  6539                           	callstack 27
  6540                           
  6541                           ;Menu.c: 26:     timerMenu = TiGetTimer();
  6542                           
  6543                           ;incstack = 0
  6544  001CF0  ECAC  F00C         	call	_TiGetTimer	;wreg free
  6545  001CF4  6E28               	movwf	_timerMenu^0,c
  6546  001CF6  0012               	return		;funcret
  6547  001CF8                     __end_of_Minit:
  6548                           	callstack 0
  6549                           
  6550 ;; *************** function _LcLCD *****************
  6551 ;; Defined at:
  6552 ;;		line 246 in file "LcTLCD.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;		None
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;		None
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      void 
  6559 ;; Registers used:
  6560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/1
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1
  6566 ;;      Params:         0       0       0
  6567 ;;      Locals:         0       0       0
  6568 ;;      Temps:          0       0       0
  6569 ;;      Totals:         0       0       0
  6570 ;;Total ram usage:        0 bytes
  6571 ;; Hardware stack levels used: 1
  6572 ;; Hardware stack levels required when called: 6
  6573 ;; This function calls:
  6574 ;;		_LcPutChar
  6575 ;; This function is called by:
  6576 ;;		_main
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           	psect	text54
  6581  00178A                     __ptext54:
  6582                           	callstack 0
  6583  00178A                     _LcLCD:
  6584                           	callstack 24
  6585                           
  6586                           ;LcTLCD.c: 247:     if(nou_s == 1){
  6587                           
  6588                           ;incstack = 0
  6589  00178A  AA79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6590  00178C  0012               	return	
  6591                           
  6592                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  6593  00178E  C005  FFF6         	movff	_s_ptr,tblptrl
  6594  001792  C006  FFF7         	movff	_s_ptr+1,tblptrh
  6595  001796  6AF8               	clrf	tblptru,c
  6596  001798  0E01               	movlw	(high __ramtop+-1)
  6597  00179A  64F7               	cpfsgt	tblptrh,c
  6598  00179C  D003               	bra	u5417
  6599  00179E  0008               	tblrd		*
  6600  0017A0  50F5               	movf	tablat,w,c
  6601  0017A2  D005               	bra	u5410
  6602  0017A4                     u5417:
  6603  0017A4  CFF6 FFE1          	movff	tblptrl,fsr1l
  6604  0017A8  CFF7 FFE2          	movff	tblptrh,fsr1h
  6605  0017AC  50E7               	movf	indf1,w,c
  6606  0017AE                     u5410:
  6607  0017AE  EC21  F00C         	call	_LcPutChar
  6608                           
  6609                           ;LcTLCD.c: 249:         s_ptr++;
  6610  0017B2  4A05               	infsnz	_s_ptr^0,f,c
  6611  0017B4  2A06               	incf	(_s_ptr+1)^0,f,c
  6612                           
  6613                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  6614  0017B6  C005  FFF6         	movff	_s_ptr,tblptrl
  6615  0017BA  C006  FFF7         	movff	_s_ptr+1,tblptrh
  6616  0017BE  6AF8               	clrf	tblptru,c
  6617  0017C0  0E01               	movlw	(high __ramtop+-1)
  6618  0017C2  64F7               	cpfsgt	tblptrh,c
  6619  0017C4  D003               	bra	u5427
  6620  0017C6  0008               	tblrd		*
  6621  0017C8  50F5               	movf	tablat,w,c
  6622  0017CA  D005               	bra	u5420
  6623  0017CC                     u5427:
  6624  0017CC  CFF6 FFE1          	movff	tblptrl,fsr1l
  6625  0017D0  CFF7 FFE2          	movff	tblptrh,fsr1h
  6626  0017D4  50E7               	movf	indf1,w,c
  6627  0017D6                     u5420:
  6628  0017D6  0900               	iorlw	0
  6629  0017D8  A4D8               	btfss	status,2,c
  6630  0017DA  0012               	return	
  6631                           
  6632                           ;LcTLCD.c: 251:             nou_s = 0;
  6633  0017DC  9A79               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6634                           
  6635                           ;LcTLCD.c: 252:             s_ptr=0;
  6636  0017DE  0E00               	movlw	0
  6637  0017E0  6E05               	movwf	_s_ptr^0,c
  6638  0017E2  0E00               	movlw	0
  6639  0017E4  6E06               	movwf	(_s_ptr+1)^0,c
  6640  0017E6  0012               	return		;funcret
  6641  0017E8                     __end_of_LcLCD:
  6642                           	callstack 0
  6643                           
  6644 ;; *************** function _LcInit *****************
  6645 ;; Defined at:
  6646 ;;		line 41 in file "LcTLCD.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  rows            1    wreg     unsigned char 
  6649 ;;  columns         1   16[COMRAM] unsigned char 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  rows            1    0[BANK0 ] unsigned char 
  6652 ;;  i               2    1[BANK0 ] int 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1    wreg      void 
  6655 ;; Registers used:
  6656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1
  6662 ;;      Params:         1       0       0
  6663 ;;      Locals:         0       3       0
  6664 ;;      Temps:          0       0       0
  6665 ;;      Totals:         1       3       0
  6666 ;;Total ram usage:        4 bytes
  6667 ;; Hardware stack levels used: 1
  6668 ;; Hardware stack levels required when called: 4
  6669 ;; This function calls:
  6670 ;;		_CantaIR
  6671 ;;		_EscriuPrimeraOrdre
  6672 ;;		_Espera
  6673 ;;		_TiGetTimer
  6674 ;;		_WaitForBusy
  6675 ;; This function is called by:
  6676 ;;		_main
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text55
  6681  0011D8                     __ptext55:
  6682                           	callstack 0
  6683  0011D8                     _LcInit:
  6684                           	callstack 26
  6685                           
  6686                           ;incstack = 0
  6687                           ;LcInit@rows stored from wreg
  6688  0011D8  0100               	movlb	0	; () banked
  6689  0011DA  6FC0               	movwf	LcInit@rows& (0+255),b
  6690                           
  6691                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  6692  0011DC  ECAC  F00C         	call	_TiGetTimer	;wreg free
  6693  0011E0  6E32               	movwf	_Timer^0,c
  6694                           
  6695                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  6696  0011E2  C0C0  F036         	movff	LcInit@rows,_Rows
  6697  0011E6  C075  F035         	movff	LcInit@columns,_Columns
  6698                           
  6699                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  6700  0011EA  0E00               	movlw	0
  6701  0011EC  6E33               	movwf	_ColumnAct^0,c
  6702  0011EE  C033  F034         	movff	_ColumnAct,_RowAct
  6703                           
  6704                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  6705  0011F2  9894               	bcf	148,4,c	;volatile
  6706  0011F4  9E95               	bcf	149,7,c	;volatile
  6707  0011F6  9A94               	bcf	148,5,c	;volatile
  6708                           
  6709                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  6710  0011F8  0E00               	movlw	0
  6711  0011FA  0100               	movlb	0	; () banked
  6712  0011FC  6FC2               	movwf	(LcInit@i+1)& (0+255),b
  6713  0011FE  0E00               	movlw	0
  6714  001200  6FC1               	movwf	LcInit@i& (0+255),b
  6715  001202                     l5662:
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  6719  001202  0E00               	movlw	0
  6720  001204  6E72               	movwf	(Espera@ms+1)^0,c
  6721  001206  0E64               	movlw	100
  6722  001208  6E71               	movwf	Espera@ms^0,c
  6723  00120A  5032               	movf	_Timer^0,w,c
  6724  00120C  EC99  F00D         	call	_Espera
  6725                           
  6726                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  6727  001210  0E03               	movlw	3
  6728  001212  ECAD  F00A         	call	_EscriuPrimeraOrdre
  6729                           
  6730                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  6731  001216  0E00               	movlw	0
  6732  001218  6E72               	movwf	(Espera@ms+1)^0,c
  6733  00121A  0E05               	movlw	5
  6734  00121C  6E71               	movwf	Espera@ms^0,c
  6735  00121E  5032               	movf	_Timer^0,w,c
  6736  001220  EC99  F00D         	call	_Espera
  6737                           
  6738                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  6739  001224  0E03               	movlw	3
  6740  001226  ECAD  F00A         	call	_EscriuPrimeraOrdre
  6741                           
  6742                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  6743  00122A  0E00               	movlw	0
  6744  00122C  6E72               	movwf	(Espera@ms+1)^0,c
  6745  00122E  0E01               	movlw	1
  6746  001230  6E71               	movwf	Espera@ms^0,c
  6747  001232  5032               	movf	_Timer^0,w,c
  6748  001234  EC99  F00D         	call	_Espera
  6749                           
  6750                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  6751  001238  0E03               	movlw	3
  6752  00123A  ECAD  F00A         	call	_EscriuPrimeraOrdre
  6753                           
  6754                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  6755  00123E  0E00               	movlw	0
  6756  001240  6E72               	movwf	(Espera@ms+1)^0,c
  6757  001242  0E01               	movlw	1
  6758  001244  6E71               	movwf	Espera@ms^0,c
  6759  001246  5032               	movf	_Timer^0,w,c
  6760  001248  EC99  F00D         	call	_Espera
  6761                           
  6762                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  6763  00124C  0E02               	movlw	2
  6764  00124E  ECAD  F00A         	call	_EscriuPrimeraOrdre
  6765                           
  6766                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  6767  001252  0E00               	movlw	0
  6768  001254  6E72               	movwf	(Espera@ms+1)^0,c
  6769  001256  0E04               	movlw	4
  6770  001258  6E71               	movwf	Espera@ms^0,c
  6771  00125A  5032               	movf	_Timer^0,w,c
  6772  00125C  EC99  F00D         	call	_Espera
  6773                           
  6774                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  6775  001260  0E28               	movlw	40
  6776  001262  EC19  F00D         	call	_CantaIR
  6777                           
  6778                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  6779  001266  EC6F  F00C         	call	_WaitForBusy	;wreg free
  6780  00126A  0E08               	movlw	8
  6781  00126C  EC19  F00D         	call	_CantaIR
  6782                           
  6783                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  6784  001270  EC6F  F00C         	call	_WaitForBusy	;wreg free
  6785  001274  0E01               	movlw	1
  6786  001276  EC19  F00D         	call	_CantaIR
  6787                           
  6788                           ;LcTLCD.c: 71:   Espera(Timer,3);
  6789  00127A  0E00               	movlw	0
  6790  00127C  6E72               	movwf	(Espera@ms+1)^0,c
  6791  00127E  0E03               	movlw	3
  6792  001280  6E71               	movwf	Espera@ms^0,c
  6793  001282  5032               	movf	_Timer^0,w,c
  6794  001284  EC99  F00D         	call	_Espera
  6795                           
  6796                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  6797  001288  EC6F  F00C         	call	_WaitForBusy	;wreg free
  6798  00128C  0E06               	movlw	6
  6799  00128E  EC19  F00D         	call	_CantaIR
  6800                           
  6801                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  6802  001292  EC6F  F00C         	call	_WaitForBusy	;wreg free
  6803  001296  0E0F               	movlw	15
  6804  001298  EC19  F00D         	call	_CantaIR
  6805                           
  6806                           ;LcTLCD.c: 74:  }
  6807  00129C  0100               	movlb	0	; () banked
  6808  00129E  4BC1               	infsnz	LcInit@i& (0+255),f,b
  6809  0012A0  2BC2               	incf	(LcInit@i+1)& (0+255),f,b
  6810                           
  6811                           ; BSR set to: 0
  6812  0012A2  BFC2               	btfsc	(LcInit@i+1)& (0+255),7,b
  6813  0012A4  D7AE               	goto	l5662
  6814  0012A6  51C2               	movf	(LcInit@i+1)& (0+255),w,b
  6815  0012A8  E104               	bnz	u5390
  6816  0012AA  0E02               	movlw	2
  6817  0012AC  5DC1               	subwf	LcInit@i& (0+255),w,b
  6818  0012AE  A0D8               	btfss	status,0,c
  6819  0012B0  D7A8               	goto	l5662
  6820  0012B2                     u5390:
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;LcTLCD.c: 80:     WaitForBusy();
  6824  0012B2  EC6F  F00C         	call	_WaitForBusy	;wreg free
  6825                           
  6826                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  6827  0012B6  0E0C               	movlw	12
  6828  0012B8  EC19  F00D         	call	_CantaIR
  6829  0012BC  0012               	return		;funcret
  6830  0012BE                     __end_of_LcInit:
  6831                           	callstack 0
  6832                           
  6833 ;; *************** function _EscriuPrimeraOrdre *****************
  6834 ;; Defined at:
  6835 ;;		line 230 in file "LcTLCD.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  ordre           1    wreg     unsigned char 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;  ordre           1    6[COMRAM] unsigned char 
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  1    wreg      void 
  6842 ;; Registers used:
  6843 ;;		wreg, status,2, status,0
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1
  6849 ;;      Params:         0       0       0
  6850 ;;      Locals:         1       0       0
  6851 ;;      Temps:          1       0       0
  6852 ;;      Totals:         2       0       0
  6853 ;;Total ram usage:        2 bytes
  6854 ;; Hardware stack levels used: 1
  6855 ;; Hardware stack levels required when called: 2
  6856 ;; This function calls:
  6857 ;;		Nothing
  6858 ;; This function is called by:
  6859 ;;		_LcInit
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text56
  6864  00155A                     __ptext56:
  6865                           	callstack 0
  6866  00155A                     _EscriuPrimeraOrdre:
  6867                           	callstack 27
  6868                           
  6869                           ;incstack = 0
  6870                           ;EscriuPrimeraOrdre@ordre stored from wreg
  6871  00155A  6E6B               	movwf	EscriuPrimeraOrdre@ordre^0,c
  6872                           
  6873                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  6874  00155C  9694               	bcf	148,3,c	;volatile
  6875  00155E  9494               	bcf	148,2,c	;volatile
  6876  001560  9294               	bcf	148,1,c	;volatile
  6877  001562  9094               	bcf	148,0,c	;volatile
  6878  001564  9A8B               	bcf	139,5,c	;volatile
  6879  001566  9E8C               	bcf	140,7,c	;volatile
  6880                           
  6881                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  6882  001568  888B               	bsf	139,4,c	;volatile
  6883  00156A  888B               	bsf	139,4,c	;volatile
  6884                           
  6885                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  6886  00156C  A66B               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  6887  00156E  D003               	goto	u5260
  6888  001570  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6889  001572  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  6890  001574  D001               	goto	u5278
  6891  001576                     u5260:
  6892  001576  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6893  001578                     u5278:
  6894  001578  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6895  00157A  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6896  00157C  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6897  00157E  508B               	movf	139,w,c	;volatile
  6898  001580  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6899  001582  0BF7               	andlw	-9
  6900  001584  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6901  001586  6E8B               	movwf	139,c	;volatile
  6902                           
  6903                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  6904  001588  A46B               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  6905  00158A  D003               	goto	u5280
  6906  00158C  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6907  00158E  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  6908  001590  D001               	goto	u5298
  6909  001592                     u5280:
  6910  001592  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6911  001594                     u5298:
  6912  001594  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6913  001596  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6914  001598  508B               	movf	139,w,c	;volatile
  6915  00159A  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6916  00159C  0BFB               	andlw	-5
  6917  00159E  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6918  0015A0  6E8B               	movwf	139,c	;volatile
  6919                           
  6920                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  6921  0015A2  A26B               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  6922  0015A4  D003               	goto	u5300
  6923  0015A6  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6924  0015A8  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  6925  0015AA  D001               	goto	u5318
  6926  0015AC                     u5300:
  6927  0015AC  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6928  0015AE                     u5318:
  6929  0015AE  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6930  0015B0  508B               	movf	139,w,c	;volatile
  6931  0015B2  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6932  0015B4  0BFD               	andlw	-3
  6933  0015B6  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6934  0015B8  6E8B               	movwf	139,c	;volatile
  6935                           
  6936                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  6937  0015BA  A06B               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  6938  0015BC  D003               	goto	u5320
  6939  0015BE  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6940  0015C0  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  6941  0015C2  D001               	goto	u5338
  6942  0015C4                     u5320:
  6943  0015C4  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6944  0015C6                     u5338:
  6945  0015C6  508B               	movf	139,w,c	;volatile
  6946  0015C8  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6947  0015CA  0BFE               	andlw	-2
  6948  0015CC  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6949  0015CE  6E8B               	movwf	139,c	;volatile
  6950                           
  6951                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  6952  0015D0  988B               	bcf	139,4,c	;volatile
  6953  0015D2  0012               	return		;funcret
  6954  0015D4                     __end_of_EscriuPrimeraOrdre:
  6955                           	callstack 0
  6956                           
  6957 ;; *************** function _JoystickMotor *****************
  6958 ;; Defined at:
  6959 ;;		line 18 in file "Joystick.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;		None
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg, status,2, status,0, cstack
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/1
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMRAM   BANK0   BANK1
  6973 ;;      Params:         0       0       0
  6974 ;;      Locals:         0       0       0
  6975 ;;      Temps:          2       0       0
  6976 ;;      Totals:         2       0       0
  6977 ;;Total ram usage:        2 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; Hardware stack levels required when called: 3
  6980 ;; This function calls:
  6981 ;;		_MNouJoystick
  6982 ;; This function is called by:
  6983 ;;		_main
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text57
  6988  0010EC                     __ptext57:
  6989                           	callstack 0
  6990  0010EC                     _JoystickMotor:
  6991                           	callstack 27
  6992                           
  6993                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  6994                           
  6995                           ;incstack = 0
  6996  0010EC  D05A               	goto	l2716
  6997  0010EE                     l889:
  6998                           
  6999                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7000  0010EE  B2C2               	btfsc	194,1,c	;volatile
  7001  0010F0  D00B               	goto	l890
  7002  0010F2  0EC8               	movlw	200
  7003  0010F4  60C4               	cpfslt	196,c	;volatile
  7004  0010F6  D008               	goto	l890
  7005  0010F8  0E32               	movlw	50
  7006  0010FA  64C4               	cpfsgt	196,c	;volatile
  7007  0010FC  D005               	goto	l890
  7008                           
  7009                           ;Joystick.c: 23:     ADCON0 = 0x07;
  7010  0010FE  0E07               	movlw	7
  7011  001100  6EC2               	movwf	194,c	;volatile
  7012                           
  7013                           ;Joystick.c: 24:                 cap1 = 1;
  7014  001102  8878               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7015  001104                     l2646:
  7016                           
  7017                           ;Joystick.c: 25:     state++;
  7018  001104  2A0E               	incf	JoystickMotor@state^0,f,c
  7019                           
  7020                           ;Joystick.c: 26:    }
  7021  001106  D05B               	goto	l897
  7022  001108                     l890:
  7023  001108  B2C2               	btfsc	194,1,c	;volatile
  7024  00110A  D010               	goto	l892
  7025  00110C  0EC7               	movlw	199
  7026  00110E  64C4               	cpfsgt	196,c	;volatile
  7027  001110  D00D               	goto	l892
  7028                           
  7029                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  7030  001112  0E02               	movlw	2
  7031  001114  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7032  001116  B4D8               	btfsc	status,2,c
  7033  001118  D003               	goto	l2654
  7034  00111A  0E02               	movlw	2
  7035  00111C  EC7C  F00E         	call	_MNouJoystick
  7036  001120                     l2654:
  7037                           
  7038                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  7039  001120  0E02               	movlw	2
  7040  001122  6E0F               	movwf	_ultimaTeclaAD^0,c
  7041                           
  7042                           ;Joystick.c: 30:     ADCON0 = 0x07;
  7043  001124  0E07               	movlw	7
  7044  001126  6EC2               	movwf	194,c	;volatile
  7045                           
  7046                           ;Joystick.c: 31:                 cap1 = 0;
  7047  001128  9878               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7048  00112A  D7EC               	goto	l2646
  7049  00112C                     l892:
  7050  00112C  B2C2               	btfsc	194,1,c	;volatile
  7051  00112E  D047               	goto	l897
  7052  001130  0E33               	movlw	51
  7053  001132  60C4               	cpfslt	196,c	;volatile
  7054  001134  D044               	goto	l897
  7055                           
  7056                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  7057  001136  0E08               	movlw	8
  7058  001138  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7059  00113A  B4D8               	btfsc	status,2,c
  7060  00113C  D003               	goto	l2668
  7061  00113E  0E08               	movlw	8
  7062  001140  EC7C  F00E         	call	_MNouJoystick
  7063  001144                     l2668:
  7064                           
  7065                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  7066  001144  0E08               	movlw	8
  7067  001146  D7ED               	goto	L7
  7068  001148                     l898:
  7069                           
  7070                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7071  001148  B2C2               	btfsc	194,1,c	;volatile
  7072  00114A  D00B               	goto	l899
  7073  00114C  0EC8               	movlw	200
  7074  00114E  60C4               	cpfslt	196,c	;volatile
  7075  001150  D008               	goto	l899
  7076  001152  0E32               	movlw	50
  7077  001154  64C4               	cpfsgt	196,c	;volatile
  7078  001156  D005               	goto	l899
  7079                           
  7080                           ;Joystick.c: 44:     ADCON0 = 0x03;
  7081  001158  0E03               	movlw	3
  7082  00115A  6EC2               	movwf	194,c	;volatile
  7083                           
  7084                           ;Joystick.c: 45:                 cap2 = 1;
  7085  00115C  8678               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7086  00115E                     l2684:
  7087                           
  7088                           ;Joystick.c: 46:     state--;
  7089  00115E  060E               	decf	JoystickMotor@state^0,f,c
  7090                           
  7091                           ;Joystick.c: 47:    }
  7092  001160  D02E               	goto	l897
  7093  001162                     l899:
  7094  001162  B2C2               	btfsc	194,1,c	;volatile
  7095  001164  D010               	goto	l901
  7096  001166  0EC7               	movlw	199
  7097  001168  64C4               	cpfsgt	196,c	;volatile
  7098  00116A  D00D               	goto	l901
  7099                           
  7100                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  7101  00116C  0E06               	movlw	6
  7102  00116E  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7103  001170  B4D8               	btfsc	status,2,c
  7104  001172  D003               	goto	l2692
  7105  001174  0E06               	movlw	6
  7106  001176  EC7C  F00E         	call	_MNouJoystick
  7107  00117A                     l2692:
  7108                           
  7109                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  7110  00117A  0E06               	movlw	6
  7111  00117C  6E0F               	movwf	_ultimaTeclaAD^0,c
  7112                           
  7113                           ;Joystick.c: 51:     ADCON0 = 0x03;
  7114  00117E  0E03               	movlw	3
  7115  001180  6EC2               	movwf	194,c	;volatile
  7116                           
  7117                           ;Joystick.c: 52:                 cap2 = 0;
  7118  001182  9678               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7119  001184  D7EC               	goto	l2684
  7120  001186                     l901:
  7121  001186  B2C2               	btfsc	194,1,c	;volatile
  7122  001188  D01A               	goto	l897
  7123  00118A  0E33               	movlw	51
  7124  00118C  60C4               	cpfslt	196,c	;volatile
  7125  00118E  D017               	goto	l897
  7126                           
  7127                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  7128  001190  0E04               	movlw	4
  7129  001192  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7130  001194  B4D8               	btfsc	status,2,c
  7131  001196  D003               	goto	l2706
  7132  001198  0E04               	movlw	4
  7133  00119A  EC7C  F00E         	call	_MNouJoystick
  7134  00119E                     l2706:
  7135                           
  7136                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  7137  00119E  0E04               	movlw	4
  7138  0011A0  D7ED               	goto	L8
  7139  0011A2                     l2716:
  7140  0011A2  500E               	movf	JoystickMotor@state^0,w,c
  7141  0011A4  6E6B               	movwf	??_JoystickMotor^0,c
  7142  0011A6  6A6C               	clrf	(??_JoystickMotor+1)^0,c
  7143                           
  7144                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7145                           ; Switch size 1, requested type "simple"
  7146                           ; Number of cases is 1, Range of values is 0 to 0
  7147                           ; switch strategies available:
  7148                           ; Name         Instructions Cycles
  7149                           ; simple_byte            4     3 (average)
  7150                           ;	Chosen strategy is simple_byte
  7151  0011A8  506C               	movf	(??_JoystickMotor+1)^0,w,c
  7152  0011AA  0A00               	xorlw	0	; case 0
  7153  0011AC  A4D8               	btfss	status,2,c
  7154  0011AE  D007               	goto	l897
  7155                           
  7156                           ; Switch size 1, requested type "simple"
  7157                           ; Number of cases is 2, Range of values is 0 to 1
  7158                           ; switch strategies available:
  7159                           ; Name         Instructions Cycles
  7160                           ; simple_byte            7     4 (average)
  7161                           ;	Chosen strategy is simple_byte
  7162  0011B0  506B               	movf	??_JoystickMotor^0,w,c
  7163  0011B2  0A00               	xorlw	0	; case 0
  7164  0011B4  B4D8               	btfsc	status,2,c
  7165  0011B6  D79B               	goto	l889
  7166  0011B8  0A01               	xorlw	1	; case 1
  7167  0011BA  B4D8               	btfsc	status,2,c
  7168  0011BC  D7C5               	goto	l898
  7169  0011BE                     l897:
  7170                           
  7171                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  7172  0011BE  A878               	btfss	(_cap1/(0+8))^0,_cap1& (0+7),c
  7173  0011C0  0012               	return	
  7174  0011C2  A678               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  7175  0011C4  0012               	return	
  7176  0011C6  500F               	movf	_ultimaTeclaAD^0,w,c
  7177  0011C8  B4D8               	btfsc	status,2,c
  7178  0011CA  0012               	return	
  7179                           
  7180                           ;Joystick.c: 66:         MNouJoystick(0);
  7181  0011CC  0E00               	movlw	0
  7182  0011CE  EC7C  F00E         	call	_MNouJoystick
  7183                           
  7184                           ;Joystick.c: 67:         ultimaTeclaAD = 0;
  7185  0011D2  0E00               	movlw	0
  7186  0011D4  6E0F               	movwf	_ultimaTeclaAD^0,c
  7187  0011D6  0012               	return		;funcret
  7188  0011D8                     __end_of_JoystickMotor:
  7189                           	callstack 0
  7190                           
  7191 ;; *************** function _MNouJoystick *****************
  7192 ;; Defined at:
  7193 ;;		line 35 in file "Menu.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  posicio         1    wreg     char 
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;  posicio         1    5[COMRAM] char 
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		wreg
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/1
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMRAM   BANK0   BANK1
  7207 ;;      Params:         0       0       0
  7208 ;;      Locals:         1       0       0
  7209 ;;      Temps:          0       0       0
  7210 ;;      Totals:         1       0       0
  7211 ;;Total ram usage:        1 bytes
  7212 ;; Hardware stack levels used: 1
  7213 ;; Hardware stack levels required when called: 2
  7214 ;; This function calls:
  7215 ;;		Nothing
  7216 ;; This function is called by:
  7217 ;;		_JoystickMotor
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text58
  7222  001CF8                     __ptext58:
  7223                           	callstack 0
  7224  001CF8                     _MNouJoystick:
  7225                           	callstack 27
  7226                           
  7227                           ;incstack = 0
  7228                           ;MNouJoystick@posicio stored from wreg
  7229  001CF8  6E6A               	movwf	MNouJoystick@posicio^0,c
  7230                           
  7231                           ;Menu.c: 36:     novaDireccio = posicio;
  7232  001CFA  C06A  F058         	movff	MNouJoystick@posicio,_novaDireccio
  7233  001CFE  0012               	return		;funcret
  7234  001D00                     __end_of_MNouJoystick:
  7235                           	callstack 0
  7236                           
  7237 ;; *************** function _JoystickInit *****************
  7238 ;; Defined at:
  7239 ;;		line 12 in file "Joystick.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;		None
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;		None
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1    wreg      void 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1
  7253 ;;      Params:         0       0       0
  7254 ;;      Locals:         0       0       0
  7255 ;;      Temps:          0       0       0
  7256 ;;      Totals:         0       0       0
  7257 ;;Total ram usage:        0 bytes
  7258 ;; Hardware stack levels used: 1
  7259 ;; Hardware stack levels required when called: 2
  7260 ;; This function calls:
  7261 ;;		Nothing
  7262 ;; This function is called by:
  7263 ;;		_main
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text59
  7268  001BFA                     __ptext59:
  7269                           	callstack 0
  7270  001BFA                     _JoystickInit:
  7271                           	callstack 28
  7272                           
  7273                           ;Joystick.c: 13:     ADCON0 = 0x01;
  7274                           
  7275                           ;incstack = 0
  7276  001BFA  0E01               	movlw	1
  7277  001BFC  6EC2               	movwf	194,c	;volatile
  7278                           
  7279                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  7280  001BFE  0E0D               	movlw	13
  7281  001C00  6EC1               	movwf	193,c	;volatile
  7282                           
  7283                           ;Joystick.c: 15:     ADCON2 = 0x09;
  7284  001C02  0E09               	movlw	9
  7285  001C04  6EC0               	movwf	192,c	;volatile
  7286                           
  7287                           ;Joystick.c: 16:     ADRESH = 127;
  7288  001C06  0E7F               	movlw	127
  7289  001C08  6EC4               	movwf	196,c	;volatile
  7290  001C0A  0012               	return		;funcret
  7291  001C0C                     __end_of_JoystickInit:
  7292                           	callstack 0
  7293                           
  7294 ;; *************** function _GLCDMotor *****************
  7295 ;; Defined at:
  7296 ;;		line 36 in file "GestioLCD.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;		None
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/1
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1
  7310 ;;      Params:         0       0       0
  7311 ;;      Locals:         0       0       0
  7312 ;;      Temps:          0       2       0
  7313 ;;      Totals:         0       2       0
  7314 ;;Total ram usage:        2 bytes
  7315 ;; Hardware stack levels used: 1
  7316 ;; Hardware stack levels required when called: 6
  7317 ;; This function calls:
  7318 ;;		_LcClear
  7319 ;;		_LcGotoXY
  7320 ;;		_LcLliure
  7321 ;;		_LcNewString
  7322 ;;		_LcPutChar
  7323 ;;		_TiGetTics
  7324 ;;		_TiResetTics
  7325 ;; This function is called by:
  7326 ;;		_main
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           	psect	text60
  7331  00074C                     __ptext60:
  7332                           	callstack 0
  7333  00074C                     _GLCDMotor:
  7334                           	callstack 24
  7335                           
  7336                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  7337                           
  7338                           ;incstack = 0
  7339  00074C  D1BD               	goto	l6606
  7340  00074E                     l6420:
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  7344  00074E  0E11               	movlw	17
  7345  000750  6011               	cpfslt	GLCDMotor@length1^0,c
  7346  000752  D018               	goto	l6430
  7347                           
  7348                           ; BSR set to: 0
  7349  000754  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7350  000756  D016               	goto	l6430
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  7354  000758  0E00               	movlw	0
  7355  00075A  6E72               	movwf	LcGotoXY@Row^0,c
  7356  00075C  0E00               	movlw	0
  7357  00075E  EC8F  F00C         	call	_LcGotoXY
  7358                           
  7359                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  7360  000762  5018               	movf	_menuDaltGLCD^0,w,c
  7361  000764  0D1D               	mullw	29
  7362  000766  50F3               	movf	243,w,c
  7363  000768  0F01               	addlw	low _menuList
  7364  00076A  0100               	movlb	0	; () banked
  7365  00076C  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7366  00076E  C0C1  F06D         	movff	??_GLCDMotor,LcNewString@new_s
  7367  000772  506D               	movf	LcNewString@new_s^0,w,c
  7368  000774  A4D8               	btfss	status,2,c
  7369  000776  0E02               	movlw	high __smallconst
  7370  000778  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  7371  00077A  EC34  F00E         	call	_LcNewString	;wreg free
  7372                           
  7373                           ;GestioLCD.c: 53:     state = 5;
  7374  00077E  0E05               	movlw	5
  7375  000780  6E17               	movwf	GLCDMotor@state^0,c
  7376                           
  7377                           ;GestioLCD.c: 54:    }
  7378  000782  0012               	return	
  7379  000784                     l6430:
  7380                           
  7381                           ; BSR set to: 0
  7382  000784  0E10               	movlw	16
  7383  000786  6411               	cpfsgt	GLCDMotor@length1^0,c
  7384  000788  0012               	return	
  7385                           
  7386                           ; BSR set to: 0
  7387  00078A  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7388  00078C  0012               	return	
  7389  00078E                     u6540:
  7390                           
  7391                           ;GestioLCD.c: 56:     state++;
  7392  00078E  2A17               	incf	GLCDMotor@state^0,f,c
  7393  000790  0012               	return	
  7394  000792                     l6436:
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;GestioLCD.c: 60:    if (j>=16) {
  7398  000792  0E0F               	movlw	15
  7399  000794  6416               	cpfsgt	GLCDMotor@j^0,c
  7400  000796  D02B               	goto	l6450
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;GestioLCD.c: 61:     min1++;
  7404  000798  2A15               	incf	GLCDMotor@min1^0,f,c
  7405                           
  7406                           ;GestioLCD.c: 62:     max1++;
  7407  00079A  2A56               	incf	GLCDMotor@max1^0,f,c
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  7411  00079C  5018               	movf	_menuDaltGLCD^0,w,c
  7412  00079E  0D1D               	mullw	29
  7413  0007A0  50F3               	movf	243,w,c
  7414  0007A2  0F01               	addlw	low _menuList
  7415  0007A4  2456               	addwf	GLCDMotor@max1^0,w,c
  7416  0007A6  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7417  0007A8  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7418  0007AC                     	if	1	;There is more than 1 active tblptr byte
  7419  0007AC  0E02               	movlw	high __smallconst
  7420  0007AE  6EF7               	movwf	tblptrh,c
  7421  0007B0                     	endif
  7422  0007B0                     	if	0	;tblptru may be non-zero
  7423  0007B0                     	endif
  7424  0007B0                     	if	0	;tblptru may be non-zero
  7425  0007B0                     	endif
  7426  0007B0  0008               	tblrd		*
  7427  0007B2  50F5               	movf	tablat,w,c
  7428  0007B4  0900               	iorlw	0
  7429  0007B6  A4D8               	btfss	status,2,c
  7430  0007B8  D002               	goto	l6444
  7431                           
  7432                           ; BSR set to: 0
  7433  0007BA  0E00               	movlw	0
  7434  0007BC  6E56               	movwf	GLCDMotor@max1^0,c
  7435  0007BE                     l6444:
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  7439  0007BE  5018               	movf	_menuDaltGLCD^0,w,c
  7440  0007C0  0D1D               	mullw	29
  7441  0007C2  50F3               	movf	243,w,c
  7442  0007C4  0F01               	addlw	low _menuList
  7443  0007C6  2415               	addwf	GLCDMotor@min1^0,w,c
  7444  0007C8  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7445  0007CA  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7446  0007CE                     	if	1	;There is more than 1 active tblptr byte
  7447  0007CE  0E02               	movlw	high __smallconst
  7448  0007D0  6EF7               	movwf	tblptrh,c
  7449  0007D2                     	endif
  7450  0007D2                     	if	0	;tblptru may be non-zero
  7451  0007D2                     	endif
  7452  0007D2                     	if	0	;tblptru may be non-zero
  7453  0007D2                     	endif
  7454  0007D2  0008               	tblrd		*
  7455  0007D4  50F5               	movf	tablat,w,c
  7456  0007D6  0900               	iorlw	0
  7457  0007D8  A4D8               	btfss	status,2,c
  7458  0007DA  D002               	goto	l820
  7459                           
  7460                           ; BSR set to: 0
  7461  0007DC  0E00               	movlw	0
  7462  0007DE  6E15               	movwf	GLCDMotor@min1^0,c
  7463  0007E0                     l820:
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;GestioLCD.c: 65:     j=0;
  7467  0007E0  0E00               	movlw	0
  7468  0007E2  6E16               	movwf	GLCDMotor@j^0,c
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;GestioLCD.c: 66:     k1=min1;
  7472  0007E4  C015  F013         	movff	GLCDMotor@min1,GLCDMotor@k1
  7473                           
  7474                           ;GestioLCD.c: 67:     state = 6;
  7475  0007E8  0E06               	movlw	6
  7476  0007EA  6E17               	movwf	GLCDMotor@state^0,c
  7477                           
  7478                           ;GestioLCD.c: 68:    }
  7479  0007EC  0012               	return	
  7480  0007EE                     l6450:
  7481                           
  7482                           ; BSR set to: 0
  7483  0007EE  0E10               	movlw	16
  7484  0007F0  6016               	cpfslt	GLCDMotor@j^0,c
  7485  0007F2  0012               	return	
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  7489  0007F4  0E00               	movlw	0
  7490  0007F6  6E72               	movwf	LcGotoXY@Row^0,c
  7491  0007F8  5016               	movf	GLCDMotor@j^0,w,c
  7492  0007FA  EC8F  F00C         	call	_LcGotoXY
  7493                           
  7494                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  7495  0007FE  5018               	movf	_menuDaltGLCD^0,w,c
  7496  000800  0D1D               	mullw	29
  7497  000802  50F3               	movf	243,w,c
  7498  000804  0F01               	addlw	low _menuList
  7499  000806  2413               	addwf	GLCDMotor@k1^0,w,c
  7500  000808  0100               	movlb	0	; () banked
  7501  00080A  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7502  00080C  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7503  000810                     	if	1	;There is more than 1 active tblptr byte
  7504  000810  0E02               	movlw	high __smallconst
  7505  000812  6EF7               	movwf	tblptrh,c
  7506  000814                     	endif
  7507  000814                     	if	0	;tblptru may be non-zero
  7508  000814                     	endif
  7509  000814                     	if	0	;tblptru may be non-zero
  7510  000814                     	endif
  7511  000814  0008               	tblrd		*
  7512  000816  50F5               	movf	tablat,w,c
  7513  000818  EC21  F00C         	call	_LcPutChar
  7514                           
  7515                           ;GestioLCD.c: 72:     j++;
  7516  00081C  2A16               	incf	GLCDMotor@j^0,f,c
  7517                           
  7518                           ;GestioLCD.c: 73:     k1++;
  7519  00081E  2A13               	incf	GLCDMotor@k1^0,f,c
  7520                           
  7521                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  7522  000820  5018               	movf	_menuDaltGLCD^0,w,c
  7523  000822  0D1D               	mullw	29
  7524  000824  50F3               	movf	243,w,c
  7525  000826  0F01               	addlw	low _menuList
  7526  000828  2413               	addwf	GLCDMotor@k1^0,w,c
  7527  00082A  0100               	movlb	0	; () banked
  7528  00082C  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7529  00082E  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7530  000832                     	if	1	;There is more than 1 active tblptr byte
  7531  000832  0E02               	movlw	high __smallconst
  7532  000834  6EF7               	movwf	tblptrh,c
  7533  000836                     	endif
  7534  000836                     	if	0	;tblptru may be non-zero
  7535  000836                     	endif
  7536  000836                     	if	0	;tblptru may be non-zero
  7537  000836                     	endif
  7538  000836  0008               	tblrd		*
  7539  000838  50F5               	movf	tablat,w,c
  7540  00083A  0900               	iorlw	0
  7541  00083C  A4D8               	btfss	status,2,c
  7542  00083E  0012               	return	
  7543                           
  7544                           ; BSR set to: 0
  7545  000840  0E00               	movlw	0
  7546  000842  6E13               	movwf	GLCDMotor@k1^0,c
  7547  000844  0012               	return	
  7548  000846                     l6464:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  7552  000846  0E04               	movlw	4
  7553  000848  6018               	cpfslt	_menuDaltGLCD^0,c
  7554  00084A  D012               	goto	u6640
  7555  00084C  D7A0               	goto	u6540
  7556  00084E                     u6610:
  7557                           
  7558                           ;GestioLCD.c: 82:     state = 0;
  7559  00084E  0E00               	movlw	0
  7560  000850  6E17               	movwf	GLCDMotor@state^0,c
  7561  000852  0012               	return	
  7562  000854                     l6472:
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  7566  000854  EC3A  F00E         	call	_LcLliure	;wreg free
  7567  000858  A0D8               	btfss	status,0,c
  7568  00085A  D006               	goto	l6478
  7569  00085C  0E04               	movlw	4
  7570  00085E  6018               	cpfslt	_menuDaltGLCD^0,c
  7571  000860  D003               	goto	l6478
  7572                           
  7573                           ;GestioLCD.c: 87:     state = 7;
  7574  000862  0E07               	movlw	7
  7575  000864  6E17               	movwf	GLCDMotor@state^0,c
  7576                           
  7577                           ;GestioLCD.c: 88:    }
  7578  000866  0012               	return	
  7579  000868                     l6478:
  7580  000868  EC3A  F00E         	call	_LcLliure	;wreg free
  7581  00086C  A0D8               	btfss	status,0,c
  7582  00086E  0012               	return	
  7583  000870                     u6640:
  7584  000870  0E03               	movlw	3
  7585  000872  6418               	cpfsgt	_menuDaltGLCD^0,c
  7586  000874  0012               	return	
  7587  000876  D7EB               	goto	u6610
  7588  000878                     l832:
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  7592  000878  AA78               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  7593  00087A  0012               	return	
  7594                           
  7595                           ; BSR set to: 0
  7596  00087C  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7597  00087E  0012               	return	
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;GestioLCD.c: 95:     length1 = 0;
  7601  000880  0E00               	movlw	0
  7602  000882  6E11               	movwf	GLCDMotor@length1^0,c
  7603                           
  7604                           ;GestioLCD.c: 96:     length2 = 0;
  7605  000884  0E00               	movlw	0
  7606  000886  6E10               	movwf	GLCDMotor@length2^0,c
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  7610  000888  0E00               	movlw	0
  7611  00088A  6E72               	movwf	LcGotoXY@Row^0,c
  7612  00088C  0E00               	movlw	0
  7613  00088E  EC8F  F00C         	call	_LcGotoXY
  7614                           
  7615                           ;GestioLCD.c: 98:     min1 = 0;
  7616  000892  0E00               	movlw	0
  7617  000894  6E15               	movwf	GLCDMotor@min1^0,c
  7618                           
  7619                           ;GestioLCD.c: 99:     max1 = 15;
  7620  000896  0E0F               	movlw	15
  7621  000898  6E56               	movwf	GLCDMotor@max1^0,c
  7622                           
  7623                           ;GestioLCD.c: 100:     min2 = 0;
  7624  00089A  0E00               	movlw	0
  7625  00089C  6E14               	movwf	GLCDMotor@min2^0,c
  7626                           
  7627                           ;GestioLCD.c: 101:     max2 = 15;
  7628  00089E  0E0F               	movlw	15
  7629  0008A0  6E55               	movwf	GLCDMotor@max2^0,c
  7630                           
  7631                           ;GestioLCD.c: 102:     j = 0;
  7632  0008A2  0E00               	movlw	0
  7633  0008A4  6E16               	movwf	GLCDMotor@j^0,c
  7634                           
  7635                           ;GestioLCD.c: 103:     k1 = 0;
  7636  0008A6  0E00               	movlw	0
  7637  0008A8  6E13               	movwf	GLCDMotor@k1^0,c
  7638                           
  7639                           ;GestioLCD.c: 104:     k2 = 0;
  7640  0008AA  0E00               	movlw	0
  7641  0008AC  6E12               	movwf	GLCDMotor@k2^0,c
  7642                           
  7643                           ;GestioLCD.c: 105:     newString = 0;
  7644  0008AE  9A78               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  7645  0008B0  D76E               	goto	u6540
  7646  0008B2                     l6508:
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  7650  0008B2  5018               	movf	_menuDaltGLCD^0,w,c
  7651  0008B4  0D1D               	mullw	29
  7652  0008B6  50F3               	movf	243,w,c
  7653  0008B8  0F01               	addlw	low _menuList
  7654  0008BA  2411               	addwf	GLCDMotor@length1^0,w,c
  7655  0008BC  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7656  0008BE  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7657  0008C2                     	if	1	;There is more than 1 active tblptr byte
  7658  0008C2  0E02               	movlw	high __smallconst
  7659  0008C4  6EF7               	movwf	tblptrh,c
  7660  0008C6                     	endif
  7661  0008C6                     	if	0	;tblptru may be non-zero
  7662  0008C6                     	endif
  7663  0008C6                     	if	0	;tblptru may be non-zero
  7664  0008C6                     	endif
  7665  0008C6  0008               	tblrd		*
  7666  0008C8  50F5               	movf	tablat,w,c
  7667  0008CA  0900               	iorlw	0
  7668  0008CC  A4D8               	btfss	status,2,c
  7669  0008CE  D004               	goto	l6514
  7670                           
  7671                           ; BSR set to: 0
  7672  0008D0  0E03               	movlw	3
  7673  0008D2  6418               	cpfsgt	_menuDaltGLCD^0,c
  7674  0008D4  D001               	goto	l6514
  7675  0008D6  D75B               	goto	u6540
  7676  0008D8                     l6514:
  7677                           
  7678                           ; BSR set to: 0
  7679  0008D8  5018               	movf	_menuDaltGLCD^0,w,c
  7680  0008DA  0D1D               	mullw	29
  7681  0008DC  50F3               	movf	243,w,c
  7682  0008DE  0F01               	addlw	low _menuList
  7683  0008E0  2411               	addwf	GLCDMotor@length1^0,w,c
  7684  0008E2  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7685  0008E4  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7686  0008E8                     	if	1	;There is more than 1 active tblptr byte
  7687  0008E8  0E02               	movlw	high __smallconst
  7688  0008EA  6EF7               	movwf	tblptrh,c
  7689  0008EC                     	endif
  7690  0008EC                     	if	0	;tblptru may be non-zero
  7691  0008EC                     	endif
  7692  0008EC                     	if	0	;tblptru may be non-zero
  7693  0008EC                     	endif
  7694  0008EC  0008               	tblrd		*
  7695  0008EE  50F5               	movf	tablat,w,c
  7696  0008F0  0900               	iorlw	0
  7697  0008F2  B4D8               	btfsc	status,2,c
  7698  0008F4  D002               	goto	l6518
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;GestioLCD.c: 114:     length1++;
  7702  0008F6  2A11               	incf	GLCDMotor@length1^0,f,c
  7703                           
  7704                           ;GestioLCD.c: 115:    }
  7705  0008F8  0012               	return	
  7706  0008FA                     l6518:
  7707                           
  7708                           ; BSR set to: 0
  7709  0008FA  0E04               	movlw	4
  7710  0008FC  6018               	cpfslt	_menuDaltGLCD^0,c
  7711  0008FE  0012               	return	
  7712                           
  7713                           ; BSR set to: 0
  7714  000900  5018               	movf	_menuDaltGLCD^0,w,c
  7715  000902  0D1D               	mullw	29
  7716  000904  50F3               	movf	243,w,c
  7717  000906  0F01               	addlw	low _menuList
  7718  000908  2411               	addwf	GLCDMotor@length1^0,w,c
  7719  00090A  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7720  00090C  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7721  000910                     	if	1	;There is more than 1 active tblptr byte
  7722  000910  0E02               	movlw	high __smallconst
  7723  000912  6EF7               	movwf	tblptrh,c
  7724  000914                     	endif
  7725  000914                     	if	0	;tblptru may be non-zero
  7726  000914                     	endif
  7727  000914                     	if	0	;tblptru may be non-zero
  7728  000914                     	endif
  7729  000914  0008               	tblrd		*
  7730  000916  50F5               	movf	tablat,w,c
  7731  000918  0900               	iorlw	0
  7732  00091A  A4D8               	btfss	status,2,c
  7733  00091C  0012               	return	
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;GestioLCD.c: 117:     state = 13;
  7737  00091E  0E0D               	movlw	13
  7738  000920  6E17               	movwf	GLCDMotor@state^0,c
  7739  000922  0012               	return	
  7740  000924                     l6524:
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  7744  000924  0E11               	movlw	17
  7745  000926  6010               	cpfslt	GLCDMotor@length2^0,c
  7746  000928  D01A               	goto	l6534
  7747                           
  7748                           ; BSR set to: 0
  7749  00092A  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7750  00092C  D018               	goto	l6534
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  7754  00092E  0E01               	movlw	1
  7755  000930  6E72               	movwf	LcGotoXY@Row^0,c
  7756  000932  0E00               	movlw	0
  7757  000934  EC8F  F00C         	call	_LcGotoXY
  7758                           
  7759                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  7760  000938  5018               	movf	_menuDaltGLCD^0,w,c
  7761  00093A  0D1D               	mullw	29
  7762  00093C  CFF3 F0C1          	movff	prodl,??_GLCDMotor
  7763  000940  0E1D               	movlw	29
  7764  000942  0100               	movlb	0	; () banked
  7765  000944  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  7766  000946  51C1               	movf	??_GLCDMotor& (0+255),w,b
  7767  000948  0F01               	addlw	low _menuList
  7768  00094A  6FC2               	movwf	(??_GLCDMotor+1)& (0+255),b
  7769  00094C  C0C2  F06D         	movff	??_GLCDMotor+1,LcNewString@new_s
  7770  000950  506D               	movf	LcNewString@new_s^0,w,c
  7771  000952  A4D8               	btfss	status,2,c
  7772  000954  0E02               	movlw	high __smallconst
  7773  000956  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  7774  000958  EC34  F00E         	call	_LcNewString	;wreg free
  7775  00095C  D718               	goto	u6540
  7776  00095E                     l6534:
  7777                           
  7778                           ; BSR set to: 0
  7779  00095E  0E10               	movlw	16
  7780  000960  6410               	cpfsgt	GLCDMotor@length2^0,c
  7781  000962  0012               	return	
  7782                           
  7783                           ; BSR set to: 0
  7784  000964  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7785  000966  0012               	return	
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;GestioLCD.c: 127:     state = 9;
  7789  000968  0E09               	movlw	9
  7790  00096A  6E17               	movwf	GLCDMotor@state^0,c
  7791  00096C  0012               	return	
  7792  00096E                     l6540:
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;GestioLCD.c: 131:    if (j<16) {
  7796  00096E  0E10               	movlw	16
  7797  000970  6016               	cpfslt	GLCDMotor@j^0,c
  7798  000972  D02D               	goto	l6554
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  7802  000974  0E01               	movlw	1
  7803  000976  6E72               	movwf	LcGotoXY@Row^0,c
  7804  000978  5016               	movf	GLCDMotor@j^0,w,c
  7805  00097A  EC8F  F00C         	call	_LcGotoXY
  7806                           
  7807                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  7808  00097E  5018               	movf	_menuDaltGLCD^0,w,c
  7809  000980  0D1D               	mullw	29
  7810  000982  50F3               	movf	243,w,c
  7811  000984  0F01               	addlw	low _menuList
  7812  000986  2412               	addwf	GLCDMotor@k2^0,w,c
  7813  000988  0100               	movlb	0	; () banked
  7814  00098A  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7815  00098C  0E1D               	movlw	29
  7816  00098E  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  7817  000990  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7818  000994                     	if	1	;There is more than 1 active tblptr byte
  7819  000994  0E02               	movlw	high __smallconst
  7820  000996  6EF7               	movwf	tblptrh,c
  7821  000998                     	endif
  7822  000998                     	if	0	;tblptru may be non-zero
  7823  000998                     	endif
  7824  000998                     	if	0	;tblptru may be non-zero
  7825  000998                     	endif
  7826  000998  0008               	tblrd		*
  7827  00099A  50F5               	movf	tablat,w,c
  7828  00099C  EC21  F00C         	call	_LcPutChar
  7829                           
  7830                           ;GestioLCD.c: 134:     j++;
  7831  0009A0  2A16               	incf	GLCDMotor@j^0,f,c
  7832                           
  7833                           ;GestioLCD.c: 135:     k2++;
  7834  0009A2  2A12               	incf	GLCDMotor@k2^0,f,c
  7835                           
  7836                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  7837  0009A4  5018               	movf	_menuDaltGLCD^0,w,c
  7838  0009A6  0D1D               	mullw	29
  7839  0009A8  50F3               	movf	243,w,c
  7840  0009AA  0F01               	addlw	low _menuList
  7841  0009AC  2412               	addwf	GLCDMotor@k2^0,w,c
  7842  0009AE  0100               	movlb	0	; () banked
  7843  0009B0  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7844  0009B2  0E1D               	movlw	29
  7845  0009B4  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  7846  0009B6  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7847  0009BA                     	if	1	;There is more than 1 active tblptr byte
  7848  0009BA  0E02               	movlw	high __smallconst
  7849  0009BC  6EF7               	movwf	tblptrh,c
  7850  0009BE                     	endif
  7851  0009BE                     	if	0	;tblptru may be non-zero
  7852  0009BE                     	endif
  7853  0009BE                     	if	0	;tblptru may be non-zero
  7854  0009BE                     	endif
  7855  0009BE  0008               	tblrd		*
  7856  0009C0  50F5               	movf	tablat,w,c
  7857  0009C2  0900               	iorlw	0
  7858  0009C4  A4D8               	btfss	status,2,c
  7859  0009C6  0012               	return	
  7860                           
  7861                           ; BSR set to: 0
  7862  0009C8  0E00               	movlw	0
  7863  0009CA  6E12               	movwf	GLCDMotor@k2^0,c
  7864  0009CC  0012               	return	
  7865  0009CE                     l6554:
  7866                           
  7867                           ; BSR set to: 0
  7868  0009CE  0E0F               	movlw	15
  7869  0009D0  6416               	cpfsgt	GLCDMotor@j^0,c
  7870  0009D2  0012               	return	
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;GestioLCD.c: 139:     min2++;
  7874  0009D4  2A14               	incf	GLCDMotor@min2^0,f,c
  7875                           
  7876                           ;GestioLCD.c: 140:     max2++;
  7877  0009D6  2A55               	incf	GLCDMotor@max2^0,f,c
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  7881  0009D8  5018               	movf	_menuDaltGLCD^0,w,c
  7882  0009DA  0D1D               	mullw	29
  7883  0009DC  50F3               	movf	243,w,c
  7884  0009DE  0F01               	addlw	low _menuList
  7885  0009E0  2455               	addwf	GLCDMotor@max2^0,w,c
  7886  0009E2  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7887  0009E4  0E1D               	movlw	29
  7888  0009E6  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  7889  0009E8  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7890  0009EC                     	if	1	;There is more than 1 active tblptr byte
  7891  0009EC  0E02               	movlw	high __smallconst
  7892  0009EE  6EF7               	movwf	tblptrh,c
  7893  0009F0                     	endif
  7894  0009F0                     	if	0	;tblptru may be non-zero
  7895  0009F0                     	endif
  7896  0009F0                     	if	0	;tblptru may be non-zero
  7897  0009F0                     	endif
  7898  0009F0  0008               	tblrd		*
  7899  0009F2  50F5               	movf	tablat,w,c
  7900  0009F4  0900               	iorlw	0
  7901  0009F6  A4D8               	btfss	status,2,c
  7902  0009F8  D002               	goto	l6562
  7903                           
  7904                           ; BSR set to: 0
  7905  0009FA  0E00               	movlw	0
  7906  0009FC  6E55               	movwf	GLCDMotor@max2^0,c
  7907  0009FE                     l6562:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  7911  0009FE  5018               	movf	_menuDaltGLCD^0,w,c
  7912  000A00  0D1D               	mullw	29
  7913  000A02  50F3               	movf	243,w,c
  7914  000A04  0F01               	addlw	low _menuList
  7915  000A06  2414               	addwf	GLCDMotor@min2^0,w,c
  7916  000A08  6FC1               	movwf	??_GLCDMotor& (0+255),b
  7917  000A0A  0E1D               	movlw	29
  7918  000A0C  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  7919  000A0E  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  7920  000A12                     	if	1	;There is more than 1 active tblptr byte
  7921  000A12  0E02               	movlw	high __smallconst
  7922  000A14  6EF7               	movwf	tblptrh,c
  7923  000A16                     	endif
  7924  000A16                     	if	0	;tblptru may be non-zero
  7925  000A16                     	endif
  7926  000A16                     	if	0	;tblptru may be non-zero
  7927  000A16                     	endif
  7928  000A16  0008               	tblrd		*
  7929  000A18  50F5               	movf	tablat,w,c
  7930  000A1A  0900               	iorlw	0
  7931  000A1C  A4D8               	btfss	status,2,c
  7932  000A1E  D002               	goto	l850
  7933                           
  7934                           ; BSR set to: 0
  7935  000A20  0E00               	movlw	0
  7936  000A22  6E14               	movwf	GLCDMotor@min2^0,c
  7937  000A24                     l850:
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;GestioLCD.c: 143:     j=0;
  7941  000A24  0E00               	movlw	0
  7942  000A26  6E16               	movwf	GLCDMotor@j^0,c
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;GestioLCD.c: 144:     k2=min2;
  7946  000A28  C014  F012         	movff	GLCDMotor@min2,GLCDMotor@k2
  7947  000A2C  D6B0               	goto	u6540
  7948  000A2E                     l6570:
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  7952  000A2E  5019               	movf	_timerGLCD^0,w,c
  7953  000A30  EC5F  F00D         	call	_TiGetTics
  7954  000A34  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  7955  000A36  D00E               	goto	l852
  7956  000A38  0EB5               	movlw	181
  7957  000A3A  5C6A               	subwf	?_TiGetTics^0,w,c
  7958  000A3C  0E04               	movlw	4
  7959  000A3E  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  7960  000A40  B0D8               	btfsc	status,0,c
  7961  000A42  BA78               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  7962  000A44  D007               	goto	l852
  7963  000A46  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7964  000A48  D005               	goto	l852
  7965                           
  7966                           ;GestioLCD.c: 150:     LcClear();
  7967  000A4A  EC87  F00D         	call	_LcClear	;wreg free
  7968  000A4E                     l6578:
  7969                           
  7970                           ;GestioLCD.c: 151:     state = 2;
  7971  000A4E  0E02               	movlw	2
  7972  000A50  6E17               	movwf	GLCDMotor@state^0,c
  7973                           
  7974                           ;GestioLCD.c: 152:    }
  7975  000A52  0012               	return	
  7976  000A54                     l852:
  7977  000A54  AA78               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  7978  000A56  0012               	return	
  7979  000A58  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7980  000A5A  0012               	return	
  7981                           
  7982                           ;GestioLCD.c: 154:     LcClear();
  7983  000A5C  EC87  F00D         	call	_LcClear	;wreg free
  7984  000A60  D6F6               	goto	u6610
  7985  000A62                     l6586:
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  7989  000A62  5019               	movf	_timerGLCD^0,w,c
  7990  000A64  ECDC  F00D         	call	_TiResetTics
  7991  000A68  D692               	goto	u6540
  7992  000A6A                     l6590:
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;GestioLCD.c: 163:    if (LcLliure()) {
  7996  000A6A  EC3A  F00E         	call	_LcLliure	;wreg free
  7997  000A6E  A0D8               	btfss	status,0,c
  7998  000A70  0012               	return	
  7999                           
  8000                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  8001  000A72  5019               	movf	_timerGLCD^0,w,c
  8002  000A74  ECDC  F00D         	call	_TiResetTics
  8003                           
  8004                           ;GestioLCD.c: 165:     state = 11;
  8005  000A78  0E0B               	movlw	11
  8006  000A7A  6E17               	movwf	GLCDMotor@state^0,c
  8007  000A7C  0012               	return	
  8008  000A7E                     l6596:
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  8012  000A7E  5018               	movf	_menuDaltGLCD^0,w,c
  8013  000A80  0D1D               	mullw	29
  8014  000A82  50F3               	movf	243,w,c
  8015  000A84  0F01               	addlw	low _menuList
  8016  000A86  2410               	addwf	GLCDMotor@length2^0,w,c
  8017  000A88  6FC1               	movwf	??_GLCDMotor& (0+255),b
  8018  000A8A  0E1D               	movlw	29
  8019  000A8C  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  8020  000A8E  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  8021  000A92                     	if	1	;There is more than 1 active tblptr byte
  8022  000A92  0E02               	movlw	high __smallconst
  8023  000A94  6EF7               	movwf	tblptrh,c
  8024  000A96                     	endif
  8025  000A96                     	if	0	;tblptru may be non-zero
  8026  000A96                     	endif
  8027  000A96                     	if	0	;tblptru may be non-zero
  8028  000A96                     	endif
  8029  000A96  0008               	tblrd		*
  8030  000A98  50F5               	movf	tablat,w,c
  8031  000A9A  0900               	iorlw	0
  8032  000A9C  B4D8               	btfsc	status,2,c
  8033  000A9E  D002               	goto	l6600
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;GestioLCD.c: 170:     length2++;
  8037  000AA0  2A10               	incf	GLCDMotor@length2^0,f,c
  8038                           
  8039                           ;GestioLCD.c: 171:    }
  8040  000AA2  0012               	return	
  8041  000AA4                     l6600:
  8042                           
  8043                           ; BSR set to: 0
  8044  000AA4  5018               	movf	_menuDaltGLCD^0,w,c
  8045  000AA6  0D1D               	mullw	29
  8046  000AA8  50F3               	movf	243,w,c
  8047  000AAA  0F01               	addlw	low _menuList
  8048  000AAC  2410               	addwf	GLCDMotor@length2^0,w,c
  8049  000AAE  6FC1               	movwf	??_GLCDMotor& (0+255),b
  8050  000AB0  0E1D               	movlw	29
  8051  000AB2  27C1               	addwf	??_GLCDMotor& (0+255),f,b
  8052  000AB4  C0C1  FFF6         	movff	??_GLCDMotor,tblptrl
  8053  000AB8                     	if	1	;There is more than 1 active tblptr byte
  8054  000AB8  0E02               	movlw	high __smallconst
  8055  000ABA  6EF7               	movwf	tblptrh,c
  8056  000ABC                     	endif
  8057  000ABC                     	if	0	;tblptru may be non-zero
  8058  000ABC                     	endif
  8059  000ABC                     	if	0	;tblptru may be non-zero
  8060  000ABC                     	endif
  8061  000ABC  0008               	tblrd		*
  8062  000ABE  50F5               	movf	tablat,w,c
  8063  000AC0  0900               	iorlw	0
  8064  000AC2  A4D8               	btfss	status,2,c
  8065  000AC4  0012               	return	
  8066  000AC6  D7C3               	goto	l6578
  8067  000AC8                     l6606:
  8068  000AC8  5017               	movf	GLCDMotor@state^0,w,c
  8069  000ACA  0100               	movlb	0	; () banked
  8070  000ACC  6FC1               	movwf	??_GLCDMotor& (0+255),b
  8071  000ACE  6BC2               	clrf	(??_GLCDMotor+1)& (0+255),b
  8072                           
  8073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8074                           ; Switch size 1, requested type "simple"
  8075                           ; Number of cases is 1, Range of values is 0 to 0
  8076                           ; switch strategies available:
  8077                           ; Name         Instructions Cycles
  8078                           ; simple_byte            4     3 (average)
  8079                           ;	Chosen strategy is simple_byte
  8080  000AD0  51C2               	movf	(??_GLCDMotor+1)& (0+255),w,b
  8081  000AD2  0A00               	xorlw	0	; case 0
  8082  000AD4  A4D8               	btfss	status,2,c
  8083  000AD6  0012               	return	
  8084                           
  8085                           ; BSR set to: 0
  8086                           ; Switch size 1, requested type "simple"
  8087                           ; Number of cases is 12, Range of values is 0 to 13
  8088                           ; switch strategies available:
  8089                           ; Name         Instructions Cycles
  8090                           ; simple_byte           37    19 (average)
  8091                           ;	Chosen strategy is simple_byte
  8092  000AD8  51C1               	movf	??_GLCDMotor& (0+255),w,b
  8093  000ADA  0A00               	xorlw	0	; case 0
  8094  000ADC  B4D8               	btfsc	status,2,c
  8095  000ADE  D6CC               	goto	l832
  8096  000AE0  0A01               	xorlw	1	; case 1
  8097  000AE2  B4D8               	btfsc	status,2,c
  8098  000AE4  D6E6               	goto	l6508
  8099  000AE6  0A03               	xorlw	3	; case 2
  8100  000AE8  B4D8               	btfsc	status,2,c
  8101  000AEA  D631               	goto	l6420
  8102  000AEC  0A01               	xorlw	1	; case 3
  8103  000AEE  B4D8               	btfsc	status,2,c
  8104  000AF0  D650               	goto	l6436
  8105  000AF2  0A06               	xorlw	6	; case 5
  8106  000AF4  B4D8               	btfsc	status,2,c
  8107  000AF6  D6AE               	goto	l6472
  8108  000AF8  0A03               	xorlw	3	; case 6
  8109  000AFA  B4D8               	btfsc	status,2,c
  8110  000AFC  D6A4               	goto	l6464
  8111  000AFE  0A01               	xorlw	1	; case 7
  8112  000B00  B4D8               	btfsc	status,2,c
  8113  000B02  D710               	goto	l6524
  8114  000B04  0A0F               	xorlw	15	; case 8
  8115  000B06  B4D8               	btfsc	status,2,c
  8116  000B08  D7B0               	goto	l6590
  8117  000B0A  0A01               	xorlw	1	; case 9
  8118  000B0C  B4D8               	btfsc	status,2,c
  8119  000B0E  D72F               	goto	l6540
  8120  000B10  0A03               	xorlw	3	; case 10
  8121  000B12  B4D8               	btfsc	status,2,c
  8122  000B14  D7A6               	goto	l6586
  8123  000B16  0A01               	xorlw	1	; case 11
  8124  000B18  B4D8               	btfsc	status,2,c
  8125  000B1A  D789               	goto	l6570
  8126  000B1C  0A06               	xorlw	6	; case 13
  8127  000B1E  A4D8               	btfss	status,2,c
  8128  000B20  0012               	return	
  8129  000B22  D7AD               	goto	l6596
  8130  000B24                     __end_of_GLCDMotor:
  8131                           	callstack 0
  8132                           
  8133 ;; *************** function _LcPutChar *****************
  8134 ;; Defined at:
  8135 ;;		line 134 in file "LcTLCD.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  c               1    wreg     unsigned char 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;  c               1    0[BANK0 ] unsigned char 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1
  8149 ;;      Params:         0       0       0
  8150 ;;      Locals:         0       1       0
  8151 ;;      Temps:          0       0       0
  8152 ;;      Totals:         0       1       0
  8153 ;;Total ram usage:        1 bytes
  8154 ;; Hardware stack levels used: 1
  8155 ;; Hardware stack levels required when called: 5
  8156 ;; This function calls:
  8157 ;;		_CantaData
  8158 ;;		_LcGotoXY
  8159 ;;		_WaitForBusy
  8160 ;; This function is called by:
  8161 ;;		_LcLCD
  8162 ;;		_menu
  8163 ;;		_GLCDMotor
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           	psect	text61
  8168  001842                     __ptext61:
  8169                           	callstack 0
  8170  001842                     _LcPutChar:
  8171                           	callstack 24
  8172                           
  8173                           ;incstack = 0
  8174                           ;LcPutChar@c stored from wreg
  8175  001842  0100               	movlb	0	; () banked
  8176  001844  6FC0               	movwf	LcPutChar@c& (0+255),b
  8177                           
  8178                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  8179  001846  EC6F  F00C         	call	_WaitForBusy	;wreg free
  8180  00184A  0100               	movlb	0	; () banked
  8181  00184C  51C0               	movf	LcPutChar@c& (0+255),w,b
  8182  00184E  EC00  F00D         	call	_CantaData
  8183                           
  8184                           ;LcTLCD.c: 138:  ++ColumnAct;
  8185  001852  2A33               	incf	_ColumnAct^0,f,c
  8186                           
  8187                           ;LcTLCD.c: 140:  if (Rows == 2) {
  8188  001854  0E02               	movlw	2
  8189  001856  1836               	xorwf	_Rows^0,w,c
  8190  001858  A4D8               	btfss	status,2,c
  8191  00185A  D010               	goto	l5638
  8192                           
  8193                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  8194  00185C  0E27               	movlw	39
  8195  00185E  6433               	cpfsgt	_ColumnAct^0,c
  8196  001860  D00D               	goto	l5638
  8197                           
  8198                           ;LcTLCD.c: 142:    ColumnAct = 0;
  8199  001862  0E00               	movlw	0
  8200  001864  6E33               	movwf	_ColumnAct^0,c
  8201                           
  8202                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  8203  001866  2A34               	incf	_RowAct^0,f,c
  8204  001868  0E01               	movlw	1
  8205  00186A  6434               	cpfsgt	_RowAct^0,c
  8206  00186C  D002               	goto	l5636
  8207  00186E  0E00               	movlw	0
  8208  001870  6E34               	movwf	_RowAct^0,c
  8209  001872                     l5636:
  8210                           
  8211                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  8212  001872  C034  F072         	movff	_RowAct,LcGotoXY@Row
  8213  001876  5033               	movf	_ColumnAct^0,w,c
  8214  001878  EC8F  F00C         	call	_LcGotoXY
  8215  00187C                     l5638:
  8216                           
  8217                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  8218  00187C  0434               	decf	_RowAct^0,w,c
  8219  00187E  A4D8               	btfss	status,2,c
  8220  001880  0012               	return	
  8221                           
  8222                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  8223  001882  0E27               	movlw	39
  8224  001884  6433               	cpfsgt	_ColumnAct^0,c
  8225  001886  D002               	goto	l5644
  8226  001888  0E00               	movlw	0
  8227  00188A  6E33               	movwf	_ColumnAct^0,c
  8228  00188C                     l5644:
  8229                           
  8230                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  8231  00188C  C034  F072         	movff	_RowAct,LcGotoXY@Row
  8232  001890  5033               	movf	_ColumnAct^0,w,c
  8233  001892  EC8F  F00C         	call	_LcGotoXY
  8234  001896  0012               	return		;funcret
  8235  001898                     __end_of_LcPutChar:
  8236                           	callstack 0
  8237                           
  8238 ;; *************** function _CantaData *****************
  8239 ;; Defined at:
  8240 ;;		line 196 in file "LcTLCD.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;  Data            1    wreg     unsigned char 
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;  Data            1    7[COMRAM] unsigned char 
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1    wreg      void 
  8247 ;; Registers used:
  8248 ;;		wreg, status,2, status,0, cstack
  8249 ;; Tracked objects:
  8250 ;;		On entry : 3F/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1
  8254 ;;      Params:         0       0       0
  8255 ;;      Locals:         1       0       0
  8256 ;;      Temps:          0       0       0
  8257 ;;      Totals:         1       0       0
  8258 ;;Total ram usage:        1 bytes
  8259 ;; Hardware stack levels used: 1
  8260 ;; Hardware stack levels required when called: 3
  8261 ;; This function calls:
  8262 ;;		_CantaPartAlta
  8263 ;;		_CantaPartBaixa
  8264 ;; This function is called by:
  8265 ;;		_LcPutChar
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text62
  8270  001A00                     __ptext62:
  8271                           	callstack 0
  8272  001A00                     _CantaData:
  8273                           	callstack 25
  8274                           
  8275                           ;incstack = 0
  8276                           ;CantaData@Data stored from wreg
  8277  001A00  6E6C               	movwf	CantaData@Data^0,c
  8278                           
  8279                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8280  001A02  9694               	bcf	148,3,c	;volatile
  8281  001A04  9494               	bcf	148,2,c	;volatile
  8282  001A06  9294               	bcf	148,1,c	;volatile
  8283  001A08  9094               	bcf	148,0,c	;volatile
  8284                           
  8285                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  8286  001A0A  8A8B               	bsf	139,5,c	;volatile
  8287                           
  8288                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  8289  001A0C  9E8C               	bcf	140,7,c	;volatile
  8290                           
  8291                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  8292  001A0E  888B               	bsf	139,4,c	;volatile
  8293                           
  8294                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  8295  001A10  506C               	movf	CantaData@Data^0,w,c
  8296  001A12  EC91  F00B         	call	_CantaPartAlta
  8297                           
  8298                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  8299  001A16  888B               	bsf	139,4,c	;volatile
  8300                           
  8301                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  8302  001A18  988B               	bcf	139,4,c	;volatile
  8303                           
  8304                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  8305  001A1A  988B               	bcf	139,4,c	;volatile
  8306                           
  8307                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  8308  001A1C  888B               	bsf	139,4,c	;volatile
  8309                           
  8310                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  8311  001A1E  506C               	movf	CantaData@Data^0,w,c
  8312  001A20  EC5D  F00B         	call	_CantaPartBaixa
  8313                           
  8314                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  8315  001A24  888B               	bsf	139,4,c	;volatile
  8316                           
  8317                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  8318  001A26  988B               	bcf	139,4,c	;volatile
  8319                           
  8320                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8321  001A28  8694               	bsf	148,3,c	;volatile
  8322  001A2A  8494               	bsf	148,2,c	;volatile
  8323  001A2C  8294               	bsf	148,1,c	;volatile
  8324  001A2E  8094               	bsf	148,0,c	;volatile
  8325  001A30  0012               	return		;funcret
  8326  001A32                     __end_of_CantaData:
  8327                           	callstack 0
  8328                           
  8329 ;; *************** function _LcNewString *****************
  8330 ;; Defined at:
  8331 ;;		line 241 in file "LcTLCD.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  8334 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  8335 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  8336 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;		None
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  1    wreg      void 
  8341 ;; Registers used:
  8342 ;;		wreg, status,2, status,0
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1
  8348 ;;      Params:         2       0       0
  8349 ;;      Locals:         0       0       0
  8350 ;;      Temps:          0       0       0
  8351 ;;      Totals:         2       0       0
  8352 ;;Total ram usage:        2 bytes
  8353 ;; Hardware stack levels used: 1
  8354 ;; Hardware stack levels required when called: 2
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		_menu
  8359 ;;		_GLCDMotor
  8360 ;;		_motorJoc
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text63
  8365  001C68                     __ptext63:
  8366                           	callstack 0
  8367  001C68                     _LcNewString:
  8368                           	callstack 27
  8369                           
  8370                           ;LcTLCD.c: 242:     s_ptr = new_s;
  8371                           
  8372                           ;incstack = 0
  8373  001C68  C06D  F005         	movff	LcNewString@new_s,_s_ptr
  8374  001C6C  C06E  F006         	movff	LcNewString@new_s+1,_s_ptr+1
  8375                           
  8376                           ;LcTLCD.c: 243:     nou_s = 1;
  8377  001C70  8A79               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8378  001C72  0012               	return		;funcret
  8379  001C74                     __end_of_LcNewString:
  8380                           	callstack 0
  8381                           
  8382 ;; *************** function _LcLliure *****************
  8383 ;; Defined at:
  8384 ;;		line 257 in file "LcTLCD.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;		None
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;		None
  8389 ;; Return value:  Size  Location     Type
  8390 ;;		None               void
  8391 ;; Registers used:
  8392 ;;		status,0
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMRAM   BANK0   BANK1
  8398 ;;      Params:         0       0       0
  8399 ;;      Locals:         0       0       0
  8400 ;;      Temps:          0       0       0
  8401 ;;      Totals:         0       0       0
  8402 ;;Total ram usage:        0 bytes
  8403 ;; Hardware stack levels used: 1
  8404 ;; Hardware stack levels required when called: 2
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_menu
  8409 ;;		_GLCDMotor
  8410 ;;		_motorJoc
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           	psect	text64
  8415  001C74                     __ptext64:
  8416                           	callstack 0
  8417  001C74                     _LcLliure:
  8418                           	callstack 27
  8419                           
  8420                           ;LcTLCD.c: 258:     return !nou_s;
  8421                           
  8422                           ;incstack = 0
  8423  001C74  AA79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8424  001C76  D002               	goto	l3906
  8425  001C78  90D8               	bcf	status,0,c
  8426  001C7A  0012               	return	
  8427  001C7C                     l3906:
  8428  001C7C  80D8               	bsf	status,0,c
  8429  001C7E  0012               	return		;funcret
  8430  001C80                     __end_of_LcLliure:
  8431                           	callstack 0
  8432                           
  8433 ;; *************** function _LcClear *****************
  8434 ;; Defined at:
  8435 ;;		line 84 in file "LcTLCD.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;		None
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;		None
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      void 
  8442 ;; Registers used:
  8443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1
  8449 ;;      Params:         0       0       0
  8450 ;;      Locals:         0       0       0
  8451 ;;      Temps:          0       0       0
  8452 ;;      Totals:         0       0       0
  8453 ;;Total ram usage:        0 bytes
  8454 ;; Hardware stack levels used: 1
  8455 ;; Hardware stack levels required when called: 5
  8456 ;; This function calls:
  8457 ;;		_CantaIR
  8458 ;;		_Espera
  8459 ;;		_LcGotoXY
  8460 ;;		_WaitForBusy
  8461 ;; This function is called by:
  8462 ;;		_menu
  8463 ;;		_GLCDMotor
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text65
  8468  001B0E                     __ptext65:
  8469                           	callstack 0
  8470  001B0E                     _LcClear:
  8471                           	callstack 24
  8472                           
  8473                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  8474                           
  8475                           ;incstack = 0
  8476  001B0E  EC6F  F00C         	call	_WaitForBusy	;wreg free
  8477  001B12  0E01               	movlw	1
  8478  001B14  EC19  F00D         	call	_CantaIR
  8479                           
  8480                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  8481  001B18  0E00               	movlw	0
  8482  001B1A  6E72               	movwf	(Espera@ms+1)^0,c
  8483  001B1C  0E03               	movlw	3
  8484  001B1E  6E71               	movwf	Espera@ms^0,c
  8485  001B20  5032               	movf	_Timer^0,w,c
  8486  001B22  EC99  F00D         	call	_Espera
  8487                           
  8488                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  8489  001B26  0E00               	movlw	0
  8490  001B28  6E72               	movwf	LcGotoXY@Row^0,c
  8491  001B2A  0E00               	movlw	0
  8492  001B2C  EC8F  F00C         	call	_LcGotoXY
  8493  001B30  0012               	return		;funcret
  8494  001B32                     __end_of_LcClear:
  8495                           	callstack 0
  8496                           
  8497 ;; *************** function _LcGotoXY *****************
  8498 ;; Defined at:
  8499 ;;		line 106 in file "LcTLCD.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;  Column          1    wreg     unsigned char 
  8502 ;;  Row             1   13[COMRAM] unsigned char 
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;  Column          1   18[COMRAM] unsigned char 
  8505 ;;  Fisics          2   14[COMRAM] int 
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1
  8515 ;;      Params:         1       0       0
  8516 ;;      Locals:         5       0       0
  8517 ;;      Temps:          0       0       0
  8518 ;;      Totals:         6       0       0
  8519 ;;Total ram usage:        6 bytes
  8520 ;; Hardware stack levels used: 1
  8521 ;; Hardware stack levels required when called: 4
  8522 ;; This function calls:
  8523 ;;		_CantaIR
  8524 ;;		_WaitForBusy
  8525 ;; This function is called by:
  8526 ;;		_LcClear
  8527 ;;		_LcPutChar
  8528 ;;		_menu
  8529 ;;		_GLCDMotor
  8530 ;;		_motorJoc
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text66
  8535  00191E                     __ptext66:
  8536                           	callstack 0
  8537  00191E                     _LcGotoXY:
  8538                           	callstack 25
  8539                           
  8540                           ;incstack = 0
  8541                           ;LcGotoXY@Column stored from wreg
  8542  00191E  6E77               	movwf	LcGotoXY@Column^0,c
  8543                           
  8544                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  8545  001920  5072               	movf	LcGotoXY@Row^0,w,c
  8546  001922  B4D8               	btfsc	status,2,c
  8547  001924  D004               	goto	l5558
  8548  001926  0E00               	movlw	0
  8549  001928  6E76               	movwf	(_LcGotoXY$336+1)^0,c
  8550  00192A  0E40               	movlw	64
  8551  00192C  D003               	goto	L9
  8552  00192E                     l5558:
  8553  00192E  0E00               	movlw	0
  8554  001930  6E76               	movwf	(_LcGotoXY$336+1)^0,c
  8555  001932  0E00               	movlw	0
  8556  001934                     L9:
  8557  001934  6E75               	movwf	_LcGotoXY$336^0,c
  8558  001936  5077               	movf	LcGotoXY@Column^0,w,c
  8559  001938  2475               	addwf	_LcGotoXY$336^0,w,c
  8560  00193A  6E73               	movwf	LcGotoXY@Fisics^0,c
  8561  00193C  0E00               	movlw	0
  8562  00193E  2076               	addwfc	(_LcGotoXY$336+1)^0,w,c
  8563  001940  6E74               	movwf	(LcGotoXY@Fisics+1)^0,c
  8564                           
  8565                           ;LcTLCD.c: 127:  WaitForBusy();
  8566  001942  EC6F  F00C         	call	_WaitForBusy	;wreg free
  8567                           
  8568                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  8569  001946  5073               	movf	LcGotoXY@Fisics^0,w,c
  8570  001948  0980               	iorlw	128
  8571  00194A  EC19  F00D         	call	_CantaIR
  8572                           
  8573                           ;LcTLCD.c: 130:  RowAct = Row;
  8574  00194E  C072  F034         	movff	LcGotoXY@Row,_RowAct
  8575                           
  8576                           ;LcTLCD.c: 131:  ColumnAct = Column;
  8577  001952  C077  F033         	movff	LcGotoXY@Column,_ColumnAct
  8578  001956  0012               	return		;funcret
  8579  001958                     __end_of_LcGotoXY:
  8580                           	callstack 0
  8581                           
  8582 ;; *************** function _WaitForBusy *****************
  8583 ;; Defined at:
  8584 ;;		line 212 in file "LcTLCD.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;		None
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;  Busy            1   12[COMRAM] unsigned char 
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      void 
  8591 ;; Registers used:
  8592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1
  8598 ;;      Params:         0       0       0
  8599 ;;      Locals:         1       0       0
  8600 ;;      Temps:          0       0       0
  8601 ;;      Totals:         1       0       0
  8602 ;;Total ram usage:        1 bytes
  8603 ;; Hardware stack levels used: 1
  8604 ;; Hardware stack levels required when called: 3
  8605 ;; This function calls:
  8606 ;;		_TiGetTics
  8607 ;;		_TiResetTics
  8608 ;; This function is called by:
  8609 ;;		_LcInit
  8610 ;;		_LcClear
  8611 ;;		_LcGotoXY
  8612 ;;		_LcPutChar
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           	psect	text67
  8617  0018DE                     __ptext67:
  8618                           	callstack 0
  8619  0018DE                     _WaitForBusy:
  8620                           	callstack 25
  8621                           
  8622                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8623                           
  8624                           ;incstack = 0
  8625  0018DE  8694               	bsf	148,3,c	;volatile
  8626  0018E0  8494               	bsf	148,2,c	;volatile
  8627  0018E2  8294               	bsf	148,1,c	;volatile
  8628  0018E4  8094               	bsf	148,0,c	;volatile
  8629                           
  8630                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  8631  0018E6  9A8B               	bcf	139,5,c	;volatile
  8632                           
  8633                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  8634  0018E8  8E8C               	bsf	140,7,c	;volatile
  8635                           
  8636                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  8637  0018EA  5032               	movf	_Timer^0,w,c
  8638  0018EC  ECDC  F00D         	call	_TiResetTics
  8639  0018F0                     l5526:
  8640                           
  8641                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8642  0018F0  888B               	bsf	139,4,c	;volatile
  8643  0018F2  888B               	bsf	139,4,c	;volatile
  8644                           
  8645                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  8646  0018F4  0E00               	movlw	0
  8647  0018F6  B682               	btfsc	130,3,c	;volatile
  8648  0018F8  0E01               	movlw	1
  8649  0018FA  6E71               	movwf	WaitForBusy@Busy^0,c
  8650                           
  8651                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  8652  0018FC  988B               	bcf	139,4,c	;volatile
  8653                           
  8654                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  8655  0018FE  988B               	bcf	139,4,c	;volatile
  8656                           
  8657                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8658  001900  888B               	bsf	139,4,c	;volatile
  8659  001902  888B               	bsf	139,4,c	;volatile
  8660                           
  8661                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  8662  001904  988B               	bcf	139,4,c	;volatile
  8663                           
  8664                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  8665  001906  988B               	bcf	139,4,c	;volatile
  8666                           
  8667                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  8668  001908  5032               	movf	_Timer^0,w,c
  8669  00190A  EC5F  F00D         	call	_TiGetTics
  8670  00190E  506A               	movf	?_TiGetTics^0,w,c
  8671  001910  106B               	iorwf	(?_TiGetTics+1)^0,w,c
  8672  001912  A4D8               	btfss	status,2,c
  8673  001914  0012               	return	
  8674                           
  8675                           ;LcTLCD.c: 227:  } while(Busy);
  8676  001916  5071               	movf	WaitForBusy@Busy^0,w,c
  8677  001918  B4D8               	btfsc	status,2,c
  8678  00191A  0012               	return	
  8679  00191C  D7E9               	goto	l5526
  8680  00191E                     __end_of_WaitForBusy:
  8681                           	callstack 0
  8682                           
  8683 ;; *************** function _CantaIR *****************
  8684 ;; Defined at:
  8685 ;;		line 180 in file "LcTLCD.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  IR              1    wreg     unsigned char 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;  IR              1    7[COMRAM] unsigned char 
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, status,2, status,0, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1
  8699 ;;      Params:         0       0       0
  8700 ;;      Locals:         1       0       0
  8701 ;;      Temps:          0       0       0
  8702 ;;      Totals:         1       0       0
  8703 ;;Total ram usage:        1 bytes
  8704 ;; Hardware stack levels used: 1
  8705 ;; Hardware stack levels required when called: 3
  8706 ;; This function calls:
  8707 ;;		_CantaPartAlta
  8708 ;;		_CantaPartBaixa
  8709 ;; This function is called by:
  8710 ;;		_LcInit
  8711 ;;		_LcClear
  8712 ;;		_LcGotoXY
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           	psect	text68
  8717  001A32                     __ptext68:
  8718                           	callstack 0
  8719  001A32                     _CantaIR:
  8720                           	callstack 25
  8721                           
  8722                           ;incstack = 0
  8723                           ;CantaIR@IR stored from wreg
  8724  001A32  6E6C               	movwf	CantaIR@IR^0,c
  8725                           
  8726                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8727  001A34  9694               	bcf	148,3,c	;volatile
  8728  001A36  9494               	bcf	148,2,c	;volatile
  8729  001A38  9294               	bcf	148,1,c	;volatile
  8730  001A3A  9094               	bcf	148,0,c	;volatile
  8731                           
  8732                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  8733  001A3C  9A8B               	bcf	139,5,c	;volatile
  8734                           
  8735                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  8736  001A3E  9E8C               	bcf	140,7,c	;volatile
  8737                           
  8738                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  8739  001A40  888B               	bsf	139,4,c	;volatile
  8740                           
  8741                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  8742  001A42  506C               	movf	CantaIR@IR^0,w,c
  8743  001A44  EC91  F00B         	call	_CantaPartAlta
  8744                           
  8745                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  8746  001A48  888B               	bsf	139,4,c	;volatile
  8747                           
  8748                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  8749  001A4A  988B               	bcf	139,4,c	;volatile
  8750                           
  8751                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  8752  001A4C  988B               	bcf	139,4,c	;volatile
  8753                           
  8754                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  8755  001A4E  888B               	bsf	139,4,c	;volatile
  8756                           
  8757                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  8758  001A50  506C               	movf	CantaIR@IR^0,w,c
  8759  001A52  EC5D  F00B         	call	_CantaPartBaixa
  8760                           
  8761                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  8762  001A56  888B               	bsf	139,4,c	;volatile
  8763                           
  8764                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  8765  001A58  988B               	bcf	139,4,c	;volatile
  8766                           
  8767                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8768  001A5A  8694               	bsf	148,3,c	;volatile
  8769  001A5C  8494               	bsf	148,2,c	;volatile
  8770  001A5E  8294               	bsf	148,1,c	;volatile
  8771  001A60  8094               	bsf	148,0,c	;volatile
  8772  001A62  0012               	return		;funcret
  8773  001A64                     __end_of_CantaIR:
  8774                           	callstack 0
  8775                           
  8776 ;; *************** function _CantaPartBaixa *****************
  8777 ;; Defined at:
  8778 ;;		line 173 in file "LcTLCD.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;  c               1    wreg     unsigned char 
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;  c               1    6[COMRAM] unsigned char 
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  1    wreg      void 
  8785 ;; Registers used:
  8786 ;;		wreg, status,2, status,0
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMRAM   BANK0   BANK1
  8792 ;;      Params:         0       0       0
  8793 ;;      Locals:         1       0       0
  8794 ;;      Temps:          1       0       0
  8795 ;;      Totals:         2       0       0
  8796 ;;Total ram usage:        2 bytes
  8797 ;; Hardware stack levels used: 1
  8798 ;; Hardware stack levels required when called: 2
  8799 ;; This function calls:
  8800 ;;		Nothing
  8801 ;; This function is called by:
  8802 ;;		_CantaIR
  8803 ;;		_CantaData
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           	psect	text69
  8808  0016BA                     __ptext69:
  8809                           	callstack 0
  8810  0016BA                     _CantaPartBaixa:
  8811                           	callstack 25
  8812                           
  8813                           ;incstack = 0
  8814                           ;CantaPartBaixa@c stored from wreg
  8815  0016BA  6E6B               	movwf	CantaPartBaixa@c^0,c
  8816                           
  8817                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  8818  0016BC  A66B               	btfss	CantaPartBaixa@c^0,3,c
  8819  0016BE  D003               	goto	u5120
  8820  0016C0  6A6A               	clrf	??_CantaPartBaixa^0,c
  8821  0016C2  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8822  0016C4  D001               	goto	u5138
  8823  0016C6                     u5120:
  8824  0016C6  6A6A               	clrf	??_CantaPartBaixa^0,c
  8825  0016C8                     u5138:
  8826  0016C8  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8827  0016CA  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8828  0016CC  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8829  0016CE  508B               	movf	139,w,c	;volatile
  8830  0016D0  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8831  0016D2  0BF7               	andlw	-9
  8832  0016D4  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8833  0016D6  6E8B               	movwf	139,c	;volatile
  8834                           
  8835                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  8836  0016D8  A46B               	btfss	CantaPartBaixa@c^0,2,c
  8837  0016DA  D003               	goto	u5140
  8838  0016DC  6A6A               	clrf	??_CantaPartBaixa^0,c
  8839  0016DE  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8840  0016E0  D001               	goto	u5158
  8841  0016E2                     u5140:
  8842  0016E2  6A6A               	clrf	??_CantaPartBaixa^0,c
  8843  0016E4                     u5158:
  8844  0016E4  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8845  0016E6  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8846  0016E8  508B               	movf	139,w,c	;volatile
  8847  0016EA  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8848  0016EC  0BFB               	andlw	-5
  8849  0016EE  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8850  0016F0  6E8B               	movwf	139,c	;volatile
  8851                           
  8852                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  8853  0016F2  A26B               	btfss	CantaPartBaixa@c^0,1,c
  8854  0016F4  D003               	goto	u5160
  8855  0016F6  6A6A               	clrf	??_CantaPartBaixa^0,c
  8856  0016F8  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8857  0016FA  D001               	goto	u5178
  8858  0016FC                     u5160:
  8859  0016FC  6A6A               	clrf	??_CantaPartBaixa^0,c
  8860  0016FE                     u5178:
  8861  0016FE  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8862  001700  508B               	movf	139,w,c	;volatile
  8863  001702  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8864  001704  0BFD               	andlw	-3
  8865  001706  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8866  001708  6E8B               	movwf	139,c	;volatile
  8867                           
  8868                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  8869  00170A  A06B               	btfss	CantaPartBaixa@c^0,0,c
  8870  00170C  D003               	goto	u5180
  8871  00170E  6A6A               	clrf	??_CantaPartBaixa^0,c
  8872  001710  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8873  001712  D001               	goto	u5198
  8874  001714                     u5180:
  8875  001714  6A6A               	clrf	??_CantaPartBaixa^0,c
  8876  001716                     u5198:
  8877  001716  508B               	movf	139,w,c	;volatile
  8878  001718  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8879  00171A  0BFE               	andlw	-2
  8880  00171C  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8881  00171E  6E8B               	movwf	139,c	;volatile
  8882  001720  0012               	return		;funcret
  8883  001722                     __end_of_CantaPartBaixa:
  8884                           	callstack 0
  8885                           
  8886 ;; *************** function _CantaPartAlta *****************
  8887 ;; Defined at:
  8888 ;;		line 166 in file "LcTLCD.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  c               1    wreg     unsigned char 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;  c               1    6[COMRAM] unsigned char 
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  1    wreg      void 
  8895 ;; Registers used:
  8896 ;;		wreg, status,2, status,0
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1
  8902 ;;      Params:         0       0       0
  8903 ;;      Locals:         1       0       0
  8904 ;;      Temps:          1       0       0
  8905 ;;      Totals:         2       0       0
  8906 ;;Total ram usage:        2 bytes
  8907 ;; Hardware stack levels used: 1
  8908 ;; Hardware stack levels required when called: 2
  8909 ;; This function calls:
  8910 ;;		Nothing
  8911 ;; This function is called by:
  8912 ;;		_CantaIR
  8913 ;;		_CantaData
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           	psect	text70
  8918  001722                     __ptext70:
  8919                           	callstack 0
  8920  001722                     _CantaPartAlta:
  8921                           	callstack 25
  8922                           
  8923                           ;incstack = 0
  8924                           ;CantaPartAlta@c stored from wreg
  8925  001722  6E6B               	movwf	CantaPartAlta@c^0,c
  8926                           
  8927                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  8928  001724  AE6B               	btfss	CantaPartAlta@c^0,7,c
  8929  001726  D003               	goto	u5040
  8930  001728  6A6A               	clrf	??_CantaPartAlta^0,c
  8931  00172A  2A6A               	incf	??_CantaPartAlta^0,f,c
  8932  00172C  D001               	goto	u5058
  8933  00172E                     u5040:
  8934  00172E  6A6A               	clrf	??_CantaPartAlta^0,c
  8935  001730                     u5058:
  8936  001730  466A               	rlncf	??_CantaPartAlta^0,f,c
  8937  001732  466A               	rlncf	??_CantaPartAlta^0,f,c
  8938  001734  466A               	rlncf	??_CantaPartAlta^0,f,c
  8939  001736  508B               	movf	139,w,c	;volatile
  8940  001738  186A               	xorwf	??_CantaPartAlta^0,w,c
  8941  00173A  0BF7               	andlw	-9
  8942  00173C  186A               	xorwf	??_CantaPartAlta^0,w,c
  8943  00173E  6E8B               	movwf	139,c	;volatile
  8944                           
  8945                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  8946  001740  AC6B               	btfss	CantaPartAlta@c^0,6,c
  8947  001742  D003               	goto	u5060
  8948  001744  6A6A               	clrf	??_CantaPartAlta^0,c
  8949  001746  2A6A               	incf	??_CantaPartAlta^0,f,c
  8950  001748  D001               	goto	u5078
  8951  00174A                     u5060:
  8952  00174A  6A6A               	clrf	??_CantaPartAlta^0,c
  8953  00174C                     u5078:
  8954  00174C  466A               	rlncf	??_CantaPartAlta^0,f,c
  8955  00174E  466A               	rlncf	??_CantaPartAlta^0,f,c
  8956  001750  508B               	movf	139,w,c	;volatile
  8957  001752  186A               	xorwf	??_CantaPartAlta^0,w,c
  8958  001754  0BFB               	andlw	-5
  8959  001756  186A               	xorwf	??_CantaPartAlta^0,w,c
  8960  001758  6E8B               	movwf	139,c	;volatile
  8961                           
  8962                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  8963  00175A  AA6B               	btfss	CantaPartAlta@c^0,5,c
  8964  00175C  D003               	goto	u5080
  8965  00175E  6A6A               	clrf	??_CantaPartAlta^0,c
  8966  001760  2A6A               	incf	??_CantaPartAlta^0,f,c
  8967  001762  D001               	goto	u5098
  8968  001764                     u5080:
  8969  001764  6A6A               	clrf	??_CantaPartAlta^0,c
  8970  001766                     u5098:
  8971  001766  466A               	rlncf	??_CantaPartAlta^0,f,c
  8972  001768  508B               	movf	139,w,c	;volatile
  8973  00176A  186A               	xorwf	??_CantaPartAlta^0,w,c
  8974  00176C  0BFD               	andlw	-3
  8975  00176E  186A               	xorwf	??_CantaPartAlta^0,w,c
  8976  001770  6E8B               	movwf	139,c	;volatile
  8977                           
  8978                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  8979  001772  A86B               	btfss	CantaPartAlta@c^0,4,c
  8980  001774  D003               	goto	u5100
  8981  001776  6A6A               	clrf	??_CantaPartAlta^0,c
  8982  001778  2A6A               	incf	??_CantaPartAlta^0,f,c
  8983  00177A  D001               	goto	u5118
  8984  00177C                     u5100:
  8985  00177C  6A6A               	clrf	??_CantaPartAlta^0,c
  8986  00177E                     u5118:
  8987  00177E  508B               	movf	139,w,c	;volatile
  8988  001780  186A               	xorwf	??_CantaPartAlta^0,w,c
  8989  001782  0BFE               	andlw	-2
  8990  001784  186A               	xorwf	??_CantaPartAlta^0,w,c
  8991  001786  6E8B               	movwf	139,c	;volatile
  8992  001788  0012               	return		;funcret
  8993  00178A                     __end_of_CantaPartAlta:
  8994                           	callstack 0
  8995                           
  8996 ;; *************** function _Espera *****************
  8997 ;; Defined at:
  8998 ;;		line 161 in file "LcTLCD.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;  Timer           1    wreg     unsigned char 
  9001 ;;  ms              2   12[COMRAM] int 
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;  Timer           1   15[COMRAM] unsigned char 
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  1    wreg      void 
  9006 ;; Registers used:
  9007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMRAM   BANK0   BANK1
  9013 ;;      Params:         2       0       0
  9014 ;;      Locals:         1       0       0
  9015 ;;      Temps:          1       0       0
  9016 ;;      Totals:         4       0       0
  9017 ;;Total ram usage:        4 bytes
  9018 ;; Hardware stack levels used: 1
  9019 ;; Hardware stack levels required when called: 3
  9020 ;; This function calls:
  9021 ;;		_TiGetTics
  9022 ;;		_TiResetTics
  9023 ;; This function is called by:
  9024 ;;		_LcInit
  9025 ;;		_LcClear
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	text71
  9030  001B32                     __ptext71:
  9031                           	callstack 0
  9032  001B32                     _Espera:
  9033                           	callstack 25
  9034                           
  9035                           ;incstack = 0
  9036                           ;Espera@Timer stored from wreg
  9037  001B32  6E74               	movwf	Espera@Timer^0,c
  9038                           
  9039                           ;LcTLCD.c: 162:  TiResetTics(Timer);
  9040  001B34  5074               	movf	Espera@Timer^0,w,c
  9041  001B36  ECDC  F00D         	call	_TiResetTics
  9042  001B3A                     l5552:
  9043  001B3A  5074               	movf	Espera@Timer^0,w,c
  9044  001B3C  EC5F  F00D         	call	_TiGetTics
  9045  001B40  5071               	movf	Espera@ms^0,w,c
  9046  001B42  5C6A               	subwf	?_TiGetTics^0,w,c
  9047  001B44  506B               	movf	(?_TiGetTics+1)^0,w,c
  9048  001B46  0A80               	xorlw	128
  9049  001B48  6E73               	movwf	??_Espera^0,c
  9050  001B4A  5072               	movf	(Espera@ms+1)^0,w,c
  9051  001B4C  0A80               	xorlw	128
  9052  001B4E  5873               	subwfb	??_Espera^0,w,c
  9053  001B50  B0D8               	btfsc	status,0,c
  9054  001B52  0012               	return	
  9055  001B54  D7F2               	goto	l5552
  9056  001B56                     __end_of_Espera:
  9057                           	callstack 0
  9058                           
  9059 ;; *************** function _TiResetTics *****************
  9060 ;; Defined at:
  9061 ;;		line 55 in file "TiTTimer.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  Handle          1    wreg     unsigned char 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  Handle          1    5[COMRAM] unsigned char 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      void 
  9068 ;; Registers used:
  9069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/1
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1
  9075 ;;      Params:         0       0       0
  9076 ;;      Locals:         1       0       0
  9077 ;;      Temps:          0       0       0
  9078 ;;      Totals:         1       0       0
  9079 ;;Total ram usage:        1 bytes
  9080 ;; Hardware stack levels used: 1
  9081 ;; Hardware stack levels required when called: 2
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_Espera
  9086 ;;		_WaitForBusy
  9087 ;;		_SMotor
  9088 ;;		_TeTeclat
  9089 ;;		_menu
  9090 ;;		_motorAltaveu
  9091 ;;		_GLCDMotor
  9092 ;;		_motorHora
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text72
  9097  001BB8                     __ptext72:
  9098                           	callstack 0
  9099  001BB8                     _TiResetTics:
  9100                           	callstack 25
  9101                           
  9102                           ;incstack = 0
  9103                           ;TiResetTics@Handle stored from wreg
  9104  001BB8  6E6A               	movwf	TiResetTics@Handle^0,c
  9105                           
  9106                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  9107  001BBA  506A               	movf	TiResetTics@Handle^0,w,c
  9108  001BBC  0D03               	mullw	3
  9109  001BBE  50F3               	movf	243,w,c
  9110  001BC0  0F80               	addlw	low _s_Timers
  9111  001BC2  6ED9               	movwf	fsr2l,c
  9112  001BC4  6ADA               	clrf	fsr2h,c
  9113  001BC6  C003  FFDE         	movff	_h_Tics,postinc2
  9114  001BCA  C004  FFDD         	movff	_h_Tics+1,postdec2
  9115  001BCE  0012               	return		;funcret
  9116  001BD0                     __end_of_TiResetTics:
  9117                           	callstack 0
  9118                           
  9119 ;; *************** function _TiGetTics *****************
  9120 ;; Defined at:
  9121 ;;		line 61 in file "TiTTimer.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;  Handle          1    wreg     unsigned char 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;  Handle          1    9[COMRAM] unsigned char 
  9126 ;;  actual          2   10[COMRAM] volatile unsigned int 
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  2    5[COMRAM] int 
  9129 ;; Registers used:
  9130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/1
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1
  9136 ;;      Params:         2       0       0
  9137 ;;      Locals:         3       0       0
  9138 ;;      Temps:          2       0       0
  9139 ;;      Totals:         7       0       0
  9140 ;;Total ram usage:        7 bytes
  9141 ;; Hardware stack levels used: 1
  9142 ;; Hardware stack levels required when called: 2
  9143 ;; This function calls:
  9144 ;;		Nothing
  9145 ;; This function is called by:
  9146 ;;		_Espera
  9147 ;;		_WaitForBusy
  9148 ;;		_SMotor
  9149 ;;		_TeTeclat
  9150 ;;		_menu
  9151 ;;		_motorAltaveu
  9152 ;;		_GLCDMotor
  9153 ;;		_motorHora
  9154 ;; This function uses a non-reentrant model
  9155 ;;
  9156                           
  9157                           	psect	text73
  9158  001ABE                     __ptext73:
  9159                           	callstack 0
  9160  001ABE                     _TiGetTics:
  9161                           	callstack 25
  9162                           
  9163                           ;incstack = 0
  9164                           ;TiGetTics@Handle stored from wreg
  9165  001ABE  6E6E               	movwf	TiGetTics@Handle^0,c
  9166                           
  9167                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  9168  001AC0  C003  F06F         	movff	_h_Tics,TiGetTics@actual	;volatile
  9169  001AC4  C004  F070         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  9170                           
  9171                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  9172  001AC8  506E               	movf	TiGetTics@Handle^0,w,c
  9173  001ACA  0D03               	mullw	3
  9174  001ACC  50F3               	movf	243,w,c
  9175  001ACE  0F80               	addlw	low _s_Timers
  9176  001AD0  6ED9               	movwf	fsr2l,c
  9177  001AD2  6ADA               	clrf	fsr2h,c
  9178  001AD4  CFDE F06C          	movff	postinc2,??_TiGetTics
  9179  001AD8  CFDD F06D          	movff	postdec2,??_TiGetTics+1
  9180  001ADC  506C               	movf	??_TiGetTics^0,w,c
  9181  001ADE  5C6F               	subwf	TiGetTics@actual^0,w,c	;volatile
  9182  001AE0  6E6A               	movwf	?_TiGetTics^0,c
  9183  001AE2  506D               	movf	(??_TiGetTics+1)^0,w,c
  9184  001AE4  5870               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  9185  001AE6  6E6B               	movwf	(?_TiGetTics+1)^0,c
  9186  001AE8  0012               	return		;funcret
  9187  001AEA                     __end_of_TiGetTics:
  9188                           	callstack 0
  9189                           
  9190 ;; *************** function _GLCDInit *****************
  9191 ;; Defined at:
  9192 ;;		line 26 in file "GestioLCD.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;		None
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;		None
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  1    wreg      void 
  9199 ;; Registers used:
  9200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMRAM   BANK0   BANK1
  9206 ;;      Params:         0       0       0
  9207 ;;      Locals:         0       0       0
  9208 ;;      Temps:          0       0       0
  9209 ;;      Totals:         0       0       0
  9210 ;;Total ram usage:        0 bytes
  9211 ;; Hardware stack levels used: 1
  9212 ;; Hardware stack levels required when called: 3
  9213 ;; This function calls:
  9214 ;;		_TiGetTimer
  9215 ;; This function is called by:
  9216 ;;		_main
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text74
  9221  001D00                     __ptext74:
  9222                           	callstack 0
  9223  001D00                     _GLCDInit:
  9224                           	callstack 27
  9225                           
  9226                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  9227                           
  9228                           ;incstack = 0
  9229  001D00  ECAC  F00C         	call	_TiGetTimer	;wreg free
  9230  001D04  6E19               	movwf	_timerGLCD^0,c
  9231  001D06  0012               	return		;funcret
  9232  001D08                     __end_of_GLCDInit:
  9233                           	callstack 0
  9234                           
  9235 ;; *************** function _TiGetTimer *****************
  9236 ;; Defined at:
  9237 ;;		line 70 in file "TiTTimer.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;		None
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;		None
  9242 ;; Return value:  Size  Location     Type
  9243 ;;                  1    wreg      unsigned char 
  9244 ;; Registers used:
  9245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9246 ;; Tracked objects:
  9247 ;;		On entry : 0/0
  9248 ;;		On exit  : 0/0
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMRAM   BANK0   BANK1
  9251 ;;      Params:         0       0       0
  9252 ;;      Locals:         0       0       0
  9253 ;;      Temps:          1       0       0
  9254 ;;      Totals:         1       0       0
  9255 ;;Total ram usage:        1 bytes
  9256 ;; Hardware stack levels used: 1
  9257 ;; Hardware stack levels required when called: 2
  9258 ;; This function calls:
  9259 ;;		Nothing
  9260 ;; This function is called by:
  9261 ;;		_LcInit
  9262 ;;		_Sinit
  9263 ;;		_TeInit
  9264 ;;		_Minit
  9265 ;;		_initAltaveu
  9266 ;;		_GLCDInit
  9267 ;;		_initHora
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           	psect	text75
  9272  001958                     __ptext75:
  9273                           	callstack 0
  9274  001958                     _TiGetTimer:
  9275                           	callstack 27
  9276                           
  9277                           ;TiTTimer.c: 74:     counter=0;
  9278                           
  9279                           ;incstack = 0
  9280  001958  0E00               	movlw	0
  9281  00195A  6E2A               	movwf	_counter^0,c
  9282                           
  9283                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9284  00195C  D007               	goto	l5598
  9285  00195E                     l5590:
  9286                           
  9287                           ;TiTTimer.c: 76:         counter++;
  9288  00195E  2A2A               	incf	_counter^0,f,c
  9289                           
  9290                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  9291  001960  0E08               	movlw	8
  9292  001962  182A               	xorwf	_counter^0,w,c
  9293  001964  A4D8               	btfss	status,2,c
  9294  001966  D002               	goto	l5598
  9295  001968  0EFF               	movlw	255
  9296  00196A  0012               	return	
  9297  00196C                     l5598:
  9298                           
  9299                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9300  00196C  502A               	movf	_counter^0,w,c
  9301  00196E  0D03               	mullw	3
  9302  001970  50F3               	movf	243,w,c
  9303  001972  0F82               	addlw	low (_s_Timers+2)
  9304  001974  6ED9               	movwf	fsr2l,c
  9305  001976  6ADA               	clrf	fsr2h,c
  9306  001978  04DE               	decf	postinc2,w,c
  9307  00197A  B4D8               	btfsc	status,2,c
  9308  00197C  D7F0               	goto	l5590
  9309                           
  9310                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  9311  00197E  502A               	movf	_counter^0,w,c
  9312  001980  0D03               	mullw	3
  9313  001982  50F3               	movf	243,w,c
  9314  001984  0F82               	addlw	low (_s_Timers+2)
  9315  001986  6ED9               	movwf	fsr2l,c
  9316  001988  6ADA               	clrf	fsr2h,c
  9317  00198A  0E01               	movlw	1
  9318  00198C  6EDF               	movwf	indf2,c
  9319                           
  9320                           ;TiTTimer.c: 80:     return (counter);
  9321  00198E  502A               	movf	_counter^0,w,c
  9322  001990  0012               	return		;funcret
  9323  001992                     __end_of_TiGetTimer:
  9324                           	callstack 0
  9325                           
  9326 ;; *************** function _high_rsi *****************
  9327 ;; Defined at:
  9328 ;;		line 21 in file "main.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;		None
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;		None
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      void 
  9335 ;; Registers used:
  9336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1
  9342 ;;      Params:         0       0       0
  9343 ;;      Locals:         0       0       0
  9344 ;;      Temps:          4       0       0
  9345 ;;      Totals:         4       0       0
  9346 ;;Total ram usage:        4 bytes
  9347 ;; Hardware stack levels used: 1
  9348 ;; Hardware stack levels required when called: 1
  9349 ;; This function calls:
  9350 ;;		__TiRSITimer
  9351 ;; This function is called by:
  9352 ;;		Interrupt level 2
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           	psect	intcode
  9357  000008                     __pintcode:
  9358                           	callstack 0
  9359  000008                     _high_rsi:
  9360                           	callstack 24
  9361                           
  9362                           ;incstack = 0
  9363  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9364  00000A  CFD9 F066          	movff	fsr2l,??_high_rsi
  9365  00000E  CFDA F067          	movff	fsr2h,??_high_rsi+1
  9366  000012  CFF3 F068          	movff	prodl,??_high_rsi+2
  9367  000016  CFF4 F069          	movff	prodh,??_high_rsi+3
  9368  00001A  ECF4  F00B         	call	__TiRSITimer	;wreg free
  9369  00001E  C069  FFF4         	movff	??_high_rsi+3,prodh
  9370  000022  C068  FFF3         	movff	??_high_rsi+2,prodl
  9371  000026  C067  FFDA         	movff	??_high_rsi+1,fsr2h
  9372  00002A  C066  FFD9         	movff	??_high_rsi,fsr2l
  9373  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9374  000030  0011               	retfie		f
  9375  000032                     __end_of_high_rsi:
  9376                           	callstack 0
  9377                           
  9378 ;; *************** function __TiRSITimer *****************
  9379 ;; Defined at:
  9380 ;;		line 37 in file "TiTTimer.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;		None
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;		None
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  1    wreg      void 
  9387 ;; Registers used:
  9388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMRAM   BANK0   BANK1
  9394 ;;      Params:         0       0       0
  9395 ;;      Locals:         0       0       0
  9396 ;;      Temps:          1       0       0
  9397 ;;      Totals:         1       0       0
  9398 ;;Total ram usage:        1 bytes
  9399 ;; Hardware stack levels used: 1
  9400 ;; This function calls:
  9401 ;;		Nothing
  9402 ;; This function is called by:
  9403 ;;		_high_rsi
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           	psect	text77
  9408  0017E8                     __ptext77:
  9409                           	callstack 0
  9410  0017E8                     __TiRSITimer:
  9411                           	callstack 24
  9412                           
  9413                           ;TiTTimer.c: 39:     TMR0H = 223;
  9414                           
  9415                           ;incstack = 0
  9416  0017E8  0EDF               	movlw	223
  9417  0017EA  6ED7               	movwf	215,c	;volatile
  9418                           
  9419                           ;TiTTimer.c: 40:     TMR0L = 148;
  9420  0017EC  0E94               	movlw	148
  9421  0017EE  6ED6               	movwf	214,c	;volatile
  9422                           
  9423                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  9424  0017F0  94F2               	bcf	242,2,c	;volatile
  9425                           
  9426                           ;TiTTimer.c: 42:     h_Tics++;
  9427  0017F2  4A03               	infsnz	_h_Tics^0,f,c
  9428  0017F4  2A04               	incf	(_h_Tics+1)^0,f,c
  9429                           
  9430                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  9431  0017F6  0E48               	movlw	72
  9432  0017F8  5C03               	subwf	_h_Tics^0,w,c
  9433  0017FA  0EEE               	movlw	238
  9434  0017FC  5804               	subwfb	(_h_Tics+1)^0,w,c
  9435  0017FE  A0D8               	btfss	status,0,c
  9436  001800  0012               	return	
  9437                           
  9438                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  9439  001802  0E00               	movlw	0
  9440  001804  6E2A               	movwf	_counter^0,c
  9441  001806                     i2l4084:
  9442  001806  0E07               	movlw	7
  9443  001808  642A               	cpfsgt	_counter^0,c
  9444  00180A  D001               	goto	i2l4088
  9445  00180C  D015               	goto	i2l4096
  9446  00180E                     i2l4088:
  9447                           
  9448                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  9449  00180E  502A               	movf	_counter^0,w,c
  9450  001810  0D03               	mullw	3
  9451  001812  50F3               	movf	243,w,c
  9452  001814  0F82               	addlw	low (_s_Timers+2)
  9453  001816  6ED9               	movwf	fsr2l,c
  9454  001818  6ADA               	clrf	fsr2h,c
  9455  00181A  04DE               	decf	postinc2,w,c
  9456  00181C  A4D8               	btfss	status,2,c
  9457  00181E  D00A               	goto	i2l4092
  9458                           
  9459                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  9460  001820  502A               	movf	_counter^0,w,c
  9461  001822  0D03               	mullw	3
  9462  001824  50F3               	movf	243,w,c
  9463  001826  0F80               	addlw	low _s_Timers
  9464  001828  6ED9               	movwf	fsr2l,c
  9465  00182A  6ADA               	clrf	fsr2h,c
  9466  00182C  5003               	movf	_h_Tics^0,w,c
  9467  00182E  5EDE               	subwf	postinc2,f,c
  9468  001830  5004               	movf	(_h_Tics+1)^0,w,c
  9469  001832  5ADD               	subwfb	postdec2,f,c
  9470  001834                     i2l4092:
  9471                           
  9472                           ;TiTTimer.c: 50:         }
  9473  001834  2A2A               	incf	_counter^0,f,c
  9474  001836  D7E7               	goto	i2l4084
  9475  001838                     i2l4096:
  9476                           
  9477                           ;TiTTimer.c: 51:         h_Tics=0;
  9478  001838  0E00               	movlw	0
  9479  00183A  6E04               	movwf	(_h_Tics+1)^0,c
  9480  00183C  0E00               	movlw	0
  9481  00183E  6E03               	movwf	_h_Tics^0,c
  9482  001840  0012               	return		;funcret
  9483  001842                     __end_of__TiRSITimer:
  9484                           	callstack 0
  9485                           
  9486                           	psect	rparam
  9487  0000                     
  9488                           	psect	temp
  9489  00007A                     btemp:
  9490                           	callstack 0
  9491  00007A                     	ds	1
  9492  0000                     int$flags	set	btemp
  9493  0000                     wtemp8	set	btemp+1
  9494  0000                     ttemp5	set	btemp+1
  9495  0000                     ttemp6	set	btemp+4
  9496  0000                     ttemp7	set	btemp+8
  9497                           
  9498                           	psect	idloc
  9499                           
  9500                           ;Config register IDLOC0 @ 0x200000
  9501                           ;	unspecified, using default values
  9502  200000                     	org	2097152
  9503  200000  FF                 	db	255
  9504                           
  9505                           ;Config register IDLOC1 @ 0x200001
  9506                           ;	unspecified, using default values
  9507  200001                     	org	2097153
  9508  200001  FF                 	db	255
  9509                           
  9510                           ;Config register IDLOC2 @ 0x200002
  9511                           ;	unspecified, using default values
  9512  200002                     	org	2097154
  9513  200002  FF                 	db	255
  9514                           
  9515                           ;Config register IDLOC3 @ 0x200003
  9516                           ;	unspecified, using default values
  9517  200003                     	org	2097155
  9518  200003  FF                 	db	255
  9519                           
  9520                           ;Config register IDLOC4 @ 0x200004
  9521                           ;	unspecified, using default values
  9522  200004                     	org	2097156
  9523  200004  FF                 	db	255
  9524                           
  9525                           ;Config register IDLOC5 @ 0x200005
  9526                           ;	unspecified, using default values
  9527  200005                     	org	2097157
  9528  200005  FF                 	db	255
  9529                           
  9530                           ;Config register IDLOC6 @ 0x200006
  9531                           ;	unspecified, using default values
  9532  200006                     	org	2097158
  9533  200006  FF                 	db	255
  9534                           
  9535                           ;Config register IDLOC7 @ 0x200007
  9536                           ;	unspecified, using default values
  9537  200007                     	org	2097159
  9538  200007  FF                 	db	255
  9539                           
  9540                           	psect	config
  9541                           
  9542                           ; Padding undefined space
  9543  300000                     	org	3145728
  9544  300000  FF                 	db	255
  9545                           
  9546                           ;Config register CONFIG1H @ 0x300001
  9547                           ;	Oscillator
  9548                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  9549                           ;	Fail-Safe Clock Monitor Enable bit
  9550                           ;	FCMEN = 0x0, unprogrammed default
  9551                           ;	Internal/External Oscillator Switchover bit
  9552                           ;	IESO = 0x0, unprogrammed default
  9553  300001                     	org	3145729
  9554  300001  06                 	db	6
  9555                           
  9556                           ;Config register CONFIG2L @ 0x300002
  9557                           ;	unspecified, using default values
  9558                           ;	Power-up Timer Enable bit
  9559                           ;	PWRT = 0x1, unprogrammed default
  9560                           ;	Brown-out Reset Enable bits
  9561                           ;	BOR = 0x3, unprogrammed default
  9562                           ;	Brown-out Reset Voltage bits
  9563                           ;	BORV = 0x3, unprogrammed default
  9564  300002                     	org	3145730
  9565  300002  1F                 	db	31
  9566                           
  9567                           ;Config register CONFIG2H @ 0x300003
  9568                           ;	Watchdog Timer Enable bit
  9569                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9570                           ;	Watchdog Timer Postscale Select bits
  9571                           ;	WDTPS = 0xF, unprogrammed default
  9572  300003                     	org	3145731
  9573  300003  1E                 	db	30
  9574                           
  9575                           ; Padding undefined space
  9576  300004                     	org	3145732
  9577  300004  FF                 	db	255
  9578                           
  9579                           ;Config register CONFIG3H @ 0x300005
  9580                           ;	CCP2 MUX bit
  9581                           ;	CCP2MX = 0x1, unprogrammed default
  9582                           ;	PORTB A/D Enable bit
  9583                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  9584                           ;	Low-Power Timer1 Oscillator Enable bit
  9585                           ;	LPT1OSC = 0x0, unprogrammed default
  9586                           ;	MCLR Pin Enable bit
  9587                           ;	MCLRE = 0x1, unprogrammed default
  9588  300005                     	org	3145733
  9589  300005  81                 	db	129
  9590                           
  9591                           ;Config register CONFIG4L @ 0x300006
  9592                           ;	Stack Full/Underflow Reset Enable bit
  9593                           ;	STVREN = 0x1, unprogrammed default
  9594                           ;	Single-Supply ICSP Enable bit
  9595                           ;	LVP = OFF, Single-Supply ICSP disabled
  9596                           ;	Boot Block Size Select bits
  9597                           ;	BBSIZ = 0x0, unprogrammed default
  9598                           ;	Extended Instruction Set Enable bit
  9599                           ;	XINST = 0x0, unprogrammed default
  9600                           ;	Background Debugger Enable bit
  9601                           ;	DEBUG = 0x1, unprogrammed default
  9602  300006                     	org	3145734
  9603  300006  81                 	db	129
  9604                           
  9605                           ; Padding undefined space
  9606  300007                     	org	3145735
  9607  300007  FF                 	db	255
  9608                           
  9609                           ;Config register CONFIG5L @ 0x300008
  9610                           ;	unspecified, using default values
  9611                           ;	Code Protection bit
  9612                           ;	CP0 = 0x1, unprogrammed default
  9613                           ;	Code Protection bit
  9614                           ;	CP1 = 0x1, unprogrammed default
  9615  300008                     	org	3145736
  9616  300008  03                 	db	3
  9617                           
  9618                           ;Config register CONFIG5H @ 0x300009
  9619                           ;	unspecified, using default values
  9620                           ;	Boot Block Code Protection bitProtect Boot
  9621                           ;	CPB = 0x1, unprogrammed default
  9622                           ;	Data EEPROM Code Protection bit
  9623                           ;	CPD = 0x1, unprogrammed default
  9624  300009                     	org	3145737
  9625  300009  C0                 	db	192
  9626                           
  9627                           ;Config register CONFIG6L @ 0x30000A
  9628                           ;	unspecified, using default values
  9629                           ;	Write Protection bit
  9630                           ;	WRT0 = 0x1, unprogrammed default
  9631                           ;	Write Protection bit
  9632                           ;	WRT1 = 0x1, unprogrammed default
  9633  30000A                     	org	3145738
  9634  30000A  03                 	db	3
  9635                           
  9636                           ;Config register CONFIG6H @ 0x30000B
  9637                           ;	unspecified, using default values
  9638                           ;	Configuration Register Write Protection bit
  9639                           ;	WRTC = 0x1, unprogrammed default
  9640                           ;	Boot Block Write Protection bit
  9641                           ;	WRTB = 0x1, unprogrammed default
  9642                           ;	Data EEPROM Write Protection bit
  9643                           ;	WRTD = 0x1, unprogrammed default
  9644  30000B                     	org	3145739
  9645  30000B  E0                 	db	224
  9646                           
  9647                           ;Config register CONFIG7L @ 0x30000C
  9648                           ;	unspecified, using default values
  9649                           ;	Table Read Protection bit
  9650                           ;	EBTR0 = 0x1, unprogrammed default
  9651                           ;	Table Read Protection bit
  9652                           ;	EBTR1 = 0x1, unprogrammed default
  9653  30000C                     	org	3145740
  9654  30000C  03                 	db	3
  9655                           
  9656                           ;Config register CONFIG7H @ 0x30000D
  9657                           ;	unspecified, using default values
  9658                           ;	Boot Block Table Read Protection bit
  9659                           ;	EBTRB = 0x1, unprogrammed default
  9660  30000D                     	org	3145741
  9661  30000D  40                 	db	64
  9662                           tosu	equ	0xFFF
  9663                           tosh	equ	0xFFE
  9664                           tosl	equ	0xFFD
  9665                           stkptr	equ	0xFFC
  9666                           pclatu	equ	0xFFB
  9667                           pclath	equ	0xFFA
  9668                           pcl	equ	0xFF9
  9669                           tblptru	equ	0xFF8
  9670                           tblptrh	equ	0xFF7
  9671                           tblptrl	equ	0xFF6
  9672                           tablat	equ	0xFF5
  9673                           prodh	equ	0xFF4
  9674                           prodl	equ	0xFF3
  9675                           indf0	equ	0xFEF
  9676                           postinc0	equ	0xFEE
  9677                           postdec0	equ	0xFED
  9678                           preinc0	equ	0xFEC
  9679                           plusw0	equ	0xFEB
  9680                           fsr0h	equ	0xFEA
  9681                           fsr0l	equ	0xFE9
  9682                           wreg	equ	0xFE8
  9683                           indf1	equ	0xFE7
  9684                           postinc1	equ	0xFE6
  9685                           postdec1	equ	0xFE5
  9686                           preinc1	equ	0xFE4
  9687                           plusw1	equ	0xFE3
  9688                           fsr1h	equ	0xFE2
  9689                           fsr1l	equ	0xFE1
  9690                           bsr	equ	0xFE0
  9691                           indf2	equ	0xFDF
  9692                           postinc2	equ	0xFDE
  9693                           postdec2	equ	0xFDD
  9694                           preinc2	equ	0xFDC
  9695                           plusw2	equ	0xFDB
  9696                           fsr2h	equ	0xFDA
  9697                           fsr2l	equ	0xFD9
  9698                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    145
    Data        64
    BSS         284
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     19     121
    BANK0           128      3      67
    BANK1           256      0     184

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _motorSIO->_UgetUserName
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcGotoXY
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcGotoXY
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_GLCDMotor
    _main->_LcInit
    _main->_menu
    _menu->_LcPutChar
    _LcLCD->_LcPutChar
    _GLCDMotor->_LcPutChar

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   25240
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0      22
                                              8 COMRAM     2     2      0
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    2798
                                              0 BANK0      2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _SIOJugant
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      96
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      96
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    9035
                                              1 BANK0      2     2      0
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                            _JUsuari
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _NoFerMenu
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JUsuari                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     140
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0     111
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2366
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1567
                                             16 COMRAM     1     0      1
                                              0 BANK0      3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    8369
                                              1 BANK0      2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2366
                                              0 BANK0      1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2     858
                                              8 COMRAM     2     0      2
                           _HGetTime (ARG)
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3154
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcGotoXY                                             6     5      1    1895
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0     130
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (3) _CantaIR                                              1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (4) _CantaPartBaixa                                       2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _CantaPartAlta                                        2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     819
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      65
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _HGetTime (ARG)
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JUsuari
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _NoFerMenu
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIOJugant
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
   _motorSIO
     _UgetUserName

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      3      43       4       52.3%
BITCOMRAM           7E      0       2       0        1.6%
COMRAM              7E     13      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     174       7        0.0%
DATA                 0      0     174       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed May 04 13:46:39 2022

               TiResetTics@Handle 006A                  _loginNOTRegister 03CB  
                               _i 0020                                 _j 001F  
                UgetUserName@quin 006C         ??_UcheckExistsNotFinished 006A  
          __end_of_compareStrings 18DE                               l820 07E0  
                             l660 1496                               l708 1A82  
                             l901 1186                               l653 1454  
                             l645 1432                               l655 145A  
                             l639 1B06                               l487 0326  
                             l832 0878                               l648 1440  
                             l680 0D22                               l681 0D32  
                             l850 0A24                               l658 1490  
                             l683 0D3E                               l739 12C0  
                             l852 0A54                               l890 1108  
                             l892 112C                               l897 11BE  
                             l889 10EE                               l898 1148  
                             l899 1162                               _tmp 0029  
                ??_CantaPartBaixa 006A                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 005B  
              __size_of_GLCDMotor 03D8                              l4000 18B6  
                            l2048 1C4C                              l2080 1C34  
                            l2410 1450                              l2068 1C40  
                            l4104 19AE                              l2440 14D2  
                            l2192 1A68                              l4108 19B6  
                            l4400 10A4                              l2706 119E  
                            l4410 10C0                              l2716 11A2  
                            l6100 0402                              l6012 02DE  
                            l2654 1120                              l2646 1104  
                            l6110 042A                              l6102 0408  
                            l6030 031A                              l6022 0302  
                            l6006 02CA                              l4350 1000  
                            l6112 0430                              l4360 101C  
                            l6210 0516                              l6050 036C  
                            l6042 0344                              l2692 117A  
                            l2684 115E                              l2668 1144  
                            l6116 043A                              l6060 038C  
                            l6028 0314                              l4380 106A  
                            l6070 03B4                              l4390 1080  
                            l4382 1070                              l6240 0578  
                            l6224 0544                              l6152 04A0  
                            l6128 0452                              l6400 1324  
                            l4376 1060                              l4368 103C  
                            l3906 1C7C                              l6322 0658  
                            l6306 062E                              l6170 04AC  
                            l6146 0482                              l6074 03BE  
                            l6058 0386                              l6420 074E  
                            l4900 0D74                              l3932 1C58  
                            l6252 05B6                              l6068 03AE  
                            l6412 1350                              l5526 18F0  
                            l6430 0784                              l4910 0D88  
                            l6334 066C                              l6318 064E  
                            l6238 0572                              l6190 04D6  
                            l6182 04C4                              l6158 04A6  
                            l6086 03D6                              l5552 1B3A  
                            l6600 0AA4                              l4904 0D78  
                            l6352 06A6                              l6344 0690  
                            l6272 05E8                              l6248 059E  
                            l6360 06B2                              l6514 08D8  
                            l6450 07EE                              l4922 0DD4  
                            l6290 060E                              l5644 188C  
                            l5636 1872                              l6540 096E  
                            l6524 0924                              l6508 08B2  
                            l6444 07BE                              l6436 0792  
                            l5812 0C6C                              l5804 0C4E  
                            l5740 0B6E                              l5724 0B3A  
                            l5716 0B26                              l4908 0D82  
                            l5590 195E                              l5558 192E  
                            l5638 187C                              l6534 095E  
                            l6518 08FA                              l6606 0AC8  
                            l5662 1202                              l5742 0B74  
                            l6630 0F04                              l6622 0EEE  
                            l4926 0DE6                              l6198 04E8  
                            l5910 13AE                              l5902 139C  
                            l6472 0854                              l6464 0846  
                            l5816 0C70                              l5752 0B9E  
                            l6624 0EF2                              l6616 0EDE  
                            l6392 12F6                              l6384 12E6  
                            l6376 12D2                              l6570 0A2E  
                            l6562 09FE                              l6554 09CE  
                            l5842 0CB8                              l5834 0C9E  
                            l5770 0BDC                              l6650 0F38  
                            l3994 189A                              l4954 0E64  
                            l4938 0E3E                              l4890 0D38  
                            l4962 0E70                              l6378 12D8  
                            l5930 13F4                              l5922 13E0  
                            l5852 0CD0                              l5828 0C94  
                            l5764 0BC4                              l6660 0F52  
                            l6644 0F22                              l6628 0EFE  
                            l4948 0E56                              l5908 13A8  
                            l5598 196C                              l6590 0A6A  
                            l6478 0868                              l6670 0F8E  
                            l6638 0F14                              l4894 0D48  
                            l5950 14DE                              l6726 168C  
                            l5848 0CC8                              l5792 0C22  
                            l5784 0C0E                              l5872 0CE4  
                            l6680 0FA4                              l6664 0F5E  
                            l6656 0F46                              l6586 0A62  
                            l6578 0A4E                              l5778 0BF8  
                            l6690 0FBC                              l5938 1402  
                            l6596 0A7E                              l5796 0C2E  
                            l6684 0FB0                              l6676 0F9C  
                            l5972 151E                              l5966 1510  
                            l5894 1388                              l5888 1376  
                            l5978 152C                              l5994 153C  
                            l5998 1542                              STR_1 02BF  
                            STR_2 02B8                              STR_3 02AF  
                            STR_4 02A2                              STR_5 0292  
                            u3040 18C2                              _LATD 000F8C  
                            u5100 177C                              u5040 172E  
                            u5120 16C6                              u5060 174A  
                            u5140 16E2                              u5300 15AC  
                            u6020 03E6                              u5118 177E  
                            u6110 0496                              u5080 1764  
                            u5160 16FC                              u5320 15C4  
                            u6120 0498                              u5058 1730  
                            u5138 16C8                              u5410 17AE  
                            u4370 0D42                              u5180 1714  
                            u5260 1576                              u5420 17D6  
                            u5078 174C                              u5158 16E4  
                            u5318 15AE                              u5510 0B92  
                            u5280 1592                              u5417 17A4  
                            u5098 1766                              u5178 16FE  
                            u5338 15C6                              u6090 0462  
                            u5427 17CC                              u5198 1716  
                            u5278 1578                              u5390 12B2  
                            u5710 0CA6                              u5630 0C3E  
                            u5720 0CC0                              u6610 084E  
                            u5298 1594                              u6540 078E  
                            u5590 0C08                              u6640 0870  
                            u6900 0EA4                              u6910 0EAE  
                            u6920 0EBE                              u6930 0ECE  
                            u6916 0EB0                              u6908 0EA6  
                            u6926 0EC0                              u6936 0ED0  
                 ??_SsetNovaTecla 006A            __end_of_SIOcheckKrebut 1C38  
                            _cap1 03C4                              _Rows 0036  
                            _cap2 03C3                              _main 164A  
                            _hora 005F                              _menu 02C8  
                            _nota 001D                   __end_of_HJugant 1D1C  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 007A                   __end_of_JJuguem 1CB8  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 1B32                              start 0032  
                 __end_of_CantaIR 1A64                   __end_of_JUsuari 1D40  
                    ?_initAltaveu 0065                     LcInit@columns 0075  
                    ___param_bank 000000                  __end_of_GLCDInit 1D08  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 1D20  
                     Espera@Timer 0074                             ?_main 0065  
         __size_of_escriureEEPROM 002E                             ?_menu 0065  
                           _EEADR 000FA9                     ??_TiInitTimer 006A  
                           _T0CON 000FD5                   ?_compareStrings 006A  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 178A  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 0065                             _TXREG 000FAD  
                           _SMSon 1D08                             _TXSTA 000FAC  
                     _MNovaLletra 1CE8                             _Minit 1CF0  
                __end_of_HGetTime 1D20                             _Sinit 1CE0  
                           _Timer 0032                             _Uinit 1428  
                           _rebut 0008                             _s_ptr 0005  
                           _nou_s 03CD             __end_of_JoystickMotor 11D8  
              __size_of_SIOJugant 000C                   _HActualitzaHora 19CA  
     __size_of_escriureCharEEPROM 0024                    __pbitbssCOMRAM 03C0  
                           tablat 000FF5                       _LcNewString 1C68  
                   ??_TiResetTics 006A                   ?_SIOcheckKrebut 0065  
                           ttemp5 007B                             ttemp6 007E  
                           ttemp7 0082                             status 000FD8  
                           wtemp8 007B     __size_of_UcheckExistsGetError 0008  
              __size_of_HNouSegon 000C                  __end_of_LcGotoXY 1958  
                __end_of_LcLliure 1C80                     ??__TiRSITimer 0065  
                      _TiGetTimer 1958           EscriuPrimeraOrdre@ordre 006B  
                 __initialization 15D4                __size_of_CantaData 0032  
                    __end_of_main 16BA            __end_of_HClearNouSegon 1D24  
                    __end_of_menu 074C             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 0065                 __end_of_GLCDMotor 0B24  
                __end_of_TeTeclat 0FFE                     _indexNextUser 0022  
                          ??_main 0078                            ??_menu 00C1  
              __size_of_LcPutChar 0056                     __activetblptr 000002  
                   _ultimaTeclaAD 000F            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 0011                  GLCDMotor@length2 0010  
                      _JnovaTecla 1CA0                            ?_LcLCD 0065  
                          ?_SMSon 0065                            ?_Minit 0065  
                          ?_Sinit 0065                            ?_Uinit 0065  
              __size_of_NoFerMenu 0004                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
             __end_of_TiInitTimer 19CA                            _ADRESH 000FC4  
                          _EEDATA 000FA8                         ??_HJugant 006A  
                          _EECON2 000FA7                __size_of_URegister 0004  
              __size_of_HnoJugant 0004                         ??_JJuguem 006A  
              __size_of_SiFerMenu 0004          ??_escriure2usuarisStruct 006A  
                       ??_LcClear 0078                         ??_CantaIR 006C  
                          i2l4092 1834                            i2l4084 1806  
                          i2l4096 1838                            i2l4088 180E  
                  LcGotoXY@Fisics 0073                    LcGotoXY@Column 0077  
                       ??_JUsuari 006A                     ??_WaitForBusy 0071  
              __size_of_TiGetTics 002C                            _SPBRGH 000FB0  
                  _sumaPulsacions 0031                            _SMSoff 1D0E  
              SIONovaDireccio@num 006A                            _LcInit 11D8  
                    _MNouJoystick 1CF8                    _UgetNumUsuaris 1D28  
                          _SMotor 0B24               escriureCharEEPROM@c 006B  
                          _TeInit 1CD8                            _Espera 1B32  
                    _LcGotoXY$336 0075                            _Krebut 03C0  
                          _RowAct 0034               __end_of_TiResetTics 1BD0  
                          Uinit@i 006C                            Uinit@j 006D  
                __end_of_high_rsi 0032                            _h_Tics 0003  
                 ?_HClearNouSegon 0065                  __end_of_initHora 1CC0  
                          _borram 03C8                 __end_of_SIOJugant 1C44  
             __end_of__TiRSITimer 1842                  __end_of_menuList 0292  
                          clear_0 161A                            clear_1 1626  
                          clear_2 1636                            _jugant 03C2  
                          _segons 000C                        _UenviaChar 1C1C  
                          isa$std 000001                        UenviaPas@c 006B  
     __size_of_EscriuPrimeraOrdre 007A                 __end_of_HNouSegon 1C50  
                    __pdataCOMRAM 0044            __size_of_CantaPartAlta 0068  
                __end_of_motorSIO 10EC                __size_of_UenviaPas 0010  
         __end_of_HActualitzaHora 1A00                 ??_SIONovaDireccio 006A  
                __end_of_motorJoc 1428                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentUsrIndex 0024  
               __end_of_CantaData 1A32                      TeTeclat@cols 002C  
                       ?_GLCDInit 0065                     ?_UcheckExists 0065  
                      __accesstop 0080           __end_of__initialization 163C  
          __end_of_UgetNumUsuaris 1D2C                 __end_of_LcPutChar 1898  
                   _JnovaDireccio 1CA8                  JnovaDireccio@dir 006A  
                   ___rparam_used 000001                     __end_of_LcLCD 17E8  
                     ?_TiGetTimer 0065                     __end_of_SMSon 1D0E  
               SIONovaTecla@tecla 006A                    __pcstackCOMRAM 0065  
                   __end_of_Minit 1CF8               __end_of_WaitForBusy 191E  
                   __end_of_Sinit 1CE8                     __end_of_Uinit 14DC  
               __end_of_NoFerMenu 1D3C                         ?_HGetTime 006A  
                    __pidataBANK0 1B98              __size_of_initAltaveu 0008  
               __end_of_URegister 1D34                 __end_of_HnoJugant 1D18  
               __end_of_SiFerMenu 1D38                    _escriureEEPROM 1A64  
               __end_of_TiGetTics 1AEA                       _TiInitTimer 1992  
                     ?_JnovaTecla 0065                           ??_LcLCD 0078  
                         ??_SMSon 006A                         ?_LcGotoXY 0072  
                       ?_LcLliure 0065                           ??_Minit 006B  
                         ??_Sinit 006B                   JnovaTecla@tecla 006A  
                         ??_Uinit 006A              __size_of_init_eusart 0016  
                  ??_UcheckExists 006A               MNouJoystick@posicio 006A  
                      ??_GLCDInit 006B           __size_of_GLCDMostraMenu 000C  
                      __pbssBANK0 0080                        __pbssBANK1 0100  
 __size_of_escriure2usuarisStruct 002C                         ?_TeTeclat 0065  
                     _TiResetTics 1BB8                   ?_UgetNumUsuaris 0065  
                  ?_JnovaDireccio 0065                     ??_UmotorUsers 006F  
                   ?_JoystickInit 0065                           ?_SMSoff 0065  
                         ?_LcInit 0075                     _CantaPartAlta 1722  
                         ?_SMotor 0065                           ?_TeInit 0065  
                         ?_Espera 0071                 __end_of_UenviaPas 1C1C  
                     __TiRSITimer 17E8               _indexNextUserStruct 0021  
                      ??_HGetTime 006C                     ?_UgetUserName 006A  
                ??_compareStrings 006D            __end_of_escriureEEPROM 1A92  
                         _BAUDCON 000FB8                       ?_UenviaChar 006A  
            __size_of_playAltaveu 0004                __size_of_motorHora 007E  
          __size_of_MsetNovaTecla 0008                           LcInit@i 00C1  
                ?_HActualitzaHora 006A                        ??_LcGotoXY 0073  
                    ?_MNovaLletra 0065                        ??_LcLliure 006A  
                ??_SIOcheckKrebut 006A               __size_of_TiGetTimer 003A  
                         _HJugant 1D18                         ?_high_rsi 0065  
                         _JJuguem 1CB0                           _LcClear 1B0E  
                         _CantaIR 1A32                      ?_LcNewString 006D  
                  ??_JoystickInit 006A                           _JUsuari 1D3C  
                       ?_initHora 0065                        ??_TeTeclat 0071  
                     _WaitForBusy 18DE                    ?_CantaPartAlta 0065  
                         _Columns 0035             __end_of_SsetNovaTecla 1CD0  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00E6  
                         __Hparam 0000                   __size_of_SMotor 01FC  
             __size_of_JnovaTecla 0008                   __size_of_TeInit 0008  
                 __size_of_Espera 0024                           __Lparam 0000  
                       ?_motorSIO 0065                         ?_motorJoc 0065  
                  ??_UgetUserName 006C               __end_of_UmotorUsers 0E9A  
        ?_UcheckExistsNotFinished 0065                   ?_escriureEEPROM 0065  
                   ?_motorAltaveu 0065                      __psmallconst 0200  
          _escriure2usuarisStruct 1A92                           __pcinit 15D4  
    __end_of_UcheckExistsGetError 1CA0                           _ferMenu 03C6  
                      _init_ports 1B78                           __ramtop 0200  
                         __ptext0 164A                           __ptext1 0FFE  
                         __ptext2 1374                           __ptext3 1C2C  
                         __ptext4 1C80                           __ptext5 1C88  
                         __ptext6 1C90                           __ptext7 1C38  
                         __ptext8 1D14                           __ptext9 1C44  
                       _T0CONbits 000FD5                         _GLCDMotor 074C  
                       CantaIR@IR 006C                           _counter 002A  
                         _horaTmp 0040                       UenviaChar@c 006B  
      __end_of_escriureCharEEPROM 1B0E                  LcNewString@new_s 006D  
                 WaitForBusy@Busy 0071                       Uinit@j_1140 006E  
                         _userPtr 0001                 GLCDMostraMenu@num 006A  
                      ??_high_rsi 0066              end_of_initialization 163C  
                         _usuaris 0100                   ??_JnovaDireccio 006A  
                      ??_initHora 006B           __size_of_CantaPartBaixa 0068  
                   __Lmediumconst 0000                   TiGetTics@Handle 006E  
                   _MsetNovaTecla 1CD0               __size_of_UenviaChar 0010  
               __end_of_motorHora 155A                  ??_HClearNouSegon 006A  
                      _novaLletra 0059                   _usuariActualSIO 0052  
                      ??_motorSIO 006D                        ??_motorJoc 00C0  
                 TiGetTics@actual 006F                     ?_SIONovaTecla 0065  
                      GLCDMotor@j 0016                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 1C90  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 0071  
                      _numUsuaris 0023              __end_of_UcheckExists 1D30  
                   TeTeclat@files 002B                SIOStartGame@usuari 006A  
          __size_of_JoystickMotor 00EC                     TeTeclat@state 002D  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 0065                         _SIOJugant 1C38  
                   ?_SIOStartGame 0065                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _HNouSegon 1C44  
                 _novaDireccioJOC 000A                   _novaDireccioSIO 0051  
                  _GLCDMostraMenu 1C5C                   ??_CantaPartAlta 006A  
                  ?_MsetNovaTecla 0065                         _CantaData 1A00  
               __size_of_GLCDInit 0008                       _UmotorUsers 0D20  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 1C5C  
                  __end_of_SMSoff 1D14                      ??_TiGetTimer 006A  
                  __end_of_LcInit 12BE                    ??_SIONovaTecla 006A  
                  __end_of_SMotor 0D20                         _LcPutChar 1842  
                  __end_of_TeInit 1CE0                 motorAltaveu@state 001A  
                  __end_of_Espera 1B56                    GLCDMotor@state 0017  
      __end_of_EscriuPrimeraOrdre 15D4                 __size_of_HGetTime 0004  
                   __pidataCOMRAM 1B56                       ?_init_ports 0065  
                       _NoFerMenu 1D38                         _ColumnAct 0033  
            __end_of_JoystickInit 1C0C                    ??_SIOStartGame 006A  
                       _URegister 1D30                         _HnoJugant 1D14  
                    ?_TiInitTimer 0065                        ?_SIOJugant 0065  
                    ??_JnovaTecla 006A                         _SiFerMenu 1D34  
             start_initialization 15D4                         _TiGetTics 1ABE  
          __end_of_GLCDMostraMenu 1C68                        ?_HNouSegon 0065  
                ??_UgetNumUsuaris 006A                  UmotorUsers@state 001E  
               __size_of_LcGotoXY 003A              __end_of_UgetUserName 1BFA  
              __end_of_TiGetTimer 1992                     JJuguem@usuari 006A  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
                   _JoystickMotor 10EC                      ?_TiResetTics 0065  
                      ?_CantaData 0065              _UcheckExistsGetError 1C98  
         __end_of_SIONovaDireccio 1C98              __size_of_LcNewString 000C  
                        ??_SMSoff 006A                          ??_LcInit 0076  
                       _NovaTecla 005A                 __size_of_TeTeclat 0164  
                        ??_SMotor 0071                          ??_TeInit 006B  
                    ?__TiRSITimer 0065                     ??_initAltaveu 006B  
                        ??_Espera 0073                __end_of_JnovaTecla 1CA8  
                      ?_LcPutChar 0065                         _UenviaPas 1C0C  
                     __pdataBANK0 00A1                    motorHora@state 000B  
                    _menuDaltGLCD 0018                      ??_UenviaChar 006B  
                      ?_NoFerMenu 0065                       ??_GLCDMotor 00C1  
                      ?_URegister 0065                        ?_HnoJugant 0065  
                   ??_init_eusart 006A                        ?_SiFerMenu 0065  
                     __pbssCOMRAM 0001                     __pcstackBANK0 00C0  
                      ?_TiGetTics 006A                   ?_GLCDMostraMenu 0065  
                        ?_HJugant 0065                    ?_JoystickMotor 0065  
                 ??_MsetNovaTecla 006A              __end_of_motorAltaveu 1374  
                        ?_JJuguem 0065                          ?_LcClear 0065  
                        ?_CantaIR 0065                    _CantaPartBaixa 16BA  
                        ?_JUsuari 0065             ?_UcheckExistsGetError 0065  
               __size_of_high_rsi 002A                      ?_WaitForBusy 0065  
             __size_of_init_ports 0020                MsetNovaTecla@tecla 006A  
              SsetNovaTecla@tecla 006A                __end_of_UenviaChar 1C2C  
               __size_of_initHora 0008                  ??_escriureEEPROM 006A  
           __size_of_UcheckExists 0004           ?_escriure2usuarisStruct 0065  
                       __pintcode 0008                     ??_playAltaveu 006A  
                      ?_UenviaPas 006A                 __size_of_motorSIO 00EE  
               __size_of_motorJoc 00B4                   CantaPartBaixa@c 006B  
             __end_of_initAltaveu 1CC8                         _arrayZero 004D  
                     ??_SIOJugant 006A                       __smallconst 0200  
                  __size_of_LcLCD 005E                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 1C90                    __size_of_Sinit 0008  
                     ??_HNouSegon 006A                    __size_of_Uinit 00B4  
          __end_of_CantaPartBaixa 1722                JoystickMotor@state 000E  
                        _GLCDInit 1D00                escriureEEPROM@caca 006A  
                     _do_register 03C9               __end_of_init_eusart 1BE6  
                       _newString 03C5                      _UcheckExists 1D2C  
                       _loginText 00B8          __size_of_HActualitzaHora 0036  
                     ??_CantaData 006C                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   ?_MNouJoystick 0065                  ?_SIONovaDireccio 0065  
            __end_of_SIOStartGame 1C88                     UenviaChar@pos 006A  
  __end_of_escriure2usuarisStruct 1ABE                _escriureCharEEPROM 1AEA  
                       _novaTecla 005D                     motorSIO@state 0007  
                     ??_LcPutChar 0078                         _timerGLCD 0019  
                       _motorHora 14DC                          _RCONbits 000FD0  
                       _reproduir 03C7                          _HGetTime 1D1C  
           __size_of_JoystickInit 0012                         _timerHora 000D  
                       _timerMenu 0028               ?_escriureCharEEPROM 006A  
                     ??_NoFerMenu 006A                        _ADCON0bits 000FC2  
                     ??_URegister 006A                       ??_HnoJugant 006A  
                     ??_SiFerMenu 006A             __size_of_UgetUserName 0014  
             __end_of_playAltaveu 1D28            __size_of_SsetNovaTecla 0008  
                        Espera@ms 0071                         _zeroTecla 0030  
                        _LcGotoXY 191E                    _usuariLoguejat 0057  
                        _LcLliure 1C74                       ??_TiGetTics 006C  
         __size_of_compareStrings 0046              __size_of_TiInitTimer 0038  
                 ??_JoystickMotor 006B                     GLCDMotor@max1 0056  
                   GLCDMotor@max2 0055                     GLCDMotor@min1 0015  
                   GLCDMotor@min2 0014                      _teclaPremuda 00A1  
                       _usuariJoc 0054                       LcGotoXY@Row 0072  
                       copy_data0 15E8                         copy_data1 1608  
            ??_escriureCharEEPROM 006B                   ?_CantaPartBaixa 0065  
                __size_of_HJugant 0004            ??_UcheckExistsGetError 006A  
           escriureCharEEPROM@pos 006A                  __size_of_JJuguem 0008  
                __size_of_LcClear 0024                  __size_of_CantaIR 0032  
                        _TeTeclat 0E9A             __end_of_JnovaDireccio 1CB0  
                  ??_MNouJoystick 006A                      ?_UmotorUsers 0065  
                __size_of_JUsuari 0004                      _JoystickInit 1BFA  
                      _EECON1bits 000FA6                      _registerText 00AD  
                     _indexUsuari 0026           __size_of_SIOcheckKrebut 000C  
            __size_of_TiResetTics 0018                     motorJoc@state 0009  
                        __Hrparam 0000                       _initAltaveu 1CC0  
                       menu@state 0025                          __Lrparam 0000  
                      ?_motorHora 0065              __size_of__TiRSITimer 005A  
                    _UgetUserName 1BE6                       ??_UenviaPas 006B  
                    _novaDireccio 0058                      ??_init_ports 006A  
             HActualitzaHora@nova 006A                       _init_eusart 1BD0  
           __size_of_motorAltaveu 00B6                      _novaTeclaJOC 0053  
                    _novaTeclaSIO 0050                   _do_check_exists 03CA  
                        __ptext10 1D18                          __ptext11 1D1C  
              _EscriuPrimeraOrdre 155A                          __ptext20 1C1C  
                        __ptext12 1D20                          __ptext21 1C50  
                        __ptext13 14DC                          __ptext30 1CA8  
                        __ptext22 1C98                          __ptext14 1D24  
                        __ptext31 1D3C                          __ptext23 1D2C  
                        __ptext15 12BE                          __ptext40 1A92  
                        __ptext32 1CB0                          __ptext24 1D30  
                        __ptext16 02C8                          __ptext41 0D20  
                        __ptext33 19CA                          __ptext25 1D34  
                        __ptext17 1BE6                          __ptext50 1CE0  
                        __ptext42 1AEA                          __ptext34 1C5C  
                        __ptext26 1D08                          __ptext18 1D28  
                        __ptext51 0B24                          __ptext43 1898  
                        __ptext35 1B78                          __ptext27 1D0E  
                        __ptext19 1C0C                          __ptext60 074C  
                        __ptext52 1CE8                          __ptext44 1428  
                        __ptext36 1BD0                          __ptext28 1D38  
                        __ptext61 1842                          __ptext53 1CF0  
                        __ptext45 1992                          __ptext37 1CB8  
                        __ptext29 1CA0                          __ptext70 1722  
                        __ptext62 1A00                          __ptext54 178A  
                        __ptext46 0E9A                          __ptext38 1CC0  
                        __ptext71 1B32                          __ptext63 1C68  
                        __ptext55 11D8                          __ptext47 1CC8  
                        __ptext39 1A64                          __ptext72 1BB8  
                        __ptext64 1C74                          __ptext56 155A  
                        __ptext48 1CD0                          __ptext73 1ABE  
                        __ptext65 1B0E                          __ptext57 10EC  
                        __ptext49 1CD8                          __ptext74 1D00  
                        __ptext66 191E                          __ptext58 1CF8  
                        __ptext75 1958                          __ptext67 18DE  
                        __ptext59 1BFA                          __ptext68 1A32  
                        __ptext77 17E8                          __ptext69 16BA  
                  CantaPartAlta@c 006B                       _lletraASCII 005E  
                        _high_rsi 0008                          _copsNota 001B  
                        _s_Timers 0080                          _initHora 1CB8  
                     _lletraInici 0044                          _menuDalt 0027  
                        _menuList 0201               ?_EscriuPrimeraOrdre 0065  
                   __size_of_main 0070                     __size_of_menu 0484  
           __end_of_CantaPartAlta 178A                     CantaData@Data 006C  
                        _tiTeclat 002E                __end_of_init_ports 1B98  
                        _setSMSon 03CC                     _SsetNovaTecla 1CC8  
            __size_of_WaitForBusy 0040                          _nouSegon 03C1  
                        _motorSIO 0FFE                 ??_HActualitzaHora 006B  
                        _motorJoc 1374                          _timerSMS 005C  
                        isa$xinst 000000                          int$flags 007A  
                    UenviaPas@pos 006A                       _playAltaveu 1D24  
                    _motorAltaveu 12BE           __size_of_HClearNouSegon 0004  
            ??_EscriuPrimeraOrdre 006A                        LcInit@rows 00C0  
                ??_GLCDMostraMenu 006A             __size_of_SIONovaTecla 0008  
         _UcheckExistsNotFinished 1C50                        _INTCONbits 000FF2  
                   ??_MNovaLletra 006A             __size_of_SIOStartGame 0008  
                   ??_LcNewString 006F                          intlevel2 0000  
                    _timerAltaveu 001C                        LcPutChar@c 00C0  
                  ?_SsetNovaTecla 0065                 MNovaLletra@lletra 006A  
                 compareStrings@a 006A                   compareStrings@b 006B  
                     ??_motorHora 0071                      _SIONovaTecla 1C88  
                     GLCDMotor@k1 0013                       GLCDMotor@k2 0012  
            __end_of_MNouJoystick 1D00                      _SIOStartGame 1C80  
                  _compareStrings 1898                       _tmpPassword 0098  
             __end_of_MNovaLletra 1CF0             __end_of_MsetNovaTecla 1CD8  
                     _tmpUsername 0037                    _SIOcheckKrebut 1C2C  
                     SMotor@state 002F           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 1C74              __size_of_UmotorUsers 017A  
