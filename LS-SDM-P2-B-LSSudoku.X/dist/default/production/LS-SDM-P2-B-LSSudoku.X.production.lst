

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 07 16:58:27 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1
   112                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   113                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   114                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   115                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   116                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   117                           	psect	pa_nodes0,global,class=CODE,delta=1
   118  0000                     
   119                           ; Version 2.32
   120                           ; Generated 02/02/2021 GMT
   121                           ; 
   122                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution. Publication is not required when
   136                           ;        this file is used in an embedded application.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC18F4321 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     
   155                           	psect	idataCOMRAM
   156  001EB1                     __pidataCOMRAM:
   157                           	callstack 0
   158                           
   159                           ;initializer for _arrayZero
   160  001EB1  30                 	db	48
   161  001EB2  20                 	db	32
   162                           
   163                           ;initializer for _convertir
   164  001EB3  FA                 	db	250
   165                           
   166                           ;initializer for _novaTeclaSIO
   167  001EB4  FF                 	db	255
   168                           
   169                           ;initializer for _direccioSIO
   170  001EB5  FF                 	db	255
   171                           
   172                           ;initializer for _usuariActualSIO
   173  001EB6  FF                 	db	255
   174                           
   175                           ;initializer for _novaTeclaJOC
   176  001EB7  FF                 	db	255
   177                           
   178                           ;initializer for _usuariJoc
   179  001EB8  FF                 	db	255
   180                           
   181                           ;initializer for GLCDMotor@max2
   182  001EB9  0F                 	db	15
   183                           
   184                           ;initializer for GLCDMotor@max1
   185  001EBA  0F                 	db	15
   186                           
   187                           ;initializer for _usuariLoguejat
   188  001EBB  FF                 	db	255
   189                           
   190                           ;initializer for _novaDireccio
   191  001EBC  FF                 	db	255
   192                           
   193                           ;initializer for _novaLletra
   194  001EBD  FF                 	db	255
   195                           
   196                           ;initializer for _NovaTecla
   197  001EBE  FF                 	db	255
   198                           
   199                           ;initializer for _ultimaTecla
   200  001EBF  FF                 	db	255
   201                           
   202                           ;initializer for _novaTecla
   203  001EC0  FF                 	db	255
   204                           
   205                           ;initializer for _lletraASCII
   206  001EC1  FF                 	db	255
   207                           
   208                           ;initializer for _hora
   209  001EC2  33                 	db	51
   210  001EC3  30                 	db	48
   211  001EC4  3A                 	db	58
   212  001EC5  30                 	db	48
   213  001EC6  30                 	db	48
   214  001EC7  00                 	db	0
   215                           
   216                           ;initializer for _stringScore
   217  001EC8  30                 	db	48
   218  001EC9  30                 	db	48
   219  001ECA  00                 	db	0
   220                           
   221                           	psect	idataBANK0
   222  001E96                     __pidataBANK0:
   223                           	callstack 0
   224                           
   225                           ;initializer for _lletraInici
   226  001E96  41                 	db	65
   227  001E97  44                 	db	68
   228  001E98  47                 	db	71
   229  001E99  4A                 	db	74
   230  001E9A  4D                 	db	77
   231  001E9B  50                 	db	80
   232  001E9C  54                 	db	84
   233  001E9D  57                 	db	87
   234                           
   235                           ;initializer for _registerText
   236  001E9E  32                 	db	50
   237  001E9F  2E                 	db	46
   238  001EA0  52                 	db	82
   239  001EA1  45                 	db	69
   240  001EA2  47                 	db	71
   241  001EA3  49                 	db	73
   242  001EA4  53                 	db	83
   243  001EA5  54                 	db	84
   244  001EA6  45                 	db	69
   245  001EA7  52                 	db	82
   246  001EA8  00                 	db	0
   247                           
   248                           ;initializer for _loginText
   249  001EA9  31                 	db	49
   250  001EAA  2E                 	db	46
   251  001EAB  4C                 	db	76
   252  001EAC  4F                 	db	79
   253  001EAD  47                 	db	71
   254  001EAE  49                 	db	73
   255  001EAF  4E                 	db	78
   256  001EB0  00                 	db	0
   257                           
   258                           	psect	smallconst
   259  000200                     __psmallconst:
   260                           	callstack 0
   261  000200  00                 	db	0
   262  000201                     _menuList:
   263                           	callstack 0
   264  000201  31                 	db	49
   265  000202  2E                 	db	46
   266  000203  50                 	db	80
   267  000204  6C                 	db	108
   268  000205  61                 	db	97
   269  000206  79                 	db	121
   270  000207  20                 	db	32
   271  000208  61                 	db	97
   272  000209  20                 	db	32
   273  00020A  47                 	db	71
   274  00020B  61                 	db	97
   275  00020C  6D                 	db	109
   276  00020D  65                 	db	101
   277  00020E  00                 	db	0
   278  00020F  00                 	db	0
   279  000210  00                 	db	0
   280  000211  00                 	db	0
   281  000212  00                 	db	0
   282  000213  00                 	db	0
   283  000214  00                 	db	0
   284  000215  00                 	db	0
   285  000216  00                 	db	0
   286  000217  00                 	db	0
   287  000218  00                 	db	0
   288  000219  00                 	db	0
   289  00021A  00                 	db	0
   290  00021B  00                 	db	0
   291  00021C  00                 	db	0
   292  00021D  00                 	db	0
   293  00021E  32                 	db	50
   294  00021F  2E                 	db	46
   295  000220  4D                 	db	77
   296  000221  6F                 	db	111
   297  000222  64                 	db	100
   298  000223  69                 	db	105
   299  000224  66                 	db	102
   300  000225  79                 	db	121
   301  000226  20                 	db	32
   302  000227  54                 	db	84
   303  000228  69                 	db	105
   304  000229  6D                 	db	109
   305  00022A  65                 	db	101
   306  00022B  00                 	db	0
   307  00022C  00                 	db	0
   308  00022D  00                 	db	0
   309  00022E  00                 	db	0
   310  00022F  00                 	db	0
   311  000230  00                 	db	0
   312  000231  00                 	db	0
   313  000232  00                 	db	0
   314  000233  00                 	db	0
   315  000234  00                 	db	0
   316  000235  00                 	db	0
   317  000236  00                 	db	0
   318  000237  00                 	db	0
   319  000238  00                 	db	0
   320  000239  00                 	db	0
   321  00023A  00                 	db	0
   322  00023B  33                 	db	51
   323  00023C  2E                 	db	46
   324  00023D  53                 	db	83
   325  00023E  68                 	db	104
   326  00023F  6F                 	db	111
   327  000240  77                 	db	119
   328  000241  20                 	db	32
   329  000242  47                 	db	71
   330  000243  65                 	db	101
   331  000244  6E                 	db	110
   332  000245  65                 	db	101
   333  000246  72                 	db	114
   334  000247  61                 	db	97
   335  000248  6C                 	db	108
   336  000249  20                 	db	32
   337  00024A  54                 	db	84
   338  00024B  6F                 	db	111
   339  00024C  70                 	db	112
   340  00024D  20                 	db	32
   341  00024E  35                 	db	53
   342  00024F  20                 	db	32
   343  000250  53                 	db	83
   344  000251  63                 	db	99
   345  000252  6F                 	db	111
   346  000253  72                 	db	114
   347  000254  65                 	db	101
   348  000255  73                 	db	115
   349  000256  20                 	db	32
   350  000257  00                 	db	0
   351  000258  34                 	db	52
   352  000259  2E                 	db	46
   353  00025A  4C                 	db	76
   354  00025B  6F                 	db	111
   355  00025C  67                 	db	103
   356  00025D  6F                 	db	111
   357  00025E  75                 	db	117
   358  00025F  74                 	db	116
   359  000260  00                 	db	0
   360  000261  00                 	db	0
   361  000262  00                 	db	0
   362  000263  00                 	db	0
   363  000264  00                 	db	0
   364  000265  00                 	db	0
   365  000266  00                 	db	0
   366  000267  00                 	db	0
   367  000268  00                 	db	0
   368  000269  00                 	db	0
   369  00026A  00                 	db	0
   370  00026B  00                 	db	0
   371  00026C  00                 	db	0
   372  00026D  00                 	db	0
   373  00026E  00                 	db	0
   374  00026F  00                 	db	0
   375  000270  00                 	db	0
   376  000271  00                 	db	0
   377  000272  00                 	db	0
   378  000273  00                 	db	0
   379  000274  00                 	db	0
   380  000275  35                 	db	53
   381  000276  2E                 	db	46
   382  000277  53                 	db	83
   383  000278  68                 	db	104
   384  000279  6F                 	db	111
   385  00027A  77                 	db	119
   386  00027B  20                 	db	32
   387  00027C  41                 	db	65
   388  00027D  6C                 	db	108
   389  00027E  6C                 	db	108
   390  00027F  20                 	db	32
   391  000280  55                 	db	85
   392  000281  73                 	db	115
   393  000282  65                 	db	101
   394  000283  72                 	db	114
   395  000284  73                 	db	115
   396  000285  00                 	db	0
   397  000286  00                 	db	0
   398  000287  00                 	db	0
   399  000288  00                 	db	0
   400  000289  00                 	db	0
   401  00028A  00                 	db	0
   402  00028B  00                 	db	0
   403  00028C  00                 	db	0
   404  00028D  00                 	db	0
   405  00028E  00                 	db	0
   406  00028F  00                 	db	0
   407  000290  00                 	db	0
   408  000291  00                 	db	0
   409  000292                     __end_of_menuList:
   410                           	callstack 0
   411  000292                     _teclaPremuda:
   412                           	callstack 0
   413  000292  01                 	db	1
   414  000293  02                 	db	2
   415  000294  03                 	db	3
   416  000295  04                 	db	4
   417  000296  05                 	db	5
   418  000297  06                 	db	6
   419  000298  07                 	db	7
   420  000299  08                 	db	8
   421  00029A  09                 	db	9
   422  00029B  0A                 	db	10
   423  00029C  00                 	db	0
   424  00029D  0B                 	db	11
   425  00029E                     __end_of_teclaPremuda:
   426                           	callstack 0
   427  0000                     _PIR1bits	set	3998
   428  0000                     _RCREG	set	4014
   429  0000                     _TXREG	set	4013
   430  0000                     _TXSTAbits	set	4012
   431  0000                     _ADCON0bits	set	4034
   432  0000                     _ADRESH	set	4036
   433  0000                     _ADCON2	set	4032
   434  0000                     _ADCON1	set	4033
   435  0000                     _ADCON0	set	4034
   436  0000                     _EECON2	set	4007
   437  0000                     _EEDATA	set	4008
   438  0000                     _EEADR	set	4009
   439  0000                     _T0CONbits	set	4053
   440  0000                     _TMR0L	set	4054
   441  0000                     _TMR0H	set	4055
   442  0000                     _T0CON	set	4053
   443  0000                     _INTCONbits	set	4082
   444  0000                     _RCONbits	set	4048
   445  0000                     _PORTDbits	set	3971
   446  0000                     _SPBRG	set	4015
   447  0000                     _SPBRGH	set	4016
   448  0000                     _BAUDCON	set	4024
   449  0000                     _RCSTA	set	4011
   450  0000                     _TXSTA	set	4012
   451  0000                     _EECON1bits	set	4006
   452  0000                     _LATD	set	3980
   453  0000                     _TRISD	set	3989
   454  0000                     _TRISC	set	3988
   455  0000                     _LATBbits	set	3978
   456  0000                     _TRISB	set	3987
   457  0000                     _TRISA	set	3986
   458  0000                     _PORTCbits	set	3970
   459  0000                     _LATDbits	set	3980
   460  0000                     _LATCbits	set	3979
   461  0000                     _TRISDbits	set	3989
   462  0000                     _TRISCbits	set	3988
   463  00029E                     STR_5:
   464  00029E  54                 	db	84	;'T'
   465  00029F  49                 	db	73	;'I'
   466  0002A0  4D                 	db	77	;'M'
   467  0002A1  45                 	db	69	;'E'
   468  0002A2  20                 	db	32
   469  0002A3  52                 	db	82	;'R'
   470  0002A4  45                 	db	69	;'E'
   471  0002A5  4D                 	db	77	;'M'
   472  0002A6  41                 	db	65	;'A'
   473  0002A7  49                 	db	73	;'I'
   474  0002A8  4E                 	db	78	;'N'
   475  0002A9  49                 	db	73	;'I'
   476  0002AA  4E                 	db	78	;'N'
   477  0002AB  47                 	db	71	;'G'
   478  0002AC  3A                 	db	58	;':'
   479  0002AD  00                 	db	0
   480  0002AE                     STR_4:
   481  0002AE  4D                 	db	77	;'M'
   482  0002AF  6F                 	db	111	;'o'
   483  0002B0  64                 	db	100	;'d'
   484  0002B1  69                 	db	105	;'i'
   485  0002B2  66                 	db	102	;'f'
   486  0002B3  79                 	db	121	;'y'
   487  0002B4  20                 	db	32
   488  0002B5  54                 	db	84	;'T'
   489  0002B6  69                 	db	105	;'i'
   490  0002B7  6D                 	db	109	;'m'
   491  0002B8  65                 	db	101	;'e'
   492  0002B9  3A                 	db	58	;':'
   493  0002BA  00                 	db	0
   494  0002BB                     STR_7:
   495  0002BB  54                 	db	84	;'T'
   496  0002BC  49                 	db	73	;'I'
   497  0002BD  4D                 	db	77	;'M'
   498  0002BE  45                 	db	69	;'E'
   499  0002BF  20                 	db	32
   500  0002C0  4C                 	db	76	;'L'
   501  0002C1  45                 	db	69	;'E'
   502  0002C2  46                 	db	70	;'F'
   503  0002C3  54                 	db	84	;'T'
   504  0002C4  3A                 	db	58	;':'
   505  0002C5  20                 	db	32
   506  0002C6  00                 	db	0
   507  0002C7                     STR_3:
   508  0002C7  42                 	db	66	;'B'
   509  0002C8  59                 	db	89	;'Y'
   510  0002C9  45                 	db	69	;'E'
   511  0002CA  20                 	db	32
   512  0002CB  42                 	db	66	;'B'
   513  0002CC  59                 	db	89	;'Y'
   514  0002CD  45                 	db	69	;'E'
   515  0002CE  20                 	db	32
   516  0002CF  00                 	db	0
   517  0002D0                     STR_8:
   518  0002D0  53                 	db	83	;'S'
   519  0002D1  43                 	db	67	;'C'
   520  0002D2  4F                 	db	79	;'O'
   521  0002D3  52                 	db	82	;'R'
   522  0002D4  45                 	db	69	;'E'
   523  0002D5  3A                 	db	58	;':'
   524  0002D6  20                 	db	32
   525  0002D7  00                 	db	0
   526  0002D8                     STR_6:
   527  0002D8  45                 	db	69	;'E'
   528  0002D9  52                 	db	82	;'R'
   529  0002DA  52                 	db	82	;'R'
   530  0002DB  4F                 	db	79	;'O'
   531  0002DC  52                 	db	82	;'R'
   532  0002DD  53                 	db	83	;'S'
   533  0002DE  3A                 	db	58	;':'
   534  0002DF  00                 	db	0
   535  0002E0                     STR_2:
   536  0002E0  50                 	db	80	;'P'
   537  0002E1  53                 	db	83	;'S'
   538  0002E2  57                 	db	87	;'W'
   539  0002E3  44                 	db	68	;'D'
   540  0002E4  3A                 	db	58	;':'
   541  0002E5  20                 	db	32
   542  0002E6  00                 	db	0
   543  0002E7                     STR_1:
   544  0002E7  55                 	db	85	;'U'
   545  0002E8  53                 	db	83	;'S'
   546  0002E9  45                 	db	69	;'E'
   547  0002EA  52                 	db	82	;'R'
   548  0002EB  3A                 	db	58	;':'
   549  0002EC  20                 	db	32
   550  0002ED  00                 	db	0
   551  0002EE  00                 	db	0	; dummy byte at the end
   552  0000                     
   553                           ; #config settings
   554                           
   555                           	psect	cinit
   556  0018F4                     __pcinit:
   557                           	callstack 0
   558  0018F4                     start_initialization:
   559                           	callstack 0
   560  0018F4                     __initialization:
   561                           	callstack 0
   562                           
   563                           ; Initialize objects allocated to BANK0 (27 bytes)
   564                           ; load TBLPTR registers with __pidataBANK0
   565  0018F4  0E96               	movlw	low __pidataBANK0
   566  0018F6  6EF6               	movwf	tblptrl,c
   567  0018F8  0E1E               	movlw	high __pidataBANK0
   568  0018FA  6EF7               	movwf	tblptrh,c
   569  0018FC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   570  0018FE  6EF8               	movwf	tblptru,c
   571  001900  EE00  F0B4         	lfsr	0,__pdataBANK0
   572  001904  EE10 F01B          	lfsr	1,27
   573  001908                     copy_data0:
   574  001908  0009               	tblrd		*+
   575  00190A  CFF5 FFEE          	movff	tablat,postinc0
   576  00190E  50E5               	movf	postdec1,w,c
   577  001910  50E1               	movf	fsr1l,w,c
   578  001912  E1FA               	bnz	copy_data0
   579                           
   580                           ; Initialize objects allocated to COMRAM (26 bytes)
   581                           ; load TBLPTR registers with __pidataCOMRAM
   582  001914  0EB1               	movlw	low __pidataCOMRAM
   583  001916  6EF6               	movwf	tblptrl,c
   584  001918  0E1E               	movlw	high __pidataCOMRAM
   585  00191A  6EF7               	movwf	tblptrh,c
   586  00191C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   587  00191E  6EF8               	movwf	tblptru,c
   588  001920  EE00  F045         	lfsr	0,__pdataCOMRAM
   589  001924  EE10 F01A          	lfsr	1,26
   590  001928                     copy_data1:
   591  001928  0009               	tblrd		*+
   592  00192A  CFF5 FFEE          	movff	tablat,postinc0
   593  00192E  50E5               	movf	postdec1,w,c
   594  001930  50E1               	movf	fsr1l,w,c
   595  001932  E1FA               	bnz	copy_data1
   596                           
   597                           ; Clear objects allocated to BANK1 (144 bytes)
   598  001934  EE01  F000         	lfsr	0,__pbssBANK1
   599  001938  0E90               	movlw	144
   600  00193A                     clear_0:
   601  00193A  6AEE               	clrf	postinc0,c
   602  00193C  06E8               	decf	wreg,f,c
   603  00193E  E1FD               	bnz	clear_0
   604                           
   605                           ; Clear objects allocated to BANK0 (52 bytes)
   606  001940  EE00  F080         	lfsr	0,__pbssBANK0
   607  001944  0E34               	movlw	52
   608  001946                     clear_1:
   609  001946  6AEE               	clrf	postinc0,c
   610  001948  06E8               	decf	wreg,f,c
   611  00194A  E1FD               	bnz	clear_1
   612                           
   613                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   614  00194C  6A77               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   615  00194E  6A76               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   616  001950  6A75               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   617                           
   618                           ; Clear objects allocated to COMRAM (68 bytes)
   619  001952  EE00  F001         	lfsr	0,__pbssCOMRAM
   620  001956  0E44               	movlw	68
   621  001958                     clear_2:
   622  001958  6AEE               	clrf	postinc0,c
   623  00195A  06E8               	decf	wreg,f,c
   624  00195C  E1FD               	bnz	clear_2
   625  00195E                     end_of_initialization:
   626                           	callstack 0
   627  00195E                     __end_of__initialization:
   628                           	callstack 0
   629  00195E  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   630  001960  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   631  001962  0E00               	movlw	low (__Lmediumconst shr (0+16))
   632  001964  6EF8               	movwf	tblptru,c
   633  001966  0100               	movlb	0
   634  001968  EFB6  F00C         	goto	_main	;jump to C main() function
   635                           
   636                           	psect	bitbssCOMRAM
   637  0003A8                     __pbitbssCOMRAM:
   638                           	callstack 0
   639  0003A8                     _Krebut:
   640                           	callstack 0
   641  0003A8                     	ds	1
   642  0003A9                     _jugantSIO:
   643                           	callstack 0
   644  0003A9                     	ds	1
   645  0003AA                     _jugantJoc:
   646                           	callstack 0
   647  0003AA                     	ds	1
   648  0003AB                     _tempsAcabat:
   649                           	callstack 0
   650  0003AB                     	ds	1
   651  0003AC                     _nouSegon:
   652                           	callstack 0
   653  0003AC                     	ds	1
   654  0003AD                     _jugant:
   655                           	callstack 0
   656  0003AD                     	ds	1
   657  0003AE                     _cap2:
   658                           	callstack 0
   659  0003AE                     	ds	1
   660  0003AF                     _cap1:
   661                           	callstack 0
   662  0003AF                     	ds	1
   663  0003B0                     _newString:
   664                           	callstack 0
   665  0003B0                     	ds	1
   666  0003B1                     _ferMenu:
   667                           	callstack 0
   668  0003B1                     	ds	1
   669  0003B2                     _reproduir:
   670                           	callstack 0
   671  0003B2                     	ds	1
   672  0003B3                     _do_updateScore:
   673                           	callstack 0
   674  0003B3                     	ds	1
   675  0003B4                     _do_showUsers:
   676                           	callstack 0
   677  0003B4                     	ds	1
   678  0003B5                     _do_register:
   679                           	callstack 0
   680  0003B5                     	ds	1
   681  0003B6                     _do_check_exists:
   682                           	callstack 0
   683  0003B6                     	ds	1
   684  0003B7                     _loginNOTRegister:
   685                           	callstack 0
   686  0003B7                     	ds	1
   687  0003B8                     _setSMSon:
   688                           	callstack 0
   689  0003B8                     	ds	1
   690  0003B9                     _nou_s:
   691                           	callstack 0
   692  0003B9                     	ds	1
   693                           
   694                           	psect	bssCOMRAM
   695  000001                     __pbssCOMRAM:
   696                           	callstack 0
   697  000001                     _arrayShowUsers:
   698                           	callstack 0
   699  000001                     	ds	8
   700  000009                     _userPtr:
   701                           	callstack 0
   702  000009                     	ds	2
   703  00000B                     _h_Tics:
   704                           	callstack 0
   705  00000B                     	ds	2
   706  00000D                     _s_ptr:
   707                           	callstack 0
   708  00000D                     	ds	2
   709  00000F                     motorSIO@state:
   710                           	callstack 0
   711  00000F                     	ds	1
   712  000010                     _score:
   713                           	callstack 0
   714  000010                     	ds	1
   715  000011                     _timerSIO:
   716                           	callstack 0
   717  000011                     	ds	1
   718  000012                     motorJoc@state:
   719                           	callstack 0
   720  000012                     	ds	1
   721  000013                     _direccioJoc:
   722                           	callstack 0
   723  000013                     	ds	1
   724  000014                     motorHora@state:
   725                           	callstack 0
   726  000014                     	ds	1
   727  000015                     _segons:
   728                           	callstack 0
   729  000015                     	ds	1
   730  000016                     _timerHora:
   731                           	callstack 0
   732  000016                     	ds	1
   733  000017                     JoystickMotor@state:
   734                           	callstack 0
   735  000017                     	ds	1
   736  000018                     _ultimaTeclaAD:
   737                           	callstack 0
   738  000018                     	ds	1
   739  000019                     GLCDMotor@length2:
   740                           	callstack 0
   741  000019                     	ds	1
   742  00001A                     GLCDMotor@length1:
   743                           	callstack 0
   744  00001A                     	ds	1
   745  00001B                     GLCDMotor@k2:
   746                           	callstack 0
   747  00001B                     	ds	1
   748  00001C                     GLCDMotor@k1:
   749                           	callstack 0
   750  00001C                     	ds	1
   751  00001D                     GLCDMotor@min2:
   752                           	callstack 0
   753  00001D                     	ds	1
   754  00001E                     GLCDMotor@min1:
   755                           	callstack 0
   756  00001E                     	ds	1
   757  00001F                     GLCDMotor@j:
   758                           	callstack 0
   759  00001F                     	ds	1
   760  000020                     GLCDMotor@state:
   761                           	callstack 0
   762  000020                     	ds	1
   763  000021                     _menuDaltGLCD:
   764                           	callstack 0
   765  000021                     	ds	1
   766  000022                     _timerGLCD:
   767                           	callstack 0
   768  000022                     	ds	1
   769  000023                     motorAltaveu@state:
   770                           	callstack 0
   771  000023                     	ds	1
   772  000024                     _copsNota:
   773                           	callstack 0
   774  000024                     	ds	1
   775  000025                     _timerAltaveu:
   776                           	callstack 0
   777  000025                     	ds	1
   778  000026                     _nota:
   779                           	callstack 0
   780  000026                     	ds	1
   781  000027                     UmotorUsers@state:
   782                           	callstack 0
   783  000027                     	ds	1
   784  000028                     _scoreUsr:
   785                           	callstack 0
   786  000028                     	ds	1
   787  000029                     _j:
   788                           	callstack 0
   789  000029                     	ds	1
   790  00002A                     _i:
   791                           	callstack 0
   792  00002A                     	ds	1
   793  00002B                     _indexNextUserStruct:
   794                           	callstack 0
   795  00002B                     	ds	1
   796  00002C                     _indexNextUser:
   797                           	callstack 0
   798  00002C                     	ds	1
   799  00002D                     _numUsuaris:
   800                           	callstack 0
   801  00002D                     	ds	1
   802  00002E                     menu@state:
   803                           	callstack 0
   804  00002E                     	ds	1
   805  00002F                     _pos:
   806                           	callstack 0
   807  00002F                     	ds	1
   808  000030                     _indexUsuari:
   809                           	callstack 0
   810  000030                     	ds	1
   811  000031                     _menuDalt:
   812                           	callstack 0
   813  000031                     	ds	1
   814  000032                     _timerMenu:
   815                           	callstack 0
   816  000032                     	ds	1
   817  000033                     _tmp:
   818                           	callstack 0
   819  000033                     	ds	1
   820  000034                     _counter:
   821                           	callstack 0
   822  000034                     	ds	1
   823  000035                     TeTeclat@files:
   824                           	callstack 0
   825  000035                     	ds	1
   826  000036                     TeTeclat@cols:
   827                           	callstack 0
   828  000036                     	ds	1
   829  000037                     TeTeclat@state:
   830                           	callstack 0
   831  000037                     	ds	1
   832  000038                     _tiTeclat:
   833                           	callstack 0
   834  000038                     	ds	1
   835  000039                     SMotor@state:
   836                           	callstack 0
   837  000039                     	ds	1
   838  00003A                     _zeroTecla:
   839                           	callstack 0
   840  00003A                     	ds	1
   841  00003B                     _timerSMS:
   842                           	callstack 0
   843  00003B                     	ds	1
   844  00003C                     _sumaPulsacions:
   845                           	callstack 0
   846  00003C                     	ds	1
   847  00003D                     _Timer:
   848                           	callstack 0
   849  00003D                     	ds	1
   850  00003E                     _ColumnAct:
   851                           	callstack 0
   852  00003E                     	ds	1
   853  00003F                     _RowAct:
   854                           	callstack 0
   855  00003F                     	ds	1
   856  000040                     _Rows:
   857                           	callstack 0
   858  000040                     	ds	1
   859  000041                     _horaTmp:
   860                           	callstack 0
   861  000041                     	ds	4
   862                           
   863                           	psect	dataCOMRAM
   864  000045                     __pdataCOMRAM:
   865                           	callstack 0
   866  000045                     _arrayZero:
   867                           	callstack 0
   868  000045                     	ds	2
   869  000047                     _convertir:
   870                           	callstack 0
   871  000047                     	ds	1
   872  000048                     _novaTeclaSIO:
   873                           	callstack 0
   874  000048                     	ds	1
   875  000049                     _direccioSIO:
   876                           	callstack 0
   877  000049                     	ds	1
   878  00004A                     _usuariActualSIO:
   879                           	callstack 0
   880  00004A                     	ds	1
   881  00004B                     _novaTeclaJOC:
   882                           	callstack 0
   883  00004B                     	ds	1
   884  00004C                     _usuariJoc:
   885                           	callstack 0
   886  00004C                     	ds	1
   887  00004D                     GLCDMotor@max2:
   888                           	callstack 0
   889  00004D                     	ds	1
   890  00004E                     GLCDMotor@max1:
   891                           	callstack 0
   892  00004E                     	ds	1
   893  00004F                     _usuariLoguejat:
   894                           	callstack 0
   895  00004F                     	ds	1
   896  000050                     _novaDireccio:
   897                           	callstack 0
   898  000050                     	ds	1
   899  000051                     _novaLletra:
   900                           	callstack 0
   901  000051                     	ds	1
   902  000052                     _NovaTecla:
   903                           	callstack 0
   904  000052                     	ds	1
   905  000053                     _ultimaTecla:
   906                           	callstack 0
   907  000053                     	ds	1
   908  000054                     _novaTecla:
   909                           	callstack 0
   910  000054                     	ds	1
   911  000055                     _lletraASCII:
   912                           	callstack 0
   913  000055                     	ds	1
   914  000056                     _hora:
   915                           	callstack 0
   916  000056                     	ds	6
   917  00005C                     _stringScore:
   918                           	callstack 0
   919  00005C                     	ds	3
   920                           
   921                           	psect	bssBANK0
   922  000080                     __pbssBANK0:
   923                           	callstack 0
   924  000080                     _s_Timers:
   925                           	callstack 0
   926  000080                     	ds	24
   927  000098                     _puntuacions:
   928                           	callstack 0
   929  000098                     	ds	10
   930  0000A2                     _tmpPassword:
   931                           	callstack 0
   932  0000A2                     	ds	9
   933  0000AB                     _tmpUsername:
   934                           	callstack 0
   935  0000AB                     	ds	9
   936                           
   937                           	psect	dataBANK0
   938  0000B4                     __pdataBANK0:
   939                           	callstack 0
   940  0000B4                     _lletraInici:
   941                           	callstack 0
   942  0000B4                     	ds	8
   943  0000BC                     _registerText:
   944                           	callstack 0
   945  0000BC                     	ds	11
   946  0000C7                     _loginText:
   947                           	callstack 0
   948  0000C7                     	ds	8
   949                           
   950                           	psect	bssBANK1
   951  000100                     __pbssBANK1:
   952                           	callstack 0
   953  000100                     _usuaris:
   954                           	callstack 0
   955  000100                     	ds	144
   956                           
   957                           	psect	cstackBANK0
   958  0000CF                     __pcstackBANK0:
   959                           	callstack 0
   960  0000CF                     ??_menu:
   961                           
   962                           ; 1 bytes @ 0x0
   963  0000CF                     	ds	5
   964                           
   965                           	psect	cstackCOMRAM
   966  00005F                     __pcstackCOMRAM:
   967                           	callstack 0
   968  00005F                     
   969                           ; 1 bytes @ 0x0
   970  00005F                     	ds	1
   971  000060                     ??_high_rsi:
   972                           
   973                           ; 1 bytes @ 0x1
   974  000060                     	ds	4
   975  000064                     ??_EscriuPrimeraOrdre:
   976  000064                     ??_CantaPartAlta:
   977  000064                     ??_CantaPartBaixa:
   978  000064                     ?_TiGetTics:
   979                           	callstack 0
   980  000064                     ?_UgetUserName:
   981                           	callstack 0
   982  000064                     ?_getArrayShowUsers:
   983                           	callstack 0
   984  000064                     SsetNovaTecla@tecla:
   985                           	callstack 0
   986  000064                     TiResetTics@Handle:
   987                           	callstack 0
   988  000064                     MsetNovaTecla@tecla:
   989                           	callstack 0
   990  000064                     MNovaLletra@lletra:
   991                           	callstack 0
   992  000064                     MNouJoystick@posicio:
   993                           	callstack 0
   994  000064                     UenviaChar@pos:
   995                           	callstack 0
   996  000064                     UenviaPas@pos:
   997                           	callstack 0
   998  000064                     escriureCharEEPROM@pos:
   999                           	callstack 0
  1000  000064                     llegirCharEEPROM@pos:
  1001                           	callstack 0
  1002  000064                     compareStrings@a:
  1003                           	callstack 0
  1004  000064                     UgetScore@quin:
  1005                           	callstack 0
  1006  000064                     UgetTop5@quin:
  1007                           	callstack 0
  1008  000064                     UnewScore@scoretmp:
  1009                           	callstack 0
  1010  000064                     GLCDMostraMenu@num:
  1011                           	callstack 0
  1012  000064                     HActualitzaHora@nova:
  1013                           	callstack 0
  1014  000064                     JJuguem@usuari:
  1015                           	callstack 0
  1016  000064                     JnovaTecla@tecla:
  1017                           	callstack 0
  1018  000064                     JnovaDireccio@dir:
  1019                           	callstack 0
  1020  000064                     conversorJoystick@direc:
  1021                           	callstack 0
  1022  000064                     SIONovaDireccio@num:
  1023                           	callstack 0
  1024  000064                     SIOStartGame@usuari:
  1025                           	callstack 0
  1026  000064                     SIONovaTecla@tecla:
  1027                           	callstack 0
  1028  000064                     CToAConverteix@numero:
  1029                           	callstack 0
  1030  000064                     ___lbdiv@divisor:
  1031                           	callstack 0
  1032                           
  1033                           ; 1 bytes @ 0x5
  1034  000064                     	ds	1
  1035  000065                     ??_JoystickMotor:
  1036  000065                     CantaPartAlta@c:
  1037                           	callstack 0
  1038  000065                     CantaPartBaixa@c:
  1039                           	callstack 0
  1040  000065                     EscriuPrimeraOrdre@ordre:
  1041                           	callstack 0
  1042  000065                     UenviaChar@c:
  1043                           	callstack 0
  1044  000065                     UenviaPas@c:
  1045                           	callstack 0
  1046  000065                     escriureCharEEPROM@c:
  1047                           	callstack 0
  1048  000065                     ___lbdiv@dividend:
  1049                           	callstack 0
  1050  000065                     compareStrings@b:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x6
  1054  000065                     	ds	1
  1055  000066                     ??_TiGetTics:
  1056  000066                     CantaIR@IR:
  1057                           	callstack 0
  1058  000066                     CantaData@Data:
  1059                           	callstack 0
  1060  000066                     UgetUserName@quin:
  1061                           	callstack 0
  1062  000066                     getArrayShowUsers@quin:
  1063                           	callstack 0
  1064  000066                     ___lbdiv@counter:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x7
  1068  000066                     	ds	1
  1069  000067                     ??_compareStrings:
  1070  000067                     ___lbdiv@quotient:
  1071                           	callstack 0
  1072  000067                     LcNewString@new_s:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x8
  1076  000067                     	ds	1
  1077  000068                     ??_Uinit:
  1078  000068                     TiGetTics@Handle:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x9
  1082  000068                     	ds	1
  1083  000069                     ??_UmotorUsers:
  1084  000069                     TiGetTics@actual:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0xA
  1088  000069                     	ds	1
  1089  00006A                     Uinit@k:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0xB
  1093  00006A                     	ds	1
  1094  00006B                     ??_SMotor:
  1095  00006B                     ??_motorHora:
  1096  00006B                     ??_motorAltaveu:
  1097  00006B                     ??_TeTeclat:
  1098  00006B                     WaitForBusy@Busy:
  1099                           	callstack 0
  1100  00006B                     Uinit@k_1175:
  1101                           	callstack 0
  1102  00006B                     Espera@ms:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0xC
  1106  00006B                     	ds	1
  1107  00006C                     LcGotoXY@Row:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0xD
  1111  00006C                     	ds	1
  1112  00006D                     ??_Espera:
  1113  00006D                     LcGotoXY@Fisics:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0xE
  1117  00006D                     	ds	1
  1118  00006E                     Espera@Timer:
  1119                           	callstack 0
  1120                           
  1121                           ; 1 bytes @ 0xF
  1122  00006E                     	ds	1
  1123  00006F                     LcInit@rows:
  1124                           	callstack 0
  1125  00006F                     _LcGotoXY$334:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x10
  1129  00006F                     	ds	1
  1130  000070                     LcInit@i:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x11
  1134  000070                     	ds	1
  1135  000071                     LcGotoXY@Column:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x12
  1139  000071                     	ds	1
  1140  000072                     ??_motorJoc:
  1141  000072                     LcPutChar@c:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x13
  1145  000072                     	ds	1
  1146  000073                     ??_GLCDMotor:
  1147  000073                     ??_motorSIO:
  1148  000073                     
  1149                           ; 1 bytes @ 0x14
  1150  000073                     	ds	2
  1151  000075                     
  1152                           ; 1 bytes @ 0x16
  1153 ;;
  1154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1155 ;;
  1156 ;; *************** function _main *****************
  1157 ;; Defined at:
  1158 ;;		line 76 in file "main.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1
  1172 ;;      Params:         0       0       0
  1173 ;;      Locals:         0       0       0
  1174 ;;      Temps:          0       0       0
  1175 ;;      Totals:         0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels required when called: 7
  1178 ;; This function calls:
  1179 ;;		_CtoA
  1180 ;;		_GLCDInit
  1181 ;;		_GLCDMotor
  1182 ;;		_JoystickInit
  1183 ;;		_JoystickMotor
  1184 ;;		_LcInit
  1185 ;;		_LcLCD
  1186 ;;		_Minit
  1187 ;;		_SMotor
  1188 ;;		_Sinit
  1189 ;;		_TeInit
  1190 ;;		_TeTeclat
  1191 ;;		_TiInitTimer
  1192 ;;		_Uinit
  1193 ;;		_UmotorUsers
  1194 ;;		_initAltaveu
  1195 ;;		_initHora
  1196 ;;		_initSIO
  1197 ;;		_init_eusart
  1198 ;;		_init_ports
  1199 ;;		_menu
  1200 ;;		_motorAltaveu
  1201 ;;		_motorHora
  1202 ;;		_motorJoc
  1203 ;;		_motorSIO
  1204 ;; This function is called by:
  1205 ;;		Startup code after reset
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text0
  1210  00196C                     __ptext0:
  1211                           	callstack 0
  1212  00196C                     _main:
  1213                           	callstack 24
  1214                           
  1215                           ;main.c: 77:     init_ports();
  1216                           
  1217                           ;incstack = 0
  1218  00196C  EC12  F00F         	call	_init_ports	;wreg free
  1219                           
  1220                           ;main.c: 78:     init_eusart();
  1221  001970  EC66  F00F         	call	_init_eusart	;wreg free
  1222                           
  1223                           ;main.c: 79:     TiInitTimer();
  1224  001974  EC80  F00E         	call	_TiInitTimer	;wreg free
  1225                           
  1226                           ;main.c: 80:     TeInit();
  1227  001978  EC33  F000         	call	_TeInit	;wreg free
  1228                           
  1229                           ;main.c: 81:     Sinit();
  1230  00197C  EC37  F000         	call	_Sinit	;wreg free
  1231                           
  1232                           ;main.c: 82:     SMotor();
  1233  001980  ECB7  F008         	call	_SMotor	;wreg free
  1234                           
  1235                           ;main.c: 84:     initAltaveu();
  1236  001984  EC27  F000         	call	_initAltaveu	;wreg free
  1237                           
  1238                           ;main.c: 85:     GLCDInit();
  1239  001988  EC47  F000         	call	_GLCDInit	;wreg free
  1240                           
  1241                           ;main.c: 86:     JoystickInit();
  1242  00198C  EC85  F00F         	call	_JoystickInit	;wreg free
  1243                           
  1244                           ;main.c: 87:     initHora();
  1245  001990  EC23  F000         	call	_initHora	;wreg free
  1246                           
  1247                           ;main.c: 88:     initSIO();
  1248  001994  EC1F  F000         	call	_initSIO	;wreg free
  1249                           
  1250                           ;main.c: 90:     LcInit(2);
  1251  001998  0E02               	movlw	2
  1252  00199A  EC01  F00B         	call	_LcInit
  1253                           
  1254                           ;main.c: 91:     Uinit();
  1255  00199E  EC2B  F00A         	call	_Uinit	;wreg free
  1256                           
  1257                           ;main.c: 92:     Minit();
  1258  0019A2  EC3F  F000         	call	_Minit	;wreg free
  1259  0019A6                     l7072:
  1260                           
  1261                           ;main.c: 94:         GLCDMotor();
  1262  0019A6  EC39  F005         	call	_GLCDMotor	;wreg free
  1263                           
  1264                           ;main.c: 95:         motorJoc();
  1265  0019AA  EC60  F00B         	call	_motorJoc	;wreg free
  1266                           
  1267                           ;main.c: 96:         motorSIO();
  1268  0019AE  ECC6  F007         	call	_motorSIO	;wreg free
  1269                           
  1270                           ;main.c: 97:         motorHora();
  1271  0019B2  ECFA  F00B         	call	_motorHora	;wreg free
  1272                           
  1273                           ;main.c: 98:         JoystickMotor();
  1274  0019B6  EC96  F00A         	call	_JoystickMotor	;wreg free
  1275                           
  1276                           ;main.c: 99:         menu();
  1277  0019BA  EC78  F001         	call	_menu	;wreg free
  1278                           
  1279                           ;main.c: 100:         CtoA();
  1280  0019BE  ECDE  F00E         	call	_CtoA	;wreg free
  1281                           
  1282                           ;main.c: 101:         motorAltaveu();
  1283  0019C2  ECB1  F00B         	call	_motorAltaveu	;wreg free
  1284                           
  1285                           ;main.c: 102:         UmotorUsers();
  1286  0019C6  EC85  F006         	call	_UmotorUsers	;wreg free
  1287                           
  1288                           ;main.c: 104:         TeTeclat();
  1289  0019CA  EC8E  F009         	call	_TeTeclat	;wreg free
  1290                           
  1291                           ;main.c: 105:         SMotor();
  1292  0019CE  ECB7  F008         	call	_SMotor	;wreg free
  1293                           
  1294                           ;main.c: 106:         LcLCD();
  1295  0019D2  EC52  F00D         	call	_LcLCD	;wreg free
  1296  0019D6  D7E7               	goto	l7072
  1297  0019D8                     __end_of_main:
  1298                           	callstack 0
  1299                           
  1300 ;; *************** function _motorSIO *****************
  1301 ;; Defined at:
  1302 ;;		line 43 in file "SIO.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1
  1316 ;;      Params:         0       0       0
  1317 ;;      Locals:         0       0       0
  1318 ;;      Temps:          2       0       0
  1319 ;;      Totals:         2       0       0
  1320 ;;Total ram usage:        2 bytes
  1321 ;; Hardware stack levels used: 1
  1322 ;; Hardware stack levels required when called: 6
  1323 ;; This function calls:
  1324 ;;		_CToAConverteix
  1325 ;;		_CToAHaAcabat
  1326 ;;		_CToAobtenir
  1327 ;;		_HGetTime
  1328 ;;		_LcClear
  1329 ;;		_LcGotoXY
  1330 ;;		_LcLliure
  1331 ;;		_LcNewString
  1332 ;;		_LcPutChar
  1333 ;;		_TiGetTics
  1334 ;;		_TiResetTics
  1335 ;;		_UgetUserName
  1336 ;;		_UnewScore
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text1
  1343  000F8C                     __ptext1:
  1344                           	callstack 0
  1345  000F8C                     _motorSIO:
  1346                           	callstack 24
  1347                           
  1348                           ;SIO.c: 44:     static char state = 0;;SIO.c: 46:  switch(state) {
  1349                           
  1350                           ;incstack = 0
  1351  000F8C  D0C5               	goto	l5316
  1352  000F8E                     l5198:
  1353                           
  1354                           ;SIO.c: 48:    if (usuariActualSIO > -1) {
  1355  000F8E  BE4A               	btfsc	_usuariActualSIO^0,7,c
  1356  000F90  0012               	return	
  1357                           
  1358                           ;SIO.c: 49:     userPtr = UgetUserName(usuariActualSIO);
  1359  000F92  504A               	movf	_usuariActualSIO^0,w,c
  1360  000F94  EC71  F00F         	call	_UgetUserName
  1361  000F98  C064  F009         	movff	?_UgetUserName,_userPtr
  1362  000F9C  C065  F00A         	movff	?_UgetUserName+1,_userPtr+1
  1363                           
  1364                           ;SIO.c: 50:     jugantSIO = 1;
  1365  000FA0  8275               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1366                           
  1367                           ;SIO.c: 51:     Krebut = 0;
  1368  000FA2  9075               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1369                           
  1370                           ;SIO.c: 52:     state = 1;
  1371  000FA4  0E01               	movlw	1
  1372  000FA6  6E0F               	movwf	motorSIO@state^0,c
  1373  000FA8  0C01               	retlw	1
  1374  000FAA                     l5208:
  1375                           
  1376                           ;SIO.c: 56:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1377  000FAA  D8D6               	call	PL28	;call to abstracted procedure
  1378  000FAC  E108               	bnz	l5216
  1379  000FAE  A2AC               	btfss	172,1,c	;volatile
  1380  000FB0  D006               	goto	l5216
  1381                           
  1382                           ;SIO.c: 57:     TXREG = '\0';
  1383  000FB2  6AAD               	clrf	173,c	;volatile
  1384                           
  1385                           ;SIO.c: 58:     novaTeclaSIO = 0;
  1386  000FB4  6A48               	clrf	_novaTeclaSIO^0,c
  1387                           
  1388                           ;SIO.c: 59:     LATBbits.LATB3 = 1;
  1389  000FB6  868A               	bsf	138,3,c	;volatile
  1390                           
  1391                           ;SIO.c: 60:     state = 2;
  1392  000FB8  0E02               	movlw	2
  1393  000FBA  6E0F               	movwf	motorSIO@state^0,c
  1394                           
  1395                           ;SIO.c: 61:    }
  1396  000FBC  0C02               	retlw	2
  1397  000FBE                     l5216:
  1398  000FBE  D8CC               	call	PL28	;call to abstracted procedure
  1399  000FC0  A4D8               	btfss	status,2,c
  1400  000FC2  A2AC               	btfss	172,1,c	;volatile
  1401  000FC4  0012               	return	
  1402                           
  1403                           ;SIO.c: 63:     TXREG = *userPtr;
  1404  000FC6  D8C8               	call	PL28	;call to abstracted procedure
  1405  000FC8  6EAD               	movwf	173,c	;volatile
  1406                           
  1407                           ;SIO.c: 64:     userPtr++;
  1408  000FCA  4A09               	infsnz	_userPtr^0,f,c
  1409  000FCC  2A0A               	incf	(_userPtr+1)^0,f,c
  1410  000FCE  0012               	return	
  1411  000FD0                     l5224:
  1412                           
  1413                           ;SIO.c: 68:    if (RCREG == 'K') {
  1414  000FD0  0E4B               	movlw	75
  1415  000FD2  18AE               	xorwf	174,w,c
  1416  000FD4  A4D8               	btfss	status,2,c
  1417  000FD6  0012               	return	
  1418                           
  1419                           ;SIO.c: 69:     Krebut = 1;
  1420  000FD8  8075               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1421  000FDA                     l5228:
  1422                           
  1423                           ;SIO.c: 70:     state = 3;
  1424  000FDA  0E03               	movlw	3
  1425  000FDC  6E0F               	movwf	motorSIO@state^0,c
  1426  000FDE  0C03               	retlw	3
  1427  000FE0                     l5230:
  1428                           
  1429                           ;SIO.c: 74:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1430  000FE0  2849               	incf	_direccioSIO^0,w,c
  1431  000FE2  E006               	bz	l5238
  1432  000FE4  A2AC               	btfss	172,1,c	;volatile
  1433  000FE6  D004               	goto	l5238
  1434                           
  1435                           ;SIO.c: 75:     TXREG = direccioSIO;
  1436  000FE8  C049  FFAD         	movff	_direccioSIO,4013	;volatile
  1437                           
  1438                           ;SIO.c: 76:     direccioSIO = -1;
  1439  000FEC  6849               	setf	_direccioSIO^0,c
  1440  000FEE  D7F5               	goto	l5228
  1441  000FF0                     l5238:
  1442  000FF0  0E30               	movlw	48
  1443  000FF2  6448               	cpfsgt	_novaTeclaSIO^0,c
  1444  000FF4  D009               	goto	l1268
  1445  000FF6  0E3A               	movlw	58
  1446  000FF8  6048               	cpfslt	_novaTeclaSIO^0,c
  1447  000FFA  D006               	goto	l1268
  1448  000FFC  A2AC               	btfss	172,1,c	;volatile
  1449  000FFE  D004               	goto	l1268
  1450                           
  1451                           ;SIO.c: 80:     TXREG = novaTeclaSIO;
  1452  001000  C048  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1453                           
  1454                           ;SIO.c: 81:     novaTeclaSIO = 0;
  1455  001004  6A48               	clrf	_novaTeclaSIO^0,c
  1456  001006  D7E9               	goto	l5228
  1457  001008                     l1268:
  1458  001008  B275               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1459  00100A  D002               	goto	u5030
  1460  00100C  B2AC               	btfsc	172,1,c	;volatile
  1461  00100E  D002               	goto	u5040
  1462  001010                     u5030:
  1463  001010  AA9E               	btfss	158,5,c	;volatile
  1464  001012  0012               	return	
  1465  001014                     u5040:
  1466                           
  1467                           ;SIO.c: 85:     LcClear();
  1468  001014  ECF0  F00E         	call	_LcClear	;wreg free
  1469                           
  1470                           ;SIO.c: 86:     LcNewString("ERRORS:");
  1471  001018  0ED8               	movlw	low STR_6
  1472  00101A  EC12  F005         	call	PL10	;call to abstracted procedure
  1473  00101E  ECD7  F00F         	call	_LcNewString	;wreg free
  1474                           
  1475                           ;SIO.c: 87:     TXREG = 'F';
  1476  001022  0E46               	movlw	70
  1477  001024  6EAD               	movwf	173,c	;volatile
  1478                           
  1479                           ;SIO.c: 88:     novaTeclaSIO = 0;
  1480  001026  6A48               	clrf	_novaTeclaSIO^0,c
  1481                           
  1482                           ;SIO.c: 89:     state = 4;
  1483  001028  0E04               	movlw	4
  1484  00102A  6E0F               	movwf	motorSIO@state^0,c
  1485  00102C  0C04               	retlw	4
  1486  00102E                     l1275:
  1487                           
  1488                           ;SIO.c: 93:    if (PIR1bits.RCIF) {
  1489  00102E  AA9E               	btfss	158,5,c	;volatile
  1490  001030  0012               	return	
  1491                           
  1492                           ;SIO.c: 94:                 score = RCREG;
  1493  001032  CFAE F010          	movff	4014,_score	;volatile
  1494                           
  1495                           ;SIO.c: 95:                 UnewScore(score);
  1496  001036  5010               	movf	_score^0,w,c
  1497  001038  ECE3  F00F         	call	_UnewScore
  1498                           
  1499                           ;SIO.c: 96:     CToAConverteix(score);
  1500  00103C  5010               	movf	_score^0,w,c
  1501  00103E  ECD1  F00F         	call	_CToAConverteix
  1502                           
  1503                           ;SIO.c: 97:     TiResetTics(timerSIO);
  1504  001042  5011               	movf	_timerSIO^0,w,c
  1505  001044  EC3D  F00F         	call	_TiResetTics
  1506  001048                     l5266:
  1507                           
  1508                           ;SIO.c: 98:     state = 5;
  1509  001048  0E05               	movlw	5
  1510  00104A  6E0F               	movwf	motorSIO@state^0,c
  1511  00104C  0C05               	retlw	5
  1512  00104E                     l5268:
  1513                           
  1514                           ;SIO.c: 102:    if (TiGetTics(timerSIO) > 2490) {
  1515  00104E  5011               	movf	_timerSIO^0,w,c
  1516  001050  ECA7  F00E         	call	_TiGetTics
  1517  001054  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1518  001056  D00F               	goto	l5276
  1519  001058  0EBB               	movlw	187
  1520  00105A  5C64               	subwf	?_TiGetTics^0,w,c
  1521  00105C  0E09               	movlw	9
  1522  00105E  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1523  001060  E30A               	bnc	l5276
  1524                           
  1525                           ;SIO.c: 103:     LcClear();
  1526  001062  ECF0  F00E         	call	_LcClear	;wreg free
  1527                           
  1528                           ;SIO.c: 104:     LcNewString("TIME LEFT: ");
  1529  001066  0EBB               	movlw	low STR_7
  1530  001068  EC12  F005         	call	PL10	;call to abstracted procedure
  1531  00106C  ECD7  F00F         	call	_LcNewString	;wreg free
  1532                           
  1533                           ;SIO.c: 105:     state = 7;
  1534  001070  0E07               	movlw	7
  1535  001072  6E0F               	movwf	motorSIO@state^0,c
  1536                           
  1537                           ;SIO.c: 106:    }
  1538  001074  0C07               	retlw	7
  1539  001076                     l5276:
  1540  001076  5011               	movf	_timerSIO^0,w,c
  1541  001078  ECA7  F00E         	call	_TiGetTics
  1542  00107C  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1543  00107E  D006               	goto	u5070
  1544  001080  0EBA               	movlw	186
  1545  001082  5C64               	subwf	?_TiGetTics^0,w,c
  1546  001084  0E09               	movlw	9
  1547  001086  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  1548  001088  B0D8               	btfsc	status,0,c
  1549  00108A  0012               	return	
  1550  00108C                     u5070:
  1551  00108C  AA9E               	btfss	158,5,c	;volatile
  1552  00108E  0012               	return	
  1553  001090  ECDD  F00F         	call	_LcLliure	;wreg free
  1554  001094  A0D8               	btfss	status,0,c
  1555  001096  0012               	return	
  1556                           
  1557                           ;SIO.c: 108:     LcGotoXY(0,1);
  1558  001098  EC1D  F005         	call	PL36	;call to abstracted procedure
  1559  00109C  EC50  F00E         	call	_LcGotoXY
  1560                           
  1561                           ;SIO.c: 109:     LcPutChar(RCREG);
  1562  0010A0  50AE               	movf	174,w,c	;volatile
  1563  0010A2  EC7A  F00D         	call	_LcPutChar
  1564                           
  1565                           ;SIO.c: 110:     state = 6;
  1566  0010A6  0E06               	movlw	6
  1567  0010A8  6E0F               	movwf	motorSIO@state^0,c
  1568  0010AA  0C06               	retlw	6
  1569  0010AC                     l5286:
  1570                           
  1571                           ;SIO.c: 114:    if (LcLliure()) {
  1572  0010AC  ECDD  F00F         	call	_LcLliure	;wreg free
  1573  0010B0  A0D8               	btfss	status,0,c
  1574  0010B2  0012               	return	
  1575                           
  1576                           ;SIO.c: 115:     LcNewString(HGetTime());
  1577  0010B4  EC5B  F000         	call	_HGetTime	;wreg free
  1578  0010B8  D855               	call	PL54	;call to abstracted procedure
  1579  0010BA  ECD7  F00F         	call	_LcNewString	;wreg free
  1580                           
  1581                           ;SIO.c: 116:     state = 8;
  1582  0010BE  0E08               	movlw	8
  1583  0010C0  6E0F               	movwf	motorSIO@state^0,c
  1584  0010C2  0C08               	retlw	8
  1585  0010C4                     l1283:
  1586                           
  1587                           ;SIO.c: 120:    if (PIR1bits.RCIF) {
  1588  0010C4  AA9E               	btfss	158,5,c	;volatile
  1589  0010C6  0012               	return	
  1590                           
  1591                           ;SIO.c: 121:     LcPutChar(RCREG);
  1592  0010C8  50AE               	movf	174,w,c	;volatile
  1593  0010CA  EC7A  F00D         	call	_LcPutChar
  1594                           
  1595                           ;SIO.c: 122:                 TiResetTics(timerSIO);
  1596  0010CE  5011               	movf	_timerSIO^0,w,c
  1597  0010D0  EC3D  F00F         	call	_TiResetTics
  1598  0010D4  D7B9               	goto	l5266
  1599  0010D6                     l5296:
  1600                           
  1601                           ;SIO.c: 127:    if (LcLliure()) {
  1602  0010D6  ECDD  F00F         	call	_LcLliure	;wreg free
  1603  0010DA  A0D8               	btfss	status,0,c
  1604  0010DC  0012               	return	
  1605                           
  1606                           ;SIO.c: 128:     LcGotoXY(0,1);
  1607  0010DE  EC1D  F005         	call	PL36	;call to abstracted procedure
  1608  0010E2  EC50  F00E         	call	_LcGotoXY
  1609                           
  1610                           ;SIO.c: 129:     LcNewString("SCORE: ");
  1611  0010E6  0ED0               	movlw	low STR_8
  1612  0010E8  EC12  F005         	call	PL10	;call to abstracted procedure
  1613  0010EC  ECD7  F00F         	call	_LcNewString	;wreg free
  1614                           
  1615                           ;SIO.c: 130:     state = 9;
  1616  0010F0  0E09               	movlw	9
  1617  0010F2  6E0F               	movwf	motorSIO@state^0,c
  1618  0010F4  0C09               	retlw	9
  1619  0010F6                     l5304:
  1620                           
  1621                           ;SIO.c: 134:    if (LcLliure() && CToAHaAcabat() == 250) {
  1622  0010F6  ECDD  F00F         	call	_LcLliure	;wreg free
  1623  0010FA  A0D8               	btfss	status,0,c
  1624  0010FC  0012               	return	
  1625  0010FE  EC75  F000         	call	_CToAHaAcabat	;wreg free
  1626  001102  0AFA               	xorlw	250
  1627  001104  A4D8               	btfss	status,2,c
  1628  001106  0012               	return	
  1629                           
  1630                           ;SIO.c: 135:     LcNewString(CToAobtenir());
  1631  001108  EC73  F000         	call	_CToAobtenir	;wreg free
  1632  00110C  D82B               	call	PL54	;call to abstracted procedure
  1633  00110E  ECD7  F00F         	call	_LcNewString	;wreg free
  1634                           
  1635                           ;SIO.c: 136:     usuariActualSIO = -1;
  1636  001112  684A               	setf	_usuariActualSIO^0,c
  1637                           
  1638                           ;SIO.c: 137:     state = 0;
  1639  001114  6A0F               	clrf	motorSIO@state^0,c
  1640  001116  0012               	return	
  1641  001118                     l5316:
  1642  001118  500F               	movf	motorSIO@state^0,w,c
  1643  00111A  6E73               	movwf	??_motorSIO^0,c
  1644  00111C  6A74               	clrf	(??_motorSIO+1)^0,c
  1645                           
  1646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1647                           ; Switch size 1, requested type "space"
  1648                           ; Number of cases is 1, Range of values is 0 to 0
  1649                           ; switch strategies available:
  1650                           ; Name         Instructions Cycles
  1651                           ; simple_byte            4     3 (average)
  1652                           ;	Chosen strategy is simple_byte
  1653  00111E  5074               	movf	(??_motorSIO+1)^0,w,c
  1654  001120  A4D8               	btfss	status,2,c
  1655  001122  0012               	return	
  1656                           
  1657                           ; Switch size 1, requested type "space"
  1658                           ; Number of cases is 10, Range of values is 0 to 9
  1659                           ; switch strategies available:
  1660                           ; Name         Instructions Cycles
  1661                           ; simple_byte           31    16 (average)
  1662                           ;	Chosen strategy is simple_byte
  1663  001124  5073               	movf	??_motorSIO^0,w,c
  1664  001126  E101 D732          	bz	l5198
  1665  00112A  0A01               	xorlw	1	; case 1
  1666  00112C  E101 D73D          	bz	l5208
  1667  001130  0A03               	xorlw	3	; case 2
  1668  001132  E101 D74D          	bz	l5224
  1669  001136  0A01               	xorlw	1	; case 3
  1670  001138  E101 D752          	bz	l5230
  1671  00113C  0A07               	xorlw	7	; case 4
  1672  00113E  E101 D776          	bz	l1275
  1673  001142  0A01               	xorlw	1	; case 5
  1674  001144  E084               	bz	l5268
  1675  001146  0A03               	xorlw	3	; case 6
  1676  001148  E0BD               	bz	l1283
  1677  00114A  0A01               	xorlw	1	; case 7
  1678  00114C  E0AF               	bz	l5286
  1679  00114E  0A0F               	xorlw	15	; case 8
  1680  001150  E0C2               	bz	l5296
  1681  001152  0A01               	xorlw	1	; case 9
  1682  001154  E0D0               	bz	l5304
  1683  001156  0012               	return		;funcret
  1684  001158                     __end_of_motorSIO:
  1685                           	callstack 0
  1686  001158                     PL28:
  1687                           	callstack 24
  1688  001158  C009  FFD9         	movff	_userPtr,fsr2l
  1689  00115C  C00A  FFDA         	movff	_userPtr+1,fsr2h
  1690  001160  50DF               	movf	indf2,w,c
  1691  001162  0012               	return	
  1692  001164                     __end_ofPL28:
  1693                           	callstack 0
  1694  001164                     PL54:
  1695                           	callstack 24
  1696  001164  6E73               	movwf	??_motorSIO^0,c
  1697  001166  C073  F067         	movff	??_motorSIO,LcNewString@new_s
  1698  00116A  6A68               	clrf	(LcNewString@new_s+1)^0,c
  1699  00116C  0012               	return	
  1700  00116E                     __end_ofPL54:
  1701                           	callstack 0
  1702                           
  1703 ;; *************** function _UnewScore *****************
  1704 ;; Defined at:
  1705 ;;		line 290 in file "Usuaris.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  scoretmp        1    wreg     unsigned char 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1
  1719 ;;      Params:         0       0       0
  1720 ;;      Locals:         1       0       0
  1721 ;;      Temps:          0       0       0
  1722 ;;      Totals:         1       0       0
  1723 ;;Total ram usage:        1 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 2
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_motorSIO
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text2
  1734  001FC6                     __ptext2:
  1735                           	callstack 0
  1736  001FC6                     _UnewScore:
  1737                           	callstack 27
  1738                           
  1739                           ;incstack = 0
  1740                           ;UnewScore@scoretmp stored from wreg
  1741  001FC6  6E64               	movwf	UnewScore@scoretmp^0,c
  1742                           
  1743                           ;Usuaris.c: 291:     scoreUsr = scoretmp;
  1744  001FC8  C064  F028         	movff	UnewScore@scoretmp,_scoreUsr
  1745                           
  1746                           ;Usuaris.c: 292:     do_updateScore = 1;
  1747  001FCC  8676               	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1748  001FCE  0012               	return		;funcret
  1749  001FD0                     __end_of_UnewScore:
  1750                           	callstack 0
  1751                           
  1752 ;; *************** function _motorJoc *****************
  1753 ;; Defined at:
  1754 ;;		line 44 in file "Joc.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1
  1768 ;;      Params:         0       0       0
  1769 ;;      Locals:         0       0       0
  1770 ;;      Temps:          2       0       0
  1771 ;;      Totals:         2       0       0
  1772 ;;Total ram usage:        2 bytes
  1773 ;; Hardware stack levels used: 1
  1774 ;; Hardware stack levels required when called: 5
  1775 ;; This function calls:
  1776 ;;		_HClearNouSegon
  1777 ;;		_HGetTime
  1778 ;;		_HJugant
  1779 ;;		_HNouSegon
  1780 ;;		_HnoJugant
  1781 ;;		_LcGotoXY
  1782 ;;		_LcLliure
  1783 ;;		_LcNewString
  1784 ;;		_SIONovaDireccio
  1785 ;;		_SIONovaTecla
  1786 ;;		_SIOStartGame
  1787 ;;		_SIOcheckKrebut
  1788 ;;		_SIOendGame
  1789 ;;		_conversorJoystick
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text3
  1796  0016C0                     __ptext3:
  1797                           	callstack 0
  1798  0016C0                     _motorJoc:
  1799                           	callstack 25
  1800                           
  1801                           ;Joc.c: 45:     static char state = 0;;Joc.c: 47:  switch(state) {
  1802                           
  1803                           ;incstack = 0
  1804  0016C0  D043               	goto	l5190
  1805  0016C2                     l5144:
  1806                           
  1807                           ;Joc.c: 49:    if (usuariJoc != -1) {
  1808  0016C2  284C               	incf	_usuariJoc^0,w,c
  1809  0016C4  B4D8               	btfsc	status,2,c
  1810  0016C6  0012               	return	
  1811                           
  1812                           ;Joc.c: 50:     SIOStartGame(usuariJoc);
  1813  0016C8  504C               	movf	_usuariJoc^0,w,c
  1814  0016CA  ECE8  F00F         	call	_SIOStartGame
  1815                           
  1816                           ;Joc.c: 51:     jugantJoc = 1;
  1817  0016CE  8475               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1818                           
  1819                           ;Joc.c: 52:     state = 2;
  1820  0016D0  0E02               	movlw	2
  1821  0016D2  6E12               	movwf	motorJoc@state^0,c
  1822                           
  1823                           ;Joc.c: 54:   break;
  1824                           
  1825                           ;Joc.c: 53:    }
  1826  0016D4  0C02               	retlw	2
  1827  0016D6                     l1161:
  1828                           
  1829                           ;Joc.c: 56:    if (!jugantJoc) {
  1830  0016D6  B475               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1831  0016D8  D008               	goto	l5160
  1832                           
  1833                           ;Joc.c: 57:     usuariJoc = -1;
  1834  0016DA  684C               	setf	_usuariJoc^0,c
  1835                           
  1836                           ;Joc.c: 58:     HnoJugant();
  1837  0016DC  EC59  F000         	call	_HnoJugant	;wreg free
  1838                           
  1839                           ;Joc.c: 59:     SIOendGame();
  1840  0016E0  EC57  F000         	call	_SIOendGame	;wreg free
  1841                           
  1842                           ;Joc.c: 60:     LATBbits.LATB3 = 0;
  1843  0016E4  968A               	bcf	138,3,c	;volatile
  1844  0016E6                     l5158:
  1845                           
  1846                           ;Joc.c: 61:     state--;
  1847  0016E6  0612               	decf	motorJoc@state^0,f,c
  1848                           
  1849                           ;Joc.c: 62:    }
  1850  0016E8  0012               	return	
  1851  0016EA                     l5160:
  1852  0016EA  BE13               	btfsc	_direccioJoc^0,7,c
  1853  0016EC  D007               	goto	l5166
  1854                           
  1855                           ;Joc.c: 64:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1856  0016EE  5013               	movf	_direccioJoc^0,w,c
  1857  0016F0  ECBA  F00E         	call	_conversorJoystick
  1858  0016F4  ECF0  F00F         	call	_SIONovaDireccio
  1859                           
  1860                           ;Joc.c: 65:     direccioJoc = -1;
  1861  0016F8  6813               	setf	_direccioJoc^0,c
  1862                           
  1863                           ;Joc.c: 66:    }
  1864  0016FA  0012               	return	
  1865  0016FC                     l5166:
  1866  0016FC  ECB3  F00F         	call	_HNouSegon	;wreg free
  1867  001700  E311               	bnc	l5176
  1868  001702  ECDD  F00F         	call	_LcLliure	;wreg free
  1869  001706  E30E               	bnc	l5176
  1870                           
  1871                           ;Joc.c: 68:     HClearNouSegon();
  1872  001708  EC5D  F000         	call	_HClearNouSegon	;wreg free
  1873                           
  1874                           ;Joc.c: 69:     LcGotoXY(0,1);
  1875  00170C  EC1D  F005         	call	PL36	;call to abstracted procedure
  1876  001710  EC50  F00E         	call	_LcGotoXY
  1877                           
  1878                           ;Joc.c: 70:     LcNewString(HGetTime());
  1879  001714  EC5B  F000         	call	_HGetTime	;wreg free
  1880  001718  6E72               	movwf	??_motorJoc^0,c
  1881  00171A  C072  F067         	movff	??_motorJoc,LcNewString@new_s
  1882  00171E  6A68               	clrf	(LcNewString@new_s+1)^0,c
  1883  001720  EFD7  F00F         	goto	_LcNewString	;wreg free
  1884  001724                     l5176:
  1885  001724  504B               	movf	_novaTeclaJOC^0,w,c
  1886  001726  0A80               	xorlw	128
  1887  001728  0F7F               	addlw	-129
  1888  00172A  A0D8               	btfss	status,0,c
  1889  00172C  0012               	return	
  1890                           
  1891                           ;Joc.c: 73:     SIONovaTecla(novaTeclaJOC+48);
  1892  00172E  504B               	movf	_novaTeclaJOC^0,w,c
  1893  001730  0F30               	addlw	48
  1894  001732  ECEC  F00F         	call	_SIONovaTecla
  1895                           
  1896                           ;Joc.c: 74:     novaTeclaJOC = -1;
  1897  001736  684B               	setf	_novaTeclaJOC^0,c
  1898  001738  0012               	return	
  1899  00173A                     l5182:
  1900                           
  1901                           ;Joc.c: 78:    if (SIOcheckKrebut()) {
  1902  00173A  ECAD  F00F         	call	_SIOcheckKrebut	;wreg free
  1903  00173E  A0D8               	btfss	status,0,c
  1904  001740  0012               	return	
  1905                           
  1906                           ;Joc.c: 79:     HJugant();
  1907  001742  EC4B  F000         	call	_HJugant	;wreg free
  1908  001746  D7CF               	goto	l5158
  1909  001748                     l5190:
  1910  001748  5012               	movf	motorJoc@state^0,w,c
  1911  00174A  6E72               	movwf	??_motorJoc^0,c
  1912  00174C  6A73               	clrf	(??_motorJoc+1)^0,c
  1913                           
  1914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1915                           ; Switch size 1, requested type "space"
  1916                           ; Number of cases is 1, Range of values is 0 to 0
  1917                           ; switch strategies available:
  1918                           ; Name         Instructions Cycles
  1919                           ; simple_byte            4     3 (average)
  1920                           ;	Chosen strategy is simple_byte
  1921  00174E  5073               	movf	(??_motorJoc+1)^0,w,c
  1922  001750  A4D8               	btfss	status,2,c
  1923  001752  0012               	return	
  1924                           
  1925                           ; Switch size 1, requested type "space"
  1926                           ; Number of cases is 3, Range of values is 0 to 2
  1927                           ; switch strategies available:
  1928                           ; Name         Instructions Cycles
  1929                           ; simple_byte           10     6 (average)
  1930                           ;	Chosen strategy is simple_byte
  1931  001754  5072               	movf	??_motorJoc^0,w,c
  1932  001756  E0B5               	bz	l5144
  1933  001758  0A01               	xorlw	1	; case 1
  1934  00175A  E0BD               	bz	l1161
  1935  00175C  0A03               	xorlw	3	; case 2
  1936  00175E  E0ED               	bz	l5182
  1937  001760  0012               	return		;funcret
  1938  001762                     __end_of_motorJoc:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _conversorJoystick *****************
  1942 ;; Defined at:
  1943 ;;		line 27 in file "Joc.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  direc           1    wreg     unsigned char 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  direc           1    5[COMRAM] unsigned char 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      unsigned char 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1
  1957 ;;      Params:         0       0       0
  1958 ;;      Locals:         1       0       0
  1959 ;;      Temps:          0       0       0
  1960 ;;      Totals:         1       0       0
  1961 ;;Total ram usage:        1 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; Hardware stack levels required when called: 2
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_motorJoc
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text4
  1972  001D74                     __ptext4:
  1973                           	callstack 0
  1974  001D74                     _conversorJoystick:
  1975                           	callstack 27
  1976                           
  1977                           ;incstack = 0
  1978                           ;conversorJoystick@direc stored from wreg
  1979  001D74  6E64               	movwf	conversorJoystick@direc^0,c
  1980                           
  1981                           ;Joc.c: 29:     if (direc==2) {
  1982  001D76  0E02               	movlw	2
  1983  001D78  1864               	xorwf	conversorJoystick@direc^0,w,c
  1984  001D7A  E101               	bnz	l2352
  1985                           
  1986                           ;Joc.c: 30:         return 'W';
  1987  001D7C  0C57               	retlw	87
  1988  001D7E                     l2352:
  1989                           
  1990                           ;Joc.c: 32:     if (direc==6) {
  1991  001D7E  0E06               	movlw	6
  1992  001D80  1864               	xorwf	conversorJoystick@direc^0,w,c
  1993  001D82  E101               	bnz	l2358
  1994                           
  1995                           ;Joc.c: 33:         return 'D';
  1996  001D84  0C44               	retlw	68
  1997  001D86                     l2358:
  1998                           
  1999                           ;Joc.c: 35:     if (direc==8) {
  2000  001D86  0E08               	movlw	8
  2001  001D88  1864               	xorwf	conversorJoystick@direc^0,w,c
  2002  001D8A  E101               	bnz	l2364
  2003                           
  2004                           ;Joc.c: 36:         return 'S';
  2005  001D8C  0C53               	retlw	83
  2006  001D8E                     l2364:
  2007                           
  2008                           ;Joc.c: 38:     if (direc==4) {
  2009  001D8E  0E04               	movlw	4
  2010  001D90  1864               	xorwf	conversorJoystick@direc^0,w,c
  2011  001D92  E101               	bnz	l2370
  2012                           
  2013                           ;Joc.c: 39:         return 'A';
  2014  001D94  0C41               	retlw	65
  2015  001D96                     l2370:
  2016                           
  2017                           ;Joc.c: 41:     return 0;
  2018  001D96  0C00               	retlw	0	;funcret
  2019  001D98                     __end_of_conversorJoystick:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _SIOendGame *****************
  2023 ;; Defined at:
  2024 ;;		line 23 in file "SIO.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		None
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1
  2038 ;;      Params:         0       0       0
  2039 ;;      Locals:         0       0       0
  2040 ;;      Temps:          0       0       0
  2041 ;;      Totals:         0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 2
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_motorJoc
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text5
  2053  0000AE                     __ptext5:
  2054                           	callstack 0
  2055  0000AE                     _SIOendGame:
  2056                           	callstack 27
  2057                           
  2058                           ;SIO.c: 24:     jugantSIO = 0;
  2059                           
  2060                           ;incstack = 0
  2061  0000AE  9275               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2062  0000B0  0012               	return		;funcret
  2063  0000B2                     __end_of_SIOendGame:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function _SIOcheckKrebut *****************
  2067 ;; Defined at:
  2068 ;;		line 26 in file "SIO.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;		None               void
  2075 ;; Registers used:
  2076 ;;		status,0
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1
  2082 ;;      Params:         0       0       0
  2083 ;;      Locals:         0       0       0
  2084 ;;      Temps:          0       0       0
  2085 ;;      Totals:         0       0       0
  2086 ;;Total ram usage:        0 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 2
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_motorJoc
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text6
  2097  001F5A                     __ptext6:
  2098                           	callstack 0
  2099  001F5A                     _SIOcheckKrebut:
  2100                           	callstack 27
  2101                           
  2102                           ;SIO.c: 27:     return Krebut;
  2103                           
  2104                           ;incstack = 0
  2105  001F5A  B075               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2106  001F5C  D002               	goto	l2386
  2107  001F5E  90D8               	bcf	status,0,c
  2108  001F60  0012               	return	
  2109  001F62                     l2386:
  2110  001F62  80D8               	bsf	status,0,c
  2111  001F64  0012               	return		;funcret
  2112  001F66                     __end_of_SIOcheckKrebut:
  2113                           	callstack 0
  2114                           
  2115 ;; *************** function _SIOStartGame *****************
  2116 ;; Defined at:
  2117 ;;		line 33 in file "SIO.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  usuari          1    wreg     unsigned char 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  usuari          1    5[COMRAM] unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1
  2131 ;;      Params:         0       0       0
  2132 ;;      Locals:         1       0       0
  2133 ;;      Temps:          0       0       0
  2134 ;;      Totals:         1       0       0
  2135 ;;Total ram usage:        1 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 2
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_motorJoc
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text7
  2146  001FD0                     __ptext7:
  2147                           	callstack 0
  2148  001FD0                     _SIOStartGame:
  2149                           	callstack 27
  2150                           
  2151                           ;incstack = 0
  2152                           ;SIOStartGame@usuari stored from wreg
  2153  001FD0  6E64               	movwf	SIOStartGame@usuari^0,c
  2154                           
  2155                           ;SIO.c: 34:     usuariActualSIO = usuari;
  2156  001FD2  C064  F04A         	movff	SIOStartGame@usuari,_usuariActualSIO
  2157  001FD6  0012               	return		;funcret
  2158  001FD8                     __end_of_SIOStartGame:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _SIONovaTecla *****************
  2162 ;; Defined at:
  2163 ;;		line 40 in file "SIO.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  tecla           1    wreg     char 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  tecla           1    5[COMRAM] char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1
  2177 ;;      Params:         0       0       0
  2178 ;;      Locals:         1       0       0
  2179 ;;      Temps:          0       0       0
  2180 ;;      Totals:         1       0       0
  2181 ;;Total ram usage:        1 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; Hardware stack levels required when called: 2
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_motorJoc
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text8
  2192  001FD8                     __ptext8:
  2193                           	callstack 0
  2194  001FD8                     _SIONovaTecla:
  2195                           	callstack 27
  2196                           
  2197                           ;incstack = 0
  2198                           ;SIONovaTecla@tecla stored from wreg
  2199  001FD8  6E64               	movwf	SIONovaTecla@tecla^0,c
  2200                           
  2201                           ;SIO.c: 41:     novaTeclaSIO = tecla;
  2202  001FDA  C064  F048         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2203  001FDE  0012               	return		;funcret
  2204  001FE0                     __end_of_SIONovaTecla:
  2205                           	callstack 0
  2206                           
  2207 ;; *************** function _SIONovaDireccio *****************
  2208 ;; Defined at:
  2209 ;;		line 29 in file "SIO.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  num             1    wreg     unsigned char 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  num             1    5[COMRAM] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1
  2223 ;;      Params:         0       0       0
  2224 ;;      Locals:         1       0       0
  2225 ;;      Temps:          0       0       0
  2226 ;;      Totals:         1       0       0
  2227 ;;Total ram usage:        1 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 2
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_motorJoc
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text9
  2238  001FE0                     __ptext9:
  2239                           	callstack 0
  2240  001FE0                     _SIONovaDireccio:
  2241                           	callstack 27
  2242                           
  2243                           ;incstack = 0
  2244                           ;SIONovaDireccio@num stored from wreg
  2245  001FE0  6E64               	movwf	SIONovaDireccio@num^0,c
  2246                           
  2247                           ;SIO.c: 30:     direccioSIO = num;
  2248  001FE2  C064  F049         	movff	SIONovaDireccio@num,_direccioSIO
  2249  001FE6  0012               	return		;funcret
  2250  001FE8                     __end_of_SIONovaDireccio:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _HnoJugant *****************
  2254 ;; Defined at:
  2255 ;;		line 35 in file "Hora.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		None
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1
  2269 ;;      Params:         0       0       0
  2270 ;;      Locals:         0       0       0
  2271 ;;      Temps:          0       0       0
  2272 ;;      Totals:         0       0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 2
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_motorJoc
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text10
  2284  0000B2                     __ptext10:
  2285                           	callstack 0
  2286  0000B2                     _HnoJugant:
  2287                           	callstack 27
  2288                           
  2289                           ;Hora.c: 36:     jugant = 0;
  2290                           
  2291                           ;incstack = 0
  2292  0000B2  9A75               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2293  0000B4  0012               	return		;funcret
  2294  0000B6                     __end_of_HnoJugant:
  2295                           	callstack 0
  2296                           
  2297 ;; *************** function _HNouSegon *****************
  2298 ;; Defined at:
  2299 ;;		line 23 in file "Hora.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;		None
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;		None
  2304 ;; Return value:  Size  Location     Type
  2305 ;;		None               void
  2306 ;; Registers used:
  2307 ;;		status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1
  2313 ;;      Params:         0       0       0
  2314 ;;      Locals:         0       0       0
  2315 ;;      Temps:          0       0       0
  2316 ;;      Totals:         0       0       0
  2317 ;;Total ram usage:        0 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; Hardware stack levels required when called: 2
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_motorJoc
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text11
  2328  001F66                     __ptext11:
  2329                           	callstack 0
  2330  001F66                     _HNouSegon:
  2331                           	callstack 27
  2332                           
  2333                           ;Hora.c: 24:     return nouSegon;
  2334                           
  2335                           ;incstack = 0
  2336  001F66  B875               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2337  001F68  D002               	goto	l2332
  2338  001F6A  90D8               	bcf	status,0,c
  2339  001F6C  0012               	return	
  2340  001F6E                     l2332:
  2341  001F6E  80D8               	bsf	status,0,c
  2342  001F70  0012               	return		;funcret
  2343  001F72                     __end_of_HNouSegon:
  2344                           	callstack 0
  2345                           
  2346 ;; *************** function _HJugant *****************
  2347 ;; Defined at:
  2348 ;;		line 38 in file "Hora.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		None
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1
  2362 ;;      Params:         0       0       0
  2363 ;;      Locals:         0       0       0
  2364 ;;      Temps:          0       0       0
  2365 ;;      Totals:         0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_motorJoc
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text12
  2377  000096                     __ptext12:
  2378                           	callstack 0
  2379  000096                     _HJugant:
  2380                           	callstack 27
  2381                           
  2382                           ;Hora.c: 39:     jugant = 1;
  2383                           
  2384                           ;incstack = 0
  2385  000096  8A75               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2386                           
  2387                           ;Hora.c: 40:     tempsAcabat = 0;
  2388  000098  9675               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2389  00009A  0012               	return		;funcret
  2390  00009C                     __end_of_HJugant:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _HGetTime *****************
  2394 ;; Defined at:
  2395 ;;		line 31 in file "Hora.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      PTR unsigned char 
  2402 ;; Registers used:
  2403 ;;		wreg
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1
  2409 ;;      Params:         2       0       0
  2410 ;;      Locals:         0       0       0
  2411 ;;      Temps:          0       0       0
  2412 ;;      Totals:         2       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 2
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_motorJoc
  2420 ;;		_motorSIO
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text13
  2425  0000B6                     __ptext13:
  2426                           	callstack 0
  2427  0000B6                     _HGetTime:
  2428                           	callstack 27
  2429                           
  2430                           ;Hora.c: 32:     return hora;
  2431                           
  2432                           ;incstack = 0
  2433  0000B6  0E56               	movlw	_hora& (0+255)
  2434  0000B8  0012               	return		;funcret
  2435  0000BA                     __end_of_HGetTime:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _HClearNouSegon *****************
  2439 ;; Defined at:
  2440 ;;		line 27 in file "Hora.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		None
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1
  2454 ;;      Params:         0       0       0
  2455 ;;      Locals:         0       0       0
  2456 ;;      Temps:          0       0       0
  2457 ;;      Totals:         0       0       0
  2458 ;;Total ram usage:        0 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; Hardware stack levels required when called: 2
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_motorJoc
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text14
  2469  0000BA                     __ptext14:
  2470                           	callstack 0
  2471  0000BA                     _HClearNouSegon:
  2472                           	callstack 27
  2473                           
  2474                           ;Hora.c: 28:     nouSegon = 0;
  2475                           
  2476                           ;incstack = 0
  2477  0000BA  9875               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2478  0000BC  0012               	return		;funcret
  2479  0000BE                     __end_of_HClearNouSegon:
  2480                           	callstack 0
  2481                           
  2482 ;; *************** function _motorHora *****************
  2483 ;; Defined at:
  2484 ;;		line 46 in file "Hora.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1
  2498 ;;      Params:         0       0       0
  2499 ;;      Locals:         0       0       0
  2500 ;;      Temps:          2       0       0
  2501 ;;      Totals:         2       0       0
  2502 ;;Total ram usage:        2 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 3
  2505 ;; This function calls:
  2506 ;;		_TiGetTics
  2507 ;;		_TiResetTics
  2508 ;;		_playAltaveu
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text15
  2515  0017F4                     __ptext15:
  2516                           	callstack 0
  2517  0017F4                     _motorHora:
  2518                           	callstack 27
  2519                           
  2520                           ;Hora.c: 47:  static char state = 0;;Hora.c: 49:  switch(state) {
  2521                           
  2522                           ;incstack = 0
  2523  0017F4  D038               	goto	l5374
  2524  0017F6                     l5324:
  2525                           
  2526                           ;Hora.c: 51:    if (TiGetTics(timerHora) >= 1205) {
  2527  0017F6  5016               	movf	_timerHora^0,w,c
  2528  0017F8  ECA7  F00E         	call	_TiGetTics
  2529  0017FC  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  2530  0017FE  0012               	return	
  2531  001800  EC80  F006         	call	PL78	;call to abstracted procedure
  2532  001804  A0D8               	btfss	status,0,c
  2533  001806  0012               	return	
  2534                           
  2535                           ;Hora.c: 52:     TiResetTics(timerHora);
  2536  001808  5016               	movf	_timerHora^0,w,c
  2537  00180A  EC3D  F00F         	call	_TiResetTics
  2538                           
  2539                           ;Hora.c: 53:     if(jugant){
  2540  00180E  AA75               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2541  001810  D028               	goto	l5370
  2542                           
  2543                           ;Hora.c: 54:       nouSegon = 1;
  2544  001812  8875               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2545                           
  2546                           ;Hora.c: 56:      hora[4]--;
  2547  001814  065A               	decf	(_hora+4)^0,f,c
  2548                           
  2549                           ;Hora.c: 57:      if(hora[4] == ('0'-1)){
  2550  001816  0E2F               	movlw	47
  2551  001818  185A               	xorwf	(_hora+4)^0,w,c
  2552  00181A  E103               	bnz	l5340
  2553                           
  2554                           ;Hora.c: 58:       hora[4] = '9';
  2555  00181C  0E39               	movlw	57
  2556  00181E  6E5A               	movwf	(_hora+4)^0,c
  2557                           
  2558                           ;Hora.c: 59:       hora[3]--;
  2559  001820  0659               	decf	(_hora+3)^0,f,c
  2560  001822                     l5340:
  2561                           
  2562                           ;Hora.c: 62:      if(hora[3] == ('0'-1)){
  2563  001822  0E2F               	movlw	47
  2564  001824  1859               	xorwf	(_hora+3)^0,w,c
  2565  001826  E103               	bnz	l5346
  2566                           
  2567                           ;Hora.c: 63:       hora[3] = '5';
  2568  001828  0E35               	movlw	53
  2569  00182A  6E59               	movwf	(_hora+3)^0,c
  2570                           
  2571                           ;Hora.c: 64:       hora[1]--;
  2572  00182C  0657               	decf	(_hora+1)^0,f,c
  2573  00182E                     l5346:
  2574                           
  2575                           ;Hora.c: 67:      if(hora[1] == ('0'-1)){
  2576  00182E  0E2F               	movlw	47
  2577  001830  1857               	xorwf	(_hora+1)^0,w,c
  2578  001832  E103               	bnz	l5352
  2579                           
  2580                           ;Hora.c: 68:       hora[1] = '9';
  2581  001834  0E39               	movlw	57
  2582  001836  6E57               	movwf	(_hora+1)^0,c
  2583                           
  2584                           ;Hora.c: 69:       hora[0]--;
  2585  001838  0656               	decf	_hora^0,f,c
  2586  00183A                     l5352:
  2587                           
  2588                           ;Hora.c: 72:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2589  00183A  0E30               	movlw	48
  2590  00183C  1856               	xorwf	_hora^0,w,c
  2591  00183E  E10A               	bnz	l5362
  2592  001840  0E30               	movlw	48
  2593  001842  1857               	xorwf	(_hora+1)^0,w,c
  2594  001844  E107               	bnz	l5362
  2595  001846  0E30               	movlw	48
  2596  001848  1859               	xorwf	(_hora+3)^0,w,c
  2597  00184A  E104               	bnz	l5362
  2598  00184C  0E30               	movlw	48
  2599  00184E  185A               	xorwf	(_hora+4)^0,w,c
  2600  001850  E101               	bnz	l5362
  2601                           
  2602                           ;Hora.c: 73:       tempsAcabat = 1;
  2603  001852  8675               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2604  001854                     l5362:
  2605                           
  2606                           ;Hora.c: 76:      segons++;
  2607  001854  2A15               	incf	_segons^0,f,c
  2608                           
  2609                           ;Hora.c: 77:      if(segons > 59){
  2610  001856  0E3B               	movlw	59
  2611  001858  6415               	cpfsgt	_segons^0,c
  2612  00185A  D003               	goto	l5370
  2613                           
  2614                           ;Hora.c: 78:       playAltaveu();
  2615  00185C  EC5F  F000         	call	_playAltaveu	;wreg free
  2616                           
  2617                           ;Hora.c: 79:       segons = 0;
  2618  001860  6A15               	clrf	_segons^0,c
  2619  001862                     l5370:
  2620                           
  2621                           ;Hora.c: 82:     state = 0;
  2622  001862  6A14               	clrf	motorHora@state^0,c
  2623  001864  0012               	return	
  2624  001866                     l5374:
  2625  001866  5014               	movf	motorHora@state^0,w,c
  2626  001868  6E6B               	movwf	??_motorHora^0,c
  2627  00186A  6A6C               	clrf	(??_motorHora+1)^0,c
  2628                           
  2629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2630                           ; Switch size 1, requested type "space"
  2631                           ; Number of cases is 1, Range of values is 0 to 0
  2632                           ; switch strategies available:
  2633                           ; Name         Instructions Cycles
  2634                           ; simple_byte            4     3 (average)
  2635                           ;	Chosen strategy is simple_byte
  2636  00186C  506C               	movf	(??_motorHora+1)^0,w,c
  2637  00186E  A4D8               	btfss	status,2,c
  2638  001870  0012               	return	
  2639                           
  2640                           ; Switch size 1, requested type "space"
  2641                           ; Number of cases is 1, Range of values is 0 to 0
  2642                           ; switch strategies available:
  2643                           ; Name         Instructions Cycles
  2644                           ; simple_byte            4     3 (average)
  2645                           ;	Chosen strategy is simple_byte
  2646  001872  506B               	movf	??_motorHora^0,w,c
  2647  001874  E0C0               	bz	l5324
  2648  001876  0012               	return		;funcret
  2649  001878                     __end_of_motorHora:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function _playAltaveu *****************
  2653 ;; Defined at:
  2654 ;;		line 13 in file "Altaveu.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		None
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1
  2668 ;;      Params:         0       0       0
  2669 ;;      Locals:         0       0       0
  2670 ;;      Temps:          0       0       0
  2671 ;;      Totals:         0       0       0
  2672 ;;Total ram usage:        0 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 2
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_motorHora
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text16
  2683  0000BE                     __ptext16:
  2684                           	callstack 0
  2685  0000BE                     _playAltaveu:
  2686                           	callstack 27
  2687                           
  2688                           ;Altaveu.c: 14:     reproduir = 1;
  2689                           
  2690                           ;incstack = 0
  2691  0000BE  8476               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2692  0000C0  0012               	return		;funcret
  2693  0000C2                     __end_of_playAltaveu:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function _motorAltaveu *****************
  2697 ;; Defined at:
  2698 ;;		line 16 in file "Altaveu.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1
  2712 ;;      Params:         0       0       0
  2713 ;;      Locals:         0       0       0
  2714 ;;      Temps:          3       0       0
  2715 ;;      Totals:         3       0       0
  2716 ;;Total ram usage:        3 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 3
  2719 ;; This function calls:
  2720 ;;		_TiGetTics
  2721 ;;		_TiResetTics
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text17
  2728  001762                     __ptext17:
  2729                           	callstack 0
  2730  001762                     _motorAltaveu:
  2731                           	callstack 27
  2732                           
  2733                           ;Altaveu.c: 17: static char state = 0;;Altaveu.c: 19:  switch(state) {
  2734                           
  2735                           ;incstack = 0
  2736  001762  D02F               	goto	l5976
  2737  001764                     l862:
  2738                           
  2739                           ;Altaveu.c: 21:    if (reproduir) {
  2740  001764  A476               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2741  001766  0012               	return	
  2742                           
  2743                           ;Altaveu.c: 22:     nota = 1;
  2744  001768  0E01               	movlw	1
  2745  00176A  6E26               	movwf	_nota^0,c
  2746                           
  2747                           ;Altaveu.c: 23:     copsNota = 0;
  2748  00176C  6A24               	clrf	_copsNota^0,c
  2749                           
  2750                           ;Altaveu.c: 24:     TiResetTics(timerAltaveu);
  2751  00176E  5025               	movf	_timerAltaveu^0,w,c
  2752  001770  EC3D  F00F         	call	_TiResetTics
  2753                           
  2754                           ;Altaveu.c: 25:     state = 1;
  2755  001774  0E01               	movlw	1
  2756  001776  6E23               	movwf	motorAltaveu@state^0,c
  2757  001778  0C01               	retlw	1
  2758  00177A                     l5944:
  2759                           
  2760                           ;Altaveu.c: 29:    if (nota > 5) {
  2761  00177A  0E05               	movlw	5
  2762  00177C  6426               	cpfsgt	_nota^0,c
  2763  00177E  D003               	goto	l5950
  2764                           
  2765                           ;Altaveu.c: 30:     reproduir = 0;
  2766  001780  9476               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2767                           
  2768                           ;Altaveu.c: 31:     state--;
  2769  001782  0623               	decf	motorAltaveu@state^0,f,c
  2770                           
  2771                           ;Altaveu.c: 32:    }
  2772  001784  0C05               	retlw	5
  2773  001786                     l5950:
  2774  001786  0EA8               	movlw	168
  2775  001788  1824               	xorwf	_copsNota^0,w,c
  2776  00178A  E103               	bnz	l5956
  2777                           
  2778                           ;Altaveu.c: 34:     nota++;
  2779  00178C  2A26               	incf	_nota^0,f,c
  2780                           
  2781                           ;Altaveu.c: 35:     copsNota = 0;
  2782  00178E  6A24               	clrf	_copsNota^0,c
  2783                           
  2784                           ;Altaveu.c: 36:    }
  2785  001790  0012               	return	
  2786  001792                     l5956:
  2787  001792  5025               	movf	_timerAltaveu^0,w,c
  2788  001794  ECA7  F00E         	call	_TiGetTics
  2789  001798  D821               	call	PL24	;call to abstracted procedure
  2790  00179A  B0D8               	btfsc	status,0,c
  2791  00179C  0012               	return	
  2792                           
  2793                           ;Altaveu.c: 38:     LATBbits.LB0 = 1;
  2794  00179E  808A               	bsf	138,0,c	;volatile
  2795                           
  2796                           ;Altaveu.c: 39:     TiResetTics(timerAltaveu);
  2797  0017A0  5025               	movf	_timerAltaveu^0,w,c
  2798  0017A2  EC3D  F00F         	call	_TiResetTics
  2799  0017A6                     l5962:
  2800                           
  2801                           ;Altaveu.c: 40:     state++;
  2802  0017A6  2A23               	incf	motorAltaveu@state^0,f,c
  2803  0017A8  0012               	return	
  2804  0017AA                     l5964:
  2805                           
  2806                           ;Altaveu.c: 44:    if (TiGetTics(timerAltaveu) > nota) {
  2807  0017AA  5025               	movf	_timerAltaveu^0,w,c
  2808  0017AC  ECA7  F00E         	call	_TiGetTics
  2809  0017B0  D815               	call	PL24	;call to abstracted procedure
  2810  0017B2  B0D8               	btfsc	status,0,c
  2811  0017B4  0012               	return	
  2812                           
  2813                           ;Altaveu.c: 45:     LATBbits.LB0 = 0;
  2814  0017B6  908A               	bcf	138,0,c	;volatile
  2815                           
  2816                           ;Altaveu.c: 46:     TiResetTics(timerAltaveu);
  2817  0017B8  5025               	movf	_timerAltaveu^0,w,c
  2818  0017BA  EC3D  F00F         	call	_TiResetTics
  2819                           
  2820                           ;Altaveu.c: 47:     copsNota++;
  2821  0017BE  2A24               	incf	_copsNota^0,f,c
  2822  0017C0  D7F2               	goto	l5962
  2823  0017C2                     l5976:
  2824  0017C2  5023               	movf	motorAltaveu@state^0,w,c
  2825  0017C4  6E6B               	movwf	??_motorAltaveu^0,c
  2826  0017C6  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  2827                           
  2828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2829                           ; Switch size 1, requested type "space"
  2830                           ; Number of cases is 1, Range of values is 0 to 0
  2831                           ; switch strategies available:
  2832                           ; Name         Instructions Cycles
  2833                           ; simple_byte            4     3 (average)
  2834                           ;	Chosen strategy is simple_byte
  2835  0017C8  506C               	movf	(??_motorAltaveu+1)^0,w,c
  2836  0017CA  A4D8               	btfss	status,2,c
  2837  0017CC  0012               	return	
  2838                           
  2839                           ; Switch size 1, requested type "space"
  2840                           ; Number of cases is 3, Range of values is 0 to 2
  2841                           ; switch strategies available:
  2842                           ; Name         Instructions Cycles
  2843                           ; simple_byte           10     6 (average)
  2844                           ;	Chosen strategy is simple_byte
  2845  0017CE  506B               	movf	??_motorAltaveu^0,w,c
  2846  0017D0  E0C9               	bz	l862
  2847  0017D2  0A01               	xorlw	1	; case 1
  2848  0017D4  E0D2               	bz	l5944
  2849  0017D6  0A03               	xorlw	3	; case 2
  2850  0017D8  E0E8               	bz	l5964
  2851  0017DA  0012               	return		;funcret
  2852  0017DC                     __end_of_motorAltaveu:
  2853                           	callstack 0
  2854  0017DC                     PL24:
  2855                           	callstack 27
  2856  0017DC  5026               	movf	_nota^0,w,c
  2857  0017DE  6E6B               	movwf	??_motorAltaveu^0,c
  2858  0017E0  6A6C               	clrf	(??_motorAltaveu+1)^0,c
  2859  0017E2  5064               	movf	?_TiGetTics^0,w,c
  2860  0017E4  5C6B               	subwf	??_motorAltaveu^0,w,c
  2861  0017E6  506C               	movf	(??_motorAltaveu+1)^0,w,c
  2862  0017E8  0A80               	xorlw	128
  2863  0017EA  6E6D               	movwf	(??_motorAltaveu+2)^0,c
  2864  0017EC  5065               	movf	(?_TiGetTics+1)^0,w,c
  2865  0017EE  0A80               	xorlw	128
  2866  0017F0  586D               	subwfb	(??_motorAltaveu+2)^0,w,c
  2867  0017F2  0012               	return	
  2868  0017F4                     __end_ofPL24:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _menu *****************
  2872 ;; Defined at:
  2873 ;;		line 42 in file "Menu.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1
  2887 ;;      Params:         0       0       0
  2888 ;;      Locals:         0       0       0
  2889 ;;      Temps:          0       5       0
  2890 ;;      Totals:         0       5       0
  2891 ;;Total ram usage:        5 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 6
  2894 ;; This function calls:
  2895 ;;		_CToAConverteix
  2896 ;;		_CToAHaAcabat
  2897 ;;		_CToAobtenir
  2898 ;;		_GLCDMostraMenu
  2899 ;;		_HActualitzaHora
  2900 ;;		_JJuguem
  2901 ;;		_JendGame
  2902 ;;		_JnovaDireccio
  2903 ;;		_JnovaTecla
  2904 ;;		_LcClear
  2905 ;;		_LcGotoXY
  2906 ;;		_LcLliure
  2907 ;;		_LcNewString
  2908 ;;		_LcPutChar
  2909 ;;		_LcScroll
  2910 ;;		_NoFerMenu
  2911 ;;		_SIOHaAcabatPuntuacions
  2912 ;;		_SMSoff
  2913 ;;		_SMSon
  2914 ;;		_SiFerMenu
  2915 ;;		_TiGetTics
  2916 ;;		_TiResetTics
  2917 ;;		_URegister
  2918 ;;		_UcheckExists
  2919 ;;		_UcheckExistsGetError
  2920 ;;		_UcheckExistsNotFinished
  2921 ;;		_UenviaChar
  2922 ;;		_UenviaPas
  2923 ;;		_UgetNumUsuaris
  2924 ;;		_UgetScore
  2925 ;;		_UgetTop5
  2926 ;;		_UgetUserName
  2927 ;;		_UshowUsersCalculat
  2928 ;;		_calculateShowUsers
  2929 ;;		_checkHoraAcabat
  2930 ;;		_getArrayShowUsers
  2931 ;;		_miraPassword
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text18
  2938  0002F0                     __ptext18:
  2939                           	callstack 0
  2940  0002F0                     _menu:
  2941                           	callstack 24
  2942                           
  2943                           ;Menu.c: 43:  static char state = 0;;Menu.c: 45:  switch(state) {
  2944                           
  2945                           ;incstack = 0
  2946  0002F0  D322               	goto	l7038
  2947  0002F2                     l6492:
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;Menu.c: 47:    LcClear();
  2951  0002F2  ECF0  F00E         	call	_LcClear	;wreg free
  2952                           
  2953                           ;Menu.c: 48:    LcNewString(loginText);
  2954  0002F6  0EC7               	movlw	low _loginText
  2955  0002F8  6E67               	movwf	LcNewString@new_s^0,c
  2956  0002FA  6A68               	clrf	(LcNewString@new_s+1)^0,c
  2957  0002FC  ECD7  F00F         	call	_LcNewString	;wreg free
  2958                           
  2959                           ;Menu.c: 49:    state = 1;
  2960  000300  0E01               	movlw	1
  2961  000302  6E2E               	movwf	menu@state^0,c
  2962                           
  2963                           ;Menu.c: 50:   break;
  2964  000304  0C01               	retlw	1
  2965  000306                     l6498:
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;Menu.c: 52:    if (LcLliure()) {
  2969  000306  ECDD  F00F         	call	_LcLliure	;wreg free
  2970  00030A  A0D8               	btfss	status,0,c
  2971  00030C  0012               	return	
  2972                           
  2973                           ;Menu.c: 53:     LcGotoXY(0,1);
  2974  00030E  DB95               	call	PL36	;call to abstracted procedure
  2975  000310  EC50  F00E         	call	_LcGotoXY
  2976                           
  2977                           ;Menu.c: 54:     LcNewString(registerText);
  2978  000314  0EBC               	movlw	low _registerText
  2979  000316  6E67               	movwf	LcNewString@new_s^0,c
  2980  000318  6A68               	clrf	(LcNewString@new_s+1)^0,c
  2981  00031A  ECD7  F00F         	call	_LcNewString	;wreg free
  2982                           
  2983                           ;Menu.c: 55:     NovaTecla = -1;
  2984  00031E  6852               	setf	_NovaTecla^0,c
  2985                           
  2986                           ;Menu.c: 56:     state = 2;
  2987  000320  0E02               	movlw	2
  2988  000322  6E2E               	movwf	menu@state^0,c
  2989                           
  2990                           ;Menu.c: 58:   break;
  2991                           
  2992                           ;Menu.c: 57:    }
  2993  000324  0C02               	retlw	2
  2994  000326                     l6508:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;Menu.c: 60:    if (NovaTecla == 1) {
  2998  000326  0452               	decf	_NovaTecla^0,w,c
  2999  000328  E104               	bnz	l6514
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;Menu.c: 61:     loginNOTRegister = 1;
  3003  00032A  8E76               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3004  00032C                     l6512:
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;Menu.c: 62:     state = 3;
  3008  00032C  0E03               	movlw	3
  3009  00032E  6E2E               	movwf	menu@state^0,c
  3010                           
  3011                           ;Menu.c: 63:    }
  3012  000330  0C03               	retlw	3
  3013  000332                     l6514:
  3014                           
  3015                           ; BSR set to: 0
  3016  000332  0E02               	movlw	2
  3017  000334  1852               	xorwf	_NovaTecla^0,w,c
  3018  000336  A4D8               	btfss	status,2,c
  3019  000338  0012               	return	
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;Menu.c: 65:     loginNOTRegister = 0;
  3023  00033A  9E76               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3024  00033C  D7F7               	goto	l6512
  3025  00033E                     l511:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;Menu.c: 70:    NovaTecla = -1;
  3029  00033E  6852               	setf	_NovaTecla^0,c
  3030                           
  3031                           ;Menu.c: 71:    novaLletra = -1;
  3032  000340  6851               	setf	_novaLletra^0,c
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;Menu.c: 72:    LcClear();
  3036  000342  ECF0  F00E         	call	_LcClear	;wreg free
  3037                           
  3038                           ;Menu.c: 73:    LcNewString("USER: ");
  3039  000346  0EE7               	movlw	low STR_1
  3040  000348  DB6D               	call	PL10	;call to abstracted procedure
  3041  00034A  ECD7  F00F         	call	_LcNewString	;wreg free
  3042                           
  3043                           ;Menu.c: 74:    state = 4;
  3044  00034E  0E04               	movlw	4
  3045  000350  6E2E               	movwf	menu@state^0,c
  3046                           
  3047                           ;Menu.c: 75:   break;
  3048  000352  0C04               	retlw	4
  3049  000354                     l6526:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;Menu.c: 77:    if (LcLliure()) {
  3053  000354  ECDD  F00F         	call	_LcLliure	;wreg free
  3054  000358  A0D8               	btfss	status,0,c
  3055  00035A  0012               	return	
  3056                           
  3057                           ;Menu.c: 78:     LcGotoXY(0,1);
  3058  00035C  DB6E               	call	PL36	;call to abstracted procedure
  3059  00035E  EC50  F00E         	call	_LcGotoXY
  3060                           
  3061                           ;Menu.c: 79:     LcNewString("PSWD: ");
  3062  000362  0EE0               	movlw	low STR_2
  3063  000364  DB5F               	call	PL10	;call to abstracted procedure
  3064  000366  ECD7  F00F         	call	_LcNewString	;wreg free
  3065                           
  3066                           ;Menu.c: 80:     state = 5;
  3067  00036A  0E05               	movlw	5
  3068  00036C  6E2E               	movwf	menu@state^0,c
  3069  00036E  0C05               	retlw	5
  3070  000370                     l6534:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;Menu.c: 84:    if (LcLliure()) {
  3074  000370  ECDD  F00F         	call	_LcLliure	;wreg free
  3075  000374  A0D8               	btfss	status,0,c
  3076  000376  0012               	return	
  3077                           
  3078                           ;Menu.c: 85:     LcGotoXY(6,0);
  3079  000378  0E00               	movlw	0
  3080  00037A  6E6C               	movwf	LcGotoXY@Row^0,c
  3081  00037C  0E06               	movlw	6
  3082  00037E  EC50  F00E         	call	_LcGotoXY
  3083                           
  3084                           ;Menu.c: 86:     SMSon();
  3085  000382  EC4E  F000         	call	_SMSon	;wreg free
  3086                           
  3087                           ;Menu.c: 87:     tmp =0;
  3088  000386  6A33               	clrf	_tmp^0,c
  3089  000388                     l6542:
  3090                           
  3091                           ;Menu.c: 88:     state = 6;
  3092  000388  0E06               	movlw	6
  3093  00038A  6E2E               	movwf	menu@state^0,c
  3094  00038C  0C06               	retlw	6
  3095  00038E                     l6544:
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;Menu.c: 92:    if (novaLletra > 31 && NovaTecla != 10) {
  3099  00038E  5051               	movf	_novaLletra^0,w,c
  3100  000390  0A80               	xorlw	128
  3101  000392  0F60               	addlw	-160
  3102  000394  E30E               	bnc	l6554
  3103                           
  3104                           ; BSR set to: 0
  3105  000396  0E0A               	movlw	10
  3106  000398  1852               	xorwf	_NovaTecla^0,w,c
  3107  00039A  E00B               	bz	l6554
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;Menu.c: 93:     LcPutChar(novaLletra);
  3111  00039C  5051               	movf	_novaLletra^0,w,c
  3112  00039E  EC7A  F00D         	call	_LcPutChar
  3113                           
  3114                           ;Menu.c: 94:     UenviaChar(novaLletra,tmp);
  3115  0003A2  C033  F064         	movff	_tmp,UenviaChar@pos
  3116  0003A6  5051               	movf	_novaLletra^0,w,c
  3117  0003A8  EC96  F00F         	call	_UenviaChar
  3118  0003AC                     l6552:
  3119                           
  3120                           ;Menu.c: 95:     state = 7;
  3121  0003AC  0E07               	movlw	7
  3122  0003AE  6E2E               	movwf	menu@state^0,c
  3123                           
  3124                           ;Menu.c: 96:    }
  3125  0003B0  0C07               	retlw	7
  3126  0003B2                     l6554:
  3127                           
  3128                           ; BSR set to: 0
  3129  0003B2  0E0B               	movlw	11
  3130  0003B4  1852               	xorwf	_NovaTecla^0,w,c
  3131  0003B6  E0FA               	bz	l6552
  3132  0003B8  0012               	return	
  3133  0003BA                     l6558:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;Menu.c: 102:    if (tmp != 7 && NovaTecla != 11) {
  3137  0003BA  0E07               	movlw	7
  3138  0003BC  1833               	xorwf	_tmp^0,w,c
  3139  0003BE  E005               	bz	l6570
  3140                           
  3141                           ; BSR set to: 0
  3142  0003C0  0E0B               	movlw	11
  3143  0003C2  1852               	xorwf	_NovaTecla^0,w,c
  3144  0003C4  E002               	bz	l6570
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;Menu.c: 103:     tmp++;
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;Menu.c: 104:     NovaTecla = -1;
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;Menu.c: 105:     novaLletra = -1;
  3154  0003C6  DB51               	call	PL90	;call to abstracted procedure
  3155  0003C8  D7DF               	goto	l6542
  3156  0003CA                     l6570:
  3157                           
  3158                           ; BSR set to: 0
  3159  0003CA  0E07               	movlw	7
  3160  0003CC  1833               	xorwf	_tmp^0,w,c
  3161  0003CE  E004               	bz	u6900
  3162                           
  3163                           ; BSR set to: 0
  3164  0003D0  0E0B               	movlw	11
  3165  0003D2  1852               	xorwf	_NovaTecla^0,w,c
  3166  0003D4  A4D8               	btfss	status,2,c
  3167  0003D6  0012               	return	
  3168  0003D8                     u6900:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;Menu.c: 109:     LcGotoXY(6,1);
  3172  0003D8  0E01               	movlw	1
  3173  0003DA  6E6C               	movwf	LcGotoXY@Row^0,c
  3174  0003DC  0E06               	movlw	6
  3175  0003DE  EC50  F00E         	call	_LcGotoXY
  3176                           
  3177                           ;Menu.c: 110:     UenviaChar('\0',tmp);
  3178  0003E2  C033  F064         	movff	_tmp,UenviaChar@pos
  3179  0003E6  0E00               	movlw	0
  3180  0003E8  EC96  F00F         	call	_UenviaChar
  3181                           
  3182                           ;Menu.c: 111:     NovaTecla = -1;
  3183                           
  3184                           ;Menu.c: 112:     novaLletra = -1;
  3185                           
  3186                           ;Menu.c: 113:     tmp = 0;
  3187  0003EC  DB3A               	call	PL88	;call to abstracted procedure
  3188  0003EE                     l6584:
  3189                           
  3190                           ;Menu.c: 114:     state = 8;
  3191  0003EE  0E08               	movlw	8
  3192  0003F0  6E2E               	movwf	menu@state^0,c
  3193  0003F2  0C08               	retlw	8
  3194  0003F4                     l6586:
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;Menu.c: 118:    if (novaLletra > 31 && NovaTecla != 10) {
  3198  0003F4  5051               	movf	_novaLletra^0,w,c
  3199  0003F6  0A80               	xorlw	128
  3200  0003F8  0F60               	addlw	-160
  3201  0003FA  E30E               	bnc	l6596
  3202                           
  3203                           ; BSR set to: 0
  3204  0003FC  0E0A               	movlw	10
  3205  0003FE  1852               	xorwf	_NovaTecla^0,w,c
  3206  000400  E00B               	bz	l6596
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;Menu.c: 119:     LcPutChar(novaLletra);
  3210  000402  5051               	movf	_novaLletra^0,w,c
  3211  000404  EC7A  F00D         	call	_LcPutChar
  3212                           
  3213                           ;Menu.c: 120:     UenviaPas(novaLletra,tmp);
  3214  000408  C033  F064         	movff	_tmp,UenviaPas@pos
  3215  00040C  5051               	movf	_novaLletra^0,w,c
  3216  00040E  EC8E  F00F         	call	_UenviaPas
  3217  000412                     l6594:
  3218                           
  3219                           ;Menu.c: 121:     state = 9;
  3220  000412  0E09               	movlw	9
  3221  000414  6E2E               	movwf	menu@state^0,c
  3222                           
  3223                           ;Menu.c: 122:    }
  3224  000416  0C09               	retlw	9
  3225  000418                     l6596:
  3226                           
  3227                           ; BSR set to: 0
  3228  000418  0E0B               	movlw	11
  3229  00041A  1852               	xorwf	_NovaTecla^0,w,c
  3230  00041C  E0FA               	bz	l6594
  3231  00041E  0012               	return	
  3232  000420                     l6600:
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;Menu.c: 128:    if (tmp != 7 && NovaTecla != 11) {
  3236  000420  0E07               	movlw	7
  3237  000422  1833               	xorwf	_tmp^0,w,c
  3238  000424  E005               	bz	l6612
  3239                           
  3240                           ; BSR set to: 0
  3241  000426  0E0B               	movlw	11
  3242  000428  1852               	xorwf	_NovaTecla^0,w,c
  3243  00042A  E002               	bz	l6612
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;Menu.c: 129:     tmp++;
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;Menu.c: 130:     NovaTecla = -1;
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;Menu.c: 131:     novaLletra = -1;
  3253  00042C  DB1E               	call	PL90	;call to abstracted procedure
  3254  00042E  D7DF               	goto	l6584
  3255  000430                     l6612:
  3256                           
  3257                           ; BSR set to: 0
  3258  000430  0E07               	movlw	7
  3259  000432  1833               	xorwf	_tmp^0,w,c
  3260  000434  E004               	bz	u6970
  3261                           
  3262                           ; BSR set to: 0
  3263  000436  0E0B               	movlw	11
  3264  000438  1852               	xorwf	_NovaTecla^0,w,c
  3265  00043A  A4D8               	btfss	status,2,c
  3266  00043C  0012               	return	
  3267  00043E                     u6970:
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;Menu.c: 135:     UenviaPas('\0',tmp);
  3271  00043E  C033  F064         	movff	_tmp,UenviaPas@pos
  3272  000442  0E00               	movlw	0
  3273  000444  EC8E  F00F         	call	_UenviaPas
  3274                           
  3275                           ;Menu.c: 136:     NovaTecla = -1;
  3276                           
  3277                           ;Menu.c: 137:     novaLletra = -1;
  3278                           
  3279                           ;Menu.c: 138:     tmp = 0;
  3280  000448  DB0C               	call	PL88	;call to abstracted procedure
  3281                           
  3282                           ;Menu.c: 139:     UcheckExists();
  3283  00044A  EC67  F000         	call	_UcheckExists	;wreg free
  3284                           
  3285                           ;Menu.c: 140:     SMSoff();
  3286  00044E  EC51  F000         	call	_SMSoff	;wreg free
  3287                           
  3288                           ;Menu.c: 141:     state = 10;
  3289  000452  0E0A               	movlw	10
  3290  000454  6E2E               	movwf	menu@state^0,c
  3291  000456  0C0A               	retlw	10
  3292  000458                     l6630:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;Menu.c: 145:    if (!UcheckExistsNotFinished()) {
  3296  000458  ECC5  F00F         	call	_UcheckExistsNotFinished	;wreg free
  3297  00045C  B0D8               	btfsc	status,0,c
  3298  00045E  0012               	return	
  3299                           
  3300                           ;Menu.c: 146:     indexUsuari = UcheckExistsGetError();
  3301  000460  EC65  F000         	call	_UcheckExistsGetError	;wreg free
  3302  000464  6E30               	movwf	_indexUsuari^0,c
  3303                           
  3304                           ;Menu.c: 147:     state = 11;
  3305  000466  0E0B               	movlw	11
  3306  000468  6E2E               	movwf	menu@state^0,c
  3307  00046A  0C0B               	retlw	11
  3308  00046C                     l538:
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;Menu.c: 151:    if (!loginNOTRegister && indexUsuari == -1) {
  3312  00046C  BE76               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3313  00046E  D006               	goto	l539
  3314                           
  3315                           ; BSR set to: 0
  3316  000470  2830               	incf	_indexUsuari^0,w,c
  3317  000472  E104               	bnz	l539
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;Menu.c: 152:     URegister();
  3321  000474  EC69  F000         	call	_URegister	;wreg free
  3322  000478                     l6640:
  3323                           
  3324                           ;Menu.c: 153:     state = 0;
  3325  000478  6A2E               	clrf	menu@state^0,c
  3326                           
  3327                           ;Menu.c: 154:    }
  3328  00047A  0012               	return	
  3329  00047C                     l539:
  3330                           
  3331                           ; BSR set to: 0
  3332  00047C  BE76               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3333                           
  3334                           ; BSR set to: 0
  3335  00047E  BE30               	btfsc	_indexUsuari^0,7,c
  3336  000480  D006               	goto	l541
  3337                           
  3338                           ; BSR set to: 0
  3339  000482  ECCC  F00E         	call	_miraPassword	;wreg free
  3340  000486  E303               	bnc	l541
  3341  000488                     u7030:
  3342                           
  3343                           ;Menu.c: 156:     state = 12;
  3344  000488  0E0C               	movlw	12
  3345  00048A  6E2E               	movwf	menu@state^0,c
  3346                           
  3347                           ;Menu.c: 157:    }
  3348  00048C  0C0C               	retlw	12
  3349  00048E                     l541:
  3350  00048E  AE76               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3351  000490  D002               	goto	u7050
  3352  000492  2830               	incf	_indexUsuari^0,w,c
  3353  000494  E0F1               	bz	l6640
  3354  000496                     u7050:
  3355  000496  BE76               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3356  000498  D002               	goto	u7070
  3357  00049A  AE30               	btfss	_indexUsuari^0,7,c
  3358  00049C  D7ED               	goto	l6640
  3359  00049E                     u7070:
  3360  00049E  ECCC  F00E         	call	_miraPassword	;wreg free
  3361  0004A2  E3EA               	bnc	l6640
  3362  0004A4  0012               	return	
  3363  0004A6                     l6654:
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;Menu.c: 163:    LcClear();
  3367  0004A6  ECF0  F00E         	call	_LcClear	;wreg free
  3368                           
  3369                           ;Menu.c: 164:    SiFerMenu();
  3370  0004AA  EC6B  F000         	call	_SiFerMenu	;wreg free
  3371                           
  3372                           ;Menu.c: 165:    GLCDMostraMenu(menuDalt);
  3373  0004AE  5031               	movf	_menuDalt^0,w,c
  3374  0004B0  ECCB  F00F         	call	_GLCDMostraMenu
  3375                           
  3376                           ;Menu.c: 166:    novaDireccio = -1;
  3377  0004B4  6850               	setf	_novaDireccio^0,c
  3378                           
  3379                           ;Menu.c: 167:    NovaTecla = -1;
  3380  0004B6  6852               	setf	_NovaTecla^0,c
  3381                           
  3382                           ;Menu.c: 168:    state = 13;
  3383  0004B8  0E0D               	movlw	13
  3384  0004BA  6E2E               	movwf	menu@state^0,c
  3385                           
  3386                           ;Menu.c: 169:   break;
  3387  0004BC  0C0D               	retlw	13
  3388  0004BE                     l6666:
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;Menu.c: 171:    if (novaDireccio == 8) {
  3392  0004BE  0E08               	movlw	8
  3393  0004C0  1850               	xorwf	_novaDireccio^0,w,c
  3394  0004C2  E105               	bnz	l6674
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;Menu.c: 172:     if(menuDalt < 4) menuDalt++;
  3398  0004C4  0E04               	movlw	4
  3399  0004C6  6031               	cpfslt	_menuDalt^0,c
  3400  0004C8  D7DF               	goto	u7030
  3401                           
  3402                           ; BSR set to: 0
  3403  0004CA  2A31               	incf	_menuDalt^0,f,c
  3404  0004CC  D7DD               	goto	u7030
  3405  0004CE                     l6674:
  3406                           
  3407                           ; BSR set to: 0
  3408  0004CE  0E02               	movlw	2
  3409  0004D0  1850               	xorwf	_novaDireccio^0,w,c
  3410  0004D2  E104               	bnz	l6682
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;Menu.c: 176:     if(menuDalt > 0) menuDalt--;
  3414  0004D4  5031               	movf	_menuDalt^0,w,c
  3415  0004D6  E0D8               	bz	u7030
  3416                           
  3417                           ; BSR set to: 0
  3418  0004D8  0631               	decf	_menuDalt^0,f,c
  3419  0004DA  D7D6               	goto	u7030
  3420  0004DC                     l6682:
  3421                           
  3422                           ; BSR set to: 0
  3423  0004DC  0E0B               	movlw	11
  3424  0004DE  1852               	xorwf	_NovaTecla^0,w,c
  3425  0004E0  E10E               	bnz	l6694
  3426                           
  3427                           ; BSR set to: 0
  3428  0004E2  0E03               	movlw	3
  3429  0004E4  1831               	xorwf	_menuDalt^0,w,c
  3430  0004E6  E10B               	bnz	l6694
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;Menu.c: 180:     NoFerMenu();
  3434  0004E8  EC6F  F000         	call	_NoFerMenu	;wreg free
  3435                           
  3436                           ;Menu.c: 181:     LcClear();
  3437  0004EC  ECF0  F00E         	call	_LcClear	;wreg free
  3438                           
  3439                           ;Menu.c: 182:     LcNewString("BYE BYE ");
  3440  0004F0  0EC7               	movlw	low STR_3
  3441  0004F2  DA98               	call	PL10	;call to abstracted procedure
  3442  0004F4  ECD7  F00F         	call	_LcNewString	;wreg free
  3443                           
  3444                           ;Menu.c: 183:     state = 14;
  3445  0004F8  0E0E               	movlw	14
  3446  0004FA  6E2E               	movwf	menu@state^0,c
  3447                           
  3448                           ;Menu.c: 184:    }
  3449  0004FC  0C0E               	retlw	14
  3450  0004FE                     l6694:
  3451                           
  3452                           ; BSR set to: 0
  3453  0004FE  0E0B               	movlw	11
  3454  000500  1852               	xorwf	_NovaTecla^0,w,c
  3455  000502  E10E               	bnz	l6708
  3456                           
  3457                           ; BSR set to: 0
  3458  000504  0431               	decf	_menuDalt^0,w,c
  3459  000506  E10C               	bnz	l6708
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;Menu.c: 186:     LcClear();
  3463  000508  ECF0  F00E         	call	_LcClear	;wreg free
  3464                           
  3465                           ;Menu.c: 187:     NoFerMenu();
  3466  00050C  EC6F  F000         	call	_NoFerMenu	;wreg free
  3467                           
  3468                           ;Menu.c: 188:     LcNewString("Modify Time:");
  3469  000510  0EAE               	movlw	low STR_4
  3470  000512  DA88               	call	PL10	;call to abstracted procedure
  3471  000514  ECD7  F00F         	call	_LcNewString	;wreg free
  3472                           
  3473                           ;Menu.c: 189:     NovaTecla = -1;
  3474  000518  6852               	setf	_NovaTecla^0,c
  3475                           
  3476                           ;Menu.c: 190:     state = 16;
  3477  00051A  0E10               	movlw	16
  3478  00051C  6E2E               	movwf	menu@state^0,c
  3479                           
  3480                           ;Menu.c: 191:    }
  3481  00051E  0C10               	retlw	16
  3482  000520                     l6708:
  3483                           
  3484                           ; BSR set to: 0
  3485  000520  5031               	movf	_menuDalt^0,w,c
  3486  000522  E112               	bnz	l6724
  3487                           
  3488                           ; BSR set to: 0
  3489  000524  0E0B               	movlw	11
  3490  000526  1852               	xorwf	_NovaTecla^0,w,c
  3491  000528  E10F               	bnz	l6724
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;Menu.c: 193:     NoFerMenu();
  3495  00052A  EC6F  F000         	call	_NoFerMenu	;wreg free
  3496                           
  3497                           ;Menu.c: 194:     NovaTecla = -1;
  3498  00052E  6852               	setf	_NovaTecla^0,c
  3499                           
  3500                           ;Menu.c: 195:     LcClear();
  3501  000530  ECF0  F00E         	call	_LcClear	;wreg free
  3502                           
  3503                           ;Menu.c: 196:     LcNewString("TIME REMAINING:");
  3504  000534  0E9E               	movlw	low STR_5
  3505  000536  DA76               	call	PL10	;call to abstracted procedure
  3506  000538  ECD7  F00F         	call	_LcNewString	;wreg free
  3507                           
  3508                           ;Menu.c: 197:     JJuguem(indexUsuari);
  3509  00053C  5030               	movf	_indexUsuari^0,w,c
  3510  00053E  ECFC  F00F         	call	_JJuguem
  3511  000542                     l6722:
  3512                           
  3513                           ;Menu.c: 198:     state = 21;
  3514  000542  0E15               	movlw	21
  3515  000544  6E2E               	movwf	menu@state^0,c
  3516                           
  3517                           ;Menu.c: 199:    }
  3518  000546  0C15               	retlw	21
  3519  000548                     l6724:
  3520                           
  3521                           ; BSR set to: 0
  3522  000548  0E0B               	movlw	11
  3523  00054A  1852               	xorwf	_NovaTecla^0,w,c
  3524  00054C  E10E               	bnz	l6740
  3525                           
  3526                           ; BSR set to: 0
  3527  00054E  0E04               	movlw	4
  3528  000550  1831               	xorwf	_menuDalt^0,w,c
  3529  000552  E10B               	bnz	l6740
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;Menu.c: 201:     NoFerMenu();
  3533  000554  EC6F  F000         	call	_NoFerMenu	;wreg free
  3534                           
  3535                           ;Menu.c: 202:     LcClear();
  3536  000558  ECF0  F00E         	call	_LcClear	;wreg free
  3537                           
  3538                           ;Menu.c: 203:     menuDalt = 0;
  3539  00055C  6A31               	clrf	_menuDalt^0,c
  3540                           
  3541                           ;Menu.c: 204:     NovaTecla = -1;
  3542  00055E  6852               	setf	_NovaTecla^0,c
  3543                           
  3544                           ;Menu.c: 205:     calculateShowUsers();
  3545  000560  EC61  F000         	call	_calculateShowUsers	;wreg free
  3546                           
  3547                           ;Menu.c: 206:     state = 30;
  3548  000564  0E1E               	movlw	30
  3549  000566  6E2E               	movwf	menu@state^0,c
  3550                           
  3551                           ;Menu.c: 207:    }
  3552  000568  0C1E               	retlw	30
  3553  00056A                     l6740:
  3554                           
  3555                           ; BSR set to: 0
  3556  00056A  0E0B               	movlw	11
  3557  00056C  1852               	xorwf	_NovaTecla^0,w,c
  3558  00056E  A4D8               	btfss	status,2,c
  3559  000570  0012               	return	
  3560                           
  3561                           ; BSR set to: 0
  3562  000572  0E02               	movlw	2
  3563  000574  1831               	xorwf	_menuDalt^0,w,c
  3564  000576  A4D8               	btfss	status,2,c
  3565  000578  0012               	return	
  3566                           
  3567                           ; BSR set to: 0
  3568  00057A  0E00               	movlw	0
  3569  00057C  EC7B  F00F         	call	_UgetTop5
  3570  000580  0AFF               	xorlw	255
  3571  000582  B4D8               	btfsc	status,2,c
  3572  000584  0012               	return	
  3573                           
  3574                           ;Menu.c: 209:     NoFerMenu();
  3575  000586  EC6F  F000         	call	_NoFerMenu	;wreg free
  3576                           
  3577                           ;Menu.c: 210:     LcClear();
  3578  00058A  ECF0  F00E         	call	_LcClear	;wreg free
  3579                           
  3580                           ;Menu.c: 211:     menuDalt = 0;
  3581  00058E  6A31               	clrf	_menuDalt^0,c
  3582                           
  3583                           ;Menu.c: 212:     NovaTecla = -1;
  3584  000590  6852               	setf	_NovaTecla^0,c
  3585  000592                     l6754:
  3586                           
  3587                           ;Menu.c: 213:     state = 31;
  3588  000592  0E1F               	movlw	31
  3589  000594  6E2E               	movwf	menu@state^0,c
  3590  000596  0C1F               	retlw	31
  3591  000598                     l6756:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;Menu.c: 217:    if (LcLliure()) {
  3595  000598  ECDD  F00F         	call	_LcLliure	;wreg free
  3596  00059C  A0D8               	btfss	status,0,c
  3597  00059E  0012               	return	
  3598                           
  3599                           ;Menu.c: 218:     LcNewString(UgetUserName(indexUsuari));
  3600  0005A0  5030               	movf	_indexUsuari^0,w,c
  3601  0005A2  EC71  F00F         	call	_UgetUserName
  3602  0005A6  DA4C               	call	PL46	;call to abstracted procedure
  3603  0005A8  ECD7  F00F         	call	_LcNewString	;wreg free
  3604                           
  3605                           ;Menu.c: 219:     TiResetTics(timerMenu);
  3606  0005AC  5032               	movf	_timerMenu^0,w,c
  3607  0005AE  EC3D  F00F         	call	_TiResetTics
  3608                           
  3609                           ;Menu.c: 220:     state = 15;
  3610  0005B2  0E0F               	movlw	15
  3611  0005B4  6E2E               	movwf	menu@state^0,c
  3612  0005B6  0C0F               	retlw	15
  3613  0005B8                     l6764:
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;Menu.c: 224:    if (TiGetTics(timerMenu) > 2410) {
  3617  0005B8  5032               	movf	_timerMenu^0,w,c
  3618  0005BA  ECA7  F00E         	call	_TiGetTics
  3619  0005BE  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  3620  0005C0  0012               	return	
  3621  0005C2  0E6B               	movlw	107
  3622  0005C4  5C64               	subwf	?_TiGetTics^0,w,c
  3623  0005C6  0E09               	movlw	9
  3624  0005C8  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  3625  0005CA  E301 D755          	bc	l6640
  3626  0005CE  0012               	return	
  3627  0005D0                     l6768:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;Menu.c: 229:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3631  0005D0  ECDD  F00F         	call	_LcLliure	;wreg free
  3632  0005D4  E347               	bnc	l6834
  3633  0005D6  BE52               	btfsc	_NovaTecla^0,7,c
  3634  0005D8  D045               	goto	l6834
  3635  0005DA  5052               	movf	_NovaTecla^0,w,c
  3636  0005DC  0A80               	xorlw	128
  3637  0005DE  0F76               	addlw	-138
  3638  0005E0  E241               	bc	l6834
  3639                           
  3640                           ;Menu.c: 230:     LcGotoXY(0,1);
  3641  0005E2  DA2B               	call	PL36	;call to abstracted procedure
  3642  0005E4  EC50  F00E         	call	_LcGotoXY
  3643                           
  3644                           ;Menu.c: 231:     horaTmp[0] = NovaTecla+48;
  3645  0005E8  5052               	movf	_NovaTecla^0,w,c
  3646  0005EA  0F30               	addlw	48
  3647  0005EC  6E41               	movwf	_horaTmp^0,c
  3648                           
  3649                           ;Menu.c: 232:     LcPutChar(horaTmp[0]);
  3650  0005EE  5041               	movf	_horaTmp^0,w,c
  3651  0005F0  EC7A  F00D         	call	_LcPutChar
  3652                           
  3653                           ;Menu.c: 233:     NovaTecla = -1;
  3654  0005F4  6852               	setf	_NovaTecla^0,c
  3655                           
  3656                           ;Menu.c: 234:     state = 17;
  3657  0005F6  0E11               	movlw	17
  3658  0005F8                     L1:
  3659  0005F8  6E2E               	movwf	menu@state^0,c
  3660                           
  3661                           ;Menu.c: 235:    }
  3662  0005FA  0012               	return	
  3663  0005FC                     L2:
  3664  0005FC  1852               	xorwf	_NovaTecla^0,w,c
  3665  0005FE  E101 D743          	bz	u7030
  3666  000602  0012               	return	
  3667  000604                     l6788:
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;Menu.c: 241:    if (NovaTecla > -1 && NovaTecla < 10) {
  3671  000604  BE52               	btfsc	_NovaTecla^0,7,c
  3672  000606  D02E               	goto	l6834
  3673                           
  3674                           ; BSR set to: 0
  3675  000608  5052               	movf	_NovaTecla^0,w,c
  3676  00060A  0A80               	xorlw	128
  3677  00060C  0F76               	addlw	-138
  3678  00060E  E22A               	bc	l6834
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;Menu.c: 242:     horaTmp[1] = NovaTecla+48;
  3682  000610  5052               	movf	_NovaTecla^0,w,c
  3683  000612  0F30               	addlw	48
  3684  000614  6E42               	movwf	(_horaTmp+1)^0,c
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;Menu.c: 243:     LcPutChar(horaTmp[1]);
  3688  000616  5042               	movf	(_horaTmp+1)^0,w,c
  3689  000618  EC7A  F00D         	call	_LcPutChar
  3690                           
  3691                           ;Menu.c: 244:     NovaTecla = -1;
  3692  00061C  6852               	setf	_NovaTecla^0,c
  3693                           
  3694                           ;Menu.c: 245:     LcPutChar(':');
  3695  00061E  0E3A               	movlw	58
  3696  000620  EC7A  F00D         	call	_LcPutChar
  3697                           
  3698                           ;Menu.c: 246:     state = 18;
  3699  000624  0E12               	movlw	18
  3700  000626  D7E8               	goto	L1
  3701  000628                     l6806:
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;Menu.c: 253:    if (NovaTecla > -1 && NovaTecla < 10) {
  3705  000628  BE52               	btfsc	_NovaTecla^0,7,c
  3706  00062A  D01C               	goto	l6834
  3707                           
  3708                           ; BSR set to: 0
  3709  00062C  5052               	movf	_NovaTecla^0,w,c
  3710  00062E  0A80               	xorlw	128
  3711  000630  0F76               	addlw	-138
  3712  000632  E218               	bc	l6834
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;Menu.c: 254:     horaTmp[2] = NovaTecla+48;
  3716  000634  5052               	movf	_NovaTecla^0,w,c
  3717  000636  0F30               	addlw	48
  3718  000638  6E43               	movwf	(_horaTmp+2)^0,c
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;Menu.c: 255:     LcPutChar(horaTmp[2]);
  3722  00063A  5043               	movf	(_horaTmp+2)^0,w,c
  3723  00063C  EC7A  F00D         	call	_LcPutChar
  3724                           
  3725                           ;Menu.c: 256:     NovaTecla = -1;
  3726  000640  6852               	setf	_NovaTecla^0,c
  3727                           
  3728                           ;Menu.c: 257:     state = 19;
  3729  000642  0E13               	movlw	19
  3730  000644  D7D9               	goto	L1
  3731  000646                     l6822:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;Menu.c: 264:    if (NovaTecla > -1 && NovaTecla < 10) {
  3735  000646  BE52               	btfsc	_NovaTecla^0,7,c
  3736  000648  D00D               	goto	l6834
  3737                           
  3738                           ; BSR set to: 0
  3739  00064A  5052               	movf	_NovaTecla^0,w,c
  3740  00064C  0A80               	xorlw	128
  3741  00064E  0F76               	addlw	-138
  3742  000650  E209               	bc	l6834
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;Menu.c: 265:     horaTmp[3] = NovaTecla+48;
  3746  000652  5052               	movf	_NovaTecla^0,w,c
  3747  000654  0F30               	addlw	48
  3748  000656  6E44               	movwf	(_horaTmp+3)^0,c
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;Menu.c: 266:     LcPutChar(horaTmp[3]);
  3752  000658  5044               	movf	(_horaTmp+3)^0,w,c
  3753  00065A  EC7A  F00D         	call	_LcPutChar
  3754                           
  3755                           ;Menu.c: 267:     NovaTecla = -1;
  3756  00065E  6852               	setf	_NovaTecla^0,c
  3757                           
  3758                           ;Menu.c: 268:     state = 20;
  3759  000660  0E14               	movlw	20
  3760  000662  D7CA               	goto	L1
  3761  000664                     l6834:
  3762                           
  3763                           ; BSR set to: 0
  3764  000664  0E0A               	movlw	10
  3765  000666  D7CA               	goto	L2
  3766  000668                     l6838:
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;Menu.c: 275:    if (NovaTecla == 11) {
  3770  000668  0E0B               	movlw	11
  3771  00066A  1852               	xorwf	_NovaTecla^0,w,c
  3772  00066C  E1FB               	bnz	l6834
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;Menu.c: 276:     HActualitzaHora(horaTmp);
  3776  00066E  0E41               	movlw	low _horaTmp
  3777  000670  6E64               	movwf	HActualitzaHora@nova^0,c
  3778  000672  EC1C  F00E         	call	_HActualitzaHora	;wreg free
  3779                           
  3780                           ;Menu.c: 277:     NovaTecla = -1;
  3781  000676  6852               	setf	_NovaTecla^0,c
  3782  000678  D707               	goto	u7030
  3783  00067A                     l6850:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;Menu.c: 285:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3787  00067A  0E0A               	movlw	10
  3788  00067C  1852               	xorwf	_NovaTecla^0,w,c
  3789  00067E  E103               	bnz	u7420
  3790                           
  3791                           ; BSR set to: 0
  3792  000680  ECDD  F00F         	call	_LcLliure	;wreg free
  3793  000684  E203               	bc	u7430
  3794  000686                     u7420:
  3795  000686  ECB9  F00F         	call	_checkHoraAcabat	;wreg free
  3796  00068A  E307               	bnc	l6862
  3797  00068C                     u7430:
  3798                           
  3799                           ;Menu.c: 286:     LcClear();
  3800  00068C  ECF0  F00E         	call	_LcClear	;wreg free
  3801                           
  3802                           ;Menu.c: 287:     JendGame();
  3803  000690  EC71  F000         	call	_JendGame	;wreg free
  3804                           
  3805                           ;Menu.c: 288:     state = 22;
  3806  000694  0E16               	movlw	22
  3807  000696  6E2E               	movwf	menu@state^0,c
  3808                           
  3809                           ;Menu.c: 289:    }
  3810  000698  0C16               	retlw	22
  3811  00069A                     l6862:
  3812  00069A  5052               	movf	_NovaTecla^0,w,c
  3813  00069C  0A80               	xorlw	128
  3814  00069E  0F7F               	addlw	-129
  3815  0006A0  E309               	bnc	l6872
  3816  0006A2  5052               	movf	_NovaTecla^0,w,c
  3817  0006A4  0A80               	xorlw	128
  3818  0006A6  0F76               	addlw	-138
  3819  0006A8  E205               	bc	l6872
  3820                           
  3821                           ;Menu.c: 291:     JnovaTecla(NovaTecla);
  3822  0006AA  5052               	movf	_NovaTecla^0,w,c
  3823  0006AC  ECF4  F00F         	call	_JnovaTecla
  3824                           
  3825                           ;Menu.c: 292:     NovaTecla = -1;
  3826  0006B0  6852               	setf	_NovaTecla^0,c
  3827  0006B2  D747               	goto	l6722
  3828  0006B4                     l6872:
  3829  0006B4  BE50               	btfsc	_novaDireccio^0,7,c
  3830  0006B6  0012               	return	
  3831                           
  3832                           ;Menu.c: 296:     JnovaDireccio(novaDireccio);
  3833  0006B8  5050               	movf	_novaDireccio^0,w,c
  3834  0006BA  ECF8  F00F         	call	_JnovaDireccio
  3835                           
  3836                           ;Menu.c: 297:     novaDireccio = -1;
  3837  0006BE  6850               	setf	_novaDireccio^0,c
  3838  0006C0  D740               	goto	l6722
  3839  0006C2                     l6880:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;Menu.c: 302:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3843  0006C2  EC6D  F000         	call	_SIOHaAcabatPuntuacions	;wreg free
  3844  0006C6  0900               	iorlw	0
  3845  0006C8  B4D8               	btfsc	status,2,c
  3846  0006CA  0012               	return	
  3847  0006CC  0E0B               	movlw	11
  3848  0006CE  D796               	goto	L2
  3849  0006D0                     l6886:
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;Menu.c: 307:    if (LcLliure()) {
  3853  0006D0  ECDD  F00F         	call	_LcLliure	;wreg free
  3854  0006D4  A0D8               	btfss	status,0,c
  3855  0006D6  0012               	return	
  3856                           
  3857                           ;Menu.c: 308:     LcGotoXY(0,0);
  3858  0006D8  0E00               	movlw	0
  3859  0006DA  6E6C               	movwf	LcGotoXY@Row^0,c
  3860  0006DC  EC50  F00E         	call	_LcGotoXY
  3861                           
  3862                           ;Menu.c: 309:     LcNewString(getArrayShowUsers(menuDalt));
  3863  0006E0  5031               	movf	_menuDalt^0,w,c
  3864  0006E2  EC21  F00F         	call	_getArrayShowUsers
  3865  0006E6  D9A4               	call	PL32	;call to abstracted procedure
  3866  0006E8  ECD7  F00F         	call	_LcNewString	;wreg free
  3867                           
  3868                           ;Menu.c: 310:     menuDalt++;
  3869  0006EC  2A31               	incf	_menuDalt^0,f,c
  3870                           
  3871                           ;Menu.c: 311:     state = 24;
  3872  0006EE  0E18               	movlw	24
  3873  0006F0  6E2E               	movwf	menu@state^0,c
  3874  0006F2  0C18               	retlw	24
  3875  0006F4                     l6894:
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;Menu.c: 315:    if (LcLliure()) {
  3879  0006F4  ECDD  F00F         	call	_LcLliure	;wreg free
  3880  0006F8  A0D8               	btfss	status,0,c
  3881  0006FA  0012               	return	
  3882                           
  3883                           ;Menu.c: 316:     if (menuDalt < UgetNumUsuaris()){
  3884  0006FC  EC63  F000         	call	_UgetNumUsuaris	;wreg free
  3885  000700  6031               	cpfslt	_menuDalt^0,c
  3886  000702  D00B               	goto	l607
  3887                           
  3888                           ;Menu.c: 317:       LcGotoXY(0,1);
  3889  000704  D99A               	call	PL36	;call to abstracted procedure
  3890  000706  EC50  F00E         	call	_LcGotoXY
  3891                           
  3892                           ;Menu.c: 318:       LcNewString(getArrayShowUsers(menuDalt));
  3893  00070A  5031               	movf	_menuDalt^0,w,c
  3894  00070C  EC21  F00F         	call	_getArrayShowUsers
  3895  000710  D98F               	call	PL32	;call to abstracted procedure
  3896  000712  ECD7  F00F         	call	_LcNewString	;wreg free
  3897                           
  3898                           ;Menu.c: 319:       menuDalt++;
  3899  000716  2A31               	incf	_menuDalt^0,f,c
  3900                           
  3901                           ;Menu.c: 320:     } else {
  3902  000718  D001               	goto	l6902
  3903  00071A                     l607:
  3904                           
  3905                           ;Menu.c: 321:       menuDalt = 0;
  3906  00071A  6A31               	clrf	_menuDalt^0,c
  3907  00071C                     l6902:
  3908                           
  3909                           ;Menu.c: 323:     state = 25;
  3910  00071C  0E19               	movlw	25
  3911  00071E  6E2E               	movwf	menu@state^0,c
  3912  000720  0C19               	retlw	25
  3913  000722                     l6904:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;Menu.c: 327:    if (LcLliure()) {
  3917  000722  ECDD  F00F         	call	_LcLliure	;wreg free
  3918  000726  A0D8               	btfss	status,0,c
  3919  000728  0012               	return	
  3920                           
  3921                           ;Menu.c: 328:     if (menuDalt == UgetNumUsuaris()){
  3922  00072A  EC63  F000         	call	_UgetNumUsuaris	;wreg free
  3923  00072E  1831               	xorwf	_menuDalt^0,w,c
  3924  000730  E101               	bnz	l6910
  3925                           
  3926                           ;Menu.c: 329:       menuDalt = 0;
  3927  000732  6A31               	clrf	_menuDalt^0,c
  3928  000734                     l6910:
  3929                           
  3930                           ;Menu.c: 331:     LcGotoXY(16,0);
  3931  000734  D993               	call	PL86	;call to abstracted procedure
  3932  000736  EC50  F00E         	call	_LcGotoXY
  3933                           
  3934                           ;Menu.c: 332:     LcNewString(getArrayShowUsers(menuDalt));
  3935  00073A  5031               	movf	_menuDalt^0,w,c
  3936  00073C  EC21  F00F         	call	_getArrayShowUsers
  3937  000740  D977               	call	PL32	;call to abstracted procedure
  3938  000742  ECD7  F00F         	call	_LcNewString	;wreg free
  3939                           
  3940                           ;Menu.c: 333:     state = 26;
  3941  000746  0E1A               	movlw	26
  3942  000748  6E2E               	movwf	menu@state^0,c
  3943  00074A  0C1A               	retlw	26
  3944  00074C                     l6914:
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;Menu.c: 337:    if (LcLliure()) {
  3948  00074C  ECDD  F00F         	call	_LcLliure	;wreg free
  3949  000750  A0D8               	btfss	status,0,c
  3950  000752  0012               	return	
  3951                           
  3952                           ;Menu.c: 338:     if (menuDalt+1 < UgetNumUsuaris()){
  3953  000754  EC63  F000         	call	_UgetNumUsuaris	;wreg free
  3954  000758  0100               	movlb	0	; () banked
  3955  00075A  6FCF               	movwf	??_menu& (0+255),b
  3956  00075C  6BD0               	clrf	(??_menu+1)& (0+255),b
  3957  00075E  5031               	movf	_menuDalt^0,w,c
  3958  000760  6FD1               	movwf	(??_menu+2)& (0+255),b
  3959  000762  6BD2               	clrf	(??_menu+3)& (0+255),b
  3960  000764  2BD1               	incf	(??_menu+2)& (0+255),f,b
  3961  000766  0E00               	movlw	0
  3962  000768  23D2               	addwfc	(??_menu+3)& (0+255),f,b
  3963  00076A  51CF               	movf	??_menu& (0+255),w,b
  3964  00076C  5DD1               	subwf	(??_menu+2)& (0+255),w,b
  3965  00076E  51D2               	movf	(??_menu+3)& (0+255),w,b
  3966  000770  0A80               	xorlw	128
  3967  000772  6FD3               	movwf	(??_menu+4)& (0+255),b
  3968  000774  51D0               	movf	(??_menu+1)& (0+255),w,b
  3969  000776  0A80               	xorlw	128
  3970  000778  59D3               	subwfb	(??_menu+4)& (0+255),w,b
  3971  00077A  E209               	bc	l6920
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;Menu.c: 339:       LcGotoXY(16,1);
  3975  00077C  D96C               	call	PL84	;call to abstracted procedure
  3976  00077E  EC50  F00E         	call	_LcGotoXY
  3977                           
  3978                           ;Menu.c: 340:       LcNewString(getArrayShowUsers(menuDalt+1));
  3979  000782  2831               	incf	_menuDalt^0,w,c
  3980  000784  EC21  F00F         	call	_getArrayShowUsers
  3981  000788  D953               	call	PL32	;call to abstracted procedure
  3982  00078A  ECD7  F00F         	call	_LcNewString	;wreg free
  3983  00078E                     l6920:
  3984                           
  3985                           ;Menu.c: 342:     state = 27;
  3986  00078E  0E1B               	movlw	27
  3987  000790  6E2E               	movwf	menu@state^0,c
  3988  000792  0C1B               	retlw	27
  3989  000794                     l6922:
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;Menu.c: 346:    if (TiGetTics(timerMenu) > 1205) {
  3993  000794  5032               	movf	_timerMenu^0,w,c
  3994  000796  ECA7  F00E         	call	_TiGetTics
  3995  00079A  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  3996  00079C  D008               	goto	l6926
  3997  00079E  0EB6               	movlw	182
  3998  0007A0  5C64               	subwf	?_TiGetTics^0,w,c
  3999  0007A2  0E04               	movlw	4
  4000  0007A4  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4001  0007A6  E303               	bnc	l6926
  4002                           
  4003                           ;Menu.c: 347:     state = 29;
  4004  0007A8  0E1D               	movlw	29
  4005  0007AA  6E2E               	movwf	menu@state^0,c
  4006                           
  4007                           ;Menu.c: 348:    }
  4008  0007AC  0C1D               	retlw	29
  4009  0007AE                     l6926:
  4010  0007AE  0E0B               	movlw	11
  4011  0007B0  1852               	xorwf	_NovaTecla^0,w,c
  4012  0007B2  A4D8               	btfss	status,2,c
  4013  0007B4  0012               	return	
  4014  0007B6                     u7570:
  4015                           
  4016                           ;Menu.c: 350:     menuDalt = 0;
  4017  0007B6  6A31               	clrf	_menuDalt^0,c
  4018  0007B8  D667               	goto	u7030
  4019  0007BA                     l6932:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;Menu.c: 355:    if (pos > 15) {
  4023  0007BA  0E0F               	movlw	15
  4024  0007BC  642F               	cpfsgt	_pos^0,c
  4025  0007BE  D005               	goto	l6938
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;Menu.c: 356:     LcClear();
  4029  0007C0  ECF0  F00E         	call	_LcClear	;wreg free
  4030  0007C4                     l6936:
  4031                           
  4032                           ;Menu.c: 357:     state = 23;
  4033  0007C4  0E17               	movlw	23
  4034  0007C6  6E2E               	movwf	menu@state^0,c
  4035                           
  4036                           ;Menu.c: 358:    }
  4037  0007C8  0C17               	retlw	23
  4038  0007CA                     l6938:
  4039                           
  4040                           ; BSR set to: 0
  4041  0007CA  0E10               	movlw	16
  4042  0007CC  602F               	cpfslt	_pos^0,c
  4043  0007CE  0C10               	retlw	16
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;Menu.c: 360:     TiResetTics(timerMenu);
  4047  0007D0  5032               	movf	_timerMenu^0,w,c
  4048  0007D2  EC3D  F00F         	call	_TiResetTics
  4049                           
  4050                           ;Menu.c: 361:     LcScroll();
  4051  0007D6  EC54  F000         	call	_LcScroll	;wreg free
  4052                           
  4053                           ;Menu.c: 362:     pos++;
  4054  0007DA  2A2F               	incf	_pos^0,f,c
  4055  0007DC                     l6946:
  4056                           
  4057                           ;Menu.c: 363:     state = 28;
  4058  0007DC  0E1C               	movlw	28
  4059  0007DE  6E2E               	movwf	menu@state^0,c
  4060  0007E0  0C1C               	retlw	28
  4061  0007E2                     l6948:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;Menu.c: 367:    if (LcLliure()) {
  4065  0007E2  ECDD  F00F         	call	_LcLliure	;wreg free
  4066  0007E6  A0D8               	btfss	status,0,c
  4067  0007E8  0012               	return	
  4068                           
  4069                           ;Menu.c: 368:     TiResetTics(timerMenu);
  4070  0007EA  5032               	movf	_timerMenu^0,w,c
  4071  0007EC  EC3D  F00F         	call	_TiResetTics
  4072                           
  4073                           ;Menu.c: 369:     pos = 0;
  4074  0007F0  6A2F               	clrf	_pos^0,c
  4075  0007F2  D7F4               	goto	l6946
  4076  0007F4                     l6956:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;Menu.c: 374:    if (UshowUsersCalculat()) {
  4080  0007F4  ECBF  F00F         	call	_UshowUsersCalculat	;wreg free
  4081  0007F8  E2E5               	bc	l6936
  4082  0007FA  0012               	return	
  4083  0007FC                     l6960:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;Menu.c: 379:    if (LcLliure()) {
  4087  0007FC  ECDD  F00F         	call	_LcLliure	;wreg free
  4088  000800  A0D8               	btfss	status,0,c
  4089  000802  0012               	return	
  4090                           
  4091                           ;Menu.c: 380:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4092  000804  5031               	movf	_menuDalt^0,w,c
  4093  000806  EC7B  F00F         	call	_UgetTop5
  4094  00080A  EC71  F00F         	call	_UgetUserName
  4095  00080E  D918               	call	PL46	;call to abstracted procedure
  4096  000810  ECD7  F00F         	call	_LcNewString	;wreg free
  4097                           
  4098                           ;Menu.c: 381:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4099  000814  5031               	movf	_menuDalt^0,w,c
  4100  000816  EC7B  F00F         	call	_UgetTop5
  4101  00081A  ECA6  F00F         	call	_UgetScore
  4102  00081E  ECD1  F00F         	call	_CToAConverteix
  4103                           
  4104                           ;Menu.c: 382:     state = 32;
  4105  000822  0E20               	movlw	32
  4106  000824  6E2E               	movwf	menu@state^0,c
  4107  000826  0C20               	retlw	32
  4108  000828                     l6966:
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;Menu.c: 386:    if (CToAHaAcabat() == 250 && LcLliure()) {
  4112  000828  EC75  F000         	call	_CToAHaAcabat	;wreg free
  4113  00082C  0AFA               	xorlw	250
  4114  00082E  A4D8               	btfss	status,2,c
  4115  000830  0012               	return	
  4116  000832  ECDD  F00F         	call	_LcLliure	;wreg free
  4117  000836  A0D8               	btfss	status,0,c
  4118  000838  0012               	return	
  4119                           
  4120                           ;Menu.c: 387:     LcPutChar(':');
  4121  00083A  0E3A               	movlw	58
  4122  00083C  EC7A  F00D         	call	_LcPutChar
  4123                           
  4124                           ;Menu.c: 388:     LcGotoXY(0,1);
  4125  000840  D8FC               	call	PL36	;call to abstracted procedure
  4126  000842  EC50  F00E         	call	_LcGotoXY
  4127                           
  4128                           ;Menu.c: 389:     LcNewString(CToAobtenir());
  4129  000846  EC73  F000         	call	_CToAobtenir	;wreg free
  4130  00084A  D8FF               	call	PL50	;call to abstracted procedure
  4131  00084C  ECD7  F00F         	call	_LcNewString	;wreg free
  4132                           
  4133                           ;Menu.c: 390:     menuDalt++;
  4134  000850  2A31               	incf	_menuDalt^0,f,c
  4135                           
  4136                           ;Menu.c: 391:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  4137  000852  0E05               	movlw	5
  4138  000854  1831               	xorwf	_menuDalt^0,w,c
  4139  000856  E005               	bz	u7660
  4140  000858  5031               	movf	_menuDalt^0,w,c
  4141  00085A  EC7B  F00F         	call	_UgetTop5
  4142  00085E  0AFF               	xorlw	255
  4143  000860  E101               	bnz	l6980
  4144  000862                     u7660:
  4145  000862  6A31               	clrf	_menuDalt^0,c
  4146  000864                     l6980:
  4147                           
  4148                           ;Menu.c: 392:     state = 34;
  4149  000864  0E22               	movlw	34
  4150  000866  6E2E               	movwf	menu@state^0,c
  4151  000868  0C22               	retlw	34
  4152  00086A                     l6982:
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;Menu.c: 396:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  4156  00086A  5031               	movf	_menuDalt^0,w,c
  4157  00086C  EC7B  F00F         	call	_UgetTop5
  4158  000870  0AFF               	xorlw	255
  4159  000872  E104               	bnz	u7680
  4160  000874  0E05               	movlw	5
  4161  000876  1831               	xorwf	_menuDalt^0,w,c
  4162  000878  B4D8               	btfsc	status,2,c
  4163  00087A  0012               	return	
  4164  00087C                     u7680:
  4165  00087C  ECDD  F00F         	call	_LcLliure	;wreg free
  4166  000880  A0D8               	btfss	status,0,c
  4167  000882  0012               	return	
  4168                           
  4169                           ;Menu.c: 397:     LcGotoXY(16,0);
  4170  000884  D8EB               	call	PL86	;call to abstracted procedure
  4171  000886  EC50  F00E         	call	_LcGotoXY
  4172                           
  4173                           ;Menu.c: 398:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4174  00088A  5031               	movf	_menuDalt^0,w,c
  4175  00088C  EC7B  F00F         	call	_UgetTop5
  4176  000890  EC71  F00F         	call	_UgetUserName
  4177  000894  D8D5               	call	PL46	;call to abstracted procedure
  4178  000896  ECD7  F00F         	call	_LcNewString	;wreg free
  4179                           
  4180                           ;Menu.c: 399:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4181  00089A  5031               	movf	_menuDalt^0,w,c
  4182  00089C  EC7B  F00F         	call	_UgetTop5
  4183  0008A0  ECA6  F00F         	call	_UgetScore
  4184  0008A4  ECD1  F00F         	call	_CToAConverteix
  4185                           
  4186                           ;Menu.c: 400:     state = 35;
  4187  0008A8  0E23               	movlw	35
  4188  0008AA  6E2E               	movwf	menu@state^0,c
  4189  0008AC  0C23               	retlw	35
  4190  0008AE                     l6992:
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;Menu.c: 404:    if (LcLliure() && CToAHaAcabat() == 250) {
  4194  0008AE  ECDD  F00F         	call	_LcLliure	;wreg free
  4195  0008B2  A0D8               	btfss	status,0,c
  4196  0008B4  0012               	return	
  4197  0008B6  EC75  F000         	call	_CToAHaAcabat	;wreg free
  4198  0008BA  0AFA               	xorlw	250
  4199  0008BC  A4D8               	btfss	status,2,c
  4200  0008BE  0012               	return	
  4201                           
  4202                           ;Menu.c: 405:     LcPutChar(':');
  4203  0008C0  0E3A               	movlw	58
  4204  0008C2  EC7A  F00D         	call	_LcPutChar
  4205                           
  4206                           ;Menu.c: 406:     LcGotoXY(16,1);
  4207  0008C6  D8C7               	call	PL84	;call to abstracted procedure
  4208  0008C8  EC50  F00E         	call	_LcGotoXY
  4209                           
  4210                           ;Menu.c: 407:     LcNewString(CToAobtenir());
  4211  0008CC  EC73  F000         	call	_CToAobtenir	;wreg free
  4212  0008D0  D8BC               	call	PL50	;call to abstracted procedure
  4213  0008D2  ECD7  F00F         	call	_LcNewString	;wreg free
  4214                           
  4215                           ;Menu.c: 408:     pos = 0;
  4216  0008D6  6A2F               	clrf	_pos^0,c
  4217                           
  4218                           ;Menu.c: 409:     TiResetTics(timerMenu);
  4219  0008D8  5032               	movf	_timerMenu^0,w,c
  4220  0008DA  EC3D  F00F         	call	_TiResetTics
  4221  0008DE                     l7004:
  4222                           
  4223                           ;Menu.c: 410:     state = 37;
  4224  0008DE  0E25               	movlw	37
  4225  0008E0  6E2E               	movwf	menu@state^0,c
  4226  0008E2  0C25               	retlw	37
  4227  0008E4                     l7006:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;Menu.c: 414:    if (NovaTecla == 11 && LcLliure()) {
  4231  0008E4  0E0B               	movlw	11
  4232  0008E6  1852               	xorwf	_NovaTecla^0,w,c
  4233  0008E8  E104               	bnz	l7014
  4234                           
  4235                           ; BSR set to: 0
  4236  0008EA  ECDD  F00F         	call	_LcLliure	;wreg free
  4237  0008EE  E301 D762          	bc	u7570
  4238  0008F2                     l7014:
  4239  0008F2  5032               	movf	_timerMenu^0,w,c
  4240  0008F4  ECA7  F00E         	call	_TiGetTics
  4241  0008F8  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  4242  0008FA  0012               	return	
  4243  0008FC  0E91               	movlw	145
  4244  0008FE  5C64               	subwf	?_TiGetTics^0,w,c
  4245  000900  0E01               	movlw	1
  4246  000902  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  4247  000904  A0D8               	btfss	status,0,c
  4248  000906  0012               	return	
  4249  000908  ECDD  F00F         	call	_LcLliure	;wreg free
  4250  00090C  A0D8               	btfss	status,0,c
  4251  00090E  0012               	return	
  4252                           
  4253                           ;Menu.c: 419:     state = 38;
  4254  000910  0E26               	movlw	38
  4255  000912  6E2E               	movwf	menu@state^0,c
  4256  000914  0C26               	retlw	38
  4257  000916                     l7020:
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;Menu.c: 423:    if (pos < 16) {
  4261  000916  0E10               	movlw	16
  4262  000918  602F               	cpfslt	_pos^0,c
  4263  00091A  D007               	goto	l7030
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;Menu.c: 424:     TiResetTics(timerMenu);
  4267  00091C  5032               	movf	_timerMenu^0,w,c
  4268  00091E  EC3D  F00F         	call	_TiResetTics
  4269                           
  4270                           ;Menu.c: 425:     LcScroll();
  4271  000922  EC54  F000         	call	_LcScroll	;wreg free
  4272                           
  4273                           ;Menu.c: 426:     pos++;
  4274  000926  2A2F               	incf	_pos^0,f,c
  4275  000928  D7DA               	goto	l7004
  4276  00092A                     l7030:
  4277                           
  4278                           ; BSR set to: 0
  4279  00092A  0E0F               	movlw	15
  4280  00092C  642F               	cpfsgt	_pos^0,c
  4281  00092E  0C0F               	retlw	15
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;Menu.c: 430:     LcClear();
  4285  000930  ECF0  F00E         	call	_LcClear	;wreg free
  4286  000934  D62E               	goto	l6754
  4287  000936                     l7038:
  4288  000936  502E               	movf	menu@state^0,w,c
  4289  000938  0100               	movlb	0	; () banked
  4290  00093A  6FCF               	movwf	??_menu& (0+255),b
  4291  00093C  6BD0               	clrf	(??_menu+1)& (0+255),b
  4292                           
  4293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4294                           ; Switch size 1, requested type "space"
  4295                           ; Number of cases is 1, Range of values is 0 to 0
  4296                           ; switch strategies available:
  4297                           ; Name         Instructions Cycles
  4298                           ; simple_byte            4     3 (average)
  4299                           ;	Chosen strategy is simple_byte
  4300  00093E  51D0               	movf	(??_menu+1)& (0+255),w,b
  4301  000940  A4D8               	btfss	status,2,c
  4302  000942  0012               	return	
  4303                           
  4304                           ; BSR set to: 0
  4305                           ; Switch size 1, requested type "space"
  4306                           ; Number of cases is 37, Range of values is 0 to 38
  4307                           ; switch strategies available:
  4308                           ; Name         Instructions Cycles
  4309                           ; simple_byte          112    57 (average)
  4310                           ;	Chosen strategy is simple_byte
  4311  000944  51CF               	movf	??_menu& (0+255),w,b
  4312  000946  E101 D4D4          	bz	l6492
  4313  00094A  0A01               	xorlw	1	; case 1
  4314  00094C  E101 D4DB          	bz	l6498
  4315  000950  0A03               	xorlw	3	; case 2
  4316  000952  E101 D4E8          	bz	l6508
  4317  000956  0A01               	xorlw	1	; case 3
  4318  000958  E101 D4F1          	bz	l511
  4319  00095C  0A07               	xorlw	7	; case 4
  4320  00095E  E101 D4F9          	bz	l6526
  4321  000962  0A01               	xorlw	1	; case 5
  4322  000964  E101 D504          	bz	l6534
  4323  000968  0A03               	xorlw	3	; case 6
  4324  00096A  E101 D510          	bz	l6544
  4325  00096E  0A01               	xorlw	1	; case 7
  4326  000970  E101 D523          	bz	l6558
  4327  000974  0A0F               	xorlw	15	; case 8
  4328  000976  E101 D53D          	bz	l6586
  4329  00097A  0A01               	xorlw	1	; case 9
  4330  00097C  E101 D550          	bz	l6600
  4331  000980  0A03               	xorlw	3	; case 10
  4332  000982  E101 D569          	bz	l6630
  4333  000986  0A01               	xorlw	1	; case 11
  4334  000988  E101 D570          	bz	l538
  4335  00098C  0A07               	xorlw	7	; case 12
  4336  00098E  E101 D58A          	bz	l6654
  4337  000992  0A01               	xorlw	1	; case 13
  4338  000994  E101 D593          	bz	l6666
  4339  000998  0A03               	xorlw	3	; case 14
  4340  00099A  E101 D5FD          	bz	l6756
  4341  00099E  0A01               	xorlw	1	; case 15
  4342  0009A0  E101 D60A          	bz	l6764
  4343  0009A4  0A1F               	xorlw	31	; case 16
  4344  0009A6  E101 D613          	bz	l6768
  4345  0009AA  0A01               	xorlw	1	; case 17
  4346  0009AC  E101 D62A          	bz	l6788
  4347  0009B0  0A03               	xorlw	3	; case 18
  4348  0009B2  E101 D639          	bz	l6806
  4349  0009B6  0A01               	xorlw	1	; case 19
  4350  0009B8  E101 D645          	bz	l6822
  4351  0009BC  0A07               	xorlw	7	; case 20
  4352  0009BE  E101 D653          	bz	l6838
  4353  0009C2  0A01               	xorlw	1	; case 21
  4354  0009C4  E101 D659          	bz	l6850
  4355  0009C8  0A03               	xorlw	3	; case 22
  4356  0009CA  E101 D67A          	bz	l6880
  4357  0009CE  0A01               	xorlw	1	; case 23
  4358  0009D0  E101 D67E          	bz	l6886
  4359  0009D4  0A0F               	xorlw	15	; case 24
  4360  0009D6  E101 D68D          	bz	l6894
  4361  0009DA  0A01               	xorlw	1	; case 25
  4362  0009DC  E101 D6A1          	bz	l6904
  4363  0009E0  0A03               	xorlw	3	; case 26
  4364  0009E2  E101 D6B3          	bz	l6914
  4365  0009E6  0A01               	xorlw	1	; case 27
  4366  0009E8  E101 D6FB          	bz	l6948
  4367  0009EC  0A07               	xorlw	7	; case 28
  4368  0009EE  E101 D6D1          	bz	l6922
  4369  0009F2  0A01               	xorlw	1	; case 29
  4370  0009F4  E101 D6E1          	bz	l6932
  4371  0009F8  0A03               	xorlw	3	; case 30
  4372  0009FA  E101 D6FB          	bz	l6956
  4373  0009FE  0A01               	xorlw	1	; case 31
  4374  000A00  E101 D6FC          	bz	l6960
  4375  000A04  0A3F               	xorlw	63	; case 32
  4376  000A06  E101 D70F          	bz	l6966
  4377  000A0A  0A02               	xorlw	2	; case 34
  4378  000A0C  E101 D72D          	bz	l6982
  4379  000A10  0A01               	xorlw	1	; case 35
  4380  000A12  E101 D74C          	bz	l6992
  4381  000A16  0A06               	xorlw	6	; case 37
  4382  000A18  E101 D764          	bz	l7006
  4383  000A1C  0A03               	xorlw	3	; case 38
  4384  000A1E  E101 D77A          	bz	l7020
  4385  000A22  0012               	return		;funcret
  4386  000A24                     __end_of_menu:
  4387                           	callstack 0
  4388  000A24                     PL10:
  4389                           	callstack 24
  4390  000A24  6E67               	movwf	LcNewString@new_s^0,c
  4391  000A26  5067               	movf	LcNewString@new_s^0,w,c
  4392  000A28  A4D8               	btfss	status,2,c
  4393  000A2A  0E02               	movlw	high __smallconst
  4394  000A2C  6E68               	movwf	(LcNewString@new_s+1)^0,c
  4395  000A2E  0012               	return	
  4396  000A30                     __end_ofPL10:
  4397                           	callstack 0
  4398  000A30                     PL32:
  4399                           	callstack 24
  4400  000A30  C064  F067         	movff	?_getArrayShowUsers,LcNewString@new_s
  4401  000A34  C065  F068         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4402  000A38  0012               	return	
  4403  000A3A                     __end_ofPL32:
  4404                           	callstack 0
  4405  000A3A                     PL36:
  4406                           	callstack 24
  4407  000A3A  0E01               	movlw	1
  4408  000A3C  6E6C               	movwf	LcGotoXY@Row^0,c
  4409  000A3E  0C00               	retlw	0
  4410  000A40                     __end_ofPL36:
  4411                           	callstack 0
  4412  000A40                     PL46:
  4413                           	callstack 24
  4414  000A40  C064  F067         	movff	?_UgetUserName,LcNewString@new_s
  4415  000A44  C065  F068         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4416  000A48  0012               	return	
  4417  000A4A                     __end_ofPL46:
  4418                           	callstack 0
  4419  000A4A                     PL50:
  4420                           	callstack 24
  4421  000A4A  0100               	movlb	0	; () banked
  4422  000A4C  6FCF               	movwf	??_menu& (0+255),b
  4423  000A4E  C0CF  F067         	movff	??_menu,LcNewString@new_s
  4424  000A52  6A68               	clrf	(LcNewString@new_s+1)^0,c
  4425  000A54  0012               	return	
  4426  000A56                     __end_ofPL50:
  4427                           	callstack 0
  4428  000A56                     PL84:
  4429                           	callstack 24
  4430  000A56  0E01               	movlw	1
  4431  000A58  6E6C               	movwf	LcGotoXY@Row^0,c
  4432  000A5A  0C10               	retlw	16
  4433  000A5C                     __end_ofPL84:
  4434                           	callstack 0
  4435  000A5C                     PL86:
  4436                           	callstack 24
  4437  000A5C  0E00               	movlw	0
  4438  000A5E  6E6C               	movwf	LcGotoXY@Row^0,c
  4439  000A60  0C10               	retlw	16
  4440  000A62                     __end_ofPL86:
  4441                           	callstack 0
  4442  000A62                     PL88:
  4443                           	callstack 24
  4444  000A62  6852               	setf	_NovaTecla^0,c
  4445  000A64  6851               	setf	_novaLletra^0,c
  4446  000A66  6A33               	clrf	_tmp^0,c
  4447  000A68  0012               	return	
  4448  000A6A                     __end_ofPL88:
  4449                           	callstack 0
  4450  000A6A                     PL90:
  4451                           	callstack 24
  4452  000A6A  2A33               	incf	_tmp^0,f,c
  4453  000A6C  6852               	setf	_NovaTecla^0,c
  4454  000A6E  6851               	setf	_novaLletra^0,c
  4455  000A70  0012               	return	
  4456  000A72                     __end_ofPL90:
  4457                           	callstack 0
  4458                           
  4459 ;; *************** function _miraPassword *****************
  4460 ;; Defined at:
  4461 ;;		line 295 in file "Usuaris.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;		None
  4466 ;; Return value:  Size  Location     Type
  4467 ;;		None               void
  4468 ;; Registers used:
  4469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1
  4475 ;;      Params:         0       0       0
  4476 ;;      Locals:         0       0       0
  4477 ;;      Temps:          0       0       0
  4478 ;;      Totals:         0       0       0
  4479 ;;Total ram usage:        0 bytes
  4480 ;; Hardware stack levels used: 1
  4481 ;; Hardware stack levels required when called: 3
  4482 ;; This function calls:
  4483 ;;		_compareStrings
  4484 ;; This function is called by:
  4485 ;;		_menu
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text19
  4490  001D98                     __ptext19:
  4491                           	callstack 0
  4492  001D98                     _miraPassword:
  4493                           	callstack 26
  4494                           
  4495                           ;Usuaris.c: 296:     return !compareStrings(tmpPassword, usuaris[usuariLoguejat].passwor
      +                          d);
  4496                           
  4497                           ;incstack = 0
  4498  001D98  0EA2               	movlw	low _tmpPassword
  4499  001D9A  6E64               	movwf	compareStrings@a^0,c
  4500  001D9C  504F               	movf	_usuariLoguejat^0,w,c
  4501  001D9E  0D12               	mullw	18
  4502  001DA0  0E09               	movlw	low (_usuaris+9)
  4503  001DA2  24F3               	addwf	243,w,c
  4504  001DA4  6E65               	movwf	compareStrings@b^0,c
  4505  001DA6  0E01               	movlw	high (_usuaris+9)
  4506  001DA8  20F4               	addwfc	prodh,w,c
  4507  001DAA  6E66               	movwf	(compareStrings@b+1)^0,c
  4508  001DAC  ECC2  F00D         	call	_compareStrings	;wreg free
  4509  001DB0  0900               	iorlw	0
  4510  001DB2  E002               	bz	l4468
  4511  001DB4  90D8               	bcf	status,0,c
  4512  001DB6  0012               	return	
  4513  001DB8                     l4468:
  4514  001DB8  80D8               	bsf	status,0,c
  4515  001DBA  0012               	return		;funcret
  4516  001DBC                     __end_of_miraPassword:
  4517                           	callstack 0
  4518                           
  4519 ;; *************** function _getArrayShowUsers *****************
  4520 ;; Defined at:
  4521 ;;		line 61 in file "Usuaris.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  quin            1    wreg     unsigned char 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  quin            1    7[COMRAM] unsigned char 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  2    5[COMRAM] PTR unsigned char 
  4528 ;; Registers used:
  4529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1
  4535 ;;      Params:         2       0       0
  4536 ;;      Locals:         1       0       0
  4537 ;;      Temps:          0       0       0
  4538 ;;      Totals:         3       0       0
  4539 ;;Total ram usage:        3 bytes
  4540 ;; Hardware stack levels used: 1
  4541 ;; Hardware stack levels required when called: 2
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_menu
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text20
  4550  001E42                     __ptext20:
  4551                           	callstack 0
  4552  001E42                     _getArrayShowUsers:
  4553                           	callstack 27
  4554                           
  4555                           ;incstack = 0
  4556                           ;getArrayShowUsers@quin stored from wreg
  4557  001E42  6E66               	movwf	getArrayShowUsers@quin^0,c
  4558                           
  4559                           ;Usuaris.c: 62:     return usuaris[arrayShowUsers[quin]].username;
  4560  001E44  5066               	movf	getArrayShowUsers@quin^0,w,c
  4561  001E46  0F01               	addlw	low _arrayShowUsers
  4562  001E48  6ED9               	movwf	fsr2l,c
  4563  001E4A  6ADA               	clrf	fsr2h,c
  4564  001E4C  50DF               	movf	indf2,w,c
  4565  001E4E  0D12               	mullw	18
  4566  001E50  0E00               	movlw	low _usuaris
  4567  001E52  24F3               	addwf	243,w,c
  4568  001E54  6E64               	movwf	?_getArrayShowUsers^0,c
  4569  001E56  0E01               	movlw	high _usuaris
  4570  001E58  20F4               	addwfc	prodh,w,c
  4571  001E5A  6E65               	movwf	(?_getArrayShowUsers+1)^0,c
  4572  001E5C  0012               	return		;funcret
  4573  001E5E                     __end_of_getArrayShowUsers:
  4574                           	callstack 0
  4575                           
  4576 ;; *************** function _checkHoraAcabat *****************
  4577 ;; Defined at:
  4578 ;;		line 42 in file "Hora.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;		None
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;		None               void
  4585 ;; Registers used:
  4586 ;;		status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1
  4592 ;;      Params:         0       0       0
  4593 ;;      Locals:         0       0       0
  4594 ;;      Temps:          0       0       0
  4595 ;;      Totals:         0       0       0
  4596 ;;Total ram usage:        0 bytes
  4597 ;; Hardware stack levels used: 1
  4598 ;; Hardware stack levels required when called: 2
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_menu
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           	psect	text21
  4607  001F72                     __ptext21:
  4608                           	callstack 0
  4609  001F72                     _checkHoraAcabat:
  4610                           	callstack 27
  4611                           
  4612                           ;Hora.c: 43:     return tempsAcabat;
  4613                           
  4614                           ;incstack = 0
  4615  001F72  B675               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4616  001F74  D002               	goto	l4506
  4617  001F76  90D8               	bcf	status,0,c
  4618  001F78  0012               	return	
  4619  001F7A                     l4506:
  4620  001F7A  80D8               	bsf	status,0,c
  4621  001F7C  0012               	return		;funcret
  4622  001F7E                     __end_of_checkHoraAcabat:
  4623                           	callstack 0
  4624                           
  4625 ;; *************** function _calculateShowUsers *****************
  4626 ;; Defined at:
  4627 ;;		line 137 in file "Usuaris.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		None
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1
  4641 ;;      Params:         0       0       0
  4642 ;;      Locals:         0       0       0
  4643 ;;      Temps:          0       0       0
  4644 ;;      Totals:         0       0       0
  4645 ;;Total ram usage:        0 bytes
  4646 ;; Hardware stack levels used: 1
  4647 ;; Hardware stack levels required when called: 2
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_menu
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text22
  4656  0000C2                     __ptext22:
  4657                           	callstack 0
  4658  0000C2                     _calculateShowUsers:
  4659                           	callstack 27
  4660                           
  4661                           ;Usuaris.c: 138:     do_showUsers = 1;
  4662                           
  4663                           ;incstack = 0
  4664  0000C2  8876               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4665  0000C4  0012               	return		;funcret
  4666  0000C6                     __end_of_calculateShowUsers:
  4667                           	callstack 0
  4668                           
  4669 ;; *************** function _UshowUsersCalculat *****************
  4670 ;; Defined at:
  4671 ;;		line 140 in file "Usuaris.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;		None               void
  4678 ;; Registers used:
  4679 ;;		status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1
  4685 ;;      Params:         0       0       0
  4686 ;;      Locals:         0       0       0
  4687 ;;      Temps:          0       0       0
  4688 ;;      Totals:         0       0       0
  4689 ;;Total ram usage:        0 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 2
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_menu
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text23
  4700  001F7E                     __ptext23:
  4701                           	callstack 0
  4702  001F7E                     _UshowUsersCalculat:
  4703                           	callstack 27
  4704                           
  4705                           ;Usuaris.c: 141:     return !do_showUsers;
  4706                           
  4707                           ;incstack = 0
  4708  001F7E  A876               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4709  001F80  D002               	goto	l4532
  4710  001F82  90D8               	bcf	status,0,c
  4711  001F84  0012               	return	
  4712  001F86                     l4532:
  4713  001F86  80D8               	bsf	status,0,c
  4714  001F88  0012               	return		;funcret
  4715  001F8A                     __end_of_UshowUsersCalculat:
  4716                           	callstack 0
  4717                           
  4718 ;; *************** function _UgetUserName *****************
  4719 ;; Defined at:
  4720 ;;		line 57 in file "Usuaris.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  quin            1    wreg     unsigned char 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  quin            1    7[COMRAM] unsigned char 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  2    5[COMRAM] PTR unsigned char 
  4727 ;; Registers used:
  4728 ;;		wreg, status,2, status,0, prodl, prodh
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1
  4734 ;;      Params:         2       0       0
  4735 ;;      Locals:         1       0       0
  4736 ;;      Temps:          0       0       0
  4737 ;;      Totals:         3       0       0
  4738 ;;Total ram usage:        3 bytes
  4739 ;; Hardware stack levels used: 1
  4740 ;; Hardware stack levels required when called: 2
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_menu
  4745 ;;		_motorSIO
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text24
  4750  001EE2                     __ptext24:
  4751                           	callstack 0
  4752  001EE2                     _UgetUserName:
  4753                           	callstack 27
  4754                           
  4755                           ;incstack = 0
  4756                           ;UgetUserName@quin stored from wreg
  4757  001EE2  6E66               	movwf	UgetUserName@quin^0,c
  4758                           
  4759                           ;Usuaris.c: 58:     return usuaris[quin].username;
  4760  001EE4  5066               	movf	UgetUserName@quin^0,w,c
  4761  001EE6  0D12               	mullw	18
  4762  001EE8  0E00               	movlw	low _usuaris
  4763  001EEA  24F3               	addwf	243,w,c
  4764  001EEC  6E64               	movwf	?_UgetUserName^0,c
  4765  001EEE  0E01               	movlw	high _usuaris
  4766  001EF0  20F4               	addwfc	prodh,w,c
  4767  001EF2  6E65               	movwf	(?_UgetUserName+1)^0,c
  4768  001EF4  0012               	return		;funcret
  4769  001EF6                     __end_of_UgetUserName:
  4770                           	callstack 0
  4771                           
  4772 ;; *************** function _UgetTop5 *****************
  4773 ;; Defined at:
  4774 ;;		line 287 in file "Usuaris.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  quin            1    wreg     unsigned char 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  quin            1    5[COMRAM] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      char 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1
  4788 ;;      Params:         0       0       0
  4789 ;;      Locals:         1       0       0
  4790 ;;      Temps:          0       0       0
  4791 ;;      Totals:         1       0       0
  4792 ;;Total ram usage:        1 bytes
  4793 ;; Hardware stack levels used: 1
  4794 ;; Hardware stack levels required when called: 2
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_menu
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text25
  4803  001EF6                     __ptext25:
  4804                           	callstack 0
  4805  001EF6                     _UgetTop5:
  4806                           	callstack 27
  4807                           
  4808                           ;incstack = 0
  4809                           ;UgetTop5@quin stored from wreg
  4810  001EF6  6E64               	movwf	UgetTop5@quin^0,c
  4811                           
  4812                           ;Usuaris.c: 288:     return puntuacions[quin].indexStruct;
  4813  001EF8  5064               	movf	UgetTop5@quin^0,w,c
  4814  001EFA  0D02               	mullw	2
  4815  001EFC  50F3               	movf	243,w,c
  4816  001EFE  0F98               	addlw	low _puntuacions
  4817  001F00  D000               	goto	PL64	;call to abstracted procedure
  4818  001F02                     __end_of_UgetTop5:
  4819                           	callstack 0
  4820  001F02                     PL64:
  4821                           	callstack 27
  4822  001F02  6ED9               	movwf	fsr2l,c
  4823  001F04  6ADA               	clrf	fsr2h,c
  4824  001F06  50DF               	movf	indf2,w,c
  4825  001F08  0012               	return		;funcret
  4826  001F0A                     __end_ofPL64:
  4827                           	callstack 0
  4828                           
  4829 ;; *************** function _UgetScore *****************
  4830 ;; Defined at:
  4831 ;;		line 284 in file "Usuaris.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  quin            1    wreg     unsigned char 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  quin            1    5[COMRAM] unsigned char 
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      unsigned char 
  4838 ;; Registers used:
  4839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1
  4845 ;;      Params:         0       0       0
  4846 ;;      Locals:         1       0       0
  4847 ;;      Temps:          0       0       0
  4848 ;;      Totals:         1       0       0
  4849 ;;Total ram usage:        1 bytes
  4850 ;; Hardware stack levels used: 1
  4851 ;; Hardware stack levels required when called: 2
  4852 ;; This function calls:
  4853 ;;		Nothing
  4854 ;; This function is called by:
  4855 ;;		_menu
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text26
  4860  001F4C                     __ptext26:
  4861                           	callstack 0
  4862  001F4C                     _UgetScore:
  4863                           	callstack 27
  4864                           
  4865                           ;incstack = 0
  4866                           ;UgetScore@quin stored from wreg
  4867  001F4C  6E64               	movwf	UgetScore@quin^0,c
  4868                           
  4869                           ;Usuaris.c: 285:     return puntuacions[quin].score;
  4870  001F4E  5064               	movf	UgetScore@quin^0,w,c
  4871  001F50  0D02               	mullw	2
  4872  001F52  50F3               	movf	243,w,c
  4873  001F54  0F99               	addlw	low (_puntuacions+1)
  4874  001F56  EF81  F00F         	goto	PL64	;call to abstracted procedure
  4875  001F5A                     __end_of_UgetScore:
  4876                           	callstack 0
  4877                           
  4878 ;; *************** function _UgetNumUsuaris *****************
  4879 ;; Defined at:
  4880 ;;		line 33 in file "Usuaris.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      unsigned char 
  4887 ;; Registers used:
  4888 ;;		wreg, status,2
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1
  4894 ;;      Params:         0       0       0
  4895 ;;      Locals:         0       0       0
  4896 ;;      Temps:          0       0       0
  4897 ;;      Totals:         0       0       0
  4898 ;;Total ram usage:        0 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; Hardware stack levels required when called: 2
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_menu
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           	psect	text27
  4909  0000C6                     __ptext27:
  4910                           	callstack 0
  4911  0000C6                     _UgetNumUsuaris:
  4912                           	callstack 27
  4913                           
  4914                           ;Usuaris.c: 34:     return numUsuaris;
  4915                           
  4916                           ;incstack = 0
  4917  0000C6  502D               	movf	_numUsuaris^0,w,c
  4918  0000C8  0012               	return		;funcret
  4919  0000CA                     __end_of_UgetNumUsuaris:
  4920                           	callstack 0
  4921                           
  4922 ;; *************** function _UenviaPas *****************
  4923 ;; Defined at:
  4924 ;;		line 49 in file "Usuaris.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  c               1    wreg     unsigned char 
  4927 ;;  pos             1    5[COMRAM] unsigned char 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;  c               1    6[COMRAM] unsigned char 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1
  4939 ;;      Params:         1       0       0
  4940 ;;      Locals:         1       0       0
  4941 ;;      Temps:          0       0       0
  4942 ;;      Totals:         2       0       0
  4943 ;;Total ram usage:        2 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; Hardware stack levels required when called: 2
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_menu
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text28
  4954  001F1C                     __ptext28:
  4955                           	callstack 0
  4956  001F1C                     _UenviaPas:
  4957                           	callstack 27
  4958                           
  4959                           ;incstack = 0
  4960                           ;UenviaPas@c stored from wreg
  4961  001F1C  6E65               	movwf	UenviaPas@c^0,c
  4962                           
  4963                           ;Usuaris.c: 50:     tmpPassword[pos] = c;
  4964  001F1E  5064               	movf	UenviaPas@pos^0,w,c
  4965  001F20  0FA2               	addlw	low _tmpPassword
  4966  001F22  6ED9               	movwf	fsr2l,c
  4967  001F24  6ADA               	clrf	fsr2h,c
  4968  001F26  C065  FFDF         	movff	UenviaPas@c,indf2
  4969  001F2A  0012               	return		;funcret
  4970  001F2C                     __end_of_UenviaPas:
  4971                           	callstack 0
  4972                           
  4973 ;; *************** function _UenviaChar *****************
  4974 ;; Defined at:
  4975 ;;		line 46 in file "Usuaris.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  c               1    wreg     unsigned char 
  4978 ;;  pos             1    5[COMRAM] unsigned char 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  c               1    6[COMRAM] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1
  4990 ;;      Params:         1       0       0
  4991 ;;      Locals:         1       0       0
  4992 ;;      Temps:          0       0       0
  4993 ;;      Totals:         2       0       0
  4994 ;;Total ram usage:        2 bytes
  4995 ;; Hardware stack levels used: 1
  4996 ;; Hardware stack levels required when called: 2
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_menu
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text29
  5005  001F2C                     __ptext29:
  5006                           	callstack 0
  5007  001F2C                     _UenviaChar:
  5008                           	callstack 27
  5009                           
  5010                           ;incstack = 0
  5011                           ;UenviaChar@c stored from wreg
  5012  001F2C  6E65               	movwf	UenviaChar@c^0,c
  5013                           
  5014                           ;Usuaris.c: 47:     tmpUsername[pos] = c;
  5015  001F2E  5064               	movf	UenviaChar@pos^0,w,c
  5016  001F30  0FAB               	addlw	low _tmpUsername
  5017  001F32  6ED9               	movwf	fsr2l,c
  5018  001F34  6ADA               	clrf	fsr2h,c
  5019  001F36  C065  FFDF         	movff	UenviaChar@c,indf2
  5020  001F3A  0012               	return		;funcret
  5021  001F3C                     __end_of_UenviaChar:
  5022                           	callstack 0
  5023                           
  5024 ;; *************** function _UcheckExistsNotFinished *****************
  5025 ;; Defined at:
  5026 ;;		line 40 in file "Usuaris.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;		None
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;		None               void
  5033 ;; Registers used:
  5034 ;;		status,0
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1
  5040 ;;      Params:         0       0       0
  5041 ;;      Locals:         0       0       0
  5042 ;;      Temps:          0       0       0
  5043 ;;      Totals:         0       0       0
  5044 ;;Total ram usage:        0 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; Hardware stack levels required when called: 2
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_menu
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text30
  5055  001F8A                     __ptext30:
  5056                           	callstack 0
  5057  001F8A                     _UcheckExistsNotFinished:
  5058                           	callstack 27
  5059                           
  5060                           ;Usuaris.c: 41:     return do_check_exists;
  5061                           
  5062                           ;incstack = 0
  5063  001F8A  BC76               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5064  001F8C  D002               	goto	l4454
  5065  001F8E  90D8               	bcf	status,0,c
  5066  001F90  0012               	return	
  5067  001F92                     l4454:
  5068  001F92  80D8               	bsf	status,0,c
  5069  001F94  0012               	return		;funcret
  5070  001F96                     __end_of_UcheckExistsNotFinished:
  5071                           	callstack 0
  5072                           
  5073 ;; *************** function _UcheckExistsGetError *****************
  5074 ;; Defined at:
  5075 ;;		line 43 in file "Usuaris.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      char 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1
  5089 ;;      Params:         0       0       0
  5090 ;;      Locals:         0       0       0
  5091 ;;      Temps:          0       0       0
  5092 ;;      Totals:         0       0       0
  5093 ;;Total ram usage:        0 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 2
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_menu
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text31
  5104  0000CA                     __ptext31:
  5105                           	callstack 0
  5106  0000CA                     _UcheckExistsGetError:
  5107                           	callstack 27
  5108                           
  5109                           ;Usuaris.c: 44:     return usuariLoguejat;
  5110                           
  5111                           ;incstack = 0
  5112  0000CA  504F               	movf	_usuariLoguejat^0,w,c
  5113  0000CC  0012               	return		;funcret
  5114  0000CE                     __end_of_UcheckExistsGetError:
  5115                           	callstack 0
  5116                           
  5117 ;; *************** function _UcheckExists *****************
  5118 ;; Defined at:
  5119 ;;		line 37 in file "Usuaris.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;		None
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		None
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1
  5133 ;;      Params:         0       0       0
  5134 ;;      Locals:         0       0       0
  5135 ;;      Temps:          0       0       0
  5136 ;;      Totals:         0       0       0
  5137 ;;Total ram usage:        0 bytes
  5138 ;; Hardware stack levels used: 1
  5139 ;; Hardware stack levels required when called: 2
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_menu
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text32
  5148  0000CE                     __ptext32:
  5149                           	callstack 0
  5150  0000CE                     _UcheckExists:
  5151                           	callstack 27
  5152                           
  5153                           ;Usuaris.c: 38:     do_check_exists = 1;
  5154                           
  5155                           ;incstack = 0
  5156  0000CE  8C76               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5157  0000D0  0012               	return		;funcret
  5158  0000D2                     __end_of_UcheckExists:
  5159                           	callstack 0
  5160                           
  5161 ;; *************** function _URegister *****************
  5162 ;; Defined at:
  5163 ;;		line 53 in file "Usuaris.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      void 
  5170 ;; Registers used:
  5171 ;;		None
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMRAM   BANK0   BANK1
  5177 ;;      Params:         0       0       0
  5178 ;;      Locals:         0       0       0
  5179 ;;      Temps:          0       0       0
  5180 ;;      Totals:         0       0       0
  5181 ;;Total ram usage:        0 bytes
  5182 ;; Hardware stack levels used: 1
  5183 ;; Hardware stack levels required when called: 2
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_menu
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           	psect	text33
  5192  0000D2                     __ptext33:
  5193                           	callstack 0
  5194  0000D2                     _URegister:
  5195                           	callstack 27
  5196                           
  5197                           ;Usuaris.c: 54:     do_register = 1;
  5198                           
  5199                           ;incstack = 0
  5200  0000D2  8A76               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5201  0000D4  0012               	return		;funcret
  5202  0000D6                     __end_of_URegister:
  5203                           	callstack 0
  5204                           
  5205 ;; *************** function _SiFerMenu *****************
  5206 ;; Defined at:
  5207 ;;		line 19 in file "GestioLCD.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		None
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1
  5221 ;;      Params:         0       0       0
  5222 ;;      Locals:         0       0       0
  5223 ;;      Temps:          0       0       0
  5224 ;;      Totals:         0       0       0
  5225 ;;Total ram usage:        0 bytes
  5226 ;; Hardware stack levels used: 1
  5227 ;; Hardware stack levels required when called: 2
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_menu
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text34
  5236  0000D6                     __ptext34:
  5237                           	callstack 0
  5238  0000D6                     _SiFerMenu:
  5239                           	callstack 27
  5240                           
  5241                           ;GestioLCD.c: 20:     ferMenu = 1;
  5242                           
  5243                           ;incstack = 0
  5244  0000D6  8276               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5245  0000D8  0012               	return		;funcret
  5246  0000DA                     __end_of_SiFerMenu:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _SMSon *****************
  5250 ;; Defined at:
  5251 ;;		line 128 in file "Ssms.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		None
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1
  5265 ;;      Params:         0       0       0
  5266 ;;      Locals:         0       0       0
  5267 ;;      Temps:          0       0       0
  5268 ;;      Totals:         0       0       0
  5269 ;;Total ram usage:        0 bytes
  5270 ;; Hardware stack levels used: 1
  5271 ;; Hardware stack levels required when called: 2
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_menu
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text35
  5280  00009C                     __ptext35:
  5281                           	callstack 0
  5282  00009C                     _SMSon:
  5283                           	callstack 27
  5284                           
  5285                           ;Ssms.c: 129:     setSMSon = 1;
  5286                           
  5287                           ;incstack = 0
  5288  00009C  8077               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5289                           
  5290                           ;Ssms.c: 130:     novaTecla = -1;
  5291  00009E  6854               	setf	_novaTecla^0,c
  5292  0000A0  0012               	return		;funcret
  5293  0000A2                     __end_of_SMSon:
  5294                           	callstack 0
  5295                           
  5296 ;; *************** function _SMSoff *****************
  5297 ;; Defined at:
  5298 ;;		line 133 in file "Ssms.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;		None
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  1    wreg      void 
  5305 ;; Registers used:
  5306 ;;		None
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1
  5312 ;;      Params:         0       0       0
  5313 ;;      Locals:         0       0       0
  5314 ;;      Temps:          0       0       0
  5315 ;;      Totals:         0       0       0
  5316 ;;Total ram usage:        0 bytes
  5317 ;; Hardware stack levels used: 1
  5318 ;; Hardware stack levels required when called: 2
  5319 ;; This function calls:
  5320 ;;		Nothing
  5321 ;; This function is called by:
  5322 ;;		_menu
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text36
  5327  0000A2                     __ptext36:
  5328                           	callstack 0
  5329  0000A2                     _SMSoff:
  5330                           	callstack 27
  5331                           
  5332                           ;Ssms.c: 134:     setSMSon = 0;
  5333                           
  5334                           ;incstack = 0
  5335  0000A2  9077               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5336                           
  5337                           ;Ssms.c: 135:     novaTecla = -1;
  5338  0000A4  6854               	setf	_novaTecla^0,c
  5339  0000A6  0012               	return		;funcret
  5340  0000A8                     __end_of_SMSoff:
  5341                           	callstack 0
  5342                           
  5343 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5344 ;; Defined at:
  5345 ;;		line 37 in file "SIO.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      char 
  5352 ;; Registers used:
  5353 ;;		wreg, status,2
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1
  5359 ;;      Params:         0       0       0
  5360 ;;      Locals:         0       0       0
  5361 ;;      Temps:          0       0       0
  5362 ;;      Totals:         0       0       0
  5363 ;;Total ram usage:        0 bytes
  5364 ;; Hardware stack levels used: 1
  5365 ;; Hardware stack levels required when called: 2
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_menu
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text37
  5374  0000DA                     __ptext37:
  5375                           	callstack 0
  5376  0000DA                     _SIOHaAcabatPuntuacions:
  5377                           	callstack 27
  5378                           
  5379                           ;SIO.c: 38:     return usuariActualSIO;
  5380                           
  5381                           ;incstack = 0
  5382  0000DA  504A               	movf	_usuariActualSIO^0,w,c
  5383  0000DC  0012               	return		;funcret
  5384  0000DE                     __end_of_SIOHaAcabatPuntuacions:
  5385                           	callstack 0
  5386                           
  5387 ;; *************** function _NoFerMenu *****************
  5388 ;; Defined at:
  5389 ;;		line 22 in file "GestioLCD.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		None
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1
  5403 ;;      Params:         0       0       0
  5404 ;;      Locals:         0       0       0
  5405 ;;      Temps:          0       0       0
  5406 ;;      Totals:         0       0       0
  5407 ;;Total ram usage:        0 bytes
  5408 ;; Hardware stack levels used: 1
  5409 ;; Hardware stack levels required when called: 2
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_menu
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text38
  5418  0000DE                     __ptext38:
  5419                           	callstack 0
  5420  0000DE                     _NoFerMenu:
  5421                           	callstack 27
  5422                           
  5423                           ;GestioLCD.c: 23:     ferMenu = 0;
  5424                           
  5425                           ;incstack = 0
  5426  0000DE  9276               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5427  0000E0  0012               	return		;funcret
  5428  0000E2                     __end_of_NoFerMenu:
  5429                           	callstack 0
  5430                           
  5431 ;; *************** function _LcScroll *****************
  5432 ;; Defined at:
  5433 ;;		line 37 in file "LcTLCD.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		wreg, status,2, status,0, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1
  5447 ;;      Params:         0       0       0
  5448 ;;      Locals:         0       0       0
  5449 ;;      Temps:          0       0       0
  5450 ;;      Totals:         0       0       0
  5451 ;;Total ram usage:        0 bytes
  5452 ;; Hardware stack levels used: 1
  5453 ;; Hardware stack levels required when called: 4
  5454 ;; This function calls:
  5455 ;;		_CantaIR
  5456 ;; This function is called by:
  5457 ;;		_menu
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text39
  5462  0000A8                     __ptext39:
  5463                           	callstack 0
  5464  0000A8                     _LcScroll:
  5465                           	callstack 25
  5466                           
  5467                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5468                           
  5469                           ;incstack = 0
  5470  0000A8  0E18               	movlw	24
  5471  0000AA  EF2F  F00F         	goto	_CantaIR
  5472  0000AE                     __end_of_LcScroll:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _JnovaTecla *****************
  5476 ;; Defined at:
  5477 ;;		line 16 in file "Joc.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  tecla           1    wreg     char 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  tecla           1    5[COMRAM] char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      void 
  5484 ;; Registers used:
  5485 ;;		wreg
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1
  5491 ;;      Params:         0       0       0
  5492 ;;      Locals:         1       0       0
  5493 ;;      Temps:          0       0       0
  5494 ;;      Totals:         1       0       0
  5495 ;;Total ram usage:        1 bytes
  5496 ;; Hardware stack levels used: 1
  5497 ;; Hardware stack levels required when called: 2
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_menu
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text40
  5506  001FE8                     __ptext40:
  5507                           	callstack 0
  5508  001FE8                     _JnovaTecla:
  5509                           	callstack 27
  5510                           
  5511                           ;incstack = 0
  5512                           ;JnovaTecla@tecla stored from wreg
  5513  001FE8  6E64               	movwf	JnovaTecla@tecla^0,c
  5514                           
  5515                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5516  001FEA  C064  F04B         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5517  001FEE  0012               	return		;funcret
  5518  001FF0                     __end_of_JnovaTecla:
  5519                           	callstack 0
  5520                           
  5521 ;; *************** function _JnovaDireccio *****************
  5522 ;; Defined at:
  5523 ;;		line 19 in file "Joc.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  dir             1    wreg     unsigned char 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  dir             1    5[COMRAM] unsigned char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1
  5537 ;;      Params:         0       0       0
  5538 ;;      Locals:         1       0       0
  5539 ;;      Temps:          0       0       0
  5540 ;;      Totals:         1       0       0
  5541 ;;Total ram usage:        1 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 2
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_menu
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text41
  5552  001FF0                     __ptext41:
  5553                           	callstack 0
  5554  001FF0                     _JnovaDireccio:
  5555                           	callstack 27
  5556                           
  5557                           ;incstack = 0
  5558                           ;JnovaDireccio@dir stored from wreg
  5559  001FF0  6E64               	movwf	JnovaDireccio@dir^0,c
  5560                           
  5561                           ;Joc.c: 20:     direccioJoc = dir;
  5562  001FF2  C064  F013         	movff	JnovaDireccio@dir,_direccioJoc
  5563  001FF6  0012               	return		;funcret
  5564  001FF8                     __end_of_JnovaDireccio:
  5565                           	callstack 0
  5566                           
  5567 ;; *************** function _JendGame *****************
  5568 ;; Defined at:
  5569 ;;		line 23 in file "Joc.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		None
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1
  5583 ;;      Params:         0       0       0
  5584 ;;      Locals:         0       0       0
  5585 ;;      Temps:          0       0       0
  5586 ;;      Totals:         0       0       0
  5587 ;;Total ram usage:        0 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 2
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_menu
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text42
  5598  0000E2                     __ptext42:
  5599                           	callstack 0
  5600  0000E2                     _JendGame:
  5601                           	callstack 27
  5602                           
  5603                           ;Joc.c: 24:     jugantJoc = 0;
  5604                           
  5605                           ;incstack = 0
  5606  0000E2  9475               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5607  0000E4  0012               	return		;funcret
  5608  0000E6                     __end_of_JendGame:
  5609                           	callstack 0
  5610                           
  5611 ;; *************** function _JJuguem *****************
  5612 ;; Defined at:
  5613 ;;		line 13 in file "Joc.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  usuari          1    wreg     unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  usuari          1    5[COMRAM] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1
  5627 ;;      Params:         0       0       0
  5628 ;;      Locals:         1       0       0
  5629 ;;      Temps:          0       0       0
  5630 ;;      Totals:         1       0       0
  5631 ;;Total ram usage:        1 bytes
  5632 ;; Hardware stack levels used: 1
  5633 ;; Hardware stack levels required when called: 2
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_menu
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text43
  5642  001FF8                     __ptext43:
  5643                           	callstack 0
  5644  001FF8                     _JJuguem:
  5645                           	callstack 27
  5646                           
  5647                           ;incstack = 0
  5648                           ;JJuguem@usuari stored from wreg
  5649  001FF8  6E64               	movwf	JJuguem@usuari^0,c
  5650                           
  5651                           ;Joc.c: 14:     usuariJoc = usuari;
  5652  001FFA  C064  F04C         	movff	JJuguem@usuari,_usuariJoc
  5653  001FFE  0012               	return		;funcret
  5654  002000                     __end_of_JJuguem:
  5655                           	callstack 0
  5656                           
  5657 ;; *************** function _HActualitzaHora *****************
  5658 ;; Defined at:
  5659 ;;		line 16 in file "Hora.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5662 ;;		 -> horaTmp(4), 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;		None
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      void 
  5667 ;; Registers used:
  5668 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1
  5674 ;;      Params:         1       0       0
  5675 ;;      Locals:         0       0       0
  5676 ;;      Temps:          0       0       0
  5677 ;;      Totals:         1       0       0
  5678 ;;Total ram usage:        1 bytes
  5679 ;; Hardware stack levels used: 1
  5680 ;; Hardware stack levels required when called: 2
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_menu
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           	psect	text44
  5689  001C38                     __ptext44:
  5690                           	callstack 0
  5691  001C38                     _HActualitzaHora:
  5692                           	callstack 27
  5693                           
  5694                           ;Hora.c: 17:     hora[0] = nova[0];
  5695                           
  5696                           ;incstack = 0
  5697  001C38  5064               	movf	HActualitzaHora@nova^0,w,c
  5698  001C3A  6ED9               	movwf	fsr2l,c
  5699  001C3C  6ADA               	clrf	fsr2h,c
  5700  001C3E  50DF               	movf	indf2,w,c
  5701  001C40  6E56               	movwf	_hora^0,c
  5702                           
  5703                           ;Hora.c: 18:     hora[1] = nova[1];
  5704  001C42  5064               	movf	HActualitzaHora@nova^0,w,c
  5705  001C44  6ED9               	movwf	fsr2l,c
  5706  001C46  6ADA               	clrf	fsr2h,c
  5707  001C48  2AD9               	incf	fsr2l,f,c
  5708  001C4A  50DF               	movf	indf2,w,c
  5709  001C4C  6E57               	movwf	(_hora+1)^0,c
  5710                           
  5711                           ;Hora.c: 19:     hora[3] = nova[2];
  5712  001C4E  5064               	movf	HActualitzaHora@nova^0,w,c
  5713  001C50  6ED9               	movwf	fsr2l,c
  5714  001C52  6ADA               	clrf	fsr2h,c
  5715  001C54  0E02               	movlw	2
  5716  001C56  26D9               	addwf	fsr2l,f,c
  5717  001C58  50DF               	movf	indf2,w,c
  5718  001C5A  6E59               	movwf	(_hora+3)^0,c
  5719                           
  5720                           ;Hora.c: 20:     hora[4] = nova[3];
  5721  001C5C  5064               	movf	HActualitzaHora@nova^0,w,c
  5722  001C5E  6ED9               	movwf	fsr2l,c
  5723  001C60  6ADA               	clrf	fsr2h,c
  5724  001C62  0E03               	movlw	3
  5725  001C64  26D9               	addwf	fsr2l,f,c
  5726  001C66  50DF               	movf	indf2,w,c
  5727  001C68  6E5A               	movwf	(_hora+4)^0,c
  5728  001C6A  0012               	return		;funcret
  5729  001C6C                     __end_of_HActualitzaHora:
  5730                           	callstack 0
  5731                           
  5732 ;; *************** function _GLCDMostraMenu *****************
  5733 ;; Defined at:
  5734 ;;		line 30 in file "GestioLCD.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  num             1    wreg     unsigned char 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  num             1    5[COMRAM] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1
  5748 ;;      Params:         0       0       0
  5749 ;;      Locals:         1       0       0
  5750 ;;      Temps:          0       0       0
  5751 ;;      Totals:         1       0       0
  5752 ;;Total ram usage:        1 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; Hardware stack levels required when called: 2
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		_menu
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text45
  5763  001F96                     __ptext45:
  5764                           	callstack 0
  5765  001F96                     _GLCDMostraMenu:
  5766                           	callstack 27
  5767                           
  5768                           ;incstack = 0
  5769                           ;GLCDMostraMenu@num stored from wreg
  5770  001F96  6E64               	movwf	GLCDMostraMenu@num^0,c
  5771                           
  5772                           ;GestioLCD.c: 31:     newString = 1;
  5773  001F98  8076               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5774                           
  5775                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5776  001F9A  C064  F021         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5777                           
  5778                           ;GestioLCD.c: 33:     ferMenu = 1;
  5779  001F9E  8276               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5780  001FA0  0012               	return		;funcret
  5781  001FA2                     __end_of_GLCDMostraMenu:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _CToAobtenir *****************
  5785 ;; Defined at:
  5786 ;;		line 7 in file "CtoA.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;		None
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;		None
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      PTR unsigned char 
  5793 ;; Registers used:
  5794 ;;		wreg
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1
  5800 ;;      Params:         2       0       0
  5801 ;;      Locals:         0       0       0
  5802 ;;      Temps:          0       0       0
  5803 ;;      Totals:         2       0       0
  5804 ;;Total ram usage:        2 bytes
  5805 ;; Hardware stack levels used: 1
  5806 ;; Hardware stack levels required when called: 2
  5807 ;; This function calls:
  5808 ;;		Nothing
  5809 ;; This function is called by:
  5810 ;;		_menu
  5811 ;;		_motorSIO
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text46
  5816  0000E6                     __ptext46:
  5817                           	callstack 0
  5818  0000E6                     _CToAobtenir:
  5819                           	callstack 27
  5820                           
  5821                           ;CtoA.c: 8:     return stringScore;
  5822                           
  5823                           ;incstack = 0
  5824  0000E6  0E5C               	movlw	_stringScore& (0+255)
  5825  0000E8  0012               	return		;funcret
  5826  0000EA                     __end_of_CToAobtenir:
  5827                           	callstack 0
  5828                           
  5829 ;; *************** function _CToAHaAcabat *****************
  5830 ;; Defined at:
  5831 ;;		line 10 in file "CtoA.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;		None
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;		None
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      unsigned char 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1
  5845 ;;      Params:         0       0       0
  5846 ;;      Locals:         0       0       0
  5847 ;;      Temps:          0       0       0
  5848 ;;      Totals:         0       0       0
  5849 ;;Total ram usage:        0 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 2
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_menu
  5856 ;;		_motorSIO
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text47
  5861  0000EA                     __ptext47:
  5862                           	callstack 0
  5863  0000EA                     _CToAHaAcabat:
  5864                           	callstack 27
  5865                           
  5866                           ;CtoA.c: 11:     return convertir;
  5867                           
  5868                           ;incstack = 0
  5869  0000EA  5047               	movf	_convertir^0,w,c
  5870  0000EC  0012               	return		;funcret
  5871  0000EE                     __end_of_CToAHaAcabat:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _CToAConverteix *****************
  5875 ;; Defined at:
  5876 ;;		line 14 in file "CtoA.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  numero          1    wreg     unsigned char 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  numero          1    5[COMRAM] unsigned char 
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		wreg, status,2, cstack
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1
  5890 ;;      Params:         0       0       0
  5891 ;;      Locals:         1       0       0
  5892 ;;      Temps:          0       0       0
  5893 ;;      Totals:         1       0       0
  5894 ;;Total ram usage:        1 bytes
  5895 ;; Hardware stack levels used: 1
  5896 ;; Hardware stack levels required when called: 3
  5897 ;; This function calls:
  5898 ;;		_CToAReset
  5899 ;; This function is called by:
  5900 ;;		_menu
  5901 ;;		_motorSIO
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text48
  5906  001FA2                     __ptext48:
  5907                           	callstack 0
  5908  001FA2                     _CToAConverteix:
  5909                           	callstack 26
  5910                           
  5911                           ;incstack = 0
  5912                           ;CToAConverteix@numero stored from wreg
  5913  001FA2  6E64               	movwf	CToAConverteix@numero^0,c
  5914                           
  5915                           ;CtoA.c: 15:     CToAReset();
  5916  001FA4  EC1B  F000         	call	_CToAReset	;wreg free
  5917                           
  5918                           ;CtoA.c: 16:     convertir = numero;
  5919  001FA8  C064  F047         	movff	CToAConverteix@numero,_convertir
  5920  001FAC  0012               	return		;funcret
  5921  001FAE                     __end_of_CToAConverteix:
  5922                           	callstack 0
  5923                           
  5924 ;; *************** function _CToAReset *****************
  5925 ;; Defined at:
  5926 ;;		line 18 in file "CtoA.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;		None
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;		None
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  1    wreg      void 
  5933 ;; Registers used:
  5934 ;;		wreg, status,2
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1
  5940 ;;      Params:         0       0       0
  5941 ;;      Locals:         0       0       0
  5942 ;;      Temps:          0       0       0
  5943 ;;      Totals:         0       0       0
  5944 ;;Total ram usage:        0 bytes
  5945 ;; Hardware stack levels used: 1
  5946 ;; Hardware stack levels required when called: 2
  5947 ;; This function calls:
  5948 ;;		Nothing
  5949 ;; This function is called by:
  5950 ;;		_CToAConverteix
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text49
  5955  000036                     __ptext49:
  5956                           	callstack 0
  5957  000036                     _CToAReset:
  5958                           	callstack 26
  5959                           
  5960                           ;CtoA.c: 19:     stringScore[0] = '0';
  5961                           
  5962                           ;incstack = 0
  5963  000036  0E30               	movlw	48
  5964  000038  6E5C               	movwf	_stringScore^0,c
  5965                           
  5966                           ;CtoA.c: 20:     stringScore[1] = '0';
  5967  00003A  6E5D               	movwf	(_stringScore+1)^0,c
  5968  00003C  0C30               	retlw	48	;funcret
  5969  00003E                     __end_of_CToAReset:
  5970                           	callstack 0
  5971                           
  5972 ;; *************** function _init_ports *****************
  5973 ;; Defined at:
  5974 ;;		line 25 in file "main.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;		None
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;		None
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      void 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1
  5988 ;;      Params:         0       0       0
  5989 ;;      Locals:         0       0       0
  5990 ;;      Temps:          0       0       0
  5991 ;;      Totals:         0       0       0
  5992 ;;Total ram usage:        0 bytes
  5993 ;; Hardware stack levels used: 1
  5994 ;; Hardware stack levels required when called: 2
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		_main
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           	psect	text50
  6003  001E24                     __ptext50:
  6004                           	callstack 0
  6005  001E24                     _init_ports:
  6006                           	callstack 28
  6007                           
  6008                           ;incstack = 0
  6009  001E24  0E03               	movlw	3
  6010  001E26  6E92               	movwf	146,c	;volatile
  6011  001E28  0EE0               	movlw	224
  6012  001E2A  6E93               	movwf	147,c	;volatile
  6013  001E2C  968A               	bcf	138,3,c	;volatile
  6014  001E2E  908A               	bcf	138,0,c	;volatile
  6015  001E30  928A               	bcf	138,1,c	;volatile
  6016                           
  6017                           ;main.c: 49:     TRISC = 0xC0;
  6018  001E32  0EC0               	movlw	192
  6019  001E34  6E94               	movwf	148,c	;volatile
  6020                           
  6021                           ;main.c: 59:     TRISD = 0x8F;
  6022  001E36  0E8F               	movlw	143
  6023  001E38  6E95               	movwf	149,c	;volatile
  6024                           
  6025                           ;main.c: 60:     LATD = 0x00;
  6026  001E3A  6A8C               	clrf	140,c	;volatile
  6027                           
  6028                           ;main.c: 63:     EECON1bits.EEPGD = 1;
  6029  001E3C  8EA6               	bsf	166,7,c	;volsfr
  6030                           
  6031                           ;main.c: 64:     EECON1bits.CFGS = 0;
  6032  001E3E  9CA6               	bcf	166,6,c	;volsfr
  6033  001E40  0012               	return		;funcret
  6034  001E42                     __end_of_init_ports:
  6035                           	callstack 0
  6036                           
  6037 ;; *************** function _init_eusart *****************
  6038 ;; Defined at:
  6039 ;;		line 67 in file "main.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1
  6053 ;;      Params:         0       0       0
  6054 ;;      Locals:         0       0       0
  6055 ;;      Temps:          0       0       0
  6056 ;;      Totals:         0       0       0
  6057 ;;Total ram usage:        0 bytes
  6058 ;; Hardware stack levels used: 1
  6059 ;; Hardware stack levels required when called: 2
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_main
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text51
  6068  001ECC                     __ptext51:
  6069                           	callstack 0
  6070  001ECC                     _init_eusart:
  6071                           	callstack 28
  6072                           
  6073                           ;main.c: 68:     TXSTA = 0x24;
  6074                           
  6075                           ;incstack = 0
  6076  001ECC  0E24               	movlw	36
  6077  001ECE  6EAC               	movwf	172,c	;volatile
  6078                           
  6079                           ;main.c: 69:     RCSTA = 0x90;
  6080  001ED0  0E90               	movlw	144
  6081  001ED2  6EAB               	movwf	171,c	;volatile
  6082                           
  6083                           ;main.c: 70:     BAUDCON = 0x08;
  6084  001ED4  0E08               	movlw	8
  6085  001ED6  6EB8               	movwf	184,c	;volatile
  6086                           
  6087                           ;main.c: 71:     SPBRGH = 0x04;
  6088  001ED8  0E04               	movlw	4
  6089  001EDA  6EB0               	movwf	176,c	;volatile
  6090                           
  6091                           ;main.c: 72:     SPBRG = 0x10;
  6092  001EDC  0E10               	movlw	16
  6093  001EDE  6EAF               	movwf	175,c	;volatile
  6094  001EE0  0C10               	retlw	16	;funcret
  6095  001EE2                     __end_of_init_eusart:
  6096                           	callstack 0
  6097                           
  6098 ;; *************** function _initSIO *****************
  6099 ;; Defined at:
  6100 ;;		line 19 in file "SIO.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1
  6114 ;;      Params:         0       0       0
  6115 ;;      Locals:         0       0       0
  6116 ;;      Temps:          0       0       0
  6117 ;;      Totals:         0       0       0
  6118 ;;Total ram usage:        0 bytes
  6119 ;; Hardware stack levels used: 1
  6120 ;; Hardware stack levels required when called: 3
  6121 ;; This function calls:
  6122 ;;		_TiGetTimer
  6123 ;; This function is called by:
  6124 ;;		_main
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text52
  6129  00003E                     __ptext52:
  6130                           	callstack 0
  6131  00003E                     _initSIO:
  6132                           	callstack 27
  6133                           
  6134                           ;SIO.c: 20:     timerSIO = TiGetTimer();
  6135                           
  6136                           ;incstack = 0
  6137  00003E  EC6A  F00E         	call	_TiGetTimer	;wreg free
  6138  000042  6E11               	movwf	_timerSIO^0,c
  6139  000044  0012               	return		;funcret
  6140  000046                     __end_of_initSIO:
  6141                           	callstack 0
  6142                           
  6143 ;; *************** function _initHora *****************
  6144 ;; Defined at:
  6145 ;;		line 12 in file "Hora.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1
  6159 ;;      Params:         0       0       0
  6160 ;;      Locals:         0       0       0
  6161 ;;      Temps:          0       0       0
  6162 ;;      Totals:         0       0       0
  6163 ;;Total ram usage:        0 bytes
  6164 ;; Hardware stack levels used: 1
  6165 ;; Hardware stack levels required when called: 3
  6166 ;; This function calls:
  6167 ;;		_TiGetTimer
  6168 ;; This function is called by:
  6169 ;;		_main
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text53
  6174  000046                     __ptext53:
  6175                           	callstack 0
  6176  000046                     _initHora:
  6177                           	callstack 27
  6178                           
  6179                           ;Hora.c: 13:     timerHora = TiGetTimer();
  6180                           
  6181                           ;incstack = 0
  6182  000046  EC6A  F00E         	call	_TiGetTimer	;wreg free
  6183  00004A  6E16               	movwf	_timerHora^0,c
  6184  00004C  0012               	return		;funcret
  6185  00004E                     __end_of_initHora:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function _initAltaveu *****************
  6189 ;; Defined at:
  6190 ;;		line 10 in file "Altaveu.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1
  6204 ;;      Params:         0       0       0
  6205 ;;      Locals:         0       0       0
  6206 ;;      Temps:          0       0       0
  6207 ;;      Totals:         0       0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 3
  6211 ;; This function calls:
  6212 ;;		_TiGetTimer
  6213 ;; This function is called by:
  6214 ;;		_main
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text54
  6219  00004E                     __ptext54:
  6220                           	callstack 0
  6221  00004E                     _initAltaveu:
  6222                           	callstack 27
  6223                           
  6224                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  6225                           
  6226                           ;incstack = 0
  6227  00004E  EC6A  F00E         	call	_TiGetTimer	;wreg free
  6228  000052  6E25               	movwf	_timerAltaveu^0,c
  6229  000054  0012               	return		;funcret
  6230  000056                     __end_of_initAltaveu:
  6231                           	callstack 0
  6232                           
  6233 ;; *************** function _UmotorUsers *****************
  6234 ;; Defined at:
  6235 ;;		line 144 in file "Usuaris.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;		None
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1
  6249 ;;      Params:         0       0       0
  6250 ;;      Locals:         0       0       0
  6251 ;;      Temps:          2       0       0
  6252 ;;      Totals:         2       0       0
  6253 ;;Total ram usage:        2 bytes
  6254 ;; Hardware stack levels used: 1
  6255 ;; Hardware stack levels required when called: 3
  6256 ;; This function calls:
  6257 ;;		_compareStrings
  6258 ;;		_escriureCharEEPROM
  6259 ;; This function is called by:
  6260 ;;		_main
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           	psect	text55
  6265  000D0A                     __ptext55:
  6266                           	callstack 0
  6267  000D0A                     _UmotorUsers:
  6268                           	callstack 27
  6269                           
  6270                           ;Usuaris.c: 145:     static char state = 0;;Usuaris.c: 147:  switch(state) {
  6271                           
  6272                           ;incstack = 0
  6273  000D0A  D0FC               	goto	l6152
  6274  000D0C                     l767:
  6275                           
  6276                           ;Usuaris.c: 149:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  6277  000D0C  AC76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6278  000D0E  BA76               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6279  000D10  D006               	goto	l768
  6280  000D12  A876               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6281  000D14  B676               	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6282  000D16  D003               	goto	l768
  6283                           
  6284                           ;Usuaris.c: 150:     i = 0;
  6285  000D18  6A2A               	clrf	_i^0,c
  6286                           
  6287                           ;Usuaris.c: 151:     j = 0;
  6288  000D1A  6A29               	clrf	_j^0,c
  6289                           
  6290                           ;Usuaris.c: 152:    }
  6291  000D1C  0012               	return	
  6292  000D1E                     l768:
  6293  000D1E  AC76               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6294  000D20  D004               	goto	l770
  6295                           
  6296                           ;Usuaris.c: 154:     usuariLoguejat = -1;
  6297  000D22  684F               	setf	_usuariLoguejat^0,c
  6298  000D24                     l5994:
  6299                           
  6300                           ;Usuaris.c: 155:     state = 1;
  6301  000D24  0E01               	movlw	1
  6302  000D26  6E27               	movwf	UmotorUsers@state^0,c
  6303                           
  6304                           ;Usuaris.c: 156:    }
  6305  000D28  0C01               	retlw	1
  6306  000D2A                     l770:
  6307  000D2A  AA76               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6308  000D2C  D00B               	goto	l772
  6309                           
  6310                           ;Usuaris.c: 158:     if(numUsuaris != 8) numUsuaris++;
  6311  000D2E  0E08               	movlw	8
  6312  000D30  182D               	xorwf	_numUsuaris^0,w,c
  6313  000D32  E001               	bz	l6000
  6314  000D34  2A2D               	incf	_numUsuaris^0,f,c
  6315  000D36                     l6000:
  6316                           
  6317                           ;Usuaris.c: 160:     escriureCharEEPROM(numUsuaris,0);
  6318  000D36  6A64               	clrf	escriureCharEEPROM@pos^0,c
  6319  000D38  502D               	movf	_numUsuaris^0,w,c
  6320  000D3A  EC94  F00E         	call	_escriureCharEEPROM
  6321  000D3E                     l6002:
  6322                           
  6323                           ;Usuaris.c: 161:     state = 2;
  6324  000D3E  0E02               	movlw	2
  6325  000D40  6E27               	movwf	UmotorUsers@state^0,c
  6326                           
  6327                           ;Usuaris.c: 162:    }
  6328  000D42  0C02               	retlw	2
  6329  000D44                     l772:
  6330  000D44  A876               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6331  000D46  D015               	goto	l775
  6332                           
  6333                           ;Usuaris.c: 164:     arrayShowUsers[0] = usuariLoguejat;
  6334  000D48  C04F  F001         	movff	_usuariLoguejat,_arrayShowUsers
  6335                           
  6336                           ;Usuaris.c: 165:     arrayShowUsers[1] = -1;
  6337  000D4C  6802               	setf	(_arrayShowUsers+1)^0,c
  6338                           
  6339                           ;Usuaris.c: 166:     arrayShowUsers[2] = -1;
  6340  000D4E  6803               	setf	(_arrayShowUsers+2)^0,c
  6341                           
  6342                           ;Usuaris.c: 167:     arrayShowUsers[3] = -1;
  6343  000D50  6804               	setf	(_arrayShowUsers+3)^0,c
  6344                           
  6345                           ;Usuaris.c: 168:     arrayShowUsers[4] = -1;
  6346  000D52  6805               	setf	(_arrayShowUsers+4)^0,c
  6347                           
  6348                           ;Usuaris.c: 169:     arrayShowUsers[5] = -1;
  6349  000D54  6806               	setf	(_arrayShowUsers+5)^0,c
  6350                           
  6351                           ;Usuaris.c: 170:     arrayShowUsers[6] = -1;
  6352  000D56  6807               	setf	(_arrayShowUsers+6)^0,c
  6353                           
  6354                           ;Usuaris.c: 171:     arrayShowUsers[7] = -1;
  6355  000D58  6808               	setf	(_arrayShowUsers+7)^0,c
  6356                           
  6357                           ;Usuaris.c: 172:     i = 1;
  6358  000D5A  0E01               	movlw	1
  6359  000D5C  6E2A               	movwf	_i^0,c
  6360                           
  6361                           ;Usuaris.c: 173:     if(numUsuaris < 7) {
  6362  000D5E  0E07               	movlw	7
  6363  000D60  602D               	cpfslt	_numUsuaris^0,c
  6364  000D62  D002               	goto	l776
  6365  000D64                     u6370:
  6366                           
  6367                           ;Usuaris.c: 174:       j = 0;
  6368  000D64  6A29               	clrf	_j^0,c
  6369                           
  6370                           ;Usuaris.c: 175:     }
  6371  000D66  D002               	goto	l6012
  6372  000D68                     l776:
  6373                           
  6374                           ;Usuaris.c: 177:       j = indexNextUserStruct;
  6375  000D68  C02B  F029         	movff	_indexNextUserStruct,_j
  6376  000D6C                     l6012:
  6377                           
  6378                           ;Usuaris.c: 179:     state = 5;
  6379  000D6C  0E05               	movlw	5
  6380  000D6E  6E27               	movwf	UmotorUsers@state^0,c
  6381                           
  6382                           ;Usuaris.c: 180:    }
  6383  000D70  0C05               	retlw	5
  6384  000D72                     l775:
  6385  000D72  A676               	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6386  000D74  0012               	return	
  6387                           
  6388                           ;Usuaris.c: 182:     do_updateScore = 0;
  6389  000D76  9676               	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6390  000D78                     l6016:
  6391                           
  6392                           ;Usuaris.c: 183:     state = 6;
  6393  000D78  0E06               	movlw	6
  6394  000D7A  6E27               	movwf	UmotorUsers@state^0,c
  6395  000D7C  0C06               	retlw	6
  6396  000D7E                     l6018:
  6397                           
  6398                           ;Usuaris.c: 187:    if (i < numUsuaris) {
  6399  000D7E  502D               	movf	_numUsuaris^0,w,c
  6400  000D80  5C2A               	subwf	_i^0,w,c
  6401  000D82  E212               	bc	l6028
  6402                           
  6403                           ;Usuaris.c: 188:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6404  000D84  0EAB               	movlw	low _tmpUsername
  6405  000D86  6E64               	movwf	compareStrings@a^0,c
  6406  000D88  502A               	movf	_i^0,w,c
  6407  000D8A  0D12               	mullw	18
  6408  000D8C  0E00               	movlw	low _usuaris
  6409  000D8E  24F3               	addwf	243,w,c
  6410  000D90  6E65               	movwf	compareStrings@b^0,c
  6411  000D92  0E01               	movlw	high _usuaris
  6412  000D94  20F4               	addwfc	prodh,w,c
  6413  000D96  6E66               	movwf	(compareStrings@b+1)^0,c
  6414  000D98  ECC2  F00D         	call	_compareStrings	;wreg free
  6415  000D9C  0900               	iorlw	0
  6416  000D9E  E102               	bnz	l6024
  6417                           
  6418                           ;Usuaris.c: 189:      usuariLoguejat = i;
  6419  000DA0  C02A  F04F         	movff	_i,_usuariLoguejat
  6420  000DA4                     l6024:
  6421                           
  6422                           ;Usuaris.c: 192:     i++;
  6423  000DA4  2A2A               	incf	_i^0,f,c
  6424  000DA6  D7BE               	goto	l5994
  6425  000DA8                     l6028:
  6426  000DA8  502D               	movf	_numUsuaris^0,w,c
  6427  000DAA  182A               	xorwf	_i^0,w,c
  6428  000DAC  A4D8               	btfss	status,2,c
  6429  000DAE  0012               	return	
  6430                           
  6431                           ;Usuaris.c: 196:     do_check_exists = 0;
  6432  000DB0  9C76               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6433                           
  6434                           ;Usuaris.c: 197:     state = 0;
  6435  000DB2  6A27               	clrf	UmotorUsers@state^0,c
  6436  000DB4  0012               	return	
  6437  000DB6                     l6032:
  6438                           
  6439                           ;Usuaris.c: 201:    if (i < 9) {
  6440  000DB6  0E09               	movlw	9
  6441  000DB8  602A               	cpfslt	_i^0,c
  6442  000DBA  D00D               	goto	l6044
  6443                           
  6444                           ;Usuaris.c: 202:     escriureCharEEPROM(tmpUsername[i],indexNextUser);
  6445  000DBC  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6446  000DC0  502A               	movf	_i^0,w,c
  6447  000DC2  0FAB               	addlw	low _tmpUsername
  6448  000DC4  D8DF               	call	PL56	;call to abstracted procedure
  6449  000DC6  EC94  F00E         	call	_escriureCharEEPROM
  6450                           
  6451                           ;Usuaris.c: 203:     indexNextUser++;
  6452  000DCA  2A2C               	incf	_indexNextUser^0,f,c
  6453                           
  6454                           ;Usuaris.c: 204:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6455  000DCC  502A               	movf	_i^0,w,c
  6456  000DCE  0FAB               	addlw	low _tmpUsername
  6457  000DD0  D8D0               	call	PL26	;call to abstracted procedure
  6458                           
  6459                           ;Usuaris.c: 205:     i++;
  6460  000DD2  D8BA               	call	PL20	;call to abstracted procedure
  6461  000DD4  D7B4               	goto	l6002
  6462  000DD6                     l6044:
  6463  000DD6  0E08               	movlw	8
  6464  000DD8  642A               	cpfsgt	_i^0,c
  6465  000DDA  0C08               	retlw	8
  6466                           
  6467                           ;Usuaris.c: 209:     i = 0;
  6468  000DDC  6A2A               	clrf	_i^0,c
  6469  000DDE                     l6048:
  6470                           
  6471                           ;Usuaris.c: 210:     state = 3;
  6472  000DDE  0E03               	movlw	3
  6473  000DE0  6E27               	movwf	UmotorUsers@state^0,c
  6474  000DE2  0C03               	retlw	3
  6475  000DE4                     l6050:
  6476                           
  6477                           ;Usuaris.c: 214:    if (i < 9) {
  6478  000DE4  0E09               	movlw	9
  6479  000DE6  602A               	cpfslt	_i^0,c
  6480  000DE8  D011               	goto	l6062
  6481                           
  6482                           ;Usuaris.c: 215:     escriureCharEEPROM(tmpPassword[i],indexNextUser);
  6483  000DEA  C02C  F064         	movff	_indexNextUser,escriureCharEEPROM@pos
  6484  000DEE  502A               	movf	_i^0,w,c
  6485  000DF0  0FA2               	addlw	low _tmpPassword
  6486  000DF2  D8C8               	call	PL56	;call to abstracted procedure
  6487  000DF4  EC94  F00E         	call	_escriureCharEEPROM
  6488                           
  6489                           ;Usuaris.c: 216:     indexNextUser++;
  6490  000DF8  2A2C               	incf	_indexNextUser^0,f,c
  6491                           
  6492                           ;Usuaris.c: 217:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6493  000DFA  502A               	movf	_i^0,w,c
  6494  000DFC  0FA2               	addlw	low _tmpPassword
  6495  000DFE  D8B9               	call	PL26	;call to abstracted procedure
  6496  000E00  0E09               	movlw	9
  6497  000E02  2669               	addwf	??_UmotorUsers^0,f,c
  6498  000E04  0E00               	movlw	0
  6499  000E06  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  6500                           
  6501                           ;Usuaris.c: 218:     i++;
  6502  000E08  D89F               	call	PL20	;call to abstracted procedure
  6503  000E0A  D7E9               	goto	l6048
  6504  000E0C                     l6062:
  6505  000E0C  0E08               	movlw	8
  6506  000E0E  642A               	cpfsgt	_i^0,c
  6507  000E10  0C08               	retlw	8
  6508                           
  6509                           ;Usuaris.c: 222:     do_register = 0;
  6510  000E12  9A76               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6511                           
  6512                           ;Usuaris.c: 223:     if(indexNextUser == 159) indexNextUser = 16;
  6513  000E14  0E9F               	movlw	159
  6514  000E16  182C               	xorwf	_indexNextUser^0,w,c
  6515  000E18  E102               	bnz	l6070
  6516  000E1A  0E10               	movlw	16
  6517  000E1C  6E2C               	movwf	_indexNextUser^0,c
  6518  000E1E                     l6070:
  6519                           
  6520                           ;Usuaris.c: 224:     indexNextUserStruct++;
  6521  000E1E  2A2B               	incf	_indexNextUserStruct^0,f,c
  6522                           
  6523                           ;Usuaris.c: 225:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6524  000E20  0E08               	movlw	8
  6525  000E22  182B               	xorwf	_indexNextUserStruct^0,w,c
  6526  000E24  E101               	bnz	l6076
  6527  000E26  6A2B               	clrf	_indexNextUserStruct^0,c
  6528  000E28                     l6076:
  6529                           
  6530                           ;Usuaris.c: 226:     escriureCharEEPROM(indexNextUser,1);
  6531  000E28  0E01               	movlw	1
  6532  000E2A  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6533  000E2C  502C               	movf	_indexNextUser^0,w,c
  6534  000E2E  EC94  F00E         	call	_escriureCharEEPROM
  6535  000E32                     l6078:
  6536                           
  6537                           ;Usuaris.c: 227:     state = 0;
  6538  000E32  6A27               	clrf	UmotorUsers@state^0,c
  6539  000E34  0012               	return	
  6540  000E36                     l6080:
  6541                           
  6542                           ;Usuaris.c: 231:    if (i < numUsuaris) {
  6543  000E36  502D               	movf	_numUsuaris^0,w,c
  6544  000E38  5C2A               	subwf	_i^0,w,c
  6545  000E3A  E217               	bc	l6096
  6546                           
  6547                           ;Usuaris.c: 232:     if(j != usuariLoguejat){
  6548  000E3C  C04F  F069         	movff	_usuariLoguejat,??_UmotorUsers
  6549  000E40  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6550  000E42  BE69               	btfsc	??_UmotorUsers^0,7,c
  6551  000E44  066A               	decf	(??_UmotorUsers+1)^0,f,c
  6552  000E46  5029               	movf	_j^0,w,c
  6553  000E48  1869               	xorwf	??_UmotorUsers^0,w,c
  6554  000E4A  106A               	iorwf	(??_UmotorUsers+1)^0,w,c
  6555  000E4C  E008               	bz	l6088
  6556                           
  6557                           ;Usuaris.c: 233:       arrayShowUsers[i] = j;
  6558  000E4E  502A               	movf	_i^0,w,c
  6559  000E50  0F01               	addlw	low _arrayShowUsers
  6560  000E52  6ED9               	movwf	fsr2l,c
  6561  000E54  6ADA               	clrf	fsr2h,c
  6562  000E56  C029  FFDF         	movff	_j,indf2
  6563                           
  6564                           ;Usuaris.c: 234:      i++;
  6565  000E5A  2A2A               	incf	_i^0,f,c
  6566                           
  6567                           ;Usuaris.c: 235:     }else{
  6568  000E5C  D001               	goto	l799
  6569  000E5E                     l6088:
  6570                           
  6571                           ;Usuaris.c: 236:       j++;
  6572  000E5E  2A29               	incf	_j^0,f,c
  6573  000E60                     l799:
  6574                           
  6575                           ;Usuaris.c: 238:     j++;
  6576  000E60  2A29               	incf	_j^0,f,c
  6577                           
  6578                           ;Usuaris.c: 239:     if(j > 7) j=0;
  6579  000E62  0E07               	movlw	7
  6580  000E64  6429               	cpfsgt	_j^0,c
  6581  000E66  D782               	goto	l6012
  6582  000E68  D77D               	goto	u6370
  6583  000E6A                     l6096:
  6584  000E6A  502D               	movf	_numUsuaris^0,w,c
  6585  000E6C  182A               	xorwf	_i^0,w,c
  6586  000E6E  A4D8               	btfss	status,2,c
  6587  000E70  0012               	return	
  6588                           
  6589                           ;Usuaris.c: 243:     do_showUsers = 0;
  6590  000E72  9876               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6591                           
  6592                           ;Usuaris.c: 244:     state = 0;
  6593  000E74  6A27               	clrf	UmotorUsers@state^0,c
  6594  000E76  0012               	return	
  6595  000E78                     l6100:
  6596                           
  6597                           ;Usuaris.c: 248:    if (i < 5 && puntuacions[i].indexStruct != -1) {
  6598  000E78  0E05               	movlw	5
  6599  000E7A  602A               	cpfslt	_i^0,c
  6600  000E7C  D005               	goto	l6108
  6601  000E7E  D872               	call	PL22	;call to abstracted procedure
  6602  000E80  28DE               	incf	postinc2,w,c
  6603  000E82  E002               	bz	l6108
  6604                           
  6605                           ;Usuaris.c: 249:     i++;
  6606  000E84  2A2A               	incf	_i^0,f,c
  6607  000E86  D778               	goto	l6016
  6608  000E88                     l6108:
  6609  000E88  0E05               	movlw	5
  6610  000E8A  602A               	cpfslt	_i^0,c
  6611  000E8C  D006               	goto	l6114
  6612  000E8E  D86A               	call	PL22	;call to abstracted procedure
  6613  000E90  28DE               	incf	postinc2,w,c
  6614  000E92  E103               	bnz	l6114
  6615  000E94                     u6550:
  6616                           
  6617                           ;Usuaris.c: 253:     state = 7;
  6618  000E94  0E07               	movlw	7
  6619  000E96  6E27               	movwf	UmotorUsers@state^0,c
  6620                           
  6621                           ;Usuaris.c: 254:    }
  6622  000E98  0C07               	retlw	7
  6623  000E9A                     l6114:
  6624  000E9A  0E04               	movlw	4
  6625  000E9C  642A               	cpfsgt	_i^0,c
  6626  000E9E  0C04               	retlw	4
  6627                           
  6628                           ;Usuaris.c: 256:     i = 0;
  6629  000EA0  6A2A               	clrf	_i^0,c
  6630  000EA2                     l6118:
  6631                           
  6632                           ;Usuaris.c: 257:     state = 8;
  6633  000EA2  0E08               	movlw	8
  6634  000EA4  6E27               	movwf	UmotorUsers@state^0,c
  6635  000EA6  0C08               	retlw	8
  6636  000EA8                     l6120:
  6637                           
  6638                           ;Usuaris.c: 261:    puntuacions[i].score = scoreUsr;
  6639  000EA8  D848               	call	PL16	;call to abstracted procedure
  6640  000EAA  C028  FFDF         	movff	_scoreUsr,indf2
  6641                           
  6642                           ;Usuaris.c: 262:    puntuacions[i].indexStruct = usuariLoguejat;
  6643  000EAE  D85A               	call	PL22	;call to abstracted procedure
  6644  000EB0  C04F  FFDF         	movff	_usuariLoguejat,indf2
  6645                           
  6646                           ;Usuaris.c: 263:    i = i+i;
  6647  000EB4  0E02               	movlw	2
  6648  000EB6  022A               	mulwf	_i^0,c
  6649  000EB8  50F3               	movf	prodl,w,c
  6650  000EBA  6E2A               	movwf	_i^0,c
  6651                           
  6652                           ;Usuaris.c: 264:    escriureCharEEPROM(usuariLoguejat,200+i);
  6653  000EBC  502A               	movf	_i^0,w,c
  6654  000EBE  0FC8               	addlw	200
  6655  000EC0  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6656  000EC2  504F               	movf	_usuariLoguejat^0,w,c
  6657  000EC4  EC94  F00E         	call	_escriureCharEEPROM
  6658                           
  6659                           ;Usuaris.c: 265:    i++;
  6660  000EC8  2A2A               	incf	_i^0,f,c
  6661                           
  6662                           ;Usuaris.c: 266:    escriureCharEEPROM(scoreUsr,200+i);
  6663  000ECA  502A               	movf	_i^0,w,c
  6664  000ECC  0FC8               	addlw	200
  6665  000ECE  6E64               	movwf	escriureCharEEPROM@pos^0,c
  6666  000ED0  5028               	movf	_scoreUsr^0,w,c
  6667  000ED2  EC94  F00E         	call	_escriureCharEEPROM
  6668  000ED6  D7AD               	goto	l6078
  6669  000ED8                     l6132:
  6670                           
  6671                           ;Usuaris.c: 270:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  6672  000ED8  D830               	call	PL16	;call to abstracted procedure
  6673  000EDA  5028               	movf	_scoreUsr^0,w,c
  6674  000EDC  5CDE               	subwf	postinc2,w,c
  6675  000EDE  E305               	bnc	l6140
  6676  000EE0  0E05               	movlw	5
  6677  000EE2  602A               	cpfslt	_i^0,c
  6678  000EE4  D002               	goto	l6140
  6679                           
  6680                           ;Usuaris.c: 271:     i++;
  6681  000EE6  2A2A               	incf	_i^0,f,c
  6682  000EE8  D7DC               	goto	l6118
  6683  000EEA                     l6140:
  6684  000EEA  0E04               	movlw	4
  6685  000EEC  642A               	cpfsgt	_i^0,c
  6686  000EEE  D001               	goto	l6144
  6687  000EF0  D7A0               	goto	l6078
  6688  000EF2                     l6144:
  6689  000EF2  D823               	call	PL16	;call to abstracted procedure
  6690  000EF4  5028               	movf	_scoreUsr^0,w,c
  6691  000EF6  5CDE               	subwf	postinc2,w,c
  6692  000EF8  B0D8               	btfsc	status,0,c
  6693  000EFA  0012               	return	
  6694  000EFC  0E05               	movlw	5
  6695  000EFE  602A               	cpfslt	_i^0,c
  6696  000F00  0C05               	retlw	5
  6697  000F02  D7C8               	goto	u6550
  6698  000F04                     l6152:
  6699  000F04  5027               	movf	UmotorUsers@state^0,w,c
  6700  000F06  6E69               	movwf	??_UmotorUsers^0,c
  6701  000F08  6A6A               	clrf	(??_UmotorUsers+1)^0,c
  6702                           
  6703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6704                           ; Switch size 1, requested type "space"
  6705                           ; Number of cases is 1, Range of values is 0 to 0
  6706                           ; switch strategies available:
  6707                           ; Name         Instructions Cycles
  6708                           ; simple_byte            4     3 (average)
  6709                           ;	Chosen strategy is simple_byte
  6710  000F0A  506A               	movf	(??_UmotorUsers+1)^0,w,c
  6711  000F0C  A4D8               	btfss	status,2,c
  6712  000F0E  0012               	return	
  6713                           
  6714                           ; Switch size 1, requested type "space"
  6715                           ; Number of cases is 8, Range of values is 0 to 8
  6716                           ; switch strategies available:
  6717                           ; Name         Instructions Cycles
  6718                           ; simple_byte           25    13 (average)
  6719                           ;	Chosen strategy is simple_byte
  6720  000F10  5069               	movf	??_UmotorUsers^0,w,c
  6721  000F12  E101 D6FB          	bz	l767
  6722  000F16  0A01               	xorlw	1	; case 1
  6723  000F18  E101 D731          	bz	l6018
  6724  000F1C  0A03               	xorlw	3	; case 2
  6725  000F1E  E101 D74A          	bz	l6032
  6726  000F22  0A01               	xorlw	1	; case 3
  6727  000F24  E101 D75E          	bz	l6050
  6728  000F28  0A06               	xorlw	6	; case 5
  6729  000F2A  E085               	bz	l6080
  6730  000F2C  0A03               	xorlw	3	; case 6
  6731  000F2E  E0A4               	bz	l6100
  6732  000F30  0A01               	xorlw	1	; case 7
  6733  000F32  E0BA               	bz	l6120
  6734  000F34  0A0F               	xorlw	15	; case 8
  6735  000F36  E0D0               	bz	l6132
  6736  000F38  0012               	return		;funcret
  6737  000F3A                     __end_of_UmotorUsers:
  6738                           	callstack 0
  6739  000F3A                     PL16:
  6740                           	callstack 27
  6741  000F3A  502A               	movf	_i^0,w,c
  6742  000F3C  0D02               	mullw	2
  6743  000F3E  50F3               	movf	243,w,c
  6744  000F40  0F99               	addlw	low (_puntuacions+1)
  6745  000F42  6ED9               	movwf	fsr2l,c
  6746  000F44  6ADA               	clrf	fsr2h,c
  6747  000F46  0012               	return	
  6748  000F48                     __end_ofPL16:
  6749                           	callstack 0
  6750  000F48                     PL20:
  6751                           	callstack 27
  6752  000F48  50F3               	movf	243,w,c
  6753  000F4A  2669               	addwf	??_UmotorUsers^0,f,c
  6754  000F4C  50F4               	movf	244,w,c
  6755  000F4E  226A               	addwfc	(??_UmotorUsers+1)^0,f,c
  6756  000F50  502A               	movf	_i^0,w,c
  6757  000F52  2469               	addwf	??_UmotorUsers^0,w,c
  6758  000F54  6EE1               	movwf	fsr1l,c
  6759  000F56  0E00               	movlw	0
  6760  000F58  206A               	addwfc	(??_UmotorUsers+1)^0,w,c
  6761  000F5A  6EE2               	movwf	fsr1h,c
  6762  000F5C  CFDF FFE7          	movff	indf2,indf1
  6763  000F60  2A2A               	incf	_i^0,f,c
  6764  000F62  0012               	return	
  6765  000F64                     __end_ofPL20:
  6766                           	callstack 0
  6767  000F64                     PL22:
  6768                           	callstack 27
  6769  000F64  502A               	movf	_i^0,w,c
  6770  000F66  0D02               	mullw	2
  6771  000F68  50F3               	movf	243,w,c
  6772  000F6A  0F98               	addlw	low _puntuacions
  6773  000F6C  6ED9               	movwf	fsr2l,c
  6774  000F6E  6ADA               	clrf	fsr2h,c
  6775  000F70  0012               	return	
  6776  000F72                     __end_ofPL22:
  6777                           	callstack 0
  6778  000F72                     PL26:
  6779                           	callstack 27
  6780  000F72  6ED9               	movwf	fsr2l,c
  6781  000F74  6ADA               	clrf	fsr2h,c
  6782  000F76  502B               	movf	_indexNextUserStruct^0,w,c
  6783  000F78  0D12               	mullw	18
  6784  000F7A  0E00               	movlw	low _usuaris
  6785  000F7C  6E69               	movwf	??_UmotorUsers^0,c
  6786  000F7E  0E01               	movlw	high _usuaris
  6787  000F80  6E6A               	movwf	(??_UmotorUsers+1)^0,c
  6788  000F82  0012               	return	
  6789  000F84                     __end_ofPL26:
  6790                           	callstack 0
  6791  000F84                     PL56:
  6792                           	callstack 27
  6793  000F84  6ED9               	movwf	fsr2l,c
  6794  000F86  6ADA               	clrf	fsr2h,c
  6795  000F88  50DF               	movf	indf2,w,c
  6796  000F8A  0012               	return	
  6797  000F8C                     __end_ofPL56:
  6798                           	callstack 0
  6799                           
  6800 ;; *************** function _escriureCharEEPROM *****************
  6801 ;; Defined at:
  6802 ;;		line 64 in file "Usuaris.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  c               1    wreg     unsigned char 
  6805 ;;  pos             1    5[COMRAM] unsigned char 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  c               1    6[COMRAM] unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      void 
  6810 ;; Registers used:
  6811 ;;		wreg, status,2
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1
  6817 ;;      Params:         1       0       0
  6818 ;;      Locals:         1       0       0
  6819 ;;      Temps:          0       0       0
  6820 ;;      Totals:         2       0       0
  6821 ;;Total ram usage:        2 bytes
  6822 ;; Hardware stack levels used: 1
  6823 ;; Hardware stack levels required when called: 2
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_UmotorUsers
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text56
  6832  001D28                     __ptext56:
  6833                           	callstack 0
  6834  001D28                     _escriureCharEEPROM:
  6835                           	callstack 27
  6836                           
  6837                           ;incstack = 0
  6838                           ;escriureCharEEPROM@c stored from wreg
  6839  001D28  6E65               	movwf	escriureCharEEPROM@c^0,c
  6840                           
  6841                           ;Usuaris.c: 65:     EEADR = pos;
  6842  001D2A  C064  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  6843                           
  6844                           ;Usuaris.c: 66:     EEDATA = c;
  6845  001D2E  C065  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  6846                           
  6847                           ;Usuaris.c: 67:     EECON1bits.EEPGD = 0;
  6848  001D32  9EA6               	bcf	166,7,c	;volsfr
  6849                           
  6850                           ;Usuaris.c: 68:     EECON1bits.CFGS = 0;
  6851  001D34  9CA6               	bcf	166,6,c	;volsfr
  6852                           
  6853                           ;Usuaris.c: 69:     EECON1bits.WREN = 1;
  6854  001D36  84A6               	bsf	166,2,c	;volsfr
  6855                           
  6856                           ;Usuaris.c: 70:     INTCONbits.GIE = 0;
  6857  001D38  9EF2               	bcf	242,7,c	;volatile
  6858                           
  6859                           ;Usuaris.c: 71:     EECON2 = 85;
  6860  001D3A  0E55               	movlw	85
  6861  001D3C  6EA7               	movwf	167,c	;volsfr
  6862                           
  6863                           ;Usuaris.c: 72:     EECON2 = 170;
  6864  001D3E  0EAA               	movlw	170
  6865  001D40  6EA7               	movwf	167,c	;volsfr
  6866                           
  6867                           ;Usuaris.c: 73:     EECON1bits.WR = 1;
  6868  001D42  82A6               	bsf	166,1,c	;volsfr
  6869  001D44                     l724:
  6870  001D44  B2A6               	btfsc	166,1,c	;volsfr
  6871  001D46  D7FE               	goto	l724
  6872                           
  6873                           ;Usuaris.c: 75:     INTCONbits.GIE = 1;
  6874  001D48  8EF2               	bsf	242,7,c	;volatile
  6875                           
  6876                           ;Usuaris.c: 76:     EECON1bits.WREN = 0;
  6877  001D4A  94A6               	bcf	166,2,c	;volsfr
  6878  001D4C  0012               	return		;funcret
  6879  001D4E                     __end_of_escriureCharEEPROM:
  6880                           	callstack 0
  6881                           
  6882 ;; *************** function _compareStrings *****************
  6883 ;; Defined at:
  6884 ;;		line 128 in file "Usuaris.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;  a               1    5[COMRAM] PTR const unsigned char 
  6887 ;;		 -> tmpPassword(9), tmpUsername(9), 
  6888 ;;  b               2    6[COMRAM] PTR const unsigned char 
  6889 ;;		 -> usuaris.password(9), usuaris.username(9), usuaris(144), 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;		None
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  1    wreg      unsigned char 
  6894 ;; Registers used:
  6895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMRAM   BANK0   BANK1
  6901 ;;      Params:         3       0       0
  6902 ;;      Locals:         0       0       0
  6903 ;;      Temps:          2       0       0
  6904 ;;      Totals:         5       0       0
  6905 ;;Total ram usage:        5 bytes
  6906 ;; Hardware stack levels used: 1
  6907 ;; Hardware stack levels required when called: 2
  6908 ;; This function calls:
  6909 ;;		Nothing
  6910 ;; This function is called by:
  6911 ;;		_UmotorUsers
  6912 ;;		_miraPassword
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text57
  6917  001B84                     __ptext57:
  6918                           	callstack 0
  6919  001B84                     _compareStrings:
  6920                           	callstack 26
  6921                           
  6922                           ;Usuaris.c: 129:     while (*a){
  6923                           
  6924                           ;incstack = 0
  6925  001B84  D00A               	goto	l4364
  6926  001B86                     l4358:
  6927                           
  6928                           ;Usuaris.c: 130:         if (*a != *b)break;
  6929  001B86  D813               	call	PL52	;call to abstracted procedure
  6930  001B88  5064               	movf	compareStrings@a^0,w,c
  6931  001B8A  6EE1               	movwf	fsr1l,c
  6932  001B8C  6AE2               	clrf	fsr1h,c
  6933  001B8E  50DE               	movf	postinc2,w,c
  6934  001B90  18E6               	xorwf	postinc1,w,c
  6935  001B92  E105               	bnz	u3800
  6936                           
  6937                           ;Usuaris.c: 131:         a++;
  6938  001B94  2A64               	incf	compareStrings@a^0,f,c
  6939                           
  6940                           ;Usuaris.c: 132:         b++;
  6941  001B96  4A65               	infsnz	compareStrings@b^0,f,c
  6942  001B98  2A66               	incf	(compareStrings@b+1)^0,f,c
  6943  001B9A                     l4364:
  6944                           
  6945                           ;Usuaris.c: 129:     while (*a){
  6946  001B9A  D80E               	call	PL80	;call to abstracted procedure
  6947  001B9C  E1F4               	bnz	l4358
  6948  001B9E                     u3800:
  6949                           
  6950                           ;Usuaris.c: 134:     return *(const unsigned char*)a - *(const unsigned char*)b;
  6951  001B9E  D807               	call	PL52	;call to abstracted procedure
  6952  001BA0  50DF               	movf	indf2,w,c
  6953  001BA2  6E67               	movwf	??_compareStrings^0,c
  6954  001BA4  D809               	call	PL80	;call to abstracted procedure
  6955  001BA6  6E68               	movwf	(??_compareStrings+1)^0,c
  6956  001BA8  5067               	movf	??_compareStrings^0,w,c
  6957  001BAA  5C68               	subwf	(??_compareStrings+1)^0,w,c
  6958  001BAC  0012               	return		;funcret
  6959  001BAE                     __end_of_compareStrings:
  6960                           	callstack 0
  6961  001BAE                     PL52:
  6962                           	callstack 26
  6963  001BAE  C065  FFD9         	movff	compareStrings@b,fsr2l
  6964  001BB2  C066  FFDA         	movff	compareStrings@b+1,fsr2h
  6965  001BB6  0012               	return	
  6966  001BB8                     __end_ofPL52:
  6967                           	callstack 0
  6968  001BB8                     PL80:
  6969                           	callstack 26
  6970  001BB8  5064               	movf	compareStrings@a^0,w,c
  6971  001BBA  6ED9               	movwf	fsr2l,c
  6972  001BBC  6ADA               	clrf	fsr2h,c
  6973  001BBE  50DF               	movf	indf2,w,c
  6974  001BC0  0012               	return	
  6975  001BC2                     __end_ofPL80:
  6976                           	callstack 0
  6977                           
  6978 ;; *************** function _Uinit *****************
  6979 ;; Defined at:
  6980 ;;		line 85 in file "Usuaris.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;		None
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  k               1   12[COMRAM] unsigned char 
  6985 ;;  k               1   11[COMRAM] unsigned char 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1    wreg      void 
  6988 ;; Registers used:
  6989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1
  6995 ;;      Params:         0       0       0
  6996 ;;      Locals:         2       0       0
  6997 ;;      Temps:          2       0       0
  6998 ;;      Totals:         4       0       0
  6999 ;;Total ram usage:        4 bytes
  7000 ;; Hardware stack levels used: 1
  7001 ;; Hardware stack levels required when called: 3
  7002 ;; This function calls:
  7003 ;;		___lbdiv
  7004 ;;		_llegirCharEEPROM
  7005 ;; This function is called by:
  7006 ;;		_main
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text58
  7011  001456                     __ptext58:
  7012                           	callstack 0
  7013  001456                     _Uinit:
  7014                           	callstack 27
  7015                           
  7016                           ;Usuaris.c: 89:     i = 0;
  7017                           
  7018                           ;incstack = 0
  7019  001456  6A2A               	clrf	_i^0,c
  7020                           
  7021                           ;Usuaris.c: 94:     numUsuaris = llegirCharEEPROM(0);
  7022  001458  0E00               	movlw	0
  7023  00145A  EC9E  F00F         	call	_llegirCharEEPROM
  7024  00145E  6E2D               	movwf	_numUsuaris^0,c
  7025                           
  7026                           ;Usuaris.c: 96:     if(numUsuaris > 8) numUsuaris = 0;
  7027  001460  0E08               	movlw	8
  7028  001462  642D               	cpfsgt	_numUsuaris^0,c
  7029  001464  D001               	goto	l4896
  7030  001466  6A2D               	clrf	_numUsuaris^0,c
  7031  001468                     l4896:
  7032                           
  7033                           ;Usuaris.c: 100:     i++;
  7034  001468  2A2A               	incf	_i^0,f,c
  7035                           
  7036                           ;Usuaris.c: 101:     indexNextUser = llegirCharEEPROM(1);
  7037  00146A  0E01               	movlw	1
  7038  00146C  EC9E  F00F         	call	_llegirCharEEPROM
  7039  001470  6E2C               	movwf	_indexNextUser^0,c
  7040                           
  7041                           ;Usuaris.c: 102:     if(indexNextUser == 255) indexNextUser = 2;
  7042  001472  282C               	incf	_indexNextUser^0,w,c
  7043  001474  E102               	bnz	l4904
  7044  001476  0E02               	movlw	2
  7045  001478  6E2C               	movwf	_indexNextUser^0,c
  7046  00147A                     l4904:
  7047                           
  7048                           ;Usuaris.c: 103:     indexNextUserStruct = indexNextUser/18;
  7049  00147A  0E12               	movlw	18
  7050  00147C  6E64               	movwf	___lbdiv@divisor^0,c
  7051  00147E  502C               	movf	_indexNextUser^0,w,c
  7052  001480  EC36  F00E         	call	___lbdiv
  7053  001484  6E2B               	movwf	_indexNextUserStruct^0,c
  7054                           
  7055                           ;Usuaris.c: 104:     i++;
  7056  001486  2A2A               	incf	_i^0,f,c
  7057                           
  7058                           ;Usuaris.c: 105:     for(j = 0;j<numUsuaris;j++){
  7059  001488  6A29               	clrf	_j^0,c
  7060  00148A  D01F               	goto	l4936
  7061  00148C                     l736:
  7062                           
  7063                           ;Usuaris.c: 106:         for(unsigned char k = 0; k<9; k++){
  7064  00148C  6A6A               	clrf	Uinit@k^0,c
  7065  00148E                     l4914:
  7066                           
  7067                           ;Usuaris.c: 107:             usuaris[j].username[k] = llegirCharEEPROM(i);
  7068  00148E  D842               	call	PL44	;call to abstracted procedure
  7069  001490  D848               	call	PL70	;call to abstracted procedure
  7070  001492  506A               	movf	Uinit@k^0,w,c
  7071  001494  D838               	call	PL42	;call to abstracted procedure
  7072  001496  EC9E  F00F         	call	_llegirCharEEPROM
  7073  00149A  6EDF               	movwf	indf2,c
  7074                           
  7075                           ;Usuaris.c: 108:             i++;
  7076  00149C  2A2A               	incf	_i^0,f,c
  7077                           
  7078                           ;Usuaris.c: 109:         }
  7079  00149E  2A6A               	incf	Uinit@k^0,f,c
  7080  0014A0  0E08               	movlw	8
  7081  0014A2  646A               	cpfsgt	Uinit@k^0,c
  7082  0014A4  D7F4               	goto	l4914
  7083                           
  7084                           ;Usuaris.c: 110:         for(unsigned char k = 0; k<9;k++){
  7085  0014A6  6A6B               	clrf	Uinit@k_1175^0,c
  7086  0014A8                     l4926:
  7087                           
  7088                           ;Usuaris.c: 111:             usuaris[j].password[k] = llegirCharEEPROM(i);
  7089  0014A8  D835               	call	PL44	;call to abstracted procedure
  7090  0014AA  0E09               	movlw	9
  7091  0014AC  2668               	addwf	??_Uinit^0,f,c
  7092  0014AE  0E00               	movlw	0
  7093  0014B0  2269               	addwfc	(??_Uinit+1)^0,f,c
  7094  0014B2  D837               	call	PL70	;call to abstracted procedure
  7095  0014B4  506B               	movf	Uinit@k_1175^0,w,c
  7096  0014B6  D827               	call	PL42	;call to abstracted procedure
  7097  0014B8  EC9E  F00F         	call	_llegirCharEEPROM
  7098  0014BC  6EDF               	movwf	indf2,c
  7099                           
  7100                           ;Usuaris.c: 112:             i++;
  7101  0014BE  2A2A               	incf	_i^0,f,c
  7102                           
  7103                           ;Usuaris.c: 113:         }
  7104  0014C0  2A6B               	incf	Uinit@k_1175^0,f,c
  7105  0014C2  0E08               	movlw	8
  7106  0014C4  646B               	cpfsgt	Uinit@k_1175^0,c
  7107  0014C6  D7F0               	goto	l4926
  7108                           
  7109                           ;Usuaris.c: 114:     }
  7110  0014C8  2A29               	incf	_j^0,f,c
  7111  0014CA                     l4936:
  7112  0014CA  502D               	movf	_numUsuaris^0,w,c
  7113  0014CC  5C29               	subwf	_j^0,w,c
  7114  0014CE  E3DE               	bnc	l736
  7115                           
  7116                           ;Usuaris.c: 120:     puntuacions[0].indexStruct = -1;
  7117  0014D0  0100               	movlb	0	; () banked
  7118  0014D2  6998               	setf	_puntuacions& (0+255),b
  7119                           
  7120                           ;Usuaris.c: 121:     for(i = 0; i<5; i++){
  7121  0014D4  6A2A               	clrf	_i^0,c
  7122  0014D6                     l4938:
  7123  0014D6  0E04               	movlw	4
  7124  0014D8  642A               	cpfsgt	_i^0,c
  7125  0014DA  D001               	goto	l4942
  7126  0014DC  0C04               	retlw	4
  7127  0014DE                     l4942:
  7128                           
  7129                           ;Usuaris.c: 122:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  7130  0014DE  ECB2  F007         	call	PL22	;call to abstracted procedure
  7131  0014E2  502A               	movf	_i^0,w,c
  7132  0014E4  0D02               	mullw	2
  7133  0014E6  50F3               	movf	243,w,c
  7134  0014E8  0FC8               	addlw	200
  7135  0014EA  EC9E  F00F         	call	_llegirCharEEPROM
  7136  0014EE  6EDF               	movwf	indf2,c
  7137                           
  7138                           ;Usuaris.c: 123:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  7139  0014F0  EC9D  F007         	call	PL16	;call to abstracted procedure
  7140  0014F4  502A               	movf	_i^0,w,c
  7141  0014F6  0D02               	mullw	2
  7142  0014F8  50F3               	movf	243,w,c
  7143  0014FA  0FC9               	addlw	201
  7144  0014FC  EC9E  F00F         	call	_llegirCharEEPROM
  7145  001500  6EDF               	movwf	indf2,c
  7146                           
  7147                           ;Usuaris.c: 124:     }
  7148  001502  2A2A               	incf	_i^0,f,c
  7149  001504  D7E8               	goto	l4938
  7150  001506                     __end_of_Uinit:
  7151                           	callstack 0
  7152  001506                     PL42:
  7153                           	callstack 27
  7154  001506  2468               	addwf	??_Uinit^0,w,c
  7155  001508  6ED9               	movwf	fsr2l,c
  7156  00150A  0E00               	movlw	0
  7157  00150C  2069               	addwfc	(??_Uinit+1)^0,w,c
  7158  00150E  6EDA               	movwf	fsr2h,c
  7159  001510  502A               	movf	_i^0,w,c
  7160  001512  0012               	return	
  7161  001514                     __end_ofPL42:
  7162                           	callstack 0
  7163  001514                     PL44:
  7164                           	callstack 27
  7165  001514  5029               	movf	_j^0,w,c
  7166  001516  0D12               	mullw	18
  7167  001518  0E00               	movlw	low _usuaris
  7168  00151A  6E68               	movwf	??_Uinit^0,c
  7169  00151C  0E01               	movlw	high _usuaris
  7170  00151E  6E69               	movwf	(??_Uinit+1)^0,c
  7171  001520  0012               	return	
  7172  001522                     __end_ofPL44:
  7173                           	callstack 0
  7174  001522                     PL70:
  7175                           	callstack 27
  7176  001522  50F3               	movf	243,w,c
  7177  001524  2668               	addwf	??_Uinit^0,f,c
  7178  001526  50F4               	movf	244,w,c
  7179  001528  2269               	addwfc	(??_Uinit+1)^0,f,c
  7180  00152A  0012               	return	
  7181  00152C                     __end_ofPL70:
  7182                           	callstack 0
  7183                           
  7184 ;; *************** function _llegirCharEEPROM *****************
  7185 ;; Defined at:
  7186 ;;		line 78 in file "Usuaris.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;  pos             1    wreg     unsigned char 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  pos             1    5[COMRAM] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  1    wreg      unsigned char 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1
  7200 ;;      Params:         0       0       0
  7201 ;;      Locals:         1       0       0
  7202 ;;      Temps:          0       0       0
  7203 ;;      Totals:         1       0       0
  7204 ;;Total ram usage:        1 bytes
  7205 ;; Hardware stack levels used: 1
  7206 ;; Hardware stack levels required when called: 2
  7207 ;; This function calls:
  7208 ;;		Nothing
  7209 ;; This function is called by:
  7210 ;;		_Uinit
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text59
  7215  001F3C                     __ptext59:
  7216                           	callstack 0
  7217  001F3C                     _llegirCharEEPROM:
  7218                           	callstack 27
  7219                           
  7220                           ;incstack = 0
  7221                           ;llegirCharEEPROM@pos stored from wreg
  7222  001F3C  6E64               	movwf	llegirCharEEPROM@pos^0,c
  7223                           
  7224                           ;Usuaris.c: 79:     EEADR = pos;
  7225  001F3E  C064  FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  7226                           
  7227                           ;Usuaris.c: 80:     EECON1bits.EEPGD = 0;
  7228  001F42  9EA6               	bcf	166,7,c	;volsfr
  7229                           
  7230                           ;Usuaris.c: 81:     EECON1bits.CFGS = 0;
  7231  001F44  9CA6               	bcf	166,6,c	;volsfr
  7232                           
  7233                           ;Usuaris.c: 82:     EECON1bits.RD = 1;
  7234  001F46  80A6               	bsf	166,0,c	;volsfr
  7235                           
  7236                           ;Usuaris.c: 83:     return EEDATA;
  7237  001F48  50A8               	movf	168,w,c	;volatile
  7238  001F4A  0012               	return		;funcret
  7239  001F4C                     __end_of_llegirCharEEPROM:
  7240                           	callstack 0
  7241                           
  7242 ;; *************** function ___lbdiv *****************
  7243 ;; Defined at:
  7244 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lbdiv.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;  dividend        1    wreg     unsigned char 
  7247 ;;  divisor         1    5[COMRAM] unsigned char 
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;  dividend        1    6[COMRAM] unsigned char 
  7250 ;;  quotient        1    8[COMRAM] unsigned char 
  7251 ;;  counter         1    7[COMRAM] unsigned char 
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  1    wreg      unsigned char 
  7254 ;; Registers used:
  7255 ;;		wreg, status,2, status,0
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMRAM   BANK0   BANK1
  7261 ;;      Params:         1       0       0
  7262 ;;      Locals:         3       0       0
  7263 ;;      Temps:          0       0       0
  7264 ;;      Totals:         4       0       0
  7265 ;;Total ram usage:        4 bytes
  7266 ;; Hardware stack levels used: 1
  7267 ;; Hardware stack levels required when called: 2
  7268 ;; This function calls:
  7269 ;;		Nothing
  7270 ;; This function is called by:
  7271 ;;		_Uinit
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           
  7275                           	psect	text60
  7276  001C6C                     __ptext60:
  7277                           	callstack 0
  7278  001C6C                     ___lbdiv:
  7279                           	callstack 27
  7280                           
  7281                           ;incstack = 0
  7282                           ;___lbdiv@dividend stored from wreg
  7283  001C6C  6E65               	movwf	___lbdiv@dividend^0,c
  7284  001C6E  6A67               	clrf	___lbdiv@quotient^0,c
  7285  001C70  5064               	movf	___lbdiv@divisor^0,w,c
  7286  001C72  E014               	bz	l4608
  7287  001C74  0E01               	movlw	1
  7288  001C76  6E66               	movwf	___lbdiv@counter^0,c
  7289  001C78  D003               	goto	l4596
  7290  001C7A                     l4592:
  7291  001C7A  90D8               	bcf	status,0,c
  7292  001C7C  3664               	rlcf	___lbdiv@divisor^0,f,c
  7293  001C7E  2A66               	incf	___lbdiv@counter^0,f,c
  7294  001C80                     l4596:
  7295  001C80  AE64               	btfss	___lbdiv@divisor^0,7,c
  7296  001C82  D7FB               	goto	l4592
  7297  001C84                     u3950:
  7298  001C84  90D8               	bcf	status,0,c
  7299  001C86  3667               	rlcf	___lbdiv@quotient^0,f,c
  7300  001C88  5064               	movf	___lbdiv@divisor^0,w,c
  7301  001C8A  5C65               	subwf	___lbdiv@dividend^0,w,c
  7302  001C8C  E303               	bnc	l4604
  7303  001C8E  5064               	movf	___lbdiv@divisor^0,w,c
  7304  001C90  5E65               	subwf	___lbdiv@dividend^0,f,c
  7305  001C92  8067               	bsf	___lbdiv@quotient^0,0,c
  7306  001C94                     l4604:
  7307  001C94  90D8               	bcf	status,0,c
  7308  001C96  3264               	rrcf	___lbdiv@divisor^0,f,c
  7309  001C98  2E66               	decfsz	___lbdiv@counter^0,f,c
  7310  001C9A  D7F4               	goto	u3950
  7311  001C9C                     l4608:
  7312  001C9C  5067               	movf	___lbdiv@quotient^0,w,c
  7313  001C9E  0012               	return		;funcret
  7314  001CA0                     __end_of___lbdiv:
  7315                           	callstack 0
  7316                           
  7317 ;; *************** function _TiInitTimer *****************
  7318 ;; Defined at:
  7319 ;;		line 18 in file "TiTTimer.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;		None
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1
  7333 ;;      Params:         0       0       0
  7334 ;;      Locals:         0       0       0
  7335 ;;      Temps:          0       0       0
  7336 ;;      Totals:         0       0       0
  7337 ;;Total ram usage:        0 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; Hardware stack levels required when called: 2
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_main
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text61
  7348  001D00                     __ptext61:
  7349                           	callstack 0
  7350  001D00                     _TiInitTimer:
  7351                           	callstack 28
  7352                           
  7353                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7354                           
  7355                           ;incstack = 0
  7356  001D00  9ED0               	bcf	208,7,c	;volatile
  7357                           
  7358                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7359  001D02  8EF2               	bsf	242,7,c	;volatile
  7360                           
  7361                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7362  001D04  8CF2               	bsf	242,6,c	;volatile
  7363                           
  7364                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7365  001D06  8AF2               	bsf	242,5,c	;volatile
  7366                           
  7367                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7368  001D08  94F2               	bcf	242,2,c	;volatile
  7369                           
  7370                           ;TiTTimer.c: 25:     T0CON = 136;
  7371  001D0A  0E88               	movlw	136
  7372  001D0C  6ED5               	movwf	213,c	;volatile
  7373                           
  7374                           ;TiTTimer.c: 27:     TMR0H = 223;
  7375                           
  7376                           ;TiTTimer.c: 28:     TMR0L = 148;
  7377  001D0E  ECBD  F00D         	call	PL66	;call to abstracted procedure
  7378                           
  7379                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7380  001D12  8ED5               	bsf	213,7,c	;volatile
  7381                           
  7382                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  7383  001D14  6A34               	clrf	_counter^0,c
  7384  001D16                     l4702:
  7385  001D16  0E07               	movlw	7
  7386  001D18  6434               	cpfsgt	_counter^0,c
  7387  001D1A  D001               	goto	l4706
  7388  001D1C  0C07               	retlw	7
  7389  001D1E                     l4706:
  7390                           
  7391                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7392  001D1E  EC79  F00E         	call	PL18	;call to abstracted procedure
  7393  001D22  6ADF               	clrf	indf2,c
  7394                           
  7395                           ;TiTTimer.c: 33:     }
  7396  001D24  2A34               	incf	_counter^0,f,c
  7397  001D26  D7F7               	goto	l4702
  7398  001D28                     __end_of_TiInitTimer:
  7399                           	callstack 0
  7400                           
  7401 ;; *************** function _TeTeclat *****************
  7402 ;; Defined at:
  7403 ;;		line 21 in file "TeTeclat.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;		None
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      void 
  7410 ;; Registers used:
  7411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK0   BANK1
  7417 ;;      Params:         0       0       0
  7418 ;;      Locals:         0       0       0
  7419 ;;      Temps:          3       0       0
  7420 ;;      Totals:         3       0       0
  7421 ;;Total ram usage:        3 bytes
  7422 ;; Hardware stack levels used: 1
  7423 ;; Hardware stack levels required when called: 3
  7424 ;; This function calls:
  7425 ;;		_MsetNovaTecla
  7426 ;;		_SsetNovaTecla
  7427 ;;		_TiGetTics
  7428 ;;		_TiResetTics
  7429 ;; This function is called by:
  7430 ;;		_main
  7431 ;; This function uses a non-reentrant model
  7432 ;;
  7433                           
  7434                           	psect	text62
  7435  00131C                     __ptext62:
  7436                           	callstack 0
  7437  00131C                     _TeTeclat:
  7438                           	callstack 27
  7439                           
  7440                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7441                           
  7442                           ;incstack = 0
  7443  00131C  A083               	btfss	131,0,c	;volatile
  7444  00131E  D003               	goto	u6620
  7445  001320  6A6B               	clrf	??_TeTeclat^0,c
  7446  001322  2A6B               	incf	??_TeTeclat^0,f,c
  7447  001324  D001               	goto	u6628
  7448  001326                     u6620:
  7449  001326  6A6B               	clrf	??_TeTeclat^0,c
  7450  001328                     u6628:
  7451  001328  0E01               	movlw	1
  7452  00132A  A283               	btfss	131,1,c	;volatile
  7453  00132C  0E00               	movlw	0
  7454  00132E  0D02               	mullw	2
  7455  001330  CFF3 F06C          	movff	prodl,??_TeTeclat+1
  7456  001334  0E01               	movlw	1
  7457  001336  A483               	btfss	131,2,c	;volatile
  7458  001338  0E00               	movlw	0
  7459  00133A  0D03               	mullw	3
  7460  00133C  CFF3 F06D          	movff	prodl,??_TeTeclat+2
  7461  001340  0E01               	movlw	1
  7462  001342  A683               	btfss	131,3,c	;volatile
  7463  001344  0E00               	movlw	0
  7464  001346  0D04               	mullw	4
  7465  001348  50F3               	movf	243,w,c
  7466  00134A  246D               	addwf	(??_TeTeclat+2)^0,w,c
  7467  00134C  246C               	addwf	(??_TeTeclat+1)^0,w,c
  7468  00134E  246B               	addwf	??_TeTeclat^0,w,c
  7469  001350  6E35               	movwf	TeTeclat@files^0,c
  7470                           
  7471                           ;TeTeclat.c: 26:  switch(state) {
  7472  001352  D05A               	goto	l6234
  7473  001354                     l6160:
  7474                           
  7475                           ;TeTeclat.c: 28:    if (files==0) {
  7476  001354  5035               	movf	TeTeclat@files^0,w,c
  7477  001356  E106               	bnz	l6166
  7478                           
  7479                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  7480  001358  888C               	bsf	140,4,c	;volatile
  7481                           
  7482                           ;TeTeclat.c: 30:     LATDbits.LD5=0;
  7483  00135A  9A8C               	bcf	140,5,c	;volatile
  7484                           
  7485                           ;TeTeclat.c: 31:     LATDbits.LD6=0;
  7486  00135C  9C8C               	bcf	140,6,c	;volatile
  7487                           
  7488                           ;TeTeclat.c: 32:     cols=0;
  7489  00135E  6A36               	clrf	TeTeclat@cols^0,c
  7490  001360                     l6164:
  7491                           
  7492                           ;TeTeclat.c: 33:     state++;
  7493  001360  2A37               	incf	TeTeclat@state^0,f,c
  7494                           
  7495                           ;TeTeclat.c: 34:    }
  7496  001362  0012               	return	
  7497  001364                     l6166:
  7498  001364  5035               	movf	TeTeclat@files^0,w,c
  7499  001366  B4D8               	btfsc	status,2,c
  7500  001368  0012               	return	
  7501                           
  7502                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  7503  00136A  5038               	movf	_tiTeclat^0,w,c
  7504  00136C  EC3D  F00F         	call	_TiResetTics
  7505  001370                     l6170:
  7506                           
  7507                           ;TeTeclat.c: 37:     state = 3;
  7508  001370  0E03               	movlw	3
  7509  001372  6E37               	movwf	TeTeclat@state^0,c
  7510  001374  0C03               	retlw	3
  7511  001376                     l6172:
  7512                           
  7513                           ;TeTeclat.c: 41:    if (files==0) {
  7514  001376  5035               	movf	TeTeclat@files^0,w,c
  7515  001378  E106               	bnz	l6180
  7516                           
  7517                           ;TeTeclat.c: 42:     LATDbits.LD4=0;
  7518  00137A  988C               	bcf	140,4,c	;volatile
  7519                           
  7520                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  7521  00137C  8A8C               	bsf	140,5,c	;volatile
  7522                           
  7523                           ;TeTeclat.c: 44:     LATDbits.LD6=0;
  7524  00137E  9C8C               	bcf	140,6,c	;volatile
  7525                           
  7526                           ;TeTeclat.c: 45:     cols=1;
  7527  001380  0E01               	movlw	1
  7528  001382  6E36               	movwf	TeTeclat@cols^0,c
  7529  001384  D7ED               	goto	l6164
  7530  001386                     l6180:
  7531  001386  5035               	movf	TeTeclat@files^0,w,c
  7532  001388  B4D8               	btfsc	status,2,c
  7533  00138A  0012               	return	
  7534                           
  7535                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  7536  00138C  5038               	movf	_tiTeclat^0,w,c
  7537  00138E  EC3D  F00F         	call	_TiResetTics
  7538  001392  D7EE               	goto	l6170
  7539  001394                     l6186:
  7540                           
  7541                           ;TeTeclat.c: 54:    if (files==0) {
  7542  001394  5035               	movf	TeTeclat@files^0,w,c
  7543  001396  E107               	bnz	l6194
  7544                           
  7545                           ;TeTeclat.c: 55:     LATDbits.LD4=0;
  7546  001398  988C               	bcf	140,4,c	;volatile
  7547                           
  7548                           ;TeTeclat.c: 56:     LATDbits.LD5=0;
  7549  00139A  9A8C               	bcf	140,5,c	;volatile
  7550                           
  7551                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  7552  00139C  8C8C               	bsf	140,6,c	;volatile
  7553                           
  7554                           ;TeTeclat.c: 58:     cols=2;
  7555  00139E  0E02               	movlw	2
  7556  0013A0  6E36               	movwf	TeTeclat@cols^0,c
  7557  0013A2                     l6192:
  7558                           
  7559                           ;TeTeclat.c: 59:     state = 0;
  7560  0013A2  6A37               	clrf	TeTeclat@state^0,c
  7561                           
  7562                           ;TeTeclat.c: 60:    }
  7563  0013A4  0012               	return	
  7564  0013A6                     l6194:
  7565  0013A6  5035               	movf	TeTeclat@files^0,w,c
  7566  0013A8  B4D8               	btfsc	status,2,c
  7567  0013AA  0012               	return	
  7568                           
  7569                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  7570  0013AC  5038               	movf	_tiTeclat^0,w,c
  7571  0013AE  EC3D  F00F         	call	_TiResetTics
  7572  0013B2  D7D6               	goto	l6164
  7573  0013B4                     l6200:
  7574                           
  7575                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  7576  0013B4  5038               	movf	_tiTeclat^0,w,c
  7577  0013B6  ECA7  F00E         	call	_TiGetTics
  7578  0013BA  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  7579  0013BC  0012               	return	
  7580  0013BE  D7D0               	goto	l6164
  7581  0013C0                     l6204:
  7582                           
  7583                           ;TeTeclat.c: 72:    if (files==0) {
  7584  0013C0  5035               	movf	TeTeclat@files^0,w,c
  7585  0013C2  E103               	bnz	l6208
  7586                           
  7587                           ;TeTeclat.c: 73:     state = 1;
  7588  0013C4  0E01               	movlw	1
  7589  0013C6  6E37               	movwf	TeTeclat@state^0,c
  7590                           
  7591                           ;TeTeclat.c: 74:    }
  7592  0013C8  0C01               	retlw	1
  7593  0013CA                     l6208:
  7594  0013CA  5035               	movf	TeTeclat@files^0,w,c
  7595  0013CC  B4D8               	btfsc	status,2,c
  7596  0013CE  0012               	return	
  7597                           
  7598                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7599  0013D0  D837               	call	PL14	;call to abstracted procedure
  7600  0013D2  D831               	call	PL6	;call to abstracted procedure
  7601  0013D4  EC2F  F000         	call	_MsetNovaTecla
  7602                           
  7603                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7604  0013D8  D833               	call	PL14	;call to abstracted procedure
  7605  0013DA  D82D               	call	PL6	;call to abstracted procedure
  7606  0013DC  EC2B  F000         	call	_SsetNovaTecla
  7607  0013E0  D7BF               	goto	l6164
  7608  0013E2                     l6214:
  7609                           
  7610                           ;TeTeclat.c: 82:    if (files==0) {
  7611  0013E2  5035               	movf	TeTeclat@files^0,w,c
  7612  0013E4  A4D8               	btfss	status,2,c
  7613  0013E6  0012               	return	
  7614                           
  7615                           ;TeTeclat.c: 83:     TiResetTics(tiTeclat);
  7616  0013E8  5038               	movf	_tiTeclat^0,w,c
  7617  0013EA  EC3D  F00F         	call	_TiResetTics
  7618  0013EE  D7B8               	goto	l6164
  7619  0013F0                     l6220:
  7620                           
  7621                           ;TeTeclat.c: 88:    if (TiGetTics(tiTeclat)>=0) {
  7622  0013F0  5038               	movf	_tiTeclat^0,w,c
  7623  0013F2  ECA7  F00E         	call	_TiGetTics
  7624  0013F6  D7E1               	goto	L3
  7625  0013F8                     l6224:
  7626                           
  7627                           ;TeTeclat.c: 93:    if (files!=0) {
  7628  0013F8  5035               	movf	TeTeclat@files^0,w,c
  7629  0013FA  E003               	bz	l6228
  7630                           
  7631                           ;TeTeclat.c: 94:     state = 5;
  7632  0013FC  0E05               	movlw	5
  7633  0013FE  6E37               	movwf	TeTeclat@state^0,c
  7634                           
  7635                           ;TeTeclat.c: 95:    }
  7636  001400  0C05               	retlw	5
  7637  001402                     l6228:
  7638  001402  5035               	movf	TeTeclat@files^0,w,c
  7639  001404  E0CE               	bz	l6192
  7640  001406  0012               	return	
  7641  001408                     l6234:
  7642  001408  5037               	movf	TeTeclat@state^0,w,c
  7643  00140A  6E6B               	movwf	??_TeTeclat^0,c
  7644  00140C  6A6C               	clrf	(??_TeTeclat+1)^0,c
  7645                           
  7646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7647                           ; Switch size 1, requested type "space"
  7648                           ; Number of cases is 1, Range of values is 0 to 0
  7649                           ; switch strategies available:
  7650                           ; Name         Instructions Cycles
  7651                           ; simple_byte            4     3 (average)
  7652                           ;	Chosen strategy is simple_byte
  7653  00140E  506C               	movf	(??_TeTeclat+1)^0,w,c
  7654  001410  A4D8               	btfss	status,2,c
  7655  001412  0012               	return	
  7656                           
  7657                           ; Switch size 1, requested type "space"
  7658                           ; Number of cases is 8, Range of values is 0 to 7
  7659                           ; switch strategies available:
  7660                           ; Name         Instructions Cycles
  7661                           ; simple_byte           25    13 (average)
  7662                           ;	Chosen strategy is simple_byte
  7663  001414  506B               	movf	??_TeTeclat^0,w,c
  7664  001416  E09E               	bz	l6160
  7665  001418  0A01               	xorlw	1	; case 1
  7666  00141A  E0AD               	bz	l6172
  7667  00141C  0A03               	xorlw	3	; case 2
  7668  00141E  E0BA               	bz	l6186
  7669  001420  0A01               	xorlw	1	; case 3
  7670  001422  E0C8               	bz	l6200
  7671  001424  0A07               	xorlw	7	; case 4
  7672  001426  E0CC               	bz	l6204
  7673  001428  0A01               	xorlw	1	; case 5
  7674  00142A  E0DB               	bz	l6214
  7675  00142C  0A03               	xorlw	3	; case 6
  7676  00142E  E0E0               	bz	l6220
  7677  001430  0A01               	xorlw	1	; case 7
  7678  001432  E0E2               	bz	l6224
  7679  001434  0012               	return		;funcret
  7680  001436                     __end_of_TeTeclat:
  7681                           	callstack 0
  7682  001436                     PL6:
  7683                           	callstack 27
  7684  001436  0E02               	movlw	high __smallconst
  7685  001438  6EF7               	movwf	tblptrh,c
  7686  00143A                     	endif
  7687  00143A                     	if	0	;tblptru may be non-zero
  7688  00143A                     	endif
  7689  00143A                     	if	0	;tblptru may be non-zero
  7690  00143A                     	endif
  7691  00143A  0008               	tblrd		*
  7692  00143C  50F5               	movf	tablat,w,c
  7693  00143E  0012               	return	
  7694  001440                     __end_ofPL6:
  7695                           	callstack 0
  7696  001440                     PL14:
  7697                           	callstack 27
  7698  001440  5035               	movf	TeTeclat@files^0,w,c
  7699  001442  0D03               	mullw	3
  7700  001444  50F3               	movf	243,w,c
  7701  001446  0F92               	addlw	low _teclaPremuda
  7702  001448  2436               	addwf	TeTeclat@cols^0,w,c
  7703  00144A  6E6B               	movwf	??_TeTeclat^0,c
  7704  00144C  0EFD               	movlw	253
  7705  00144E  266B               	addwf	??_TeTeclat^0,f,c
  7706  001450  C06B  FFF6         	movff	??_TeTeclat,tblptrl
  7707  001454                     	if	1	;There is more than 1 active tblptr byte
  7708  001454  0CFD               	retlw	253
  7709  001456                     __end_ofPL14:
  7710                           	callstack 0
  7711                           
  7712 ;; *************** function _SsetNovaTecla *****************
  7713 ;; Defined at:
  7714 ;;		line 124 in file "Ssms.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  tecla           1    wreg     unsigned char 
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;  tecla           1    5[COMRAM] unsigned char 
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  1    wreg      void 
  7721 ;; Registers used:
  7722 ;;		wreg
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMRAM   BANK0   BANK1
  7728 ;;      Params:         0       0       0
  7729 ;;      Locals:         1       0       0
  7730 ;;      Temps:          0       0       0
  7731 ;;      Totals:         1       0       0
  7732 ;;Total ram usage:        1 bytes
  7733 ;; Hardware stack levels used: 1
  7734 ;; Hardware stack levels required when called: 2
  7735 ;; This function calls:
  7736 ;;		Nothing
  7737 ;; This function is called by:
  7738 ;;		_TeTeclat
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           	psect	text63
  7743  000056                     __ptext63:
  7744                           	callstack 0
  7745  000056                     _SsetNovaTecla:
  7746                           	callstack 27
  7747                           
  7748                           ;incstack = 0
  7749                           ;SsetNovaTecla@tecla stored from wreg
  7750  000056  6E64               	movwf	SsetNovaTecla@tecla^0,c
  7751                           
  7752                           ;Ssms.c: 125:     novaTecla = tecla;
  7753  000058  C064  F054         	movff	SsetNovaTecla@tecla,_novaTecla
  7754  00005C  0012               	return		;funcret
  7755  00005E                     __end_of_SsetNovaTecla:
  7756                           	callstack 0
  7757                           
  7758 ;; *************** function _MsetNovaTecla *****************
  7759 ;; Defined at:
  7760 ;;		line 31 in file "Menu.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  tecla           1    wreg     unsigned char 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  tecla           1    5[COMRAM] unsigned char 
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  1    wreg      void 
  7767 ;; Registers used:
  7768 ;;		wreg
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1
  7774 ;;      Params:         0       0       0
  7775 ;;      Locals:         1       0       0
  7776 ;;      Temps:          0       0       0
  7777 ;;      Totals:         1       0       0
  7778 ;;Total ram usage:        1 bytes
  7779 ;; Hardware stack levels used: 1
  7780 ;; Hardware stack levels required when called: 2
  7781 ;; This function calls:
  7782 ;;		Nothing
  7783 ;; This function is called by:
  7784 ;;		_TeTeclat
  7785 ;; This function uses a non-reentrant model
  7786 ;;
  7787                           
  7788                           	psect	text64
  7789  00005E                     __ptext64:
  7790                           	callstack 0
  7791  00005E                     _MsetNovaTecla:
  7792                           	callstack 27
  7793                           
  7794                           ;incstack = 0
  7795                           ;MsetNovaTecla@tecla stored from wreg
  7796  00005E  6E64               	movwf	MsetNovaTecla@tecla^0,c
  7797                           
  7798                           ;Menu.c: 32:     NovaTecla = tecla;
  7799  000060  C064  F052         	movff	MsetNovaTecla@tecla,_NovaTecla
  7800  000064  0012               	return		;funcret
  7801  000066                     __end_of_MsetNovaTecla:
  7802                           	callstack 0
  7803                           
  7804 ;; *************** function _TeInit *****************
  7805 ;; Defined at:
  7806 ;;		line 17 in file "TeTeclat.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;		None
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;		None
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1
  7820 ;;      Params:         0       0       0
  7821 ;;      Locals:         0       0       0
  7822 ;;      Temps:          0       0       0
  7823 ;;      Totals:         0       0       0
  7824 ;;Total ram usage:        0 bytes
  7825 ;; Hardware stack levels used: 1
  7826 ;; Hardware stack levels required when called: 3
  7827 ;; This function calls:
  7828 ;;		_TiGetTimer
  7829 ;; This function is called by:
  7830 ;;		_main
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text65
  7835  000066                     __ptext65:
  7836                           	callstack 0
  7837  000066                     _TeInit:
  7838                           	callstack 27
  7839                           
  7840                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  7841                           
  7842                           ;incstack = 0
  7843  000066  EC6A  F00E         	call	_TiGetTimer	;wreg free
  7844  00006A  6E38               	movwf	_tiTeclat^0,c
  7845  00006C  0012               	return		;funcret
  7846  00006E                     __end_of_TeInit:
  7847                           	callstack 0
  7848                           
  7849 ;; *************** function _Sinit *****************
  7850 ;; Defined at:
  7851 ;;		line 18 in file "Ssms.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;		None
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;		None
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  1    wreg      void 
  7858 ;; Registers used:
  7859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMRAM   BANK0   BANK1
  7865 ;;      Params:         0       0       0
  7866 ;;      Locals:         0       0       0
  7867 ;;      Temps:          0       0       0
  7868 ;;      Totals:         0       0       0
  7869 ;;Total ram usage:        0 bytes
  7870 ;; Hardware stack levels used: 1
  7871 ;; Hardware stack levels required when called: 3
  7872 ;; This function calls:
  7873 ;;		_TiGetTimer
  7874 ;; This function is called by:
  7875 ;;		_main
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           	psect	text66
  7880  00006E                     __ptext66:
  7881                           	callstack 0
  7882  00006E                     _Sinit:
  7883                           	callstack 27
  7884                           
  7885                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  7886                           
  7887                           ;incstack = 0
  7888  00006E  EC6A  F00E         	call	_TiGetTimer	;wreg free
  7889  000072  6E3B               	movwf	_timerSMS^0,c
  7890  000074  0012               	return		;funcret
  7891  000076                     __end_of_Sinit:
  7892                           	callstack 0
  7893                           
  7894 ;; *************** function _SMotor *****************
  7895 ;; Defined at:
  7896 ;;		line 22 in file "Ssms.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;		None
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;		None
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  1    wreg      void 
  7903 ;; Registers used:
  7904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMRAM   BANK0   BANK1
  7910 ;;      Params:         0       0       0
  7911 ;;      Locals:         0       0       0
  7912 ;;      Temps:          2       0       0
  7913 ;;      Totals:         2       0       0
  7914 ;;Total ram usage:        2 bytes
  7915 ;; Hardware stack levels used: 1
  7916 ;; Hardware stack levels required when called: 3
  7917 ;; This function calls:
  7918 ;;		_MNovaLletra
  7919 ;;		_TiGetTics
  7920 ;;		_TiResetTics
  7921 ;; This function is called by:
  7922 ;;		_main
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text67
  7927  00116E                     __ptext67:
  7928                           	callstack 0
  7929  00116E                     _SMotor:
  7930                           	callstack 27
  7931                           
  7932                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  7933                           
  7934                           ;incstack = 0
  7935  00116E  D0BA               	goto	l4874
  7936  001170                     l4718:
  7937                           
  7938                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  7939  001170  2854               	incf	_novaTecla^0,w,c
  7940  001172  E008               	bz	l4726
  7941  001174  A077               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7942  001176  D006               	goto	l4726
  7943                           
  7944                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  7945  001178  503B               	movf	_timerSMS^0,w,c
  7946  00117A  EC3D  F00F         	call	_TiResetTics
  7947                           
  7948                           ;Ssms.c: 29:     state = 3;
  7949  00117E  0E03               	movlw	3
  7950  001180  6E39               	movwf	SMotor@state^0,c
  7951                           
  7952                           ;Ssms.c: 30:    }
  7953  001182  0C03               	retlw	3
  7954  001184                     l4726:
  7955  001184  2854               	incf	_novaTecla^0,w,c
  7956  001186  A4D8               	btfss	status,2,c
  7957  001188  0012               	return	
  7958  00118A  503B               	movf	_timerSMS^0,w,c
  7959  00118C  ECA7  F00E         	call	_TiGetTics
  7960  001190  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  7961  001192  0012               	return	
  7962  001194  D8BE               	call	PL60	;call to abstracted procedure
  7963  001196  A0D8               	btfss	status,0,c
  7964  001198  0012               	return	
  7965  00119A  2855               	incf	_lletraASCII^0,w,c
  7966  00119C  A4D8               	btfss	status,2,c
  7967  00119E  A077               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7968  0011A0  0012               	return	
  7969                           
  7970                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  7971  0011A2  5055               	movf	_lletraASCII^0,w,c
  7972  0011A4  EC3B  F000         	call	_MNovaLletra
  7973                           
  7974                           ;Ssms.c: 33:     lletraASCII = -1;
  7975  0011A8  6855               	setf	_lletraASCII^0,c
  7976                           
  7977                           ;Ssms.c: 34:     ultimaTecla = -1;
  7978  0011AA  6853               	setf	_ultimaTecla^0,c
  7979                           
  7980                           ;Ssms.c: 35:     zeroTecla = 0;
  7981  0011AC  6A3A               	clrf	_zeroTecla^0,c
  7982  0011AE  0012               	return	
  7983  0011B0                     l4742:
  7984                           
  7985                           ;Ssms.c: 39:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  7986  0011B0  5053               	movf	_ultimaTecla^0,w,c
  7987  0011B2  1854               	xorwf	_novaTecla^0,w,c
  7988  0011B4  E10C               	bnz	l4750
  7989  0011B6  503B               	movf	_timerSMS^0,w,c
  7990  0011B8  ECA7  F00E         	call	_TiGetTics
  7991  0011BC  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  7992  0011BE  D002               	goto	u4130
  7993  0011C0  D8A8               	call	PL60	;call to abstracted procedure
  7994  0011C2  E205               	bc	l4750
  7995  0011C4                     u4130:
  7996                           
  7997                           ;Ssms.c: 40:     novaTecla = -1;
  7998  0011C4  6854               	setf	_novaTecla^0,c
  7999                           
  8000                           ;Ssms.c: 41:     sumaPulsacions++;
  8001  0011C6  2A3C               	incf	_sumaPulsacions^0,f,c
  8002                           
  8003                           ;Ssms.c: 42:     lletraASCII++;
  8004  0011C8  2A55               	incf	_lletraASCII^0,f,c
  8005                           
  8006                           ;Ssms.c: 43:     state++;
  8007  0011CA  2A39               	incf	SMotor@state^0,f,c
  8008                           
  8009                           ;Ssms.c: 44:    }
  8010  0011CC  0012               	return	
  8011  0011CE                     l4750:
  8012  0011CE  2854               	incf	_novaTecla^0,w,c
  8013  0011D0  B4D8               	btfsc	status,2,c
  8014  0011D2  0012               	return	
  8015  0011D4  5053               	movf	_ultimaTecla^0,w,c
  8016  0011D6  1854               	xorwf	_novaTecla^0,w,c
  8017  0011D8  B4D8               	btfsc	status,2,c
  8018  0011DA  0012               	return	
  8019                           
  8020                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  8021  0011DC  5055               	movf	_lletraASCII^0,w,c
  8022  0011DE  EC3B  F000         	call	_MNovaLletra
  8023                           
  8024                           ;Ssms.c: 47:     if(novaTecla != 0){
  8025  0011E2  5054               	movf	_novaTecla^0,w,c
  8026  0011E4  E005               	bz	l4760
  8027                           
  8028                           ;Ssms.c: 48:       lletraASCII = lletraInici[novaTecla-2];
  8029  0011E6  5054               	movf	_novaTecla^0,w,c
  8030  0011E8  0FB2               	addlw	low (_lletraInici+254)
  8031  0011EA  ECC2  F007         	call	PL56	;call to abstracted procedure
  8032  0011EE  D001               	goto	L4
  8033  0011F0                     l4760:
  8034                           
  8035                           ;Ssms.c: 50:       lletraASCII = '0';
  8036  0011F0  0E30               	movlw	48
  8037  0011F2                     L4:
  8038  0011F2  6E55               	movwf	_lletraASCII^0,c
  8039                           
  8040                           ;Ssms.c: 52:     zeroTecla=0;
  8041  0011F4  6A3A               	clrf	_zeroTecla^0,c
  8042                           
  8043                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  8044  0011F6  C054  F053         	movff	_novaTecla,_ultimaTecla
  8045                           
  8046                           ;Ssms.c: 54:     sumaPulsacions = 0;
  8047  0011FA  6A3C               	clrf	_sumaPulsacions^0,c
  8048                           
  8049                           ;Ssms.c: 55:     novaTecla = -1;
  8050  0011FC  6854               	setf	_novaTecla^0,c
  8051                           
  8052                           ;Ssms.c: 56:     state--;
  8053  0011FE  0639               	decf	SMotor@state^0,f,c
  8054  001200  0012               	return	
  8055  001202                     l4772:
  8056                           
  8057                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  8058  001202  0E07               	movlw	7
  8059  001204  1853               	xorwf	_ultimaTecla^0,w,c
  8060  001206  E008               	bz	l4780
  8061  001208  0E09               	movlw	9
  8062  00120A  1853               	xorwf	_ultimaTecla^0,w,c
  8063  00120C  E005               	bz	l4780
  8064  00120E  5053               	movf	_ultimaTecla^0,w,c
  8065  001210  E003               	bz	l4780
  8066                           
  8067                           ;Ssms.c: 61:     state = 5;
  8068  001212  0E05               	movlw	5
  8069  001214  6E39               	movwf	SMotor@state^0,c
  8070                           
  8071                           ;Ssms.c: 62:    }
  8072  001216  0C05               	retlw	5
  8073  001218                     l4780:
  8074  001218  0E07               	movlw	7
  8075  00121A  1853               	xorwf	_ultimaTecla^0,w,c
  8076  00121C  E003               	bz	u4210
  8077  00121E  0E09               	movlw	9
  8078  001220  1853               	xorwf	_ultimaTecla^0,w,c
  8079  001222  E103               	bnz	l4786
  8080  001224                     u4210:
  8081                           
  8082                           ;Ssms.c: 64:     state = 6;
  8083  001224  0E06               	movlw	6
  8084  001226  6E39               	movwf	SMotor@state^0,c
  8085                           
  8086                           ;Ssms.c: 65:    }
  8087  001228  0C06               	retlw	6
  8088  00122A                     l4786:
  8089  00122A  5053               	movf	_ultimaTecla^0,w,c
  8090  00122C  A4D8               	btfss	status,2,c
  8091  00122E  0012               	return	
  8092                           
  8093                           ;Ssms.c: 67:     zeroTecla++;
  8094  001230  2A3A               	incf	_zeroTecla^0,f,c
  8095                           
  8096                           ;Ssms.c: 68:     if(zeroTecla == 2) zeroTecla = 0;
  8097  001232  0E02               	movlw	2
  8098  001234  183A               	xorwf	_zeroTecla^0,w,c
  8099  001236  E101               	bnz	l4794
  8100  001238  6A3A               	clrf	_zeroTecla^0,c
  8101  00123A                     l4794:
  8102                           
  8103                           ;Ssms.c: 69:     lletraASCII = arrayZero[zeroTecla];
  8104  00123A  503A               	movf	_zeroTecla^0,w,c
  8105  00123C  0F45               	addlw	low _arrayZero
  8106  00123E  ECC2  F007         	call	PL56	;call to abstracted procedure
  8107  001242  6E55               	movwf	_lletraASCII^0,c
  8108  001244                     l4796:
  8109                           
  8110                           ;Ssms.c: 70:     state = 0;
  8111  001244  6A39               	clrf	SMotor@state^0,c
  8112  001246  0012               	return	
  8113  001248                     l4798:
  8114                           
  8115                           ;Ssms.c: 74:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  8116  001248  5054               	movf	_novaTecla^0,w,c
  8117  00124A  0A80               	xorlw	128
  8118  00124C  0F7E               	addlw	-130
  8119  00124E  E202               	bc	u4250
  8120  001250  5054               	movf	_novaTecla^0,w,c
  8121  001252  E107               	bnz	l4806
  8122  001254                     u4250:
  8123  001254  5054               	movf	_novaTecla^0,w,c
  8124  001256  0A80               	xorlw	128
  8125  001258  0F76               	addlw	-138
  8126  00125A  E203               	bc	l4806
  8127                           
  8128                           ;Ssms.c: 75:     state = 1;
  8129  00125C  0E01               	movlw	1
  8130  00125E  6E39               	movwf	SMotor@state^0,c
  8131                           
  8132                           ;Ssms.c: 76:    }
  8133  001260  0C01               	retlw	1
  8134  001262                     l4806:
  8135  001262  5054               	movf	_novaTecla^0,w,c
  8136  001264  E00C               	bz	l4818
  8137  001266  5054               	movf	_novaTecla^0,w,c
  8138  001268  0A80               	xorlw	128
  8139  00126A  0F7E               	addlw	-130
  8140  00126C  E208               	bc	l4818
  8141  00126E  2855               	incf	_lletraASCII^0,w,c
  8142  001270  E106               	bnz	l4818
  8143                           
  8144                           ;Ssms.c: 78:     MNovaLletra(novaTecla+48);
  8145  001272  5054               	movf	_novaTecla^0,w,c
  8146  001274  0F30               	addlw	48
  8147  001276  EC3B  F000         	call	_MNovaLletra
  8148  00127A                     l4814:
  8149                           
  8150                           ;Ssms.c: 79:     novaTecla = -1;
  8151  00127A  6854               	setf	_novaTecla^0,c
  8152  00127C  D7E3               	goto	l4796
  8153  00127E                     l4818:
  8154  00127E  5054               	movf	_novaTecla^0,w,c
  8155  001280  B4D8               	btfsc	status,2,c
  8156  001282  0012               	return	
  8157  001284  5054               	movf	_novaTecla^0,w,c
  8158  001286  0A80               	xorlw	128
  8159  001288  0F7E               	addlw	-130
  8160  00128A  B0D8               	btfsc	status,0,c
  8161  00128C  0012               	return	
  8162  00128E  2855               	incf	_lletraASCII^0,w,c
  8163  001290  B4D8               	btfsc	status,2,c
  8164  001292  0012               	return	
  8165                           
  8166                           ;Ssms.c: 83:     MNovaLletra(lletraASCII);
  8167  001294  5055               	movf	_lletraASCII^0,w,c
  8168  001296  EC3B  F000         	call	_MNovaLletra
  8169                           
  8170                           ;Ssms.c: 84:     lletraASCII = -1;
  8171  00129A  6855               	setf	_lletraASCII^0,c
  8172                           
  8173                           ;Ssms.c: 85:     state++;
  8174  00129C  2A39               	incf	SMotor@state^0,f,c
  8175  00129E  0012               	return	
  8176  0012A0                     l4830:
  8177                           
  8178                           ;Ssms.c: 89:    MNovaLletra(novaTecla+48);
  8179  0012A0  5054               	movf	_novaTecla^0,w,c
  8180  0012A2  0F30               	addlw	48
  8181  0012A4  EC3B  F000         	call	_MNovaLletra
  8182  0012A8  D7E8               	goto	l4814
  8183  0012AA                     l4836:
  8184                           
  8185                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  8186  0012AA  0E04               	movlw	4
  8187  0012AC  183C               	xorwf	_sumaPulsacions^0,w,c
  8188  0012AE  E108               	bnz	l4844
  8189  0012B0                     u4330:
  8190                           
  8191                           ;Ssms.c: 95:     lletraASCII = lletraInici[ultimaTecla-2];
  8192  0012B0  5053               	movf	_ultimaTecla^0,w,c
  8193  0012B2  0FB2               	addlw	low (_lletraInici+254)
  8194  0012B4  6ED9               	movwf	fsr2l,c
  8195  0012B6  6ADA               	clrf	fsr2h,c
  8196  0012B8  50DF               	movf	indf2,w,c
  8197  0012BA  6E55               	movwf	_lletraASCII^0,c
  8198                           
  8199                           ;Ssms.c: 96:     sumaPulsacions = 0;
  8200  0012BC  6A3C               	clrf	_sumaPulsacions^0,c
  8201  0012BE  D7C2               	goto	l4796
  8202  0012C0                     l4844:
  8203  0012C0  0E03               	movlw	3
  8204  0012C2  183C               	xorwf	_sumaPulsacions^0,w,c
  8205  0012C4  E103               	bnz	l4850
  8206  0012C6                     u4340:
  8207                           
  8208                           ;Ssms.c: 100:     lletraASCII = ultimaTecla+48;
  8209  0012C6  5053               	movf	_ultimaTecla^0,w,c
  8210  0012C8  0F30               	addlw	48
  8211  0012CA  D7BB               	goto	L5
  8212  0012CC                     l4850:
  8213  0012CC  0E03               	movlw	3
  8214  0012CE  603C               	cpfslt	_sumaPulsacions^0,c
  8215  0012D0  0012               	return	
  8216  0012D2  D7B8               	goto	l4796
  8217  0012D4                     l4854:
  8218                           
  8219                           ;Ssms.c: 108:    if (sumaPulsacions == 4) {
  8220  0012D4  0E04               	movlw	4
  8221  0012D6  183C               	xorwf	_sumaPulsacions^0,w,c
  8222  0012D8  E0F6               	bz	u4340
  8223  0012DA  0E05               	movlw	5
  8224  0012DC  183C               	xorwf	_sumaPulsacions^0,w,c
  8225  0012DE  E0E8               	bz	u4330
  8226  0012E0  0E04               	movlw	4
  8227  0012E2  D7F5               	goto	L6
  8228  0012E4                     l4874:
  8229  0012E4  5039               	movf	SMotor@state^0,w,c
  8230  0012E6  6E6B               	movwf	??_SMotor^0,c
  8231  0012E8  6A6C               	clrf	(??_SMotor+1)^0,c
  8232                           
  8233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8234                           ; Switch size 1, requested type "space"
  8235                           ; Number of cases is 1, Range of values is 0 to 0
  8236                           ; switch strategies available:
  8237                           ; Name         Instructions Cycles
  8238                           ; simple_byte            4     3 (average)
  8239                           ;	Chosen strategy is simple_byte
  8240  0012EA  506C               	movf	(??_SMotor+1)^0,w,c
  8241  0012EC  A4D8               	btfss	status,2,c
  8242  0012EE  0012               	return	
  8243                           
  8244                           ; Switch size 1, requested type "space"
  8245                           ; Number of cases is 7, Range of values is 0 to 6
  8246                           ; switch strategies available:
  8247                           ; Name         Instructions Cycles
  8248                           ; simple_byte           22    12 (average)
  8249                           ;	Chosen strategy is simple_byte
  8250  0012F0  506B               	movf	??_SMotor^0,w,c
  8251  0012F2  E101 D73D          	bz	l4718
  8252  0012F6  0A01               	xorlw	1	; case 1
  8253  0012F8  E101 D75A          	bz	l4742
  8254  0012FC  0A03               	xorlw	3	; case 2
  8255  0012FE  E081               	bz	l4772
  8256  001300  0A01               	xorlw	1	; case 3
  8257  001302  E0A2               	bz	l4798
  8258  001304  0A07               	xorlw	7	; case 4
  8259  001306  E0CC               	bz	l4830
  8260  001308  0A01               	xorlw	1	; case 5
  8261  00130A  E0CF               	bz	l4836
  8262  00130C  0A03               	xorlw	3	; case 6
  8263  00130E  E0E2               	bz	l4854
  8264  001310  0012               	return		;funcret
  8265  001312                     __end_of_SMotor:
  8266                           	callstack 0
  8267  001312                     PL60:
  8268                           	callstack 27
  8269  001312  0E5A               	movlw	90
  8270  001314  5C64               	subwf	?_TiGetTics^0,w,c
  8271  001316  0E02               	movlw	2
  8272  001318  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  8273  00131A  0012               	return	
  8274  00131C                     __end_ofPL60:
  8275                           	callstack 0
  8276                           
  8277 ;; *************** function _MNovaLletra *****************
  8278 ;; Defined at:
  8279 ;;		line 35 in file "Menu.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  lletra          1    wreg     unsigned char 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  lletra          1    5[COMRAM] unsigned char 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		wreg
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1
  8293 ;;      Params:         0       0       0
  8294 ;;      Locals:         1       0       0
  8295 ;;      Temps:          0       0       0
  8296 ;;      Totals:         1       0       0
  8297 ;;Total ram usage:        1 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; Hardware stack levels required when called: 2
  8300 ;; This function calls:
  8301 ;;		Nothing
  8302 ;; This function is called by:
  8303 ;;		_SMotor
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           	psect	text68
  8308  000076                     __ptext68:
  8309                           	callstack 0
  8310  000076                     _MNovaLletra:
  8311                           	callstack 27
  8312                           
  8313                           ;incstack = 0
  8314                           ;MNovaLletra@lletra stored from wreg
  8315  000076  6E64               	movwf	MNovaLletra@lletra^0,c
  8316                           
  8317                           ;Menu.c: 36:     novaLletra = lletra;
  8318  000078  C064  F051         	movff	MNovaLletra@lletra,_novaLletra
  8319  00007C  0012               	return		;funcret
  8320  00007E                     __end_of_MNovaLletra:
  8321                           	callstack 0
  8322                           
  8323 ;; *************** function _Minit *****************
  8324 ;; Defined at:
  8325 ;;		line 28 in file "Menu.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;		None
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;		None
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  1    wreg      void 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMRAM   BANK0   BANK1
  8339 ;;      Params:         0       0       0
  8340 ;;      Locals:         0       0       0
  8341 ;;      Temps:          0       0       0
  8342 ;;      Totals:         0       0       0
  8343 ;;Total ram usage:        0 bytes
  8344 ;; Hardware stack levels used: 1
  8345 ;; Hardware stack levels required when called: 3
  8346 ;; This function calls:
  8347 ;;		_TiGetTimer
  8348 ;; This function is called by:
  8349 ;;		_main
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           	psect	text69
  8354  00007E                     __ptext69:
  8355                           	callstack 0
  8356  00007E                     _Minit:
  8357                           	callstack 27
  8358                           
  8359                           ;Menu.c: 29:     timerMenu = TiGetTimer();
  8360                           
  8361                           ;incstack = 0
  8362  00007E  EC6A  F00E         	call	_TiGetTimer	;wreg free
  8363  000082  6E32               	movwf	_timerMenu^0,c
  8364  000084  0012               	return		;funcret
  8365  000086                     __end_of_Minit:
  8366                           	callstack 0
  8367                           
  8368 ;; *************** function _LcLCD *****************
  8369 ;; Defined at:
  8370 ;;		line 232 in file "LcTLCD.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1
  8384 ;;      Params:         0       0       0
  8385 ;;      Locals:         0       0       0
  8386 ;;      Temps:          0       0       0
  8387 ;;      Totals:         0       0       0
  8388 ;;Total ram usage:        0 bytes
  8389 ;; Hardware stack levels used: 1
  8390 ;; Hardware stack levels required when called: 6
  8391 ;; This function calls:
  8392 ;;		_LcPutChar
  8393 ;; This function is called by:
  8394 ;;		_main
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text70
  8399  001AA4                     __ptext70:
  8400                           	callstack 0
  8401  001AA4                     _LcLCD:
  8402                           	callstack 24
  8403                           
  8404                           ;LcTLCD.c: 233:     if(nou_s == 1){
  8405                           
  8406                           ;incstack = 0
  8407  001AA4  A277               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8408  001AA6  0012               	return	
  8409                           
  8410                           ;LcTLCD.c: 234:         LcPutChar(*s_ptr);
  8411  001AA8  D818               	call	PL38	;call to abstracted procedure
  8412  001AAA  64F7               	cpfsgt	tblptrh,c
  8413  001AAC  D003               	bra	u3997
  8414  001AAE  0008               	tblrd		*
  8415  001AB0  50F5               	movf	tablat,w,c
  8416  001AB2  D001               	bra	u3990
  8417  001AB4                     u3997:
  8418  001AB4  D819               	call	PL48	;call to abstracted procedure
  8419  001AB6                     u3990:
  8420  001AB6  EC7A  F00D         	call	_LcPutChar
  8421                           
  8422                           ;LcTLCD.c: 235:         s_ptr++;
  8423  001ABA  4A0D               	infsnz	_s_ptr^0,f,c
  8424  001ABC  2A0E               	incf	(_s_ptr+1)^0,f,c
  8425                           
  8426                           ;LcTLCD.c: 236:         if(*s_ptr == '\0'){
  8427  001ABE  D80D               	call	PL38	;call to abstracted procedure
  8428  001AC0  64F7               	cpfsgt	tblptrh,c
  8429  001AC2  D003               	bra	u4007
  8430  001AC4  0008               	tblrd		*
  8431  001AC6  50F5               	movf	tablat,w,c
  8432  001AC8  D001               	bra	u4000
  8433  001ACA                     u4007:
  8434  001ACA  D80E               	call	PL48	;call to abstracted procedure
  8435  001ACC                     u4000:
  8436  001ACC  0900               	iorlw	0
  8437  001ACE  A4D8               	btfss	status,2,c
  8438  001AD0  0012               	return	
  8439                           
  8440                           ;LcTLCD.c: 237:             nou_s = 0;
  8441  001AD2  9277               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8442                           
  8443                           ;LcTLCD.c: 238:             s_ptr=0;
  8444  001AD4  6A0D               	clrf	_s_ptr^0,c
  8445  001AD6  6A0E               	clrf	(_s_ptr+1)^0,c
  8446  001AD8  0012               	return		;funcret
  8447  001ADA                     __end_of_LcLCD:
  8448                           	callstack 0
  8449  001ADA                     PL38:
  8450                           	callstack 24
  8451  001ADA  C00D  FFF6         	movff	_s_ptr,tblptrl
  8452  001ADE  C00E  FFF7         	movff	_s_ptr+1,tblptrh
  8453  001AE2  6AF8               	clrf	tblptru,c
  8454  001AE4  0E01               	movlw	(high __ramtop+-1)
  8455  001AE6  0012               	return	
  8456  001AE8                     __end_ofPL38:
  8457                           	callstack 0
  8458  001AE8                     PL48:
  8459                           	callstack 24
  8460  001AE8  CFF6 FFE1          	movff	tblptrl,fsr1l
  8461  001AEC  CFF7 FFE2          	movff	tblptrh,fsr1h
  8462  001AF0  50E7               	movf	indf1,w,c
  8463  001AF2  0012               	return	
  8464  001AF4                     __end_ofPL48:
  8465                           	callstack 0
  8466                           
  8467 ;; *************** function _LcInit *****************
  8468 ;; Defined at:
  8469 ;;		line 41 in file "LcTLCD.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;  rows            1    wreg     unsigned char 
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;  rows            1   16[COMRAM] unsigned char 
  8474 ;;  i               2   17[COMRAM] int 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      void 
  8477 ;; Registers used:
  8478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMRAM   BANK0   BANK1
  8484 ;;      Params:         0       0       0
  8485 ;;      Locals:         3       0       0
  8486 ;;      Temps:          0       0       0
  8487 ;;      Totals:         3       0       0
  8488 ;;Total ram usage:        3 bytes
  8489 ;; Hardware stack levels used: 1
  8490 ;; Hardware stack levels required when called: 4
  8491 ;; This function calls:
  8492 ;;		_CantaIR
  8493 ;;		_EscriuPrimeraOrdre
  8494 ;;		_Espera
  8495 ;;		_TiGetTimer
  8496 ;;		_WaitForBusy
  8497 ;; This function is called by:
  8498 ;;		_main
  8499 ;; This function uses a non-reentrant model
  8500 ;;
  8501                           
  8502                           	psect	text71
  8503  001602                     __ptext71:
  8504                           	callstack 0
  8505  001602                     _LcInit:
  8506                           	callstack 26
  8507                           
  8508                           ;incstack = 0
  8509                           ;LcInit@rows stored from wreg
  8510  001602  6E6F               	movwf	LcInit@rows^0,c
  8511                           
  8512                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  8513  001604  EC6A  F00E         	call	_TiGetTimer	;wreg free
  8514  001608  6E3D               	movwf	_Timer^0,c
  8515                           
  8516                           ;LcTLCD.c: 49:  Rows = rows;
  8517  00160A  C06F  F040         	movff	LcInit@rows,_Rows
  8518                           
  8519                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  8520  00160E  6A3E               	clrf	_ColumnAct^0,c
  8521  001610  6A3F               	clrf	_RowAct^0,c
  8522                           
  8523                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8524  001612  9894               	bcf	148,4,c	;volatile
  8525  001614  9E95               	bcf	149,7,c	;volatile
  8526  001616  9A94               	bcf	148,5,c	;volatile
  8527                           
  8528                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  8529  001618  6A70               	clrf	LcInit@i^0,c
  8530  00161A  6A71               	clrf	(LcInit@i+1)^0,c
  8531  00161C                     l4626:
  8532                           
  8533                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  8534  00161C  6A6C               	clrf	(Espera@ms+1)^0,c
  8535  00161E  0E64               	movlw	100
  8536  001620  6E6B               	movwf	Espera@ms^0,c
  8537  001622  503D               	movf	_Timer^0,w,c
  8538  001624  EC01  F00F         	call	_Espera
  8539                           
  8540                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  8541  001628  0E03               	movlw	3
  8542  00162A  EC3C  F00C         	call	_EscriuPrimeraOrdre
  8543                           
  8544                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  8545  00162E  6A6C               	clrf	(Espera@ms+1)^0,c
  8546  001630  0E05               	movlw	5
  8547  001632  6E6B               	movwf	Espera@ms^0,c
  8548  001634  503D               	movf	_Timer^0,w,c
  8549  001636  EC01  F00F         	call	_Espera
  8550                           
  8551                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  8552  00163A  0E03               	movlw	3
  8553  00163C  EC3C  F00C         	call	_EscriuPrimeraOrdre
  8554                           
  8555                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8556  001640  D83A               	call	PL74	;call to abstracted procedure
  8557  001642  EC01  F00F         	call	_Espera
  8558                           
  8559                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  8560  001646  0E03               	movlw	3
  8561  001648  EC3C  F00C         	call	_EscriuPrimeraOrdre
  8562                           
  8563                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  8564  00164C  D834               	call	PL74	;call to abstracted procedure
  8565  00164E  EC01  F00F         	call	_Espera
  8566                           
  8567                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  8568  001652  0E02               	movlw	2
  8569  001654  EC3C  F00C         	call	_EscriuPrimeraOrdre
  8570                           
  8571                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  8572  001658  6A6C               	clrf	(Espera@ms+1)^0,c
  8573  00165A  0E04               	movlw	4
  8574  00165C  6E6B               	movwf	Espera@ms^0,c
  8575  00165E  503D               	movf	_Timer^0,w,c
  8576  001660  EC01  F00F         	call	_Espera
  8577                           
  8578                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  8579  001664  0E28               	movlw	40
  8580  001666  EC2F  F00F         	call	_CantaIR
  8581                           
  8582                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  8583  00166A  ECE1  F00D         	call	_WaitForBusy	;wreg free
  8584  00166E  0E08               	movlw	8
  8585  001670  EC2F  F00F         	call	_CantaIR
  8586                           
  8587                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  8588  001674  ECE1  F00D         	call	_WaitForBusy	;wreg free
  8589  001678  0E01               	movlw	1
  8590  00167A  EC2F  F00F         	call	_CantaIR
  8591                           
  8592                           ;LcTLCD.c: 71:   Espera(Timer,3);
  8593  00167E  ECFC  F00E         	call	PL72	;call to abstracted procedure
  8594  001682  EC01  F00F         	call	_Espera
  8595                           
  8596                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  8597  001686  ECE1  F00D         	call	_WaitForBusy	;wreg free
  8598  00168A  0E06               	movlw	6
  8599  00168C  EC2F  F00F         	call	_CantaIR
  8600                           
  8601                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  8602  001690  ECE1  F00D         	call	_WaitForBusy	;wreg free
  8603  001694  0E0F               	movlw	15
  8604  001696  EC2F  F00F         	call	_CantaIR
  8605                           
  8606                           ;LcTLCD.c: 74:  }
  8607  00169A  4A70               	infsnz	LcInit@i^0,f,c
  8608  00169C  2A71               	incf	(LcInit@i+1)^0,f,c
  8609  00169E  BE71               	btfsc	(LcInit@i+1)^0,7,c
  8610  0016A0  D7BD               	goto	l4626
  8611  0016A2  5071               	movf	(LcInit@i+1)^0,w,c
  8612  0016A4  E103               	bnz	u3970
  8613  0016A6  0E02               	movlw	2
  8614  0016A8  5C70               	subwf	LcInit@i^0,w,c
  8615  0016AA  E3B8               	bnc	l4626
  8616  0016AC                     u3970:
  8617                           
  8618                           ;LcTLCD.c: 80:     WaitForBusy();
  8619  0016AC  ECE1  F00D         	call	_WaitForBusy	;wreg free
  8620                           
  8621                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  8622  0016B0  0E0C               	movlw	12
  8623  0016B2  EF2F  F00F         	goto	_CantaIR
  8624  0016B6                     __end_of_LcInit:
  8625                           	callstack 0
  8626  0016B6                     PL74:
  8627                           	callstack 26
  8628  0016B6  6A6C               	clrf	(Espera@ms+1)^0,c
  8629  0016B8  0E01               	movlw	1
  8630  0016BA  6E6B               	movwf	Espera@ms^0,c
  8631  0016BC  503D               	movf	_Timer^0,w,c
  8632  0016BE  0012               	return	
  8633  0016C0                     __end_ofPL74:
  8634                           	callstack 0
  8635                           
  8636 ;; *************** function _EscriuPrimeraOrdre *****************
  8637 ;; Defined at:
  8638 ;;		line 216 in file "LcTLCD.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;  ordre           1    wreg     unsigned char 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;  ordre           1    6[COMRAM] unsigned char 
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  1    wreg      void 
  8645 ;; Registers used:
  8646 ;;		wreg, status,2, status,0
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMRAM   BANK0   BANK1
  8652 ;;      Params:         0       0       0
  8653 ;;      Locals:         1       0       0
  8654 ;;      Temps:          1       0       0
  8655 ;;      Totals:         2       0       0
  8656 ;;Total ram usage:        2 bytes
  8657 ;; Hardware stack levels used: 1
  8658 ;; Hardware stack levels required when called: 2
  8659 ;; This function calls:
  8660 ;;		Nothing
  8661 ;; This function is called by:
  8662 ;;		_LcInit
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           	psect	text72
  8667  001878                     __ptext72:
  8668                           	callstack 0
  8669  001878                     _EscriuPrimeraOrdre:
  8670                           	callstack 27
  8671                           
  8672                           ;incstack = 0
  8673                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8674  001878  6E65               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8675                           
  8676                           ;LcTLCD.c: 218:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8677  00187A  9694               	bcf	148,3,c	;volatile
  8678                           
  8679                           ;LcTLCD.c: 219:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8680  00187C  D82F               	call	PL40	;call to abstracted procedure
  8681  00187E  888B               	bsf	139,4,c	;volatile
  8682                           
  8683                           ;LcTLCD.c: 220:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8684  001880  A665               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8685  001882  D003               	goto	u250
  8686  001884  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8687  001886  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8688  001888  D001               	goto	u268
  8689  00188A                     u250:
  8690  00188A  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8691  00188C                     u268:
  8692  00188C  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8693  00188E  D82D               	call	PL68	;call to abstracted procedure
  8694  001890  0BF7               	andlw	-9
  8695  001892  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8696  001894  6E8B               	movwf	139,c	;volatile
  8697                           
  8698                           ;LcTLCD.c: 221:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8699  001896  A465               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8700  001898  D003               	goto	u270
  8701  00189A  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8702  00189C  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8703  00189E  D001               	goto	u288
  8704  0018A0                     u270:
  8705  0018A0  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8706  0018A2                     u288:
  8707  0018A2  D823               	call	PL68	;call to abstracted procedure
  8708  0018A4  0BFB               	andlw	-5
  8709  0018A6  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8710  0018A8  6E8B               	movwf	139,c	;volatile
  8711                           
  8712                           ;LcTLCD.c: 222:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8713  0018AA  A265               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8714  0018AC  D003               	goto	u290
  8715  0018AE  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8716  0018B0  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8717  0018B2  D001               	goto	u308
  8718  0018B4                     u290:
  8719  0018B4  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8720  0018B6                     u308:
  8721  0018B6  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8722  0018B8  508B               	movf	139,w,c	;volatile
  8723  0018BA  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8724  0018BC  0BFD               	andlw	-3
  8725  0018BE  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8726  0018C0  6E8B               	movwf	139,c	;volatile
  8727                           
  8728                           ;LcTLCD.c: 223:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8729  0018C2  A065               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8730  0018C4  D003               	goto	u310
  8731  0018C6  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8732  0018C8  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  8733  0018CA  D001               	goto	u328
  8734  0018CC                     u310:
  8735  0018CC  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  8736  0018CE                     u328:
  8737  0018CE  508B               	movf	139,w,c	;volatile
  8738  0018D0  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8739  0018D2  0BFE               	andlw	-2
  8740  0018D4  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8741  0018D6  6E8B               	movwf	139,c	;volatile
  8742                           
  8743                           ;LcTLCD.c: 224:  (LATCbits.LATC4 = 0);
  8744  0018D8  988B               	bcf	139,4,c	;volatile
  8745  0018DA  0012               	return		;funcret
  8746  0018DC                     __end_of_EscriuPrimeraOrdre:
  8747                           	callstack 0
  8748  0018DC                     PL40:
  8749                           	callstack 24
  8750  0018DC  9494               	bcf	148,2,c	;volatile
  8751  0018DE  9294               	bcf	148,1,c	;volatile
  8752  0018E0  9094               	bcf	148,0,c	;volatile
  8753  0018E2  9A8B               	bcf	139,5,c	;volatile
  8754  0018E4  9E8C               	bcf	140,7,c	;volatile
  8755  0018E6  888B               	bsf	139,4,c	;volatile
  8756  0018E8  0012               	return	
  8757  0018EA                     __end_ofPL40:
  8758                           	callstack 0
  8759  0018EA                     PL68:
  8760                           	callstack 27
  8761  0018EA  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8762  0018EC  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8763  0018EE  508B               	movf	139,w,c	;volatile
  8764  0018F0  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8765  0018F2  0012               	return	
  8766  0018F4                     __end_ofPL68:
  8767                           	callstack 0
  8768                           
  8769 ;; *************** function _JoystickMotor *****************
  8770 ;; Defined at:
  8771 ;;		line 18 in file "Joystick.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;		None
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;		None
  8776 ;; Return value:  Size  Location     Type
  8777 ;;                  1    wreg      void 
  8778 ;; Registers used:
  8779 ;;		wreg, status,2, status,0, cstack
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMRAM   BANK0   BANK1
  8785 ;;      Params:         0       0       0
  8786 ;;      Locals:         0       0       0
  8787 ;;      Temps:          2       0       0
  8788 ;;      Totals:         2       0       0
  8789 ;;Total ram usage:        2 bytes
  8790 ;; Hardware stack levels used: 1
  8791 ;; Hardware stack levels required when called: 3
  8792 ;; This function calls:
  8793 ;;		_MNouJoystick
  8794 ;; This function is called by:
  8795 ;;		_main
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           	psect	text73
  8800  00152C                     __ptext73:
  8801                           	callstack 0
  8802  00152C                     _JoystickMotor:
  8803                           	callstack 27
  8804                           
  8805                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  8806                           
  8807                           ;incstack = 0
  8808  00152C  D056               	goto	l3282
  8809  00152E                     l1012:
  8810                           
  8811                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8812  00152E  B2C2               	btfsc	194,1,c	;volatile
  8813  001530  D00B               	goto	l1013
  8814  001532  0EC8               	movlw	200
  8815  001534  60C4               	cpfslt	196,c	;volatile
  8816  001536  D008               	goto	l1013
  8817  001538  0E32               	movlw	50
  8818  00153A  64C4               	cpfsgt	196,c	;volatile
  8819  00153C  D005               	goto	l1013
  8820                           
  8821                           ;Joystick.c: 23:     ADCON0 = 0x07;
  8822  00153E  0E07               	movlw	7
  8823  001540  6EC2               	movwf	194,c	;volatile
  8824                           
  8825                           ;Joystick.c: 24:                 cap1 = 1;
  8826  001542  8E75               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8827  001544                     l3212:
  8828                           
  8829                           ;Joystick.c: 25:     state++;
  8830  001544  2A17               	incf	JoystickMotor@state^0,f,c
  8831                           
  8832                           ;Joystick.c: 26:    }
  8833  001546  D052               	goto	l1020
  8834  001548                     l1013:
  8835  001548  B2C2               	btfsc	194,1,c	;volatile
  8836  00154A  D00F               	goto	l1015
  8837  00154C  0EC7               	movlw	199
  8838  00154E  64C4               	cpfsgt	196,c	;volatile
  8839  001550  D00C               	goto	l1015
  8840                           
  8841                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  8842  001552  0E02               	movlw	2
  8843  001554  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8844  001556  E003               	bz	l3220
  8845  001558  0E02               	movlw	2
  8846  00155A  EC43  F000         	call	_MNouJoystick
  8847  00155E                     l3220:
  8848                           
  8849                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  8850  00155E  0E02               	movlw	2
  8851  001560  6E18               	movwf	_ultimaTeclaAD^0,c
  8852                           
  8853                           ;Joystick.c: 30:     ADCON0 = 0x07;
  8854  001562  0E07               	movlw	7
  8855  001564  6EC2               	movwf	194,c	;volatile
  8856                           
  8857                           ;Joystick.c: 31:                 cap1 = 0;
  8858  001566  9E75               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8859  001568  D7ED               	goto	l3212
  8860  00156A                     l1015:
  8861  00156A  B2C2               	btfsc	194,1,c	;volatile
  8862  00156C  D03F               	goto	l1020
  8863  00156E  0E33               	movlw	51
  8864  001570  60C4               	cpfslt	196,c	;volatile
  8865  001572  D03C               	goto	l1020
  8866                           
  8867                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  8868  001574  0E08               	movlw	8
  8869  001576  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8870  001578  E003               	bz	l3234
  8871  00157A  0E08               	movlw	8
  8872  00157C  EC43  F000         	call	_MNouJoystick
  8873  001580                     l3234:
  8874                           
  8875                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  8876  001580  0E08               	movlw	8
  8877  001582  D7EE               	goto	L7
  8878  001584                     l1021:
  8879                           
  8880                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8881  001584  B2C2               	btfsc	194,1,c	;volatile
  8882  001586  D00B               	goto	l1022
  8883  001588  0EC8               	movlw	200
  8884  00158A  60C4               	cpfslt	196,c	;volatile
  8885  00158C  D008               	goto	l1022
  8886  00158E  0E32               	movlw	50
  8887  001590  64C4               	cpfsgt	196,c	;volatile
  8888  001592  D005               	goto	l1022
  8889                           
  8890                           ;Joystick.c: 44:     ADCON0 = 0x03;
  8891  001594  0E03               	movlw	3
  8892  001596  6EC2               	movwf	194,c	;volatile
  8893                           
  8894                           ;Joystick.c: 45:                 cap2 = 1;
  8895  001598  8C75               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8896  00159A                     l3250:
  8897                           
  8898                           ;Joystick.c: 46:     state--;
  8899  00159A  0617               	decf	JoystickMotor@state^0,f,c
  8900                           
  8901                           ;Joystick.c: 47:    }
  8902  00159C  D027               	goto	l1020
  8903  00159E                     l1022:
  8904  00159E  B2C2               	btfsc	194,1,c	;volatile
  8905  0015A0  D00F               	goto	l1024
  8906  0015A2  0EC7               	movlw	199
  8907  0015A4  64C4               	cpfsgt	196,c	;volatile
  8908  0015A6  D00C               	goto	l1024
  8909                           
  8910                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  8911  0015A8  0E06               	movlw	6
  8912  0015AA  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8913  0015AC  E003               	bz	l3258
  8914  0015AE  0E06               	movlw	6
  8915  0015B0  EC43  F000         	call	_MNouJoystick
  8916  0015B4                     l3258:
  8917                           
  8918                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  8919  0015B4  0E06               	movlw	6
  8920  0015B6  6E18               	movwf	_ultimaTeclaAD^0,c
  8921                           
  8922                           ;Joystick.c: 51:     ADCON0 = 0x03;
  8923  0015B8  0E03               	movlw	3
  8924  0015BA  6EC2               	movwf	194,c	;volatile
  8925                           
  8926                           ;Joystick.c: 52:                 cap2 = 0;
  8927  0015BC  9C75               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8928  0015BE  D7ED               	goto	l3250
  8929  0015C0                     l1024:
  8930  0015C0  B2C2               	btfsc	194,1,c	;volatile
  8931  0015C2  D014               	goto	l1020
  8932  0015C4  0E33               	movlw	51
  8933  0015C6  60C4               	cpfslt	196,c	;volatile
  8934  0015C8  D011               	goto	l1020
  8935                           
  8936                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  8937  0015CA  0E04               	movlw	4
  8938  0015CC  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8939  0015CE  E003               	bz	l3272
  8940  0015D0  0E04               	movlw	4
  8941  0015D2  EC43  F000         	call	_MNouJoystick
  8942  0015D6                     l3272:
  8943                           
  8944                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  8945  0015D6  0E04               	movlw	4
  8946  0015D8  D7EE               	goto	L8
  8947  0015DA                     l3282:
  8948  0015DA  5017               	movf	JoystickMotor@state^0,w,c
  8949  0015DC  6E65               	movwf	??_JoystickMotor^0,c
  8950  0015DE  6A66               	clrf	(??_JoystickMotor+1)^0,c
  8951                           
  8952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8953                           ; Switch size 1, requested type "space"
  8954                           ; Number of cases is 1, Range of values is 0 to 0
  8955                           ; switch strategies available:
  8956                           ; Name         Instructions Cycles
  8957                           ; simple_byte            4     3 (average)
  8958                           ;	Chosen strategy is simple_byte
  8959  0015E0  5066               	movf	(??_JoystickMotor+1)^0,w,c
  8960  0015E2  E104               	bnz	l1020
  8961                           
  8962                           ; Switch size 1, requested type "space"
  8963                           ; Number of cases is 2, Range of values is 0 to 1
  8964                           ; switch strategies available:
  8965                           ; Name         Instructions Cycles
  8966                           ; simple_byte            7     4 (average)
  8967                           ;	Chosen strategy is simple_byte
  8968  0015E4  5065               	movf	??_JoystickMotor^0,w,c
  8969  0015E6  E0A3               	bz	l1012
  8970  0015E8  0A01               	xorlw	1	; case 1
  8971  0015EA  E0CC               	bz	l1021
  8972  0015EC                     l1020:
  8973                           
  8974                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  8975  0015EC  BE75               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  8976  0015EE  AC75               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  8977  0015F0  0012               	return	
  8978  0015F2  5018               	movf	_ultimaTeclaAD^0,w,c
  8979  0015F4  B4D8               	btfsc	status,2,c
  8980  0015F6  0012               	return	
  8981                           
  8982                           ;Joystick.c: 66:         MNouJoystick(-1);
  8983  0015F8  0EFF               	movlw	255
  8984  0015FA  EC43  F000         	call	_MNouJoystick
  8985                           
  8986                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  8987  0015FE  6818               	setf	_ultimaTeclaAD^0,c
  8988  001600  0012               	return		;funcret
  8989  001602                     __end_of_JoystickMotor:
  8990                           	callstack 0
  8991                           
  8992 ;; *************** function _MNouJoystick *****************
  8993 ;; Defined at:
  8994 ;;		line 38 in file "Menu.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;  posicio         1    wreg     char 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;  posicio         1    5[COMRAM] char 
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  1    wreg      void 
  9001 ;; Registers used:
  9002 ;;		wreg
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMRAM   BANK0   BANK1
  9008 ;;      Params:         0       0       0
  9009 ;;      Locals:         1       0       0
  9010 ;;      Temps:          0       0       0
  9011 ;;      Totals:         1       0       0
  9012 ;;Total ram usage:        1 bytes
  9013 ;; Hardware stack levels used: 1
  9014 ;; Hardware stack levels required when called: 2
  9015 ;; This function calls:
  9016 ;;		Nothing
  9017 ;; This function is called by:
  9018 ;;		_JoystickMotor
  9019 ;; This function uses a non-reentrant model
  9020 ;;
  9021                           
  9022                           	psect	text74
  9023  000086                     __ptext74:
  9024                           	callstack 0
  9025  000086                     _MNouJoystick:
  9026                           	callstack 27
  9027                           
  9028                           ;incstack = 0
  9029                           ;MNouJoystick@posicio stored from wreg
  9030  000086  6E64               	movwf	MNouJoystick@posicio^0,c
  9031                           
  9032                           ;Menu.c: 39:     novaDireccio = posicio;
  9033  000088  C064  F050         	movff	MNouJoystick@posicio,_novaDireccio
  9034  00008C  0012               	return		;funcret
  9035  00008E                     __end_of_MNouJoystick:
  9036                           	callstack 0
  9037                           
  9038 ;; *************** function _JoystickInit *****************
  9039 ;; Defined at:
  9040 ;;		line 12 in file "Joystick.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;		None
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;		None
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  1    wreg      void 
  9047 ;; Registers used:
  9048 ;;		wreg, status,2
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMRAM   BANK0   BANK1
  9054 ;;      Params:         0       0       0
  9055 ;;      Locals:         0       0       0
  9056 ;;      Temps:          0       0       0
  9057 ;;      Totals:         0       0       0
  9058 ;;Total ram usage:        0 bytes
  9059 ;; Hardware stack levels used: 1
  9060 ;; Hardware stack levels required when called: 2
  9061 ;; This function calls:
  9062 ;;		Nothing
  9063 ;; This function is called by:
  9064 ;;		_main
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text75
  9069  001F0A                     __ptext75:
  9070                           	callstack 0
  9071  001F0A                     _JoystickInit:
  9072                           	callstack 28
  9073                           
  9074                           ;Joystick.c: 13:     ADCON0 = 0x01;
  9075                           
  9076                           ;incstack = 0
  9077  001F0A  0E01               	movlw	1
  9078  001F0C  6EC2               	movwf	194,c	;volatile
  9079                           
  9080                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  9081  001F0E  0E0D               	movlw	13
  9082  001F10  6EC1               	movwf	193,c	;volatile
  9083                           
  9084                           ;Joystick.c: 15:     ADCON2 = 0x09;
  9085  001F12  0E09               	movlw	9
  9086  001F14  6EC0               	movwf	192,c	;volatile
  9087                           
  9088                           ;Joystick.c: 16:     ADRESH = 127;
  9089  001F16  0E7F               	movlw	127
  9090  001F18  6EC4               	movwf	196,c	;volatile
  9091  001F1A  0C7F               	retlw	127	;funcret
  9092  001F1C                     __end_of_JoystickInit:
  9093                           	callstack 0
  9094                           
  9095 ;; *************** function _GLCDMotor *****************
  9096 ;; Defined at:
  9097 ;;		line 36 in file "GestioLCD.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;		None
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;		None
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMRAM   BANK0   BANK1
  9111 ;;      Params:         0       0       0
  9112 ;;      Locals:         0       0       0
  9113 ;;      Temps:          2       0       0
  9114 ;;      Totals:         2       0       0
  9115 ;;Total ram usage:        2 bytes
  9116 ;; Hardware stack levels used: 1
  9117 ;; Hardware stack levels required when called: 6
  9118 ;; This function calls:
  9119 ;;		_LcClear
  9120 ;;		_LcGotoXY
  9121 ;;		_LcLliure
  9122 ;;		_LcNewString
  9123 ;;		_LcPutChar
  9124 ;;		_TiGetTics
  9125 ;;		_TiResetTics
  9126 ;; This function is called by:
  9127 ;;		_main
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           	psect	text76
  9132  000A72                     __ptext76:
  9133                           	callstack 0
  9134  000A72                     _GLCDMotor:
  9135                           	callstack 24
  9136                           
  9137                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  9138                           
  9139                           ;incstack = 0
  9140  000A72  D10B               	goto	l5136
  9141  000A74                     l4952:
  9142                           
  9143                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  9144  000A74  0E11               	movlw	17
  9145  000A76  601A               	cpfslt	GLCDMotor@length1^0,c
  9146  000A78  D010               	goto	l4962
  9147  000A7A  A276               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9148  000A7C  D00E               	goto	l4962
  9149                           
  9150                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  9151  000A7E  0E00               	movlw	0
  9152  000A80  6E6C               	movwf	LcGotoXY@Row^0,c
  9153  000A82  EC50  F00E         	call	_LcGotoXY
  9154                           
  9155                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  9156  000A86  D932               	call	PL8	;call to abstracted procedure
  9157  000A88  6E73               	movwf	??_GLCDMotor^0,c
  9158  000A8A  C073  F067         	movff	??_GLCDMotor,LcNewString@new_s
  9159  000A8E  D933               	call	PL12	;call to abstracted procedure
  9160  000A90  ECD7  F00F         	call	_LcNewString	;wreg free
  9161                           
  9162                           ;GestioLCD.c: 53:     state = 5;
  9163  000A94  0E05               	movlw	5
  9164  000A96  6E20               	movwf	GLCDMotor@state^0,c
  9165                           
  9166                           ;GestioLCD.c: 54:    }
  9167  000A98  0C05               	retlw	5
  9168  000A9A                     l4962:
  9169  000A9A  0E10               	movlw	16
  9170  000A9C  641A               	cpfsgt	GLCDMotor@length1^0,c
  9171  000A9E  0C10               	retlw	16
  9172  000AA0  A276               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9173  000AA2  0C10               	retlw	16
  9174  000AA4                     u4480:
  9175                           
  9176                           ;GestioLCD.c: 56:     state++;
  9177  000AA4  2A20               	incf	GLCDMotor@state^0,f,c
  9178  000AA6  0012               	return	
  9179  000AA8                     l4968:
  9180                           
  9181                           ;GestioLCD.c: 60:    if (j>=16) {
  9182  000AA8  0E0F               	movlw	15
  9183  000AAA  641F               	cpfsgt	GLCDMotor@j^0,c
  9184  000AAC  D014               	goto	l4982
  9185                           
  9186                           ;GestioLCD.c: 61:     min1++;
  9187  000AAE  2A1E               	incf	GLCDMotor@min1^0,f,c
  9188                           
  9189                           ;GestioLCD.c: 62:     max1++;
  9190  000AB0  2A4E               	incf	GLCDMotor@max1^0,f,c
  9191                           
  9192                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  9193  000AB2  D91C               	call	PL8	;call to abstracted procedure
  9194  000AB4  244E               	addwf	GLCDMotor@max1^0,w,c
  9195  000AB6  6E73               	movwf	??_GLCDMotor^0,c
  9196  000AB8  D90E               	call	PL2	;call to abstracted procedure
  9197  000ABA  E101               	bnz	l4976
  9198  000ABC  6A4E               	clrf	GLCDMotor@max1^0,c
  9199  000ABE                     l4976:
  9200                           
  9201                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  9202  000ABE  D916               	call	PL8	;call to abstracted procedure
  9203  000AC0  241E               	addwf	GLCDMotor@min1^0,w,c
  9204  000AC2  6E73               	movwf	??_GLCDMotor^0,c
  9205  000AC4  D908               	call	PL2	;call to abstracted procedure
  9206  000AC6  E101               	bnz	l943
  9207  000AC8  6A1E               	clrf	GLCDMotor@min1^0,c
  9208  000ACA                     l943:
  9209                           
  9210                           ;GestioLCD.c: 65:     j=0;
  9211  000ACA  6A1F               	clrf	GLCDMotor@j^0,c
  9212                           
  9213                           ;GestioLCD.c: 66:     k1=min1;
  9214  000ACC  C01E  F01C         	movff	GLCDMotor@min1,GLCDMotor@k1
  9215                           
  9216                           ;GestioLCD.c: 67:     state = 6;
  9217  000AD0  0E06               	movlw	6
  9218  000AD2  6E20               	movwf	GLCDMotor@state^0,c
  9219                           
  9220                           ;GestioLCD.c: 68:    }
  9221  000AD4  0C06               	retlw	6
  9222  000AD6                     l4982:
  9223  000AD6  0E10               	movlw	16
  9224  000AD8  601F               	cpfslt	GLCDMotor@j^0,c
  9225  000ADA  0C10               	retlw	16
  9226                           
  9227                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  9228  000ADC  0E00               	movlw	0
  9229  000ADE  6E6C               	movwf	LcGotoXY@Row^0,c
  9230  000AE0  501F               	movf	GLCDMotor@j^0,w,c
  9231  000AE2  EC50  F00E         	call	_LcGotoXY
  9232                           
  9233                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  9234  000AE6  D902               	call	PL8	;call to abstracted procedure
  9235  000AE8  241C               	addwf	GLCDMotor@k1^0,w,c
  9236  000AEA  6E73               	movwf	??_GLCDMotor^0,c
  9237  000AEC  D8F4               	call	PL2	;call to abstracted procedure
  9238  000AEE  EC7A  F00D         	call	_LcPutChar
  9239                           
  9240                           ;GestioLCD.c: 72:     j++;
  9241  000AF2  2A1F               	incf	GLCDMotor@j^0,f,c
  9242                           
  9243                           ;GestioLCD.c: 73:     k1++;
  9244  000AF4  2A1C               	incf	GLCDMotor@k1^0,f,c
  9245                           
  9246                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  9247  000AF6  D8FA               	call	PL8	;call to abstracted procedure
  9248  000AF8  241C               	addwf	GLCDMotor@k1^0,w,c
  9249  000AFA  6E73               	movwf	??_GLCDMotor^0,c
  9250  000AFC  D8EC               	call	PL2	;call to abstracted procedure
  9251  000AFE  B4D8               	btfsc	status,2,c
  9252  000B00  6A1C               	clrf	GLCDMotor@k1^0,c
  9253  000B02  0012               	return	
  9254  000B04                     l4996:
  9255                           
  9256                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  9257  000B04  0E04               	movlw	4
  9258  000B06  6021               	cpfslt	_menuDaltGLCD^0,c
  9259  000B08  D010               	goto	u4580
  9260  000B0A  D7CC               	goto	u4480
  9261  000B0C                     u4550:
  9262                           
  9263                           ;GestioLCD.c: 82:     state = 0;
  9264  000B0C  6A20               	clrf	GLCDMotor@state^0,c
  9265  000B0E  0012               	return	
  9266  000B10                     l5004:
  9267                           
  9268                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  9269  000B10  ECDD  F00F         	call	_LcLliure	;wreg free
  9270  000B14  E306               	bnc	l5010
  9271  000B16  0E04               	movlw	4
  9272  000B18  6021               	cpfslt	_menuDaltGLCD^0,c
  9273  000B1A  D003               	goto	l5010
  9274                           
  9275                           ;GestioLCD.c: 87:     state = 7;
  9276  000B1C  0E07               	movlw	7
  9277  000B1E  6E20               	movwf	GLCDMotor@state^0,c
  9278                           
  9279                           ;GestioLCD.c: 88:    }
  9280  000B20  0C07               	retlw	7
  9281  000B22                     l5010:
  9282  000B22  ECDD  F00F         	call	_LcLliure	;wreg free
  9283  000B26  A0D8               	btfss	status,0,c
  9284  000B28  0012               	return	
  9285  000B2A                     u4580:
  9286  000B2A  0E03               	movlw	3
  9287  000B2C  6421               	cpfsgt	_menuDaltGLCD^0,c
  9288  000B2E  0C03               	retlw	3
  9289  000B30  D7ED               	goto	u4550
  9290  000B32                     l955:
  9291                           
  9292                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  9293  000B32  B076               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9294  000B34  A276               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9295  000B36  0012               	return	
  9296                           
  9297                           ;GestioLCD.c: 95:     length1 = 0;
  9298  000B38  6A1A               	clrf	GLCDMotor@length1^0,c
  9299                           
  9300                           ;GestioLCD.c: 96:     length2 = 0;
  9301  000B3A  6A19               	clrf	GLCDMotor@length2^0,c
  9302                           
  9303                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  9304  000B3C  0E00               	movlw	0
  9305  000B3E  6E6C               	movwf	LcGotoXY@Row^0,c
  9306  000B40  EC50  F00E         	call	_LcGotoXY
  9307                           
  9308                           ;GestioLCD.c: 98:     min1 = 0;
  9309  000B44  6A1E               	clrf	GLCDMotor@min1^0,c
  9310                           
  9311                           ;GestioLCD.c: 99:     max1 = 15;
  9312  000B46  0E0F               	movlw	15
  9313  000B48  6E4E               	movwf	GLCDMotor@max1^0,c
  9314                           
  9315                           ;GestioLCD.c: 100:     min2 = 0;
  9316  000B4A  6A1D               	clrf	GLCDMotor@min2^0,c
  9317                           
  9318                           ;GestioLCD.c: 101:     max2 = 15;
  9319  000B4C  0E0F               	movlw	15
  9320  000B4E  6E4D               	movwf	GLCDMotor@max2^0,c
  9321                           
  9322                           ;GestioLCD.c: 102:     j = 0;
  9323  000B50  6A1F               	clrf	GLCDMotor@j^0,c
  9324                           
  9325                           ;GestioLCD.c: 103:     k1 = 0;
  9326  000B52  6A1C               	clrf	GLCDMotor@k1^0,c
  9327                           
  9328                           ;GestioLCD.c: 104:     k2 = 0;
  9329  000B54  6A1B               	clrf	GLCDMotor@k2^0,c
  9330                           
  9331                           ;GestioLCD.c: 105:     newString = 0;
  9332  000B56  9076               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  9333  000B58  D7A5               	goto	u4480
  9334  000B5A                     l5040:
  9335                           
  9336                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  9337  000B5A  D8C8               	call	PL8	;call to abstracted procedure
  9338  000B5C  241A               	addwf	GLCDMotor@length1^0,w,c
  9339  000B5E  6E73               	movwf	??_GLCDMotor^0,c
  9340  000B60  D8BA               	call	PL2	;call to abstracted procedure
  9341  000B62  E104               	bnz	l5046
  9342  000B64  0E03               	movlw	3
  9343  000B66  6421               	cpfsgt	_menuDaltGLCD^0,c
  9344  000B68  D001               	goto	l5046
  9345  000B6A  D79C               	goto	u4480
  9346  000B6C                     l5046:
  9347  000B6C  D8BF               	call	PL8	;call to abstracted procedure
  9348  000B6E  241A               	addwf	GLCDMotor@length1^0,w,c
  9349  000B70  6E73               	movwf	??_GLCDMotor^0,c
  9350  000B72  D8B1               	call	PL2	;call to abstracted procedure
  9351  000B74  E002               	bz	l5050
  9352                           
  9353                           ;GestioLCD.c: 114:     length1++;
  9354  000B76  2A1A               	incf	GLCDMotor@length1^0,f,c
  9355                           
  9356                           ;GestioLCD.c: 115:    }
  9357  000B78  0012               	return	
  9358  000B7A                     l5050:
  9359  000B7A  0E04               	movlw	4
  9360  000B7C  6021               	cpfslt	_menuDaltGLCD^0,c
  9361  000B7E  0C04               	retlw	4
  9362  000B80  D8B5               	call	PL8	;call to abstracted procedure
  9363  000B82  241A               	addwf	GLCDMotor@length1^0,w,c
  9364  000B84  6E73               	movwf	??_GLCDMotor^0,c
  9365  000B86  D8A7               	call	PL2	;call to abstracted procedure
  9366  000B88  A4D8               	btfss	status,2,c
  9367  000B8A  0012               	return	
  9368                           
  9369                           ;GestioLCD.c: 117:     state = 13;
  9370  000B8C  0E0D               	movlw	13
  9371  000B8E  6E20               	movwf	GLCDMotor@state^0,c
  9372  000B90  0C0D               	retlw	13
  9373  000B92                     l5056:
  9374                           
  9375                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  9376  000B92  0E11               	movlw	17
  9377  000B94  6019               	cpfslt	GLCDMotor@length2^0,c
  9378  000B96  D015               	goto	l5066
  9379  000B98  A276               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9380  000B9A  D013               	goto	l5066
  9381                           
  9382                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  9383  000B9C  EC1D  F005         	call	PL36	;call to abstracted procedure
  9384  000BA0  EC50  F00E         	call	_LcGotoXY
  9385                           
  9386                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  9387  000BA4  5021               	movf	_menuDaltGLCD^0,w,c
  9388  000BA6  0D1D               	mullw	29
  9389  000BA8  CFF3 F073          	movff	prodl,??_GLCDMotor
  9390  000BAC  0E1D               	movlw	29
  9391  000BAE  2673               	addwf	??_GLCDMotor^0,f,c
  9392  000BB0  5073               	movf	??_GLCDMotor^0,w,c
  9393  000BB2  0F01               	addlw	low _menuList
  9394  000BB4  6E74               	movwf	(??_GLCDMotor+1)^0,c
  9395  000BB6  C074  F067         	movff	??_GLCDMotor+1,LcNewString@new_s
  9396  000BBA  D89D               	call	PL12	;call to abstracted procedure
  9397  000BBC  ECD7  F00F         	call	_LcNewString	;wreg free
  9398  000BC0  D771               	goto	u4480
  9399  000BC2                     l5066:
  9400  000BC2  0E10               	movlw	16
  9401  000BC4  6419               	cpfsgt	GLCDMotor@length2^0,c
  9402  000BC6  0C10               	retlw	16
  9403  000BC8  A276               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9404  000BCA  0C10               	retlw	16
  9405                           
  9406                           ;GestioLCD.c: 127:     state = 9;
  9407  000BCC  0E09               	movlw	9
  9408  000BCE  6E20               	movwf	GLCDMotor@state^0,c
  9409  000BD0  0C09               	retlw	9
  9410  000BD2                     l5072:
  9411                           
  9412                           ;GestioLCD.c: 131:    if (j<16) {
  9413  000BD2  0E10               	movlw	16
  9414  000BD4  601F               	cpfslt	GLCDMotor@j^0,c
  9415  000BD6  D014               	goto	l5086
  9416                           
  9417                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  9418  000BD8  0E01               	movlw	1
  9419  000BDA  6E6C               	movwf	LcGotoXY@Row^0,c
  9420  000BDC  501F               	movf	GLCDMotor@j^0,w,c
  9421  000BDE  EC50  F00E         	call	_LcGotoXY
  9422                           
  9423                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  9424  000BE2  D884               	call	PL8	;call to abstracted procedure
  9425  000BE4  241B               	addwf	GLCDMotor@k2^0,w,c
  9426  000BE6  D87E               	call	PL4	;call to abstracted procedure
  9427  000BE8  D876               	call	PL2	;call to abstracted procedure
  9428  000BEA  EC7A  F00D         	call	_LcPutChar
  9429                           
  9430                           ;GestioLCD.c: 134:     j++;
  9431  000BEE  2A1F               	incf	GLCDMotor@j^0,f,c
  9432                           
  9433                           ;GestioLCD.c: 135:     k2++;
  9434  000BF0  2A1B               	incf	GLCDMotor@k2^0,f,c
  9435                           
  9436                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  9437  000BF2  D87C               	call	PL8	;call to abstracted procedure
  9438  000BF4  241B               	addwf	GLCDMotor@k2^0,w,c
  9439  000BF6  D876               	call	PL4	;call to abstracted procedure
  9440  000BF8  D86E               	call	PL2	;call to abstracted procedure
  9441  000BFA  B4D8               	btfsc	status,2,c
  9442  000BFC  6A1B               	clrf	GLCDMotor@k2^0,c
  9443  000BFE  0012               	return	
  9444  000C00                     l5086:
  9445  000C00  0E0F               	movlw	15
  9446  000C02  641F               	cpfsgt	GLCDMotor@j^0,c
  9447  000C04  0C0F               	retlw	15
  9448                           
  9449                           ;GestioLCD.c: 139:     min2++;
  9450  000C06  2A1D               	incf	GLCDMotor@min2^0,f,c
  9451                           
  9452                           ;GestioLCD.c: 140:     max2++;
  9453  000C08  2A4D               	incf	GLCDMotor@max2^0,f,c
  9454                           
  9455                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  9456  000C0A  D870               	call	PL8	;call to abstracted procedure
  9457  000C0C  244D               	addwf	GLCDMotor@max2^0,w,c
  9458  000C0E  D86A               	call	PL4	;call to abstracted procedure
  9459  000C10  D862               	call	PL2	;call to abstracted procedure
  9460  000C12  E101               	bnz	l5094
  9461  000C14  6A4D               	clrf	GLCDMotor@max2^0,c
  9462  000C16                     l5094:
  9463                           
  9464                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  9465  000C16  D86A               	call	PL8	;call to abstracted procedure
  9466  000C18  241D               	addwf	GLCDMotor@min2^0,w,c
  9467  000C1A  D864               	call	PL4	;call to abstracted procedure
  9468  000C1C  D85C               	call	PL2	;call to abstracted procedure
  9469  000C1E  E101               	bnz	l973
  9470  000C20  6A1D               	clrf	GLCDMotor@min2^0,c
  9471  000C22                     l973:
  9472                           
  9473                           ;GestioLCD.c: 143:     j=0;
  9474  000C22  6A1F               	clrf	GLCDMotor@j^0,c
  9475                           
  9476                           ;GestioLCD.c: 144:     k2=min2;
  9477  000C24  C01D  F01B         	movff	GLCDMotor@min2,GLCDMotor@k2
  9478  000C28  D73D               	goto	u4480
  9479  000C2A                     l5100:
  9480                           
  9481                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  9482  000C2A  5022               	movf	_timerGLCD^0,w,c
  9483  000C2C  ECA7  F00E         	call	_TiGetTics
  9484  000C30  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  9485  000C32  D00A               	goto	l975
  9486  000C34  D865               	call	PL78	;call to abstracted procedure
  9487  000C36  E308               	bnc	l975
  9488  000C38  A076               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9489  000C3A  A276               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9490  000C3C  D005               	goto	l975
  9491                           
  9492                           ;GestioLCD.c: 150:     LcClear();
  9493  000C3E  ECF0  F00E         	call	_LcClear	;wreg free
  9494  000C42                     l5108:
  9495                           
  9496                           ;GestioLCD.c: 151:     state = 2;
  9497  000C42  0E02               	movlw	2
  9498  000C44  6E20               	movwf	GLCDMotor@state^0,c
  9499                           
  9500                           ;GestioLCD.c: 152:    }
  9501  000C46  0C02               	retlw	2
  9502  000C48                     l975:
  9503  000C48  B076               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9504  000C4A  A276               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9505  000C4C  0012               	return	
  9506                           
  9507                           ;GestioLCD.c: 154:     LcClear();
  9508  000C4E  ECF0  F00E         	call	_LcClear	;wreg free
  9509  000C52  D75C               	goto	u4550
  9510  000C54                     l5116:
  9511                           
  9512                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9513  000C54  5022               	movf	_timerGLCD^0,w,c
  9514  000C56  EC3D  F00F         	call	_TiResetTics
  9515  000C5A  D724               	goto	u4480
  9516  000C5C                     l5120:
  9517                           
  9518                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9519  000C5C  ECDD  F00F         	call	_LcLliure	;wreg free
  9520  000C60  A0D8               	btfss	status,0,c
  9521  000C62  0012               	return	
  9522                           
  9523                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9524  000C64  5022               	movf	_timerGLCD^0,w,c
  9525  000C66  EC3D  F00F         	call	_TiResetTics
  9526                           
  9527                           ;GestioLCD.c: 165:     state = 11;
  9528  000C6A  0E0B               	movlw	11
  9529  000C6C  6E20               	movwf	GLCDMotor@state^0,c
  9530  000C6E  0C0B               	retlw	11
  9531  000C70                     l5126:
  9532                           
  9533                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  9534  000C70  D83D               	call	PL8	;call to abstracted procedure
  9535  000C72  2419               	addwf	GLCDMotor@length2^0,w,c
  9536  000C74  D837               	call	PL4	;call to abstracted procedure
  9537  000C76  D82F               	call	PL2	;call to abstracted procedure
  9538  000C78  E002               	bz	l5130
  9539                           
  9540                           ;GestioLCD.c: 170:     length2++;
  9541  000C7A  2A19               	incf	GLCDMotor@length2^0,f,c
  9542                           
  9543                           ;GestioLCD.c: 171:    }
  9544  000C7C  0012               	return	
  9545  000C7E                     l5130:
  9546  000C7E  D836               	call	PL8	;call to abstracted procedure
  9547  000C80  2419               	addwf	GLCDMotor@length2^0,w,c
  9548  000C82  D830               	call	PL4	;call to abstracted procedure
  9549  000C84  D828               	call	PL2	;call to abstracted procedure
  9550  000C86  E0DD               	bz	l5108
  9551  000C88  0012               	return	
  9552  000C8A                     l5136:
  9553  000C8A  5020               	movf	GLCDMotor@state^0,w,c
  9554  000C8C  6E73               	movwf	??_GLCDMotor^0,c
  9555  000C8E  6A74               	clrf	(??_GLCDMotor+1)^0,c
  9556                           
  9557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9558                           ; Switch size 1, requested type "space"
  9559                           ; Number of cases is 1, Range of values is 0 to 0
  9560                           ; switch strategies available:
  9561                           ; Name         Instructions Cycles
  9562                           ; simple_byte            4     3 (average)
  9563                           ;	Chosen strategy is simple_byte
  9564  000C90  5074               	movf	(??_GLCDMotor+1)^0,w,c
  9565  000C92  A4D8               	btfss	status,2,c
  9566  000C94  0012               	return	
  9567                           
  9568                           ; Switch size 1, requested type "space"
  9569                           ; Number of cases is 12, Range of values is 0 to 13
  9570                           ; switch strategies available:
  9571                           ; Name         Instructions Cycles
  9572                           ; simple_byte           37    19 (average)
  9573                           ;	Chosen strategy is simple_byte
  9574  000C96  5073               	movf	??_GLCDMotor^0,w,c
  9575  000C98  E101 D74B          	bz	l955
  9576  000C9C  0A01               	xorlw	1	; case 1
  9577  000C9E  E101 D75C          	bz	l5040
  9578  000CA2  0A03               	xorlw	3	; case 2
  9579  000CA4  E101 D6E6          	bz	l4952
  9580  000CA8  0A01               	xorlw	1	; case 3
  9581  000CAA  E101 D6FD          	bz	l4968
  9582  000CAE  0A06               	xorlw	6	; case 5
  9583  000CB0  E101 D72E          	bz	l5004
  9584  000CB4  0A03               	xorlw	3	; case 6
  9585  000CB6  E101 D725          	bz	l4996
  9586  000CBA  0A01               	xorlw	1	; case 7
  9587  000CBC  E101 D769          	bz	l5056
  9588  000CC0  0A0F               	xorlw	15	; case 8
  9589  000CC2  E0CC               	bz	l5120
  9590  000CC4  0A01               	xorlw	1	; case 9
  9591  000CC6  E085               	bz	l5072
  9592  000CC8  0A03               	xorlw	3	; case 10
  9593  000CCA  E0C4               	bz	l5116
  9594  000CCC  0A01               	xorlw	1	; case 11
  9595  000CCE  E0AD               	bz	l5100
  9596  000CD0  0A06               	xorlw	6	; case 13
  9597  000CD2  E0CE               	bz	l5126
  9598  000CD4  0012               	return		;funcret
  9599  000CD6                     __end_of_GLCDMotor:
  9600                           	callstack 0
  9601  000CD6                     PL2:
  9602                           	callstack 24
  9603  000CD6  C073  FFF6         	movff	??_GLCDMotor,tblptrl
  9604  000CDA                     	if	1	;There is more than 1 active tblptr byte
  9605  000CDA  0E02               	movlw	high __smallconst
  9606  000CDC  6EF7               	movwf	tblptrh,c
  9607  000CDE                     	endif
  9608  000CDE                     	if	0	;tblptru may be non-zero
  9609  000CDE                     	endif
  9610  000CDE                     	if	0	;tblptru may be non-zero
  9611  000CDE                     	endif
  9612  000CDE  0008               	tblrd		*
  9613  000CE0  50F5               	movf	tablat,w,c
  9614  000CE2  0012               	return	
  9615  000CE4                     __end_ofPL2:
  9616                           	callstack 0
  9617  000CE4                     PL4:
  9618                           	callstack 24
  9619  000CE4  6E73               	movwf	??_GLCDMotor^0,c
  9620  000CE6  0E1D               	movlw	29
  9621  000CE8  2673               	addwf	??_GLCDMotor^0,f,c
  9622  000CEA  0C1D               	retlw	29
  9623  000CEC                     __end_ofPL4:
  9624                           	callstack 0
  9625  000CEC                     PL8:
  9626                           	callstack 24
  9627  000CEC  5021               	movf	_menuDaltGLCD^0,w,c
  9628  000CEE  0D1D               	mullw	29
  9629  000CF0  50F3               	movf	243,w,c
  9630  000CF2  0F01               	addlw	low _menuList
  9631  000CF4  0012               	return	
  9632  000CF6                     __end_ofPL8:
  9633                           	callstack 0
  9634  000CF6                     PL12:
  9635                           	callstack 24
  9636  000CF6  5067               	movf	LcNewString@new_s^0,w,c
  9637  000CF8  A4D8               	btfss	status,2,c
  9638  000CFA  0E02               	movlw	high __smallconst
  9639  000CFC  6E68               	movwf	(LcNewString@new_s+1)^0,c
  9640  000CFE  0012               	return	
  9641  000D00                     __end_ofPL12:
  9642                           	callstack 0
  9643  000D00                     PL78:
  9644                           	callstack 27
  9645  000D00  0EB5               	movlw	181
  9646  000D02  5C64               	subwf	?_TiGetTics^0,w,c
  9647  000D04  0E04               	movlw	4
  9648  000D06  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  9649  000D08  0012               	return	
  9650  000D0A                     __end_ofPL78:
  9651                           	callstack 0
  9652                           
  9653 ;; *************** function _LcPutChar *****************
  9654 ;; Defined at:
  9655 ;;		line 120 in file "LcTLCD.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;  c               1    wreg     unsigned char 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;  c               1   19[COMRAM] unsigned char 
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  1    wreg      void 
  9662 ;; Registers used:
  9663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMRAM   BANK0   BANK1
  9669 ;;      Params:         0       0       0
  9670 ;;      Locals:         1       0       0
  9671 ;;      Temps:          0       0       0
  9672 ;;      Totals:         1       0       0
  9673 ;;Total ram usage:        1 bytes
  9674 ;; Hardware stack levels used: 1
  9675 ;; Hardware stack levels required when called: 5
  9676 ;; This function calls:
  9677 ;;		_CantaData
  9678 ;;		_LcGotoXY
  9679 ;;		_WaitForBusy
  9680 ;; This function is called by:
  9681 ;;		_LcLCD
  9682 ;;		_menu
  9683 ;;		_GLCDMotor
  9684 ;;		_motorSIO
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           	psect	text77
  9689  001AF4                     __ptext77:
  9690                           	callstack 0
  9691  001AF4                     _LcPutChar:
  9692                           	callstack 24
  9693                           
  9694                           ;incstack = 0
  9695                           ;LcPutChar@c stored from wreg
  9696  001AF4  6E72               	movwf	LcPutChar@c^0,c
  9697                           
  9698                           ;LcTLCD.c: 122:  WaitForBusy(); CantaData(c);
  9699  001AF6  ECE1  F00D         	call	_WaitForBusy	;wreg free
  9700  001AFA  5072               	movf	LcPutChar@c^0,w,c
  9701  001AFC  EC00  F00E         	call	_CantaData
  9702                           
  9703                           ;LcTLCD.c: 124:  ++ColumnAct;
  9704  001B00  2A3E               	incf	_ColumnAct^0,f,c
  9705                           
  9706                           ;LcTLCD.c: 126:  if (Rows == 2) {
  9707  001B02  0E02               	movlw	2
  9708  001B04  1840               	xorwf	_Rows^0,w,c
  9709  001B06  E10C               	bnz	l4418
  9710                           
  9711                           ;LcTLCD.c: 127:   if (ColumnAct >= 40) {
  9712  001B08  0E27               	movlw	39
  9713  001B0A  643E               	cpfsgt	_ColumnAct^0,c
  9714  001B0C  D009               	goto	l4418
  9715                           
  9716                           ;LcTLCD.c: 128:    ColumnAct = 0;
  9717  001B0E  6A3E               	clrf	_ColumnAct^0,c
  9718                           
  9719                           ;LcTLCD.c: 129:    if (++RowAct >= 2) RowAct = 0;
  9720  001B10  2A3F               	incf	_RowAct^0,f,c
  9721  001B12  0E01               	movlw	1
  9722  001B14  643F               	cpfsgt	_RowAct^0,c
  9723  001B16  D001               	goto	l4416
  9724  001B18  6A3F               	clrf	_RowAct^0,c
  9725  001B1A                     l4416:
  9726                           
  9727                           ;LcTLCD.c: 130:    LcGotoXY(ColumnAct, RowAct);
  9728  001B1A  D80C               	call	PL82	;call to abstracted procedure
  9729  001B1C  EC50  F00E         	call	_LcGotoXY
  9730  001B20                     l4418:
  9731                           
  9732                           ;LcTLCD.c: 141:  if (RowAct == 1) {
  9733  001B20  043F               	decf	_RowAct^0,w,c
  9734  001B22  A4D8               	btfss	status,2,c
  9735  001B24  0012               	return	
  9736                           
  9737                           ;LcTLCD.c: 142:   if (ColumnAct >= 40) ColumnAct = 0;
  9738  001B26  0E27               	movlw	39
  9739  001B28  643E               	cpfsgt	_ColumnAct^0,c
  9740  001B2A  D001               	goto	l4424
  9741  001B2C  6A3E               	clrf	_ColumnAct^0,c
  9742  001B2E                     l4424:
  9743                           
  9744                           ;LcTLCD.c: 143:   LcGotoXY(ColumnAct, RowAct);
  9745  001B2E  D802               	call	PL82	;call to abstracted procedure
  9746  001B30  EF50  F00E         	goto	_LcGotoXY
  9747  001B34                     __end_of_LcPutChar:
  9748                           	callstack 0
  9749  001B34                     PL82:
  9750                           	callstack 24
  9751  001B34  C03F  F06C         	movff	_RowAct,LcGotoXY@Row
  9752  001B38  503E               	movf	_ColumnAct^0,w,c
  9753  001B3A  0012               	return	
  9754  001B3C                     __end_ofPL82:
  9755                           	callstack 0
  9756                           
  9757 ;; *************** function _CantaData *****************
  9758 ;; Defined at:
  9759 ;;		line 182 in file "LcTLCD.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  Data            1    wreg     unsigned char 
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;  Data            1    7[COMRAM] unsigned char 
  9764 ;; Return value:  Size  Location     Type
  9765 ;;                  1    wreg      void 
  9766 ;; Registers used:
  9767 ;;		wreg, status,2, status,0, cstack
  9768 ;; Tracked objects:
  9769 ;;		On entry : 0/0
  9770 ;;		On exit  : 0/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMRAM   BANK0   BANK1
  9773 ;;      Params:         0       0       0
  9774 ;;      Locals:         1       0       0
  9775 ;;      Temps:          0       0       0
  9776 ;;      Totals:         1       0       0
  9777 ;;Total ram usage:        1 bytes
  9778 ;; Hardware stack levels used: 1
  9779 ;; Hardware stack levels required when called: 3
  9780 ;; This function calls:
  9781 ;;		_CantaPartAlta
  9782 ;;		_CantaPartBaixa
  9783 ;; This function is called by:
  9784 ;;		_LcPutChar
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text78
  9789  001C00                     __ptext78:
  9790                           	callstack 0
  9791  001C00                     _CantaData:
  9792                           	callstack 25
  9793                           
  9794                           ;incstack = 0
  9795                           ;CantaData@Data stored from wreg
  9796  001C00  6E66               	movwf	CantaData@Data^0,c
  9797                           
  9798                           ;LcTLCD.c: 183:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9799  001C02  9694               	bcf	148,3,c	;volatile
  9800  001C04  9494               	bcf	148,2,c	;volatile
  9801  001C06  9294               	bcf	148,1,c	;volatile
  9802  001C08  9094               	bcf	148,0,c	;volatile
  9803                           
  9804                           ;LcTLCD.c: 184:  (LATCbits.LATC5 = 1);
  9805  001C0A  8A8B               	bsf	139,5,c	;volatile
  9806                           
  9807                           ;LcTLCD.c: 185:  (LATDbits.LATD7 = 0);
  9808  001C0C  9E8C               	bcf	140,7,c	;volatile
  9809                           
  9810                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9811  001C0E  888B               	bsf	139,4,c	;volatile
  9812                           
  9813                           ;LcTLCD.c: 187:  CantaPartAlta(Data);
  9814  001C10  5066               	movf	CantaData@Data^0,w,c
  9815  001C12  EC1F  F00D         	call	_CantaPartAlta
  9816                           
  9817                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 1);
  9818                           
  9819                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 0);
  9820                           
  9821                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  9822                           
  9823                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9824  001C16  D80B               	call	PL58	;call to abstracted procedure
  9825                           
  9826                           ;LcTLCD.c: 192:  CantaPartBaixa(Data);
  9827  001C18  5066               	movf	CantaData@Data^0,w,c
  9828  001C1A  ECEC  F00C         	call	_CantaPartBaixa
  9829                           
  9830                           ;LcTLCD.c: 193:  (LATCbits.LATC4 = 1);
  9831                           
  9832                           ;LcTLCD.c: 194:  (LATCbits.LATC4 = 0);
  9833                           
  9834                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9835  001C1E  D000               	goto	PL34	;call to abstracted procedure
  9836  001C20                     __end_of_CantaData:
  9837                           	callstack 0
  9838  001C20                     PL34:
  9839                           	callstack 24
  9840  001C20  888B               	bsf	139,4,c	;volatile
  9841  001C22  988B               	bcf	139,4,c	;volatile
  9842  001C24  8694               	bsf	148,3,c	;volatile
  9843  001C26  8494               	bsf	148,2,c	;volatile
  9844  001C28  8294               	bsf	148,1,c	;volatile
  9845  001C2A  8094               	bsf	148,0,c	;volatile
  9846  001C2C  0012               	return		;funcret
  9847  001C2E                     __end_ofPL34:
  9848                           	callstack 0
  9849  001C2E                     PL58:
  9850                           	callstack 24
  9851  001C2E  888B               	bsf	139,4,c	;volatile
  9852  001C30  988B               	bcf	139,4,c	;volatile
  9853  001C32  988B               	bcf	139,4,c	;volatile
  9854  001C34  888B               	bsf	139,4,c	;volatile
  9855  001C36  0012               	return	
  9856  001C38                     __end_ofPL58:
  9857                           	callstack 0
  9858                           
  9859 ;; *************** function _LcNewString *****************
  9860 ;; Defined at:
  9861 ;;		line 227 in file "LcTLCD.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9864 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
  9865 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(144), 
  9866 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  9867 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;		None
  9870 ;; Return value:  Size  Location     Type
  9871 ;;                  1    wreg      void 
  9872 ;; Registers used:
  9873 ;;		wreg, status,2, status,0
  9874 ;; Tracked objects:
  9875 ;;		On entry : 0/0
  9876 ;;		On exit  : 0/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMRAM   BANK0   BANK1
  9879 ;;      Params:         2       0       0
  9880 ;;      Locals:         0       0       0
  9881 ;;      Temps:          0       0       0
  9882 ;;      Totals:         2       0       0
  9883 ;;Total ram usage:        2 bytes
  9884 ;; Hardware stack levels used: 1
  9885 ;; Hardware stack levels required when called: 2
  9886 ;; This function calls:
  9887 ;;		Nothing
  9888 ;; This function is called by:
  9889 ;;		_menu
  9890 ;;		_GLCDMotor
  9891 ;;		_motorJoc
  9892 ;;		_motorSIO
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           	psect	text79
  9897  001FAE                     __ptext79:
  9898                           	callstack 0
  9899  001FAE                     _LcNewString:
  9900                           	callstack 27
  9901                           
  9902                           ;LcTLCD.c: 228:     s_ptr = new_s;
  9903                           
  9904                           ;incstack = 0
  9905  001FAE  C067  F00D         	movff	LcNewString@new_s,_s_ptr
  9906  001FB2  C068  F00E         	movff	LcNewString@new_s+1,_s_ptr+1
  9907                           
  9908                           ;LcTLCD.c: 229:     nou_s = 1;
  9909  001FB6  8277               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9910  001FB8  0012               	return		;funcret
  9911  001FBA                     __end_of_LcNewString:
  9912                           	callstack 0
  9913                           
  9914 ;; *************** function _LcLliure *****************
  9915 ;; Defined at:
  9916 ;;		line 243 in file "LcTLCD.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;		None
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;		None
  9921 ;; Return value:  Size  Location     Type
  9922 ;;		None               void
  9923 ;; Registers used:
  9924 ;;		status,0
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1
  9930 ;;      Params:         0       0       0
  9931 ;;      Locals:         0       0       0
  9932 ;;      Temps:          0       0       0
  9933 ;;      Totals:         0       0       0
  9934 ;;Total ram usage:        0 bytes
  9935 ;; Hardware stack levels used: 1
  9936 ;; Hardware stack levels required when called: 2
  9937 ;; This function calls:
  9938 ;;		Nothing
  9939 ;; This function is called by:
  9940 ;;		_menu
  9941 ;;		_GLCDMotor
  9942 ;;		_motorJoc
  9943 ;;		_motorSIO
  9944 ;; This function uses a non-reentrant model
  9945 ;;
  9946                           
  9947                           	psect	text80
  9948  001FBA                     __ptext80:
  9949                           	callstack 0
  9950  001FBA                     _LcLliure:
  9951                           	callstack 27
  9952                           
  9953                           ;LcTLCD.c: 244:     return !nou_s;
  9954                           
  9955                           ;incstack = 0
  9956  001FBA  A277               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9957  001FBC  D002               	goto	l4434
  9958  001FBE  90D8               	bcf	status,0,c
  9959  001FC0  0012               	return	
  9960  001FC2                     l4434:
  9961  001FC2  80D8               	bsf	status,0,c
  9962  001FC4  0012               	return		;funcret
  9963  001FC6                     __end_of_LcLliure:
  9964                           	callstack 0
  9965                           
  9966 ;; *************** function _LcClear *****************
  9967 ;; Defined at:
  9968 ;;		line 84 in file "LcTLCD.c"
  9969 ;; Parameters:    Size  Location     Type
  9970 ;;		None
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;		None
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      void 
  9975 ;; Registers used:
  9976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : 0/0
  9979 ;;		On exit  : 0/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMRAM   BANK0   BANK1
  9982 ;;      Params:         0       0       0
  9983 ;;      Locals:         0       0       0
  9984 ;;      Temps:          0       0       0
  9985 ;;      Totals:         0       0       0
  9986 ;;Total ram usage:        0 bytes
  9987 ;; Hardware stack levels used: 1
  9988 ;; Hardware stack levels required when called: 5
  9989 ;; This function calls:
  9990 ;;		_CantaIR
  9991 ;;		_Espera
  9992 ;;		_LcGotoXY
  9993 ;;		_WaitForBusy
  9994 ;; This function is called by:
  9995 ;;		_menu
  9996 ;;		_GLCDMotor
  9997 ;;		_motorSIO
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           	psect	text81
 10002  001DE0                     __ptext81:
 10003                           	callstack 0
 10004  001DE0                     _LcClear:
 10005                           	callstack 24
 10006                           
 10007                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
 10008                           
 10009                           ;incstack = 0
 10010  001DE0  ECE1  F00D         	call	_WaitForBusy	;wreg free
 10011  001DE4  0E01               	movlw	1
 10012  001DE6  EC2F  F00F         	call	_CantaIR
 10013                           
 10014                           ;LcTLCD.c: 88:  Espera(Timer, 3);
 10015  001DEA  D806               	call	PL72	;call to abstracted procedure
 10016  001DEC  EC01  F00F         	call	_Espera
 10017                           
 10018                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
 10019  001DF0  0E00               	movlw	0
 10020  001DF2  6E6C               	movwf	LcGotoXY@Row^0,c
 10021  001DF4  EF50  F00E         	goto	_LcGotoXY
 10022  001DF8                     __end_of_LcClear:
 10023                           	callstack 0
 10024  001DF8                     PL72:
 10025                           	callstack 26
 10026  001DF8  6A6C               	clrf	(Espera@ms+1)^0,c
 10027  001DFA  0E03               	movlw	3
 10028  001DFC  6E6B               	movwf	Espera@ms^0,c
 10029  001DFE  503D               	movf	_Timer^0,w,c
 10030  001E00  0012               	return	
 10031  001E02                     __end_ofPL72:
 10032                           	callstack 0
 10033                           
 10034 ;; *************** function _LcGotoXY *****************
 10035 ;; Defined at:
 10036 ;;		line 106 in file "LcTLCD.c"
 10037 ;; Parameters:    Size  Location     Type
 10038 ;;  Column          1    wreg     unsigned char 
 10039 ;;  Row             1   13[COMRAM] unsigned char 
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;  Column          1   18[COMRAM] unsigned char 
 10042 ;;  Fisics          2   14[COMRAM] int 
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  1    wreg      void 
 10045 ;; Registers used:
 10046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMRAM   BANK0   BANK1
 10052 ;;      Params:         1       0       0
 10053 ;;      Locals:         5       0       0
 10054 ;;      Temps:          0       0       0
 10055 ;;      Totals:         6       0       0
 10056 ;;Total ram usage:        6 bytes
 10057 ;; Hardware stack levels used: 1
 10058 ;; Hardware stack levels required when called: 4
 10059 ;; This function calls:
 10060 ;;		_CantaIR
 10061 ;;		_WaitForBusy
 10062 ;; This function is called by:
 10063 ;;		_LcClear
 10064 ;;		_LcPutChar
 10065 ;;		_menu
 10066 ;;		_GLCDMotor
 10067 ;;		_motorJoc
 10068 ;;		_motorSIO
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text82
 10073  001CA0                     __ptext82:
 10074                           	callstack 0
 10075  001CA0                     _LcGotoXY:
 10076                           	callstack 24
 10077                           
 10078                           ;incstack = 0
 10079                           ;LcGotoXY@Column stored from wreg
 10080  001CA0  6E71               	movwf	LcGotoXY@Column^0,c
 10081                           
 10082                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 111:  Fisics = Column + (!Row ? 0 : 0x40);
 10083  001CA2  506C               	movf	LcGotoXY@Row^0,w,c
 10084  001CA4  E004               	bz	l55
 10085  001CA6  6A70               	clrf	(_LcGotoXY$334+1)^0,c
 10086  001CA8  0E40               	movlw	64
 10087  001CAA  6E6F               	movwf	_LcGotoXY$334^0,c
 10088  001CAC  D002               	goto	l4328
 10089  001CAE                     l55:
 10090  001CAE  6A6F               	clrf	_LcGotoXY$334^0,c
 10091  001CB0  6A70               	clrf	(_LcGotoXY$334+1)^0,c
 10092  001CB2                     l4328:
 10093  001CB2  5071               	movf	LcGotoXY@Column^0,w,c
 10094  001CB4  246F               	addwf	_LcGotoXY$334^0,w,c
 10095  001CB6  6E6D               	movwf	LcGotoXY@Fisics^0,c
 10096  001CB8  0E00               	movlw	0
 10097  001CBA  2070               	addwfc	(_LcGotoXY$334+1)^0,w,c
 10098  001CBC  6E6E               	movwf	(LcGotoXY@Fisics+1)^0,c
 10099                           
 10100                           ;LcTLCD.c: 113:  WaitForBusy();
 10101  001CBE  ECE1  F00D         	call	_WaitForBusy	;wreg free
 10102                           
 10103                           ;LcTLCD.c: 114:  CantaIR(0x80 | Fisics);
 10104  001CC2  506D               	movf	LcGotoXY@Fisics^0,w,c
 10105  001CC4  0980               	iorlw	128
 10106  001CC6  EC2F  F00F         	call	_CantaIR
 10107                           
 10108                           ;LcTLCD.c: 116:  RowAct = Row;
 10109  001CCA  C06C  F03F         	movff	LcGotoXY@Row,_RowAct
 10110                           
 10111                           ;LcTLCD.c: 117:  ColumnAct = Column;
 10112  001CCE  C071  F03E         	movff	LcGotoXY@Column,_ColumnAct
 10113  001CD2  0012               	return		;funcret
 10114  001CD4                     __end_of_LcGotoXY:
 10115                           	callstack 0
 10116                           
 10117 ;; *************** function _WaitForBusy *****************
 10118 ;; Defined at:
 10119 ;;		line 198 in file "LcTLCD.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;		None
 10122 ;; Auto vars:     Size  Location     Type
 10123 ;;  Busy            1   12[COMRAM] unsigned char 
 10124 ;; Return value:  Size  Location     Type
 10125 ;;                  1    wreg      void 
 10126 ;; Registers used:
 10127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10128 ;; Tracked objects:
 10129 ;;		On entry : 0/0
 10130 ;;		On exit  : 0/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMRAM   BANK0   BANK1
 10133 ;;      Params:         0       0       0
 10134 ;;      Locals:         1       0       0
 10135 ;;      Temps:          0       0       0
 10136 ;;      Totals:         1       0       0
 10137 ;;Total ram usage:        1 bytes
 10138 ;; Hardware stack levels used: 1
 10139 ;; Hardware stack levels required when called: 3
 10140 ;; This function calls:
 10141 ;;		_TiGetTics
 10142 ;;		_TiResetTics
 10143 ;; This function is called by:
 10144 ;;		_LcInit
 10145 ;;		_LcClear
 10146 ;;		_LcGotoXY
 10147 ;;		_LcPutChar
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151                           	psect	text83
 10152  001BC2                     __ptext83:
 10153                           	callstack 0
 10154  001BC2                     _WaitForBusy:
 10155                           	callstack 25
 10156                           
 10157                           ;LcTLCD.c: 199:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10158                           
 10159                           ;incstack = 0
 10160  001BC2  8694               	bsf	148,3,c	;volatile
 10161  001BC4  8494               	bsf	148,2,c	;volatile
 10162  001BC6  8294               	bsf	148,1,c	;volatile
 10163  001BC8  8094               	bsf	148,0,c	;volatile
 10164                           
 10165                           ;LcTLCD.c: 200:  (LATCbits.LATC5 = 0);
 10166  001BCA  9A8B               	bcf	139,5,c	;volatile
 10167                           
 10168                           ;LcTLCD.c: 201:  (LATDbits.LATD7 = 1);
 10169  001BCC  8E8C               	bsf	140,7,c	;volatile
 10170                           
 10171                           ;LcTLCD.c: 202:  TiResetTics(Timer);
 10172  001BCE  503D               	movf	_Timer^0,w,c
 10173  001BD0  EC3D  F00F         	call	_TiResetTics
 10174  001BD4                     l4296:
 10175                           
 10176                           ;LcTLCD.c: 204:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10177  001BD4  888B               	bsf	139,4,c	;volatile
 10178  001BD6  888B               	bsf	139,4,c	;volatile
 10179                           
 10180                           ;LcTLCD.c: 205:   Busy = (PORTCbits.RC3);
 10181  001BD8  0E00               	movlw	0
 10182  001BDA  B682               	btfsc	130,3,c	;volatile
 10183  001BDC  0E01               	movlw	1
 10184  001BDE  6E6B               	movwf	WaitForBusy@Busy^0,c
 10185                           
 10186                           ;LcTLCD.c: 206:   (LATCbits.LATC4 = 0);
 10187  001BE0  988B               	bcf	139,4,c	;volatile
 10188                           
 10189                           ;LcTLCD.c: 207:   (LATCbits.LATC4 = 0);
 10190  001BE2  988B               	bcf	139,4,c	;volatile
 10191                           
 10192                           ;LcTLCD.c: 208:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10193  001BE4  888B               	bsf	139,4,c	;volatile
 10194  001BE6  888B               	bsf	139,4,c	;volatile
 10195                           
 10196                           ;LcTLCD.c: 210:   (LATCbits.LATC4 = 0);
 10197  001BE8  988B               	bcf	139,4,c	;volatile
 10198                           
 10199                           ;LcTLCD.c: 211:   (LATCbits.LATC4 = 0);
 10200  001BEA  988B               	bcf	139,4,c	;volatile
 10201                           
 10202                           ;LcTLCD.c: 212:   if (TiGetTics(Timer)) break;
 10203  001BEC  503D               	movf	_Timer^0,w,c
 10204  001BEE  ECA7  F00E         	call	_TiGetTics
 10205  001BF2  5064               	movf	?_TiGetTics^0,w,c
 10206  001BF4  1065               	iorwf	(?_TiGetTics+1)^0,w,c
 10207  001BF6  E001               	bz	l4318
 10208  001BF8  0012               	return	
 10209  001BFA                     l4318:
 10210                           
 10211                           ;LcTLCD.c: 213:  } while(Busy);
 10212  001BFA  506B               	movf	WaitForBusy@Busy^0,w,c
 10213  001BFC  E1EB               	bnz	l4296
 10214  001BFE  0012               	return		;funcret
 10215  001C00                     __end_of_WaitForBusy:
 10216                           	callstack 0
 10217                           
 10218 ;; *************** function _CantaIR *****************
 10219 ;; Defined at:
 10220 ;;		line 166 in file "LcTLCD.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  IR              1    wreg     unsigned char 
 10223 ;; Auto vars:     Size  Location     Type
 10224 ;;  IR              1    7[COMRAM] unsigned char 
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  1    wreg      void 
 10227 ;; Registers used:
 10228 ;;		wreg, status,2, status,0, cstack
 10229 ;; Tracked objects:
 10230 ;;		On entry : 0/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMRAM   BANK0   BANK1
 10234 ;;      Params:         0       0       0
 10235 ;;      Locals:         1       0       0
 10236 ;;      Temps:          0       0       0
 10237 ;;      Totals:         1       0       0
 10238 ;;Total ram usage:        1 bytes
 10239 ;; Hardware stack levels used: 1
 10240 ;; Hardware stack levels required when called: 3
 10241 ;; This function calls:
 10242 ;;		_CantaPartAlta
 10243 ;;		_CantaPartBaixa
 10244 ;; This function is called by:
 10245 ;;		_LcScroll
 10246 ;;		_LcInit
 10247 ;;		_LcClear
 10248 ;;		_LcGotoXY
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text84
 10253  001E5E                     __ptext84:
 10254                           	callstack 0
 10255  001E5E                     _CantaIR:
 10256                           	callstack 24
 10257                           
 10258                           ;incstack = 0
 10259                           ;CantaIR@IR stored from wreg
 10260  001E5E  6E66               	movwf	CantaIR@IR^0,c
 10261                           
 10262                           ;LcTLCD.c: 167:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10263  001E60  9694               	bcf	148,3,c	;volatile
 10264                           
 10265                           ;LcTLCD.c: 168:  (LATCbits.LATC5 = 0);
 10266                           
 10267                           ;LcTLCD.c: 169:  (LATDbits.LATD7 = 0);
 10268                           
 10269                           ;LcTLCD.c: 170:  (LATCbits.LATC4 = 1);
 10270  001E62  EC6E  F00C         	call	PL40	;call to abstracted procedure
 10271                           
 10272                           ;LcTLCD.c: 171:  CantaPartAlta(IR);
 10273  001E66  5066               	movf	CantaIR@IR^0,w,c
 10274  001E68  EC1F  F00D         	call	_CantaPartAlta
 10275                           
 10276                           ;LcTLCD.c: 172:  (LATCbits.LATC4 = 1);
 10277                           
 10278                           ;LcTLCD.c: 173:  (LATCbits.LATC4 = 0);
 10279                           
 10280                           ;LcTLCD.c: 174:  (LATCbits.LATC4 = 0);
 10281                           
 10282                           ;LcTLCD.c: 175:  (LATCbits.LATC4 = 1);
 10283  001E6C  EC17  F00E         	call	PL58	;call to abstracted procedure
 10284                           
 10285                           ;LcTLCD.c: 176:  CantaPartBaixa(IR);
 10286  001E70  5066               	movf	CantaIR@IR^0,w,c
 10287  001E72  ECEC  F00C         	call	_CantaPartBaixa
 10288                           
 10289                           ;LcTLCD.c: 177:  (LATCbits.LATC4 = 1);
 10290                           
 10291                           ;LcTLCD.c: 178:  (LATCbits.LATC4 = 0);
 10292                           
 10293                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10294  001E76  EF10  F00E         	goto	PL34	;call to abstracted procedure
 10295  001E7A                     __end_of_CantaIR:
 10296                           	callstack 0
 10297                           
 10298 ;; *************** function _CantaPartBaixa *****************
 10299 ;; Defined at:
 10300 ;;		line 159 in file "LcTLCD.c"
 10301 ;; Parameters:    Size  Location     Type
 10302 ;;  c               1    wreg     unsigned char 
 10303 ;; Auto vars:     Size  Location     Type
 10304 ;;  c               1    6[COMRAM] unsigned char 
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  1    wreg      void 
 10307 ;; Registers used:
 10308 ;;		wreg, status,2, status,0
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMRAM   BANK0   BANK1
 10314 ;;      Params:         0       0       0
 10315 ;;      Locals:         1       0       0
 10316 ;;      Temps:          1       0       0
 10317 ;;      Totals:         2       0       0
 10318 ;;Total ram usage:        2 bytes
 10319 ;; Hardware stack levels used: 1
 10320 ;; Hardware stack levels required when called: 2
 10321 ;; This function calls:
 10322 ;;		Nothing
 10323 ;; This function is called by:
 10324 ;;		_CantaIR
 10325 ;;		_CantaData
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           	psect	text85
 10330  0019D8                     __ptext85:
 10331                           	callstack 0
 10332  0019D8                     _CantaPartBaixa:
 10333                           	callstack 24
 10334                           
 10335                           ;incstack = 0
 10336                           ;CantaPartBaixa@c stored from wreg
 10337  0019D8  6E65               	movwf	CantaPartBaixa@c^0,c
 10338                           
 10339                           ;LcTLCD.c: 160:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
 10340  0019DA  A665               	btfss	CantaPartBaixa@c^0,3,c
 10341  0019DC  D003               	goto	u3670
 10342  0019DE  6A64               	clrf	??_CantaPartBaixa^0,c
 10343  0019E0  2A64               	incf	??_CantaPartBaixa^0,f,c
 10344  0019E2  D001               	goto	u3688
 10345  0019E4                     u3670:
 10346  0019E4  6A64               	clrf	??_CantaPartBaixa^0,c
 10347  0019E6                     u3688:
 10348  0019E6  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10349  0019E8  D825               	call	PL62	;call to abstracted procedure
 10350  0019EA  0BF7               	andlw	-9
 10351  0019EC  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10352  0019EE  6E8B               	movwf	139,c	;volatile
 10353                           
 10354                           ;LcTLCD.c: 161:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
 10355  0019F0  A465               	btfss	CantaPartBaixa@c^0,2,c
 10356  0019F2  D003               	goto	u3690
 10357  0019F4  6A64               	clrf	??_CantaPartBaixa^0,c
 10358  0019F6  2A64               	incf	??_CantaPartBaixa^0,f,c
 10359  0019F8  D001               	goto	u3708
 10360  0019FA                     u3690:
 10361  0019FA  6A64               	clrf	??_CantaPartBaixa^0,c
 10362  0019FC                     u3708:
 10363  0019FC  D81B               	call	PL62	;call to abstracted procedure
 10364  0019FE  0BFB               	andlw	-5
 10365  001A00  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10366  001A02  6E8B               	movwf	139,c	;volatile
 10367                           
 10368                           ;LcTLCD.c: 162:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
 10369  001A04  A265               	btfss	CantaPartBaixa@c^0,1,c
 10370  001A06  D003               	goto	u3710
 10371  001A08  6A64               	clrf	??_CantaPartBaixa^0,c
 10372  001A0A  2A64               	incf	??_CantaPartBaixa^0,f,c
 10373  001A0C  D001               	goto	u3728
 10374  001A0E                     u3710:
 10375  001A0E  6A64               	clrf	??_CantaPartBaixa^0,c
 10376  001A10                     u3728:
 10377  001A10  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10378  001A12  508B               	movf	139,w,c	;volatile
 10379  001A14  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10380  001A16  0BFD               	andlw	-3
 10381  001A18  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10382  001A1A  6E8B               	movwf	139,c	;volatile
 10383                           
 10384                           ;LcTLCD.c: 163:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
 10385  001A1C  A065               	btfss	CantaPartBaixa@c^0,0,c
 10386  001A1E  D003               	goto	u3730
 10387  001A20  6A64               	clrf	??_CantaPartBaixa^0,c
 10388  001A22  2A64               	incf	??_CantaPartBaixa^0,f,c
 10389  001A24  D001               	goto	u3748
 10390  001A26                     u3730:
 10391  001A26  6A64               	clrf	??_CantaPartBaixa^0,c
 10392  001A28                     u3748:
 10393  001A28  508B               	movf	139,w,c	;volatile
 10394  001A2A  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10395  001A2C  0BFE               	andlw	-2
 10396  001A2E  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10397  001A30  6E8B               	movwf	139,c	;volatile
 10398  001A32  0012               	return		;funcret
 10399  001A34                     __end_of_CantaPartBaixa:
 10400                           	callstack 0
 10401  001A34                     PL62:
 10402                           	callstack 24
 10403  001A34  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10404  001A36  4664               	rlncf	??_CantaPartBaixa^0,f,c
 10405  001A38  508B               	movf	139,w,c	;volatile
 10406  001A3A  1864               	xorwf	??_CantaPartBaixa^0,w,c
 10407  001A3C  0012               	return	
 10408  001A3E                     __end_ofPL62:
 10409                           	callstack 0
 10410                           
 10411 ;; *************** function _CantaPartAlta *****************
 10412 ;; Defined at:
 10413 ;;		line 152 in file "LcTLCD.c"
 10414 ;; Parameters:    Size  Location     Type
 10415 ;;  c               1    wreg     unsigned char 
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;  c               1    6[COMRAM] unsigned char 
 10418 ;; Return value:  Size  Location     Type
 10419 ;;                  1    wreg      void 
 10420 ;; Registers used:
 10421 ;;		wreg, status,2, status,0
 10422 ;; Tracked objects:
 10423 ;;		On entry : 0/0
 10424 ;;		On exit  : 0/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMRAM   BANK0   BANK1
 10427 ;;      Params:         0       0       0
 10428 ;;      Locals:         1       0       0
 10429 ;;      Temps:          1       0       0
 10430 ;;      Totals:         2       0       0
 10431 ;;Total ram usage:        2 bytes
 10432 ;; Hardware stack levels used: 1
 10433 ;; Hardware stack levels required when called: 2
 10434 ;; This function calls:
 10435 ;;		Nothing
 10436 ;; This function is called by:
 10437 ;;		_CantaIR
 10438 ;;		_CantaData
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           	psect	text86
 10443  001A3E                     __ptext86:
 10444                           	callstack 0
 10445  001A3E                     _CantaPartAlta:
 10446                           	callstack 24
 10447                           
 10448                           ;incstack = 0
 10449                           ;CantaPartAlta@c stored from wreg
 10450  001A3E  6E65               	movwf	CantaPartAlta@c^0,c
 10451                           
 10452                           ;LcTLCD.c: 153:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10453  001A40  AE65               	btfss	CantaPartAlta@c^0,7,c
 10454  001A42  D003               	goto	u3590
 10455  001A44  6A64               	clrf	??_CantaPartAlta^0,c
 10456  001A46  2A64               	incf	??_CantaPartAlta^0,f,c
 10457  001A48  D001               	goto	u3608
 10458  001A4A                     u3590:
 10459  001A4A  6A64               	clrf	??_CantaPartAlta^0,c
 10460  001A4C                     u3608:
 10461  001A4C  4664               	rlncf	??_CantaPartAlta^0,f,c
 10462  001A4E  D825               	call	PL76	;call to abstracted procedure
 10463  001A50  0BF7               	andlw	-9
 10464  001A52  1864               	xorwf	??_CantaPartAlta^0,w,c
 10465  001A54  6E8B               	movwf	139,c	;volatile
 10466                           
 10467                           ;LcTLCD.c: 154:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10468  001A56  AC65               	btfss	CantaPartAlta@c^0,6,c
 10469  001A58  D003               	goto	u3610
 10470  001A5A  6A64               	clrf	??_CantaPartAlta^0,c
 10471  001A5C  2A64               	incf	??_CantaPartAlta^0,f,c
 10472  001A5E  D001               	goto	u3628
 10473  001A60                     u3610:
 10474  001A60  6A64               	clrf	??_CantaPartAlta^0,c
 10475  001A62                     u3628:
 10476  001A62  D81B               	call	PL76	;call to abstracted procedure
 10477  001A64  0BFB               	andlw	-5
 10478  001A66  1864               	xorwf	??_CantaPartAlta^0,w,c
 10479  001A68  6E8B               	movwf	139,c	;volatile
 10480                           
 10481                           ;LcTLCD.c: 155:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10482  001A6A  AA65               	btfss	CantaPartAlta@c^0,5,c
 10483  001A6C  D003               	goto	u3630
 10484  001A6E  6A64               	clrf	??_CantaPartAlta^0,c
 10485  001A70  2A64               	incf	??_CantaPartAlta^0,f,c
 10486  001A72  D001               	goto	u3648
 10487  001A74                     u3630:
 10488  001A74  6A64               	clrf	??_CantaPartAlta^0,c
 10489  001A76                     u3648:
 10490  001A76  4664               	rlncf	??_CantaPartAlta^0,f,c
 10491  001A78  508B               	movf	139,w,c	;volatile
 10492  001A7A  1864               	xorwf	??_CantaPartAlta^0,w,c
 10493  001A7C  0BFD               	andlw	-3
 10494  001A7E  1864               	xorwf	??_CantaPartAlta^0,w,c
 10495  001A80  6E8B               	movwf	139,c	;volatile
 10496                           
 10497                           ;LcTLCD.c: 156:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10498  001A82  A865               	btfss	CantaPartAlta@c^0,4,c
 10499  001A84  D003               	goto	u3650
 10500  001A86  6A64               	clrf	??_CantaPartAlta^0,c
 10501  001A88  2A64               	incf	??_CantaPartAlta^0,f,c
 10502  001A8A  D001               	goto	u3668
 10503  001A8C                     u3650:
 10504  001A8C  6A64               	clrf	??_CantaPartAlta^0,c
 10505  001A8E                     u3668:
 10506  001A8E  508B               	movf	139,w,c	;volatile
 10507  001A90  1864               	xorwf	??_CantaPartAlta^0,w,c
 10508  001A92  0BFE               	andlw	-2
 10509  001A94  1864               	xorwf	??_CantaPartAlta^0,w,c
 10510  001A96  6E8B               	movwf	139,c	;volatile
 10511  001A98  0012               	return		;funcret
 10512  001A9A                     __end_of_CantaPartAlta:
 10513                           	callstack 0
 10514  001A9A                     PL76:
 10515                           	callstack 24
 10516  001A9A  4664               	rlncf	??_CantaPartAlta^0,f,c
 10517  001A9C  4664               	rlncf	??_CantaPartAlta^0,f,c
 10518  001A9E  508B               	movf	139,w,c	;volatile
 10519  001AA0  1864               	xorwf	??_CantaPartAlta^0,w,c
 10520  001AA2  0012               	return	
 10521  001AA4                     __end_ofPL76:
 10522                           	callstack 0
 10523                           
 10524 ;; *************** function _Espera *****************
 10525 ;; Defined at:
 10526 ;;		line 147 in file "LcTLCD.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;  Timer           1    wreg     unsigned char 
 10529 ;;  ms              2   12[COMRAM] int 
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;  Timer           1   15[COMRAM] unsigned char 
 10532 ;; Return value:  Size  Location     Type
 10533 ;;                  1    wreg      void 
 10534 ;; Registers used:
 10535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10536 ;; Tracked objects:
 10537 ;;		On entry : 0/0
 10538 ;;		On exit  : 0/0
 10539 ;;		Unchanged: 0/0
 10540 ;; Data sizes:     COMRAM   BANK0   BANK1
 10541 ;;      Params:         2       0       0
 10542 ;;      Locals:         1       0       0
 10543 ;;      Temps:          1       0       0
 10544 ;;      Totals:         4       0       0
 10545 ;;Total ram usage:        4 bytes
 10546 ;; Hardware stack levels used: 1
 10547 ;; Hardware stack levels required when called: 3
 10548 ;; This function calls:
 10549 ;;		_TiGetTics
 10550 ;;		_TiResetTics
 10551 ;; This function is called by:
 10552 ;;		_LcInit
 10553 ;;		_LcClear
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text87
 10558  001E02                     __ptext87:
 10559                           	callstack 0
 10560  001E02                     _Espera:
 10561                           	callstack 25
 10562                           
 10563                           ;incstack = 0
 10564                           ;Espera@Timer stored from wreg
 10565  001E02  6E6E               	movwf	Espera@Timer^0,c
 10566                           
 10567                           ;LcTLCD.c: 148:  TiResetTics(Timer);
 10568  001E04  506E               	movf	Espera@Timer^0,w,c
 10569  001E06  EC3D  F00F         	call	_TiResetTics
 10570  001E0A                     l4322:
 10571  001E0A  506E               	movf	Espera@Timer^0,w,c
 10572  001E0C  ECA7  F00E         	call	_TiGetTics
 10573  001E10  506B               	movf	Espera@ms^0,w,c
 10574  001E12  5C64               	subwf	?_TiGetTics^0,w,c
 10575  001E14  5065               	movf	(?_TiGetTics+1)^0,w,c
 10576  001E16  0A80               	xorlw	128
 10577  001E18  6E6D               	movwf	??_Espera^0,c
 10578  001E1A  506C               	movf	(Espera@ms+1)^0,w,c
 10579  001E1C  0A80               	xorlw	128
 10580  001E1E  586D               	subwfb	??_Espera^0,w,c
 10581  001E20  E3F4               	bnc	l4322
 10582  001E22  0012               	return		;funcret
 10583  001E24                     __end_of_Espera:
 10584                           	callstack 0
 10585                           
 10586 ;; *************** function _TiResetTics *****************
 10587 ;; Defined at:
 10588 ;;		line 55 in file "TiTTimer.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;  Handle          1    wreg     unsigned char 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;  Handle          1    5[COMRAM] unsigned char 
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      void 
 10595 ;; Registers used:
 10596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1
 10602 ;;      Params:         0       0       0
 10603 ;;      Locals:         1       0       0
 10604 ;;      Temps:          0       0       0
 10605 ;;      Totals:         1       0       0
 10606 ;;Total ram usage:        1 bytes
 10607 ;; Hardware stack levels used: 1
 10608 ;; Hardware stack levels required when called: 2
 10609 ;; This function calls:
 10610 ;;		Nothing
 10611 ;; This function is called by:
 10612 ;;		_Espera
 10613 ;;		_WaitForBusy
 10614 ;;		_SMotor
 10615 ;;		_TeTeclat
 10616 ;;		_menu
 10617 ;;		_motorAltaveu
 10618 ;;		_GLCDMotor
 10619 ;;		_motorHora
 10620 ;;		_motorSIO
 10621 ;; This function uses a non-reentrant model
 10622 ;;
 10623                           
 10624                           	psect	text88
 10625  001E7A                     __ptext88:
 10626                           	callstack 0
 10627  001E7A                     _TiResetTics:
 10628                           	callstack 27
 10629                           
 10630                           ;incstack = 0
 10631                           ;TiResetTics@Handle stored from wreg
 10632  001E7A  6E64               	movwf	TiResetTics@Handle^0,c
 10633                           
 10634                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10635  001E7C  5064               	movf	TiResetTics@Handle^0,w,c
 10636  001E7E  D805               	call	PL30	;call to abstracted procedure
 10637  001E80  C00B  FFDE         	movff	_h_Tics,postinc2
 10638  001E84  C00C  FFDD         	movff	_h_Tics+1,postdec2
 10639  001E88  0012               	return		;funcret
 10640  001E8A                     __end_of_TiResetTics:
 10641                           	callstack 0
 10642  001E8A                     PL30:
 10643                           	callstack 24
 10644  001E8A  0D03               	mullw	3
 10645  001E8C  50F3               	movf	243,w,c
 10646  001E8E  0F80               	addlw	low _s_Timers
 10647  001E90  6ED9               	movwf	fsr2l,c
 10648  001E92  6ADA               	clrf	fsr2h,c
 10649  001E94  0012               	return	
 10650  001E96                     __end_ofPL30:
 10651                           	callstack 0
 10652                           
 10653 ;; *************** function _TiGetTics *****************
 10654 ;; Defined at:
 10655 ;;		line 61 in file "TiTTimer.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;  Handle          1    wreg     unsigned char 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;  Handle          1    9[COMRAM] unsigned char 
 10660 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  2    5[COMRAM] int 
 10663 ;; Registers used:
 10664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10665 ;; Tracked objects:
 10666 ;;		On entry : 0/0
 10667 ;;		On exit  : 0/0
 10668 ;;		Unchanged: 0/0
 10669 ;; Data sizes:     COMRAM   BANK0   BANK1
 10670 ;;      Params:         2       0       0
 10671 ;;      Locals:         3       0       0
 10672 ;;      Temps:          2       0       0
 10673 ;;      Totals:         7       0       0
 10674 ;;Total ram usage:        7 bytes
 10675 ;; Hardware stack levels used: 1
 10676 ;; Hardware stack levels required when called: 2
 10677 ;; This function calls:
 10678 ;;		Nothing
 10679 ;; This function is called by:
 10680 ;;		_Espera
 10681 ;;		_WaitForBusy
 10682 ;;		_SMotor
 10683 ;;		_TeTeclat
 10684 ;;		_menu
 10685 ;;		_motorAltaveu
 10686 ;;		_GLCDMotor
 10687 ;;		_motorHora
 10688 ;;		_motorSIO
 10689 ;; This function uses a non-reentrant model
 10690 ;;
 10691                           
 10692                           	psect	text89
 10693  001D4E                     __ptext89:
 10694                           	callstack 0
 10695  001D4E                     _TiGetTics:
 10696                           	callstack 27
 10697                           
 10698                           ;incstack = 0
 10699                           ;TiGetTics@Handle stored from wreg
 10700  001D4E  6E68               	movwf	TiGetTics@Handle^0,c
 10701                           
 10702                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10703  001D50  C00B  F069         	movff	_h_Tics,TiGetTics@actual	;volatile
 10704  001D54  C00C  F06A         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10705                           
 10706                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10707  001D58  5068               	movf	TiGetTics@Handle^0,w,c
 10708  001D5A  EC45  F00F         	call	PL30	;call to abstracted procedure
 10709  001D5E  CFDE F066          	movff	postinc2,??_TiGetTics
 10710  001D62  CFDD F067          	movff	postdec2,??_TiGetTics+1
 10711  001D66  5066               	movf	??_TiGetTics^0,w,c
 10712  001D68  5C69               	subwf	TiGetTics@actual^0,w,c	;volatile
 10713  001D6A  6E64               	movwf	?_TiGetTics^0,c
 10714  001D6C  5067               	movf	(??_TiGetTics+1)^0,w,c
 10715  001D6E  586A               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10716  001D70  6E65               	movwf	(?_TiGetTics+1)^0,c
 10717  001D72  0012               	return		;funcret
 10718  001D74                     __end_of_TiGetTics:
 10719                           	callstack 0
 10720                           
 10721 ;; *************** function _GLCDInit *****************
 10722 ;; Defined at:
 10723 ;;		line 26 in file "GestioLCD.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      void 
 10730 ;; Registers used:
 10731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1
 10737 ;;      Params:         0       0       0
 10738 ;;      Locals:         0       0       0
 10739 ;;      Temps:          0       0       0
 10740 ;;      Totals:         0       0       0
 10741 ;;Total ram usage:        0 bytes
 10742 ;; Hardware stack levels used: 1
 10743 ;; Hardware stack levels required when called: 3
 10744 ;; This function calls:
 10745 ;;		_TiGetTimer
 10746 ;; This function is called by:
 10747 ;;		_main
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           	psect	text90
 10752  00008E                     __ptext90:
 10753                           	callstack 0
 10754  00008E                     _GLCDInit:
 10755                           	callstack 27
 10756                           
 10757                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 10758                           
 10759                           ;incstack = 0
 10760  00008E  EC6A  F00E         	call	_TiGetTimer	;wreg free
 10761  000092  6E22               	movwf	_timerGLCD^0,c
 10762  000094  0012               	return		;funcret
 10763  000096                     __end_of_GLCDInit:
 10764                           	callstack 0
 10765                           
 10766 ;; *************** function _TiGetTimer *****************
 10767 ;; Defined at:
 10768 ;;		line 70 in file "TiTTimer.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;		None
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;		None
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      unsigned char 
 10775 ;; Registers used:
 10776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMRAM   BANK0   BANK1
 10782 ;;      Params:         0       0       0
 10783 ;;      Locals:         0       0       0
 10784 ;;      Temps:          1       0       0
 10785 ;;      Totals:         1       0       0
 10786 ;;Total ram usage:        1 bytes
 10787 ;; Hardware stack levels used: 1
 10788 ;; Hardware stack levels required when called: 2
 10789 ;; This function calls:
 10790 ;;		Nothing
 10791 ;; This function is called by:
 10792 ;;		_LcInit
 10793 ;;		_Sinit
 10794 ;;		_TeInit
 10795 ;;		_Minit
 10796 ;;		_initAltaveu
 10797 ;;		_GLCDInit
 10798 ;;		_initHora
 10799 ;;		_initSIO
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           	psect	text91
 10804  001CD4                     __ptext91:
 10805                           	callstack 0
 10806  001CD4                     _TiGetTimer:
 10807                           	callstack 27
 10808                           
 10809                           ;TiTTimer.c: 74:     counter=0;
 10810                           
 10811                           ;incstack = 0
 10812  001CD4  6A34               	clrf	_counter^0,c
 10813                           
 10814                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10815  001CD6  D005               	goto	l4384
 10816  001CD8                     l4376:
 10817                           
 10818                           ;TiTTimer.c: 76:         counter++;
 10819  001CD8  2A34               	incf	_counter^0,f,c
 10820                           
 10821                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10822  001CDA  0E08               	movlw	8
 10823  001CDC  1834               	xorwf	_counter^0,w,c
 10824  001CDE  E101               	bnz	l4384
 10825  001CE0  0CFF               	retlw	255
 10826  001CE2                     l4384:
 10827                           
 10828                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10829  001CE2  D807               	call	PL18	;call to abstracted procedure
 10830  001CE4  04DE               	decf	postinc2,w,c
 10831  001CE6  E0F8               	bz	l4376
 10832                           
 10833                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10834  001CE8  D804               	call	PL18	;call to abstracted procedure
 10835  001CEA  0E01               	movlw	1
 10836  001CEC  6EDF               	movwf	indf2,c
 10837                           
 10838                           ;TiTTimer.c: 80:     return (counter);
 10839  001CEE  5034               	movf	_counter^0,w,c
 10840  001CF0  0012               	return		;funcret
 10841  001CF2                     __end_of_TiGetTimer:
 10842                           	callstack 0
 10843  001CF2                     PL18:
 10844                           	callstack 28
 10845  001CF2  5034               	movf	_counter^0,w,c
 10846  001CF4  0D03               	mullw	3
 10847  001CF6  50F3               	movf	243,w,c
 10848  001CF8  0F82               	addlw	low (_s_Timers+2)
 10849  001CFA  6ED9               	movwf	fsr2l,c
 10850  001CFC  6ADA               	clrf	fsr2h,c
 10851  001CFE  0012               	return	
 10852  001D00                     __end_ofPL18:
 10853                           	callstack 0
 10854                           
 10855 ;; *************** function _CtoA *****************
 10856 ;; Defined at:
 10857 ;;		line 22 in file "CtoA.c"
 10858 ;; Parameters:    Size  Location     Type
 10859 ;;		None
 10860 ;; Auto vars:     Size  Location     Type
 10861 ;;		None
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  1    wreg      void 
 10864 ;; Registers used:
 10865 ;;		wreg, status,2, status,0
 10866 ;; Tracked objects:
 10867 ;;		On entry : 0/0
 10868 ;;		On exit  : 0/0
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:     COMRAM   BANK0   BANK1
 10871 ;;      Params:         0       0       0
 10872 ;;      Locals:         0       0       0
 10873 ;;      Temps:          0       0       0
 10874 ;;      Totals:         0       0       0
 10875 ;;Total ram usage:        0 bytes
 10876 ;; Hardware stack levels used: 1
 10877 ;; Hardware stack levels required when called: 2
 10878 ;; This function calls:
 10879 ;;		Nothing
 10880 ;; This function is called by:
 10881 ;;		_main
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885                           	psect	text92
 10886  001DBC                     __ptext92:
 10887                           	callstack 0
 10888  001DBC                     _CtoA:
 10889                           	callstack 28
 10890                           
 10891                           ;CtoA.c: 23:     if (convertir != 250) {
 10892                           
 10893                           ;incstack = 0
 10894  001DBC  0EFA               	movlw	250
 10895  001DBE  1847               	xorwf	_convertir^0,w,c
 10896  001DC0  B4D8               	btfsc	status,2,c
 10897  001DC2  0012               	return	
 10898                           
 10899                           ;CtoA.c: 24:         if (convertir != 0){
 10900  001DC4  5047               	movf	_convertir^0,w,c
 10901  001DC6  E009               	bz	l3864
 10902                           
 10903                           ;CtoA.c: 25:             stringScore[1]++;
 10904  001DC8  2A5D               	incf	(_stringScore+1)^0,f,c
 10905                           
 10906                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 10907  001DCA  0E3A               	movlw	58
 10908  001DCC  185D               	xorwf	(_stringScore+1)^0,w,c
 10909  001DCE  E103               	bnz	l3862
 10910                           
 10911                           ;CtoA.c: 27:                 stringScore[1] = '0';
 10912  001DD0  0E30               	movlw	48
 10913  001DD2  6E5D               	movwf	(_stringScore+1)^0,c
 10914                           
 10915                           ;CtoA.c: 28:                 stringScore[0]++;
 10916  001DD4  2A5C               	incf	_stringScore^0,f,c
 10917  001DD6                     l3862:
 10918                           
 10919                           ;CtoA.c: 30:             convertir--;
 10920  001DD6  0647               	decf	_convertir^0,f,c
 10921                           
 10922                           ;CtoA.c: 31:         } else {
 10923  001DD8  0012               	return	
 10924  001DDA                     l3864:
 10925                           
 10926                           ;CtoA.c: 32:             convertir = 250;
 10927  001DDA  0EFA               	movlw	250
 10928  001DDC  6E47               	movwf	_convertir^0,c
 10929  001DDE  0CFA               	retlw	250	;funcret
 10930  001DE0                     __end_of_CtoA:
 10931                           	callstack 0
 10932                           
 10933 ;; *************** function _high_rsi *****************
 10934 ;; Defined at:
 10935 ;;		line 21 in file "main.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;		None
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;		None
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1    wreg      void 
 10942 ;; Registers used:
 10943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1
 10949 ;;      Params:         0       0       0
 10950 ;;      Locals:         0       0       0
 10951 ;;      Temps:          4       0       0
 10952 ;;      Totals:         4       0       0
 10953 ;;Total ram usage:        4 bytes
 10954 ;; Hardware stack levels used: 1
 10955 ;; Hardware stack levels required when called: 1
 10956 ;; This function calls:
 10957 ;;		__TiRSITimer
 10958 ;; This function is called by:
 10959 ;;		Interrupt level 2
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           	psect	intcode
 10964  000008                     __pintcode:
 10965                           	callstack 0
 10966  000008                     _high_rsi:
 10967                           	callstack 24
 10968                           
 10969                           ;incstack = 0
 10970  000008  8278               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10971  00000A  CFD9 F060          	movff	fsr2l,??_high_rsi
 10972  00000E  CFDA F061          	movff	fsr2h,??_high_rsi+1
 10973  000012  CFF3 F062          	movff	prodl,??_high_rsi+2
 10974  000016  CFF4 F063          	movff	prodh,??_high_rsi+3
 10975  00001A  EC9E  F00D         	call	__TiRSITimer	;wreg free
 10976  00001E  C063  FFF4         	movff	??_high_rsi+3,prodh
 10977  000022  C062  FFF3         	movff	??_high_rsi+2,prodl
 10978  000026  C061  FFDA         	movff	??_high_rsi+1,fsr2h
 10979  00002A  C060  FFD9         	movff	??_high_rsi,fsr2l
 10980  00002E  9278               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10981  000030  0011               	retfie		f
 10982  000032                     __end_of_high_rsi:
 10983                           	callstack 0
 10984                           
 10985 ;; *************** function __TiRSITimer *****************
 10986 ;; Defined at:
 10987 ;;		line 37 in file "TiTTimer.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;		None
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  1    wreg      void 
 10994 ;; Registers used:
 10995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1
 11001 ;;      Params:         0       0       0
 11002 ;;      Locals:         0       0       0
 11003 ;;      Temps:          1       0       0
 11004 ;;      Totals:         1       0       0
 11005 ;;Total ram usage:        1 bytes
 11006 ;; Hardware stack levels used: 1
 11007 ;; This function calls:
 11008 ;;		Nothing
 11009 ;; This function is called by:
 11010 ;;		_high_rsi
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           	psect	text94
 11015  001B3C                     __ptext94:
 11016                           	callstack 0
 11017  001B3C                     __TiRSITimer:
 11018                           	callstack 0
 11019                           
 11020                           ;TiTTimer.c: 39:     TMR0H = 223;
 11021                           
 11022                           ;incstack = 0
 11023                           
 11024                           ;TiTTimer.c: 40:     TMR0L = 148;
 11025  001B3C  D81E               	call	PL66	;call to abstracted procedure
 11026                           
 11027                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 11028  001B3E  94F2               	bcf	242,2,c	;volatile
 11029                           
 11030                           ;TiTTimer.c: 42:     h_Tics++;
 11031  001B40  4A0B               	infsnz	_h_Tics^0,f,c
 11032  001B42  2A0C               	incf	(_h_Tics+1)^0,f,c
 11033                           
 11034                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 11035  001B44  0E48               	movlw	72
 11036  001B46  5C0B               	subwf	_h_Tics^0,w,c
 11037  001B48  0EEE               	movlw	238
 11038  001B4A  580C               	subwfb	(_h_Tics+1)^0,w,c
 11039  001B4C  A0D8               	btfss	status,0,c
 11040  001B4E  0012               	return	
 11041                           
 11042                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 11043  001B50  6A34               	clrf	_counter^0,c
 11044  001B52                     i2l4682:
 11045  001B52  0E07               	movlw	7
 11046  001B54  6434               	cpfsgt	_counter^0,c
 11047  001B56  D001               	goto	i2l4686
 11048  001B58  D00D               	goto	i2l370
 11049  001B5A                     i2l4686:
 11050                           
 11051                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 11052  001B5A  EC79  F00E         	call	PL18	;call to abstracted procedure
 11053  001B5E  04DE               	decf	postinc2,w,c
 11054  001B60  E107               	bnz	i2l4690
 11055                           
 11056                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 11057  001B62  5034               	movf	_counter^0,w,c
 11058  001B64  EC45  F00F         	call	PL30	;call to abstracted procedure
 11059  001B68  500B               	movf	_h_Tics^0,w,c
 11060  001B6A  5EDE               	subwf	postinc2,f,c
 11061  001B6C  500C               	movf	(_h_Tics+1)^0,w,c
 11062  001B6E  5ADD               	subwfb	postdec2,f,c
 11063  001B70                     i2l4690:
 11064                           
 11065                           ;TiTTimer.c: 50:         }
 11066  001B70  2A34               	incf	_counter^0,f,c
 11067  001B72  D7EF               	goto	i2l4682
 11068  001B74                     i2l370:
 11069                           
 11070                           ;TiTTimer.c: 51:         h_Tics=0;
 11071  001B74  6A0B               	clrf	_h_Tics^0,c
 11072  001B76  6A0C               	clrf	(_h_Tics+1)^0,c
 11073  001B78  0012               	return		;funcret
 11074  001B7A                     __end_of__TiRSITimer:
 11075                           	callstack 0
 11076  001B7A                     PL66:
 11077                           	callstack 28
 11078  001B7A  0EDF               	movlw	223
 11079  001B7C  6ED7               	movwf	215,c	;volatile
 11080  001B7E  0E94               	movlw	148
 11081  001B80  6ED6               	movwf	214,c	;volatile
 11082  001B82  0C94               	retlw	148
 11083  001B84                     __end_ofPL66:
 11084                           	callstack 0
 11085                           
 11086                           	psect	rparam
 11087  0000                     
 11088                           	psect	temp
 11089  000078                     btemp:
 11090                           	callstack 0
 11091  000078                     	ds	1
 11092  0000                     int$flags	set	btemp
 11093  0000                     wtemp8	set	btemp+1
 11094  0000                     ttemp5	set	btemp+1
 11095  0000                     ttemp6	set	btemp+4
 11096  0000                     ttemp7	set	btemp+8
 11097                           
 11098                           	psect	idloc
 11099                           
 11100                           ;Config register IDLOC0 @ 0x200000
 11101                           ;	unspecified, using default values
 11102  200000                     	org	2097152
 11103  200000  FF                 	db	255
 11104                           
 11105                           ;Config register IDLOC1 @ 0x200001
 11106                           ;	unspecified, using default values
 11107  200001                     	org	2097153
 11108  200001  FF                 	db	255
 11109                           
 11110                           ;Config register IDLOC2 @ 0x200002
 11111                           ;	unspecified, using default values
 11112  200002                     	org	2097154
 11113  200002  FF                 	db	255
 11114                           
 11115                           ;Config register IDLOC3 @ 0x200003
 11116                           ;	unspecified, using default values
 11117  200003                     	org	2097155
 11118  200003  FF                 	db	255
 11119                           
 11120                           ;Config register IDLOC4 @ 0x200004
 11121                           ;	unspecified, using default values
 11122  200004                     	org	2097156
 11123  200004  FF                 	db	255
 11124                           
 11125                           ;Config register IDLOC5 @ 0x200005
 11126                           ;	unspecified, using default values
 11127  200005                     	org	2097157
 11128  200005  FF                 	db	255
 11129                           
 11130                           ;Config register IDLOC6 @ 0x200006
 11131                           ;	unspecified, using default values
 11132  200006                     	org	2097158
 11133  200006  FF                 	db	255
 11134                           
 11135                           ;Config register IDLOC7 @ 0x200007
 11136                           ;	unspecified, using default values
 11137  200007                     	org	2097159
 11138  200007  FF                 	db	255
 11139                           
 11140                           	psect	config
 11141                           
 11142                           ; Padding undefined space
 11143  300000                     	org	3145728
 11144  300000  FF                 	db	255
 11145                           
 11146                           ;Config register CONFIG1H @ 0x300001
 11147                           ;	Oscillator
 11148                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 11149                           ;	Fail-Safe Clock Monitor Enable bit
 11150                           ;	FCMEN = 0x0, unprogrammed default
 11151                           ;	Internal/External Oscillator Switchover bit
 11152                           ;	IESO = 0x0, unprogrammed default
 11153  300001                     	org	3145729
 11154  300001  06                 	db	6
 11155                           
 11156                           ;Config register CONFIG2L @ 0x300002
 11157                           ;	unspecified, using default values
 11158                           ;	Power-up Timer Enable bit
 11159                           ;	PWRT = 0x1, unprogrammed default
 11160                           ;	Brown-out Reset Enable bits
 11161                           ;	BOR = 0x3, unprogrammed default
 11162                           ;	Brown-out Reset Voltage bits
 11163                           ;	BORV = 0x3, unprogrammed default
 11164  300002                     	org	3145730
 11165  300002  1F                 	db	31
 11166                           
 11167                           ;Config register CONFIG2H @ 0x300003
 11168                           ;	Watchdog Timer Enable bit
 11169                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11170                           ;	Watchdog Timer Postscale Select bits
 11171                           ;	WDTPS = 0xF, unprogrammed default
 11172  300003                     	org	3145731
 11173  300003  1E                 	db	30
 11174                           
 11175                           ; Padding undefined space
 11176  300004                     	org	3145732
 11177  300004  FF                 	db	255
 11178                           
 11179                           ;Config register CONFIG3H @ 0x300005
 11180                           ;	CCP2 MUX bit
 11181                           ;	CCP2MX = 0x1, unprogrammed default
 11182                           ;	PORTB A/D Enable bit
 11183                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 11184                           ;	Low-Power Timer1 Oscillator Enable bit
 11185                           ;	LPT1OSC = 0x0, unprogrammed default
 11186                           ;	MCLR Pin Enable bit
 11187                           ;	MCLRE = 0x1, unprogrammed default
 11188  300005                     	org	3145733
 11189  300005  81                 	db	129
 11190                           
 11191                           ;Config register CONFIG4L @ 0x300006
 11192                           ;	Stack Full/Underflow Reset Enable bit
 11193                           ;	STVREN = 0x1, unprogrammed default
 11194                           ;	Single-Supply ICSP Enable bit
 11195                           ;	LVP = OFF, Single-Supply ICSP disabled
 11196                           ;	Boot Block Size Select bits
 11197                           ;	BBSIZ = 0x0, unprogrammed default
 11198                           ;	Extended Instruction Set Enable bit
 11199                           ;	XINST = 0x0, unprogrammed default
 11200                           ;	Background Debugger Enable bit
 11201                           ;	DEBUG = 0x1, unprogrammed default
 11202  300006                     	org	3145734
 11203  300006  81                 	db	129
 11204                           
 11205                           ; Padding undefined space
 11206  300007                     	org	3145735
 11207  300007  FF                 	db	255
 11208                           
 11209                           ;Config register CONFIG5L @ 0x300008
 11210                           ;	unspecified, using default values
 11211                           ;	Code Protection bit
 11212                           ;	CP0 = 0x1, unprogrammed default
 11213                           ;	Code Protection bit
 11214                           ;	CP1 = 0x1, unprogrammed default
 11215  300008                     	org	3145736
 11216  300008  03                 	db	3
 11217                           
 11218                           ;Config register CONFIG5H @ 0x300009
 11219                           ;	unspecified, using default values
 11220                           ;	Boot Block Code Protection bitProtect Boot
 11221                           ;	CPB = 0x1, unprogrammed default
 11222                           ;	Data EEPROM Code Protection bit
 11223                           ;	CPD = 0x1, unprogrammed default
 11224  300009                     	org	3145737
 11225  300009  C0                 	db	192
 11226                           
 11227                           ;Config register CONFIG6L @ 0x30000A
 11228                           ;	unspecified, using default values
 11229                           ;	Write Protection bit
 11230                           ;	WRT0 = 0x1, unprogrammed default
 11231                           ;	Write Protection bit
 11232                           ;	WRT1 = 0x1, unprogrammed default
 11233  30000A                     	org	3145738
 11234  30000A  03                 	db	3
 11235                           
 11236                           ;Config register CONFIG6H @ 0x30000B
 11237                           ;	unspecified, using default values
 11238                           ;	Configuration Register Write Protection bit
 11239                           ;	WRTC = 0x1, unprogrammed default
 11240                           ;	Boot Block Write Protection bit
 11241                           ;	WRTB = 0x1, unprogrammed default
 11242                           ;	Data EEPROM Write Protection bit
 11243                           ;	WRTD = 0x1, unprogrammed default
 11244  30000B                     	org	3145739
 11245  30000B  E0                 	db	224
 11246                           
 11247                           ;Config register CONFIG7L @ 0x30000C
 11248                           ;	unspecified, using default values
 11249                           ;	Table Read Protection bit
 11250                           ;	EBTR0 = 0x1, unprogrammed default
 11251                           ;	Table Read Protection bit
 11252                           ;	EBTR1 = 0x1, unprogrammed default
 11253  30000C                     	org	3145740
 11254  30000C  03                 	db	3
 11255                           
 11256                           ;Config register CONFIG7H @ 0x30000D
 11257                           ;	unspecified, using default values
 11258                           ;	Boot Block Table Read Protection bit
 11259                           ;	EBTRB = 0x1, unprogrammed default
 11260  30000D                     	org	3145741
 11261  30000D  40                 	db	64
 11262                           tosu	equ	0xFFF
 11263                           tosh	equ	0xFFE
 11264                           tosl	equ	0xFFD
 11265                           stkptr	equ	0xFFC
 11266                           pclatu	equ	0xFFB
 11267                           pclath	equ	0xFFA
 11268                           pcl	equ	0xFF9
 11269                           tblptru	equ	0xFF8
 11270                           tblptrh	equ	0xFF7
 11271                           tblptrl	equ	0xFF6
 11272                           tablat	equ	0xFF5
 11273                           prodh	equ	0xFF4
 11274                           prodl	equ	0xFF3
 11275                           indf0	equ	0xFEF
 11276                           postinc0	equ	0xFEE
 11277                           postdec0	equ	0xFED
 11278                           preinc0	equ	0xFEC
 11279                           plusw0	equ	0xFEB
 11280                           fsr0h	equ	0xFEA
 11281                           fsr0l	equ	0xFE9
 11282                           wreg	equ	0xFE8
 11283                           indf1	equ	0xFE7
 11284                           postinc1	equ	0xFE6
 11285                           postdec1	equ	0xFE5
 11286                           preinc1	equ	0xFE4
 11287                           plusw1	equ	0xFE3
 11288                           fsr1h	equ	0xFE2
 11289                           fsr1l	equ	0xFE1
 11290                           bsr	equ	0xFE0
 11291                           indf2	equ	0xFDF
 11292                           postinc2	equ	0xFDE
 11293                           postdec2	equ	0xFDD
 11294                           preinc2	equ	0xFDC
 11295                           plusw2	equ	0xFDB
 11296                           fsr2h	equ	0xFDA
 11297                           fsr2l	equ	0xFD9
 11298                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    157
    Data        53
    BSS         264
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     119
    BANK0           128      5      84
    BANK1           256      0     144

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 144
		 -> usuaris.password(BANK1[9]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpPassword(BANK0[9]), tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_motorSIO
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _miraPassword->_compareStrings
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->___lbdiv
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40265
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9858
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   11189
                                              0 BANK0      5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
                       _miraPassword
 ---------------------------------------------------------------------------------
 (2) _miraPassword                                         0     0      0     416
                     _compareStrings
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      22
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     916
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     500
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _compareStrings                                       5     2      3     416
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                4     4      0     396
                                              9 COMRAM     4     4      0
                            ___lbdiv
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               3     3      0    1103
                                             16 COMRAM     3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     ___lbdiv
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
     _miraPassword
       _compareStrings
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      90       6       56.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      54       4       65.6%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     16      77       1       94.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15B       7        0.0%
DATA                 0      0     15B       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 07 16:58:27 2022

               TiResetTics@Handle 0064                  _loginNOTRegister 03B7  
                               _i 002A                                 _j 0029  
                              PL2 0CD6                                PL4 0CE4  
                              PL6 1436                                PL8 0CEC  
                              l55 1CAE                  UgetUserName@quin 0066  
       ??_UcheckExistsNotFinished 0064         __size_of_llegirCharEEPROM 0010  
                             PL10 0A24                               PL20 0F48  
                             PL12 0CF6                               PL30 1E8A  
                             PL22 0F64                               PL14 1440  
                             PL40 18DC                               PL32 0A30  
                             PL24 17DC                               PL16 0F3A  
                             PL50 0A4A                               PL42 1506  
                             PL34 1C20                               PL26 0F72  
                             PL18 1CF2                               PL60 1312  
                             PL52 1BAE                               PL44 1514  
                             PL36 0A3A                               PL28 1158  
                             PL70 1522                               PL62 1A34  
                             PL54 1164                               PL46 0A40  
                             PL38 1ADA                               PL80 1BB8  
                             PL72 1DF8                               PL64 1F02  
                             PL56 0F84                               PL48 1AE8  
                             PL90 0A6A                               PL82 1B34  
                             PL74 16B6                               PL66 1B7A  
                             PL58 1C2E                               PL84 0A56  
                             PL76 1A9A                               PL68 18EA  
                             PL86 0A5C                               PL78 0D00  
                             PL88 0A62            __end_of_compareStrings 1BAE  
                             l511 033E                               l541 048E  
                             l607 071A                               l538 046C  
                             l539 047C                               l724 1D44  
                             l736 148C                               l770 0D2A  
                             l772 0D44                               l862 1764  
                             l943 0ACA                               l775 0D72  
                             l767 0D0C                               l776 0D68  
                             l768 0D1E                               l955 0B32  
                             l973 0C22                               l975 0C48  
                             l799 0E60                               u310 18CC  
                             u250 188A                               u308 18B6  
                             u270 18A0                               u328 18CE  
                             u290 18B4                               u268 188C  
                             u288 18A2                               _pos 002F  
                             _tmp 0033                  ??_CantaPartBaixa 0064  
                             prod 000FF3                               wreg 000FE8  
     __size_of_calculateShowUsers 0004                       _ultimaTecla 0053  
              __size_of_GLCDMotor 0264                              l1020 15EC  
                            l1012 152E                              l1021 1584  
                            l1013 1548                              l1022 159E  
                            l1015 156A                              l1024 15C0  
                            l1161 16D6                              l1283 10C4  
                            l1275 102E                              l3220 155E  
                            l3212 1544                              l2332 1F6E  
                            l1268 1008                              l2352 1D7E  
                            l5010 0B22                              l3250 159A  
                            l3234 1580                              l2370 1D96  
                            l5100 0C2A                              l5004 0B10  
                            l2364 1D8E                              l2358 1D86  
                            l5120 0C5C                              l5040 0B5A  
                            l3272 15D6                              l6000 0D36  
                            l4322 1E0A                              l5130 0C7E  
                            l5050 0B7A                              l3258 15B4  
                            l3282 15DA                              l6002 0D3E  
                            l2386 1F62                              l5116 0C54  
                            l5108 0C42                              l6100 0E78  
                            l6012 0D6C                              l4318 1BFA  
                            l5126 0C70                              l5046 0B6C  
                            l5230 0FE0                              l4328 1CB2  
                            l4424 1B2E                              l4416 1B1A  
                            l5072 0BD2                              l5056 0B92  
                            l5136 0C8A                              l6200 13B4  
                            l6120 0EA8                              l6032 0DB6  
                            l6024 0DA4                              l6016 0D78  
                            l5160 16EA                              l5144 16C2  
                            l5304 10F6                              l5224 0FD0  
                            l5216 0FBE                              l5208 0FAA  
                     _puntuacions 0098                              l4434 1FC2  
                            l4418 1B20                              l5066 0BC2  
                            l6114 0E9A                              l6050 0DE4  
                            l6018 0D7E                              l4506 1F7A  
                            l6220 13F0                              l6204 13C0  
                            l4604 1C94                              l4364 1B9A  
                            l6140 0EEA                              l6132 0ED8  
                            l6108 0E88                              l6044 0DD6  
                            l6028 0DA8                              l4532 1F86  
                            l7020 0916                              l7004 08DE  
                            l5340 1822                              l5324 17F6  
                            l5228 0FDA                              l5316 1118  
                            l5094 0C16                              l5086 0C00  
                            l6214 13E2                              l4702 1D16  
                            l4358 1B86                              l6118 0EA2  
                            l6070 0E1E                              l6062 0E0C  
                            l4454 1F92                              l7030 092A  
                            l7014 08F2                              l7006 08E4  
                            l5182 173A                              l5166 16FC  
                            l5158 16E6                              l5190 1748  
                            l5238 0FF0                              l4376 1CD8  
                            l4384 1CE2                              l4296 1BD4  
                            l6224 13F8                              l6208 13CA  
                            l6160 1354                              l4608 1C9C  
                            l6144 0EF2                              l6080 0E36  
                            l6048 0DDE                              l6152 0F04  
                            l5352 183A                              l5176 1724  
                            l4626 161C                              l6170 1370  
                            l6234 1408                              l4706 1D1E  
                            l5362 1854                              l5346 182E  
                            l5370 1862                              l5266 1048  
                            l6228 1402                              l6180 1386  
                            l6172 1376                              l6164 1360  
                            l6076 0E28                              l4468 1DB8  
                            l5276 1076                              l5268 104E  
                            l3862 1DD6                              l4830 12A0  
                            l4814 127A                              l4806 1262  
                            l4750 11CE                              l4742 11B0  
                            l4726 1184                              l4718 1170  
                            l6166 1364                              l6078 0E32  
                            l7038 0936                              l5374 1866  
                            l5286 10AC                              l5198 0F8E  
                            l3864 1DDA                              l4760 11F0  
                            l6192 13A2                              l4592 1C7A  
                            l4904 147A                              l6088 0E5E  
                            l6096 0E6A                              l6600 0420  
                            l6512 032C                              l5296 10D6  
                            l7072 19A6                              l4850 12CC  
                            l4818 127E                              l6194 13A6  
                            l6186 1394                              l4914 148E  
                            l6514 0332                              l4844 12C0  
                            l4836 12AA                              l4780 1218  
                            l4772 1202                              l4596 1C80  
                            l6612 0430                              l6508 0326  
                            l4854 12D4                              l4942 14DE  
                            l4926 14A8                              l6630 0458  
                            l6542 0388                              l6534 0370  
                            l6526 0354                              l4952 0A74  
                            l4936 14CA                              l6640 0478  
                            l6552 03AC                              l6544 038E  
                            l4962 0A9A                              l4794 123A  
                            l4786 122A                              l4874 12E4  
                            l4938 14D6                              l6722 0542  
                            l6570 03CA                              l6554 03B2  
                            l4796 1244                              l6740 056A  
                            l6724 0548                              l6708 0520  
                            l6492 02F2                              l4982 0AD6  
                            l4798 1248                              l6910 0734  
                            l6902 071C                              l6822 0646  
                            l6806 0628                              l6654 04A6  
                            l6558 03BA                              l5950 1786  
                            l4976 0ABE                              l4968 0AA8  
                            l4896 1468                              l6920 078E  
                            l6904 0722                              l6584 03EE  
                            l5944 177A                              l6922 0794  
                            l6914 074C                              l6850 067A  
                            l6834 0664                              l6754 0592  
                            l6682 04DC                              l6674 04CE  
                            l6666 04BE                              l6594 0412  
                            l6586 03F4                              l6498 0306  
                            l5962 17A6                              l4996 0B04  
                            l6932 07BA                              l6764 05B8  
                            l6756 0598                              l6596 0418  
                            l5964 17AA                              l5956 1792  
                            l6926 07AE                              l6862 069A  
                            l6838 0668                              l6694 04FE  
                            l6960 07FC                              l6936 07C4  
                            l6880 06C2                              l6872 06B4  
                            l6768 05D0                              l5976 17C2  
                            l5994 0D24                              l6946 07DC  
                            l6938 07CA                              l6980 0864  
                            l6956 07F4                              l6948 07E2  
                            l6788 0604                              l6982 086A  
                            l6966 0828                              l6894 06F4  
                            l6886 06D0                              l6992 08AE  
                            STR_1 02E7                              STR_2 02E0  
                            STR_3 02C7                              STR_4 02AE  
                            STR_5 029E                              STR_6 02D8  
                            STR_7 02BB                              STR_8 02D0  
                            u4000 1ACC                              _LATD 000F8C  
                            u4007 1ACA                              u4210 1224  
                            u4130 11C4                              u5030 1010  
                            u5040 1014                              u3610 1A60  
                            u4330 12B0                              u4250 1254  
                            u4340 12C6                              u3630 1A74  
                            u3710 1A0E                              u5070 108C  
                            u3608 1A4C                              u3800 1B9E  
                            u3650 1A8C                              u3730 1A26  
                            u3628 1A62                              u3708 19FC  
                            u3590 1A4A                              u3670 19E4  
                            u4550 0B0C                              u7030 0488  
                            u3648 1A76                              u3728 1A10  
                            u4480 0AA4                              u3690 19FA  
                            u7050 0496                              u3668 1A8E  
                            u3748 1A28                              u4580 0B2A  
                            u3950 1C84                              u7070 049E  
                            u3688 19E6                              u3970 16AC  
                            u6370 0D64                              u6620 1326  
                            u7420 0686                              u3990 1AB6  
                            u6550 0E94                              u7430 068C  
                            u6628 1328                              u6900 03D8  
                            u3997 1AB4                              u7570 07B6  
                            u7660 0862                              u7680 087C  
                            u6970 043E                              _CtoA 1DBC  
                 ??_SsetNovaTecla 0064            __end_of_SIOcheckKrebut 1F66  
                            _cap1 03AF                              _Rows 0040  
                            _cap2 03AE                              _main 196C  
                            _hora 0056                              _menu 02F0  
                            _nota 0026             getArrayShowUsers@quin 0066  
                 __end_of_HJugant 009C                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0078  
                 __end_of_JJuguem 2000                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 1DF8  
                            start 0032                   __end_of_CantaIR 1E7A  
                    ?_initAltaveu 005F                      ___param_bank 000000  
                     _stringScore 005C                  __end_of_GLCDInit 0096  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 00BA  
                           ?_CtoA 005F                __size_of_CToAReset 0008  
                     Espera@Timer 006E                             ?_main 005F  
                           ?_menu 005F                   __end_of___lbdiv 1CA0  
                           _EEADR 000FA9                     ??_TiInitTimer 0064  
                           _T0CON 000FD5                   ?_compareStrings 0064  
                           i2l370 1B74                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _LcLCD 1AA4                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                      ?_init_eusart 005F  
                           _TXREG 000FAD                             _SMSon 009C  
                           _TXSTA 000FAC                       _MNovaLletra 0076  
                           _Minit 007E                  __end_of_HGetTime 00BA  
                           _Sinit 006E                             _Timer 003D  
                           _Uinit 1456                   __end_of_initSIO 0046  
                           _s_ptr 000D                             _score 0010  
                           _nou_s 03B9             __end_of_JoystickMotor 1602  
                 _HActualitzaHora 1C38       __size_of_escriureCharEEPROM 0026  
                  __pbitbssCOMRAM 03A8                             tablat 000FF5  
                     _LcNewString 1FAE                     ??_TiResetTics 0064  
                 ?_SIOcheckKrebut 005F                _UshowUsersCalculat 1F7E  
                           ttemp5 0079                             ttemp6 007C  
                           ttemp7 0080                             status 000FD8  
                ?_checkHoraAcabat 005F                             wtemp8 0079  
   __size_of_UcheckExistsGetError 0004                __size_of_HNouSegon 000C  
                 ___lbdiv@divisor 0064                  __end_of_LcGotoXY 1CD4  
            CToAConverteix@numero 0064                   ___lbdiv@counter 0066  
                __end_of_LcLliure 1FC6                     ??__TiRSITimer 005F  
                __end_of_LcScroll 00AE                        _TiGetTimer 1CD4  
         EscriuPrimeraOrdre@ordre 0065                      __end_of_CtoA 1DE0  
                __end_of_JendGame 00E6                       ?_SIOendGame 005F  
                 __initialization 18F4               ?_UshowUsersCalculat 005F  
              __size_of_CantaData 0020                      __end_of_main 19D8  
          __end_of_HClearNouSegon 00BE                      __end_of_menu 0A24  
         ?_SIOHaAcabatPuntuacions 005F             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 005F                 __end_of_GLCDMotor 0CD6  
                __end_of_TeTeclat 1436                     _indexNextUser 002C  
                          ??_CtoA 0064                            ??_main 0075  
                          ??_menu 00CF                __size_of_LcPutChar 0040  
                   __activetblptr 000002                     _ultimaTeclaAD 0018  
          __size_of_JnovaDireccio 0008                  GLCDMotor@length1 001A  
                GLCDMotor@length2 0019                        _JnovaTecla 1FE8  
                __end_of_UgetTop5 1F02                            ?_LcLCD 005F  
                          ?_SMSon 005F                      ?_CToAobtenir 0064  
                          ?_Minit 005F              ??_UshowUsersCalculat 0064  
                          ?_Sinit 005F                            ?_Uinit 005F  
              __size_of_NoFerMenu 0004                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
             __end_of_TiInitTimer 1D28                            _ADRESH 000FC4  
                          _EEDATA 000FA8                         ??_HJugant 0064  
                          _EECON2 000FA7                __size_of_URegister 0004  
              __size_of_HnoJugant 0004                         ??_JJuguem 0064  
              __size_of_SiFerMenu 0004                         ??_LcClear 0072  
                       ??_CantaIR 0066                            i2l4690 1B70  
                          i2l4682 1B52                            i2l4686 1B5A  
                  LcGotoXY@Fisics 006D                    LcGotoXY@Column 0071  
                   ??_WaitForBusy 006B                __size_of_TiGetTics 0026  
                          _SPBRGH 000FB0                    _sumaPulsacions 003C  
               __end_of_CToAReset 003E                            _SMSoff 00A2  
              SIONovaDireccio@num 0064                            _LcInit 1602  
                    _MNouJoystick 0086                    _UgetNumUsuaris 00C6  
                          _SMotor 116E               escriureCharEEPROM@c 0065  
                          _TeInit 0066                            _Espera 1E02  
                    _LcGotoXY$334 006F                            _Krebut 03A8  
  __end_of_SIOHaAcabatPuntuacions 00DE                            _RowAct 003F  
                   ?_miraPassword 005F               __end_of_TiResetTics 1E8A  
                          Uinit@k 006A                  __end_of_high_rsi 0032  
                          _h_Tics 000B                   ?_HClearNouSegon 005F  
                       ??___lbdiv 0065                     ?_CToAHaAcabat 005F  
                __end_of_initHora 004E               __end_of__TiRSITimer 1B7A  
                __end_of_menuList 0292                            clear_0 193A  
                          clear_1 1946                            clear_2 1958  
                          _jugant 03AD                            _segons 0015  
                      _UenviaChar 1F2C                            isa$std 000001  
                _llegirCharEEPROM 1F3C                __size_of_UgetScore 000E  
                      UenviaPas@c 0065       __size_of_EscriuPrimeraOrdre 0064  
               __end_of_HNouSegon 1F72                         ??_initSIO 0065  
                    __pdataCOMRAM 0045            __size_of_CantaPartAlta 005C  
                __end_of_motorSIO 1158                __size_of_UenviaPas 0010  
         __end_of_HActualitzaHora 1C6C                 ??_SIONovaDireccio 0064  
                __end_of_motorJoc 1762                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  ??_CToAConverteix 0064  
              __size_of_UnewScore 000A               __size_of_SIOendGame 0004  
               __end_of_CantaData 1C20                      TeTeclat@cols 0036  
                ___lbdiv@dividend 0065                         ?_GLCDInit 005F  
                   ?_UcheckExists 005F                        __accesstop 0080  
         __end_of__initialization 195E            __end_of_UgetNumUsuaris 00CA  
               __end_of_LcPutChar 1B34                     _JnovaDireccio 1FF0  
                JnovaDireccio@dir 0064                     ___rparam_used 000001  
                  ??_miraPassword 0069                     __end_of_LcLCD 1ADA  
                     ?_TiGetTimer 005F                     __end_of_SMSon 00A2  
               SIONovaTecla@tecla 0064                    __pcstackCOMRAM 005F  
                   __end_of_Minit 0086               __end_of_WaitForBusy 1C00  
                   __end_of_Sinit 0076                     __end_of_Uinit 1506  
               __end_of_NoFerMenu 00E2                         ?_HGetTime 0064  
                    __pidataBANK0 1E96                    ??_CToAHaAcabat 0064  
            __size_of_initAltaveu 0008                 __end_of_URegister 00D6  
               __end_of_HnoJugant 00B6                 __end_of_SiFerMenu 00DA  
                      __end_ofPL2 0CE4                        __end_ofPL4 0CEC  
                      __end_ofPL6 1440                        __end_ofPL8 0CF6  
                ___lbdiv@quotient 0067                 __end_of_TiGetTics 1D74  
                     _TiInitTimer 1D00                       ?_JnovaTecla 005F  
                         ??_LcLCD 0073                           ??_SMSon 0064  
                       ?_LcGotoXY 006C                         ?_LcLliure 005F  
                         ??_Minit 0065                         ?_LcScroll 005F  
                         ??_Sinit 0065                   JnovaTecla@tecla 0064  
                         ??_Uinit 0068              __size_of_init_eusart 0016  
                       ?_JendGame 005F                    ??_UcheckExists 0064  
             MNouJoystick@posicio 0064                        ??_GLCDInit 0065  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100                         ?_TeTeclat 005F  
                     _TiResetTics 1E7A                   ?_UgetNumUsuaris 005F  
                  ?_JnovaDireccio 005F                     ??_UmotorUsers 0069  
               __end_of_UgetScore 1F5A                     ?_JoystickInit 005F  
                         ?_SMSoff 005F                           ?_LcInit 005F  
                   _CantaPartAlta 1A3E                           ?_SMotor 005F  
                         ?_TeInit 005F                           ?_Espera 006B  
               __end_of_UenviaPas 1F2C                       __TiRSITimer 1B3C  
             _indexNextUserStruct 002B                         ?_UgetTop5 005F  
               __end_of_UnewScore 1FD0                        ??_HGetTime 0066  
                   ?_UgetUserName 0064                  ??_compareStrings 0067  
                         _BAUDCON 000FB8                       ?_UenviaChar 0064  
            __size_of_playAltaveu 0004                __size_of_motorHora 0084  
          __size_of_MsetNovaTecla 0008        __end_of_calculateShowUsers 00C6  
                         LcInit@i 0070                  ?_HActualitzaHora 0064  
                      ??_LcGotoXY 006D                      ?_MNovaLletra 005F  
                      ??_LcLliure 0064                        ??_LcScroll 0067  
                ??_SIOcheckKrebut 0064               __size_of_TiGetTimer 001E  
            __size_of_CToAobtenir 0004                        ??_JendGame 0064  
                         _HJugant 0096                         ?_high_rsi 005F  
                         _JJuguem 1FF8                           _LcClear 1DE0  
                         _CantaIR 1E5E                      ?_LcNewString 0067  
                  ??_JoystickInit 0064                         ?_initHora 005F  
                      ??_TeTeclat 006B                       _WaitForBusy 1BC2  
                  ?_CantaPartAlta 005F             __end_of_SsetNovaTecla 005E  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00B4  
                         __Hparam 0000                   __size_of_SMotor 01A4  
             __size_of_JnovaTecla 0008                   __size_of_TeInit 0008  
                 __size_of_Espera 0022                           __Lparam 0000  
                      ??_UgetTop5 0064                      ??_SIOendGame 0064  
                       ?_motorSIO 005F                         ?_motorJoc 005F  
                  ??_UgetUserName 0066                 _getArrayShowUsers 1E42  
             __end_of_UmotorUsers 0F3A          ?_UcheckExistsNotFinished 005F  
                         ___lbdiv 1C6C                     ?_motorAltaveu 005F  
                    __psmallconst 0200                ?_getArrayShowUsers 0064  
                         __pcinit 18F4      __end_of_UcheckExistsGetError 00CE  
                         _ferMenu 03B1                        _init_ports 1E24  
                         __ramtop 0200                           __ptext0 196C  
                         __ptext1 0F8C                           __ptext2 1FC6  
                         __ptext3 16C0                           __ptext4 1D74  
                         __ptext5 00AE                           __ptext6 1F5A  
                         __ptext7 1FD0                           __ptext8 1FD8  
                         __ptext9 1FE0                         _T0CONbits 000FD5  
                       _GLCDMotor 0A72                         CantaIR@IR 0066  
                         _initSIO 003E                           _counter 0034  
                         _horaTmp 0041            conversorJoystick@direc 0064  
             ??_getArrayShowUsers 0066                       UenviaChar@c 0065  
            __end_of_miraPassword 1DBC        __end_of_escriureCharEEPROM 1D4E  
                LcNewString@new_s 0067                   WaitForBusy@Busy 006B  
                     Uinit@k_1175 006B                      _do_showUsers 03B4  
                         _userPtr 0009                 GLCDMostraMenu@num 0064  
              __end_of_SIOendGame 00B2                        ??_high_rsi 0060  
            __end_of_CToAHaAcabat 00EE              end_of_initialization 195E  
                         _usuaris 0100                     UgetScore@quin 0064  
                 ??_JnovaDireccio 0064                        ??_initHora 0065  
        __end_of_llegirCharEEPROM 1F4C           __size_of_CantaPartBaixa 005C  
                   __Lmediumconst 0000                   TiGetTics@Handle 0068  
                   _MsetNovaTecla 005E               __size_of_UenviaChar 0010  
               _conversorJoystick 1D74                 __end_of_motorHora 1878  
                ??_HClearNouSegon 0064                        _novaLletra 0051  
       __end_of_getArrayShowUsers 1E5E                ?_conversorJoystick 005F  
                 _usuariActualSIO 004A                        ??_motorSIO 0073  
                       _CToAReset 0036                        ??_motorJoc 0072  
                 TiGetTics@actual 0069                     ?_SIONovaTecla 005F  
                      GLCDMotor@j 001F                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 1FE0  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 006B  
        __size_of_checkHoraAcabat 000C                        _numUsuaris 002D  
            __end_of_UcheckExists 00D2                     TeTeclat@files 0035  
             ??_conversorJoystick 0064                SIOStartGame@usuari 0064  
          __size_of_JoystickMotor 00D6                     TeTeclat@state 0037  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 005F                     ?_SIOStartGame 005F  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
     __size_of_UshowUsersCalculat 000C                         _HNouSegon 1F66  
               UnewScore@scoretmp 0064                    _GLCDMostraMenu 1F96  
       __end_of_conversorJoystick 1D98                   ??_CantaPartAlta 0064  
                  ?_MsetNovaTecla 005F                         _CantaData 1C00  
               __size_of_GLCDInit 0008                       _UmotorUsers 0D0A  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 1F96  
                  __end_of_SMSoff 00A8                      ??_TiGetTimer 0064  
                  __end_of_LcInit 16B6                    ??_SIONovaTecla 0064  
                      ?_CToAReset 005F                    __end_of_SMotor 1312  
            __end_of_teclaPremuda 029E                         _LcPutChar 1AF4  
                  __end_of_TeInit 006E                 motorAltaveu@state 0023  
                  __end_of_Espera 1E24                    GLCDMotor@state 0020  
      __end_of_EscriuPrimeraOrdre 18DC                 __size_of_HGetTime 0004  
                   __pidataCOMRAM 1EB1                       ?_init_ports 005F  
                       _NoFerMenu 00DE                         _ColumnAct 003E  
            __end_of_JoystickInit 1F1C                    ??_SIOStartGame 0064  
                       _URegister 00D2                         _HnoJugant 00B2  
                    ?_TiInitTimer 005F                      ??_JnovaTecla 0064  
                       _SiFerMenu 00D6                       __end_ofPL10 0A30  
                     __end_ofPL20 0F64                       __end_ofPL12 0D00  
                     __end_ofPL30 1E96                       __end_ofPL22 0F72  
                     __end_ofPL14 1456                       __end_ofPL40 18EA  
                     __end_ofPL32 0A3A                       __end_ofPL24 17F4  
                     __end_ofPL16 0F48                       __end_ofPL50 0A56  
                     __end_ofPL42 1514                       __end_ofPL34 1C2E  
                     __end_ofPL26 0F84                       __end_ofPL18 1D00  
                     __end_ofPL60 131C                       __end_ofPL52 1BB8  
                     __end_ofPL44 1522                       __end_ofPL36 0A40  
                     __end_ofPL28 1164                       __end_ofPL70 152C  
                     __end_ofPL62 1A3E                       __end_ofPL54 116E  
                     __end_ofPL46 0A4A                       __end_ofPL38 1AE8  
                     __end_ofPL80 1BC2                       __end_ofPL72 1E02  
                     __end_ofPL64 1F0A                       __end_ofPL56 0F8C  
                     __end_ofPL48 1AF4                       __end_ofPL90 0A72  
                     __end_ofPL82 1B3C                       __end_ofPL74 16C0  
                     __end_ofPL66 1B84                       __end_ofPL58 1C38  
                     __end_ofPL84 0A5C                       __end_ofPL76 1AA4  
                     __end_ofPL68 18F4                       __end_ofPL86 0A62  
                     __end_ofPL78 0D0A                       __end_ofPL88 0A6A  
             start_initialization 18F4                         _TiGetTics 1D4E  
          __end_of_GLCDMostraMenu 1FA2                        ?_HNouSegon 005F  
                ??_UgetNumUsuaris 0064                  UmotorUsers@state 0027  
               __size_of_LcGotoXY 0034              __end_of_UgetUserName 1EF6  
              __end_of_TiGetTimer 1CF2                     JJuguem@usuari 0064  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
               __size_of_LcScroll 0006                     _JoystickMotor 152C  
               __size_of_JendGame 0004                      ?_TiResetTics 005F  
                      ?_CantaData 005F              _UcheckExistsGetError 00CA  
         __end_of_SIONovaDireccio 1FE8              __size_of_LcNewString 000C  
                        ??_SMSoff 0064                          ??_LcInit 006F  
                       _NovaTecla 0052                 __size_of_TeTeclat 011A  
                        ??_SMotor 006B        __size_of_getArrayShowUsers 001C  
                        ??_TeInit 0065                      ?__TiRSITimer 005F  
                   ??_initAltaveu 0065                          ??_Espera 006D  
                       _UgetScore 1F4C                __end_of_JnovaTecla 1FF0  
                      ?_LcPutChar 005F                         _UenviaPas 1F1C  
               __size_of_UgetTop5 000C                       __pdataBANK0 00B4  
                  motorHora@state 0014                      _menuDaltGLCD 0021  
                    ??_UenviaChar 0065                         _UnewScore 1FC6  
                      ?_NoFerMenu 005F             __size_of_miraPassword 0024  
                     ??_GLCDMotor 0073                        ?_URegister 005F  
                      ?_HnoJugant 005F                 ??_checkHoraAcabat 0064  
                   ??_init_eusart 0064                        ?_SiFerMenu 005F  
                     __pbssCOMRAM 0001             __size_of_CToAHaAcabat 0004  
                   __pcstackBANK0 00CF                        ?_TiGetTics 0064  
                 ?_GLCDMostraMenu 005F                          ?_HJugant 005F  
                  ?_JoystickMotor 005F                   ??_MsetNovaTecla 0064  
            __end_of_motorAltaveu 17DC                          ?_JJuguem 005F  
                        ?_LcClear 005F                          ?_CantaIR 005F  
      __size_of_conversorJoystick 0024                _calculateShowUsers 00C2  
                  _CantaPartBaixa 19D8          ??_SIOHaAcabatPuntuacions 0064  
           ?_UcheckExistsGetError 005F                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 005F               __size_of_init_ports 001E  
              MsetNovaTecla@tecla 0064                SsetNovaTecla@tecla 0064  
              __end_of_UenviaChar 1F3C           __size_of_CToAConverteix 000C  
               __size_of_initHora 0008             __size_of_UcheckExists 0004  
             ?_calculateShowUsers 005F                        ?_UgetScore 005F  
                     ??_CToAReset 0064                      _miraPassword 1D98  
                       __pintcode 0008                          ?___lbdiv 0064  
                   ??_playAltaveu 0064                        ?_UenviaPas 0064  
               __size_of_motorSIO 01CC                 __size_of_motorJoc 00A2  
                 CantaPartBaixa@c 0065                      _CToAHaAcabat 00EA  
             __end_of_initAltaveu 0056                        ?_UnewScore 005F  
                       _arrayZero 0045                          ?_initSIO 005F  
                     __smallconst 0200                         _convertir 0047  
                   ??_CToAobtenir 0066                    __size_of_LcLCD 0036  
                  __size_of_SMSon 0006              ??_calculateShowUsers 0064  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 1FE0                    __size_of_Sinit 0008  
                     ??_HNouSegon 0064                    __size_of_Uinit 00B0  
                     _direccioSIO 0049                       _direccioJoc 0013  
          __end_of_CantaPartBaixa 1A34                JoystickMotor@state 0017  
                        _GLCDInit 008E                       _do_register 03B5  
             __end_of_init_eusart 1EE2                         _newString 03B0  
                    _UcheckExists 00CE                         _loginText 00C7  
                       _jugantSIO 03A9          __size_of_HActualitzaHora 0034  
                       _jugantJoc 03AA                      UgetTop5@quin 0064  
                     ??_CantaData 0066                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
               ?_llegirCharEEPROM 005F                     ?_MNouJoystick 005F  
                ?_SIONovaDireccio 005F              __end_of_SIOStartGame 1FD8  
                   UenviaChar@pos 0064                _escriureCharEEPROM 1D28  
                       _novaTecla 0054                ??_llegirCharEEPROM 0064  
                   motorSIO@state 000F                          _PIR1bits 000F9E  
                     ??_LcPutChar 0072                         _timerGLCD 0022  
                       _motorHora 17F4                          _RCONbits 000FD0  
                       _reproduir 03B2                          _HGetTime 00B6  
           __size_of_JoystickInit 0012                         _timerHora 0016  
                       _timerMenu 0032               ?_escriureCharEEPROM 0064  
                     ??_NoFerMenu 0064                        _ADCON0bits 000FC2  
                     ??_URegister 0064                       ??_HnoJugant 0064  
                     ??_SiFerMenu 0064             __size_of_UgetUserName 0014  
             __end_of_playAltaveu 00C2            __size_of_SsetNovaTecla 0008  
                        Espera@ms 006B                         _zeroTecla 003A  
                        _LcGotoXY 1CA0                    _usuariLoguejat 004F  
                        _LcLliure 1FBA                       ??_TiGetTics 0066  
         __size_of_compareStrings 002A               llegirCharEEPROM@pos 0064  
            __size_of_TiInitTimer 0028                          _LcScroll 00A8  
                 ??_JoystickMotor 0065                     GLCDMotor@max1 004E  
                   GLCDMotor@max2 004D                     GLCDMotor@min1 001E  
                   GLCDMotor@min2 001D                      _teclaPremuda 0292  
                        _JendGame 00E2                         _usuariJoc 004C  
                     LcGotoXY@Row 006C                         copy_data0 1908  
                       copy_data1 1928              ??_escriureCharEEPROM 0065  
                 ?_CantaPartBaixa 005F               __end_of_CToAobtenir 00EA  
                __size_of_HJugant 0006            ??_UcheckExistsGetError 0064  
           escriureCharEEPROM@pos 0064                  __size_of_JJuguem 0008  
                __size_of_LcClear 0018                  __size_of_CantaIR 001C  
                        _TeTeclat 131C             __end_of_JnovaDireccio 1FF8  
                  ??_MNouJoystick 0064                    _do_updateScore 03B3  
 __size_of_SIOHaAcabatPuntuacions 0004                      ?_UmotorUsers 005F  
                    _JoystickInit 1F0A                        _EECON1bits 000FA6  
                    _registerText 00BC                       _indexUsuari 0030  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0010  
                   motorJoc@state 0012                          __Hrparam 0000  
                     _initAltaveu 004E                       ??_UgetScore 0064  
                        _UgetTop5 1EF6                         menu@state 002E  
                        __Lrparam 0000                        ?_motorHora 005F  
            __size_of__TiRSITimer 003E                      _UgetUserName 1EE2  
                     ??_UenviaPas 0065                  __size_of___lbdiv 0034  
                    _novaDireccio 0050                       ??_UnewScore 0064  
                    ??_init_ports 0064               HActualitzaHora@nova 0064  
      __end_of_UshowUsersCalculat 1F8A                       _init_eusart 1ECC  
                __size_of_initSIO 0008             __size_of_motorAltaveu 007A  
                    _novaTeclaJOC 004B                      _novaTeclaSIO 0048  
                 _do_check_exists 03B6                          __ptext10 00B2  
                        __ptext11 1F66                _EscriuPrimeraOrdre 1878  
                        __ptext20 1E42                          __ptext12 0096  
                        __ptext21 1F72                          __ptext13 00B6  
                        __ptext30 1F8A                          __ptext22 00C2  
                        __ptext14 00BA                          __ptext31 00CA  
                        __ptext23 1F7E                          __ptext15 17F4  
                        __ptext40 1FE8                          __ptext32 00CE  
                        __ptext24 1EE2                          __ptext16 00BE  
                        __ptext41 1FF0                          __ptext33 00D2  
                        __ptext25 1EF6                          __ptext17 1762  
                        __ptext50 1E24                          __ptext42 00E2  
                        __ptext34 00D6                          __ptext26 1F4C  
                        __ptext18 02F0                          __ptext51 1ECC  
                        __ptext43 1FF8                          __ptext35 009C  
                        __ptext27 00C6                          __ptext19 1D98  
                        __ptext60 1C6C                          __ptext52 003E  
                        __ptext44 1C38                          __ptext36 00A2  
                        __ptext28 1F1C                          __ptext61 1D00  
                        __ptext53 0046                          __ptext45 1F96  
                        __ptext37 00DA                          __ptext29 1F2C  
                        __ptext70 1AA4                          __ptext62 131C  
                        __ptext54 004E                          __ptext46 00E6  
                        __ptext38 00DE                          __ptext71 1602  
                        __ptext63 0056                          __ptext55 0D0A  
                        __ptext47 00EA                          __ptext39 00A8  
                        __ptext80 1FBA                          __ptext72 1878  
                        __ptext64 005E                          __ptext56 1D28  
                        __ptext48 1FA2                          __ptext81 1DE0  
                        __ptext73 152C                          __ptext65 0066  
                        __ptext57 1B84                          __ptext49 0036  
                        __ptext90 008E                          __ptext82 1CA0  
                        __ptext74 0086                          __ptext66 006E  
                        __ptext58 1456                          __ptext91 1CD4  
                        __ptext83 1BC2                          __ptext75 1F0A  
                        __ptext67 116E                          __ptext59 1F3C  
                        __ptext92 1DBC                          __ptext84 1E5E  
                        __ptext76 0A72                          __ptext68 0076  
                        __ptext85 19D8                          __ptext77 1AF4  
                        __ptext69 007E                          __ptext94 1B3C  
                        __ptext86 1A3E                          __ptext78 1C00  
                        __ptext87 1E02                          __ptext79 1FAE  
                        __ptext88 1E7A                          __ptext89 1D4E  
                  CantaPartAlta@c 0065                       _lletraASCII 0055  
                        _high_rsi 0008                          _copsNota 0024  
                        _s_Timers 0080                     __size_of_CtoA 0024  
                        _initHora 0046                       _lletraInici 00B4  
                        _menuDalt 0031                          _menuList 0201  
             ?_EscriuPrimeraOrdre 005F                     __size_of_main 006C  
                   __size_of_menu 0734             __end_of_CantaPartAlta 1A9A  
                  _CToAConverteix 1FA2                     CantaData@Data 0066  
                        _tiTeclat 0038                __end_of_init_ports 1E42  
                        _setSMSon 03B8                     _SsetNovaTecla 0056  
            __size_of_WaitForBusy 003E                          _nouSegon 03AC  
                        _scoreUsr 0028                          _motorSIO 0F8C  
               ??_HActualitzaHora 0065                          _motorJoc 16C0  
                 _checkHoraAcabat 1F72                          _timerSIO 0011  
                        _timerSMS 003B                          isa$xinst 000000  
                        int$flags 0078                      UenviaPas@pos 0064  
                     _playAltaveu 00BE                      _motorAltaveu 1762  
         __size_of_HClearNouSegon 0004            _SIOHaAcabatPuntuacions 00DA  
            ??_EscriuPrimeraOrdre 0064                        LcInit@rows 006F  
                ??_GLCDMostraMenu 0064             __size_of_SIONovaTecla 0008  
         _UcheckExistsNotFinished 1F8A                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0064                       _CToAobtenir 00E6  
           __size_of_SIOStartGame 0008                     ??_LcNewString 0069  
                        intlevel2 0000                      _timerAltaveu 0025  
                  _arrayShowUsers 0001            __end_of_CToAConverteix 1FAE  
                      LcPutChar@c 0072                    ?_SsetNovaTecla 005F  
               MNovaLletra@lletra 0064                   compareStrings@a 0064  
                 compareStrings@b 0065                       ??_motorHora 006B  
                    _SIONovaTecla 1FD8                       _tempsAcabat 03AB  
                     GLCDMotor@k1 001C                       GLCDMotor@k2 001B  
            __end_of_MNouJoystick 008E                      _SIOStartGame 1FD0  
                  _compareStrings 1B84                       _tmpPassword 00A2  
             __end_of_MNovaLletra 007E                   ?_CToAConverteix 005F  
           __end_of_MsetNovaTecla 0066           __end_of_checkHoraAcabat 1F7E  
                     _tmpUsername 00AB                    _SIOcheckKrebut 1F5A  
                     SMotor@state 0039           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 1FBA              __size_of_UmotorUsers 0230  
                      _SIOendGame 00AE  
