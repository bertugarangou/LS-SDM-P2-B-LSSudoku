

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 02 12:59:41 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83  0000                     
    84                           ; Version 2.32
    85                           ; Generated 02/02/2021 GMT
    86                           ; 
    87                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F4321 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataCOMRAM
   121  0018D8                     __pidataCOMRAM:
   122                           	callstack 0
   123                           
   124                           ;initializer for _lletraInici
   125  0018D8  41                 	db	65
   126  0018D9  44                 	db	68
   127  0018DA  47                 	db	71
   128  0018DB  4A                 	db	74
   129  0018DC  4D                 	db	77
   130  0018DD  50                 	db	80
   131  0018DE  54                 	db	84
   132  0018DF  57                 	db	87
   133  0018E0  00                 	db	0
   134                           
   135                           ;initializer for _loginText
   136  0018E1  31                 	db	49
   137  0018E2  2E                 	db	46
   138  0018E3  4C                 	db	76
   139  0018E4  4F                 	db	79
   140  0018E5  47                 	db	71
   141  0018E6  49                 	db	73
   142  0018E7  4E                 	db	78
   143  0018E8  00                 	db	0
   144                           
   145                           ;initializer for _hora
   146  0018E9  33                 	db	51
   147  0018EA  30                 	db	48
   148  0018EB  3A                 	db	58
   149  0018EC  30                 	db	48
   150  0018ED  30                 	db	48
   151  0018EE  00                 	db	0
   152                           
   153                           ;initializer for GLCDMotor@max2
   154  0018EF  0F                 	db	15
   155                           
   156                           ;initializer for GLCDMotor@max1
   157  0018F0  0F                 	db	15
   158                           
   159                           ;initializer for _usuariLoguejat
   160  0018F1  FF                 	db	255
   161                           
   162                           ;initializer for _novaDireccio
   163  0018F2  FF                 	db	255
   164                           
   165                           ;initializer for _novaLletra
   166  0018F3  FF                 	db	255
   167                           
   168                           ;initializer for _NovaTecla
   169  0018F4  FF                 	db	255
   170                           
   171                           ;initializer for _ultimaTecla
   172  0018F5  FF                 	db	255
   173                           
   174                           ;initializer for _timerSMS
   175  0018F6  FF                 	db	255
   176                           
   177                           ;initializer for _novaTecla
   178  0018F7  FF                 	db	255
   179                           
   180                           ;initializer for _lletraASCII
   181  0018F8  FF                 	db	255
   182                           
   183                           	psect	idataBANK0
   184  001932                     __pidataBANK0:
   185                           	callstack 0
   186                           
   187                           ;initializer for _registerText
   188  001932  32                 	db	50
   189  001933  2E                 	db	46
   190  001934  52                 	db	82
   191  001935  45                 	db	69
   192  001936  47                 	db	71
   193  001937  49                 	db	73
   194  001938  53                 	db	83
   195  001939  54                 	db	84
   196  00193A  45                 	db	69
   197  00193B  52                 	db	82
   198  00193C  00                 	db	0
   199                           
   200                           ;initializer for _teclaPremuda
   201  00193D  01                 	db	1
   202  00193E  02                 	db	2
   203  00193F  03                 	db	3
   204  001940  04                 	db	4
   205  001941  05                 	db	5
   206  001942  06                 	db	6
   207  001943  07                 	db	7
   208  001944  08                 	db	8
   209  001945  09                 	db	9
   210  001946  0A                 	db	10
   211  001947  00                 	db	0
   212  001948  0B                 	db	11
   213                           
   214                           	psect	smallconst
   215  000200                     __psmallconst:
   216                           	callstack 0
   217  000200  00                 	db	0
   218  000201                     _menuList:
   219                           	callstack 0
   220  000201  31                 	db	49
   221  000202  2E                 	db	46
   222  000203  50                 	db	80
   223  000204  6C                 	db	108
   224  000205  61                 	db	97
   225  000206  79                 	db	121
   226  000207  20                 	db	32
   227  000208  61                 	db	97
   228  000209  20                 	db	32
   229  00020A  47                 	db	71
   230  00020B  61                 	db	97
   231  00020C  6D                 	db	109
   232  00020D  65                 	db	101
   233  00020E  00                 	db	0
   234  00020F  00                 	db	0
   235  000210  00                 	db	0
   236  000211  00                 	db	0
   237  000212  00                 	db	0
   238  000213  00                 	db	0
   239  000214  00                 	db	0
   240  000215  00                 	db	0
   241  000216  00                 	db	0
   242  000217  00                 	db	0
   243  000218  00                 	db	0
   244  000219  00                 	db	0
   245  00021A  00                 	db	0
   246  00021B  00                 	db	0
   247  00021C  00                 	db	0
   248  00021D  00                 	db	0
   249  00021E  32                 	db	50
   250  00021F  2E                 	db	46
   251  000220  4D                 	db	77
   252  000221  6F                 	db	111
   253  000222  64                 	db	100
   254  000223  69                 	db	105
   255  000224  66                 	db	102
   256  000225  79                 	db	121
   257  000226  20                 	db	32
   258  000227  54                 	db	84
   259  000228  69                 	db	105
   260  000229  6D                 	db	109
   261  00022A  65                 	db	101
   262  00022B  00                 	db	0
   263  00022C  00                 	db	0
   264  00022D  00                 	db	0
   265  00022E  00                 	db	0
   266  00022F  00                 	db	0
   267  000230  00                 	db	0
   268  000231  00                 	db	0
   269  000232  00                 	db	0
   270  000233  00                 	db	0
   271  000234  00                 	db	0
   272  000235  00                 	db	0
   273  000236  00                 	db	0
   274  000237  00                 	db	0
   275  000238  00                 	db	0
   276  000239  00                 	db	0
   277  00023A  00                 	db	0
   278  00023B  33                 	db	51
   279  00023C  2E                 	db	46
   280  00023D  53                 	db	83
   281  00023E  68                 	db	104
   282  00023F  6F                 	db	111
   283  000240  77                 	db	119
   284  000241  20                 	db	32
   285  000242  47                 	db	71
   286  000243  65                 	db	101
   287  000244  6E                 	db	110
   288  000245  65                 	db	101
   289  000246  72                 	db	114
   290  000247  61                 	db	97
   291  000248  6C                 	db	108
   292  000249  20                 	db	32
   293  00024A  54                 	db	84
   294  00024B  6F                 	db	111
   295  00024C  70                 	db	112
   296  00024D  20                 	db	32
   297  00024E  35                 	db	53
   298  00024F  20                 	db	32
   299  000250  53                 	db	83
   300  000251  63                 	db	99
   301  000252  6F                 	db	111
   302  000253  72                 	db	114
   303  000254  65                 	db	101
   304  000255  73                 	db	115
   305  000256  20                 	db	32
   306  000257  00                 	db	0
   307  000258  34                 	db	52
   308  000259  2E                 	db	46
   309  00025A  4C                 	db	76
   310  00025B  6F                 	db	111
   311  00025C  67                 	db	103
   312  00025D  6F                 	db	111
   313  00025E  75                 	db	117
   314  00025F  74                 	db	116
   315  000260  00                 	db	0
   316  000261  00                 	db	0
   317  000262  00                 	db	0
   318  000263  00                 	db	0
   319  000264  00                 	db	0
   320  000265  00                 	db	0
   321  000266  00                 	db	0
   322  000267  00                 	db	0
   323  000268  00                 	db	0
   324  000269  00                 	db	0
   325  00026A  00                 	db	0
   326  00026B  00                 	db	0
   327  00026C  00                 	db	0
   328  00026D  00                 	db	0
   329  00026E  00                 	db	0
   330  00026F  00                 	db	0
   331  000270  00                 	db	0
   332  000271  00                 	db	0
   333  000272  00                 	db	0
   334  000273  00                 	db	0
   335  000274  00                 	db	0
   336  000275  35                 	db	53
   337  000276  2E                 	db	46
   338  000277  53                 	db	83
   339  000278  68                 	db	104
   340  000279  6F                 	db	111
   341  00027A  77                 	db	119
   342  00027B  20                 	db	32
   343  00027C  41                 	db	65
   344  00027D  6C                 	db	108
   345  00027E  6C                 	db	108
   346  00027F  20                 	db	32
   347  000280  55                 	db	85
   348  000281  73                 	db	115
   349  000282  65                 	db	101
   350  000283  72                 	db	114
   351  000284  73                 	db	115
   352  000285  00                 	db	0
   353  000286  00                 	db	0
   354  000287  00                 	db	0
   355  000288  00                 	db	0
   356  000289  00                 	db	0
   357  00028A  00                 	db	0
   358  00028B  00                 	db	0
   359  00028C  00                 	db	0
   360  00028D  00                 	db	0
   361  00028E  00                 	db	0
   362  00028F  00                 	db	0
   363  000290  00                 	db	0
   364  000291  00                 	db	0
   365  000292                     __end_of_menuList:
   366                           	callstack 0
   367  0000                     _ADCON0bits	set	4034
   368  0000                     _ADRESH	set	4036
   369  0000                     _ADCON2	set	4032
   370  0000                     _ADCON1	set	4033
   371  0000                     _ADCON0	set	4034
   372  0000                     _EECON2	set	4007
   373  0000                     _EEDATA	set	4008
   374  0000                     _EEADR	set	4009
   375  0000                     _T0CONbits	set	4053
   376  0000                     _TMR0L	set	4054
   377  0000                     _TMR0H	set	4055
   378  0000                     _T0CON	set	4053
   379  0000                     _INTCONbits	set	4082
   380  0000                     _RCONbits	set	4048
   381  0000                     _PORTDbits	set	3971
   382  0000                     _EECON1bits	set	4006
   383  0000                     _LATD	set	3980
   384  0000                     _TRISD	set	3989
   385  0000                     _TRISC	set	3988
   386  0000                     _LATBbits	set	3978
   387  0000                     _TRISB	set	3987
   388  0000                     _TRISA	set	3986
   389  0000                     _PORTCbits	set	3970
   390  0000                     _LATDbits	set	3980
   391  0000                     _LATCbits	set	3979
   392  0000                     _TRISDbits	set	3989
   393  0000                     _TRISCbits	set	3988
   394  000292                     STR_6:
   395  000292  4D                 	db	77	;'M'
   396  000293  6F                 	db	111	;'o'
   397  000294  64                 	db	100	;'d'
   398  000295  69                 	db	105	;'i'
   399  000296  66                 	db	102	;'f'
   400  000297  79                 	db	121	;'y'
   401  000298  20                 	db	32
   402  000299  54                 	db	84	;'T'
   403  00029A  69                 	db	105	;'i'
   404  00029B  6D                 	db	109	;'m'
   405  00029C  65                 	db	101	;'e'
   406  00029D  3A                 	db	58	;':'
   407  00029E  00                 	db	0
   408  00029F                     STR_2:
   409  00029F  32                 	db	50	;'2'
   410  0002A0  2E                 	db	46
   411  0002A1  52                 	db	82	;'R'
   412  0002A2  45                 	db	69	;'E'
   413  0002A3  47                 	db	71	;'G'
   414  0002A4  49                 	db	73	;'I'
   415  0002A5  53                 	db	83	;'S'
   416  0002A6  54                 	db	84	;'T'
   417  0002A7  45                 	db	69	;'E'
   418  0002A8  52                 	db	82	;'R'
   419  0002A9  00                 	db	0
   420  0002AA                     STR_5:
   421  0002AA  42                 	db	66	;'B'
   422  0002AB  59                 	db	89	;'Y'
   423  0002AC  45                 	db	69	;'E'
   424  0002AD  20                 	db	32
   425  0002AE  42                 	db	66	;'B'
   426  0002AF  59                 	db	89	;'Y'
   427  0002B0  45                 	db	69	;'E'
   428  0002B1  20                 	db	32
   429  0002B2  00                 	db	0
   430  0002B3                     STR_1:
   431  0002B3  31                 	db	49	;'1'
   432  0002B4  2E                 	db	46
   433  0002B5  4C                 	db	76	;'L'
   434  0002B6  4F                 	db	79	;'O'
   435  0002B7  47                 	db	71	;'G'
   436  0002B8  49                 	db	73	;'I'
   437  0002B9  4E                 	db	78	;'N'
   438  0002BA  00                 	db	0
   439  0002BB                     STR_4:
   440  0002BB  50                 	db	80	;'P'
   441  0002BC  53                 	db	83	;'S'
   442  0002BD  57                 	db	87	;'W'
   443  0002BE  44                 	db	68	;'D'
   444  0002BF  3A                 	db	58	;':'
   445  0002C0  20                 	db	32
   446  0002C1  00                 	db	0
   447  0002C2                     STR_3:
   448  0002C2  55                 	db	85	;'U'
   449  0002C3  53                 	db	83	;'S'
   450  0002C4  45                 	db	69	;'E'
   451  0002C5  52                 	db	82	;'R'
   452  0002C6  3A                 	db	58	;':'
   453  0002C7  20                 	db	32
   454  0002C8  00                 	db	0
   455  0002C9  00                 	db	0	; dummy byte at the end
   456  0000                     
   457                           ; #config settings
   458                           
   459                           	psect	cinit
   460  001352                     __pcinit:
   461                           	callstack 0
   462  001352                     start_initialization:
   463                           	callstack 0
   464  001352                     __initialization:
   465                           	callstack 0
   466                           
   467                           ; Initialize objects allocated to BANK0 (23 bytes)
   468                           ; load TBLPTR registers with __pidataBANK0
   469  001352  0E32               	movlw	low __pidataBANK0
   470  001354  6EF6               	movwf	tblptrl,c
   471  001356  0E19               	movlw	high __pidataBANK0
   472  001358  6EF7               	movwf	tblptrh,c
   473  00135A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   474  00135C  6EF8               	movwf	tblptru,c
   475  00135E  EE00  F098         	lfsr	0,__pdataBANK0
   476  001362  EE10 F017          	lfsr	1,23
   477  001366                     copy_data0:
   478  001366  0009               	tblrd		*+
   479  001368  CFF5 FFEE          	movff	tablat,postinc0
   480  00136C  50E5               	movf	postdec1,w,c
   481  00136E  50E1               	movf	fsr1l,w,c
   482  001370  E1FA               	bnz	copy_data0
   483                           
   484                           ; Initialize objects allocated to COMRAM (33 bytes)
   485                           ; load TBLPTR registers with __pidataCOMRAM
   486  001372  0ED8               	movlw	low __pidataCOMRAM
   487  001374  6EF6               	movwf	tblptrl,c
   488  001376  0E18               	movlw	high __pidataCOMRAM
   489  001378  6EF7               	movwf	tblptrh,c
   490  00137A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   491  00137C  6EF8               	movwf	tblptru,c
   492  00137E  EE00  F046         	lfsr	0,__pdataCOMRAM
   493  001382  EE10 F021          	lfsr	1,33
   494  001386                     copy_data1:
   495  001386  0009               	tblrd		*+
   496  001388  CFF5 FFEE          	movff	tablat,postinc0
   497  00138C  50E5               	movf	postdec1,w,c
   498  00138E  50E1               	movf	fsr1l,w,c
   499  001390  E1FA               	bnz	copy_data1
   500                           
   501                           ; Clear objects allocated to BANK1 (184 bytes)
   502  001392  EE01  F000         	lfsr	0,__pbssBANK1
   503  001396  0EB8               	movlw	184
   504  001398                     clear_0:
   505  001398  6AEE               	clrf	postinc0,c
   506  00139A  06E8               	decf	wreg,f,c
   507  00139C  E1FD               	bnz	clear_0
   508                           
   509                           ; Clear objects allocated to BANK0 (24 bytes)
   510  00139E  EE00  F080         	lfsr	0,__pbssBANK0
   511  0013A2  0E18               	movlw	24
   512  0013A4                     clear_1:
   513  0013A4  6AEE               	clrf	postinc0,c
   514  0013A6  06E8               	decf	wreg,f,c
   515  0013A8  E1FD               	bnz	clear_1
   516                           
   517                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   518  0013AA  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   519  0013AC  6A78               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   520                           
   521                           ; Clear objects allocated to COMRAM (69 bytes)
   522  0013AE  EE00  F001         	lfsr	0,__pbssCOMRAM
   523  0013B2  0E45               	movlw	69
   524  0013B4                     clear_2:
   525  0013B4  6AEE               	clrf	postinc0,c
   526  0013B6  06E8               	decf	wreg,f,c
   527  0013B8  E1FD               	bnz	clear_2
   528  0013BA                     end_of_initialization:
   529                           	callstack 0
   530  0013BA                     __end_of__initialization:
   531                           	callstack 0
   532  0013BA  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   533  0013BC  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   534  0013BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   535  0013C0  6EF8               	movwf	tblptru,c
   536  0013C2  0100               	movlb	0
   537  0013C4  EF4C  F00A         	goto	_main	;jump to C main() function
   538                           
   539                           	psect	bitbssCOMRAM
   540  0003C0                     __pbitbssCOMRAM:
   541                           	callstack 0
   542  0003C0                     _jugant:
   543                           	callstack 0
   544  0003C0                     	ds	1
   545  0003C1                     _cap2:
   546                           	callstack 0
   547  0003C1                     	ds	1
   548  0003C2                     _cap1:
   549                           	callstack 0
   550  0003C2                     	ds	1
   551  0003C3                     _newString:
   552                           	callstack 0
   553  0003C3                     	ds	1
   554  0003C4                     _ferMenu:
   555                           	callstack 0
   556  0003C4                     	ds	1
   557  0003C5                     _reproduir:
   558                           	callstack 0
   559  0003C5                     	ds	1
   560  0003C6                     _do_register:
   561                           	callstack 0
   562  0003C6                     	ds	1
   563  0003C7                     _do_check_exists:
   564                           	callstack 0
   565  0003C7                     	ds	1
   566  0003C8                     _loginNOTRegister:
   567                           	callstack 0
   568  0003C8                     	ds	1
   569  0003C9                     _setSMSon:
   570                           	callstack 0
   571  0003C9                     	ds	1
   572  0003CA                     _nou_s:
   573                           	callstack 0
   574  0003CA                     	ds	1
   575                           
   576                           	psect	bssCOMRAM
   577  000001                     __pbssCOMRAM:
   578                           	callstack 0
   579  000001                     _tmpPassword:
   580                           	callstack 0
   581  000001                     	ds	9
   582  00000A                     _h_Tics:
   583                           	callstack 0
   584  00000A                     	ds	2
   585  00000C                     _s_ptr:
   586                           	callstack 0
   587  00000C                     	ds	2
   588  00000E                     motorHora@state:
   589                           	callstack 0
   590  00000E                     	ds	1
   591  00000F                     _segons:
   592                           	callstack 0
   593  00000F                     	ds	1
   594  000010                     _timerHora:
   595                           	callstack 0
   596  000010                     	ds	1
   597  000011                     JoystickMotor@state:
   598                           	callstack 0
   599  000011                     	ds	1
   600  000012                     _ultimaTeclaAD:
   601                           	callstack 0
   602  000012                     	ds	1
   603  000013                     GLCDMotor@length2:
   604                           	callstack 0
   605  000013                     	ds	1
   606  000014                     GLCDMotor@length1:
   607                           	callstack 0
   608  000014                     	ds	1
   609  000015                     GLCDMotor@k2:
   610                           	callstack 0
   611  000015                     	ds	1
   612  000016                     GLCDMotor@k1:
   613                           	callstack 0
   614  000016                     	ds	1
   615  000017                     GLCDMotor@min2:
   616                           	callstack 0
   617  000017                     	ds	1
   618  000018                     GLCDMotor@min1:
   619                           	callstack 0
   620  000018                     	ds	1
   621  000019                     GLCDMotor@j:
   622                           	callstack 0
   623  000019                     	ds	1
   624  00001A                     GLCDMotor@state:
   625                           	callstack 0
   626  00001A                     	ds	1
   627  00001B                     _menuDaltGLCD:
   628                           	callstack 0
   629  00001B                     	ds	1
   630  00001C                     _timerGLCD:
   631                           	callstack 0
   632  00001C                     	ds	1
   633  00001D                     motorAltaveu@state:
   634                           	callstack 0
   635  00001D                     	ds	1
   636  00001E                     _copsNota:
   637                           	callstack 0
   638  00001E                     	ds	1
   639  00001F                     _timerAltaveu:
   640                           	callstack 0
   641  00001F                     	ds	1
   642  000020                     _nota:
   643                           	callstack 0
   644  000020                     	ds	1
   645  000021                     UmotorUsers@state:
   646                           	callstack 0
   647  000021                     	ds	1
   648  000022                     _j:
   649                           	callstack 0
   650  000022                     	ds	1
   651  000023                     _i:
   652                           	callstack 0
   653  000023                     	ds	1
   654  000024                     _indexNextUserStruct:
   655                           	callstack 0
   656  000024                     	ds	1
   657  000025                     _indexNextUser:
   658                           	callstack 0
   659  000025                     	ds	1
   660  000026                     _numUsuaris:
   661                           	callstack 0
   662  000026                     	ds	1
   663  000027                     _currentUsrIndex:
   664                           	callstack 0
   665  000027                     	ds	1
   666  000028                     menu@state:
   667                           	callstack 0
   668  000028                     	ds	1
   669  000029                     _indexUsuari:
   670                           	callstack 0
   671  000029                     	ds	1
   672  00002A                     _menuDalt:
   673                           	callstack 0
   674  00002A                     	ds	1
   675  00002B                     _timerMenu:
   676                           	callstack 0
   677  00002B                     	ds	1
   678  00002C                     _tmp:
   679                           	callstack 0
   680  00002C                     	ds	1
   681  00002D                     _counter:
   682                           	callstack 0
   683  00002D                     	ds	1
   684  00002E                     TeTeclat@files:
   685                           	callstack 0
   686  00002E                     	ds	1
   687  00002F                     TeTeclat@cols:
   688                           	callstack 0
   689  00002F                     	ds	1
   690  000030                     TeTeclat@state:
   691                           	callstack 0
   692  000030                     	ds	1
   693  000031                     _tiTeclat:
   694                           	callstack 0
   695  000031                     	ds	1
   696  000032                     SMotor@state:
   697                           	callstack 0
   698  000032                     	ds	1
   699  000033                     _sumaPulsacions:
   700                           	callstack 0
   701  000033                     	ds	1
   702  000034                     _Timer:
   703                           	callstack 0
   704  000034                     	ds	1
   705  000035                     _ColumnAct:
   706                           	callstack 0
   707  000035                     	ds	1
   708  000036                     _RowAct:
   709                           	callstack 0
   710  000036                     	ds	1
   711  000037                     _Columns:
   712                           	callstack 0
   713  000037                     	ds	1
   714  000038                     _Rows:
   715                           	callstack 0
   716  000038                     	ds	1
   717  000039                     _tmpUsername:
   718                           	callstack 0
   719  000039                     	ds	9
   720  000042                     _horaTmp:
   721                           	callstack 0
   722  000042                     	ds	4
   723                           
   724                           	psect	dataCOMRAM
   725  000046                     __pdataCOMRAM:
   726                           	callstack 0
   727  000046                     _lletraInici:
   728                           	callstack 0
   729  000046                     	ds	9
   730  00004F                     _loginText:
   731                           	callstack 0
   732  00004F                     	ds	8
   733  000057                     _hora:
   734                           	callstack 0
   735  000057                     	ds	6
   736  00005D                     GLCDMotor@max2:
   737                           	callstack 0
   738  00005D                     	ds	1
   739  00005E                     GLCDMotor@max1:
   740                           	callstack 0
   741  00005E                     	ds	1
   742  00005F                     _usuariLoguejat:
   743                           	callstack 0
   744  00005F                     	ds	1
   745  000060                     _novaDireccio:
   746                           	callstack 0
   747  000060                     	ds	1
   748  000061                     _novaLletra:
   749                           	callstack 0
   750  000061                     	ds	1
   751  000062                     _NovaTecla:
   752                           	callstack 0
   753  000062                     	ds	1
   754  000063                     _ultimaTecla:
   755                           	callstack 0
   756  000063                     	ds	1
   757  000064                     _timerSMS:
   758                           	callstack 0
   759  000064                     	ds	1
   760  000065                     _novaTecla:
   761                           	callstack 0
   762  000065                     	ds	1
   763  000066                     _lletraASCII:
   764                           	callstack 0
   765  000066                     	ds	1
   766                           
   767                           	psect	bssBANK0
   768  000080                     __pbssBANK0:
   769                           	callstack 0
   770  000080                     _s_Timers:
   771                           	callstack 0
   772  000080                     	ds	24
   773                           
   774                           	psect	dataBANK0
   775  000098                     __pdataBANK0:
   776                           	callstack 0
   777  000098                     _registerText:
   778                           	callstack 0
   779  000098                     	ds	11
   780  0000A3                     _teclaPremuda:
   781                           	callstack 0
   782  0000A3                     	ds	12
   783                           
   784                           	psect	bssBANK1
   785  000100                     __pbssBANK1:
   786                           	callstack 0
   787  000100                     _usuaris:
   788                           	callstack 0
   789  000100                     	ds	184
   790                           
   791                           	psect	cstackBANK0
   792  0000AF                     __pcstackBANK0:
   793                           	callstack 0
   794  0000AF                     LcInit@rows:
   795                           	callstack 0
   796  0000AF                     LcGotoXY@Fisics:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x0
   800  0000AF                     	ds	1
   801  0000B0                     LcInit@i:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x1
   805  0000B0                     	ds	1
   806  0000B1                     _LcGotoXY$342:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x2
   810  0000B1                     	ds	2
   811  0000B3                     LcGotoXY@Column:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x4
   815  0000B3                     	ds	1
   816  0000B4                     ??_menu:
   817  0000B4                     ??_GLCDMotor:
   818                           
   819                           ; 1 bytes @ 0x5
   820  0000B4                     	ds	2
   821                           
   822                           	psect	cstackCOMRAM
   823  000067                     __pcstackCOMRAM:
   824                           	callstack 0
   825  000067                     
   826                           ; 1 bytes @ 0x0
   827  000067                     	ds	1
   828  000068                     ??_high_rsi:
   829                           
   830                           ; 1 bytes @ 0x1
   831  000068                     	ds	4
   832  00006C                     ??_EscriuPrimeraOrdre:
   833  00006C                     ??_Uinit:
   834  00006C                     ??_UcheckExistsGetError:
   835  00006C                     ??_CantaPartAlta:
   836  00006C                     ??_CantaPartBaixa:
   837  00006C                     ?_TiGetTics:
   838                           	callstack 0
   839  00006C                     ?_UgetUserName:
   840                           	callstack 0
   841  00006C                     SsetNovaTecla@tecla:
   842                           	callstack 0
   843  00006C                     TiResetTics@Handle:
   844                           	callstack 0
   845  00006C                     MsetNovaTecla@tecla:
   846                           	callstack 0
   847  00006C                     MNovaLletra@lletra:
   848                           	callstack 0
   849  00006C                     MNouJoystick@posicio:
   850                           	callstack 0
   851  00006C                     UenviaChar@pos:
   852                           	callstack 0
   853  00006C                     UenviaPas@pos:
   854                           	callstack 0
   855  00006C                     escriureCharEEPROM@pos:
   856                           	callstack 0
   857  00006C                     compareStrings@a:
   858                           	callstack 0
   859  00006C                     escriureEEPROM@caca:
   860                           	callstack 0
   861  00006C                     GLCDMostraMenu@num:
   862                           	callstack 0
   863  00006C                     HActualitzaHora@nova:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x5
   867  00006C                     	ds	1
   868  00006D                     ??_JoystickMotor:
   869  00006D                     CantaPartAlta@c:
   870                           	callstack 0
   871  00006D                     CantaPartBaixa@c:
   872                           	callstack 0
   873  00006D                     EscriuPrimeraOrdre@ordre:
   874                           	callstack 0
   875  00006D                     UenviaChar@c:
   876                           	callstack 0
   877  00006D                     UenviaPas@c:
   878                           	callstack 0
   879  00006D                     escriureCharEEPROM@c:
   880                           	callstack 0
   881  00006D                     compareStrings@b:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x6
   885  00006D                     	ds	1
   886  00006E                     ??_TiGetTics:
   887  00006E                     CantaIR@IR:
   888                           	callstack 0
   889  00006E                     CantaData@Data:
   890                           	callstack 0
   891  00006E                     UgetUserName@quin:
   892                           	callstack 0
   893  00006E                     Uinit@i:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x7
   897  00006E                     	ds	1
   898  00006F                     ??_compareStrings:
   899  00006F                     Uinit@j:
   900                           	callstack 0
   901  00006F                     LcNewString@new_s:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x8
   905  00006F                     	ds	1
   906  000070                     TiGetTics@Handle:
   907                           	callstack 0
   908  000070                     Uinit@j_1084:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x9
   912  000070                     	ds	1
   913  000071                     ??_UmotorUsers:
   914  000071                     TiGetTics@actual:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0xA
   918  000071                     	ds	2
   919  000073                     ??_SMotor:
   920  000073                     ??_motorHora:
   921  000073                     ??_motorAltaveu:
   922  000073                     ??_TeTeclat:
   923  000073                     WaitForBusy@Busy:
   924                           	callstack 0
   925  000073                     Espera@ms:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0xC
   929  000073                     	ds	1
   930  000074                     LcGotoXY@Row:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0xD
   934  000074                     	ds	1
   935  000075                     ??_Espera:
   936  000075                     LcPutChar@c:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0xE
   940  000075                     	ds	1
   941  000076                     Espera@Timer:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0xF
   945  000076                     	ds	1
   946  000077                     LcInit@columns:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x10
   950  000077                     	ds	1
   951  000078                     
   952                           ; 1 bytes @ 0x11
   953 ;;
   954 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   955 ;;
   956 ;; *************** function _main *****************
   957 ;; Defined at:
   958 ;;		line 73 in file "main.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1
   972 ;;      Params:         0       0       0
   973 ;;      Locals:         0       0       0
   974 ;;      Temps:          0       0       0
   975 ;;      Totals:         0       0       0
   976 ;;Total ram usage:        0 bytes
   977 ;; Hardware stack levels required when called: 7
   978 ;; This function calls:
   979 ;;		_GLCDInit
   980 ;;		_GLCDMotor
   981 ;;		_JoystickInit
   982 ;;		_JoystickMotor
   983 ;;		_LcInit
   984 ;;		_LcLCD
   985 ;;		_Minit
   986 ;;		_SMotor
   987 ;;		_Sinit
   988 ;;		_TeInit
   989 ;;		_TeTeclat
   990 ;;		_TiInitTimer
   991 ;;		_Uinit
   992 ;;		_UmotorUsers
   993 ;;		_escriureEEPROM
   994 ;;		_initAltaveu
   995 ;;		_initHora
   996 ;;		_init_ports
   997 ;;		_menu
   998 ;;		_motorAltaveu
   999 ;;		_motorHora
  1000 ;; This function is called by:
  1001 ;;		Startup code after reset
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text0
  1006  001498                     __ptext0:
  1007                           	callstack 0
  1008  001498                     _main:
  1009                           	callstack 24
  1010                           
  1011                           ;main.c: 74:     init_ports();
  1012                           
  1013                           ;incstack = 0
  1014  001498  EC7D  F00C         	call	_init_ports	;wreg free
  1015                           
  1016                           ;main.c: 75:     escriureEEPROM();
  1017  00149C  EC09  F00C         	call	_escriureEEPROM	;wreg free
  1018                           
  1019                           ;main.c: 76:     TiInitTimer();
  1020  0014A0  ECA0  F00B         	call	_TiInitTimer	;wreg free
  1021                           
  1022                           ;main.c: 77:     TeInit();
  1023  0014A4  ECFA  F00C         	call	_TeInit	;wreg free
  1024                           
  1025                           ;main.c: 78:     Sinit();
  1026  0014A8  ECFE  F00C         	call	_Sinit	;wreg free
  1027                           
  1028                           ;main.c: 79:     SMotor();
  1029  0014AC  EC58  F005         	call	_SMotor	;wreg free
  1030                           
  1031                           ;main.c: 80:     Uinit();
  1032  0014B0  EC12  F009         	call	_Uinit	;wreg free
  1033                           
  1034                           ;main.c: 81:     initAltaveu();
  1035  0014B4  ECEE  F00C         	call	_initAltaveu	;wreg free
  1036                           
  1037                           ;main.c: 82:     GLCDInit();
  1038  0014B8  EC0E  F00D         	call	_GLCDInit	;wreg free
  1039                           
  1040                           ;main.c: 83:     JoystickInit();
  1041  0014BC  ECAF  F00C         	call	_JoystickInit	;wreg free
  1042                           
  1043                           ;main.c: 84:     initHora();
  1044  0014C0  ECEA  F00C         	call	_initHora	;wreg free
  1045                           
  1046                           ;main.c: 86:     LcInit(2,16);
  1047  0014C4  0E10               	movlw	16
  1048  0014C6  6E77               	movwf	LcInit@columns^0,c
  1049  0014C8  0E02               	movlw	2
  1050  0014CA  EC47  F008         	call	_LcInit
  1051                           
  1052                           ;main.c: 87:     Minit();
  1053  0014CE  EC06  F00D         	call	_Minit	;wreg free
  1054  0014D2                     l5669:
  1055                           
  1056                           ;main.c: 91:         motorHora();
  1057  0014D2  EC65  F00B         	call	_motorHora	;wreg free
  1058                           
  1059                           ;main.c: 92:         JoystickMotor();
  1060  0014D6  ECD1  F007         	call	_JoystickMotor	;wreg free
  1061                           
  1062                           ;main.c: 93:         menu();
  1063  0014DA  EC65  F001         	call	_menu	;wreg free
  1064                           
  1065                           ;main.c: 94:         motorAltaveu();
  1066  0014DE  ECB7  F008         	call	_motorAltaveu	;wreg free
  1067                           
  1068                           ;main.c: 95:         UmotorUsers();
  1069  0014E2  EC64  F006         	call	_UmotorUsers	;wreg free
  1070                           
  1071                           ;main.c: 96:         GLCDMotor();
  1072  0014E6  EC6C  F003         	call	_GLCDMotor	;wreg free
  1073                           
  1074                           ;main.c: 97:         TeTeclat();
  1075  0014EA  EC1F  F007         	call	_TeTeclat	;wreg free
  1076                           
  1077                           ;main.c: 98:         SMotor();
  1078  0014EE  EC58  F005         	call	_SMotor	;wreg free
  1079                           
  1080                           ;main.c: 99:         LcLCD();
  1081  0014F2  EC7C  F00A         	call	_LcLCD	;wreg free
  1082  0014F6  D7ED               	goto	l5669
  1083  0014F8                     __end_of_main:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _motorHora *****************
  1087 ;; Defined at:
  1088 ;;		line 20 in file "Hora.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1
  1102 ;;      Params:         0       0       0
  1103 ;;      Locals:         0       0       0
  1104 ;;      Temps:          2       0       0
  1105 ;;      Totals:         2       0       0
  1106 ;;Total ram usage:        2 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 3
  1109 ;; This function calls:
  1110 ;;		_TiGetTics
  1111 ;;		_TiResetTics
  1112 ;;		_playAltaveu
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text1
  1119  0016CA                     __ptext1:
  1120                           	callstack 0
  1121  0016CA                     _motorHora:
  1122                           	callstack 27
  1123                           
  1124                           ;Hora.c: 21:  static char state = 0;;Hora.c: 23:  switch(state) {
  1125                           
  1126                           ;incstack = 0
  1127  0016CA  D011               	goto	l4983
  1128  0016CC                     l4939:
  1129                           
  1130                           ;Hora.c: 25:    if (TiGetTics(timerHora) >= 1205) {
  1131  0016CC  5010               	movf	_timerHora^0,w,c
  1132  0016CE  EC20  F00C         	call	_TiGetTics
  1133  0016D2  BE6D               	btfsc	(?_TiGetTics+1)^0,7,c
  1134  0016D4  0012               	return	
  1135  0016D6  0EB5               	movlw	181
  1136  0016D8  5C6C               	subwf	?_TiGetTics^0,w,c
  1137  0016DA  0E04               	movlw	4
  1138  0016DC  586D               	subwfb	(?_TiGetTics+1)^0,w,c
  1139  0016DE  A0D8               	btfss	status,0,c
  1140  0016E0  0012               	return	
  1141                           
  1142                           ;Hora.c: 26:     TiResetTics(timerHora);
  1143  0016E2  5010               	movf	_timerHora^0,w,c
  1144  0016E4  EC8D  F00C         	call	_TiResetTics
  1145                           
  1146                           ;Hora.c: 56:     state = 0;
  1147                           
  1148                           ;Hora.c: 27:     if(jugant){
  1149  0016E8  0E00               	movlw	0
  1150  0016EA  6E0E               	movwf	motorHora@state^0,c
  1151  0016EC  0012               	return	
  1152  0016EE                     l4983:
  1153  0016EE  500E               	movf	motorHora@state^0,w,c
  1154  0016F0  6E73               	movwf	??_motorHora^0,c
  1155  0016F2  6A74               	clrf	(??_motorHora+1)^0,c
  1156                           
  1157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1158                           ; Switch size 1, requested type "simple"
  1159                           ; Number of cases is 1, Range of values is 0 to 0
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte            4     3 (average)
  1163                           ;	Chosen strategy is simple_byte
  1164  0016F4  5074               	movf	(??_motorHora+1)^0,w,c
  1165  0016F6  0A00               	xorlw	0	; case 0
  1166  0016F8  A4D8               	btfss	status,2,c
  1167  0016FA  0012               	return	
  1168                           
  1169                           ; Switch size 1, requested type "simple"
  1170                           ; Number of cases is 1, Range of values is 0 to 0
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte            4     3 (average)
  1174                           ;	Chosen strategy is simple_byte
  1175  0016FC  5073               	movf	??_motorHora^0,w,c
  1176  0016FE  0A00               	xorlw	0	; case 0
  1177  001700  A4D8               	btfss	status,2,c
  1178  001702  0012               	return	
  1179  001704  D7E3               	goto	l4939
  1180  001706                     __end_of_motorHora:
  1181                           	callstack 0
  1182                           
  1183 ;; *************** function _playAltaveu *****************
  1184 ;; Defined at:
  1185 ;;		line 14 in file "Altaveu.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		None
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1
  1199 ;;      Params:         0       0       0
  1200 ;;      Locals:         0       0       0
  1201 ;;      Temps:          0       0       0
  1202 ;;      Totals:         0       0       0
  1203 ;;Total ram usage:        0 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; Hardware stack levels required when called: 2
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_motorHora
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text2
  1214  001A30                     __ptext2:
  1215                           	callstack 0
  1216  001A30                     _playAltaveu:
  1217                           	callstack 27
  1218                           
  1219                           ;Altaveu.c: 15:     reproduir = 1;
  1220                           
  1221                           ;incstack = 0
  1222  001A30  8A78               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  1223  001A32  0012               	return		;funcret
  1224  001A34                     __end_of_playAltaveu:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _motorAltaveu *****************
  1228 ;; Defined at:
  1229 ;;		line 17 in file "Altaveu.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1
  1243 ;;      Params:         0       0       0
  1244 ;;      Locals:         0       0       0
  1245 ;;      Temps:          3       0       0
  1246 ;;      Totals:         3       0       0
  1247 ;;Total ram usage:        3 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; Hardware stack levels required when called: 3
  1250 ;; This function calls:
  1251 ;;		_TiGetTics
  1252 ;;		_TiResetTics
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text3
  1259  00116E                     __ptext3:
  1260                           	callstack 0
  1261  00116E                     _motorAltaveu:
  1262                           	callstack 27
  1263                           
  1264                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  1265                           
  1266                           ;incstack = 0
  1267  00116E  D048               	goto	l5359
  1268  001170                     l708:
  1269                           
  1270                           ;Altaveu.c: 22:    if (reproduir) {
  1271  001170  AA78               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  1272  001172  0012               	return	
  1273                           
  1274                           ;Altaveu.c: 23:     nota = 1;
  1275  001174  0E01               	movlw	1
  1276  001176  6E20               	movwf	_nota^0,c
  1277                           
  1278                           ;Altaveu.c: 24:     copsNota = 0;
  1279  001178  0E00               	movlw	0
  1280  00117A  6E1E               	movwf	_copsNota^0,c
  1281                           
  1282                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  1283  00117C  501F               	movf	_timerAltaveu^0,w,c
  1284  00117E  EC8D  F00C         	call	_TiResetTics
  1285  001182                     l5323:
  1286                           
  1287                           ;Altaveu.c: 26:     state = 1;
  1288  001182  0E01               	movlw	1
  1289  001184  6E1D               	movwf	motorAltaveu@state^0,c
  1290  001186  0012               	return	
  1291  001188                     l5325:
  1292                           
  1293                           ;Altaveu.c: 30:    if (nota > 5) {
  1294  001188  0E05               	movlw	5
  1295  00118A  6420               	cpfsgt	_nota^0,c
  1296  00118C  D004               	goto	l5331
  1297                           
  1298                           ;Altaveu.c: 31:     reproduir = 0;
  1299  00118E  9A78               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  1300                           
  1301                           ;Altaveu.c: 32:     state = 0;
  1302  001190  0E00               	movlw	0
  1303  001192  6E1D               	movwf	motorAltaveu@state^0,c
  1304                           
  1305                           ;Altaveu.c: 33:    }
  1306  001194  0012               	return	
  1307  001196                     l5331:
  1308  001196  0EA8               	movlw	168
  1309  001198  181E               	xorwf	_copsNota^0,w,c
  1310  00119A  A4D8               	btfss	status,2,c
  1311  00119C  D004               	goto	l5339
  1312                           
  1313                           ;Altaveu.c: 35:     nota++;
  1314  00119E  2A20               	incf	_nota^0,f,c
  1315                           
  1316                           ;Altaveu.c: 36:     copsNota = 0;
  1317  0011A0  0E00               	movlw	0
  1318  0011A2  6E1E               	movwf	_copsNota^0,c
  1319  0011A4  D7EE               	goto	l5323
  1320  0011A6                     l5339:
  1321  0011A6  501F               	movf	_timerAltaveu^0,w,c
  1322  0011A8  EC20  F00C         	call	_TiGetTics
  1323  0011AC  5020               	movf	_nota^0,w,c
  1324  0011AE  6E73               	movwf	??_motorAltaveu^0,c
  1325  0011B0  6A74               	clrf	(??_motorAltaveu+1)^0,c
  1326  0011B2  506C               	movf	?_TiGetTics^0,w,c
  1327  0011B4  5C73               	subwf	??_motorAltaveu^0,w,c
  1328  0011B6  5074               	movf	(??_motorAltaveu+1)^0,w,c
  1329  0011B8  0A80               	xorlw	128
  1330  0011BA  6E75               	movwf	(??_motorAltaveu+2)^0,c
  1331  0011BC  506D               	movf	(?_TiGetTics+1)^0,w,c
  1332  0011BE  0A80               	xorlw	128
  1333  0011C0  5875               	subwfb	(??_motorAltaveu+2)^0,w,c
  1334  0011C2  B0D8               	btfsc	status,0,c
  1335  0011C4  0012               	return	
  1336                           
  1337                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  1338  0011C6  808A               	bsf	138,0,c	;volatile
  1339                           
  1340                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  1341  0011C8  501F               	movf	_timerAltaveu^0,w,c
  1342  0011CA  EC8D  F00C         	call	_TiResetTics
  1343                           
  1344                           ;Altaveu.c: 42:     state = 2;
  1345  0011CE  0E02               	movlw	2
  1346  0011D0  6E1D               	movwf	motorAltaveu@state^0,c
  1347  0011D2  0012               	return	
  1348  0011D4                     l5347:
  1349                           
  1350                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  1351  0011D4  501F               	movf	_timerAltaveu^0,w,c
  1352  0011D6  EC20  F00C         	call	_TiGetTics
  1353  0011DA  5020               	movf	_nota^0,w,c
  1354  0011DC  6E73               	movwf	??_motorAltaveu^0,c
  1355  0011DE  6A74               	clrf	(??_motorAltaveu+1)^0,c
  1356  0011E0  506C               	movf	?_TiGetTics^0,w,c
  1357  0011E2  5C73               	subwf	??_motorAltaveu^0,w,c
  1358  0011E4  5074               	movf	(??_motorAltaveu+1)^0,w,c
  1359  0011E6  0A80               	xorlw	128
  1360  0011E8  6E75               	movwf	(??_motorAltaveu+2)^0,c
  1361  0011EA  506D               	movf	(?_TiGetTics+1)^0,w,c
  1362  0011EC  0A80               	xorlw	128
  1363  0011EE  5875               	subwfb	(??_motorAltaveu+2)^0,w,c
  1364  0011F0  B0D8               	btfsc	status,0,c
  1365  0011F2  0012               	return	
  1366                           
  1367                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  1368  0011F4  908A               	bcf	138,0,c	;volatile
  1369                           
  1370                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  1371  0011F6  501F               	movf	_timerAltaveu^0,w,c
  1372  0011F8  EC8D  F00C         	call	_TiResetTics
  1373                           
  1374                           ;Altaveu.c: 49:     copsNota++;
  1375  0011FC  2A1E               	incf	_copsNota^0,f,c
  1376  0011FE  D7C1               	goto	l5323
  1377  001200                     l5359:
  1378  001200  501D               	movf	motorAltaveu@state^0,w,c
  1379  001202  6E73               	movwf	??_motorAltaveu^0,c
  1380  001204  6A74               	clrf	(??_motorAltaveu+1)^0,c
  1381                           
  1382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1383                           ; Switch size 1, requested type "simple"
  1384                           ; Number of cases is 1, Range of values is 0 to 0
  1385                           ; switch strategies available:
  1386                           ; Name         Instructions Cycles
  1387                           ; simple_byte            4     3 (average)
  1388                           ;	Chosen strategy is simple_byte
  1389  001206  5074               	movf	(??_motorAltaveu+1)^0,w,c
  1390  001208  0A00               	xorlw	0	; case 0
  1391  00120A  A4D8               	btfss	status,2,c
  1392  00120C  0012               	return	
  1393                           
  1394                           ; Switch size 1, requested type "simple"
  1395                           ; Number of cases is 3, Range of values is 0 to 2
  1396                           ; switch strategies available:
  1397                           ; Name         Instructions Cycles
  1398                           ; simple_byte           10     6 (average)
  1399                           ;	Chosen strategy is simple_byte
  1400  00120E  5073               	movf	??_motorAltaveu^0,w,c
  1401  001210  0A00               	xorlw	0	; case 0
  1402  001212  B4D8               	btfsc	status,2,c
  1403  001214  D7AD               	goto	l708
  1404  001216  0A01               	xorlw	1	; case 1
  1405  001218  B4D8               	btfsc	status,2,c
  1406  00121A  D7B6               	goto	l5325
  1407  00121C  0A03               	xorlw	3	; case 2
  1408  00121E  A4D8               	btfss	status,2,c
  1409  001220  0012               	return	
  1410  001222  D7D8               	goto	l5347
  1411  001224                     __end_of_motorAltaveu:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _menu *****************
  1415 ;; Defined at:
  1416 ;;		line 38 in file "Menu.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1
  1430 ;;      Params:         0       0       0
  1431 ;;      Locals:         0       0       0
  1432 ;;      Temps:          0       2       0
  1433 ;;      Totals:         0       2       0
  1434 ;;Total ram usage:        2 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 6
  1437 ;; This function calls:
  1438 ;;		_GLCDMostraMenu
  1439 ;;		_HActualitzaHora
  1440 ;;		_LcClear
  1441 ;;		_LcGotoXY
  1442 ;;		_LcLliure
  1443 ;;		_LcNewString
  1444 ;;		_LcPutChar
  1445 ;;		_NoFerMenu
  1446 ;;		_SMSoff
  1447 ;;		_SMSon
  1448 ;;		_SiFerMenu
  1449 ;;		_TiGetTics
  1450 ;;		_TiResetTics
  1451 ;;		_URegister
  1452 ;;		_UcheckExists
  1453 ;;		_UcheckExistsGetError
  1454 ;;		_UcheckExistsNotFinished
  1455 ;;		_UenviaChar
  1456 ;;		_UenviaPas
  1457 ;;		_UgetNumUsuaris
  1458 ;;		_UgetUserName
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text4
  1465  0002CA                     __ptext4:
  1466                           	callstack 0
  1467  0002CA                     _menu:
  1468                           	callstack 24
  1469                           
  1470                           ;Menu.c: 39:  static char state = 0;;Menu.c: 41:  switch(state) {
  1471                           
  1472                           ;incstack = 0
  1473  0002CA  D1BD               	goto	l5307
  1474  0002CC                     l4991:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;Menu.c: 43:    LcClear();
  1478  0002CC  EC48  F00C         	call	_LcClear	;wreg free
  1479                           
  1480                           ;Menu.c: 44:    LcNewString("1.LOGIN");
  1481  0002D0  0EB3               	movlw	low STR_1
  1482  0002D2  6E6F               	movwf	LcNewString@new_s^0,c
  1483  0002D4  506F               	movf	LcNewString@new_s^0,w,c
  1484  0002D6  A4D8               	btfss	status,2,c
  1485  0002D8  0E02               	movlw	high __smallconst
  1486  0002DA  6E70               	movwf	(LcNewString@new_s+1)^0,c
  1487  0002DC  ECDA  F00C         	call	_LcNewString	;wreg free
  1488                           
  1489                           ;Menu.c: 45:    state = 1;
  1490  0002E0  0E01               	movlw	1
  1491  0002E2  6E28               	movwf	menu@state^0,c
  1492                           
  1493                           ;Menu.c: 46:   break;
  1494  0002E4  0012               	return	
  1495  0002E6                     l4997:
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;Menu.c: 48:    if (LcLliure()) {
  1499  0002E6  ECE0  F00C         	call	_LcLliure	;wreg free
  1500  0002EA  A0D8               	btfss	status,0,c
  1501  0002EC  0012               	return	
  1502                           
  1503                           ;Menu.c: 49:     LcGotoXY(0,1);
  1504  0002EE  0E01               	movlw	1
  1505  0002F0  6E74               	movwf	LcGotoXY@Row^0,c
  1506  0002F2  0E00               	movlw	0
  1507  0002F4  EC24  F00B         	call	_LcGotoXY
  1508                           
  1509                           ;Menu.c: 50:     LcNewString("2.REGISTER");
  1510  0002F8  0E9F               	movlw	low STR_2
  1511  0002FA  6E6F               	movwf	LcNewString@new_s^0,c
  1512  0002FC  506F               	movf	LcNewString@new_s^0,w,c
  1513  0002FE  A4D8               	btfss	status,2,c
  1514  000300  0E02               	movlw	high __smallconst
  1515  000302  6E70               	movwf	(LcNewString@new_s+1)^0,c
  1516  000304  ECDA  F00C         	call	_LcNewString	;wreg free
  1517                           
  1518                           ;Menu.c: 51:     NovaTecla = -1;
  1519  000308  6862               	setf	_NovaTecla^0,c
  1520                           
  1521                           ;Menu.c: 52:     state = 2;
  1522  00030A  0E02               	movlw	2
  1523  00030C  6E28               	movwf	menu@state^0,c
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;Menu.c: 54:   break;
  1527                           
  1528                           ;Menu.c: 53:    }
  1529  00030E  0012               	return	
  1530  000310                     l5007:
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;Menu.c: 56:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  1534  000310  0462               	decf	_NovaTecla^0,w,c
  1535  000312  A4D8               	btfss	status,2,c
  1536  000314  D009               	goto	l5015
  1537                           
  1538                           ; BSR set to: 0
  1539  000316  EC1A  F00D         	call	_UgetNumUsuaris	;wreg free
  1540  00031A  0900               	iorlw	0
  1541  00031C  B4D8               	btfsc	status,2,c
  1542  00031E  D004               	goto	l5015
  1543                           
  1544                           ;Menu.c: 57:     loginNOTRegister = 1;
  1545  000320  8079               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1546  000322                     l5013:
  1547                           
  1548                           ;Menu.c: 58:     state = 3;
  1549  000322  0E03               	movlw	3
  1550  000324  6E28               	movwf	menu@state^0,c
  1551                           
  1552                           ;Menu.c: 59:    }
  1553  000326  0012               	return	
  1554  000328                     l5015:
  1555  000328  0E02               	movlw	2
  1556  00032A  1862               	xorwf	_NovaTecla^0,w,c
  1557  00032C  A4D8               	btfss	status,2,c
  1558  00032E  0012               	return	
  1559                           
  1560                           ;Menu.c: 61:     loginNOTRegister = 0;
  1561  000330  9079               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1562  000332  D7F7               	goto	l5013
  1563  000334                     l472:
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;Menu.c: 66:    NovaTecla = -1;
  1567  000334  6862               	setf	_NovaTecla^0,c
  1568                           
  1569                           ;Menu.c: 67:    novaLletra = -1;
  1570  000336  6861               	setf	_novaLletra^0,c
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;Menu.c: 68:    LcClear();
  1574  000338  EC48  F00C         	call	_LcClear	;wreg free
  1575                           
  1576                           ;Menu.c: 69:    LcNewString("USER: ");
  1577  00033C  0EC2               	movlw	low STR_3
  1578  00033E  6E6F               	movwf	LcNewString@new_s^0,c
  1579  000340  506F               	movf	LcNewString@new_s^0,w,c
  1580  000342  A4D8               	btfss	status,2,c
  1581  000344  0E02               	movlw	high __smallconst
  1582  000346  6E70               	movwf	(LcNewString@new_s+1)^0,c
  1583  000348  ECDA  F00C         	call	_LcNewString	;wreg free
  1584                           
  1585                           ;Menu.c: 70:    state = 4;
  1586  00034C  0E04               	movlw	4
  1587  00034E  6E28               	movwf	menu@state^0,c
  1588                           
  1589                           ;Menu.c: 71:   break;
  1590  000350  0012               	return	
  1591  000352                     l5027:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;Menu.c: 73:    if (LcLliure()) {
  1595  000352  ECE0  F00C         	call	_LcLliure	;wreg free
  1596  000356  A0D8               	btfss	status,0,c
  1597  000358  0012               	return	
  1598                           
  1599                           ;Menu.c: 74:     LcGotoXY(0,1);
  1600  00035A  0E01               	movlw	1
  1601  00035C  6E74               	movwf	LcGotoXY@Row^0,c
  1602  00035E  0E00               	movlw	0
  1603  000360  EC24  F00B         	call	_LcGotoXY
  1604                           
  1605                           ;Menu.c: 75:     LcNewString("PSWD: ");
  1606  000364  0EBB               	movlw	low STR_4
  1607  000366  6E6F               	movwf	LcNewString@new_s^0,c
  1608  000368  506F               	movf	LcNewString@new_s^0,w,c
  1609  00036A  A4D8               	btfss	status,2,c
  1610  00036C  0E02               	movlw	high __smallconst
  1611  00036E  6E70               	movwf	(LcNewString@new_s+1)^0,c
  1612  000370  ECDA  F00C         	call	_LcNewString	;wreg free
  1613                           
  1614                           ;Menu.c: 76:     state = 5;
  1615  000374  0E05               	movlw	5
  1616  000376  6E28               	movwf	menu@state^0,c
  1617  000378  0012               	return	
  1618  00037A                     l5035:
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;Menu.c: 80:    if (LcLliure()) {
  1622  00037A  ECE0  F00C         	call	_LcLliure	;wreg free
  1623  00037E  A0D8               	btfss	status,0,c
  1624  000380  0012               	return	
  1625                           
  1626                           ;Menu.c: 81:     LcGotoXY(6,0);
  1627  000382  0E00               	movlw	0
  1628  000384  6E74               	movwf	LcGotoXY@Row^0,c
  1629  000386  0E06               	movlw	6
  1630  000388  EC24  F00B         	call	_LcGotoXY
  1631                           
  1632                           ;Menu.c: 82:     SMSon();
  1633  00038C  EC12  F00D         	call	_SMSon	;wreg free
  1634                           
  1635                           ;Menu.c: 83:     tmp =0;
  1636  000390  0E00               	movlw	0
  1637  000392  6E2C               	movwf	_tmp^0,c
  1638  000394                     l5043:
  1639                           
  1640                           ;Menu.c: 84:     state = 6;
  1641  000394  0E06               	movlw	6
  1642  000396  6E28               	movwf	menu@state^0,c
  1643  000398  0012               	return	
  1644  00039A                     l5045:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;Menu.c: 88:    if (novaLletra > 47 && NovaTecla != 10) {
  1648  00039A  5061               	movf	_novaLletra^0,w,c
  1649  00039C  0A80               	xorlw	128
  1650  00039E  0F50               	addlw	-176
  1651  0003A0  A0D8               	btfss	status,0,c
  1652  0003A2  D00F               	goto	l5055
  1653                           
  1654                           ; BSR set to: 0
  1655  0003A4  0E0A               	movlw	10
  1656  0003A6  1862               	xorwf	_NovaTecla^0,w,c
  1657  0003A8  B4D8               	btfsc	status,2,c
  1658  0003AA  D00B               	goto	l5055
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;Menu.c: 89:     LcPutChar(novaLletra);
  1662  0003AC  5061               	movf	_novaLletra^0,w,c
  1663  0003AE  ECD8  F00A         	call	_LcPutChar
  1664                           
  1665                           ;Menu.c: 90:     UenviaChar(novaLletra,tmp);
  1666  0003B2  C02C  F06C         	movff	_tmp,UenviaChar@pos
  1667  0003B6  5061               	movf	_novaLletra^0,w,c
  1668  0003B8  ECC0  F00C         	call	_UenviaChar
  1669  0003BC                     l5053:
  1670                           
  1671                           ;Menu.c: 91:     state = 7;
  1672  0003BC  0E07               	movlw	7
  1673  0003BE  6E28               	movwf	menu@state^0,c
  1674                           
  1675                           ;Menu.c: 92:    }
  1676  0003C0  0012               	return	
  1677  0003C2                     l5055:
  1678                           
  1679                           ; BSR set to: 0
  1680  0003C2  0E0B               	movlw	11
  1681  0003C4  1862               	xorwf	_NovaTecla^0,w,c
  1682  0003C6  A4D8               	btfss	status,2,c
  1683  0003C8  0012               	return	
  1684  0003CA  D7F8               	goto	l5053
  1685  0003CC                     l5059:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;Menu.c: 98:    if (tmp != 7 && NovaTecla != 11) {
  1689  0003CC  0E07               	movlw	7
  1690  0003CE  182C               	xorwf	_tmp^0,w,c
  1691  0003D0  B4D8               	btfsc	status,2,c
  1692  0003D2  D008               	goto	l5071
  1693                           
  1694                           ; BSR set to: 0
  1695  0003D4  0E0B               	movlw	11
  1696  0003D6  1862               	xorwf	_NovaTecla^0,w,c
  1697  0003D8  B4D8               	btfsc	status,2,c
  1698  0003DA  D004               	goto	l5071
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;Menu.c: 99:     tmp++;
  1702  0003DC  2A2C               	incf	_tmp^0,f,c
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;Menu.c: 100:     NovaTecla = -1;
  1706  0003DE  6862               	setf	_NovaTecla^0,c
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;Menu.c: 101:     novaLletra = -1;
  1710  0003E0  6861               	setf	_novaLletra^0,c
  1711  0003E2  D7D8               	goto	l5043
  1712  0003E4                     l5071:
  1713                           
  1714                           ; BSR set to: 0
  1715  0003E4  0E07               	movlw	7
  1716  0003E6  182C               	xorwf	_tmp^0,w,c
  1717  0003E8  B4D8               	btfsc	status,2,c
  1718  0003EA  D004               	goto	u5280
  1719                           
  1720                           ; BSR set to: 0
  1721  0003EC  0E0B               	movlw	11
  1722  0003EE  1862               	xorwf	_NovaTecla^0,w,c
  1723  0003F0  A4D8               	btfss	status,2,c
  1724  0003F2  0012               	return	
  1725  0003F4                     u5280:
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;Menu.c: 105:     LcGotoXY(6,1);
  1729  0003F4  0E01               	movlw	1
  1730  0003F6  6E74               	movwf	LcGotoXY@Row^0,c
  1731  0003F8  0E06               	movlw	6
  1732  0003FA  EC24  F00B         	call	_LcGotoXY
  1733                           
  1734                           ;Menu.c: 106:     UenviaChar('\0',tmp);
  1735  0003FE  C02C  F06C         	movff	_tmp,UenviaChar@pos
  1736  000402  0E00               	movlw	0
  1737  000404  ECC0  F00C         	call	_UenviaChar
  1738                           
  1739                           ;Menu.c: 107:     NovaTecla = -1;
  1740  000408  6862               	setf	_NovaTecla^0,c
  1741                           
  1742                           ;Menu.c: 108:     novaLletra = -1;
  1743  00040A  6861               	setf	_novaLletra^0,c
  1744                           
  1745                           ;Menu.c: 109:     tmp = 0;
  1746  00040C  0E00               	movlw	0
  1747  00040E  6E2C               	movwf	_tmp^0,c
  1748  000410                     l5085:
  1749                           
  1750                           ;Menu.c: 110:     state = 8;
  1751  000410  0E08               	movlw	8
  1752  000412  6E28               	movwf	menu@state^0,c
  1753  000414  0012               	return	
  1754  000416                     l5087:
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;Menu.c: 114:    if (novaLletra > 47 && NovaTecla != 10) {
  1758  000416  5061               	movf	_novaLletra^0,w,c
  1759  000418  0A80               	xorlw	128
  1760  00041A  0F50               	addlw	-176
  1761  00041C  A0D8               	btfss	status,0,c
  1762  00041E  D00F               	goto	l5097
  1763                           
  1764                           ; BSR set to: 0
  1765  000420  0E0A               	movlw	10
  1766  000422  1862               	xorwf	_NovaTecla^0,w,c
  1767  000424  B4D8               	btfsc	status,2,c
  1768  000426  D00B               	goto	l5097
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;Menu.c: 115:     LcPutChar(novaLletra);
  1772  000428  5061               	movf	_novaLletra^0,w,c
  1773  00042A  ECD8  F00A         	call	_LcPutChar
  1774                           
  1775                           ;Menu.c: 116:     UenviaPas(novaLletra,tmp);
  1776  00042E  C02C  F06C         	movff	_tmp,UenviaPas@pos
  1777  000432  5061               	movf	_novaLletra^0,w,c
  1778  000434  ECB8  F00C         	call	_UenviaPas
  1779  000438                     l5095:
  1780                           
  1781                           ;Menu.c: 117:     state = 9;
  1782  000438  0E09               	movlw	9
  1783  00043A  6E28               	movwf	menu@state^0,c
  1784                           
  1785                           ;Menu.c: 118:    }
  1786  00043C  0012               	return	
  1787  00043E                     l5097:
  1788                           
  1789                           ; BSR set to: 0
  1790  00043E  0E0B               	movlw	11
  1791  000440  1862               	xorwf	_NovaTecla^0,w,c
  1792  000442  A4D8               	btfss	status,2,c
  1793  000444  0012               	return	
  1794  000446  D7F8               	goto	l5095
  1795  000448                     l5101:
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;Menu.c: 124:    if (tmp != 7 && NovaTecla != 11) {
  1799  000448  0E07               	movlw	7
  1800  00044A  182C               	xorwf	_tmp^0,w,c
  1801  00044C  B4D8               	btfsc	status,2,c
  1802  00044E  D008               	goto	l5113
  1803                           
  1804                           ; BSR set to: 0
  1805  000450  0E0B               	movlw	11
  1806  000452  1862               	xorwf	_NovaTecla^0,w,c
  1807  000454  B4D8               	btfsc	status,2,c
  1808  000456  D004               	goto	l5113
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;Menu.c: 125:     tmp++;
  1812  000458  2A2C               	incf	_tmp^0,f,c
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;Menu.c: 126:     NovaTecla = -1;
  1816  00045A  6862               	setf	_NovaTecla^0,c
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;Menu.c: 127:     novaLletra = -1;
  1820  00045C  6861               	setf	_novaLletra^0,c
  1821  00045E  D7D8               	goto	l5085
  1822  000460                     l5113:
  1823                           
  1824                           ; BSR set to: 0
  1825  000460  0E07               	movlw	7
  1826  000462  182C               	xorwf	_tmp^0,w,c
  1827  000464  B4D8               	btfsc	status,2,c
  1828  000466  D004               	goto	u5350
  1829                           
  1830                           ; BSR set to: 0
  1831  000468  0E0B               	movlw	11
  1832  00046A  1862               	xorwf	_NovaTecla^0,w,c
  1833  00046C  A4D8               	btfss	status,2,c
  1834  00046E  0012               	return	
  1835  000470                     u5350:
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;Menu.c: 131:     UenviaPas('\0',tmp);
  1839  000470  C02C  F06C         	movff	_tmp,UenviaPas@pos
  1840  000474  0E00               	movlw	0
  1841  000476  ECB8  F00C         	call	_UenviaPas
  1842                           
  1843                           ;Menu.c: 132:     NovaTecla = -1;
  1844  00047A  6862               	setf	_NovaTecla^0,c
  1845                           
  1846                           ;Menu.c: 133:     novaLletra = -1;
  1847  00047C  6861               	setf	_novaLletra^0,c
  1848                           
  1849                           ;Menu.c: 134:     tmp = 0;
  1850  00047E  0E00               	movlw	0
  1851  000480  6E2C               	movwf	_tmp^0,c
  1852                           
  1853                           ;Menu.c: 135:     UcheckExists();
  1854  000482  EC1C  F00D         	call	_UcheckExists	;wreg free
  1855                           
  1856                           ;Menu.c: 136:     SMSoff();
  1857  000486  EC15  F00D         	call	_SMSoff	;wreg free
  1858                           
  1859                           ;Menu.c: 137:     state = 10;
  1860  00048A  0E0A               	movlw	10
  1861  00048C  6E28               	movwf	menu@state^0,c
  1862  00048E  0012               	return	
  1863  000490                     l5131:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;Menu.c: 141:    if (!UcheckExistsNotFinished()) {
  1867  000490  ECC8  F00C         	call	_UcheckExistsNotFinished	;wreg free
  1868  000494  B0D8               	btfsc	status,0,c
  1869  000496  0012               	return	
  1870                           
  1871                           ;Menu.c: 142:     indexUsuari = UcheckExistsGetError();
  1872  000498  ECE6  F00C         	call	_UcheckExistsGetError	;wreg free
  1873  00049C  A0D8               	btfss	status,0,c
  1874  00049E  D002               	goto	u5370
  1875  0004A0  0E01               	movlw	1
  1876  0004A2  D001               	goto	u5380
  1877  0004A4                     u5370:
  1878  0004A4  0E00               	movlw	0
  1879  0004A6                     u5380:
  1880  0004A6  6E29               	movwf	_indexUsuari^0,c
  1881                           
  1882                           ;Menu.c: 143:     state = 11;
  1883  0004A8  0E0B               	movlw	11
  1884  0004AA  6E28               	movwf	menu@state^0,c
  1885  0004AC  0012               	return	
  1886  0004AE                     l5137:
  1887                           
  1888                           ;Menu.c: 148:     state = 12;
  1889  0004AE  0E0C               	movlw	12
  1890  0004B0  6E28               	movwf	menu@state^0,c
  1891                           
  1892                           ;Menu.c: 149:    }
  1893  0004B2  0012               	return	
  1894  0004B4                     l5155:
  1895                           
  1896                           ;Menu.c: 159:     state = 0;
  1897  0004B4  0E00               	movlw	0
  1898  0004B6  6E28               	movwf	menu@state^0,c
  1899  0004B8  0012               	return	
  1900  0004BA                     l5157:
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;Menu.c: 164:    LcClear();
  1904  0004BA  EC48  F00C         	call	_LcClear	;wreg free
  1905                           
  1906                           ;Menu.c: 165:    SiFerMenu();
  1907  0004BE  EC20  F00D         	call	_SiFerMenu	;wreg free
  1908                           
  1909                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  1910  0004C2  502A               	movf	_menuDalt^0,w,c
  1911  0004C4  ECCE  F00C         	call	_GLCDMostraMenu
  1912                           
  1913                           ;Menu.c: 167:    novaDireccio = -1;
  1914  0004C8  6860               	setf	_novaDireccio^0,c
  1915                           
  1916                           ;Menu.c: 168:    NovaTecla = -1;
  1917  0004CA  6862               	setf	_NovaTecla^0,c
  1918                           
  1919                           ;Menu.c: 169:    state = 13;
  1920  0004CC  0E0D               	movlw	13
  1921  0004CE  6E28               	movwf	menu@state^0,c
  1922                           
  1923                           ;Menu.c: 170:   break;
  1924  0004D0  0012               	return	
  1925  0004D2                     l5169:
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;Menu.c: 172:    if (novaDireccio == 8) {
  1929  0004D2  0E08               	movlw	8
  1930  0004D4  1860               	xorwf	_novaDireccio^0,w,c
  1931  0004D6  A4D8               	btfss	status,2,c
  1932  0004D8  D005               	goto	l5177
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  1936  0004DA  0E04               	movlw	4
  1937  0004DC  602A               	cpfslt	_menuDalt^0,c
  1938  0004DE  D7E7               	goto	l5137
  1939                           
  1940                           ; BSR set to: 0
  1941  0004E0  2A2A               	incf	_menuDalt^0,f,c
  1942  0004E2  D7E5               	goto	l5137
  1943  0004E4                     l5177:
  1944                           
  1945                           ; BSR set to: 0
  1946  0004E4  0E02               	movlw	2
  1947  0004E6  1860               	xorwf	_novaDireccio^0,w,c
  1948  0004E8  A4D8               	btfss	status,2,c
  1949  0004EA  D005               	goto	l5185
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  1953  0004EC  502A               	movf	_menuDalt^0,w,c
  1954  0004EE  B4D8               	btfsc	status,2,c
  1955  0004F0  D7DE               	goto	l5137
  1956                           
  1957                           ; BSR set to: 0
  1958  0004F2  062A               	decf	_menuDalt^0,f,c
  1959  0004F4  D7DC               	goto	l5137
  1960  0004F6                     l5185:
  1961                           
  1962                           ; BSR set to: 0
  1963  0004F6  0E0B               	movlw	11
  1964  0004F8  1862               	xorwf	_NovaTecla^0,w,c
  1965  0004FA  A4D8               	btfss	status,2,c
  1966  0004FC  D013               	goto	l5197
  1967                           
  1968                           ; BSR set to: 0
  1969  0004FE  0E03               	movlw	3
  1970  000500  182A               	xorwf	_menuDalt^0,w,c
  1971  000502  A4D8               	btfss	status,2,c
  1972  000504  D00F               	goto	l5197
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;Menu.c: 181:     NoFerMenu();
  1976  000506  EC22  F00D         	call	_NoFerMenu	;wreg free
  1977                           
  1978                           ;Menu.c: 182:     LcClear();
  1979  00050A  EC48  F00C         	call	_LcClear	;wreg free
  1980                           
  1981                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  1982  00050E  0EAA               	movlw	low STR_5
  1983  000510  6E6F               	movwf	LcNewString@new_s^0,c
  1984  000512  506F               	movf	LcNewString@new_s^0,w,c
  1985  000514  A4D8               	btfss	status,2,c
  1986  000516  0E02               	movlw	high __smallconst
  1987  000518  6E70               	movwf	(LcNewString@new_s+1)^0,c
  1988  00051A  ECDA  F00C         	call	_LcNewString	;wreg free
  1989                           
  1990                           ;Menu.c: 184:     state = 14;
  1991  00051E  0E0E               	movlw	14
  1992  000520  6E28               	movwf	menu@state^0,c
  1993                           
  1994                           ;Menu.c: 185:    }
  1995  000522  0012               	return	
  1996  000524                     l5197:
  1997                           
  1998                           ; BSR set to: 0
  1999  000524  0E0B               	movlw	11
  2000  000526  1862               	xorwf	_NovaTecla^0,w,c
  2001  000528  A4D8               	btfss	status,2,c
  2002  00052A  0012               	return	
  2003                           
  2004                           ; BSR set to: 0
  2005  00052C  042A               	decf	_menuDalt^0,w,c
  2006  00052E  A4D8               	btfss	status,2,c
  2007  000530  0012               	return	
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;Menu.c: 187:     LcClear();
  2011  000532  EC48  F00C         	call	_LcClear	;wreg free
  2012                           
  2013                           ;Menu.c: 188:     NoFerMenu();
  2014  000536  EC22  F00D         	call	_NoFerMenu	;wreg free
  2015                           
  2016                           ;Menu.c: 189:     LcNewString("Modify Time:");
  2017  00053A  0E92               	movlw	low STR_6
  2018  00053C  6E6F               	movwf	LcNewString@new_s^0,c
  2019  00053E  506F               	movf	LcNewString@new_s^0,w,c
  2020  000540  A4D8               	btfss	status,2,c
  2021  000542  0E02               	movlw	high __smallconst
  2022  000544  6E70               	movwf	(LcNewString@new_s+1)^0,c
  2023  000546  ECDA  F00C         	call	_LcNewString	;wreg free
  2024                           
  2025                           ;Menu.c: 190:     NovaTecla = -1;
  2026  00054A  6862               	setf	_NovaTecla^0,c
  2027                           
  2028                           ;Menu.c: 191:     state = 16;
  2029  00054C  0E10               	movlw	16
  2030  00054E  6E28               	movwf	menu@state^0,c
  2031  000550  0012               	return	
  2032  000552                     l5211:
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;Menu.c: 195:    if (LcLliure()) {
  2036  000552  ECE0  F00C         	call	_LcLliure	;wreg free
  2037  000556  A0D8               	btfss	status,0,c
  2038  000558  0012               	return	
  2039                           
  2040                           ;Menu.c: 196:     LcNewString(UgetUserName(indexUsuari));
  2041  00055A  5029               	movf	_indexUsuari^0,w,c
  2042  00055C  ECA5  F00C         	call	_UgetUserName
  2043  000560  C06C  F06F         	movff	?_UgetUserName,LcNewString@new_s
  2044  000564  C06D  F070         	movff	?_UgetUserName+1,LcNewString@new_s+1
  2045  000568  ECDA  F00C         	call	_LcNewString	;wreg free
  2046                           
  2047                           ;Menu.c: 197:     TiResetTics(timerMenu);
  2048  00056C  502B               	movf	_timerMenu^0,w,c
  2049  00056E  EC8D  F00C         	call	_TiResetTics
  2050                           
  2051                           ;Menu.c: 198:     state = 15;
  2052  000572  0E0F               	movlw	15
  2053  000574  6E28               	movwf	menu@state^0,c
  2054  000576  0012               	return	
  2055  000578                     l5219:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;Menu.c: 202:    if (TiGetTics(timerMenu) > 2410) {
  2059  000578  502B               	movf	_timerMenu^0,w,c
  2060  00057A  EC20  F00C         	call	_TiGetTics
  2061  00057E  BE6D               	btfsc	(?_TiGetTics+1)^0,7,c
  2062  000580  0012               	return	
  2063  000582  0E6B               	movlw	107
  2064  000584  5C6C               	subwf	?_TiGetTics^0,w,c
  2065  000586  0E09               	movlw	9
  2066  000588  586D               	subwfb	(?_TiGetTics+1)^0,w,c
  2067  00058A  A0D8               	btfss	status,0,c
  2068  00058C  0012               	return	
  2069  00058E  D792               	goto	l5155
  2070  000590                     l5223:
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;Menu.c: 207:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  2074  000590  ECE0  F00C         	call	_LcLliure	;wreg free
  2075  000594  B0D8               	btfsc	status,0,c
  2076  000596  BE62               	btfsc	_NovaTecla^0,7,c
  2077  000598  D047               	goto	l5289
  2078  00059A  5062               	movf	_NovaTecla^0,w,c
  2079  00059C  0A80               	xorlw	128
  2080  00059E  0F76               	addlw	-138
  2081  0005A0  B0D8               	btfsc	status,0,c
  2082  0005A2  D042               	goto	l5289
  2083                           
  2084                           ;Menu.c: 208:     LcGotoXY(0,1);
  2085  0005A4  0E01               	movlw	1
  2086  0005A6  6E74               	movwf	LcGotoXY@Row^0,c
  2087  0005A8  0E00               	movlw	0
  2088  0005AA  EC24  F00B         	call	_LcGotoXY
  2089                           
  2090                           ;Menu.c: 209:     horaTmp[0] = NovaTecla+48;
  2091  0005AE  5062               	movf	_NovaTecla^0,w,c
  2092  0005B0  0F30               	addlw	48
  2093  0005B2  6E42               	movwf	_horaTmp^0,c
  2094                           
  2095                           ;Menu.c: 210:     LcPutChar(horaTmp[0]);
  2096  0005B4  5042               	movf	_horaTmp^0,w,c
  2097  0005B6  ECD8  F00A         	call	_LcPutChar
  2098                           
  2099                           ;Menu.c: 211:     NovaTecla = -1;
  2100  0005BA  6862               	setf	_NovaTecla^0,c
  2101                           
  2102                           ;Menu.c: 212:     state = 17;
  2103  0005BC  0E11               	movlw	17
  2104  0005BE                     L1:
  2105  0005BE  6E28               	movwf	menu@state^0,c
  2106                           
  2107                           ;Menu.c: 213:    }
  2108  0005C0  0012               	return	
  2109  0005C2                     l5243:
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;Menu.c: 219:    if (NovaTecla > -1 && NovaTecla < 10) {
  2113  0005C2  BE62               	btfsc	_NovaTecla^0,7,c
  2114  0005C4  D031               	goto	l5289
  2115                           
  2116                           ; BSR set to: 0
  2117  0005C6  5062               	movf	_NovaTecla^0,w,c
  2118  0005C8  0A80               	xorlw	128
  2119  0005CA  0F76               	addlw	-138
  2120  0005CC  B0D8               	btfsc	status,0,c
  2121  0005CE  D02C               	goto	l5289
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;Menu.c: 220:     horaTmp[1] = NovaTecla+48;
  2125  0005D0  5062               	movf	_NovaTecla^0,w,c
  2126  0005D2  0F30               	addlw	48
  2127  0005D4  6E43               	movwf	(_horaTmp+1)^0,c
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;Menu.c: 221:     LcPutChar(horaTmp[1]);
  2131  0005D6  5043               	movf	(_horaTmp+1)^0,w,c
  2132  0005D8  ECD8  F00A         	call	_LcPutChar
  2133                           
  2134                           ;Menu.c: 222:     NovaTecla = -1;
  2135  0005DC  6862               	setf	_NovaTecla^0,c
  2136                           
  2137                           ;Menu.c: 223:     LcPutChar(':');
  2138  0005DE  0E3A               	movlw	58
  2139  0005E0  ECD8  F00A         	call	_LcPutChar
  2140                           
  2141                           ;Menu.c: 224:     state = 18;
  2142  0005E4  0E12               	movlw	18
  2143  0005E6  D7EB               	goto	L1
  2144  0005E8                     l5261:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;Menu.c: 231:    if (NovaTecla > -1 && NovaTecla < 10) {
  2148  0005E8  BE62               	btfsc	_NovaTecla^0,7,c
  2149  0005EA  D01E               	goto	l5289
  2150                           
  2151                           ; BSR set to: 0
  2152  0005EC  5062               	movf	_NovaTecla^0,w,c
  2153  0005EE  0A80               	xorlw	128
  2154  0005F0  0F76               	addlw	-138
  2155  0005F2  B0D8               	btfsc	status,0,c
  2156  0005F4  D019               	goto	l5289
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;Menu.c: 232:     horaTmp[2] = NovaTecla+48;
  2160  0005F6  5062               	movf	_NovaTecla^0,w,c
  2161  0005F8  0F30               	addlw	48
  2162  0005FA  6E44               	movwf	(_horaTmp+2)^0,c
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;Menu.c: 233:     LcPutChar(horaTmp[2]);
  2166  0005FC  5044               	movf	(_horaTmp+2)^0,w,c
  2167  0005FE  ECD8  F00A         	call	_LcPutChar
  2168                           
  2169                           ;Menu.c: 234:     NovaTecla = -1;
  2170  000602  6862               	setf	_NovaTecla^0,c
  2171                           
  2172                           ;Menu.c: 235:     state = 19;
  2173  000604  0E13               	movlw	19
  2174  000606  D7DB               	goto	L1
  2175  000608                     l5277:
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;Menu.c: 242:    if (NovaTecla > -1 && NovaTecla < 10) {
  2179  000608  BE62               	btfsc	_NovaTecla^0,7,c
  2180  00060A  D00E               	goto	l5289
  2181                           
  2182                           ; BSR set to: 0
  2183  00060C  5062               	movf	_NovaTecla^0,w,c
  2184  00060E  0A80               	xorlw	128
  2185  000610  0F76               	addlw	-138
  2186  000612  B0D8               	btfsc	status,0,c
  2187  000614  D009               	goto	l5289
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;Menu.c: 243:     horaTmp[3] = NovaTecla+48;
  2191  000616  5062               	movf	_NovaTecla^0,w,c
  2192  000618  0F30               	addlw	48
  2193  00061A  6E45               	movwf	(_horaTmp+3)^0,c
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;Menu.c: 244:     LcPutChar(horaTmp[3]);
  2197  00061C  5045               	movf	(_horaTmp+3)^0,w,c
  2198  00061E  ECD8  F00A         	call	_LcPutChar
  2199                           
  2200                           ;Menu.c: 245:     NovaTecla = -1;
  2201  000622  6862               	setf	_NovaTecla^0,c
  2202                           
  2203                           ;Menu.c: 246:     state = 20;
  2204  000624  0E14               	movlw	20
  2205  000626  D7CB               	goto	L1
  2206  000628                     l5289:
  2207                           
  2208                           ; BSR set to: 0
  2209  000628  0E0A               	movlw	10
  2210  00062A  1862               	xorwf	_NovaTecla^0,w,c
  2211  00062C  A4D8               	btfss	status,2,c
  2212  00062E  0012               	return	
  2213  000630  D73E               	goto	l5137
  2214  000632                     l5293:
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;Menu.c: 253:    if (NovaTecla == 11) {
  2218  000632  0E0B               	movlw	11
  2219  000634  1862               	xorwf	_NovaTecla^0,w,c
  2220  000636  A4D8               	btfss	status,2,c
  2221  000638  D7F7               	goto	l5289
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;Menu.c: 254:     HActualitzaHora(horaTmp);
  2225  00063A  0E42               	movlw	low _horaTmp
  2226  00063C  6E6C               	movwf	HActualitzaHora@nova^0,c
  2227  00063E  ECBC  F00B         	call	_HActualitzaHora	;wreg free
  2228                           
  2229                           ;Menu.c: 255:     NovaTecla = -1;
  2230  000642  6862               	setf	_NovaTecla^0,c
  2231  000644  D734               	goto	l5137
  2232  000646                     l5307:
  2233  000646  5028               	movf	menu@state^0,w,c
  2234  000648  0100               	movlb	0	; () banked
  2235  00064A  6FB4               	movwf	??_menu& (0+255),b
  2236  00064C  6BB5               	clrf	(??_menu+1)& (0+255),b
  2237                           
  2238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2239                           ; Switch size 1, requested type "simple"
  2240                           ; Number of cases is 1, Range of values is 0 to 0
  2241                           ; switch strategies available:
  2242                           ; Name         Instructions Cycles
  2243                           ; simple_byte            4     3 (average)
  2244                           ;	Chosen strategy is simple_byte
  2245  00064E  51B5               	movf	(??_menu+1)& (0+255),w,b
  2246  000650  0A00               	xorlw	0	; case 0
  2247  000652  A4D8               	btfss	status,2,c
  2248  000654  0012               	return	
  2249                           
  2250                           ; BSR set to: 0
  2251                           ; Switch size 1, requested type "simple"
  2252                           ; Number of cases is 21, Range of values is 0 to 20
  2253                           ; switch strategies available:
  2254                           ; Name         Instructions Cycles
  2255                           ; simple_byte           64    33 (average)
  2256                           ;	Chosen strategy is simple_byte
  2257  000656  51B4               	movf	??_menu& (0+255),w,b
  2258  000658  0A00               	xorlw	0	; case 0
  2259  00065A  B4D8               	btfsc	status,2,c
  2260  00065C  D637               	goto	l4991
  2261  00065E  0A01               	xorlw	1	; case 1
  2262  000660  B4D8               	btfsc	status,2,c
  2263  000662  D641               	goto	l4997
  2264  000664  0A03               	xorlw	3	; case 2
  2265  000666  B4D8               	btfsc	status,2,c
  2266  000668  D653               	goto	l5007
  2267  00066A  0A01               	xorlw	1	; case 3
  2268  00066C  B4D8               	btfsc	status,2,c
  2269  00066E  D662               	goto	l472
  2270  000670  0A07               	xorlw	7	; case 4
  2271  000672  B4D8               	btfsc	status,2,c
  2272  000674  D66E               	goto	l5027
  2273  000676  0A01               	xorlw	1	; case 5
  2274  000678  B4D8               	btfsc	status,2,c
  2275  00067A  D67F               	goto	l5035
  2276  00067C  0A03               	xorlw	3	; case 6
  2277  00067E  B4D8               	btfsc	status,2,c
  2278  000680  D68C               	goto	l5045
  2279  000682  0A01               	xorlw	1	; case 7
  2280  000684  B4D8               	btfsc	status,2,c
  2281  000686  D6A2               	goto	l5059
  2282  000688  0A0F               	xorlw	15	; case 8
  2283  00068A  B4D8               	btfsc	status,2,c
  2284  00068C  D6C4               	goto	l5087
  2285  00068E  0A01               	xorlw	1	; case 9
  2286  000690  B4D8               	btfsc	status,2,c
  2287  000692  D6DA               	goto	l5101
  2288  000694  0A03               	xorlw	3	; case 10
  2289  000696  B4D8               	btfsc	status,2,c
  2290  000698  D6FB               	goto	l5131
  2291  00069A  0A01               	xorlw	1	; case 11
  2292  00069C  B4D8               	btfsc	status,2,c
  2293  00069E  D707               	goto	l5137
  2294  0006A0  0A07               	xorlw	7	; case 12
  2295  0006A2  B4D8               	btfsc	status,2,c
  2296  0006A4  D70A               	goto	l5157
  2297  0006A6  0A01               	xorlw	1	; case 13
  2298  0006A8  B4D8               	btfsc	status,2,c
  2299  0006AA  D713               	goto	l5169
  2300  0006AC  0A03               	xorlw	3	; case 14
  2301  0006AE  B4D8               	btfsc	status,2,c
  2302  0006B0  D750               	goto	l5211
  2303  0006B2  0A01               	xorlw	1	; case 15
  2304  0006B4  B4D8               	btfsc	status,2,c
  2305  0006B6  D760               	goto	l5219
  2306  0006B8  0A1F               	xorlw	31	; case 16
  2307  0006BA  B4D8               	btfsc	status,2,c
  2308  0006BC  D769               	goto	l5223
  2309  0006BE  0A01               	xorlw	1	; case 17
  2310  0006C0  B4D8               	btfsc	status,2,c
  2311  0006C2  D77F               	goto	l5243
  2312  0006C4  0A03               	xorlw	3	; case 18
  2313  0006C6  B4D8               	btfsc	status,2,c
  2314  0006C8  D78F               	goto	l5261
  2315  0006CA  0A01               	xorlw	1	; case 19
  2316  0006CC  B4D8               	btfsc	status,2,c
  2317  0006CE  D79C               	goto	l5277
  2318  0006D0  0A07               	xorlw	7	; case 20
  2319  0006D2  A4D8               	btfss	status,2,c
  2320  0006D4  0012               	return	
  2321  0006D6  D7AD               	goto	l5293
  2322  0006D8                     __end_of_menu:
  2323                           	callstack 0
  2324                           
  2325 ;; *************** function _UgetUserName *****************
  2326 ;; Defined at:
  2327 ;;		line 25 in file "Usuaris.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  quin            1    wreg     unsigned char 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  quin            1    7[COMRAM] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  2    5[COMRAM] PTR unsigned char 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, prodl, prodh
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1
  2341 ;;      Params:         2       0       0
  2342 ;;      Locals:         1       0       0
  2343 ;;      Temps:          0       0       0
  2344 ;;      Totals:         3       0       0
  2345 ;;Total ram usage:        3 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 2
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_menu
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text5
  2356  00194A                     __ptext5:
  2357                           	callstack 0
  2358  00194A                     _UgetUserName:
  2359                           	callstack 27
  2360                           
  2361                           ;incstack = 0
  2362                           ;UgetUserName@quin stored from wreg
  2363  00194A  6E6E               	movwf	UgetUserName@quin^0,c
  2364                           
  2365                           ;Usuaris.c: 26:     return usuaris[quin].username;
  2366  00194C  506E               	movf	UgetUserName@quin^0,w,c
  2367  00194E  0D17               	mullw	23
  2368  001950  0E00               	movlw	low _usuaris
  2369  001952  24F3               	addwf	243,w,c
  2370  001954  6E6C               	movwf	?_UgetUserName^0,c
  2371  001956  0E01               	movlw	high _usuaris
  2372  001958  20F4               	addwfc	prodh,w,c
  2373  00195A  6E6D               	movwf	(?_UgetUserName+1)^0,c
  2374  00195C  0012               	return		;funcret
  2375  00195E                     __end_of_UgetUserName:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function _UgetNumUsuaris *****************
  2379 ;; Defined at:
  2380 ;;		line 28 in file "Usuaris.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      unsigned char 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1
  2394 ;;      Params:         0       0       0
  2395 ;;      Locals:         0       0       0
  2396 ;;      Temps:          0       0       0
  2397 ;;      Totals:         0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 2
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_menu
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text6
  2409  001A34                     __ptext6:
  2410                           	callstack 0
  2411  001A34                     _UgetNumUsuaris:
  2412                           	callstack 27
  2413                           
  2414                           ;Usuaris.c: 29:     return numUsuaris;
  2415                           
  2416                           ;incstack = 0
  2417  001A34  5026               	movf	_numUsuaris^0,w,c
  2418  001A36  0012               	return		;funcret
  2419  001A38                     __end_of_UgetNumUsuaris:
  2420                           	callstack 0
  2421                           
  2422 ;; *************** function _UenviaPas *****************
  2423 ;; Defined at:
  2424 ;;		line 44 in file "Usuaris.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  c               1    wreg     unsigned char 
  2427 ;;  pos             1    5[COMRAM] unsigned char 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  c               1    6[COMRAM] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1
  2439 ;;      Params:         1       0       0
  2440 ;;      Locals:         1       0       0
  2441 ;;      Temps:          0       0       0
  2442 ;;      Totals:         2       0       0
  2443 ;;Total ram usage:        2 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; Hardware stack levels required when called: 2
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_menu
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text7
  2454  001970                     __ptext7:
  2455                           	callstack 0
  2456  001970                     _UenviaPas:
  2457                           	callstack 27
  2458                           
  2459                           ;incstack = 0
  2460                           ;UenviaPas@c stored from wreg
  2461  001970  6E6D               	movwf	UenviaPas@c^0,c
  2462                           
  2463                           ;Usuaris.c: 45:     tmpPassword[pos] = c;
  2464  001972  506C               	movf	UenviaPas@pos^0,w,c
  2465  001974  0F01               	addlw	low _tmpPassword
  2466  001976  6ED9               	movwf	fsr2l,c
  2467  001978  6ADA               	clrf	fsr2h,c
  2468  00197A  C06D  FFDF         	movff	UenviaPas@c,indf2
  2469  00197E  0012               	return		;funcret
  2470  001980                     __end_of_UenviaPas:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _UenviaChar *****************
  2474 ;; Defined at:
  2475 ;;		line 41 in file "Usuaris.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  c               1    wreg     unsigned char 
  2478 ;;  pos             1    5[COMRAM] unsigned char 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  c               1    6[COMRAM] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1
  2490 ;;      Params:         1       0       0
  2491 ;;      Locals:         1       0       0
  2492 ;;      Temps:          0       0       0
  2493 ;;      Totals:         2       0       0
  2494 ;;Total ram usage:        2 bytes
  2495 ;; Hardware stack levels used: 1
  2496 ;; Hardware stack levels required when called: 2
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_menu
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text8
  2505  001980                     __ptext8:
  2506                           	callstack 0
  2507  001980                     _UenviaChar:
  2508                           	callstack 27
  2509                           
  2510                           ;incstack = 0
  2511                           ;UenviaChar@c stored from wreg
  2512  001980  6E6D               	movwf	UenviaChar@c^0,c
  2513                           
  2514                           ;Usuaris.c: 42:     tmpUsername[pos] = c;
  2515  001982  506C               	movf	UenviaChar@pos^0,w,c
  2516  001984  0F39               	addlw	low _tmpUsername
  2517  001986  6ED9               	movwf	fsr2l,c
  2518  001988  6ADA               	clrf	fsr2h,c
  2519  00198A  C06D  FFDF         	movff	UenviaChar@c,indf2
  2520  00198E  0012               	return		;funcret
  2521  001990                     __end_of_UenviaChar:
  2522                           	callstack 0
  2523                           
  2524 ;; *************** function _UcheckExistsNotFinished *****************
  2525 ;; Defined at:
  2526 ;;		line 35 in file "Usuaris.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;		None               void
  2533 ;; Registers used:
  2534 ;;		status,0
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1
  2540 ;;      Params:         0       0       0
  2541 ;;      Locals:         0       0       0
  2542 ;;      Temps:          0       0       0
  2543 ;;      Totals:         0       0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 2
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_menu
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text9
  2555  001990                     __ptext9:
  2556                           	callstack 0
  2557  001990                     _UcheckExistsNotFinished:
  2558                           	callstack 27
  2559                           
  2560                           ;Usuaris.c: 36:     return do_check_exists;
  2561                           
  2562                           ;incstack = 0
  2563  001990  BE78               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2564  001992  D002               	goto	l1785
  2565  001994  90D8               	bcf	status,0,c
  2566  001996  0012               	return	
  2567  001998                     l1785:
  2568  001998  80D8               	bsf	status,0,c
  2569  00199A  0012               	return		;funcret
  2570  00199C                     __end_of_UcheckExistsNotFinished:
  2571                           	callstack 0
  2572                           
  2573 ;; *************** function _UcheckExistsGetError *****************
  2574 ;; Defined at:
  2575 ;;		line 38 in file "Usuaris.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;		None               void
  2582 ;; Registers used:
  2583 ;;		wreg, status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1
  2589 ;;      Params:         0       0       0
  2590 ;;      Locals:         0       0       0
  2591 ;;      Temps:          1       0       0
  2592 ;;      Totals:         1       0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 2
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_menu
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text10
  2604  0019CC                     __ptext10:
  2605                           	callstack 0
  2606  0019CC                     _UcheckExistsGetError:
  2607                           	callstack 27
  2608                           
  2609                           ;Usuaris.c: 39:     return usuariLoguejat;
  2610                           
  2611                           ;incstack = 0
  2612  0019CC  C05F  F06C         	movff	_usuariLoguejat,??_UcheckExistsGetError
  2613  0019D0  306C               	rrcf	??_UcheckExistsGetError^0,w,c
  2614  0019D2  0012               	return		;funcret
  2615  0019D4                     __end_of_UcheckExistsGetError:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _UcheckExists *****************
  2619 ;; Defined at:
  2620 ;;		line 32 in file "Usuaris.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		None
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1
  2634 ;;      Params:         0       0       0
  2635 ;;      Locals:         0       0       0
  2636 ;;      Temps:          0       0       0
  2637 ;;      Totals:         0       0       0
  2638 ;;Total ram usage:        0 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 2
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_menu
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text11
  2649  001A38                     __ptext11:
  2650                           	callstack 0
  2651  001A38                     _UcheckExists:
  2652                           	callstack 27
  2653                           
  2654                           ;Usuaris.c: 33:     do_check_exists = 1;
  2655                           
  2656                           ;incstack = 0
  2657  001A38  8E78               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2658  001A3A  0012               	return		;funcret
  2659  001A3C                     __end_of_UcheckExists:
  2660                           	callstack 0
  2661                           
  2662 ;; *************** function _URegister *****************
  2663 ;; Defined at:
  2664 ;;		line 52 in file "Usuaris.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		None
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1
  2678 ;;      Params:         0       0       0
  2679 ;;      Locals:         0       0       0
  2680 ;;      Temps:          0       0       0
  2681 ;;      Totals:         0       0       0
  2682 ;;Total ram usage:        0 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; Hardware stack levels required when called: 2
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_menu
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text12
  2693  001A3C                     __ptext12:
  2694                           	callstack 0
  2695  001A3C                     _URegister:
  2696                           	callstack 27
  2697                           
  2698                           ;Usuaris.c: 53:     do_register = 1;
  2699                           
  2700                           ;incstack = 0
  2701  001A3C  8C78               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2702  001A3E  0012               	return		;funcret
  2703  001A40                     __end_of_URegister:
  2704                           	callstack 0
  2705                           
  2706 ;; *************** function _SiFerMenu *****************
  2707 ;; Defined at:
  2708 ;;		line 19 in file "GestioLCD.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		None
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1
  2722 ;;      Params:         0       0       0
  2723 ;;      Locals:         0       0       0
  2724 ;;      Temps:          0       0       0
  2725 ;;      Totals:         0       0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used: 1
  2728 ;; Hardware stack levels required when called: 2
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_menu
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text13
  2737  001A40                     __ptext13:
  2738                           	callstack 0
  2739  001A40                     _SiFerMenu:
  2740                           	callstack 27
  2741                           
  2742                           ;GestioLCD.c: 20:     ferMenu = 1;
  2743                           
  2744                           ;incstack = 0
  2745  001A40  8878               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2746  001A42  0012               	return		;funcret
  2747  001A44                     __end_of_SiFerMenu:
  2748                           	callstack 0
  2749                           
  2750 ;; *************** function _SMSon *****************
  2751 ;; Defined at:
  2752 ;;		line 139 in file "Ssms.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		None
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1
  2766 ;;      Params:         0       0       0
  2767 ;;      Locals:         0       0       0
  2768 ;;      Temps:          0       0       0
  2769 ;;      Totals:         0       0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; Hardware stack levels required when called: 2
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_menu
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text14
  2781  001A24                     __ptext14:
  2782                           	callstack 0
  2783  001A24                     _SMSon:
  2784                           	callstack 27
  2785                           
  2786                           ;Ssms.c: 140:     setSMSon = 1;
  2787                           
  2788                           ;incstack = 0
  2789  001A24  8279               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2790                           
  2791                           ;Ssms.c: 141:     novaTecla = -1;
  2792  001A26  6865               	setf	_novaTecla^0,c
  2793  001A28  0012               	return		;funcret
  2794  001A2A                     __end_of_SMSon:
  2795                           	callstack 0
  2796                           
  2797 ;; *************** function _SMSoff *****************
  2798 ;; Defined at:
  2799 ;;		line 144 in file "Ssms.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		None
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1
  2813 ;;      Params:         0       0       0
  2814 ;;      Locals:         0       0       0
  2815 ;;      Temps:          0       0       0
  2816 ;;      Totals:         0       0       0
  2817 ;;Total ram usage:        0 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; Hardware stack levels required when called: 2
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_menu
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text15
  2828  001A2A                     __ptext15:
  2829                           	callstack 0
  2830  001A2A                     _SMSoff:
  2831                           	callstack 27
  2832                           
  2833                           ;Ssms.c: 145:     setSMSon = 0;
  2834                           
  2835                           ;incstack = 0
  2836  001A2A  9279               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2837                           
  2838                           ;Ssms.c: 146:     novaTecla = -1;
  2839  001A2C  6865               	setf	_novaTecla^0,c
  2840  001A2E  0012               	return		;funcret
  2841  001A30                     __end_of_SMSoff:
  2842                           	callstack 0
  2843                           
  2844 ;; *************** function _NoFerMenu *****************
  2845 ;; Defined at:
  2846 ;;		line 22 in file "GestioLCD.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;		None
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		None
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1
  2860 ;;      Params:         0       0       0
  2861 ;;      Locals:         0       0       0
  2862 ;;      Temps:          0       0       0
  2863 ;;      Totals:         0       0       0
  2864 ;;Total ram usage:        0 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 2
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_menu
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text16
  2875  001A44                     __ptext16:
  2876                           	callstack 0
  2877  001A44                     _NoFerMenu:
  2878                           	callstack 27
  2879                           
  2880                           ;GestioLCD.c: 23:     ferMenu = 0;
  2881                           
  2882                           ;incstack = 0
  2883  001A44  9878               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2884  001A46  0012               	return		;funcret
  2885  001A48                     __end_of_NoFerMenu:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _HActualitzaHora *****************
  2889 ;; Defined at:
  2890 ;;		line 13 in file "Hora.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  nova            1    5[COMRAM] PTR unsigned char 
  2893 ;;		 -> horaTmp(4), 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1
  2905 ;;      Params:         1       0       0
  2906 ;;      Locals:         0       0       0
  2907 ;;      Temps:          0       0       0
  2908 ;;      Totals:         1       0       0
  2909 ;;Total ram usage:        1 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; Hardware stack levels required when called: 2
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_menu
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text17
  2920  001778                     __ptext17:
  2921                           	callstack 0
  2922  001778                     _HActualitzaHora:
  2923                           	callstack 27
  2924                           
  2925                           ;Hora.c: 14:     hora[0] = nova[0];
  2926                           
  2927                           ;incstack = 0
  2928  001778  506C               	movf	HActualitzaHora@nova^0,w,c
  2929  00177A  6ED9               	movwf	fsr2l,c
  2930  00177C  6ADA               	clrf	fsr2h,c
  2931  00177E  50DF               	movf	indf2,w,c
  2932  001780  6E57               	movwf	_hora^0,c
  2933                           
  2934                           ;Hora.c: 15:     hora[1] = nova[1];
  2935  001782  506C               	movf	HActualitzaHora@nova^0,w,c
  2936  001784  6ED9               	movwf	fsr2l,c
  2937  001786  6ADA               	clrf	fsr2h,c
  2938  001788  0E01               	movlw	1
  2939  00178A  26D9               	addwf	fsr2l,f,c
  2940  00178C  50DF               	movf	indf2,w,c
  2941  00178E  6E58               	movwf	(_hora+1)^0,c
  2942                           
  2943                           ;Hora.c: 16:     hora[3] = nova[2];
  2944  001790  506C               	movf	HActualitzaHora@nova^0,w,c
  2945  001792  6ED9               	movwf	fsr2l,c
  2946  001794  6ADA               	clrf	fsr2h,c
  2947  001796  0E02               	movlw	2
  2948  001798  26D9               	addwf	fsr2l,f,c
  2949  00179A  50DF               	movf	indf2,w,c
  2950  00179C  6E5A               	movwf	(_hora+3)^0,c
  2951                           
  2952                           ;Hora.c: 17:     hora[4] = nova[3];
  2953  00179E  506C               	movf	HActualitzaHora@nova^0,w,c
  2954  0017A0  6ED9               	movwf	fsr2l,c
  2955  0017A2  6ADA               	clrf	fsr2h,c
  2956  0017A4  0E03               	movlw	3
  2957  0017A6  26D9               	addwf	fsr2l,f,c
  2958  0017A8  50DF               	movf	indf2,w,c
  2959  0017AA  6E5B               	movwf	(_hora+4)^0,c
  2960  0017AC  0012               	return		;funcret
  2961  0017AE                     __end_of_HActualitzaHora:
  2962                           	callstack 0
  2963                           
  2964 ;; *************** function _GLCDMostraMenu *****************
  2965 ;; Defined at:
  2966 ;;		line 30 in file "GestioLCD.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  num             1    wreg     unsigned char 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  num             1    5[COMRAM] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1
  2980 ;;      Params:         0       0       0
  2981 ;;      Locals:         1       0       0
  2982 ;;      Temps:          0       0       0
  2983 ;;      Totals:         1       0       0
  2984 ;;Total ram usage:        1 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 2
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_menu
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text18
  2995  00199C                     __ptext18:
  2996                           	callstack 0
  2997  00199C                     _GLCDMostraMenu:
  2998                           	callstack 27
  2999                           
  3000                           ;incstack = 0
  3001                           ;GLCDMostraMenu@num stored from wreg
  3002  00199C  6E6C               	movwf	GLCDMostraMenu@num^0,c
  3003                           
  3004                           ;GestioLCD.c: 31:     newString = 1;
  3005  00199E  8678               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  3006                           
  3007                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  3008  0019A0  C06C  F01B         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  3009                           
  3010                           ;GestioLCD.c: 33:     ferMenu = 1;
  3011  0019A4  8878               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  3012  0019A6  0012               	return		;funcret
  3013  0019A8                     __end_of_GLCDMostraMenu:
  3014                           	callstack 0
  3015                           
  3016 ;; *************** function _init_ports *****************
  3017 ;; Defined at:
  3018 ;;		line 23 in file "main.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1
  3032 ;;      Params:         0       0       0
  3033 ;;      Locals:         0       0       0
  3034 ;;      Temps:          0       0       0
  3035 ;;      Totals:         0       0       0
  3036 ;;Total ram usage:        0 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 2
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text19
  3047  0018FA                     __ptext19:
  3048                           	callstack 0
  3049  0018FA                     _init_ports:
  3050                           	callstack 28
  3051                           
  3052                           ;incstack = 0
  3053  0018FA  0E03               	movlw	3
  3054  0018FC  6E92               	movwf	146,c	;volatile
  3055  0018FE  0EE0               	movlw	224
  3056  001900  6E93               	movwf	147,c	;volatile
  3057  001902  968A               	bcf	138,3,c	;volatile
  3058  001904  908A               	bcf	138,0,c	;volatile
  3059  001906  928A               	bcf	138,1,c	;volatile
  3060                           
  3061                           ;main.c: 46:     TRISC = 0xC0;
  3062  001908  0EC0               	movlw	192
  3063  00190A  6E94               	movwf	148,c	;volatile
  3064                           
  3065                           ;main.c: 56:     TRISD = 0x8F;
  3066  00190C  0E8F               	movlw	143
  3067  00190E  6E95               	movwf	149,c	;volatile
  3068                           
  3069                           ;main.c: 57:     LATD = 0x00;
  3070  001910  0E00               	movlw	0
  3071  001912  6E8C               	movwf	140,c	;volatile
  3072                           
  3073                           ;main.c: 60:     EECON1bits.EEPGD = 1;
  3074  001914  8EA6               	bsf	166,7,c	;volsfr
  3075                           
  3076                           ;main.c: 61:     EECON1bits.CFGS = 0;
  3077  001916  9CA6               	bcf	166,6,c	;volsfr
  3078  001918  0012               	return		;funcret
  3079  00191A                     __end_of_init_ports:
  3080                           	callstack 0
  3081                           
  3082 ;; *************** function _initHora *****************
  3083 ;; Defined at:
  3084 ;;		line 9 in file "Hora.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1
  3098 ;;      Params:         0       0       0
  3099 ;;      Locals:         0       0       0
  3100 ;;      Temps:          0       0       0
  3101 ;;      Totals:         0       0       0
  3102 ;;Total ram usage:        0 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 3
  3105 ;; This function calls:
  3106 ;;		_TiGetTimer
  3107 ;; This function is called by:
  3108 ;;		_main
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text20
  3113  0019D4                     __ptext20:
  3114                           	callstack 0
  3115  0019D4                     _initHora:
  3116                           	callstack 27
  3117                           
  3118                           ;Hora.c: 10:     timerHora = TiGetTimer();
  3119                           
  3120                           ;incstack = 0
  3121  0019D4  EC83  F00B         	call	_TiGetTimer	;wreg free
  3122  0019D8  6E10               	movwf	_timerHora^0,c
  3123  0019DA  0012               	return		;funcret
  3124  0019DC                     __end_of_initHora:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _initAltaveu *****************
  3128 ;; Defined at:
  3129 ;;		line 10 in file "Altaveu.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1
  3143 ;;      Params:         0       0       0
  3144 ;;      Locals:         0       0       0
  3145 ;;      Temps:          0       0       0
  3146 ;;      Totals:         0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 3
  3150 ;; This function calls:
  3151 ;;		_TiGetTimer
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text21
  3158  0019DC                     __ptext21:
  3159                           	callstack 0
  3160  0019DC                     _initAltaveu:
  3161                           	callstack 27
  3162                           
  3163                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  3164                           
  3165                           ;incstack = 0
  3166  0019DC  EC83  F00B         	call	_TiGetTimer	;wreg free
  3167  0019E0  6E1F               	movwf	_timerAltaveu^0,c
  3168  0019E2  0012               	return		;funcret
  3169  0019E4                     __end_of_initAltaveu:
  3170                           	callstack 0
  3171                           
  3172 ;; *************** function _escriureEEPROM *****************
  3173 ;; Defined at:
  3174 ;;		line 185 in file "Usuaris.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  caca            1    5[COMRAM] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1
  3188 ;;      Params:         0       0       0
  3189 ;;      Locals:         1       0       0
  3190 ;;      Temps:          0       0       0
  3191 ;;      Totals:         1       0       0
  3192 ;;Total ram usage:        1 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 2
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text22
  3203  001812                     __ptext22:
  3204                           	callstack 0
  3205  001812                     _escriureEEPROM:
  3206                           	callstack 28
  3207                           
  3208                           ;Usuaris.c: 186:     for(unsigned char caca = 0; caca < 160; caca++){
  3209                           
  3210                           ;incstack = 0
  3211  001812  0E00               	movlw	0
  3212  001814  6E6C               	movwf	escriureEEPROM@caca^0,c
  3213  001816                     l1955:
  3214                           
  3215                           ;Usuaris.c: 187:         EEADR = 0;
  3216  001816  0E00               	movlw	0
  3217  001818  6EA9               	movwf	169,c	;volatile
  3218                           
  3219                           ;Usuaris.c: 188:         EEDATA = 0;
  3220  00181A  0E00               	movlw	0
  3221  00181C  6EA8               	movwf	168,c	;volatile
  3222                           
  3223                           ;Usuaris.c: 189:         EECON1bits.EEPGD = 0;
  3224  00181E  9EA6               	bcf	166,7,c	;volsfr
  3225                           
  3226                           ;Usuaris.c: 190:         EECON1bits.CFGS = 0;
  3227  001820  9CA6               	bcf	166,6,c	;volsfr
  3228                           
  3229                           ;Usuaris.c: 191:         EECON1bits.WREN = 1;
  3230  001822  84A6               	bsf	166,2,c	;volsfr
  3231                           
  3232                           ;Usuaris.c: 192:         INTCONbits.GIE = 0;
  3233  001824  9EF2               	bcf	242,7,c	;volatile
  3234                           
  3235                           ;Usuaris.c: 193:         EECON2 = 85;
  3236  001826  0E55               	movlw	85
  3237  001828  6EA7               	movwf	167,c	;volsfr
  3238                           
  3239                           ;Usuaris.c: 194:         EECON2 = 170;
  3240  00182A  0EAA               	movlw	170
  3241  00182C  6EA7               	movwf	167,c	;volsfr
  3242                           
  3243                           ;Usuaris.c: 195:          EECON1bits.WR = 1;
  3244  00182E  82A6               	bsf	166,1,c	;volsfr
  3245  001830                     l677:
  3246                           
  3247                           ;Usuaris.c: 196:         while(EECON1bits.WR){
  3248  001830  B2A6               	btfsc	166,1,c	;volsfr
  3249  001832  D7FE               	goto	l677
  3250                           
  3251                           ;Usuaris.c: 201:     }
  3252  001834  2A6C               	incf	escriureEEPROM@caca^0,f,c
  3253  001836  0E9F               	movlw	159
  3254  001838  646C               	cpfsgt	escriureEEPROM@caca^0,c
  3255  00183A  D7ED               	goto	l1955
  3256                           
  3257                           ;Usuaris.c: 202:    INTCONbits.GIE = 1;
  3258  00183C  8EF2               	bsf	242,7,c	;volatile
  3259  00183E  0012               	return		;funcret
  3260  001840                     __end_of_escriureEEPROM:
  3261                           	callstack 0
  3262                           
  3263 ;; *************** function _UmotorUsers *****************
  3264 ;; Defined at:
  3265 ;;		line 121 in file "Usuaris.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1
  3279 ;;      Params:         0       0       0
  3280 ;;      Locals:         0       0       0
  3281 ;;      Temps:          2       0       0
  3282 ;;      Totals:         2       0       0
  3283 ;;Total ram usage:        2 bytes
  3284 ;; Hardware stack levels used: 1
  3285 ;; Hardware stack levels required when called: 3
  3286 ;; This function calls:
  3287 ;;		_compareStrings
  3288 ;;		_escriureCharEEPROM
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text23
  3295  000CC8                     __ptext23:
  3296                           	callstack 0
  3297  000CC8                     _UmotorUsers:
  3298                           	callstack 27
  3299                           
  3300                           ;Usuaris.c: 122: static char state = 0;;Usuaris.c: 124:  switch(state) {
  3301                           
  3302                           ;incstack = 0
  3303  000CC8  D0A5               	goto	l4177
  3304  000CCA                     l649:
  3305                           
  3306                           ;Usuaris.c: 126:    if (!do_check_exists && !do_register) {
  3307  000CCA  AE78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  3308  000CCC  BC78               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  3309  000CCE  D005               	goto	l650
  3310                           
  3311                           ;Usuaris.c: 127:     i = 0;
  3312  000CD0  0E00               	movlw	0
  3313  000CD2  6E23               	movwf	_i^0,c
  3314                           
  3315                           ;Usuaris.c: 128:     j = 0;
  3316  000CD4  0E00               	movlw	0
  3317  000CD6  6E22               	movwf	_j^0,c
  3318                           
  3319                           ;Usuaris.c: 129:    }
  3320  000CD8  0012               	return	
  3321  000CDA                     l650:
  3322  000CDA  AE78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  3323  000CDC  D004               	goto	l652
  3324                           
  3325                           ;Usuaris.c: 131:     usuariLoguejat = -1;
  3326  000CDE  685F               	setf	_usuariLoguejat^0,c
  3327  000CE0                     l4105:
  3328                           
  3329                           ;Usuaris.c: 132:     state = 1;
  3330  000CE0  0E01               	movlw	1
  3331  000CE2  6E21               	movwf	UmotorUsers@state^0,c
  3332                           
  3333                           ;Usuaris.c: 133:    }
  3334  000CE4  0012               	return	
  3335  000CE6                     l652:
  3336  000CE6  AC78               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  3337  000CE8  0012               	return	
  3338  000CEA                     u3720:
  3339                           
  3340                           ;Usuaris.c: 135:     state = 2;
  3341  000CEA  0E02               	movlw	2
  3342  000CEC  6E21               	movwf	UmotorUsers@state^0,c
  3343                           
  3344                           ;Usuaris.c: 137:   break;
  3345  000CEE  0012               	return	
  3346  000CF0                     l4109:
  3347                           
  3348                           ;Usuaris.c: 139:    if (i < numUsuaris) {
  3349  000CF0  5026               	movf	_numUsuaris^0,w,c
  3350  000CF2  5C23               	subwf	_i^0,w,c
  3351  000CF4  B0D8               	btfsc	status,0,c
  3352  000CF6  D012               	goto	l4119
  3353                           
  3354                           ;Usuaris.c: 140:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  3355  000CF8  0E39               	movlw	low _tmpUsername
  3356  000CFA  6E6C               	movwf	compareStrings@a^0,c
  3357  000CFC  5023               	movf	_i^0,w,c
  3358  000CFE  0D17               	mullw	23
  3359  000D00  0E00               	movlw	low _usuaris
  3360  000D02  24F3               	addwf	243,w,c
  3361  000D04  6E6D               	movwf	compareStrings@b^0,c
  3362  000D06  0E01               	movlw	high _usuaris
  3363  000D08  20F4               	addwfc	prodh,w,c
  3364  000D0A  6E6E               	movwf	(compareStrings@b+1)^0,c
  3365  000D0C  EC01  F00B         	call	_compareStrings	;wreg free
  3366  000D10  0900               	iorlw	0
  3367  000D12  B4D8               	btfsc	status,2,c
  3368                           
  3369                           ;Usuaris.c: 141:      usuariLoguejat = i;
  3370  000D14  C023  F05F         	movff	_i,_usuariLoguejat
  3371                           
  3372                           ;Usuaris.c: 144:     i++;
  3373  000D18  2A23               	incf	_i^0,f,c
  3374  000D1A  D7E2               	goto	l4105
  3375  000D1C                     l4119:
  3376  000D1C  5026               	movf	_numUsuaris^0,w,c
  3377  000D1E  1823               	xorwf	_i^0,w,c
  3378  000D20  A4D8               	btfss	status,2,c
  3379  000D22  0012               	return	
  3380                           
  3381                           ;Usuaris.c: 148:     do_check_exists = 0;
  3382  000D24  9E78               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  3383  000D26                     l4123:
  3384                           
  3385                           ;Usuaris.c: 149:     state = 0;
  3386  000D26  0E00               	movlw	0
  3387  000D28  6E21               	movwf	UmotorUsers@state^0,c
  3388  000D2A  0012               	return	
  3389  000D2C                     l4125:
  3390                           
  3391                           ;Usuaris.c: 153:    if (i != 8) {
  3392  000D2C  0E08               	movlw	8
  3393  000D2E  1823               	xorwf	_i^0,w,c
  3394  000D30  B4D8               	btfsc	status,2,c
  3395  000D32  D022               	goto	l4137
  3396                           
  3397                           ;Usuaris.c: 154:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  3398  000D34  C025  F06C         	movff	_indexNextUser,escriureCharEEPROM@pos
  3399  000D38  5023               	movf	_i^0,w,c
  3400  000D3A  0F39               	addlw	low _tmpUsername
  3401  000D3C  6ED9               	movwf	fsr2l,c
  3402  000D3E  6ADA               	clrf	fsr2h,c
  3403  000D40  50DF               	movf	indf2,w,c
  3404  000D42  EC36  F00C         	call	_escriureCharEEPROM
  3405  000D46  2A25               	incf	_indexNextUser^0,f,c
  3406                           
  3407                           ;Usuaris.c: 155:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  3408  000D48  5023               	movf	_i^0,w,c
  3409  000D4A  0F39               	addlw	low _tmpUsername
  3410  000D4C  6ED9               	movwf	fsr2l,c
  3411  000D4E  6ADA               	clrf	fsr2h,c
  3412  000D50  5024               	movf	_indexNextUserStruct^0,w,c
  3413  000D52  0D17               	mullw	23
  3414  000D54  0E00               	movlw	low _usuaris
  3415  000D56  6E71               	movwf	??_UmotorUsers^0,c
  3416  000D58  0E01               	movlw	high _usuaris
  3417  000D5A  6E72               	movwf	(??_UmotorUsers+1)^0,c
  3418  000D5C  50F3               	movf	243,w,c
  3419  000D5E  2671               	addwf	??_UmotorUsers^0,f,c
  3420  000D60  50F4               	movf	244,w,c
  3421  000D62  2272               	addwfc	(??_UmotorUsers+1)^0,f,c
  3422  000D64  5023               	movf	_i^0,w,c
  3423  000D66  2471               	addwf	??_UmotorUsers^0,w,c
  3424  000D68  6EE1               	movwf	fsr1l,c
  3425  000D6A  0E00               	movlw	0
  3426  000D6C  2072               	addwfc	(??_UmotorUsers+1)^0,w,c
  3427  000D6E  6EE2               	movwf	fsr1h,c
  3428  000D70  CFDF FFE7          	movff	indf2,indf1
  3429                           
  3430                           ;Usuaris.c: 156:     i++;
  3431  000D74  2A23               	incf	_i^0,f,c
  3432  000D76  D7B9               	goto	u3720
  3433  000D78                     l4137:
  3434  000D78  0E08               	movlw	8
  3435  000D7A  1823               	xorwf	_i^0,w,c
  3436  000D7C  A4D8               	btfss	status,2,c
  3437  000D7E  0012               	return	
  3438                           
  3439                           ;Usuaris.c: 160:     i = 0;
  3440  000D80  0E00               	movlw	0
  3441  000D82  6E23               	movwf	_i^0,c
  3442                           
  3443                           ;Usuaris.c: 161:     state = 3;
  3444  000D84  0E03               	movlw	3
  3445  000D86  6E21               	movwf	UmotorUsers@state^0,c
  3446  000D88  0012               	return	
  3447  000D8A                     l4141:
  3448                           
  3449                           ;Usuaris.c: 165:    if (i != 8) {
  3450  000D8A  0E08               	movlw	8
  3451  000D8C  1823               	xorwf	_i^0,w,c
  3452  000D8E  B4D8               	btfsc	status,2,c
  3453  000D90  D028               	goto	l4153
  3454                           
  3455                           ;Usuaris.c: 166:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  3456  000D92  C025  F06C         	movff	_indexNextUser,escriureCharEEPROM@pos
  3457  000D96  5023               	movf	_i^0,w,c
  3458  000D98  0F01               	addlw	low _tmpPassword
  3459  000D9A  6ED9               	movwf	fsr2l,c
  3460  000D9C  6ADA               	clrf	fsr2h,c
  3461  000D9E  50DF               	movf	indf2,w,c
  3462  000DA0  EC36  F00C         	call	_escriureCharEEPROM
  3463  000DA4  2A25               	incf	_indexNextUser^0,f,c
  3464                           
  3465                           ;Usuaris.c: 167:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  3466  000DA6  5023               	movf	_i^0,w,c
  3467  000DA8  0F01               	addlw	low _tmpPassword
  3468  000DAA  6ED9               	movwf	fsr2l,c
  3469  000DAC  6ADA               	clrf	fsr2h,c
  3470  000DAE  5024               	movf	_indexNextUserStruct^0,w,c
  3471  000DB0  0D17               	mullw	23
  3472  000DB2  0E00               	movlw	low _usuaris
  3473  000DB4  6E71               	movwf	??_UmotorUsers^0,c
  3474  000DB6  0E01               	movlw	high _usuaris
  3475  000DB8  6E72               	movwf	(??_UmotorUsers+1)^0,c
  3476  000DBA  0E09               	movlw	9
  3477  000DBC  2671               	addwf	??_UmotorUsers^0,f,c
  3478  000DBE  0E00               	movlw	0
  3479  000DC0  2272               	addwfc	(??_UmotorUsers+1)^0,f,c
  3480  000DC2  50F3               	movf	243,w,c
  3481  000DC4  2671               	addwf	??_UmotorUsers^0,f,c
  3482  000DC6  50F4               	movf	244,w,c
  3483  000DC8  2272               	addwfc	(??_UmotorUsers+1)^0,f,c
  3484  000DCA  5023               	movf	_i^0,w,c
  3485  000DCC  2471               	addwf	??_UmotorUsers^0,w,c
  3486  000DCE  6EE1               	movwf	fsr1l,c
  3487  000DD0  0E00               	movlw	0
  3488  000DD2  2072               	addwfc	(??_UmotorUsers+1)^0,w,c
  3489  000DD4  6EE2               	movwf	fsr1h,c
  3490  000DD6  CFDF FFE7          	movff	indf2,indf1
  3491                           
  3492                           ;Usuaris.c: 168:     i++;
  3493  000DDA  2A23               	incf	_i^0,f,c
  3494                           
  3495                           ;Usuaris.c: 169:     state = 3;
  3496  000DDC  0E03               	movlw	3
  3497  000DDE  6E21               	movwf	UmotorUsers@state^0,c
  3498                           
  3499                           ;Usuaris.c: 170:    }
  3500  000DE0  0012               	return	
  3501  000DE2                     l4153:
  3502  000DE2  0E08               	movlw	8
  3503  000DE4  1823               	xorwf	_i^0,w,c
  3504  000DE6  A4D8               	btfss	status,2,c
  3505  000DE8  0012               	return	
  3506                           
  3507                           ;Usuaris.c: 172:     do_register = 0;
  3508  000DEA  9C78               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  3509                           
  3510                           ;Usuaris.c: 173:     indexNextUser++;
  3511  000DEC  2A25               	incf	_indexNextUser^0,f,c
  3512                           
  3513                           ;Usuaris.c: 174:     if(indexNextUser == 159) indexNextUser = 16;
  3514  000DEE  0E9F               	movlw	159
  3515  000DF0  1825               	xorwf	_indexNextUser^0,w,c
  3516  000DF2  A4D8               	btfss	status,2,c
  3517  000DF4  D002               	goto	l4163
  3518  000DF6  0E10               	movlw	16
  3519  000DF8  6E25               	movwf	_indexNextUser^0,c
  3520  000DFA                     l4163:
  3521                           
  3522                           ;Usuaris.c: 175:     indexNextUserStruct++;
  3523  000DFA  2A24               	incf	_indexNextUserStruct^0,f,c
  3524                           
  3525                           ;Usuaris.c: 176:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  3526  000DFC  0E08               	movlw	8
  3527  000DFE  1824               	xorwf	_indexNextUserStruct^0,w,c
  3528  000E00  A4D8               	btfss	status,2,c
  3529  000E02  D002               	goto	l4169
  3530  000E04  0E00               	movlw	0
  3531  000E06  6E24               	movwf	_indexNextUserStruct^0,c
  3532  000E08                     l4169:
  3533                           
  3534                           ;Usuaris.c: 177:     if(numUsuaris != 8) numUsuaris++;
  3535  000E08  0E08               	movlw	8
  3536  000E0A  1826               	xorwf	_numUsuaris^0,w,c
  3537  000E0C  B4D8               	btfsc	status,2,c
  3538  000E0E  D78B               	goto	l4123
  3539  000E10  2A26               	incf	_numUsuaris^0,f,c
  3540  000E12  D789               	goto	l4123
  3541  000E14                     l4177:
  3542  000E14  5021               	movf	UmotorUsers@state^0,w,c
  3543  000E16  6E71               	movwf	??_UmotorUsers^0,c
  3544  000E18  6A72               	clrf	(??_UmotorUsers+1)^0,c
  3545                           
  3546                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3547                           ; Switch size 1, requested type "simple"
  3548                           ; Number of cases is 1, Range of values is 0 to 0
  3549                           ; switch strategies available:
  3550                           ; Name         Instructions Cycles
  3551                           ; simple_byte            4     3 (average)
  3552                           ;	Chosen strategy is simple_byte
  3553  000E1A  5072               	movf	(??_UmotorUsers+1)^0,w,c
  3554  000E1C  0A00               	xorlw	0	; case 0
  3555  000E1E  A4D8               	btfss	status,2,c
  3556  000E20  0012               	return	
  3557                           
  3558                           ; Switch size 1, requested type "simple"
  3559                           ; Number of cases is 4, Range of values is 0 to 3
  3560                           ; switch strategies available:
  3561                           ; Name         Instructions Cycles
  3562                           ; simple_byte           13     7 (average)
  3563                           ;	Chosen strategy is simple_byte
  3564  000E22  5071               	movf	??_UmotorUsers^0,w,c
  3565  000E24  0A00               	xorlw	0	; case 0
  3566  000E26  B4D8               	btfsc	status,2,c
  3567  000E28  D750               	goto	l649
  3568  000E2A  0A01               	xorlw	1	; case 1
  3569  000E2C  B4D8               	btfsc	status,2,c
  3570  000E2E  D760               	goto	l4109
  3571  000E30  0A03               	xorlw	3	; case 2
  3572  000E32  B4D8               	btfsc	status,2,c
  3573  000E34  D77B               	goto	l4125
  3574  000E36  0A01               	xorlw	1	; case 3
  3575  000E38  A4D8               	btfss	status,2,c
  3576  000E3A  0012               	return	
  3577  000E3C  D7A6               	goto	l4141
  3578  000E3E                     __end_of_UmotorUsers:
  3579                           	callstack 0
  3580                           
  3581 ;; *************** function _escriureCharEEPROM *****************
  3582 ;; Defined at:
  3583 ;;		line 55 in file "Usuaris.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  c               1    wreg     unsigned char 
  3586 ;;  pos             1    5[COMRAM] unsigned char 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  c               1    6[COMRAM] unsigned char 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1
  3598 ;;      Params:         1       0       0
  3599 ;;      Locals:         1       0       0
  3600 ;;      Temps:          0       0       0
  3601 ;;      Totals:         2       0       0
  3602 ;;Total ram usage:        2 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 2
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_UmotorUsers
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text24
  3613  00186C                     __ptext24:
  3614                           	callstack 0
  3615  00186C                     _escriureCharEEPROM:
  3616                           	callstack 27
  3617                           
  3618                           ;incstack = 0
  3619                           ;escriureCharEEPROM@c stored from wreg
  3620  00186C  6E6D               	movwf	escriureCharEEPROM@c^0,c
  3621                           
  3622                           ;Usuaris.c: 56:     EEADR = c;
  3623  00186E  C06D  FFA9         	movff	escriureCharEEPROM@c,4009	;volatile
  3624                           
  3625                           ;Usuaris.c: 57:     EEDATA = pos;
  3626  001872  C06C  FFA8         	movff	escriureCharEEPROM@pos,4008	;volatile
  3627                           
  3628                           ;Usuaris.c: 58:     EECON1bits.EEPGD = 0;
  3629  001876  9EA6               	bcf	166,7,c	;volsfr
  3630                           
  3631                           ;Usuaris.c: 59:     EECON1bits.CFGS = 0;
  3632  001878  9CA6               	bcf	166,6,c	;volsfr
  3633                           
  3634                           ;Usuaris.c: 60:     EECON1bits.WREN = 1;
  3635  00187A  84A6               	bsf	166,2,c	;volsfr
  3636                           
  3637                           ;Usuaris.c: 61:     INTCONbits.GIE = 0;
  3638  00187C  9EF2               	bcf	242,7,c	;volatile
  3639                           
  3640                           ;Usuaris.c: 62:     EECON2 = 85;
  3641  00187E  0E55               	movlw	85
  3642  001880  6EA7               	movwf	167,c	;volsfr
  3643                           
  3644                           ;Usuaris.c: 63:     EECON2 = 170;
  3645  001882  0EAA               	movlw	170
  3646  001884  6EA7               	movwf	167,c	;volsfr
  3647                           
  3648                           ;Usuaris.c: 64:      EECON1bits.WR = 1;
  3649  001886  82A6               	bsf	166,1,c	;volsfr
  3650  001888                     l611:
  3651  001888  B2A6               	btfsc	166,1,c	;volsfr
  3652  00188A  D7FE               	goto	l611
  3653                           
  3654                           ;Usuaris.c: 66:    INTCONbits.GIE = 1;
  3655  00188C  8EF2               	bsf	242,7,c	;volatile
  3656  00188E  0012               	return		;funcret
  3657  001890                     __end_of_escriureCharEEPROM:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _compareStrings *****************
  3661 ;; Defined at:
  3662 ;;		line 111 in file "Usuaris.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  a               1    5[COMRAM] PTR const unsigned char 
  3665 ;;		 -> tmpUsername(9), 
  3666 ;;  b               2    6[COMRAM] PTR const unsigned char 
  3667 ;;		 -> usuaris.username(9), usuaris(184), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      unsigned char 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1
  3679 ;;      Params:         3       0       0
  3680 ;;      Locals:         0       0       0
  3681 ;;      Temps:          2       0       0
  3682 ;;      Totals:         5       0       0
  3683 ;;Total ram usage:        5 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 2
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_UmotorUsers
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text25
  3694  001602                     __ptext25:
  3695                           	callstack 0
  3696  001602                     _compareStrings:
  3697                           	callstack 27
  3698                           
  3699                           ;Usuaris.c: 112:     while (*a){
  3700                           
  3701                           ;incstack = 0
  3702  001602  D00E               	goto	l3379
  3703  001604                     l3373:
  3704                           
  3705                           ;Usuaris.c: 113:         if (*a != *b)break;
  3706  001604  C06D  FFD9         	movff	compareStrings@b,fsr2l
  3707  001608  C06E  FFDA         	movff	compareStrings@b+1,fsr2h
  3708  00160C  506C               	movf	compareStrings@a^0,w,c
  3709  00160E  6EE1               	movwf	fsr1l,c
  3710  001610  6AE2               	clrf	fsr1h,c
  3711  001612  50DE               	movf	postinc2,w,c
  3712  001614  18E6               	xorwf	postinc1,w,c
  3713  001616  A4D8               	btfss	status,2,c
  3714  001618  D009               	goto	u2690
  3715                           
  3716                           ;Usuaris.c: 114:         a++;
  3717  00161A  2A6C               	incf	compareStrings@a^0,f,c
  3718                           
  3719                           ;Usuaris.c: 115:         b++;
  3720  00161C  4A6D               	infsnz	compareStrings@b^0,f,c
  3721  00161E  2A6E               	incf	(compareStrings@b+1)^0,f,c
  3722  001620                     l3379:
  3723                           
  3724                           ;Usuaris.c: 112:     while (*a){
  3725  001620  506C               	movf	compareStrings@a^0,w,c
  3726  001622  6ED9               	movwf	fsr2l,c
  3727  001624  6ADA               	clrf	fsr2h,c
  3728  001626  50DF               	movf	indf2,w,c
  3729  001628  A4D8               	btfss	status,2,c
  3730  00162A  D7EC               	goto	l3373
  3731  00162C                     u2690:
  3732                           
  3733                           ;Usuaris.c: 117:     return *(const unsigned char*)a - *(const unsigned char*)b;
  3734  00162C  C06D  FFD9         	movff	compareStrings@b,fsr2l
  3735  001630  C06E  FFDA         	movff	compareStrings@b+1,fsr2h
  3736  001634  50DF               	movf	indf2,w,c
  3737  001636  6E6F               	movwf	??_compareStrings^0,c
  3738  001638  506C               	movf	compareStrings@a^0,w,c
  3739  00163A  6ED9               	movwf	fsr2l,c
  3740  00163C  6ADA               	clrf	fsr2h,c
  3741  00163E  50DF               	movf	indf2,w,c
  3742  001640  6E70               	movwf	(??_compareStrings+1)^0,c
  3743  001642  506F               	movf	??_compareStrings^0,w,c
  3744  001644  5C70               	subwf	(??_compareStrings+1)^0,w,c
  3745  001646  0012               	return		;funcret
  3746  001648                     __end_of_compareStrings:
  3747                           	callstack 0
  3748                           
  3749 ;; *************** function _Uinit *****************
  3750 ;; Defined at:
  3751 ;;		line 68 in file "Usuaris.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  j               1    9[COMRAM] unsigned char 
  3756 ;;  j               1    8[COMRAM] unsigned char 
  3757 ;;  i               1    7[COMRAM] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1
  3767 ;;      Params:         0       0       0
  3768 ;;      Locals:         3       0       0
  3769 ;;      Temps:          2       0       0
  3770 ;;      Totals:         5       0       0
  3771 ;;Total ram usage:        5 bytes
  3772 ;; Hardware stack levels used: 1
  3773 ;; Hardware stack levels required when called: 2
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_main
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text26
  3782  001224                     __ptext26:
  3783                           	callstack 0
  3784  001224                     _Uinit:
  3785                           	callstack 28
  3786                           
  3787                           ;Usuaris.c: 73:     EEADR = 0;
  3788                           
  3789                           ;incstack = 0
  3790  001224  0E00               	movlw	0
  3791  001226  6EA9               	movwf	169,c	;volatile
  3792                           
  3793                           ;Usuaris.c: 74:     EECON1bits.EEPGD = 0;
  3794  001228  9EA6               	bcf	166,7,c	;volsfr
  3795                           
  3796                           ;Usuaris.c: 75:     EECON1bits.CFGS = 0;
  3797  00122A  9CA6               	bcf	166,6,c	;volsfr
  3798                           
  3799                           ;Usuaris.c: 76:     EECON1bits.RD = 1;
  3800  00122C  80A6               	bsf	166,0,c	;volsfr
  3801  00122E                     l617:
  3802  00122E  B0A6               	btfsc	166,0,c	;volsfr
  3803  001230  D7FE               	goto	l617
  3804                           
  3805                           ;Usuaris.c: 78:     numUsuaris = EEDATA;
  3806  001232  CFA8 F026          	movff	4008,_numUsuaris	;volatile
  3807                           
  3808                           ;Usuaris.c: 82:     EEADR++;
  3809  001236  2AA9               	incf	169,f,c	;volatile
  3810                           
  3811                           ;Usuaris.c: 83:     EECON1bits.EEPGD = 0;
  3812  001238  9EA6               	bcf	166,7,c	;volsfr
  3813                           
  3814                           ;Usuaris.c: 84:     EECON1bits.CFGS = 0;
  3815  00123A  9CA6               	bcf	166,6,c	;volsfr
  3816  00123C                     l620:
  3817  00123C  B0A6               	btfsc	166,0,c	;volsfr
  3818  00123E  D7FE               	goto	l620
  3819                           
  3820                           ;Usuaris.c: 87:     indexNextUser = EEDATA;
  3821  001240  CFA8 F025          	movff	4008,_indexNextUser	;volatile
  3822                           
  3823                           ;Usuaris.c: 88:     EEADR++;
  3824  001244  2AA9               	incf	169,f,c	;volatile
  3825                           
  3826                           ;Usuaris.c: 90:     for(char i = 0; i< numUsuaris; i++){
  3827  001246  0E00               	movlw	0
  3828  001248  6E6E               	movwf	Uinit@i^0,c
  3829  00124A  D041               	goto	l2213
  3830  00124C                     l2183:
  3831                           
  3832                           ;Usuaris.c: 91:         for(char j = 0; j<9; j++){
  3833  00124C  0E00               	movlw	0
  3834  00124E  6E6F               	movwf	Uinit@j^0,c
  3835  001250                     l625:
  3836                           
  3837                           ;Usuaris.c: 92:             EECON1bits.EEPGD = 0;
  3838  001250  9EA6               	bcf	166,7,c	;volsfr
  3839                           
  3840                           ;Usuaris.c: 93:             EECON1bits.CFGS = 0;
  3841  001252  9CA6               	bcf	166,6,c	;volsfr
  3842                           
  3843                           ;Usuaris.c: 94:             EECON1bits.RD = 1;
  3844  001254  80A6               	bsf	166,0,c	;volsfr
  3845  001256                     l627:
  3846  001256  B0A6               	btfsc	166,0,c	;volsfr
  3847  001258  D7FE               	goto	l627
  3848                           
  3849                           ;Usuaris.c: 96:             usuaris[i].username[j] = EEDATA;
  3850  00125A  506E               	movf	Uinit@i^0,w,c
  3851  00125C  0D17               	mullw	23
  3852  00125E  0E00               	movlw	low _usuaris
  3853  001260  6E6C               	movwf	??_Uinit^0,c
  3854  001262  0E01               	movlw	high _usuaris
  3855  001264  6E6D               	movwf	(??_Uinit+1)^0,c
  3856  001266  50F3               	movf	243,w,c
  3857  001268  266C               	addwf	??_Uinit^0,f,c
  3858  00126A  50F4               	movf	244,w,c
  3859  00126C  226D               	addwfc	(??_Uinit+1)^0,f,c
  3860  00126E  506F               	movf	Uinit@j^0,w,c
  3861  001270  246C               	addwf	??_Uinit^0,w,c
  3862  001272  6ED9               	movwf	fsr2l,c
  3863  001274  0E00               	movlw	0
  3864  001276  206D               	addwfc	(??_Uinit+1)^0,w,c
  3865  001278  6EDA               	movwf	fsr2h,c
  3866  00127A  CFA8 FFDF          	movff	4008,indf2	;volatile
  3867                           
  3868                           ;Usuaris.c: 97:             EEADR++;
  3869  00127E  2AA9               	incf	169,f,c	;volatile
  3870                           
  3871                           ;Usuaris.c: 98:         }
  3872  001280  2A6F               	incf	Uinit@j^0,f,c
  3873  001282  0E08               	movlw	8
  3874  001284  646F               	cpfsgt	Uinit@j^0,c
  3875  001286  D7E4               	goto	l625
  3876                           
  3877                           ;Usuaris.c: 99:         for(char j = 0; j<9; j++){
  3878  001288  0E00               	movlw	0
  3879  00128A  6E70               	movwf	Uinit@j_1084^0,c
  3880  00128C                     l630:
  3881                           
  3882                           ;Usuaris.c: 100:             EECON1bits.EEPGD = 0;
  3883  00128C  9EA6               	bcf	166,7,c	;volsfr
  3884                           
  3885                           ;Usuaris.c: 101:             EECON1bits.CFGS = 0;
  3886  00128E  9CA6               	bcf	166,6,c	;volsfr
  3887                           
  3888                           ;Usuaris.c: 102:             EECON1bits.RD = 1;
  3889  001290  80A6               	bsf	166,0,c	;volsfr
  3890  001292                     l632:
  3891  001292  B0A6               	btfsc	166,0,c	;volsfr
  3892  001294  D7FE               	goto	l632
  3893                           
  3894                           ;Usuaris.c: 104:             usuaris[i].password[j] = EEDATA;
  3895  001296  506E               	movf	Uinit@i^0,w,c
  3896  001298  0D17               	mullw	23
  3897  00129A  0E00               	movlw	low _usuaris
  3898  00129C  6E6C               	movwf	??_Uinit^0,c
  3899  00129E  0E01               	movlw	high _usuaris
  3900  0012A0  6E6D               	movwf	(??_Uinit+1)^0,c
  3901  0012A2  0E09               	movlw	9
  3902  0012A4  266C               	addwf	??_Uinit^0,f,c
  3903  0012A6  0E00               	movlw	0
  3904  0012A8  226D               	addwfc	(??_Uinit+1)^0,f,c
  3905  0012AA  50F3               	movf	243,w,c
  3906  0012AC  266C               	addwf	??_Uinit^0,f,c
  3907  0012AE  50F4               	movf	244,w,c
  3908  0012B0  226D               	addwfc	(??_Uinit+1)^0,f,c
  3909  0012B2  5070               	movf	Uinit@j_1084^0,w,c
  3910  0012B4  246C               	addwf	??_Uinit^0,w,c
  3911  0012B6  6ED9               	movwf	fsr2l,c
  3912  0012B8  0E00               	movlw	0
  3913  0012BA  206D               	addwfc	(??_Uinit+1)^0,w,c
  3914  0012BC  6EDA               	movwf	fsr2h,c
  3915  0012BE  CFA8 FFDF          	movff	4008,indf2	;volatile
  3916                           
  3917                           ;Usuaris.c: 105:             EEADR++;
  3918  0012C2  2AA9               	incf	169,f,c	;volatile
  3919                           
  3920                           ;Usuaris.c: 106:         }
  3921  0012C4  2A70               	incf	Uinit@j_1084^0,f,c
  3922  0012C6  0E08               	movlw	8
  3923  0012C8  6470               	cpfsgt	Uinit@j_1084^0,c
  3924  0012CA  D7E0               	goto	l630
  3925                           
  3926                           ;Usuaris.c: 107:     }
  3927  0012CC  2A6E               	incf	Uinit@i^0,f,c
  3928  0012CE                     l2213:
  3929  0012CE  5026               	movf	_numUsuaris^0,w,c
  3930  0012D0  5C6E               	subwf	Uinit@i^0,w,c
  3931  0012D2  B0D8               	btfsc	status,0,c
  3932  0012D4  0012               	return	
  3933  0012D6  D7BA               	goto	l2183
  3934  0012D8                     __end_of_Uinit:
  3935                           	callstack 0
  3936                           
  3937 ;; *************** function _TiInitTimer *****************
  3938 ;; Defined at:
  3939 ;;		line 18 in file "TiTTimer.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;		None
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1
  3953 ;;      Params:         0       0       0
  3954 ;;      Locals:         0       0       0
  3955 ;;      Temps:          0       0       0
  3956 ;;      Totals:         0       0       0
  3957 ;;Total ram usage:        0 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; Hardware stack levels required when called: 2
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_main
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text27
  3968  001740                     __ptext27:
  3969                           	callstack 0
  3970  001740                     _TiInitTimer:
  3971                           	callstack 28
  3972                           
  3973                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  3974                           
  3975                           ;incstack = 0
  3976  001740  9ED0               	bcf	208,7,c	;volatile
  3977                           
  3978                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  3979  001742  8EF2               	bsf	242,7,c	;volatile
  3980                           
  3981                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  3982  001744  8CF2               	bsf	242,6,c	;volatile
  3983                           
  3984                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  3985  001746  8AF2               	bsf	242,5,c	;volatile
  3986                           
  3987                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  3988  001748  94F2               	bcf	242,2,c	;volatile
  3989                           
  3990                           ;TiTTimer.c: 25:     T0CON = 136;
  3991  00174A  0E88               	movlw	136
  3992  00174C  6ED5               	movwf	213,c	;volatile
  3993                           
  3994                           ;TiTTimer.c: 27:     TMR0H = 223;
  3995  00174E  0EDF               	movlw	223
  3996  001750  6ED7               	movwf	215,c	;volatile
  3997                           
  3998                           ;TiTTimer.c: 28:     TMR0L = 148;
  3999  001752  0E94               	movlw	148
  4000  001754  6ED6               	movwf	214,c	;volatile
  4001                           
  4002                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  4003  001756  8ED5               	bsf	213,7,c	;volatile
  4004                           
  4005                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  4006  001758  0E00               	movlw	0
  4007  00175A  6E2D               	movwf	_counter^0,c
  4008  00175C                     l3477:
  4009  00175C  0E07               	movlw	7
  4010  00175E  642D               	cpfsgt	_counter^0,c
  4011  001760  D001               	goto	l3481
  4012  001762  0012               	return	
  4013  001764                     l3481:
  4014                           
  4015                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  4016  001764  502D               	movf	_counter^0,w,c
  4017  001766  0D03               	mullw	3
  4018  001768  50F3               	movf	243,w,c
  4019  00176A  0F82               	addlw	low (_s_Timers+2)
  4020  00176C  6ED9               	movwf	fsr2l,c
  4021  00176E  6ADA               	clrf	fsr2h,c
  4022  001770  0E00               	movlw	0
  4023  001772  6EDF               	movwf	indf2,c
  4024                           
  4025                           ;TiTTimer.c: 33:     }
  4026  001774  2A2D               	incf	_counter^0,f,c
  4027  001776  D7F2               	goto	l3477
  4028  001778                     __end_of_TiInitTimer:
  4029                           	callstack 0
  4030                           
  4031 ;; *************** function _TeTeclat *****************
  4032 ;; Defined at:
  4033 ;;		line 22 in file "TeTeclat.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;		None
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1
  4047 ;;      Params:         0       0       0
  4048 ;;      Locals:         0       0       0
  4049 ;;      Temps:          3       0       0
  4050 ;;      Totals:         3       0       0
  4051 ;;Total ram usage:        3 bytes
  4052 ;; Hardware stack levels used: 1
  4053 ;; Hardware stack levels required when called: 3
  4054 ;; This function calls:
  4055 ;;		_MsetNovaTecla
  4056 ;;		_SsetNovaTecla
  4057 ;;		_TiGetTics
  4058 ;;		_TiResetTics
  4059 ;; This function is called by:
  4060 ;;		_main
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text28
  4065  000E3E                     __ptext28:
  4066                           	callstack 0
  4067  000E3E                     _TeTeclat:
  4068                           	callstack 27
  4069                           
  4070                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  4071                           
  4072                           ;incstack = 0
  4073  000E3E  A083               	btfss	131,0,c	;volatile
  4074  000E40  D003               	goto	u6080
  4075  000E42  6A73               	clrf	??_TeTeclat^0,c
  4076  000E44  2A73               	incf	??_TeTeclat^0,f,c
  4077  000E46  D001               	goto	u6088
  4078  000E48                     u6080:
  4079  000E48  6A73               	clrf	??_TeTeclat^0,c
  4080  000E4A                     u6088:
  4081  000E4A  A283               	btfss	131,1,c	;volatile
  4082  000E4C  D002               	goto	u6090
  4083  000E4E  0E01               	movlw	1
  4084  000E50  D001               	goto	u6096
  4085  000E52                     u6090:
  4086  000E52  0E00               	movlw	0
  4087  000E54                     u6096:
  4088  000E54  0D02               	mullw	2
  4089  000E56  CFF3 F074          	movff	prodl,??_TeTeclat+1
  4090  000E5A  A483               	btfss	131,2,c	;volatile
  4091  000E5C  D002               	goto	u6100
  4092  000E5E  0E01               	movlw	1
  4093  000E60  D001               	goto	u6106
  4094  000E62                     u6100:
  4095  000E62  0E00               	movlw	0
  4096  000E64                     u6106:
  4097  000E64  0D03               	mullw	3
  4098  000E66  CFF3 F075          	movff	prodl,??_TeTeclat+2
  4099  000E6A  A683               	btfss	131,3,c	;volatile
  4100  000E6C  D002               	goto	u6110
  4101  000E6E  0E01               	movlw	1
  4102  000E70  D001               	goto	u6116
  4103  000E72                     u6110:
  4104  000E72  0E00               	movlw	0
  4105  000E74                     u6116:
  4106  000E74  0D04               	mullw	4
  4107  000E76  50F3               	movf	243,w,c
  4108  000E78  2475               	addwf	(??_TeTeclat+2)^0,w,c
  4109  000E7A  2474               	addwf	(??_TeTeclat+1)^0,w,c
  4110  000E7C  2473               	addwf	??_TeTeclat^0,w,c
  4111  000E7E  6E2E               	movwf	TeTeclat@files^0,c
  4112                           
  4113                           ;TeTeclat.c: 27:  switch(state) {
  4114  000E80  D06F               	goto	l5637
  4115  000E82                     l5563:
  4116                           
  4117                           ;TeTeclat.c: 29:    if (files==0) {
  4118  000E82  502E               	movf	TeTeclat@files^0,w,c
  4119  000E84  A4D8               	btfss	status,2,c
  4120  000E86  D007               	goto	l5571
  4121                           
  4122                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  4123  000E88  888C               	bsf	140,4,c	;volatile
  4124                           
  4125                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  4126  000E8A  9A8C               	bcf	140,5,c	;volatile
  4127                           
  4128                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  4129  000E8C  9C8C               	bcf	140,6,c	;volatile
  4130                           
  4131                           ;TeTeclat.c: 33:     cols=0;
  4132  000E8E  0E00               	movlw	0
  4133  000E90  6E2F               	movwf	TeTeclat@cols^0,c
  4134  000E92                     l5569:
  4135                           
  4136                           ;TeTeclat.c: 34:     state++;
  4137  000E92  2A30               	incf	TeTeclat@state^0,f,c
  4138                           
  4139                           ;TeTeclat.c: 35:    }
  4140  000E94  0012               	return	
  4141  000E96                     l5571:
  4142  000E96  502E               	movf	TeTeclat@files^0,w,c
  4143  000E98  B4D8               	btfsc	status,2,c
  4144  000E9A  0012               	return	
  4145                           
  4146                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  4147  000E9C  5031               	movf	_tiTeclat^0,w,c
  4148  000E9E  EC8D  F00C         	call	_TiResetTics
  4149  000EA2                     l5575:
  4150                           
  4151                           ;TeTeclat.c: 38:     state = 3;
  4152  000EA2  0E03               	movlw	3
  4153  000EA4  6E30               	movwf	TeTeclat@state^0,c
  4154  000EA6  0012               	return	
  4155  000EA8                     l5577:
  4156                           
  4157                           ;TeTeclat.c: 42:    if (files==0) {
  4158  000EA8  502E               	movf	TeTeclat@files^0,w,c
  4159  000EAA  A4D8               	btfss	status,2,c
  4160  000EAC  D005               	goto	l5585
  4161                           
  4162                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  4163  000EAE  988C               	bcf	140,4,c	;volatile
  4164                           
  4165                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  4166  000EB0  8A8C               	bsf	140,5,c	;volatile
  4167                           
  4168                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  4169  000EB2  9C8C               	bcf	140,6,c	;volatile
  4170                           
  4171                           ;TeTeclat.c: 46:     cols=1;
  4172  000EB4  0E01               	movlw	1
  4173  000EB6  D7EC               	goto	L2
  4174  000EB8                     l5585:
  4175  000EB8  502E               	movf	TeTeclat@files^0,w,c
  4176  000EBA  B4D8               	btfsc	status,2,c
  4177  000EBC  0012               	return	
  4178                           
  4179                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  4180  000EBE  5031               	movf	_tiTeclat^0,w,c
  4181  000EC0  EC8D  F00C         	call	_TiResetTics
  4182  000EC4  D7EE               	goto	l5575
  4183  000EC6                     l5591:
  4184                           
  4185                           ;TeTeclat.c: 55:    if (files==0) {
  4186  000EC6  502E               	movf	TeTeclat@files^0,w,c
  4187  000EC8  A4D8               	btfss	status,2,c
  4188  000ECA  D008               	goto	l5597
  4189                           
  4190                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  4191  000ECC  988C               	bcf	140,4,c	;volatile
  4192                           
  4193                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  4194  000ECE  9A8C               	bcf	140,5,c	;volatile
  4195                           
  4196                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  4197  000ED0  8C8C               	bsf	140,6,c	;volatile
  4198                           
  4199                           ;TeTeclat.c: 59:     cols=2;
  4200  000ED2  0E02               	movlw	2
  4201  000ED4  6E2F               	movwf	TeTeclat@cols^0,c
  4202                           
  4203                           ;TeTeclat.c: 60:     state = 0;
  4204  000ED6  0E00               	movlw	0
  4205  000ED8  6E30               	movwf	TeTeclat@state^0,c
  4206                           
  4207                           ;TeTeclat.c: 61:    }
  4208  000EDA  0012               	return	
  4209  000EDC                     l5597:
  4210  000EDC  502E               	movf	TeTeclat@files^0,w,c
  4211  000EDE  B4D8               	btfsc	status,2,c
  4212  000EE0  0012               	return	
  4213                           
  4214                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  4215  000EE2  5031               	movf	_tiTeclat^0,w,c
  4216  000EE4  EC8D  F00C         	call	_TiResetTics
  4217  000EE8  D7D4               	goto	l5569
  4218  000EEA                     l5603:
  4219                           
  4220                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  4221  000EEA  5031               	movf	_tiTeclat^0,w,c
  4222  000EEC  EC20  F00C         	call	_TiGetTics
  4223  000EF0  BE6D               	btfsc	(?_TiGetTics+1)^0,7,c
  4224  000EF2  0012               	return	
  4225  000EF4  D7CE               	goto	l5569
  4226  000EF6                     l5607:
  4227                           
  4228                           ;TeTeclat.c: 73:    if (files==0) {
  4229  000EF6  502E               	movf	TeTeclat@files^0,w,c
  4230  000EF8  A4D8               	btfss	status,2,c
  4231  000EFA  D003               	goto	l5611
  4232                           
  4233                           ;TeTeclat.c: 74:     state = 1;
  4234  000EFC  0E01               	movlw	1
  4235  000EFE  6E30               	movwf	TeTeclat@state^0,c
  4236                           
  4237                           ;TeTeclat.c: 75:    }
  4238  000F00  0012               	return	
  4239  000F02                     l5611:
  4240  000F02  502E               	movf	TeTeclat@files^0,w,c
  4241  000F04  B4D8               	btfsc	status,2,c
  4242  000F06  0012               	return	
  4243                           
  4244                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  4245  000F08  502E               	movf	TeTeclat@files^0,w,c
  4246  000F0A  0D03               	mullw	3
  4247  000F0C  50F3               	movf	243,w,c
  4248  000F0E  0FA0               	addlw	low (_teclaPremuda+253)
  4249  000F10  242F               	addwf	TeTeclat@cols^0,w,c
  4250  000F12  6ED9               	movwf	fsr2l,c
  4251  000F14  6ADA               	clrf	fsr2h,c
  4252  000F16  50DF               	movf	indf2,w,c
  4253  000F18  ECF6  F00C         	call	_MsetNovaTecla
  4254                           
  4255                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  4256  000F1C  502E               	movf	TeTeclat@files^0,w,c
  4257  000F1E  0D03               	mullw	3
  4258  000F20  50F3               	movf	243,w,c
  4259  000F22  0FA0               	addlw	low (_teclaPremuda+253)
  4260  000F24  242F               	addwf	TeTeclat@cols^0,w,c
  4261  000F26  6ED9               	movwf	fsr2l,c
  4262  000F28  6ADA               	clrf	fsr2h,c
  4263  000F2A  50DF               	movf	indf2,w,c
  4264  000F2C  ECF2  F00C         	call	_SsetNovaTecla
  4265  000F30  D7B0               	goto	l5569
  4266  000F32                     l5617:
  4267                           
  4268                           ;TeTeclat.c: 84:    if (files==0) {
  4269  000F32  502E               	movf	TeTeclat@files^0,w,c
  4270  000F34  A4D8               	btfss	status,2,c
  4271  000F36  0012               	return	
  4272                           
  4273                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  4274  000F38  5031               	movf	_tiTeclat^0,w,c
  4275  000F3A  EC8D  F00C         	call	_TiResetTics
  4276  000F3E  D7A9               	goto	l5569
  4277  000F40                     l5623:
  4278                           
  4279                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  4280  000F40  5031               	movf	_tiTeclat^0,w,c
  4281  000F42  EC20  F00C         	call	_TiGetTics
  4282  000F46  D7D4               	goto	L3
  4283  000F48                     l5627:
  4284                           
  4285                           ;TeTeclat.c: 95:    if (files!=0) {
  4286  000F48  502E               	movf	TeTeclat@files^0,w,c
  4287  000F4A  B4D8               	btfsc	status,2,c
  4288  000F4C  D003               	goto	l5631
  4289                           
  4290                           ;TeTeclat.c: 96:     state = 5;
  4291  000F4E  0E05               	movlw	5
  4292  000F50  6E30               	movwf	TeTeclat@state^0,c
  4293                           
  4294                           ;TeTeclat.c: 97:    }
  4295  000F52  0012               	return	
  4296  000F54                     l5631:
  4297  000F54  502E               	movf	TeTeclat@files^0,w,c
  4298  000F56  A4D8               	btfss	status,2,c
  4299  000F58  0012               	return	
  4300                           
  4301                           ;TeTeclat.c: 99:     state = 0;
  4302  000F5A  0E00               	movlw	0
  4303  000F5C  6E30               	movwf	TeTeclat@state^0,c
  4304  000F5E  0012               	return	
  4305  000F60                     l5637:
  4306  000F60  5030               	movf	TeTeclat@state^0,w,c
  4307  000F62  6E73               	movwf	??_TeTeclat^0,c
  4308  000F64  6A74               	clrf	(??_TeTeclat+1)^0,c
  4309                           
  4310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4311                           ; Switch size 1, requested type "simple"
  4312                           ; Number of cases is 1, Range of values is 0 to 0
  4313                           ; switch strategies available:
  4314                           ; Name         Instructions Cycles
  4315                           ; simple_byte            4     3 (average)
  4316                           ;	Chosen strategy is simple_byte
  4317  000F66  5074               	movf	(??_TeTeclat+1)^0,w,c
  4318  000F68  0A00               	xorlw	0	; case 0
  4319  000F6A  A4D8               	btfss	status,2,c
  4320  000F6C  0012               	return	
  4321                           
  4322                           ; Switch size 1, requested type "simple"
  4323                           ; Number of cases is 8, Range of values is 0 to 7
  4324                           ; switch strategies available:
  4325                           ; Name         Instructions Cycles
  4326                           ; simple_byte           25    13 (average)
  4327                           ;	Chosen strategy is simple_byte
  4328  000F6E  5073               	movf	??_TeTeclat^0,w,c
  4329  000F70  0A00               	xorlw	0	; case 0
  4330  000F72  B4D8               	btfsc	status,2,c
  4331  000F74  D786               	goto	l5563
  4332  000F76  0A01               	xorlw	1	; case 1
  4333  000F78  B4D8               	btfsc	status,2,c
  4334  000F7A  D796               	goto	l5577
  4335  000F7C  0A03               	xorlw	3	; case 2
  4336  000F7E  B4D8               	btfsc	status,2,c
  4337  000F80  D7A2               	goto	l5591
  4338  000F82  0A01               	xorlw	1	; case 3
  4339  000F84  B4D8               	btfsc	status,2,c
  4340  000F86  D7B1               	goto	l5603
  4341  000F88  0A07               	xorlw	7	; case 4
  4342  000F8A  B4D8               	btfsc	status,2,c
  4343  000F8C  D7B4               	goto	l5607
  4344  000F8E  0A01               	xorlw	1	; case 5
  4345  000F90  B4D8               	btfsc	status,2,c
  4346  000F92  D7CF               	goto	l5617
  4347  000F94  0A03               	xorlw	3	; case 6
  4348  000F96  B4D8               	btfsc	status,2,c
  4349  000F98  D7D3               	goto	l5623
  4350  000F9A  0A01               	xorlw	1	; case 7
  4351  000F9C  A4D8               	btfss	status,2,c
  4352  000F9E  0012               	return	
  4353  000FA0  D7D3               	goto	l5627
  4354  000FA2                     __end_of_TeTeclat:
  4355                           	callstack 0
  4356                           
  4357 ;; *************** function _SsetNovaTecla *****************
  4358 ;; Defined at:
  4359 ;;		line 135 in file "Ssms.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  tecla           1    wreg     unsigned char 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  tecla           1    5[COMRAM] unsigned char 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1
  4373 ;;      Params:         0       0       0
  4374 ;;      Locals:         1       0       0
  4375 ;;      Temps:          0       0       0
  4376 ;;      Totals:         1       0       0
  4377 ;;Total ram usage:        1 bytes
  4378 ;; Hardware stack levels used: 1
  4379 ;; Hardware stack levels required when called: 2
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_TeTeclat
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text29
  4388  0019E4                     __ptext29:
  4389                           	callstack 0
  4390  0019E4                     _SsetNovaTecla:
  4391                           	callstack 27
  4392                           
  4393                           ;incstack = 0
  4394                           ;SsetNovaTecla@tecla stored from wreg
  4395  0019E4  6E6C               	movwf	SsetNovaTecla@tecla^0,c
  4396                           
  4397                           ;Ssms.c: 136:     novaTecla = tecla;
  4398  0019E6  C06C  F065         	movff	SsetNovaTecla@tecla,_novaTecla
  4399  0019EA  0012               	return		;funcret
  4400  0019EC                     __end_of_SsetNovaTecla:
  4401                           	callstack 0
  4402                           
  4403 ;; *************** function _MsetNovaTecla *****************
  4404 ;; Defined at:
  4405 ;;		line 27 in file "Menu.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  tecla           1    wreg     unsigned char 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  tecla           1    5[COMRAM] unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1
  4419 ;;      Params:         0       0       0
  4420 ;;      Locals:         1       0       0
  4421 ;;      Temps:          0       0       0
  4422 ;;      Totals:         1       0       0
  4423 ;;Total ram usage:        1 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; Hardware stack levels required when called: 2
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_TeTeclat
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text30
  4434  0019EC                     __ptext30:
  4435                           	callstack 0
  4436  0019EC                     _MsetNovaTecla:
  4437                           	callstack 27
  4438                           
  4439                           ;incstack = 0
  4440                           ;MsetNovaTecla@tecla stored from wreg
  4441  0019EC  6E6C               	movwf	MsetNovaTecla@tecla^0,c
  4442                           
  4443                           ;Menu.c: 28:     NovaTecla = tecla;
  4444  0019EE  C06C  F062         	movff	MsetNovaTecla@tecla,_NovaTecla
  4445  0019F2  0012               	return		;funcret
  4446  0019F4                     __end_of_MsetNovaTecla:
  4447                           	callstack 0
  4448                           
  4449 ;; *************** function _TeInit *****************
  4450 ;; Defined at:
  4451 ;;		line 18 in file "TeTeclat.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1
  4465 ;;      Params:         0       0       0
  4466 ;;      Locals:         0       0       0
  4467 ;;      Temps:          0       0       0
  4468 ;;      Totals:         0       0       0
  4469 ;;Total ram usage:        0 bytes
  4470 ;; Hardware stack levels used: 1
  4471 ;; Hardware stack levels required when called: 3
  4472 ;; This function calls:
  4473 ;;		_TiGetTimer
  4474 ;; This function is called by:
  4475 ;;		_main
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text31
  4480  0019F4                     __ptext31:
  4481                           	callstack 0
  4482  0019F4                     _TeInit:
  4483                           	callstack 27
  4484                           
  4485                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  4486                           
  4487                           ;incstack = 0
  4488  0019F4  EC83  F00B         	call	_TiGetTimer	;wreg free
  4489  0019F8  6E31               	movwf	_tiTeclat^0,c
  4490  0019FA  0012               	return		;funcret
  4491  0019FC                     __end_of_TeInit:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function _Sinit *****************
  4495 ;; Defined at:
  4496 ;;		line 16 in file "Ssms.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1
  4510 ;;      Params:         0       0       0
  4511 ;;      Locals:         0       0       0
  4512 ;;      Temps:          0       0       0
  4513 ;;      Totals:         0       0       0
  4514 ;;Total ram usage:        0 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; Hardware stack levels required when called: 3
  4517 ;; This function calls:
  4518 ;;		_TiGetTimer
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text32
  4525  0019FC                     __ptext32:
  4526                           	callstack 0
  4527  0019FC                     _Sinit:
  4528                           	callstack 27
  4529                           
  4530                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  4531                           
  4532                           ;incstack = 0
  4533  0019FC  EC83  F00B         	call	_TiGetTimer	;wreg free
  4534  001A00  6E64               	movwf	_timerSMS^0,c
  4535  001A02  0012               	return		;funcret
  4536  001A04                     __end_of_Sinit:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function _SMotor *****************
  4540 ;; Defined at:
  4541 ;;		line 20 in file "Ssms.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1
  4555 ;;      Params:         0       0       0
  4556 ;;      Locals:         0       0       0
  4557 ;;      Temps:          2       0       0
  4558 ;;      Totals:         2       0       0
  4559 ;;Total ram usage:        2 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 3
  4562 ;; This function calls:
  4563 ;;		_MNovaLletra
  4564 ;;		_TiGetTics
  4565 ;;		_TiResetTics
  4566 ;; This function is called by:
  4567 ;;		_main
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text33
  4572  000AB0                     __ptext33:
  4573                           	callstack 0
  4574  000AB0                     _SMotor:
  4575                           	callstack 27
  4576                           
  4577                           ;Ssms.c: 21:  static char state = 0;;Ssms.c: 23:  switch(state) {
  4578                           
  4579                           ;incstack = 0
  4580  000AB0  D0EA               	goto	l4923
  4581  000AB2                     l4757:
  4582                           
  4583                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  4584  000AB2  2865               	incf	_novaTecla^0,w,c
  4585  000AB4  A4D8               	btfss	status,2,c
  4586  000AB6  A279               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4587  000AB8  D006               	goto	l4765
  4588                           
  4589                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  4590  000ABA  5064               	movf	_timerSMS^0,w,c
  4591  000ABC  EC8D  F00C         	call	_TiResetTics
  4592                           
  4593                           ;Ssms.c: 27:     state = 3;
  4594  000AC0  0E03               	movlw	3
  4595  000AC2  6E32               	movwf	SMotor@state^0,c
  4596                           
  4597                           ;Ssms.c: 28:    }
  4598  000AC4  0012               	return	
  4599  000AC6                     l4765:
  4600  000AC6  2865               	incf	_novaTecla^0,w,c
  4601  000AC8  A4D8               	btfss	status,2,c
  4602  000ACA  0012               	return	
  4603  000ACC  5064               	movf	_timerSMS^0,w,c
  4604  000ACE  EC20  F00C         	call	_TiGetTics
  4605  000AD2  BE6D               	btfsc	(?_TiGetTics+1)^0,7,c
  4606  000AD4  0012               	return	
  4607  000AD6  0E5A               	movlw	90
  4608  000AD8  5C6C               	subwf	?_TiGetTics^0,w,c
  4609  000ADA  0E02               	movlw	2
  4610  000ADC  586D               	subwfb	(?_TiGetTics+1)^0,w,c
  4611  000ADE  A0D8               	btfss	status,0,c
  4612  000AE0  0012               	return	
  4613  000AE2  2866               	incf	_lletraASCII^0,w,c
  4614  000AE4  B4D8               	btfsc	status,2,c
  4615  000AE6  0012               	return	
  4616  000AE8  A279               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4617  000AEA  0012               	return	
  4618                           
  4619                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  4620  000AEC  5066               	movf	_lletraASCII^0,w,c
  4621  000AEE  EC02  F00D         	call	_MNovaLletra
  4622                           
  4623                           ;Ssms.c: 31:     lletraASCII = -1;
  4624  000AF2  6866               	setf	_lletraASCII^0,c
  4625                           
  4626                           ;Ssms.c: 32:     ultimaTecla = -1;
  4627  000AF4  6863               	setf	_ultimaTecla^0,c
  4628  000AF6                     l4779:
  4629                           
  4630                           ;Ssms.c: 33:     state = 0;
  4631  000AF6  0E00               	movlw	0
  4632  000AF8  6E32               	movwf	SMotor@state^0,c
  4633  000AFA  0012               	return	
  4634  000AFC                     l4781:
  4635                           
  4636                           ;Ssms.c: 37:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  4637  000AFC  5063               	movf	_ultimaTecla^0,w,c
  4638  000AFE  1865               	xorwf	_novaTecla^0,w,c
  4639  000B00  A4D8               	btfss	status,2,c
  4640  000B02  D018               	goto	l4797
  4641  000B04  5064               	movf	_timerSMS^0,w,c
  4642  000B06  EC20  F00C         	call	_TiGetTics
  4643  000B0A  BE6D               	btfsc	(?_TiGetTics+1)^0,7,c
  4644  000B0C  D006               	goto	u4860
  4645  000B0E  0E5A               	movlw	90
  4646  000B10  5C6C               	subwf	?_TiGetTics^0,w,c
  4647  000B12  0E02               	movlw	2
  4648  000B14  586D               	subwfb	(?_TiGetTics+1)^0,w,c
  4649  000B16  B0D8               	btfsc	status,0,c
  4650  000B18  D00D               	goto	l4797
  4651  000B1A                     u4860:
  4652                           
  4653                           ;Ssms.c: 38:     novaTecla = -1;
  4654  000B1A  6865               	setf	_novaTecla^0,c
  4655                           
  4656                           ;Ssms.c: 39:     sumaPulsacions++;
  4657  000B1C  2A33               	incf	_sumaPulsacions^0,f,c
  4658                           
  4659                           ;Ssms.c: 40:     if(!(lletraASCII == '0' || lletraASCII == ' ')){
  4660  000B1E  0E30               	movlw	48
  4661  000B20  1866               	xorwf	_lletraASCII^0,w,c
  4662  000B22  B4D8               	btfsc	status,2,c
  4663  000B24  D004               	goto	l4795
  4664  000B26  0E20               	movlw	32
  4665  000B28  1866               	xorwf	_lletraASCII^0,w,c
  4666  000B2A  A4D8               	btfss	status,2,c
  4667                           
  4668                           ;Ssms.c: 41:       lletraASCII++;
  4669  000B2C  2A66               	incf	_lletraASCII^0,f,c
  4670  000B2E                     l4795:
  4671                           
  4672                           ;Ssms.c: 43:     state = 2;
  4673  000B2E  0E02               	movlw	2
  4674  000B30  6E32               	movwf	SMotor@state^0,c
  4675                           
  4676                           ;Ssms.c: 44:    }
  4677  000B32  0012               	return	
  4678  000B34                     l4797:
  4679  000B34  2865               	incf	_novaTecla^0,w,c
  4680  000B36  B4D8               	btfsc	status,2,c
  4681  000B38  0012               	return	
  4682  000B3A  5063               	movf	_ultimaTecla^0,w,c
  4683  000B3C  1865               	xorwf	_novaTecla^0,w,c
  4684  000B3E  B4D8               	btfsc	status,2,c
  4685  000B40  0012               	return	
  4686                           
  4687                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  4688  000B42  5066               	movf	_lletraASCII^0,w,c
  4689  000B44  EC02  F00D         	call	_MNovaLletra
  4690                           
  4691                           ;Ssms.c: 47:     if(novaTecla == 0){
  4692  000B48  5065               	movf	_novaTecla^0,w,c
  4693  000B4A  A4D8               	btfss	status,2,c
  4694  000B4C  D007               	goto	l4811
  4695                           
  4696                           ;Ssms.c: 48:      if(sumaPulsacions == 1) lletraASCII = '0';
  4697  000B4E  0433               	decf	_sumaPulsacions^0,w,c
  4698  000B50  A4D8               	btfss	status,2,c
  4699  000B52  D002               	goto	l4809
  4700  000B54  0E30               	movlw	48
  4701  000B56  D007               	goto	L4
  4702  000B58                     l4809:
  4703  000B58  0E20               	movlw	32
  4704  000B5A  D005               	goto	L4
  4705  000B5C                     l4811:
  4706                           
  4707                           ;Ssms.c: 51:       lletraASCII = lletraInici[novaTecla-2];
  4708  000B5C  5065               	movf	_novaTecla^0,w,c
  4709  000B5E  0F44               	addlw	low (_lletraInici+254)
  4710  000B60  6ED9               	movwf	fsr2l,c
  4711  000B62  6ADA               	clrf	fsr2h,c
  4712  000B64  50DF               	movf	indf2,w,c
  4713  000B66                     L4:
  4714  000B66  6E66               	movwf	_lletraASCII^0,c
  4715                           
  4716                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  4717  000B68  C065  F063         	movff	_novaTecla,_ultimaTecla
  4718                           
  4719                           ;Ssms.c: 54:     sumaPulsacions = 0;
  4720  000B6C  0E00               	movlw	0
  4721  000B6E  6E33               	movwf	_sumaPulsacions^0,c
  4722  000B70                     l4817:
  4723                           
  4724                           ;Ssms.c: 55:     novaTecla = -1;
  4725  000B70  6865               	setf	_novaTecla^0,c
  4726  000B72  D7C1               	goto	l4779
  4727  000B74                     l4821:
  4728                           
  4729                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  4730  000B74  0E07               	movlw	7
  4731  000B76  1863               	xorwf	_ultimaTecla^0,w,c
  4732  000B78  B4D8               	btfsc	status,2,c
  4733  000B7A  D00A               	goto	l4829
  4734  000B7C  0E09               	movlw	9
  4735  000B7E  1863               	xorwf	_ultimaTecla^0,w,c
  4736  000B80  B4D8               	btfsc	status,2,c
  4737  000B82  D006               	goto	l4829
  4738  000B84  5063               	movf	_ultimaTecla^0,w,c
  4739  000B86  B4D8               	btfsc	status,2,c
  4740  000B88  D003               	goto	l4829
  4741                           
  4742                           ;Ssms.c: 61:     state = 5;
  4743  000B8A  0E05               	movlw	5
  4744  000B8C  6E32               	movwf	SMotor@state^0,c
  4745                           
  4746                           ;Ssms.c: 62:    }
  4747  000B8E  0012               	return	
  4748  000B90                     l4829:
  4749  000B90  0E07               	movlw	7
  4750  000B92  1863               	xorwf	_ultimaTecla^0,w,c
  4751  000B94  B4D8               	btfsc	status,2,c
  4752  000B96  D004               	goto	u4970
  4753  000B98  0E09               	movlw	9
  4754  000B9A  1863               	xorwf	_ultimaTecla^0,w,c
  4755  000B9C  A4D8               	btfss	status,2,c
  4756  000B9E  D003               	goto	l4835
  4757  000BA0                     u4970:
  4758                           
  4759                           ;Ssms.c: 64:     state = 6;
  4760  000BA0  0E06               	movlw	6
  4761  000BA2  6E32               	movwf	SMotor@state^0,c
  4762                           
  4763                           ;Ssms.c: 65:    }
  4764  000BA4  0012               	return	
  4765  000BA6                     l4835:
  4766  000BA6  5063               	movf	_ultimaTecla^0,w,c
  4767  000BA8  A4D8               	btfss	status,2,c
  4768  000BAA  0012               	return	
  4769                           
  4770                           ;Ssms.c: 67:     state = 7;
  4771  000BAC  0E07               	movlw	7
  4772  000BAE  6E32               	movwf	SMotor@state^0,c
  4773  000BB0  0012               	return	
  4774  000BB2                     l4839:
  4775                           
  4776                           ;Ssms.c: 71:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  4777  000BB2  5065               	movf	_novaTecla^0,w,c
  4778  000BB4  0A80               	xorlw	128
  4779  000BB6  0F7E               	addlw	-130
  4780  000BB8  B0D8               	btfsc	status,0,c
  4781  000BBA  D003               	goto	u5000
  4782  000BBC  5065               	movf	_novaTecla^0,w,c
  4783  000BBE  A4D8               	btfss	status,2,c
  4784  000BC0  D008               	goto	l4847
  4785  000BC2                     u5000:
  4786  000BC2  5065               	movf	_novaTecla^0,w,c
  4787  000BC4  0A80               	xorlw	128
  4788  000BC6  0F76               	addlw	-138
  4789  000BC8  B0D8               	btfsc	status,0,c
  4790  000BCA  D003               	goto	l4847
  4791                           
  4792                           ;Ssms.c: 72:     state = 1;
  4793  000BCC  0E01               	movlw	1
  4794  000BCE  6E32               	movwf	SMotor@state^0,c
  4795                           
  4796                           ;Ssms.c: 73:    }
  4797  000BD0  0012               	return	
  4798  000BD2                     l4847:
  4799  000BD2  5065               	movf	_novaTecla^0,w,c
  4800  000BD4  0A80               	xorlw	128
  4801  000BD6  0F7E               	addlw	-130
  4802  000BD8  B0D8               	btfsc	status,0,c
  4803  000BDA  D008               	goto	l4857
  4804  000BDC  2866               	incf	_lletraASCII^0,w,c
  4805  000BDE  A4D8               	btfss	status,2,c
  4806  000BE0  D005               	goto	l4857
  4807                           
  4808                           ;Ssms.c: 75:     MNovaLletra(novaTecla+48);
  4809  000BE2  5065               	movf	_novaTecla^0,w,c
  4810  000BE4  0F30               	addlw	48
  4811  000BE6  EC02  F00D         	call	_MNovaLletra
  4812  000BEA  D7C2               	goto	l4817
  4813  000BEC                     l4857:
  4814  000BEC  5065               	movf	_novaTecla^0,w,c
  4815  000BEE  0A80               	xorlw	128
  4816  000BF0  0F7E               	addlw	-130
  4817  000BF2  B0D8               	btfsc	status,0,c
  4818  000BF4  0012               	return	
  4819  000BF6  2866               	incf	_lletraASCII^0,w,c
  4820  000BF8  B4D8               	btfsc	status,2,c
  4821  000BFA  0012               	return	
  4822                           
  4823                           ;Ssms.c: 80:     MNovaLletra(lletraASCII);
  4824  000BFC  5066               	movf	_lletraASCII^0,w,c
  4825  000BFE  EC02  F00D         	call	_MNovaLletra
  4826                           
  4827                           ;Ssms.c: 81:     lletraASCII = -1;
  4828  000C02  6866               	setf	_lletraASCII^0,c
  4829                           
  4830                           ;Ssms.c: 82:     state = 4;
  4831  000C04  0E04               	movlw	4
  4832  000C06  6E32               	movwf	SMotor@state^0,c
  4833  000C08  0012               	return	
  4834  000C0A                     l4867:
  4835                           
  4836                           ;Ssms.c: 86:    MNovaLletra(novaTecla+48);
  4837  000C0A  5065               	movf	_novaTecla^0,w,c
  4838  000C0C  0F30               	addlw	48
  4839  000C0E  EC02  F00D         	call	_MNovaLletra
  4840  000C12  D7AE               	goto	l4817
  4841  000C14                     l4873:
  4842                           
  4843                           ;Ssms.c: 91:    if (sumaPulsacions == 4) {
  4844  000C14  0E04               	movlw	4
  4845  000C16  1833               	xorwf	_sumaPulsacions^0,w,c
  4846  000C18  A4D8               	btfss	status,2,c
  4847  000C1A  D009               	goto	l4881
  4848  000C1C                     u5060:
  4849                           
  4850                           ;Ssms.c: 92:     lletraASCII = lletraInici[ultimaTecla-2];
  4851  000C1C  5063               	movf	_ultimaTecla^0,w,c
  4852  000C1E  0F44               	addlw	low (_lletraInici+254)
  4853  000C20  6ED9               	movwf	fsr2l,c
  4854  000C22  6ADA               	clrf	fsr2h,c
  4855  000C24  50DF               	movf	indf2,w,c
  4856  000C26  6E66               	movwf	_lletraASCII^0,c
  4857                           
  4858                           ;Ssms.c: 93:     sumaPulsacions = 0;
  4859  000C28  0E00               	movlw	0
  4860  000C2A  6E33               	movwf	_sumaPulsacions^0,c
  4861  000C2C  D764               	goto	l4779
  4862  000C2E                     l4881:
  4863  000C2E  0E03               	movlw	3
  4864  000C30  1833               	xorwf	_sumaPulsacions^0,w,c
  4865  000C32  A4D8               	btfss	status,2,c
  4866  000C34  D004               	goto	l4887
  4867  000C36                     u5070:
  4868                           
  4869                           ;Ssms.c: 97:     lletraASCII = ultimaTecla+48;
  4870  000C36  5063               	movf	_ultimaTecla^0,w,c
  4871  000C38  0F30               	addlw	48
  4872  000C3A  6E66               	movwf	_lletraASCII^0,c
  4873  000C3C  D75C               	goto	l4779
  4874  000C3E                     l4887:
  4875  000C3E  0E03               	movlw	3
  4876  000C40                     L5:
  4877  000C40  6033               	cpfslt	_sumaPulsacions^0,c
  4878  000C42  0012               	return	
  4879  000C44  D758               	goto	l4779
  4880  000C46                     l4891:
  4881                           
  4882                           ;Ssms.c: 105:    if (sumaPulsacions == 4) {
  4883  000C46  0E04               	movlw	4
  4884  000C48  1833               	xorwf	_sumaPulsacions^0,w,c
  4885  000C4A  B4D8               	btfsc	status,2,c
  4886  000C4C  D7F4               	goto	u5070
  4887  000C4E  0E05               	movlw	5
  4888  000C50  1833               	xorwf	_sumaPulsacions^0,w,c
  4889  000C52  B4D8               	btfsc	status,2,c
  4890  000C54  D7E3               	goto	u5060
  4891  000C56  0E04               	movlw	4
  4892  000C58  D7F3               	goto	L5
  4893  000C5A                     l4909:
  4894                           
  4895                           ;Ssms.c: 119:    if (sumaPulsacions == 2) {
  4896  000C5A  0E02               	movlw	2
  4897  000C5C  1833               	xorwf	_sumaPulsacions^0,w,c
  4898  000C5E  A4D8               	btfss	status,2,c
  4899  000C60  D005               	goto	l4913
  4900                           
  4901                           ;Ssms.c: 120:     lletraASCII = ' ';
  4902  000C62  0E20               	movlw	32
  4903  000C64  6E66               	movwf	_lletraASCII^0,c
  4904                           
  4905                           ;Ssms.c: 121:     state = 0;
  4906  000C66  0E00               	movlw	0
  4907  000C68  6E32               	movwf	SMotor@state^0,c
  4908                           
  4909                           ;Ssms.c: 122:    }
  4910  000C6A  0012               	return	
  4911  000C6C                     l4913:
  4912  000C6C  0E03               	movlw	3
  4913  000C6E  1833               	xorwf	_sumaPulsacions^0,w,c
  4914  000C70  A4D8               	btfss	status,2,c
  4915  000C72  D007               	goto	l4917
  4916                           
  4917                           ;Ssms.c: 124:     lletraASCII = '0';
  4918  000C74  0E30               	movlw	48
  4919  000C76  6E66               	movwf	_lletraASCII^0,c
  4920                           
  4921                           ;Ssms.c: 125:     sumaPulsacions = 0;
  4922  000C78  0E00               	movlw	0
  4923  000C7A  6E33               	movwf	_sumaPulsacions^0,c
  4924                           
  4925                           ;Ssms.c: 126:     state = 0;
  4926  000C7C  0E00               	movlw	0
  4927  000C7E  6E32               	movwf	SMotor@state^0,c
  4928                           
  4929                           ;Ssms.c: 127:    }
  4930  000C80  0012               	return	
  4931  000C82                     l4917:
  4932  000C82  0E02               	movlw	2
  4933  000C84  D7DD               	goto	L5
  4934  000C86                     l4923:
  4935  000C86  5032               	movf	SMotor@state^0,w,c
  4936  000C88  6E73               	movwf	??_SMotor^0,c
  4937  000C8A  6A74               	clrf	(??_SMotor+1)^0,c
  4938                           
  4939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4940                           ; Switch size 1, requested type "simple"
  4941                           ; Number of cases is 1, Range of values is 0 to 0
  4942                           ; switch strategies available:
  4943                           ; Name         Instructions Cycles
  4944                           ; simple_byte            4     3 (average)
  4945                           ;	Chosen strategy is simple_byte
  4946  000C8C  5074               	movf	(??_SMotor+1)^0,w,c
  4947  000C8E  0A00               	xorlw	0	; case 0
  4948  000C90  A4D8               	btfss	status,2,c
  4949  000C92  0012               	return	
  4950                           
  4951                           ; Switch size 1, requested type "simple"
  4952                           ; Number of cases is 8, Range of values is 0 to 7
  4953                           ; switch strategies available:
  4954                           ; Name         Instructions Cycles
  4955                           ; simple_byte           25    13 (average)
  4956                           ;	Chosen strategy is simple_byte
  4957  000C94  5073               	movf	??_SMotor^0,w,c
  4958  000C96  0A00               	xorlw	0	; case 0
  4959  000C98  B4D8               	btfsc	status,2,c
  4960  000C9A  D70B               	goto	l4757
  4961  000C9C  0A01               	xorlw	1	; case 1
  4962  000C9E  B4D8               	btfsc	status,2,c
  4963  000CA0  D72D               	goto	l4781
  4964  000CA2  0A03               	xorlw	3	; case 2
  4965  000CA4  B4D8               	btfsc	status,2,c
  4966  000CA6  D766               	goto	l4821
  4967  000CA8  0A01               	xorlw	1	; case 3
  4968  000CAA  B4D8               	btfsc	status,2,c
  4969  000CAC  D782               	goto	l4839
  4970  000CAE  0A07               	xorlw	7	; case 4
  4971  000CB0  B4D8               	btfsc	status,2,c
  4972  000CB2  D7AB               	goto	l4867
  4973  000CB4  0A01               	xorlw	1	; case 5
  4974  000CB6  B4D8               	btfsc	status,2,c
  4975  000CB8  D7AD               	goto	l4873
  4976  000CBA  0A03               	xorlw	3	; case 6
  4977  000CBC  B4D8               	btfsc	status,2,c
  4978  000CBE  D7C3               	goto	l4891
  4979  000CC0  0A01               	xorlw	1	; case 7
  4980  000CC2  A4D8               	btfss	status,2,c
  4981  000CC4  0012               	return	
  4982  000CC6  D7C9               	goto	l4909
  4983  000CC8                     __end_of_SMotor:
  4984                           	callstack 0
  4985                           
  4986 ;; *************** function _MNovaLletra *****************
  4987 ;; Defined at:
  4988 ;;		line 31 in file "Menu.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  lletra          1    wreg     unsigned char 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  lletra          1    5[COMRAM] unsigned char 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1
  5002 ;;      Params:         0       0       0
  5003 ;;      Locals:         1       0       0
  5004 ;;      Temps:          0       0       0
  5005 ;;      Totals:         1       0       0
  5006 ;;Total ram usage:        1 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 2
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_SMotor
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text34
  5017  001A04                     __ptext34:
  5018                           	callstack 0
  5019  001A04                     _MNovaLletra:
  5020                           	callstack 27
  5021                           
  5022                           ;incstack = 0
  5023                           ;MNovaLletra@lletra stored from wreg
  5024  001A04  6E6C               	movwf	MNovaLletra@lletra^0,c
  5025                           
  5026                           ;Menu.c: 32:     novaLletra = lletra;
  5027  001A06  C06C  F061         	movff	MNovaLletra@lletra,_novaLletra
  5028  001A0A  0012               	return		;funcret
  5029  001A0C                     __end_of_MNovaLletra:
  5030                           	callstack 0
  5031                           
  5032 ;; *************** function _Minit *****************
  5033 ;; Defined at:
  5034 ;;		line 24 in file "Menu.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;		None
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;		None
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMRAM   BANK0   BANK1
  5048 ;;      Params:         0       0       0
  5049 ;;      Locals:         0       0       0
  5050 ;;      Temps:          0       0       0
  5051 ;;      Totals:         0       0       0
  5052 ;;Total ram usage:        0 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; Hardware stack levels required when called: 3
  5055 ;; This function calls:
  5056 ;;		_TiGetTimer
  5057 ;; This function is called by:
  5058 ;;		_main
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text35
  5063  001A0C                     __ptext35:
  5064                           	callstack 0
  5065  001A0C                     _Minit:
  5066                           	callstack 27
  5067                           
  5068                           ;Menu.c: 25:     timerMenu = TiGetTimer();
  5069                           
  5070                           ;incstack = 0
  5071  001A0C  EC83  F00B         	call	_TiGetTimer	;wreg free
  5072  001A10  6E2B               	movwf	_timerMenu^0,c
  5073  001A12  0012               	return		;funcret
  5074  001A14                     __end_of_Minit:
  5075                           	callstack 0
  5076                           
  5077 ;; *************** function _LcLCD *****************
  5078 ;; Defined at:
  5079 ;;		line 244 in file "LcTLCD.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;		None
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;		None
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1    wreg      void 
  5086 ;; Registers used:
  5087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1
  5093 ;;      Params:         0       0       0
  5094 ;;      Locals:         0       0       0
  5095 ;;      Temps:          0       0       0
  5096 ;;      Totals:         0       0       0
  5097 ;;Total ram usage:        0 bytes
  5098 ;; Hardware stack levels used: 1
  5099 ;; Hardware stack levels required when called: 6
  5100 ;; This function calls:
  5101 ;;		_LcPutChar
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text36
  5108  0014F8                     __ptext36:
  5109                           	callstack 0
  5110  0014F8                     _LcLCD:
  5111                           	callstack 24
  5112                           
  5113                           ;LcTLCD.c: 245:     if(nou_s == 1){
  5114                           
  5115                           ;incstack = 0
  5116  0014F8  A479               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5117  0014FA  0012               	return	
  5118                           
  5119                           ;LcTLCD.c: 246:         LcPutChar(*s_ptr);
  5120  0014FC  C00C  FFF6         	movff	_s_ptr,tblptrl
  5121  001500  C00D  FFF7         	movff	_s_ptr+1,tblptrh
  5122  001504  6AF8               	clrf	tblptru,c
  5123  001506  0E01               	movlw	(high __ramtop+-1)
  5124  001508  64F7               	cpfsgt	tblptrh,c
  5125  00150A  D003               	bra	u4767
  5126  00150C  0008               	tblrd		*
  5127  00150E  50F5               	movf	tablat,w,c
  5128  001510  D005               	bra	u4760
  5129  001512                     u4767:
  5130  001512  CFF6 FFE1          	movff	tblptrl,fsr1l
  5131  001516  CFF7 FFE2          	movff	tblptrh,fsr1h
  5132  00151A  50E7               	movf	indf1,w,c
  5133  00151C                     u4760:
  5134  00151C  ECD8  F00A         	call	_LcPutChar
  5135                           
  5136                           ;LcTLCD.c: 247:         s_ptr++;
  5137  001520  4A0C               	infsnz	_s_ptr^0,f,c
  5138  001522  2A0D               	incf	(_s_ptr+1)^0,f,c
  5139                           
  5140                           ;LcTLCD.c: 248:         if(*s_ptr == '\0'){
  5141  001524  C00C  FFF6         	movff	_s_ptr,tblptrl
  5142  001528  C00D  FFF7         	movff	_s_ptr+1,tblptrh
  5143  00152C  6AF8               	clrf	tblptru,c
  5144  00152E  0E01               	movlw	(high __ramtop+-1)
  5145  001530  64F7               	cpfsgt	tblptrh,c
  5146  001532  D003               	bra	u4777
  5147  001534  0008               	tblrd		*
  5148  001536  50F5               	movf	tablat,w,c
  5149  001538  D005               	bra	u4770
  5150  00153A                     u4777:
  5151  00153A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5152  00153E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5153  001542  50E7               	movf	indf1,w,c
  5154  001544                     u4770:
  5155  001544  0900               	iorlw	0
  5156  001546  A4D8               	btfss	status,2,c
  5157  001548  0012               	return	
  5158                           
  5159                           ;LcTLCD.c: 249:             nou_s = 0;
  5160  00154A  9479               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5161                           
  5162                           ;LcTLCD.c: 250:             s_ptr=0;
  5163  00154C  0E00               	movlw	0
  5164  00154E  6E0C               	movwf	_s_ptr^0,c
  5165  001550  0E00               	movlw	0
  5166  001552  6E0D               	movwf	(_s_ptr+1)^0,c
  5167  001554  0012               	return		;funcret
  5168  001556                     __end_of_LcLCD:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _LcInit *****************
  5172 ;; Defined at:
  5173 ;;		line 41 in file "LcTLCD.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  rows            1    wreg     unsigned char 
  5176 ;;  columns         1   16[COMRAM] unsigned char 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  rows            1    0[BANK0 ] unsigned char 
  5179 ;;  i               2    1[BANK0 ] int 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1
  5189 ;;      Params:         1       0       0
  5190 ;;      Locals:         0       3       0
  5191 ;;      Temps:          0       0       0
  5192 ;;      Totals:         1       3       0
  5193 ;;Total ram usage:        4 bytes
  5194 ;; Hardware stack levels used: 1
  5195 ;; Hardware stack levels required when called: 5
  5196 ;; This function calls:
  5197 ;;		_CantaIR
  5198 ;;		_EscriuPrimeraOrdre
  5199 ;;		_Espera
  5200 ;;		_LcCursorOff
  5201 ;;		_TiGetTimer
  5202 ;;		_WaitForBusy
  5203 ;; This function is called by:
  5204 ;;		_main
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text37
  5209  00108E                     __ptext37:
  5210                           	callstack 0
  5211  00108E                     _LcInit:
  5212                           	callstack 25
  5213                           
  5214                           ;incstack = 0
  5215                           ;LcInit@rows stored from wreg
  5216  00108E  0100               	movlb	0	; () banked
  5217  001090  6FAF               	movwf	LcInit@rows& (0+255),b
  5218                           
  5219                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  5220  001092  EC83  F00B         	call	_TiGetTimer	;wreg free
  5221  001096  6E34               	movwf	_Timer^0,c
  5222                           
  5223                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  5224  001098  C0AF  F038         	movff	LcInit@rows,_Rows
  5225  00109C  C077  F037         	movff	LcInit@columns,_Columns
  5226                           
  5227                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  5228  0010A0  0E00               	movlw	0
  5229  0010A2  6E35               	movwf	_ColumnAct^0,c
  5230  0010A4  C035  F036         	movff	_ColumnAct,_RowAct
  5231                           
  5232                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  5233  0010A8  9894               	bcf	148,4,c	;volatile
  5234  0010AA  9E95               	bcf	149,7,c	;volatile
  5235  0010AC  9A94               	bcf	148,5,c	;volatile
  5236                           
  5237                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  5238  0010AE  0E00               	movlw	0
  5239  0010B0  0100               	movlb	0	; () banked
  5240  0010B2  6FB1               	movwf	(LcInit@i+1)& (0+255),b
  5241  0010B4  0E00               	movlw	0
  5242  0010B6  6FB0               	movwf	LcInit@i& (0+255),b
  5243  0010B8                     l4705:
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  5247  0010B8  0E00               	movlw	0
  5248  0010BA  6E74               	movwf	(Espera@ms+1)^0,c
  5249  0010BC  0E64               	movlw	100
  5250  0010BE  6E73               	movwf	Espera@ms^0,c
  5251  0010C0  5034               	movf	_Timer^0,w,c
  5252  0010C2  EC5A  F00C         	call	_Espera
  5253                           
  5254                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  5255  0010C6  0E03               	movlw	3
  5256  0010C8  EC6C  F009         	call	_EscriuPrimeraOrdre
  5257                           
  5258                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  5259  0010CC  0E00               	movlw	0
  5260  0010CE  6E74               	movwf	(Espera@ms+1)^0,c
  5261  0010D0  0E05               	movlw	5
  5262  0010D2  6E73               	movwf	Espera@ms^0,c
  5263  0010D4  5034               	movf	_Timer^0,w,c
  5264  0010D6  EC5A  F00C         	call	_Espera
  5265                           
  5266                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  5267  0010DA  0E03               	movlw	3
  5268  0010DC  EC6C  F009         	call	_EscriuPrimeraOrdre
  5269                           
  5270                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  5271  0010E0  0E00               	movlw	0
  5272  0010E2  6E74               	movwf	(Espera@ms+1)^0,c
  5273  0010E4  0E01               	movlw	1
  5274  0010E6  6E73               	movwf	Espera@ms^0,c
  5275  0010E8  5034               	movf	_Timer^0,w,c
  5276  0010EA  EC5A  F00C         	call	_Espera
  5277                           
  5278                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  5279  0010EE  0E03               	movlw	3
  5280  0010F0  EC6C  F009         	call	_EscriuPrimeraOrdre
  5281                           
  5282                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  5283  0010F4  0E00               	movlw	0
  5284  0010F6  6E74               	movwf	(Espera@ms+1)^0,c
  5285  0010F8  0E01               	movlw	1
  5286  0010FA  6E73               	movwf	Espera@ms^0,c
  5287  0010FC  5034               	movf	_Timer^0,w,c
  5288  0010FE  EC5A  F00C         	call	_Espera
  5289                           
  5290                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  5291  001102  0E02               	movlw	2
  5292  001104  EC6C  F009         	call	_EscriuPrimeraOrdre
  5293                           
  5294                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  5295  001108  0E00               	movlw	0
  5296  00110A  6E74               	movwf	(Espera@ms+1)^0,c
  5297  00110C  0E04               	movlw	4
  5298  00110E  6E73               	movwf	Espera@ms^0,c
  5299  001110  5034               	movf	_Timer^0,w,c
  5300  001112  EC5A  F00C         	call	_Espera
  5301                           
  5302                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  5303  001116  0E28               	movlw	40
  5304  001118  ECF0  F00B         	call	_CantaIR
  5305                           
  5306                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  5307  00111C  EC45  F00B         	call	_WaitForBusy	;wreg free
  5308  001120  0E08               	movlw	8
  5309  001122  ECF0  F00B         	call	_CantaIR
  5310                           
  5311                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  5312  001126  EC45  F00B         	call	_WaitForBusy	;wreg free
  5313  00112A  0E01               	movlw	1
  5314  00112C  ECF0  F00B         	call	_CantaIR
  5315                           
  5316                           ;LcTLCD.c: 71:   Espera(Timer,3);
  5317  001130  0E00               	movlw	0
  5318  001132  6E74               	movwf	(Espera@ms+1)^0,c
  5319  001134  0E03               	movlw	3
  5320  001136  6E73               	movwf	Espera@ms^0,c
  5321  001138  5034               	movf	_Timer^0,w,c
  5322  00113A  EC5A  F00C         	call	_Espera
  5323                           
  5324                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  5325  00113E  EC45  F00B         	call	_WaitForBusy	;wreg free
  5326  001142  0E06               	movlw	6
  5327  001144  ECF0  F00B         	call	_CantaIR
  5328                           
  5329                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  5330  001148  EC45  F00B         	call	_WaitForBusy	;wreg free
  5331  00114C  0E0F               	movlw	15
  5332  00114E  ECF0  F00B         	call	_CantaIR
  5333                           
  5334                           ;LcTLCD.c: 74:  }
  5335  001152  0100               	movlb	0	; () banked
  5336  001154  4BB0               	infsnz	LcInit@i& (0+255),f,b
  5337  001156  2BB1               	incf	(LcInit@i+1)& (0+255),f,b
  5338                           
  5339                           ; BSR set to: 0
  5340  001158  BFB1               	btfsc	(LcInit@i+1)& (0+255),7,b
  5341  00115A  D7AE               	goto	l4705
  5342  00115C  51B1               	movf	(LcInit@i+1)& (0+255),w,b
  5343  00115E  E104               	bnz	u4740
  5344  001160  0E02               	movlw	2
  5345  001162  5DB0               	subwf	LcInit@i& (0+255),w,b
  5346  001164  A0D8               	btfss	status,0,c
  5347  001166  D7A8               	goto	l4705
  5348  001168                     u4740:
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;LcTLCD.c: 79:     LcCursorOff();
  5352  001168  ECD4  F00C         	call	_LcCursorOff	;wreg free
  5353  00116C  0012               	return		;funcret
  5354  00116E                     __end_of_LcInit:
  5355                           	callstack 0
  5356                           
  5357 ;; *************** function _LcCursorOff *****************
  5358 ;; Defined at:
  5359 ;;		line 97 in file "LcTLCD.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 3F/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1
  5373 ;;      Params:         0       0       0
  5374 ;;      Locals:         0       0       0
  5375 ;;      Temps:          0       0       0
  5376 ;;      Totals:         0       0       0
  5377 ;;Total ram usage:        0 bytes
  5378 ;; Hardware stack levels used: 1
  5379 ;; Hardware stack levels required when called: 4
  5380 ;; This function calls:
  5381 ;;		_CantaIR
  5382 ;;		_WaitForBusy
  5383 ;; This function is called by:
  5384 ;;		_LcInit
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text38
  5389  0019A8                     __ptext38:
  5390                           	callstack 0
  5391  0019A8                     _LcCursorOff:
  5392                           	callstack 25
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;LcTLCD.c: 100:  WaitForBusy();
  5396                           
  5397                           ;incstack = 0
  5398  0019A8  EC45  F00B         	call	_WaitForBusy	;wreg free
  5399                           
  5400                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  5401  0019AC  0E0C               	movlw	12
  5402  0019AE  ECF0  F00B         	call	_CantaIR
  5403  0019B2  0012               	return		;funcret
  5404  0019B4                     __end_of_LcCursorOff:
  5405                           	callstack 0
  5406                           
  5407 ;; *************** function _EscriuPrimeraOrdre *****************
  5408 ;; Defined at:
  5409 ;;		line 228 in file "LcTLCD.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;  ordre           1    wreg     unsigned char 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  ordre           1    6[COMRAM] unsigned char 
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      void 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2, status,0
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMRAM   BANK0   BANK1
  5423 ;;      Params:         0       0       0
  5424 ;;      Locals:         1       0       0
  5425 ;;      Temps:          1       0       0
  5426 ;;      Totals:         2       0       0
  5427 ;;Total ram usage:        2 bytes
  5428 ;; Hardware stack levels used: 1
  5429 ;; Hardware stack levels required when called: 2
  5430 ;; This function calls:
  5431 ;;		Nothing
  5432 ;; This function is called by:
  5433 ;;		_LcInit
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           	psect	text39
  5438  0012D8                     __ptext39:
  5439                           	callstack 0
  5440  0012D8                     _EscriuPrimeraOrdre:
  5441                           	callstack 27
  5442                           
  5443                           ;incstack = 0
  5444                           ;EscriuPrimeraOrdre@ordre stored from wreg
  5445  0012D8  6E6D               	movwf	EscriuPrimeraOrdre@ordre^0,c
  5446                           
  5447                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  5448  0012DA  9694               	bcf	148,3,c	;volatile
  5449  0012DC  9494               	bcf	148,2,c	;volatile
  5450  0012DE  9294               	bcf	148,1,c	;volatile
  5451  0012E0  9094               	bcf	148,0,c	;volatile
  5452  0012E2  9A8B               	bcf	139,5,c	;volatile
  5453  0012E4  9E8C               	bcf	140,7,c	;volatile
  5454                           
  5455                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  5456  0012E6  888B               	bsf	139,4,c	;volatile
  5457  0012E8  888B               	bsf	139,4,c	;volatile
  5458                           
  5459                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  5460  0012EA  A66D               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  5461  0012EC  D003               	goto	u4610
  5462  0012EE  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  5463  0012F0  2A6C               	incf	??_EscriuPrimeraOrdre^0,f,c
  5464  0012F2  D001               	goto	u4628
  5465  0012F4                     u4610:
  5466  0012F4  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  5467  0012F6                     u4628:
  5468  0012F6  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5469  0012F8  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5470  0012FA  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5471  0012FC  508B               	movf	139,w,c	;volatile
  5472  0012FE  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5473  001300  0BF7               	andlw	-9
  5474  001302  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5475  001304  6E8B               	movwf	139,c	;volatile
  5476                           
  5477                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  5478  001306  A46D               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  5479  001308  D003               	goto	u4630
  5480  00130A  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  5481  00130C  2A6C               	incf	??_EscriuPrimeraOrdre^0,f,c
  5482  00130E  D001               	goto	u4648
  5483  001310                     u4630:
  5484  001310  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  5485  001312                     u4648:
  5486  001312  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5487  001314  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5488  001316  508B               	movf	139,w,c	;volatile
  5489  001318  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5490  00131A  0BFB               	andlw	-5
  5491  00131C  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5492  00131E  6E8B               	movwf	139,c	;volatile
  5493                           
  5494                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  5495  001320  A26D               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  5496  001322  D003               	goto	u4650
  5497  001324  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  5498  001326  2A6C               	incf	??_EscriuPrimeraOrdre^0,f,c
  5499  001328  D001               	goto	u4668
  5500  00132A                     u4650:
  5501  00132A  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  5502  00132C                     u4668:
  5503  00132C  466C               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5504  00132E  508B               	movf	139,w,c	;volatile
  5505  001330  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5506  001332  0BFD               	andlw	-3
  5507  001334  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5508  001336  6E8B               	movwf	139,c	;volatile
  5509                           
  5510                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  5511  001338  A06D               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  5512  00133A  D003               	goto	u4670
  5513  00133C  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  5514  00133E  2A6C               	incf	??_EscriuPrimeraOrdre^0,f,c
  5515  001340  D001               	goto	u4688
  5516  001342                     u4670:
  5517  001342  6A6C               	clrf	??_EscriuPrimeraOrdre^0,c
  5518  001344                     u4688:
  5519  001344  508B               	movf	139,w,c	;volatile
  5520  001346  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5521  001348  0BFE               	andlw	-2
  5522  00134A  186C               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5523  00134C  6E8B               	movwf	139,c	;volatile
  5524                           
  5525                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  5526  00134E  988B               	bcf	139,4,c	;volatile
  5527  001350  0012               	return		;funcret
  5528  001352                     __end_of_EscriuPrimeraOrdre:
  5529                           	callstack 0
  5530                           
  5531 ;; *************** function _JoystickMotor *****************
  5532 ;; Defined at:
  5533 ;;		line 18 in file "Joystick.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;		None
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;		None
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  1    wreg      void 
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0, cstack
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1
  5547 ;;      Params:         0       0       0
  5548 ;;      Locals:         0       0       0
  5549 ;;      Temps:          2       0       0
  5550 ;;      Totals:         2       0       0
  5551 ;;Total ram usage:        2 bytes
  5552 ;; Hardware stack levels used: 1
  5553 ;; Hardware stack levels required when called: 3
  5554 ;; This function calls:
  5555 ;;		_MNouJoystick
  5556 ;; This function is called by:
  5557 ;;		_main
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text40
  5562  000FA2                     __ptext40:
  5563                           	callstack 0
  5564  000FA2                     _JoystickMotor:
  5565                           	callstack 27
  5566                           
  5567                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  5568                           
  5569                           ;incstack = 0
  5570  000FA2  D05A               	goto	l2357
  5571  000FA4                     l858:
  5572                           
  5573                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  5574  000FA4  B2C2               	btfsc	194,1,c	;volatile
  5575  000FA6  D00B               	goto	l859
  5576  000FA8  0EC8               	movlw	200
  5577  000FAA  60C4               	cpfslt	196,c	;volatile
  5578  000FAC  D008               	goto	l859
  5579  000FAE  0E32               	movlw	50
  5580  000FB0  64C4               	cpfsgt	196,c	;volatile
  5581  000FB2  D005               	goto	l859
  5582                           
  5583                           ;Joystick.c: 23:     ADCON0 = 0x07;
  5584  000FB4  0E07               	movlw	7
  5585  000FB6  6EC2               	movwf	194,c	;volatile
  5586                           
  5587                           ;Joystick.c: 24:                 cap1 = 1;
  5588  000FB8  8478               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  5589  000FBA                     l2287:
  5590                           
  5591                           ;Joystick.c: 25:     state++;
  5592  000FBA  2A11               	incf	JoystickMotor@state^0,f,c
  5593                           
  5594                           ;Joystick.c: 26:    }
  5595  000FBC  D05B               	goto	l866
  5596  000FBE                     l859:
  5597  000FBE  B2C2               	btfsc	194,1,c	;volatile
  5598  000FC0  D010               	goto	l861
  5599  000FC2  0EC7               	movlw	199
  5600  000FC4  64C4               	cpfsgt	196,c	;volatile
  5601  000FC6  D00D               	goto	l861
  5602                           
  5603                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  5604  000FC8  0E02               	movlw	2
  5605  000FCA  1812               	xorwf	_ultimaTeclaAD^0,w,c
  5606  000FCC  B4D8               	btfsc	status,2,c
  5607  000FCE  D003               	goto	l2295
  5608  000FD0  0E02               	movlw	2
  5609  000FD2  EC0A  F00D         	call	_MNouJoystick
  5610  000FD6                     l2295:
  5611                           
  5612                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  5613  000FD6  0E02               	movlw	2
  5614  000FD8  6E12               	movwf	_ultimaTeclaAD^0,c
  5615                           
  5616                           ;Joystick.c: 30:     ADCON0 = 0x07;
  5617  000FDA  0E07               	movlw	7
  5618  000FDC  6EC2               	movwf	194,c	;volatile
  5619                           
  5620                           ;Joystick.c: 31:                 cap1 = 0;
  5621  000FDE  9478               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  5622  000FE0  D7EC               	goto	l2287
  5623  000FE2                     l861:
  5624  000FE2  B2C2               	btfsc	194,1,c	;volatile
  5625  000FE4  D047               	goto	l866
  5626  000FE6  0E33               	movlw	51
  5627  000FE8  60C4               	cpfslt	196,c	;volatile
  5628  000FEA  D044               	goto	l866
  5629                           
  5630                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  5631  000FEC  0E08               	movlw	8
  5632  000FEE  1812               	xorwf	_ultimaTeclaAD^0,w,c
  5633  000FF0  B4D8               	btfsc	status,2,c
  5634  000FF2  D003               	goto	l2309
  5635  000FF4  0E08               	movlw	8
  5636  000FF6  EC0A  F00D         	call	_MNouJoystick
  5637  000FFA                     l2309:
  5638                           
  5639                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  5640  000FFA  0E08               	movlw	8
  5641  000FFC  D7ED               	goto	L6
  5642  000FFE                     l867:
  5643                           
  5644                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  5645  000FFE  B2C2               	btfsc	194,1,c	;volatile
  5646  001000  D00B               	goto	l868
  5647  001002  0EC8               	movlw	200
  5648  001004  60C4               	cpfslt	196,c	;volatile
  5649  001006  D008               	goto	l868
  5650  001008  0E32               	movlw	50
  5651  00100A  64C4               	cpfsgt	196,c	;volatile
  5652  00100C  D005               	goto	l868
  5653                           
  5654                           ;Joystick.c: 44:     ADCON0 = 0x03;
  5655  00100E  0E03               	movlw	3
  5656  001010  6EC2               	movwf	194,c	;volatile
  5657                           
  5658                           ;Joystick.c: 45:                 cap2 = 1;
  5659  001012  8278               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  5660  001014                     l2325:
  5661                           
  5662                           ;Joystick.c: 46:     state--;
  5663  001014  0611               	decf	JoystickMotor@state^0,f,c
  5664                           
  5665                           ;Joystick.c: 47:    }
  5666  001016  D02E               	goto	l866
  5667  001018                     l868:
  5668  001018  B2C2               	btfsc	194,1,c	;volatile
  5669  00101A  D010               	goto	l870
  5670  00101C  0EC7               	movlw	199
  5671  00101E  64C4               	cpfsgt	196,c	;volatile
  5672  001020  D00D               	goto	l870
  5673                           
  5674                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  5675  001022  0E06               	movlw	6
  5676  001024  1812               	xorwf	_ultimaTeclaAD^0,w,c
  5677  001026  B4D8               	btfsc	status,2,c
  5678  001028  D003               	goto	l2333
  5679  00102A  0E06               	movlw	6
  5680  00102C  EC0A  F00D         	call	_MNouJoystick
  5681  001030                     l2333:
  5682                           
  5683                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  5684  001030  0E06               	movlw	6
  5685  001032  6E12               	movwf	_ultimaTeclaAD^0,c
  5686                           
  5687                           ;Joystick.c: 51:     ADCON0 = 0x03;
  5688  001034  0E03               	movlw	3
  5689  001036  6EC2               	movwf	194,c	;volatile
  5690                           
  5691                           ;Joystick.c: 52:                 cap2 = 0;
  5692  001038  9278               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  5693  00103A  D7EC               	goto	l2325
  5694  00103C                     l870:
  5695  00103C  B2C2               	btfsc	194,1,c	;volatile
  5696  00103E  D01A               	goto	l866
  5697  001040  0E33               	movlw	51
  5698  001042  60C4               	cpfslt	196,c	;volatile
  5699  001044  D017               	goto	l866
  5700                           
  5701                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  5702  001046  0E04               	movlw	4
  5703  001048  1812               	xorwf	_ultimaTeclaAD^0,w,c
  5704  00104A  B4D8               	btfsc	status,2,c
  5705  00104C  D003               	goto	l2347
  5706  00104E  0E04               	movlw	4
  5707  001050  EC0A  F00D         	call	_MNouJoystick
  5708  001054                     l2347:
  5709                           
  5710                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  5711  001054  0E04               	movlw	4
  5712  001056  D7ED               	goto	L7
  5713  001058                     l2357:
  5714  001058  5011               	movf	JoystickMotor@state^0,w,c
  5715  00105A  6E6D               	movwf	??_JoystickMotor^0,c
  5716  00105C  6A6E               	clrf	(??_JoystickMotor+1)^0,c
  5717                           
  5718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5719                           ; Switch size 1, requested type "simple"
  5720                           ; Number of cases is 1, Range of values is 0 to 0
  5721                           ; switch strategies available:
  5722                           ; Name         Instructions Cycles
  5723                           ; simple_byte            4     3 (average)
  5724                           ;	Chosen strategy is simple_byte
  5725  00105E  506E               	movf	(??_JoystickMotor+1)^0,w,c
  5726  001060  0A00               	xorlw	0	; case 0
  5727  001062  A4D8               	btfss	status,2,c
  5728  001064  D007               	goto	l866
  5729                           
  5730                           ; Switch size 1, requested type "simple"
  5731                           ; Number of cases is 2, Range of values is 0 to 1
  5732                           ; switch strategies available:
  5733                           ; Name         Instructions Cycles
  5734                           ; simple_byte            7     4 (average)
  5735                           ;	Chosen strategy is simple_byte
  5736  001066  506D               	movf	??_JoystickMotor^0,w,c
  5737  001068  0A00               	xorlw	0	; case 0
  5738  00106A  B4D8               	btfsc	status,2,c
  5739  00106C  D79B               	goto	l858
  5740  00106E  0A01               	xorlw	1	; case 1
  5741  001070  B4D8               	btfsc	status,2,c
  5742  001072  D7C5               	goto	l867
  5743  001074                     l866:
  5744                           
  5745                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  5746  001074  A478               	btfss	(_cap1/(0+8))^0,_cap1& (0+7),c
  5747  001076  0012               	return	
  5748  001078  A278               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  5749  00107A  0012               	return	
  5750  00107C  5012               	movf	_ultimaTeclaAD^0,w,c
  5751  00107E  B4D8               	btfsc	status,2,c
  5752  001080  0012               	return	
  5753                           
  5754                           ;Joystick.c: 66:         MNouJoystick(0);
  5755  001082  0E00               	movlw	0
  5756  001084  EC0A  F00D         	call	_MNouJoystick
  5757                           
  5758                           ;Joystick.c: 67:         ultimaTeclaAD = 0;
  5759  001088  0E00               	movlw	0
  5760  00108A  6E12               	movwf	_ultimaTeclaAD^0,c
  5761  00108C  0012               	return		;funcret
  5762  00108E                     __end_of_JoystickMotor:
  5763                           	callstack 0
  5764                           
  5765 ;; *************** function _MNouJoystick *****************
  5766 ;; Defined at:
  5767 ;;		line 34 in file "Menu.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  posicio         1    wreg     char 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  posicio         1    5[COMRAM] char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1    wreg      void 
  5774 ;; Registers used:
  5775 ;;		wreg
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1
  5781 ;;      Params:         0       0       0
  5782 ;;      Locals:         1       0       0
  5783 ;;      Temps:          0       0       0
  5784 ;;      Totals:         1       0       0
  5785 ;;Total ram usage:        1 bytes
  5786 ;; Hardware stack levels used: 1
  5787 ;; Hardware stack levels required when called: 2
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_JoystickMotor
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text41
  5796  001A14                     __ptext41:
  5797                           	callstack 0
  5798  001A14                     _MNouJoystick:
  5799                           	callstack 27
  5800                           
  5801                           ;incstack = 0
  5802                           ;MNouJoystick@posicio stored from wreg
  5803  001A14  6E6C               	movwf	MNouJoystick@posicio^0,c
  5804                           
  5805                           ;Menu.c: 35:     novaDireccio = posicio;
  5806  001A16  C06C  F060         	movff	MNouJoystick@posicio,_novaDireccio
  5807  001A1A  0012               	return		;funcret
  5808  001A1C                     __end_of_MNouJoystick:
  5809                           	callstack 0
  5810                           
  5811 ;; *************** function _JoystickInit *****************
  5812 ;; Defined at:
  5813 ;;		line 12 in file "Joystick.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;		None
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;		None
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  1    wreg      void 
  5820 ;; Registers used:
  5821 ;;		wreg, status,2
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1
  5827 ;;      Params:         0       0       0
  5828 ;;      Locals:         0       0       0
  5829 ;;      Temps:          0       0       0
  5830 ;;      Totals:         0       0       0
  5831 ;;Total ram usage:        0 bytes
  5832 ;; Hardware stack levels used: 1
  5833 ;; Hardware stack levels required when called: 2
  5834 ;; This function calls:
  5835 ;;		Nothing
  5836 ;; This function is called by:
  5837 ;;		_main
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text42
  5842  00195E                     __ptext42:
  5843                           	callstack 0
  5844  00195E                     _JoystickInit:
  5845                           	callstack 28
  5846                           
  5847                           ;Joystick.c: 13:     ADCON0 = 0x01;
  5848                           
  5849                           ;incstack = 0
  5850  00195E  0E01               	movlw	1
  5851  001960  6EC2               	movwf	194,c	;volatile
  5852                           
  5853                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  5854  001962  0E0D               	movlw	13
  5855  001964  6EC1               	movwf	193,c	;volatile
  5856                           
  5857                           ;Joystick.c: 15:     ADCON2 = 0x09;
  5858  001966  0E09               	movlw	9
  5859  001968  6EC0               	movwf	192,c	;volatile
  5860                           
  5861                           ;Joystick.c: 16:     ADRESH = 127;
  5862  00196A  0E7F               	movlw	127
  5863  00196C  6EC4               	movwf	196,c	;volatile
  5864  00196E  0012               	return		;funcret
  5865  001970                     __end_of_JoystickInit:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _GLCDMotor *****************
  5869 ;; Defined at:
  5870 ;;		line 36 in file "GestioLCD.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1
  5884 ;;      Params:         0       0       0
  5885 ;;      Locals:         0       0       0
  5886 ;;      Temps:          0       2       0
  5887 ;;      Totals:         0       2       0
  5888 ;;Total ram usage:        2 bytes
  5889 ;; Hardware stack levels used: 1
  5890 ;; Hardware stack levels required when called: 6
  5891 ;; This function calls:
  5892 ;;		_LcClear
  5893 ;;		_LcGotoXY
  5894 ;;		_LcLliure
  5895 ;;		_LcNewString
  5896 ;;		_LcPutChar
  5897 ;;		_TiGetTics
  5898 ;;		_TiResetTics
  5899 ;; This function is called by:
  5900 ;;		_main
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text43
  5905  0006D8                     __ptext43:
  5906                           	callstack 0
  5907  0006D8                     _GLCDMotor:
  5908                           	callstack 24
  5909                           
  5910                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  5911                           
  5912                           ;incstack = 0
  5913  0006D8  D1BD               	goto	l5553
  5914  0006DA                     l5367:
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  5918  0006DA  0E11               	movlw	17
  5919  0006DC  6014               	cpfslt	GLCDMotor@length1^0,c
  5920  0006DE  D018               	goto	l5377
  5921                           
  5922                           ; BSR set to: 0
  5923  0006E0  A878               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5924  0006E2  D016               	goto	l5377
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  5928  0006E4  0E00               	movlw	0
  5929  0006E6  6E74               	movwf	LcGotoXY@Row^0,c
  5930  0006E8  0E00               	movlw	0
  5931  0006EA  EC24  F00B         	call	_LcGotoXY
  5932                           
  5933                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  5934  0006EE  501B               	movf	_menuDaltGLCD^0,w,c
  5935  0006F0  0D1D               	mullw	29
  5936  0006F2  50F3               	movf	243,w,c
  5937  0006F4  0F01               	addlw	low _menuList
  5938  0006F6  0100               	movlb	0	; () banked
  5939  0006F8  6FB4               	movwf	??_GLCDMotor& (0+255),b
  5940  0006FA  C0B4  F06F         	movff	??_GLCDMotor,LcNewString@new_s
  5941  0006FE  506F               	movf	LcNewString@new_s^0,w,c
  5942  000700  A4D8               	btfss	status,2,c
  5943  000702  0E02               	movlw	high __smallconst
  5944  000704  6E70               	movwf	(LcNewString@new_s+1)^0,c
  5945  000706  ECDA  F00C         	call	_LcNewString	;wreg free
  5946                           
  5947                           ;GestioLCD.c: 53:     state = 5;
  5948  00070A  0E05               	movlw	5
  5949  00070C  6E1A               	movwf	GLCDMotor@state^0,c
  5950                           
  5951                           ;GestioLCD.c: 54:    }
  5952  00070E  0012               	return	
  5953  000710                     l5377:
  5954                           
  5955                           ; BSR set to: 0
  5956  000710  0E10               	movlw	16
  5957  000712  6414               	cpfsgt	GLCDMotor@length1^0,c
  5958  000714  0012               	return	
  5959                           
  5960                           ; BSR set to: 0
  5961  000716  A878               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5962  000718  0012               	return	
  5963  00071A                     u5720:
  5964                           
  5965                           ;GestioLCD.c: 56:     state++;
  5966  00071A  2A1A               	incf	GLCDMotor@state^0,f,c
  5967  00071C  0012               	return	
  5968  00071E                     l5383:
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;GestioLCD.c: 60:    if (j>=16) {
  5972  00071E  0E0F               	movlw	15
  5973  000720  6419               	cpfsgt	GLCDMotor@j^0,c
  5974  000722  D02B               	goto	l5397
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;GestioLCD.c: 61:     min1++;
  5978  000724  2A18               	incf	GLCDMotor@min1^0,f,c
  5979                           
  5980                           ;GestioLCD.c: 62:     max1++;
  5981  000726  2A5E               	incf	GLCDMotor@max1^0,f,c
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  5985  000728  501B               	movf	_menuDaltGLCD^0,w,c
  5986  00072A  0D1D               	mullw	29
  5987  00072C  50F3               	movf	243,w,c
  5988  00072E  0F01               	addlw	low _menuList
  5989  000730  245E               	addwf	GLCDMotor@max1^0,w,c
  5990  000732  6FB4               	movwf	??_GLCDMotor& (0+255),b
  5991  000734  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  5992  000738                     	if	1	;There is more than 1 active tblptr byte
  5993  000738  0E02               	movlw	high __smallconst
  5994  00073A  6EF7               	movwf	tblptrh,c
  5995  00073C                     	endif
  5996  00073C                     	if	0	;tblptru may be non-zero
  5997  00073C                     	endif
  5998  00073C                     	if	0	;tblptru may be non-zero
  5999  00073C                     	endif
  6000  00073C  0008               	tblrd		*
  6001  00073E  50F5               	movf	tablat,w,c
  6002  000740  0900               	iorlw	0
  6003  000742  A4D8               	btfss	status,2,c
  6004  000744  D002               	goto	l5391
  6005                           
  6006                           ; BSR set to: 0
  6007  000746  0E00               	movlw	0
  6008  000748  6E5E               	movwf	GLCDMotor@max1^0,c
  6009  00074A                     l5391:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  6013  00074A  501B               	movf	_menuDaltGLCD^0,w,c
  6014  00074C  0D1D               	mullw	29
  6015  00074E  50F3               	movf	243,w,c
  6016  000750  0F01               	addlw	low _menuList
  6017  000752  2418               	addwf	GLCDMotor@min1^0,w,c
  6018  000754  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6019  000756  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6020  00075A                     	if	1	;There is more than 1 active tblptr byte
  6021  00075A  0E02               	movlw	high __smallconst
  6022  00075C  6EF7               	movwf	tblptrh,c
  6023  00075E                     	endif
  6024  00075E                     	if	0	;tblptru may be non-zero
  6025  00075E                     	endif
  6026  00075E                     	if	0	;tblptru may be non-zero
  6027  00075E                     	endif
  6028  00075E  0008               	tblrd		*
  6029  000760  50F5               	movf	tablat,w,c
  6030  000762  0900               	iorlw	0
  6031  000764  A4D8               	btfss	status,2,c
  6032  000766  D002               	goto	l789
  6033                           
  6034                           ; BSR set to: 0
  6035  000768  0E00               	movlw	0
  6036  00076A  6E18               	movwf	GLCDMotor@min1^0,c
  6037  00076C                     l789:
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;GestioLCD.c: 65:     j=0;
  6041  00076C  0E00               	movlw	0
  6042  00076E  6E19               	movwf	GLCDMotor@j^0,c
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;GestioLCD.c: 66:     k1=min1;
  6046  000770  C018  F016         	movff	GLCDMotor@min1,GLCDMotor@k1
  6047                           
  6048                           ;GestioLCD.c: 67:     state = 6;
  6049  000774  0E06               	movlw	6
  6050  000776  6E1A               	movwf	GLCDMotor@state^0,c
  6051                           
  6052                           ;GestioLCD.c: 68:    }
  6053  000778  0012               	return	
  6054  00077A                     l5397:
  6055                           
  6056                           ; BSR set to: 0
  6057  00077A  0E10               	movlw	16
  6058  00077C  6019               	cpfslt	GLCDMotor@j^0,c
  6059  00077E  0012               	return	
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  6063  000780  0E00               	movlw	0
  6064  000782  6E74               	movwf	LcGotoXY@Row^0,c
  6065  000784  5019               	movf	GLCDMotor@j^0,w,c
  6066  000786  EC24  F00B         	call	_LcGotoXY
  6067                           
  6068                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  6069  00078A  501B               	movf	_menuDaltGLCD^0,w,c
  6070  00078C  0D1D               	mullw	29
  6071  00078E  50F3               	movf	243,w,c
  6072  000790  0F01               	addlw	low _menuList
  6073  000792  2416               	addwf	GLCDMotor@k1^0,w,c
  6074  000794  0100               	movlb	0	; () banked
  6075  000796  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6076  000798  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6077  00079C                     	if	1	;There is more than 1 active tblptr byte
  6078  00079C  0E02               	movlw	high __smallconst
  6079  00079E  6EF7               	movwf	tblptrh,c
  6080  0007A0                     	endif
  6081  0007A0                     	if	0	;tblptru may be non-zero
  6082  0007A0                     	endif
  6083  0007A0                     	if	0	;tblptru may be non-zero
  6084  0007A0                     	endif
  6085  0007A0  0008               	tblrd		*
  6086  0007A2  50F5               	movf	tablat,w,c
  6087  0007A4  ECD8  F00A         	call	_LcPutChar
  6088                           
  6089                           ;GestioLCD.c: 72:     j++;
  6090  0007A8  2A19               	incf	GLCDMotor@j^0,f,c
  6091                           
  6092                           ;GestioLCD.c: 73:     k1++;
  6093  0007AA  2A16               	incf	GLCDMotor@k1^0,f,c
  6094                           
  6095                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  6096  0007AC  501B               	movf	_menuDaltGLCD^0,w,c
  6097  0007AE  0D1D               	mullw	29
  6098  0007B0  50F3               	movf	243,w,c
  6099  0007B2  0F01               	addlw	low _menuList
  6100  0007B4  2416               	addwf	GLCDMotor@k1^0,w,c
  6101  0007B6  0100               	movlb	0	; () banked
  6102  0007B8  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6103  0007BA  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6104  0007BE                     	if	1	;There is more than 1 active tblptr byte
  6105  0007BE  0E02               	movlw	high __smallconst
  6106  0007C0  6EF7               	movwf	tblptrh,c
  6107  0007C2                     	endif
  6108  0007C2                     	if	0	;tblptru may be non-zero
  6109  0007C2                     	endif
  6110  0007C2                     	if	0	;tblptru may be non-zero
  6111  0007C2                     	endif
  6112  0007C2  0008               	tblrd		*
  6113  0007C4  50F5               	movf	tablat,w,c
  6114  0007C6  0900               	iorlw	0
  6115  0007C8  A4D8               	btfss	status,2,c
  6116  0007CA  0012               	return	
  6117                           
  6118                           ; BSR set to: 0
  6119  0007CC  0E00               	movlw	0
  6120  0007CE  6E16               	movwf	GLCDMotor@k1^0,c
  6121  0007D0  0012               	return	
  6122  0007D2                     l5411:
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  6126  0007D2  0E04               	movlw	4
  6127  0007D4  601B               	cpfslt	_menuDaltGLCD^0,c
  6128  0007D6  D012               	goto	u5820
  6129  0007D8  D7A0               	goto	u5720
  6130  0007DA                     u5790:
  6131                           
  6132                           ;GestioLCD.c: 82:     state = 0;
  6133  0007DA  0E00               	movlw	0
  6134  0007DC  6E1A               	movwf	GLCDMotor@state^0,c
  6135  0007DE  0012               	return	
  6136  0007E0                     l5419:
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  6140  0007E0  ECE0  F00C         	call	_LcLliure	;wreg free
  6141  0007E4  A0D8               	btfss	status,0,c
  6142  0007E6  D006               	goto	l5425
  6143  0007E8  0E04               	movlw	4
  6144  0007EA  601B               	cpfslt	_menuDaltGLCD^0,c
  6145  0007EC  D003               	goto	l5425
  6146                           
  6147                           ;GestioLCD.c: 87:     state = 7;
  6148  0007EE  0E07               	movlw	7
  6149  0007F0  6E1A               	movwf	GLCDMotor@state^0,c
  6150                           
  6151                           ;GestioLCD.c: 88:    }
  6152  0007F2  0012               	return	
  6153  0007F4                     l5425:
  6154  0007F4  ECE0  F00C         	call	_LcLliure	;wreg free
  6155  0007F8  A0D8               	btfss	status,0,c
  6156  0007FA  0012               	return	
  6157  0007FC                     u5820:
  6158  0007FC  0E03               	movlw	3
  6159  0007FE  641B               	cpfsgt	_menuDaltGLCD^0,c
  6160  000800  0012               	return	
  6161  000802  D7EB               	goto	u5790
  6162  000804                     l801:
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  6166  000804  A678               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  6167  000806  0012               	return	
  6168                           
  6169                           ; BSR set to: 0
  6170  000808  A878               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  6171  00080A  0012               	return	
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;GestioLCD.c: 95:     length1 = 0;
  6175  00080C  0E00               	movlw	0
  6176  00080E  6E14               	movwf	GLCDMotor@length1^0,c
  6177                           
  6178                           ;GestioLCD.c: 96:     length2 = 0;
  6179  000810  0E00               	movlw	0
  6180  000812  6E13               	movwf	GLCDMotor@length2^0,c
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  6184  000814  0E00               	movlw	0
  6185  000816  6E74               	movwf	LcGotoXY@Row^0,c
  6186  000818  0E00               	movlw	0
  6187  00081A  EC24  F00B         	call	_LcGotoXY
  6188                           
  6189                           ;GestioLCD.c: 98:     min1 = 0;
  6190  00081E  0E00               	movlw	0
  6191  000820  6E18               	movwf	GLCDMotor@min1^0,c
  6192                           
  6193                           ;GestioLCD.c: 99:     max1 = 15;
  6194  000822  0E0F               	movlw	15
  6195  000824  6E5E               	movwf	GLCDMotor@max1^0,c
  6196                           
  6197                           ;GestioLCD.c: 100:     min2 = 0;
  6198  000826  0E00               	movlw	0
  6199  000828  6E17               	movwf	GLCDMotor@min2^0,c
  6200                           
  6201                           ;GestioLCD.c: 101:     max2 = 15;
  6202  00082A  0E0F               	movlw	15
  6203  00082C  6E5D               	movwf	GLCDMotor@max2^0,c
  6204                           
  6205                           ;GestioLCD.c: 102:     j = 0;
  6206  00082E  0E00               	movlw	0
  6207  000830  6E19               	movwf	GLCDMotor@j^0,c
  6208                           
  6209                           ;GestioLCD.c: 103:     k1 = 0;
  6210  000832  0E00               	movlw	0
  6211  000834  6E16               	movwf	GLCDMotor@k1^0,c
  6212                           
  6213                           ;GestioLCD.c: 104:     k2 = 0;
  6214  000836  0E00               	movlw	0
  6215  000838  6E15               	movwf	GLCDMotor@k2^0,c
  6216                           
  6217                           ;GestioLCD.c: 105:     newString = 0;
  6218  00083A  9678               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  6219  00083C  D76E               	goto	u5720
  6220  00083E                     l5455:
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  6224  00083E  501B               	movf	_menuDaltGLCD^0,w,c
  6225  000840  0D1D               	mullw	29
  6226  000842  50F3               	movf	243,w,c
  6227  000844  0F01               	addlw	low _menuList
  6228  000846  2414               	addwf	GLCDMotor@length1^0,w,c
  6229  000848  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6230  00084A  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6231  00084E                     	if	1	;There is more than 1 active tblptr byte
  6232  00084E  0E02               	movlw	high __smallconst
  6233  000850  6EF7               	movwf	tblptrh,c
  6234  000852                     	endif
  6235  000852                     	if	0	;tblptru may be non-zero
  6236  000852                     	endif
  6237  000852                     	if	0	;tblptru may be non-zero
  6238  000852                     	endif
  6239  000852  0008               	tblrd		*
  6240  000854  50F5               	movf	tablat,w,c
  6241  000856  0900               	iorlw	0
  6242  000858  A4D8               	btfss	status,2,c
  6243  00085A  D004               	goto	l5461
  6244                           
  6245                           ; BSR set to: 0
  6246  00085C  0E03               	movlw	3
  6247  00085E  641B               	cpfsgt	_menuDaltGLCD^0,c
  6248  000860  D001               	goto	l5461
  6249  000862  D75B               	goto	u5720
  6250  000864                     l5461:
  6251                           
  6252                           ; BSR set to: 0
  6253  000864  501B               	movf	_menuDaltGLCD^0,w,c
  6254  000866  0D1D               	mullw	29
  6255  000868  50F3               	movf	243,w,c
  6256  00086A  0F01               	addlw	low _menuList
  6257  00086C  2414               	addwf	GLCDMotor@length1^0,w,c
  6258  00086E  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6259  000870  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6260  000874                     	if	1	;There is more than 1 active tblptr byte
  6261  000874  0E02               	movlw	high __smallconst
  6262  000876  6EF7               	movwf	tblptrh,c
  6263  000878                     	endif
  6264  000878                     	if	0	;tblptru may be non-zero
  6265  000878                     	endif
  6266  000878                     	if	0	;tblptru may be non-zero
  6267  000878                     	endif
  6268  000878  0008               	tblrd		*
  6269  00087A  50F5               	movf	tablat,w,c
  6270  00087C  0900               	iorlw	0
  6271  00087E  B4D8               	btfsc	status,2,c
  6272  000880  D002               	goto	l5465
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;GestioLCD.c: 114:     length1++;
  6276  000882  2A14               	incf	GLCDMotor@length1^0,f,c
  6277                           
  6278                           ;GestioLCD.c: 115:    }
  6279  000884  0012               	return	
  6280  000886                     l5465:
  6281                           
  6282                           ; BSR set to: 0
  6283  000886  0E04               	movlw	4
  6284  000888  601B               	cpfslt	_menuDaltGLCD^0,c
  6285  00088A  0012               	return	
  6286                           
  6287                           ; BSR set to: 0
  6288  00088C  501B               	movf	_menuDaltGLCD^0,w,c
  6289  00088E  0D1D               	mullw	29
  6290  000890  50F3               	movf	243,w,c
  6291  000892  0F01               	addlw	low _menuList
  6292  000894  2414               	addwf	GLCDMotor@length1^0,w,c
  6293  000896  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6294  000898  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6295  00089C                     	if	1	;There is more than 1 active tblptr byte
  6296  00089C  0E02               	movlw	high __smallconst
  6297  00089E  6EF7               	movwf	tblptrh,c
  6298  0008A0                     	endif
  6299  0008A0                     	if	0	;tblptru may be non-zero
  6300  0008A0                     	endif
  6301  0008A0                     	if	0	;tblptru may be non-zero
  6302  0008A0                     	endif
  6303  0008A0  0008               	tblrd		*
  6304  0008A2  50F5               	movf	tablat,w,c
  6305  0008A4  0900               	iorlw	0
  6306  0008A6  A4D8               	btfss	status,2,c
  6307  0008A8  0012               	return	
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;GestioLCD.c: 117:     state = 13;
  6311  0008AA  0E0D               	movlw	13
  6312  0008AC  6E1A               	movwf	GLCDMotor@state^0,c
  6313  0008AE  0012               	return	
  6314  0008B0                     l5471:
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  6318  0008B0  0E11               	movlw	17
  6319  0008B2  6013               	cpfslt	GLCDMotor@length2^0,c
  6320  0008B4  D01A               	goto	l5481
  6321                           
  6322                           ; BSR set to: 0
  6323  0008B6  A878               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  6324  0008B8  D018               	goto	l5481
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  6328  0008BA  0E01               	movlw	1
  6329  0008BC  6E74               	movwf	LcGotoXY@Row^0,c
  6330  0008BE  0E00               	movlw	0
  6331  0008C0  EC24  F00B         	call	_LcGotoXY
  6332                           
  6333                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  6334  0008C4  501B               	movf	_menuDaltGLCD^0,w,c
  6335  0008C6  0D1D               	mullw	29
  6336  0008C8  CFF3 F0B4          	movff	prodl,??_GLCDMotor
  6337  0008CC  0E1D               	movlw	29
  6338  0008CE  0100               	movlb	0	; () banked
  6339  0008D0  27B4               	addwf	??_GLCDMotor& (0+255),f,b
  6340  0008D2  51B4               	movf	??_GLCDMotor& (0+255),w,b
  6341  0008D4  0F01               	addlw	low _menuList
  6342  0008D6  6FB5               	movwf	(??_GLCDMotor+1)& (0+255),b
  6343  0008D8  C0B5  F06F         	movff	??_GLCDMotor+1,LcNewString@new_s
  6344  0008DC  506F               	movf	LcNewString@new_s^0,w,c
  6345  0008DE  A4D8               	btfss	status,2,c
  6346  0008E0  0E02               	movlw	high __smallconst
  6347  0008E2  6E70               	movwf	(LcNewString@new_s+1)^0,c
  6348  0008E4  ECDA  F00C         	call	_LcNewString	;wreg free
  6349  0008E8  D718               	goto	u5720
  6350  0008EA                     l5481:
  6351                           
  6352                           ; BSR set to: 0
  6353  0008EA  0E10               	movlw	16
  6354  0008EC  6413               	cpfsgt	GLCDMotor@length2^0,c
  6355  0008EE  0012               	return	
  6356                           
  6357                           ; BSR set to: 0
  6358  0008F0  A878               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  6359  0008F2  0012               	return	
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;GestioLCD.c: 127:     state = 9;
  6363  0008F4  0E09               	movlw	9
  6364  0008F6  6E1A               	movwf	GLCDMotor@state^0,c
  6365  0008F8  0012               	return	
  6366  0008FA                     l5487:
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;GestioLCD.c: 131:    if (j<16) {
  6370  0008FA  0E10               	movlw	16
  6371  0008FC  6019               	cpfslt	GLCDMotor@j^0,c
  6372  0008FE  D02D               	goto	l5501
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  6376  000900  0E01               	movlw	1
  6377  000902  6E74               	movwf	LcGotoXY@Row^0,c
  6378  000904  5019               	movf	GLCDMotor@j^0,w,c
  6379  000906  EC24  F00B         	call	_LcGotoXY
  6380                           
  6381                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  6382  00090A  501B               	movf	_menuDaltGLCD^0,w,c
  6383  00090C  0D1D               	mullw	29
  6384  00090E  50F3               	movf	243,w,c
  6385  000910  0F01               	addlw	low _menuList
  6386  000912  2415               	addwf	GLCDMotor@k2^0,w,c
  6387  000914  0100               	movlb	0	; () banked
  6388  000916  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6389  000918  0E1D               	movlw	29
  6390  00091A  27B4               	addwf	??_GLCDMotor& (0+255),f,b
  6391  00091C  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6392  000920                     	if	1	;There is more than 1 active tblptr byte
  6393  000920  0E02               	movlw	high __smallconst
  6394  000922  6EF7               	movwf	tblptrh,c
  6395  000924                     	endif
  6396  000924                     	if	0	;tblptru may be non-zero
  6397  000924                     	endif
  6398  000924                     	if	0	;tblptru may be non-zero
  6399  000924                     	endif
  6400  000924  0008               	tblrd		*
  6401  000926  50F5               	movf	tablat,w,c
  6402  000928  ECD8  F00A         	call	_LcPutChar
  6403                           
  6404                           ;GestioLCD.c: 134:     j++;
  6405  00092C  2A19               	incf	GLCDMotor@j^0,f,c
  6406                           
  6407                           ;GestioLCD.c: 135:     k2++;
  6408  00092E  2A15               	incf	GLCDMotor@k2^0,f,c
  6409                           
  6410                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  6411  000930  501B               	movf	_menuDaltGLCD^0,w,c
  6412  000932  0D1D               	mullw	29
  6413  000934  50F3               	movf	243,w,c
  6414  000936  0F01               	addlw	low _menuList
  6415  000938  2415               	addwf	GLCDMotor@k2^0,w,c
  6416  00093A  0100               	movlb	0	; () banked
  6417  00093C  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6418  00093E  0E1D               	movlw	29
  6419  000940  27B4               	addwf	??_GLCDMotor& (0+255),f,b
  6420  000942  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6421  000946                     	if	1	;There is more than 1 active tblptr byte
  6422  000946  0E02               	movlw	high __smallconst
  6423  000948  6EF7               	movwf	tblptrh,c
  6424  00094A                     	endif
  6425  00094A                     	if	0	;tblptru may be non-zero
  6426  00094A                     	endif
  6427  00094A                     	if	0	;tblptru may be non-zero
  6428  00094A                     	endif
  6429  00094A  0008               	tblrd		*
  6430  00094C  50F5               	movf	tablat,w,c
  6431  00094E  0900               	iorlw	0
  6432  000950  A4D8               	btfss	status,2,c
  6433  000952  0012               	return	
  6434                           
  6435                           ; BSR set to: 0
  6436  000954  0E00               	movlw	0
  6437  000956  6E15               	movwf	GLCDMotor@k2^0,c
  6438  000958  0012               	return	
  6439  00095A                     l5501:
  6440                           
  6441                           ; BSR set to: 0
  6442  00095A  0E0F               	movlw	15
  6443  00095C  6419               	cpfsgt	GLCDMotor@j^0,c
  6444  00095E  0012               	return	
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;GestioLCD.c: 139:     min2++;
  6448  000960  2A17               	incf	GLCDMotor@min2^0,f,c
  6449                           
  6450                           ;GestioLCD.c: 140:     max2++;
  6451  000962  2A5D               	incf	GLCDMotor@max2^0,f,c
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  6455  000964  501B               	movf	_menuDaltGLCD^0,w,c
  6456  000966  0D1D               	mullw	29
  6457  000968  50F3               	movf	243,w,c
  6458  00096A  0F01               	addlw	low _menuList
  6459  00096C  245D               	addwf	GLCDMotor@max2^0,w,c
  6460  00096E  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6461  000970  0E1D               	movlw	29
  6462  000972  27B4               	addwf	??_GLCDMotor& (0+255),f,b
  6463  000974  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6464  000978                     	if	1	;There is more than 1 active tblptr byte
  6465  000978  0E02               	movlw	high __smallconst
  6466  00097A  6EF7               	movwf	tblptrh,c
  6467  00097C                     	endif
  6468  00097C                     	if	0	;tblptru may be non-zero
  6469  00097C                     	endif
  6470  00097C                     	if	0	;tblptru may be non-zero
  6471  00097C                     	endif
  6472  00097C  0008               	tblrd		*
  6473  00097E  50F5               	movf	tablat,w,c
  6474  000980  0900               	iorlw	0
  6475  000982  A4D8               	btfss	status,2,c
  6476  000984  D002               	goto	l5509
  6477                           
  6478                           ; BSR set to: 0
  6479  000986  0E00               	movlw	0
  6480  000988  6E5D               	movwf	GLCDMotor@max2^0,c
  6481  00098A                     l5509:
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  6485  00098A  501B               	movf	_menuDaltGLCD^0,w,c
  6486  00098C  0D1D               	mullw	29
  6487  00098E  50F3               	movf	243,w,c
  6488  000990  0F01               	addlw	low _menuList
  6489  000992  2417               	addwf	GLCDMotor@min2^0,w,c
  6490  000994  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6491  000996  0E1D               	movlw	29
  6492  000998  27B4               	addwf	??_GLCDMotor& (0+255),f,b
  6493  00099A  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6494  00099E                     	if	1	;There is more than 1 active tblptr byte
  6495  00099E  0E02               	movlw	high __smallconst
  6496  0009A0  6EF7               	movwf	tblptrh,c
  6497  0009A2                     	endif
  6498  0009A2                     	if	0	;tblptru may be non-zero
  6499  0009A2                     	endif
  6500  0009A2                     	if	0	;tblptru may be non-zero
  6501  0009A2                     	endif
  6502  0009A2  0008               	tblrd		*
  6503  0009A4  50F5               	movf	tablat,w,c
  6504  0009A6  0900               	iorlw	0
  6505  0009A8  A4D8               	btfss	status,2,c
  6506  0009AA  D002               	goto	l819
  6507                           
  6508                           ; BSR set to: 0
  6509  0009AC  0E00               	movlw	0
  6510  0009AE  6E17               	movwf	GLCDMotor@min2^0,c
  6511  0009B0                     l819:
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;GestioLCD.c: 143:     j=0;
  6515  0009B0  0E00               	movlw	0
  6516  0009B2  6E19               	movwf	GLCDMotor@j^0,c
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;GestioLCD.c: 144:     k2=min2;
  6520  0009B4  C017  F015         	movff	GLCDMotor@min2,GLCDMotor@k2
  6521  0009B8  D6B0               	goto	u5720
  6522  0009BA                     l5517:
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  6526  0009BA  501C               	movf	_timerGLCD^0,w,c
  6527  0009BC  EC20  F00C         	call	_TiGetTics
  6528  0009C0  BE6D               	btfsc	(?_TiGetTics+1)^0,7,c
  6529  0009C2  D00E               	goto	l821
  6530  0009C4  0EB5               	movlw	181
  6531  0009C6  5C6C               	subwf	?_TiGetTics^0,w,c
  6532  0009C8  0E04               	movlw	4
  6533  0009CA  586D               	subwfb	(?_TiGetTics+1)^0,w,c
  6534  0009CC  B0D8               	btfsc	status,0,c
  6535  0009CE  B678               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  6536  0009D0  D007               	goto	l821
  6537  0009D2  A878               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  6538  0009D4  D005               	goto	l821
  6539                           
  6540                           ;GestioLCD.c: 150:     LcClear();
  6541  0009D6  EC48  F00C         	call	_LcClear	;wreg free
  6542  0009DA                     l5525:
  6543                           
  6544                           ;GestioLCD.c: 151:     state = 2;
  6545  0009DA  0E02               	movlw	2
  6546  0009DC  6E1A               	movwf	GLCDMotor@state^0,c
  6547                           
  6548                           ;GestioLCD.c: 152:    }
  6549  0009DE  0012               	return	
  6550  0009E0                     l821:
  6551  0009E0  A678               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  6552  0009E2  0012               	return	
  6553  0009E4  A878               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  6554  0009E6  0012               	return	
  6555                           
  6556                           ;GestioLCD.c: 154:     LcClear();
  6557  0009E8  EC48  F00C         	call	_LcClear	;wreg free
  6558  0009EC  D6F6               	goto	u5790
  6559  0009EE                     l5533:
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  6563  0009EE  501C               	movf	_timerGLCD^0,w,c
  6564  0009F0  EC8D  F00C         	call	_TiResetTics
  6565  0009F4  D692               	goto	u5720
  6566  0009F6                     l5537:
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;GestioLCD.c: 163:    if (LcLliure()) {
  6570  0009F6  ECE0  F00C         	call	_LcLliure	;wreg free
  6571  0009FA  A0D8               	btfss	status,0,c
  6572  0009FC  0012               	return	
  6573                           
  6574                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  6575  0009FE  501C               	movf	_timerGLCD^0,w,c
  6576  000A00  EC8D  F00C         	call	_TiResetTics
  6577                           
  6578                           ;GestioLCD.c: 165:     state = 11;
  6579  000A04  0E0B               	movlw	11
  6580  000A06  6E1A               	movwf	GLCDMotor@state^0,c
  6581  000A08  0012               	return	
  6582  000A0A                     l5543:
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  6586  000A0A  501B               	movf	_menuDaltGLCD^0,w,c
  6587  000A0C  0D1D               	mullw	29
  6588  000A0E  50F3               	movf	243,w,c
  6589  000A10  0F01               	addlw	low _menuList
  6590  000A12  2413               	addwf	GLCDMotor@length2^0,w,c
  6591  000A14  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6592  000A16  0E1D               	movlw	29
  6593  000A18  27B4               	addwf	??_GLCDMotor& (0+255),f,b
  6594  000A1A  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6595  000A1E                     	if	1	;There is more than 1 active tblptr byte
  6596  000A1E  0E02               	movlw	high __smallconst
  6597  000A20  6EF7               	movwf	tblptrh,c
  6598  000A22                     	endif
  6599  000A22                     	if	0	;tblptru may be non-zero
  6600  000A22                     	endif
  6601  000A22                     	if	0	;tblptru may be non-zero
  6602  000A22                     	endif
  6603  000A22  0008               	tblrd		*
  6604  000A24  50F5               	movf	tablat,w,c
  6605  000A26  0900               	iorlw	0
  6606  000A28  B4D8               	btfsc	status,2,c
  6607  000A2A  D002               	goto	l5547
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;GestioLCD.c: 170:     length2++;
  6611  000A2C  2A13               	incf	GLCDMotor@length2^0,f,c
  6612                           
  6613                           ;GestioLCD.c: 171:    }
  6614  000A2E  0012               	return	
  6615  000A30                     l5547:
  6616                           
  6617                           ; BSR set to: 0
  6618  000A30  501B               	movf	_menuDaltGLCD^0,w,c
  6619  000A32  0D1D               	mullw	29
  6620  000A34  50F3               	movf	243,w,c
  6621  000A36  0F01               	addlw	low _menuList
  6622  000A38  2413               	addwf	GLCDMotor@length2^0,w,c
  6623  000A3A  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6624  000A3C  0E1D               	movlw	29
  6625  000A3E  27B4               	addwf	??_GLCDMotor& (0+255),f,b
  6626  000A40  C0B4  FFF6         	movff	??_GLCDMotor,tblptrl
  6627  000A44                     	if	1	;There is more than 1 active tblptr byte
  6628  000A44  0E02               	movlw	high __smallconst
  6629  000A46  6EF7               	movwf	tblptrh,c
  6630  000A48                     	endif
  6631  000A48                     	if	0	;tblptru may be non-zero
  6632  000A48                     	endif
  6633  000A48                     	if	0	;tblptru may be non-zero
  6634  000A48                     	endif
  6635  000A48  0008               	tblrd		*
  6636  000A4A  50F5               	movf	tablat,w,c
  6637  000A4C  0900               	iorlw	0
  6638  000A4E  A4D8               	btfss	status,2,c
  6639  000A50  0012               	return	
  6640  000A52  D7C3               	goto	l5525
  6641  000A54                     l5553:
  6642  000A54  501A               	movf	GLCDMotor@state^0,w,c
  6643  000A56  0100               	movlb	0	; () banked
  6644  000A58  6FB4               	movwf	??_GLCDMotor& (0+255),b
  6645  000A5A  6BB5               	clrf	(??_GLCDMotor+1)& (0+255),b
  6646                           
  6647                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6648                           ; Switch size 1, requested type "simple"
  6649                           ; Number of cases is 1, Range of values is 0 to 0
  6650                           ; switch strategies available:
  6651                           ; Name         Instructions Cycles
  6652                           ; simple_byte            4     3 (average)
  6653                           ;	Chosen strategy is simple_byte
  6654  000A5C  51B5               	movf	(??_GLCDMotor+1)& (0+255),w,b
  6655  000A5E  0A00               	xorlw	0	; case 0
  6656  000A60  A4D8               	btfss	status,2,c
  6657  000A62  0012               	return	
  6658                           
  6659                           ; BSR set to: 0
  6660                           ; Switch size 1, requested type "simple"
  6661                           ; Number of cases is 12, Range of values is 0 to 13
  6662                           ; switch strategies available:
  6663                           ; Name         Instructions Cycles
  6664                           ; simple_byte           37    19 (average)
  6665                           ;	Chosen strategy is simple_byte
  6666  000A64  51B4               	movf	??_GLCDMotor& (0+255),w,b
  6667  000A66  0A00               	xorlw	0	; case 0
  6668  000A68  B4D8               	btfsc	status,2,c
  6669  000A6A  D6CC               	goto	l801
  6670  000A6C  0A01               	xorlw	1	; case 1
  6671  000A6E  B4D8               	btfsc	status,2,c
  6672  000A70  D6E6               	goto	l5455
  6673  000A72  0A03               	xorlw	3	; case 2
  6674  000A74  B4D8               	btfsc	status,2,c
  6675  000A76  D631               	goto	l5367
  6676  000A78  0A01               	xorlw	1	; case 3
  6677  000A7A  B4D8               	btfsc	status,2,c
  6678  000A7C  D650               	goto	l5383
  6679  000A7E  0A06               	xorlw	6	; case 5
  6680  000A80  B4D8               	btfsc	status,2,c
  6681  000A82  D6AE               	goto	l5419
  6682  000A84  0A03               	xorlw	3	; case 6
  6683  000A86  B4D8               	btfsc	status,2,c
  6684  000A88  D6A4               	goto	l5411
  6685  000A8A  0A01               	xorlw	1	; case 7
  6686  000A8C  B4D8               	btfsc	status,2,c
  6687  000A8E  D710               	goto	l5471
  6688  000A90  0A0F               	xorlw	15	; case 8
  6689  000A92  B4D8               	btfsc	status,2,c
  6690  000A94  D7B0               	goto	l5537
  6691  000A96  0A01               	xorlw	1	; case 9
  6692  000A98  B4D8               	btfsc	status,2,c
  6693  000A9A  D72F               	goto	l5487
  6694  000A9C  0A03               	xorlw	3	; case 10
  6695  000A9E  B4D8               	btfsc	status,2,c
  6696  000AA0  D7A6               	goto	l5533
  6697  000AA2  0A01               	xorlw	1	; case 11
  6698  000AA4  B4D8               	btfsc	status,2,c
  6699  000AA6  D789               	goto	l5517
  6700  000AA8  0A06               	xorlw	6	; case 13
  6701  000AAA  A4D8               	btfss	status,2,c
  6702  000AAC  0012               	return	
  6703  000AAE  D7AD               	goto	l5543
  6704  000AB0                     __end_of_GLCDMotor:
  6705                           	callstack 0
  6706                           
  6707 ;; *************** function _LcPutChar *****************
  6708 ;; Defined at:
  6709 ;;		line 132 in file "LcTLCD.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  c               1    wreg     unsigned char 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  c               1   14[COMRAM] unsigned char 
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  1    wreg      void 
  6716 ;; Registers used:
  6717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1
  6723 ;;      Params:         0       0       0
  6724 ;;      Locals:         1       0       0
  6725 ;;      Temps:          0       0       0
  6726 ;;      Totals:         1       0       0
  6727 ;;Total ram usage:        1 bytes
  6728 ;; Hardware stack levels used: 1
  6729 ;; Hardware stack levels required when called: 5
  6730 ;; This function calls:
  6731 ;;		_CantaData
  6732 ;;		_LcGotoXY
  6733 ;;		_WaitForBusy
  6734 ;; This function is called by:
  6735 ;;		_LcLCD
  6736 ;;		_menu
  6737 ;;		_GLCDMotor
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text44
  6742  0015B0                     __ptext44:
  6743                           	callstack 0
  6744  0015B0                     _LcPutChar:
  6745                           	callstack 24
  6746                           
  6747                           ;incstack = 0
  6748                           ;LcPutChar@c stored from wreg
  6749  0015B0  6E75               	movwf	LcPutChar@c^0,c
  6750                           
  6751                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  6752  0015B2  EC45  F00B         	call	_WaitForBusy	;wreg free
  6753  0015B6  5075               	movf	LcPutChar@c^0,w,c
  6754  0015B8  ECD7  F00B         	call	_CantaData
  6755                           
  6756                           ;LcTLCD.c: 136:  ++ColumnAct;
  6757  0015BC  2A35               	incf	_ColumnAct^0,f,c
  6758                           
  6759                           ;LcTLCD.c: 138:  if (Rows == 2) {
  6760  0015BE  0E02               	movlw	2
  6761  0015C0  1838               	xorwf	_Rows^0,w,c
  6762  0015C2  A4D8               	btfss	status,2,c
  6763  0015C4  D010               	goto	l4681
  6764                           
  6765                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  6766  0015C6  0E27               	movlw	39
  6767  0015C8  6435               	cpfsgt	_ColumnAct^0,c
  6768  0015CA  D00D               	goto	l4681
  6769                           
  6770                           ;LcTLCD.c: 140:    ColumnAct = 0;
  6771  0015CC  0E00               	movlw	0
  6772  0015CE  6E35               	movwf	_ColumnAct^0,c
  6773                           
  6774                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  6775  0015D0  2A36               	incf	_RowAct^0,f,c
  6776  0015D2  0E01               	movlw	1
  6777  0015D4  6436               	cpfsgt	_RowAct^0,c
  6778  0015D6  D002               	goto	l4679
  6779  0015D8  0E00               	movlw	0
  6780  0015DA  6E36               	movwf	_RowAct^0,c
  6781  0015DC                     l4679:
  6782                           
  6783                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  6784  0015DC  C036  F074         	movff	_RowAct,LcGotoXY@Row
  6785  0015E0  5035               	movf	_ColumnAct^0,w,c
  6786  0015E2  EC24  F00B         	call	_LcGotoXY
  6787  0015E6                     l4681:
  6788                           
  6789                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  6790  0015E6  0436               	decf	_RowAct^0,w,c
  6791  0015E8  A4D8               	btfss	status,2,c
  6792  0015EA  0012               	return	
  6793                           
  6794                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  6795  0015EC  0E27               	movlw	39
  6796  0015EE  6435               	cpfsgt	_ColumnAct^0,c
  6797  0015F0  D002               	goto	l4687
  6798  0015F2  0E00               	movlw	0
  6799  0015F4  6E35               	movwf	_ColumnAct^0,c
  6800  0015F6                     l4687:
  6801                           
  6802                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  6803  0015F6  C036  F074         	movff	_RowAct,LcGotoXY@Row
  6804  0015FA  5035               	movf	_ColumnAct^0,w,c
  6805  0015FC  EC24  F00B         	call	_LcGotoXY
  6806  001600  0012               	return		;funcret
  6807  001602                     __end_of_LcPutChar:
  6808                           	callstack 0
  6809                           
  6810 ;; *************** function _CantaData *****************
  6811 ;; Defined at:
  6812 ;;		line 194 in file "LcTLCD.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  Data            1    wreg     unsigned char 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  Data            1    7[COMRAM] unsigned char 
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0, cstack
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1
  6826 ;;      Params:         0       0       0
  6827 ;;      Locals:         1       0       0
  6828 ;;      Temps:          0       0       0
  6829 ;;      Totals:         1       0       0
  6830 ;;Total ram usage:        1 bytes
  6831 ;; Hardware stack levels used: 1
  6832 ;; Hardware stack levels required when called: 3
  6833 ;; This function calls:
  6834 ;;		_CantaPartAlta
  6835 ;;		_CantaPartBaixa
  6836 ;; This function is called by:
  6837 ;;		_LcPutChar
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text45
  6842  0017AE                     __ptext45:
  6843                           	callstack 0
  6844  0017AE                     _CantaData:
  6845                           	callstack 25
  6846                           
  6847                           ;incstack = 0
  6848                           ;CantaData@Data stored from wreg
  6849  0017AE  6E6E               	movwf	CantaData@Data^0,c
  6850                           
  6851                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  6852  0017B0  9694               	bcf	148,3,c	;volatile
  6853  0017B2  9494               	bcf	148,2,c	;volatile
  6854  0017B4  9294               	bcf	148,1,c	;volatile
  6855  0017B6  9094               	bcf	148,0,c	;volatile
  6856                           
  6857                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  6858  0017B8  8A8B               	bsf	139,5,c	;volatile
  6859                           
  6860                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  6861  0017BA  9E8C               	bcf	140,7,c	;volatile
  6862                           
  6863                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  6864  0017BC  888B               	bsf	139,4,c	;volatile
  6865                           
  6866                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  6867  0017BE  506E               	movf	CantaData@Data^0,w,c
  6868  0017C0  EC18  F00A         	call	_CantaPartAlta
  6869                           
  6870                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  6871  0017C4  888B               	bsf	139,4,c	;volatile
  6872                           
  6873                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  6874  0017C6  988B               	bcf	139,4,c	;volatile
  6875                           
  6876                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  6877  0017C8  988B               	bcf	139,4,c	;volatile
  6878                           
  6879                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  6880  0017CA  888B               	bsf	139,4,c	;volatile
  6881                           
  6882                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  6883  0017CC  506E               	movf	CantaData@Data^0,w,c
  6884  0017CE  ECE4  F009         	call	_CantaPartBaixa
  6885                           
  6886                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  6887  0017D2  888B               	bsf	139,4,c	;volatile
  6888                           
  6889                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  6890  0017D4  988B               	bcf	139,4,c	;volatile
  6891                           
  6892                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  6893  0017D6  8694               	bsf	148,3,c	;volatile
  6894  0017D8  8494               	bsf	148,2,c	;volatile
  6895  0017DA  8294               	bsf	148,1,c	;volatile
  6896  0017DC  8094               	bsf	148,0,c	;volatile
  6897  0017DE  0012               	return		;funcret
  6898  0017E0                     __end_of_CantaData:
  6899                           	callstack 0
  6900                           
  6901 ;; *************** function _LcNewString *****************
  6902 ;; Defined at:
  6903 ;;		line 239 in file "LcTLCD.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  6906 ;;		 -> menuList(145), usuaris.username(9), usuaris(184), STR_6(13), 
  6907 ;;		 -> STR_5(9), STR_4(7), STR_3(7), STR_2(11), 
  6908 ;;		 -> STR_1(8), 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, status,2, status,0
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1
  6920 ;;      Params:         2       0       0
  6921 ;;      Locals:         0       0       0
  6922 ;;      Temps:          0       0       0
  6923 ;;      Totals:         2       0       0
  6924 ;;Total ram usage:        2 bytes
  6925 ;; Hardware stack levels used: 1
  6926 ;; Hardware stack levels required when called: 2
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		_menu
  6931 ;;		_GLCDMotor
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text46
  6936  0019B4                     __ptext46:
  6937                           	callstack 0
  6938  0019B4                     _LcNewString:
  6939                           	callstack 27
  6940                           
  6941                           ;LcTLCD.c: 240:     s_ptr = new_s;
  6942                           
  6943                           ;incstack = 0
  6944  0019B4  C06F  F00C         	movff	LcNewString@new_s,_s_ptr
  6945  0019B8  C070  F00D         	movff	LcNewString@new_s+1,_s_ptr+1
  6946                           
  6947                           ;LcTLCD.c: 241:     nou_s = 1;
  6948  0019BC  8479               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6949  0019BE  0012               	return		;funcret
  6950  0019C0                     __end_of_LcNewString:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function _LcLliure *****************
  6954 ;; Defined at:
  6955 ;;		line 255 in file "LcTLCD.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;		None
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;		None               void
  6962 ;; Registers used:
  6963 ;;		status,0
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1
  6969 ;;      Params:         0       0       0
  6970 ;;      Locals:         0       0       0
  6971 ;;      Temps:          0       0       0
  6972 ;;      Totals:         0       0       0
  6973 ;;Total ram usage:        0 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; Hardware stack levels required when called: 2
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_menu
  6980 ;;		_GLCDMotor
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           	psect	text47
  6985  0019C0                     __ptext47:
  6986                           	callstack 0
  6987  0019C0                     _LcLliure:
  6988                           	callstack 27
  6989                           
  6990                           ;LcTLCD.c: 256:     return !nou_s;
  6991                           
  6992                           ;incstack = 0
  6993  0019C0  A479               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6994  0019C2  D002               	goto	l1755
  6995  0019C4  90D8               	bcf	status,0,c
  6996  0019C6  0012               	return	
  6997  0019C8                     l1755:
  6998  0019C8  80D8               	bsf	status,0,c
  6999  0019CA  0012               	return		;funcret
  7000  0019CC                     __end_of_LcLliure:
  7001                           	callstack 0
  7002                           
  7003 ;; *************** function _LcClear *****************
  7004 ;; Defined at:
  7005 ;;		line 82 in file "LcTLCD.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;		None
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1
  7019 ;;      Params:         0       0       0
  7020 ;;      Locals:         0       0       0
  7021 ;;      Temps:          0       0       0
  7022 ;;      Totals:         0       0       0
  7023 ;;Total ram usage:        0 bytes
  7024 ;; Hardware stack levels used: 1
  7025 ;; Hardware stack levels required when called: 5
  7026 ;; This function calls:
  7027 ;;		_CantaIR
  7028 ;;		_Espera
  7029 ;;		_LcGotoXY
  7030 ;;		_WaitForBusy
  7031 ;; This function is called by:
  7032 ;;		_menu
  7033 ;;		_GLCDMotor
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text48
  7038  001890                     __ptext48:
  7039                           	callstack 0
  7040  001890                     _LcClear:
  7041                           	callstack 24
  7042                           
  7043                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  7044                           
  7045                           ;incstack = 0
  7046  001890  EC45  F00B         	call	_WaitForBusy	;wreg free
  7047  001894  0E01               	movlw	1
  7048  001896  ECF0  F00B         	call	_CantaIR
  7049                           
  7050                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  7051  00189A  0E00               	movlw	0
  7052  00189C  6E74               	movwf	(Espera@ms+1)^0,c
  7053  00189E  0E03               	movlw	3
  7054  0018A0  6E73               	movwf	Espera@ms^0,c
  7055  0018A2  5034               	movf	_Timer^0,w,c
  7056  0018A4  EC5A  F00C         	call	_Espera
  7057                           
  7058                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  7059  0018A8  0E00               	movlw	0
  7060  0018AA  6E74               	movwf	LcGotoXY@Row^0,c
  7061  0018AC  0E00               	movlw	0
  7062  0018AE  EC24  F00B         	call	_LcGotoXY
  7063  0018B2  0012               	return		;funcret
  7064  0018B4                     __end_of_LcClear:
  7065                           	callstack 0
  7066                           
  7067 ;; *************** function _LcGotoXY *****************
  7068 ;; Defined at:
  7069 ;;		line 104 in file "LcTLCD.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  Column          1    wreg     unsigned char 
  7072 ;;  Row             1   13[COMRAM] unsigned char 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  Column          1    4[BANK0 ] unsigned char 
  7075 ;;  Fisics          2    0[BANK0 ] int 
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1
  7085 ;;      Params:         1       0       0
  7086 ;;      Locals:         0       5       0
  7087 ;;      Temps:          0       0       0
  7088 ;;      Totals:         1       5       0
  7089 ;;Total ram usage:        6 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 4
  7092 ;; This function calls:
  7093 ;;		_CantaIR
  7094 ;;		_WaitForBusy
  7095 ;; This function is called by:
  7096 ;;		_LcClear
  7097 ;;		_LcPutChar
  7098 ;;		_menu
  7099 ;;		_GLCDMotor
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           	psect	text49
  7104  001648                     __ptext49:
  7105                           	callstack 0
  7106  001648                     _LcGotoXY:
  7107                           	callstack 24
  7108                           
  7109                           ;incstack = 0
  7110                           ;LcGotoXY@Column stored from wreg
  7111  001648  0100               	movlb	0	; () banked
  7112  00164A  6FB3               	movwf	LcGotoXY@Column& (0+255),b
  7113                           
  7114                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  7115  00164C  5074               	movf	LcGotoXY@Row^0,w,c
  7116  00164E  B4D8               	btfsc	status,2,c
  7117  001650  D005               	goto	l4597
  7118  001652  0E00               	movlw	0
  7119  001654  0100               	movlb	0	; () banked
  7120  001656  6FB2               	movwf	(_LcGotoXY$342+1)& (0+255),b
  7121  001658  0E40               	movlw	64
  7122  00165A  D004               	goto	L8
  7123  00165C                     l4597:
  7124  00165C  0E00               	movlw	0
  7125  00165E  0100               	movlb	0	; () banked
  7126  001660  6FB2               	movwf	(_LcGotoXY$342+1)& (0+255),b
  7127  001662  0E00               	movlw	0
  7128  001664                     L8:
  7129  001664  6FB1               	movwf	_LcGotoXY$342& (0+255),b
  7130                           
  7131                           ; BSR set to: 0
  7132  001666  51B3               	movf	LcGotoXY@Column& (0+255),w,b
  7133  001668  25B1               	addwf	_LcGotoXY$342& (0+255),w,b
  7134  00166A  6FAF               	movwf	LcGotoXY@Fisics& (0+255),b
  7135  00166C  0E00               	movlw	0
  7136  00166E  21B2               	addwfc	(_LcGotoXY$342+1)& (0+255),w,b
  7137  001670  6FB0               	movwf	(LcGotoXY@Fisics+1)& (0+255),b
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;LcTLCD.c: 125:  WaitForBusy();
  7141  001672  EC45  F00B         	call	_WaitForBusy	;wreg free
  7142                           
  7143                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  7144  001676  0100               	movlb	0	; () banked
  7145  001678  51AF               	movf	LcGotoXY@Fisics& (0+255),w,b
  7146  00167A  0980               	iorlw	128
  7147  00167C  ECF0  F00B         	call	_CantaIR
  7148                           
  7149                           ;LcTLCD.c: 128:  RowAct = Row;
  7150  001680  C074  F036         	movff	LcGotoXY@Row,_RowAct
  7151                           
  7152                           ;LcTLCD.c: 129:  ColumnAct = Column;
  7153  001684  C0B3  F035         	movff	LcGotoXY@Column,_ColumnAct
  7154  001688  0012               	return		;funcret
  7155  00168A                     __end_of_LcGotoXY:
  7156                           	callstack 0
  7157                           
  7158 ;; *************** function _WaitForBusy *****************
  7159 ;; Defined at:
  7160 ;;		line 210 in file "LcTLCD.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;		None
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  Busy            1   12[COMRAM] unsigned char 
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  1    wreg      void 
  7167 ;; Registers used:
  7168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1
  7174 ;;      Params:         0       0       0
  7175 ;;      Locals:         1       0       0
  7176 ;;      Temps:          0       0       0
  7177 ;;      Totals:         1       0       0
  7178 ;;Total ram usage:        1 bytes
  7179 ;; Hardware stack levels used: 1
  7180 ;; Hardware stack levels required when called: 3
  7181 ;; This function calls:
  7182 ;;		_TiGetTics
  7183 ;;		_TiResetTics
  7184 ;; This function is called by:
  7185 ;;		_LcInit
  7186 ;;		_LcClear
  7187 ;;		_LcCursorOff
  7188 ;;		_LcGotoXY
  7189 ;;		_LcPutChar
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text50
  7194  00168A                     __ptext50:
  7195                           	callstack 0
  7196  00168A                     _WaitForBusy:
  7197                           	callstack 25
  7198                           
  7199                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  7200                           
  7201                           ;incstack = 0
  7202  00168A  8694               	bsf	148,3,c	;volatile
  7203  00168C  8494               	bsf	148,2,c	;volatile
  7204  00168E  8294               	bsf	148,1,c	;volatile
  7205  001690  8094               	bsf	148,0,c	;volatile
  7206                           
  7207                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  7208  001692  9A8B               	bcf	139,5,c	;volatile
  7209                           
  7210                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  7211  001694  8E8C               	bsf	140,7,c	;volatile
  7212                           
  7213                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  7214  001696  5034               	movf	_Timer^0,w,c
  7215  001698  EC8D  F00C         	call	_TiResetTics
  7216  00169C                     l4565:
  7217                           
  7218                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  7219  00169C  888B               	bsf	139,4,c	;volatile
  7220  00169E  888B               	bsf	139,4,c	;volatile
  7221                           
  7222                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  7223  0016A0  0E00               	movlw	0
  7224  0016A2  B682               	btfsc	130,3,c	;volatile
  7225  0016A4  0E01               	movlw	1
  7226  0016A6  6E73               	movwf	WaitForBusy@Busy^0,c
  7227                           
  7228                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  7229  0016A8  988B               	bcf	139,4,c	;volatile
  7230                           
  7231                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  7232  0016AA  988B               	bcf	139,4,c	;volatile
  7233                           
  7234                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  7235  0016AC  888B               	bsf	139,4,c	;volatile
  7236  0016AE  888B               	bsf	139,4,c	;volatile
  7237                           
  7238                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  7239  0016B0  988B               	bcf	139,4,c	;volatile
  7240                           
  7241                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  7242  0016B2  988B               	bcf	139,4,c	;volatile
  7243                           
  7244                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  7245  0016B4  5034               	movf	_Timer^0,w,c
  7246  0016B6  EC20  F00C         	call	_TiGetTics
  7247  0016BA  506C               	movf	?_TiGetTics^0,w,c
  7248  0016BC  106D               	iorwf	(?_TiGetTics+1)^0,w,c
  7249  0016BE  A4D8               	btfss	status,2,c
  7250  0016C0  0012               	return	
  7251                           
  7252                           ;LcTLCD.c: 225:  } while(Busy);
  7253  0016C2  5073               	movf	WaitForBusy@Busy^0,w,c
  7254  0016C4  B4D8               	btfsc	status,2,c
  7255  0016C6  0012               	return	
  7256  0016C8  D7E9               	goto	l4565
  7257  0016CA                     __end_of_WaitForBusy:
  7258                           	callstack 0
  7259                           
  7260 ;; *************** function _CantaIR *****************
  7261 ;; Defined at:
  7262 ;;		line 178 in file "LcTLCD.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;  IR              1    wreg     unsigned char 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  IR              1    7[COMRAM] unsigned char 
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  1    wreg      void 
  7269 ;; Registers used:
  7270 ;;		wreg, status,2, status,0, cstack
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMRAM   BANK0   BANK1
  7276 ;;      Params:         0       0       0
  7277 ;;      Locals:         1       0       0
  7278 ;;      Temps:          0       0       0
  7279 ;;      Totals:         1       0       0
  7280 ;;Total ram usage:        1 bytes
  7281 ;; Hardware stack levels used: 1
  7282 ;; Hardware stack levels required when called: 3
  7283 ;; This function calls:
  7284 ;;		_CantaPartAlta
  7285 ;;		_CantaPartBaixa
  7286 ;; This function is called by:
  7287 ;;		_LcInit
  7288 ;;		_LcClear
  7289 ;;		_LcCursorOff
  7290 ;;		_LcGotoXY
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           	psect	text51
  7295  0017E0                     __ptext51:
  7296                           	callstack 0
  7297  0017E0                     _CantaIR:
  7298                           	callstack 24
  7299                           
  7300                           ;incstack = 0
  7301                           ;CantaIR@IR stored from wreg
  7302  0017E0  6E6E               	movwf	CantaIR@IR^0,c
  7303                           
  7304                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  7305  0017E2  9694               	bcf	148,3,c	;volatile
  7306  0017E4  9494               	bcf	148,2,c	;volatile
  7307  0017E6  9294               	bcf	148,1,c	;volatile
  7308  0017E8  9094               	bcf	148,0,c	;volatile
  7309                           
  7310                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  7311  0017EA  9A8B               	bcf	139,5,c	;volatile
  7312                           
  7313                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  7314  0017EC  9E8C               	bcf	140,7,c	;volatile
  7315                           
  7316                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  7317  0017EE  888B               	bsf	139,4,c	;volatile
  7318                           
  7319                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  7320  0017F0  506E               	movf	CantaIR@IR^0,w,c
  7321  0017F2  EC18  F00A         	call	_CantaPartAlta
  7322                           
  7323                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  7324  0017F6  888B               	bsf	139,4,c	;volatile
  7325                           
  7326                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  7327  0017F8  988B               	bcf	139,4,c	;volatile
  7328                           
  7329                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  7330  0017FA  988B               	bcf	139,4,c	;volatile
  7331                           
  7332                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  7333  0017FC  888B               	bsf	139,4,c	;volatile
  7334                           
  7335                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  7336  0017FE  506E               	movf	CantaIR@IR^0,w,c
  7337  001800  ECE4  F009         	call	_CantaPartBaixa
  7338                           
  7339                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  7340  001804  888B               	bsf	139,4,c	;volatile
  7341                           
  7342                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  7343  001806  988B               	bcf	139,4,c	;volatile
  7344                           
  7345                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  7346  001808  8694               	bsf	148,3,c	;volatile
  7347  00180A  8494               	bsf	148,2,c	;volatile
  7348  00180C  8294               	bsf	148,1,c	;volatile
  7349  00180E  8094               	bsf	148,0,c	;volatile
  7350  001810  0012               	return		;funcret
  7351  001812                     __end_of_CantaIR:
  7352                           	callstack 0
  7353                           
  7354 ;; *************** function _CantaPartBaixa *****************
  7355 ;; Defined at:
  7356 ;;		line 171 in file "LcTLCD.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  c               1    wreg     unsigned char 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  c               1    6[COMRAM] unsigned char 
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      void 
  7363 ;; Registers used:
  7364 ;;		wreg, status,2, status,0
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1
  7370 ;;      Params:         0       0       0
  7371 ;;      Locals:         1       0       0
  7372 ;;      Temps:          1       0       0
  7373 ;;      Totals:         2       0       0
  7374 ;;Total ram usage:        2 bytes
  7375 ;; Hardware stack levels used: 1
  7376 ;; Hardware stack levels required when called: 2
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_CantaIR
  7381 ;;		_CantaData
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text52
  7386  0013C8                     __ptext52:
  7387                           	callstack 0
  7388  0013C8                     _CantaPartBaixa:
  7389                           	callstack 24
  7390                           
  7391                           ;incstack = 0
  7392                           ;CantaPartBaixa@c stored from wreg
  7393  0013C8  6E6D               	movwf	CantaPartBaixa@c^0,c
  7394                           
  7395                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  7396  0013CA  A66D               	btfss	CantaPartBaixa@c^0,3,c
  7397  0013CC  D003               	goto	u4470
  7398  0013CE  6A6C               	clrf	??_CantaPartBaixa^0,c
  7399  0013D0  2A6C               	incf	??_CantaPartBaixa^0,f,c
  7400  0013D2  D001               	goto	u4488
  7401  0013D4                     u4470:
  7402  0013D4  6A6C               	clrf	??_CantaPartBaixa^0,c
  7403  0013D6                     u4488:
  7404  0013D6  466C               	rlncf	??_CantaPartBaixa^0,f,c
  7405  0013D8  466C               	rlncf	??_CantaPartBaixa^0,f,c
  7406  0013DA  466C               	rlncf	??_CantaPartBaixa^0,f,c
  7407  0013DC  508B               	movf	139,w,c	;volatile
  7408  0013DE  186C               	xorwf	??_CantaPartBaixa^0,w,c
  7409  0013E0  0BF7               	andlw	-9
  7410  0013E2  186C               	xorwf	??_CantaPartBaixa^0,w,c
  7411  0013E4  6E8B               	movwf	139,c	;volatile
  7412                           
  7413                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  7414  0013E6  A46D               	btfss	CantaPartBaixa@c^0,2,c
  7415  0013E8  D003               	goto	u4490
  7416  0013EA  6A6C               	clrf	??_CantaPartBaixa^0,c
  7417  0013EC  2A6C               	incf	??_CantaPartBaixa^0,f,c
  7418  0013EE  D001               	goto	u4508
  7419  0013F0                     u4490:
  7420  0013F0  6A6C               	clrf	??_CantaPartBaixa^0,c
  7421  0013F2                     u4508:
  7422  0013F2  466C               	rlncf	??_CantaPartBaixa^0,f,c
  7423  0013F4  466C               	rlncf	??_CantaPartBaixa^0,f,c
  7424  0013F6  508B               	movf	139,w,c	;volatile
  7425  0013F8  186C               	xorwf	??_CantaPartBaixa^0,w,c
  7426  0013FA  0BFB               	andlw	-5
  7427  0013FC  186C               	xorwf	??_CantaPartBaixa^0,w,c
  7428  0013FE  6E8B               	movwf	139,c	;volatile
  7429                           
  7430                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  7431  001400  A26D               	btfss	CantaPartBaixa@c^0,1,c
  7432  001402  D003               	goto	u4510
  7433  001404  6A6C               	clrf	??_CantaPartBaixa^0,c
  7434  001406  2A6C               	incf	??_CantaPartBaixa^0,f,c
  7435  001408  D001               	goto	u4528
  7436  00140A                     u4510:
  7437  00140A  6A6C               	clrf	??_CantaPartBaixa^0,c
  7438  00140C                     u4528:
  7439  00140C  466C               	rlncf	??_CantaPartBaixa^0,f,c
  7440  00140E  508B               	movf	139,w,c	;volatile
  7441  001410  186C               	xorwf	??_CantaPartBaixa^0,w,c
  7442  001412  0BFD               	andlw	-3
  7443  001414  186C               	xorwf	??_CantaPartBaixa^0,w,c
  7444  001416  6E8B               	movwf	139,c	;volatile
  7445                           
  7446                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  7447  001418  A06D               	btfss	CantaPartBaixa@c^0,0,c
  7448  00141A  D003               	goto	u4530
  7449  00141C  6A6C               	clrf	??_CantaPartBaixa^0,c
  7450  00141E  2A6C               	incf	??_CantaPartBaixa^0,f,c
  7451  001420  D001               	goto	u4548
  7452  001422                     u4530:
  7453  001422  6A6C               	clrf	??_CantaPartBaixa^0,c
  7454  001424                     u4548:
  7455  001424  508B               	movf	139,w,c	;volatile
  7456  001426  186C               	xorwf	??_CantaPartBaixa^0,w,c
  7457  001428  0BFE               	andlw	-2
  7458  00142A  186C               	xorwf	??_CantaPartBaixa^0,w,c
  7459  00142C  6E8B               	movwf	139,c	;volatile
  7460  00142E  0012               	return		;funcret
  7461  001430                     __end_of_CantaPartBaixa:
  7462                           	callstack 0
  7463                           
  7464 ;; *************** function _CantaPartAlta *****************
  7465 ;; Defined at:
  7466 ;;		line 164 in file "LcTLCD.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  c               1    wreg     unsigned char 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;  c               1    6[COMRAM] unsigned char 
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1
  7480 ;;      Params:         0       0       0
  7481 ;;      Locals:         1       0       0
  7482 ;;      Temps:          1       0       0
  7483 ;;      Totals:         2       0       0
  7484 ;;Total ram usage:        2 bytes
  7485 ;; Hardware stack levels used: 1
  7486 ;; Hardware stack levels required when called: 2
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		_CantaIR
  7491 ;;		_CantaData
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text53
  7496  001430                     __ptext53:
  7497                           	callstack 0
  7498  001430                     _CantaPartAlta:
  7499                           	callstack 24
  7500                           
  7501                           ;incstack = 0
  7502                           ;CantaPartAlta@c stored from wreg
  7503  001430  6E6D               	movwf	CantaPartAlta@c^0,c
  7504                           
  7505                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  7506  001432  AE6D               	btfss	CantaPartAlta@c^0,7,c
  7507  001434  D003               	goto	u4390
  7508  001436  6A6C               	clrf	??_CantaPartAlta^0,c
  7509  001438  2A6C               	incf	??_CantaPartAlta^0,f,c
  7510  00143A  D001               	goto	u4408
  7511  00143C                     u4390:
  7512  00143C  6A6C               	clrf	??_CantaPartAlta^0,c
  7513  00143E                     u4408:
  7514  00143E  466C               	rlncf	??_CantaPartAlta^0,f,c
  7515  001440  466C               	rlncf	??_CantaPartAlta^0,f,c
  7516  001442  466C               	rlncf	??_CantaPartAlta^0,f,c
  7517  001444  508B               	movf	139,w,c	;volatile
  7518  001446  186C               	xorwf	??_CantaPartAlta^0,w,c
  7519  001448  0BF7               	andlw	-9
  7520  00144A  186C               	xorwf	??_CantaPartAlta^0,w,c
  7521  00144C  6E8B               	movwf	139,c	;volatile
  7522                           
  7523                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  7524  00144E  AC6D               	btfss	CantaPartAlta@c^0,6,c
  7525  001450  D003               	goto	u4410
  7526  001452  6A6C               	clrf	??_CantaPartAlta^0,c
  7527  001454  2A6C               	incf	??_CantaPartAlta^0,f,c
  7528  001456  D001               	goto	u4428
  7529  001458                     u4410:
  7530  001458  6A6C               	clrf	??_CantaPartAlta^0,c
  7531  00145A                     u4428:
  7532  00145A  466C               	rlncf	??_CantaPartAlta^0,f,c
  7533  00145C  466C               	rlncf	??_CantaPartAlta^0,f,c
  7534  00145E  508B               	movf	139,w,c	;volatile
  7535  001460  186C               	xorwf	??_CantaPartAlta^0,w,c
  7536  001462  0BFB               	andlw	-5
  7537  001464  186C               	xorwf	??_CantaPartAlta^0,w,c
  7538  001466  6E8B               	movwf	139,c	;volatile
  7539                           
  7540                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  7541  001468  AA6D               	btfss	CantaPartAlta@c^0,5,c
  7542  00146A  D003               	goto	u4430
  7543  00146C  6A6C               	clrf	??_CantaPartAlta^0,c
  7544  00146E  2A6C               	incf	??_CantaPartAlta^0,f,c
  7545  001470  D001               	goto	u4448
  7546  001472                     u4430:
  7547  001472  6A6C               	clrf	??_CantaPartAlta^0,c
  7548  001474                     u4448:
  7549  001474  466C               	rlncf	??_CantaPartAlta^0,f,c
  7550  001476  508B               	movf	139,w,c	;volatile
  7551  001478  186C               	xorwf	??_CantaPartAlta^0,w,c
  7552  00147A  0BFD               	andlw	-3
  7553  00147C  186C               	xorwf	??_CantaPartAlta^0,w,c
  7554  00147E  6E8B               	movwf	139,c	;volatile
  7555                           
  7556                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  7557  001480  A86D               	btfss	CantaPartAlta@c^0,4,c
  7558  001482  D003               	goto	u4450
  7559  001484  6A6C               	clrf	??_CantaPartAlta^0,c
  7560  001486  2A6C               	incf	??_CantaPartAlta^0,f,c
  7561  001488  D001               	goto	u4468
  7562  00148A                     u4450:
  7563  00148A  6A6C               	clrf	??_CantaPartAlta^0,c
  7564  00148C                     u4468:
  7565  00148C  508B               	movf	139,w,c	;volatile
  7566  00148E  186C               	xorwf	??_CantaPartAlta^0,w,c
  7567  001490  0BFE               	andlw	-2
  7568  001492  186C               	xorwf	??_CantaPartAlta^0,w,c
  7569  001494  6E8B               	movwf	139,c	;volatile
  7570  001496  0012               	return		;funcret
  7571  001498                     __end_of_CantaPartAlta:
  7572                           	callstack 0
  7573                           
  7574 ;; *************** function _Espera *****************
  7575 ;; Defined at:
  7576 ;;		line 159 in file "LcTLCD.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  Timer           1    wreg     unsigned char 
  7579 ;;  ms              2   12[COMRAM] int 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;  Timer           1   15[COMRAM] unsigned char 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      void 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1
  7591 ;;      Params:         2       0       0
  7592 ;;      Locals:         1       0       0
  7593 ;;      Temps:          1       0       0
  7594 ;;      Totals:         4       0       0
  7595 ;;Total ram usage:        4 bytes
  7596 ;; Hardware stack levels used: 1
  7597 ;; Hardware stack levels required when called: 3
  7598 ;; This function calls:
  7599 ;;		_TiGetTics
  7600 ;;		_TiResetTics
  7601 ;; This function is called by:
  7602 ;;		_LcInit
  7603 ;;		_LcClear
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text54
  7608  0018B4                     __ptext54:
  7609                           	callstack 0
  7610  0018B4                     _Espera:
  7611                           	callstack 25
  7612                           
  7613                           ;incstack = 0
  7614                           ;Espera@Timer stored from wreg
  7615  0018B4  6E76               	movwf	Espera@Timer^0,c
  7616                           
  7617                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  7618  0018B6  5076               	movf	Espera@Timer^0,w,c
  7619  0018B8  EC8D  F00C         	call	_TiResetTics
  7620  0018BC                     l4591:
  7621  0018BC  5076               	movf	Espera@Timer^0,w,c
  7622  0018BE  EC20  F00C         	call	_TiGetTics
  7623  0018C2  5073               	movf	Espera@ms^0,w,c
  7624  0018C4  5C6C               	subwf	?_TiGetTics^0,w,c
  7625  0018C6  506D               	movf	(?_TiGetTics+1)^0,w,c
  7626  0018C8  0A80               	xorlw	128
  7627  0018CA  6E75               	movwf	??_Espera^0,c
  7628  0018CC  5074               	movf	(Espera@ms+1)^0,w,c
  7629  0018CE  0A80               	xorlw	128
  7630  0018D0  5875               	subwfb	??_Espera^0,w,c
  7631  0018D2  B0D8               	btfsc	status,0,c
  7632  0018D4  0012               	return	
  7633  0018D6  D7F2               	goto	l4591
  7634  0018D8                     __end_of_Espera:
  7635                           	callstack 0
  7636                           
  7637 ;; *************** function _TiResetTics *****************
  7638 ;; Defined at:
  7639 ;;		line 55 in file "TiTTimer.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  Handle          1    wreg     unsigned char 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  Handle          1    5[COMRAM] unsigned char 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1
  7653 ;;      Params:         0       0       0
  7654 ;;      Locals:         1       0       0
  7655 ;;      Temps:          0       0       0
  7656 ;;      Totals:         1       0       0
  7657 ;;Total ram usage:        1 bytes
  7658 ;; Hardware stack levels used: 1
  7659 ;; Hardware stack levels required when called: 2
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_Espera
  7664 ;;		_WaitForBusy
  7665 ;;		_SMotor
  7666 ;;		_TeTeclat
  7667 ;;		_menu
  7668 ;;		_motorAltaveu
  7669 ;;		_GLCDMotor
  7670 ;;		_motorHora
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text55
  7675  00191A                     __ptext55:
  7676                           	callstack 0
  7677  00191A                     _TiResetTics:
  7678                           	callstack 27
  7679                           
  7680                           ;incstack = 0
  7681                           ;TiResetTics@Handle stored from wreg
  7682  00191A  6E6C               	movwf	TiResetTics@Handle^0,c
  7683                           
  7684                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  7685  00191C  506C               	movf	TiResetTics@Handle^0,w,c
  7686  00191E  0D03               	mullw	3
  7687  001920  50F3               	movf	243,w,c
  7688  001922  0F80               	addlw	low _s_Timers
  7689  001924  6ED9               	movwf	fsr2l,c
  7690  001926  6ADA               	clrf	fsr2h,c
  7691  001928  C00A  FFDE         	movff	_h_Tics,postinc2
  7692  00192C  C00B  FFDD         	movff	_h_Tics+1,postdec2
  7693  001930  0012               	return		;funcret
  7694  001932                     __end_of_TiResetTics:
  7695                           	callstack 0
  7696                           
  7697 ;; *************** function _TiGetTics *****************
  7698 ;; Defined at:
  7699 ;;		line 61 in file "TiTTimer.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  Handle          1    wreg     unsigned char 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  Handle          1    9[COMRAM] unsigned char 
  7704 ;;  actual          2   10[COMRAM] volatile unsigned int 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  2    5[COMRAM] int 
  7707 ;; Registers used:
  7708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1
  7714 ;;      Params:         2       0       0
  7715 ;;      Locals:         3       0       0
  7716 ;;      Temps:          2       0       0
  7717 ;;      Totals:         7       0       0
  7718 ;;Total ram usage:        7 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; Hardware stack levels required when called: 2
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_Espera
  7725 ;;		_WaitForBusy
  7726 ;;		_SMotor
  7727 ;;		_TeTeclat
  7728 ;;		_menu
  7729 ;;		_motorAltaveu
  7730 ;;		_GLCDMotor
  7731 ;;		_motorHora
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735                           	psect	text56
  7736  001840                     __ptext56:
  7737                           	callstack 0
  7738  001840                     _TiGetTics:
  7739                           	callstack 27
  7740                           
  7741                           ;incstack = 0
  7742                           ;TiGetTics@Handle stored from wreg
  7743  001840  6E70               	movwf	TiGetTics@Handle^0,c
  7744                           
  7745                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  7746  001842  C00A  F071         	movff	_h_Tics,TiGetTics@actual	;volatile
  7747  001846  C00B  F072         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  7748                           
  7749                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  7750  00184A  5070               	movf	TiGetTics@Handle^0,w,c
  7751  00184C  0D03               	mullw	3
  7752  00184E  50F3               	movf	243,w,c
  7753  001850  0F80               	addlw	low _s_Timers
  7754  001852  6ED9               	movwf	fsr2l,c
  7755  001854  6ADA               	clrf	fsr2h,c
  7756  001856  CFDE F06E          	movff	postinc2,??_TiGetTics
  7757  00185A  CFDD F06F          	movff	postdec2,??_TiGetTics+1
  7758  00185E  506E               	movf	??_TiGetTics^0,w,c
  7759  001860  5C71               	subwf	TiGetTics@actual^0,w,c	;volatile
  7760  001862  6E6C               	movwf	?_TiGetTics^0,c
  7761  001864  506F               	movf	(??_TiGetTics+1)^0,w,c
  7762  001866  5872               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  7763  001868  6E6D               	movwf	(?_TiGetTics+1)^0,c
  7764  00186A  0012               	return		;funcret
  7765  00186C                     __end_of_TiGetTics:
  7766                           	callstack 0
  7767                           
  7768 ;; *************** function _GLCDInit *****************
  7769 ;; Defined at:
  7770 ;;		line 26 in file "GestioLCD.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;		None
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      void 
  7777 ;; Registers used:
  7778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1
  7784 ;;      Params:         0       0       0
  7785 ;;      Locals:         0       0       0
  7786 ;;      Temps:          0       0       0
  7787 ;;      Totals:         0       0       0
  7788 ;;Total ram usage:        0 bytes
  7789 ;; Hardware stack levels used: 1
  7790 ;; Hardware stack levels required when called: 3
  7791 ;; This function calls:
  7792 ;;		_TiGetTimer
  7793 ;; This function is called by:
  7794 ;;		_main
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text57
  7799  001A1C                     __ptext57:
  7800                           	callstack 0
  7801  001A1C                     _GLCDInit:
  7802                           	callstack 27
  7803                           
  7804                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  7805                           
  7806                           ;incstack = 0
  7807  001A1C  EC83  F00B         	call	_TiGetTimer	;wreg free
  7808  001A20  6E1C               	movwf	_timerGLCD^0,c
  7809  001A22  0012               	return		;funcret
  7810  001A24                     __end_of_GLCDInit:
  7811                           	callstack 0
  7812                           
  7813 ;; *************** function _TiGetTimer *****************
  7814 ;; Defined at:
  7815 ;;		line 70 in file "TiTTimer.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;		None
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      unsigned char 
  7822 ;; Registers used:
  7823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1
  7829 ;;      Params:         0       0       0
  7830 ;;      Locals:         0       0       0
  7831 ;;      Temps:          1       0       0
  7832 ;;      Totals:         1       0       0
  7833 ;;Total ram usage:        1 bytes
  7834 ;; Hardware stack levels used: 1
  7835 ;; Hardware stack levels required when called: 2
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_LcInit
  7840 ;;		_Sinit
  7841 ;;		_TeInit
  7842 ;;		_Minit
  7843 ;;		_initAltaveu
  7844 ;;		_GLCDInit
  7845 ;;		_initHora
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text58
  7850  001706                     __ptext58:
  7851                           	callstack 0
  7852  001706                     _TiGetTimer:
  7853                           	callstack 27
  7854                           
  7855                           ;TiTTimer.c: 74:     counter=0;
  7856                           
  7857                           ;incstack = 0
  7858  001706  0E00               	movlw	0
  7859  001708  6E2D               	movwf	_counter^0,c
  7860                           
  7861                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  7862  00170A  D007               	goto	l4637
  7863  00170C                     l4629:
  7864                           
  7865                           ;TiTTimer.c: 76:         counter++;
  7866  00170C  2A2D               	incf	_counter^0,f,c
  7867                           
  7868                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  7869  00170E  0E08               	movlw	8
  7870  001710  182D               	xorwf	_counter^0,w,c
  7871  001712  A4D8               	btfss	status,2,c
  7872  001714  D002               	goto	l4637
  7873  001716  0EFF               	movlw	255
  7874  001718  0012               	return	
  7875  00171A                     l4637:
  7876                           
  7877                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  7878  00171A  502D               	movf	_counter^0,w,c
  7879  00171C  0D03               	mullw	3
  7880  00171E  50F3               	movf	243,w,c
  7881  001720  0F82               	addlw	low (_s_Timers+2)
  7882  001722  6ED9               	movwf	fsr2l,c
  7883  001724  6ADA               	clrf	fsr2h,c
  7884  001726  04DE               	decf	postinc2,w,c
  7885  001728  B4D8               	btfsc	status,2,c
  7886  00172A  D7F0               	goto	l4629
  7887                           
  7888                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  7889  00172C  502D               	movf	_counter^0,w,c
  7890  00172E  0D03               	mullw	3
  7891  001730  50F3               	movf	243,w,c
  7892  001732  0F82               	addlw	low (_s_Timers+2)
  7893  001734  6ED9               	movwf	fsr2l,c
  7894  001736  6ADA               	clrf	fsr2h,c
  7895  001738  0E01               	movlw	1
  7896  00173A  6EDF               	movwf	indf2,c
  7897                           
  7898                           ;TiTTimer.c: 80:     return (counter);
  7899  00173C  502D               	movf	_counter^0,w,c
  7900  00173E  0012               	return		;funcret
  7901  001740                     __end_of_TiGetTimer:
  7902                           	callstack 0
  7903                           
  7904 ;; *************** function _high_rsi *****************
  7905 ;; Defined at:
  7906 ;;		line 19 in file "main.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;		None
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1
  7920 ;;      Params:         0       0       0
  7921 ;;      Locals:         0       0       0
  7922 ;;      Temps:          4       0       0
  7923 ;;      Totals:         4       0       0
  7924 ;;Total ram usage:        4 bytes
  7925 ;; Hardware stack levels used: 1
  7926 ;; Hardware stack levels required when called: 1
  7927 ;; This function calls:
  7928 ;;		__TiRSITimer
  7929 ;; This function is called by:
  7930 ;;		Interrupt level 2
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	intcode
  7935  000008                     __pintcode:
  7936                           	callstack 0
  7937  000008                     _high_rsi:
  7938                           	callstack 24
  7939                           
  7940                           ;incstack = 0
  7941  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7942  00000A  CFD9 F068          	movff	fsr2l,??_high_rsi
  7943  00000E  CFDA F069          	movff	fsr2h,??_high_rsi+1
  7944  000012  CFF3 F06A          	movff	prodl,??_high_rsi+2
  7945  000016  CFF4 F06B          	movff	prodh,??_high_rsi+3
  7946  00001A  ECAB  F00A         	call	__TiRSITimer	;wreg free
  7947  00001E  C06B  FFF4         	movff	??_high_rsi+3,prodh
  7948  000022  C06A  FFF3         	movff	??_high_rsi+2,prodl
  7949  000026  C069  FFDA         	movff	??_high_rsi+1,fsr2h
  7950  00002A  C068  FFD9         	movff	??_high_rsi,fsr2l
  7951  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7952  000030  0011               	retfie		f
  7953  000032                     __end_of_high_rsi:
  7954                           	callstack 0
  7955                           
  7956 ;; *************** function __TiRSITimer *****************
  7957 ;; Defined at:
  7958 ;;		line 37 in file "TiTTimer.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;		None
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;		None
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  1    wreg      void 
  7965 ;; Registers used:
  7966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMRAM   BANK0   BANK1
  7972 ;;      Params:         0       0       0
  7973 ;;      Locals:         0       0       0
  7974 ;;      Temps:          1       0       0
  7975 ;;      Totals:         1       0       0
  7976 ;;Total ram usage:        1 bytes
  7977 ;; Hardware stack levels used: 1
  7978 ;; This function calls:
  7979 ;;		Nothing
  7980 ;; This function is called by:
  7981 ;;		_high_rsi
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           	psect	text60
  7986  001556                     __ptext60:
  7987                           	callstack 0
  7988  001556                     __TiRSITimer:
  7989                           	callstack 24
  7990                           
  7991                           ;TiTTimer.c: 39:     TMR0H = 223;
  7992                           
  7993                           ;incstack = 0
  7994  001556  0EDF               	movlw	223
  7995  001558  6ED7               	movwf	215,c	;volatile
  7996                           
  7997                           ;TiTTimer.c: 40:     TMR0L = 148;
  7998  00155A  0E94               	movlw	148
  7999  00155C  6ED6               	movwf	214,c	;volatile
  8000                           
  8001                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  8002  00155E  94F2               	bcf	242,2,c	;volatile
  8003                           
  8004                           ;TiTTimer.c: 42:     h_Tics++;
  8005  001560  4A0A               	infsnz	_h_Tics^0,f,c
  8006  001562  2A0B               	incf	(_h_Tics+1)^0,f,c
  8007                           
  8008                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  8009  001564  0E48               	movlw	72
  8010  001566  5C0A               	subwf	_h_Tics^0,w,c
  8011  001568  0EEE               	movlw	238
  8012  00156A  580B               	subwfb	(_h_Tics+1)^0,w,c
  8013  00156C  A0D8               	btfss	status,0,c
  8014  00156E  0012               	return	
  8015                           
  8016                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  8017  001570  0E00               	movlw	0
  8018  001572  6E2D               	movwf	_counter^0,c
  8019  001574                     i2l3457:
  8020  001574  0E07               	movlw	7
  8021  001576  642D               	cpfsgt	_counter^0,c
  8022  001578  D001               	goto	i2l3461
  8023  00157A  D015               	goto	i2l3469
  8024  00157C                     i2l3461:
  8025                           
  8026                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  8027  00157C  502D               	movf	_counter^0,w,c
  8028  00157E  0D03               	mullw	3
  8029  001580  50F3               	movf	243,w,c
  8030  001582  0F82               	addlw	low (_s_Timers+2)
  8031  001584  6ED9               	movwf	fsr2l,c
  8032  001586  6ADA               	clrf	fsr2h,c
  8033  001588  04DE               	decf	postinc2,w,c
  8034  00158A  A4D8               	btfss	status,2,c
  8035  00158C  D00A               	goto	i2l3465
  8036                           
  8037                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  8038  00158E  502D               	movf	_counter^0,w,c
  8039  001590  0D03               	mullw	3
  8040  001592  50F3               	movf	243,w,c
  8041  001594  0F80               	addlw	low _s_Timers
  8042  001596  6ED9               	movwf	fsr2l,c
  8043  001598  6ADA               	clrf	fsr2h,c
  8044  00159A  500A               	movf	_h_Tics^0,w,c
  8045  00159C  5EDE               	subwf	postinc2,f,c
  8046  00159E  500B               	movf	(_h_Tics+1)^0,w,c
  8047  0015A0  5ADD               	subwfb	postdec2,f,c
  8048  0015A2                     i2l3465:
  8049                           
  8050                           ;TiTTimer.c: 50:         }
  8051  0015A2  2A2D               	incf	_counter^0,f,c
  8052  0015A4  D7E7               	goto	i2l3457
  8053  0015A6                     i2l3469:
  8054                           
  8055                           ;TiTTimer.c: 51:         h_Tics=0;
  8056  0015A6  0E00               	movlw	0
  8057  0015A8  6E0B               	movwf	(_h_Tics+1)^0,c
  8058  0015AA  0E00               	movlw	0
  8059  0015AC  6E0A               	movwf	_h_Tics^0,c
  8060  0015AE  0012               	return		;funcret
  8061  0015B0                     __end_of__TiRSITimer:
  8062                           	callstack 0
  8063                           
  8064                           	psect	rparam
  8065  0000                     
  8066                           	psect	temp
  8067  00007A                     btemp:
  8068                           	callstack 0
  8069  00007A                     	ds	1
  8070  0000                     int$flags	set	btemp
  8071  0000                     wtemp8	set	btemp+1
  8072  0000                     ttemp5	set	btemp+1
  8073  0000                     ttemp6	set	btemp+4
  8074  0000                     ttemp7	set	btemp+8
  8075                           
  8076                           	psect	idloc
  8077                           
  8078                           ;Config register IDLOC0 @ 0x200000
  8079                           ;	unspecified, using default values
  8080  200000                     	org	2097152
  8081  200000  FF                 	db	255
  8082                           
  8083                           ;Config register IDLOC1 @ 0x200001
  8084                           ;	unspecified, using default values
  8085  200001                     	org	2097153
  8086  200001  FF                 	db	255
  8087                           
  8088                           ;Config register IDLOC2 @ 0x200002
  8089                           ;	unspecified, using default values
  8090  200002                     	org	2097154
  8091  200002  FF                 	db	255
  8092                           
  8093                           ;Config register IDLOC3 @ 0x200003
  8094                           ;	unspecified, using default values
  8095  200003                     	org	2097155
  8096  200003  FF                 	db	255
  8097                           
  8098                           ;Config register IDLOC4 @ 0x200004
  8099                           ;	unspecified, using default values
  8100  200004                     	org	2097156
  8101  200004  FF                 	db	255
  8102                           
  8103                           ;Config register IDLOC5 @ 0x200005
  8104                           ;	unspecified, using default values
  8105  200005                     	org	2097157
  8106  200005  FF                 	db	255
  8107                           
  8108                           ;Config register IDLOC6 @ 0x200006
  8109                           ;	unspecified, using default values
  8110  200006                     	org	2097158
  8111  200006  FF                 	db	255
  8112                           
  8113                           ;Config register IDLOC7 @ 0x200007
  8114                           ;	unspecified, using default values
  8115  200007                     	org	2097159
  8116  200007  FF                 	db	255
  8117                           
  8118                           	psect	config
  8119                           
  8120                           ; Padding undefined space
  8121  300000                     	org	3145728
  8122  300000  FF                 	db	255
  8123                           
  8124                           ;Config register CONFIG1H @ 0x300001
  8125                           ;	Oscillator
  8126                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  8127                           ;	Fail-Safe Clock Monitor Enable bit
  8128                           ;	FCMEN = 0x0, unprogrammed default
  8129                           ;	Internal/External Oscillator Switchover bit
  8130                           ;	IESO = 0x0, unprogrammed default
  8131  300001                     	org	3145729
  8132  300001  06                 	db	6
  8133                           
  8134                           ;Config register CONFIG2L @ 0x300002
  8135                           ;	unspecified, using default values
  8136                           ;	Power-up Timer Enable bit
  8137                           ;	PWRT = 0x1, unprogrammed default
  8138                           ;	Brown-out Reset Enable bits
  8139                           ;	BOR = 0x3, unprogrammed default
  8140                           ;	Brown-out Reset Voltage bits
  8141                           ;	BORV = 0x3, unprogrammed default
  8142  300002                     	org	3145730
  8143  300002  1F                 	db	31
  8144                           
  8145                           ;Config register CONFIG2H @ 0x300003
  8146                           ;	Watchdog Timer Enable bit
  8147                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8148                           ;	Watchdog Timer Postscale Select bits
  8149                           ;	WDTPS = 0xF, unprogrammed default
  8150  300003                     	org	3145731
  8151  300003  1E                 	db	30
  8152                           
  8153                           ; Padding undefined space
  8154  300004                     	org	3145732
  8155  300004  FF                 	db	255
  8156                           
  8157                           ;Config register CONFIG3H @ 0x300005
  8158                           ;	CCP2 MUX bit
  8159                           ;	CCP2MX = 0x1, unprogrammed default
  8160                           ;	PORTB A/D Enable bit
  8161                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  8162                           ;	Low-Power Timer1 Oscillator Enable bit
  8163                           ;	LPT1OSC = 0x0, unprogrammed default
  8164                           ;	MCLR Pin Enable bit
  8165                           ;	MCLRE = 0x1, unprogrammed default
  8166  300005                     	org	3145733
  8167  300005  81                 	db	129
  8168                           
  8169                           ;Config register CONFIG4L @ 0x300006
  8170                           ;	Stack Full/Underflow Reset Enable bit
  8171                           ;	STVREN = 0x1, unprogrammed default
  8172                           ;	Single-Supply ICSP Enable bit
  8173                           ;	LVP = OFF, Single-Supply ICSP disabled
  8174                           ;	Boot Block Size Select bits
  8175                           ;	BBSIZ = 0x0, unprogrammed default
  8176                           ;	Extended Instruction Set Enable bit
  8177                           ;	XINST = 0x0, unprogrammed default
  8178                           ;	Background Debugger Enable bit
  8179                           ;	DEBUG = 0x1, unprogrammed default
  8180  300006                     	org	3145734
  8181  300006  81                 	db	129
  8182                           
  8183                           ; Padding undefined space
  8184  300007                     	org	3145735
  8185  300007  FF                 	db	255
  8186                           
  8187                           ;Config register CONFIG5L @ 0x300008
  8188                           ;	unspecified, using default values
  8189                           ;	Code Protection bit
  8190                           ;	CP0 = 0x1, unprogrammed default
  8191                           ;	Code Protection bit
  8192                           ;	CP1 = 0x1, unprogrammed default
  8193  300008                     	org	3145736
  8194  300008  03                 	db	3
  8195                           
  8196                           ;Config register CONFIG5H @ 0x300009
  8197                           ;	unspecified, using default values
  8198                           ;	Boot Block Code Protection bitProtect Boot
  8199                           ;	CPB = 0x1, unprogrammed default
  8200                           ;	Data EEPROM Code Protection bit
  8201                           ;	CPD = 0x1, unprogrammed default
  8202  300009                     	org	3145737
  8203  300009  C0                 	db	192
  8204                           
  8205                           ;Config register CONFIG6L @ 0x30000A
  8206                           ;	unspecified, using default values
  8207                           ;	Write Protection bit
  8208                           ;	WRT0 = 0x1, unprogrammed default
  8209                           ;	Write Protection bit
  8210                           ;	WRT1 = 0x1, unprogrammed default
  8211  30000A                     	org	3145738
  8212  30000A  03                 	db	3
  8213                           
  8214                           ;Config register CONFIG6H @ 0x30000B
  8215                           ;	unspecified, using default values
  8216                           ;	Configuration Register Write Protection bit
  8217                           ;	WRTC = 0x1, unprogrammed default
  8218                           ;	Boot Block Write Protection bit
  8219                           ;	WRTB = 0x1, unprogrammed default
  8220                           ;	Data EEPROM Write Protection bit
  8221                           ;	WRTD = 0x1, unprogrammed default
  8222  30000B                     	org	3145739
  8223  30000B  E0                 	db	224
  8224                           
  8225                           ;Config register CONFIG7L @ 0x30000C
  8226                           ;	unspecified, using default values
  8227                           ;	Table Read Protection bit
  8228                           ;	EBTR0 = 0x1, unprogrammed default
  8229                           ;	Table Read Protection bit
  8230                           ;	EBTR1 = 0x1, unprogrammed default
  8231  30000C                     	org	3145740
  8232  30000C  03                 	db	3
  8233                           
  8234                           ;Config register CONFIG7H @ 0x30000D
  8235                           ;	unspecified, using default values
  8236                           ;	Boot Block Table Read Protection bit
  8237                           ;	EBTRB = 0x1, unprogrammed default
  8238  30000D                     	org	3145741
  8239  30000D  40                 	db	64
  8240                           tosu	equ	0xFFF
  8241                           tosh	equ	0xFFE
  8242                           tosl	equ	0xFFD
  8243                           stkptr	equ	0xFFC
  8244                           pclatu	equ	0xFFB
  8245                           pclath	equ	0xFFA
  8246                           pcl	equ	0xFF9
  8247                           tblptru	equ	0xFF8
  8248                           tblptrh	equ	0xFF7
  8249                           tblptrl	equ	0xFF6
  8250                           tablat	equ	0xFF5
  8251                           prodh	equ	0xFF4
  8252                           prodl	equ	0xFF3
  8253                           indf0	equ	0xFEF
  8254                           postinc0	equ	0xFEE
  8255                           postdec0	equ	0xFED
  8256                           preinc0	equ	0xFEC
  8257                           plusw0	equ	0xFEB
  8258                           fsr0h	equ	0xFEA
  8259                           fsr0l	equ	0xFE9
  8260                           wreg	equ	0xFE8
  8261                           indf1	equ	0xFE7
  8262                           postinc1	equ	0xFE6
  8263                           postdec1	equ	0xFE5
  8264                           preinc1	equ	0xFE4
  8265                           plusw1	equ	0xFE3
  8266                           fsr1h	equ	0xFE2
  8267                           fsr1l	equ	0xFE1
  8268                           bsr	equ	0xFE0
  8269                           indf2	equ	0xFDF
  8270                           postinc2	equ	0xFDE
  8271                           postdec2	equ	0xFDD
  8272                           preinc2	equ	0xFDC
  8273                           plusw2	equ	0xFDB
  8274                           fsr2h	equ	0xFDA
  8275                           fsr2l	equ	0xFD9
  8276                           status	equ	0xFD8

Data Sizes:
    Strings     55
    Constant    145
    Data        56
    BSS         277
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17     121
    BANK0           128      7      54
    BANK1           256      0     184

Pointer List with Targets:

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), STR_6(CODE[13]), 
		 -> STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), STR_6(CODE[13]), 
		 -> STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_LcInit
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _JoystickMotor->_MNouJoystick
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_Espera
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_GLCDMotor
    _main->_menu
    _menu->_LcGotoXY
    _GLCDMotor->_LcGotoXY
    _LcPutChar->_LcGotoXY
    _LcClear->_LcGotoXY

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21853
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      96
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      96
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    8540
                                              5 BANK0      2     2      0
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _NoFerMenu
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     140
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0     111
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2276
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    2007
                                             16 COMRAM     1     0      1
                                              0 BANK0      3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     440
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    7947
                                              5 BANK0      2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2276
                                             14 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2     706
                                              8 COMRAM     2     0      2
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3064
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1805
                                             13 COMRAM     1     0      1
                                              0 BANK0      5     5      0
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0     130
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     819
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      65
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _LcCursorOff
       _CantaIR
       _WaitForBusy
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _init_ports
   _menu
     _GLCDMostraMenu
     _HActualitzaHora
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _NoFerMenu
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      7      36       4       42.2%
BITCOMRAM           7E      0       2       0        1.6%
COMRAM              7E     11      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     167       7        0.0%
DATA                 0      0     167       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 02 12:59:41 2022

               TiResetTics@Handle 006C                  _loginNOTRegister 03C8  
                               _i 0023                                 _j 0022  
                UgetUserName@quin 006E         ??_UcheckExistsNotFinished 006C  
          __end_of_compareStrings 1648                               l611 1888  
                             l620 123C                               l630 128C  
                             l632 1292                               l472 0334  
                             l801 0804                               l625 1250  
                             l617 122E                               l650 0CDA  
                             l627 1256                               l652 0CE6  
                             l708 1170                               l821 09E0  
                             l649 0CCA                               l819 09B0  
                             l861 0FE2                               l677 1830  
                             l870 103C                               l866 1074  
                             l858 0FA4                               l867 0FFE  
                             l859 0FBE                               l868 1018  
                             l789 076C                               _tmp 002C  
                ??_CantaPartBaixa 006C                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 0063  
              __size_of_GLCDMotor 03D8                              l2213 12CE  
                            l2333 1030                              l2325 1014  
                            l2309 0FFA                              l2183 124C  
                            l4105 0CE0                              l2347 1054  
                            l4123 0D26                              l2357 1058  
                            l4141 0D8A                              l4125 0D2C  
                            l4109 0CF0                              l5101 0448  
                            l5013 0322                              l2295 0FD6  
                            l2287 0FBA                              l4119 0D1C  
                            l5015 0328                              l5007 0310  
                            l4153 0DE2                              l4137 0D78  
                            l5113 0460                              l1755 19C8  
                            l4163 0DFA                              l5211 0552  
                            l5131 0490                              l5043 0394  
                            l5035 037A                              l5027 0352  
                            l3373 1604                              l5053 03BC  
                            l5045 039A                              l5223 0590  
                            l5071 03E4                              l5055 03C2  
                            l3481 1764                              l4169 0E08  
                            l4177 0E14                              l1785 1998  
                            l5137 04AE                              l5411 07D2  
                            l3379 1620                              l1955 1816  
                            l5243 05C2                              l5219 0578  
                            l5155 04B4                              l5059 03CC  
                            l5307 0646                              l5331 1196  
                            l5323 1182                              l5501 095A  
                            l3477 175C                              l5261 05E8  
                            l5157 04BA                              l5085 0410  
                            l5325 1188                              l5095 0438  
                            l5087 0416                              l5425 07F4  
                            l4705 10B8                              l5185 04F6  
                            l5177 04E4                              l5169 04D2  
                            l5097 043E                              l5419 07E0  
                            l4811 0B5C                              l5611 0F02  
                            l5603 0EEA                              l5347 11D4  
                            l5339 11A6                              l4629 170C  
                            l4637 171A                              l4565 169C  
                            l5533 09EE                              l5525 09DA  
                            l5517 09BA                              l5509 098A  
                            l5461 0864                              l4821 0B74  
                            l5293 0632                              l5277 0608  
                            l5197 0524                              l4591 18BC  
                            l5543 0A0A                              l5471 08B0  
                            l5455 083E                              l5391 074A  
                            l5383 071E                              l5367 06DA  
                            l5631 0F54                              l5623 0F40  
                            l5607 0EF6                              l5359 1200  
                            l4681 15E6                              l5537 09F6  
                            l5481 08EA                              l5465 0886  
                            l5377 0710                              l5553 0A54  
                            l4913 0C6C                              l4817 0B70  
                            l4809 0B58                              l5617 0F32  
                            l5289 0628                              l5547 0A30  
                            l4835 0BA6                              l4923 0C86  
                            l5627 0F48                              l5571 0E96  
                            l5563 0E82                              l4597 165C  
                            l5397 077A                              l4917 0C82  
                            l4909 0C5A                              l4829 0B90  
                            l4781 0AFC                              l4765 0AC6  
                            l4757 0AB2                              l5637 0F60  
                            l4687 15F6                              l4679 15DC  
                            l5487 08FA                              l4847 0BD2  
                            l4839 0BB2                              l5591 0EC6  
                            l5575 0EA2                              l4881 0C2E  
                            l4873 0C14                              l4857 0BEC  
                            l5585 0EB8                              l5577 0EA8  
                            l5569 0E92                              l4891 0C46  
                            l4867 0C0A                              l4795 0B2E  
                            l4779 0AF6                              l4939 16CC  
                            l4797 0B34                              l5597 0EDC  
                            l5669 14D2                              l4887 0C3E  
                            l4991 02CC                              l4983 16EE  
                            l4997 02E6                              STR_1 02B3  
                            STR_2 029F                              STR_3 02C2  
                            STR_4 02BB                              STR_5 02AA  
                            STR_6 0292                              _LATD 000F8C  
                            u5000 0BC2                              u4410 1458  
                            u5060 0C1C                              u6100 0E62  
                            u4430 1472                              u4510 140A  
                            u5070 0C36                              u6110 0E72  
                            u4408 143E                              u3720 0CEA  
                            u4450 148A                              u4530 1422  
                            u4610 12F4                              u6106 0E64  
                            u2690 162C                              u4428 145A  
                            u4508 13F2                              u6116 0E74  
                            u4390 143C                              u4470 13D4  
                            u4630 1310                              u5350 0470  
                            u4448 1474                              u4528 140C  
                            u6080 0E48                              u5280 03F4  
                            u4490 13F0                              u4650 132A  
                            u6090 0E52                              u5370 04A4  
                            u4468 148C                              u4548 1424  
                            u4628 12F6                              u4740 1168  
                            u5380 04A6                              u4670 1342  
                            u4488 13D6                              u5720 071A  
                            u4648 1312                              u4760 151C  
                            u6096 0E54                              u6088 0E4A  
                            u4770 1544                              u5820 07FC  
                            u4668 132C                              u4860 0B1A  
                            u4767 1512                              u4688 1344  
                            u4777 153A                              u4970 0BA0  
                            u5790 07DA                   ??_SsetNovaTecla 006C  
                            _cap1 03C2                              _Rows 0038  
                            _cap2 03C1                              _main 1498  
                            _hora 0057                              _menu 02CA  
                            _nota 0020                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 007A  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 18B4                              start 0032  
                 __end_of_CantaIR 1812                      ?_initAltaveu 0067  
                   LcInit@columns 0077                      ___param_bank 000000  
                __end_of_GLCDInit 1A24                       Espera@Timer 0076  
                           ?_main 0067           __size_of_escriureEEPROM 002E  
                           ?_menu 0067                             _EEADR 000FA9  
                   ??_TiInitTimer 006C                             _T0CON 000FD5  
                 ?_compareStrings 006C                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _LcLCD 14F8  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _SMSon 1A24                       _MNovaLletra 1A04  
                           _Minit 1A0C                             _Sinit 19FC  
                           _Timer 0034                             _Uinit 1224  
                           _s_ptr 000C                             _nou_s 03CA  
           __end_of_JoystickMotor 108E                       _LcCursorOff 19A8  
                 _HActualitzaHora 1778       __size_of_escriureCharEEPROM 0024  
                  __pbitbssCOMRAM 03C0                             tablat 000FF5  
                     _LcNewString 19B4                     ??_TiResetTics 006C  
                           ttemp5 007B                             ttemp6 007E  
                           ttemp7 0082                             status 000FD8  
                           wtemp8 007B     __size_of_UcheckExistsGetError 0008  
                __end_of_LcGotoXY 168A                  __end_of_LcLliure 19CC  
                   ??__TiRSITimer 0067                        _TiGetTimer 1706  
         EscriuPrimeraOrdre@ordre 006D                   __initialization 1352  
              __size_of_CantaData 0032                      __end_of_main 14F8  
                    __end_of_menu 06D8             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 0067                 __end_of_GLCDMotor 0AB0  
                __end_of_TeTeclat 0FA2                     _indexNextUser 0025  
                          ??_main 0078                            ??_menu 00B4  
              __size_of_LcPutChar 0052                     __activetblptr 000002  
                   _ultimaTeclaAD 0012                  GLCDMotor@length1 0014  
                GLCDMotor@length2 0013                            ?_LcLCD 0067  
                          ?_SMSon 0067                            ?_Minit 0067  
                          ?_Sinit 0067                            ?_Uinit 0067  
              __size_of_NoFerMenu 0004                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
             __end_of_TiInitTimer 1778                            _ADRESH 000FC4  
                          _EEDATA 000FA8                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_SiFerMenu 0004  
                       ??_LcClear 0077                         ??_CantaIR 006E  
                          i2l3461 157C                            i2l3465 15A2  
                          i2l3457 1574                            i2l3469 15A6  
                  LcGotoXY@Fisics 00AF                    LcGotoXY@Column 00B3  
                   ??_WaitForBusy 0073                __size_of_TiGetTics 002C  
                  _sumaPulsacions 0033                            _SMSoff 1A2A  
                          _LcInit 108E                      _MNouJoystick 1A14  
                  _UgetNumUsuaris 1A34                            _SMotor 0AB0  
             escriureCharEEPROM@c 006D                            _TeInit 19F4  
                          _Espera 18B4                      _LcGotoXY$342 00B1  
                          _RowAct 0036               __end_of_TiResetTics 1932  
                          Uinit@i 006E                            Uinit@j 006F  
                __end_of_high_rsi 0032                            _h_Tics 000A  
                __end_of_initHora 19DC               __end_of__TiRSITimer 15B0  
                __end_of_menuList 0292                            clear_0 1398  
                          clear_1 13A4                            clear_2 13B4  
                          _jugant 03C0                            _segons 000F  
                      _UenviaChar 1980                            isa$std 000001  
                      UenviaPas@c 006D       __size_of_EscriuPrimeraOrdre 007A  
                    __pdataCOMRAM 0046            __size_of_CantaPartAlta 0068  
              __size_of_UenviaPas 0010           __end_of_HActualitzaHora 17AE  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentUsrIndex 0027                 __end_of_CantaData 17E0  
                    TeTeclat@cols 002F                         ?_GLCDInit 0067  
                   ?_UcheckExists 0067                        __accesstop 0080  
         __end_of__initialization 13BA            __end_of_UgetNumUsuaris 1A38  
               __end_of_LcPutChar 1602                     ___rparam_used 000001  
                   __end_of_LcLCD 1556                       ?_TiGetTimer 0067  
                   __end_of_SMSon 1A2A                    __pcstackCOMRAM 0067  
                   __end_of_Minit 1A14               __end_of_WaitForBusy 16CA  
                   __end_of_Sinit 1A04                     __end_of_Uinit 12D8  
               __end_of_NoFerMenu 1A48                      __pidataBANK0 1932  
            __size_of_initAltaveu 0008                 __end_of_URegister 1A40  
               __end_of_SiFerMenu 1A44                    _escriureEEPROM 1812  
               __end_of_TiGetTics 186C                       _TiInitTimer 1740  
                         ??_LcLCD 0076                           ??_SMSon 006C  
                       ?_LcGotoXY 0074                         ?_LcLliure 0067  
                         ??_Minit 006D                           ??_Sinit 006D  
                         ??_Uinit 006C                    ??_UcheckExists 006C  
             MNouJoystick@posicio 006C                        ??_GLCDInit 006D  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100                         ?_TeTeclat 0067  
                     _TiResetTics 191A                   ?_UgetNumUsuaris 0067  
                   ??_UmotorUsers 0071                     ?_JoystickInit 0067  
                         ?_SMSoff 0067                           ?_LcInit 0077  
                   _CantaPartAlta 1430                           ?_SMotor 0067  
                         ?_TeInit 0067                           ?_Espera 0073  
               __end_of_UenviaPas 1980                       __TiRSITimer 1556  
             _indexNextUserStruct 0024                     ?_UgetUserName 006C  
                ??_compareStrings 006F            __end_of_escriureEEPROM 1840  
                     ?_UenviaChar 006C              __size_of_playAltaveu 0004  
              __size_of_motorHora 003C            __size_of_MsetNovaTecla 0008  
                         LcInit@i 00B0                  ?_HActualitzaHora 006C  
                      ??_LcGotoXY 0075                      ?_MNovaLletra 0067  
                      ??_LcLliure 006C               __size_of_TiGetTimer 003A  
                    ?_LcCursorOff 0067                         ?_high_rsi 0067  
                         _LcClear 1890                           _CantaIR 17E0  
                    ?_LcNewString 006F                    ??_JoystickInit 006C  
                       ?_initHora 0067                        ??_TeTeclat 0073  
                     _WaitForBusy 168A                    ?_CantaPartAlta 0067  
                         _Columns 0037             __end_of_SsetNovaTecla 19EC  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00E0  
                         __Hparam 0000                   __size_of_SMotor 0218  
                 __size_of_TeInit 0008                   __size_of_Espera 0024  
                         __Lparam 0000                    ??_UgetUserName 006E  
             __end_of_UmotorUsers 0E3E          ?_UcheckExistsNotFinished 0067  
                 ?_escriureEEPROM 0067                     ?_motorAltaveu 0067  
                    __psmallconst 0200                           __pcinit 1352  
    __end_of_UcheckExistsGetError 19D4                           _ferMenu 03C4  
                      _init_ports 18FA                           __ramtop 0200  
                         __ptext0 1498                           __ptext1 16CA  
                         __ptext2 1A30                           __ptext3 116E  
                         __ptext4 02CA                           __ptext5 194A  
                         __ptext6 1A34                           __ptext7 1970  
                         __ptext8 1980                           __ptext9 1990  
                       _T0CONbits 000FD5                         _GLCDMotor 06D8  
                       CantaIR@IR 006E                           _counter 002D  
                         _horaTmp 0042                       UenviaChar@c 006D  
      __end_of_escriureCharEEPROM 1890                  LcNewString@new_s 006F  
                 WaitForBusy@Busy 0073                       Uinit@j_1084 0070  
               GLCDMostraMenu@num 006C                        ??_high_rsi 0068  
            end_of_initialization 13BA                           _usuaris 0100  
                      ??_initHora 006D           __size_of_CantaPartBaixa 0068  
                   __Lmediumconst 0000                   TiGetTics@Handle 0070  
                   _MsetNovaTecla 19EC               __size_of_UenviaChar 0010  
               __end_of_motorHora 1706                        _novaLletra 0061  
                 TiGetTics@actual 0071                        GLCDMotor@j 0019  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 0073  
                      _numUsuaris 0026              __end_of_UcheckExists 1A3C  
                   TeTeclat@files 002E            __size_of_JoystickMotor 00EC  
                   TeTeclat@state 0030                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 0067  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                  _GLCDMostraMenu 199C                   ??_CantaPartAlta 006C  
                  ?_MsetNovaTecla 0067                         _CantaData 17AE  
               __size_of_GLCDInit 0008                       _UmotorUsers 0CC8  
 __end_of_UcheckExistsNotFinished 199C                    __end_of_SMSoff 1A30  
                    ??_TiGetTimer 006C                    __end_of_LcInit 116E  
                  __end_of_SMotor 0CC8                         _LcPutChar 15B0  
                  __end_of_TeInit 19FC                 motorAltaveu@state 001D  
                  __end_of_Espera 18D8                    GLCDMotor@state 001A  
      __end_of_EscriuPrimeraOrdre 1352                     __pidataCOMRAM 18D8  
                     ?_init_ports 0067                         _NoFerMenu 1A44  
                       _ColumnAct 0035              __end_of_JoystickInit 1970  
                       _URegister 1A3C                      ?_TiInitTimer 0067  
                       _SiFerMenu 1A40               start_initialization 1352  
                       _TiGetTics 1840            __end_of_GLCDMostraMenu 19A8  
                ??_UgetNumUsuaris 006C                  UmotorUsers@state 0021  
               __size_of_LcGotoXY 0042              __end_of_UgetUserName 195E  
              __end_of_TiGetTimer 1740              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                     _JoystickMotor 0FA2  
                    ?_TiResetTics 0067              __size_of_LcCursorOff 000C  
                      ?_CantaData 0067              _UcheckExistsGetError 19CC  
            __size_of_LcNewString 000C                          ??_SMSoff 006C  
                        ??_LcInit 0078                         _NovaTecla 0062  
               __size_of_TeTeclat 0164                          ??_SMotor 0073  
                        ??_TeInit 006D                      ?__TiRSITimer 0067  
                   ??_initAltaveu 006D                          ??_Espera 0075  
                      ?_LcPutChar 0067                         _UenviaPas 1970  
                     __pdataBANK0 0098                    motorHora@state 000E  
                    _menuDaltGLCD 001B                      ??_UenviaChar 006D  
                      ?_NoFerMenu 0067                       ??_GLCDMotor 00B4  
                      ?_URegister 0067                        ?_SiFerMenu 0067  
                     __pbssCOMRAM 0001                     __pcstackBANK0 00AF  
                      ?_TiGetTics 006C                   ?_GLCDMostraMenu 0067  
                  ?_JoystickMotor 0067                   ??_MsetNovaTecla 006C  
            __end_of_motorAltaveu 1224                          ?_LcClear 0067  
                        ?_CantaIR 0067                    _CantaPartBaixa 13C8  
           ?_UcheckExistsGetError 0067                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 0067               __size_of_init_ports 0020  
              MsetNovaTecla@tecla 006C                SsetNovaTecla@tecla 006C  
              __end_of_UenviaChar 1990                 __size_of_initHora 0008  
                ??_escriureEEPROM 006C             __size_of_UcheckExists 0004  
                       __pintcode 0008                     ??_playAltaveu 006C  
                      ?_UenviaPas 006C                   CantaPartBaixa@c 006D  
             __end_of_initAltaveu 19E4                       __smallconst 0200  
                  __size_of_LcLCD 005E                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
                  __size_of_Sinit 0008                    __size_of_Uinit 00B4  
          __end_of_CantaPartBaixa 1430                JoystickMotor@state 0011  
                        _GLCDInit 1A1C                escriureEEPROM@caca 006C  
                     _do_register 03C6                         _newString 03C3  
                    _UcheckExists 1A38                         _loginText 004F  
        __size_of_HActualitzaHora 0036                       ??_CantaData 006E  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                     ?_MNouJoystick 0067  
                   UenviaChar@pos 006C                _escriureCharEEPROM 186C  
                       _novaTecla 0065                       ??_LcPutChar 0075  
                       _timerGLCD 001C                         _motorHora 16CA  
                        _RCONbits 000FD0                         _reproduir 03C5  
           __size_of_JoystickInit 0012                         _timerHora 0010  
                       _timerMenu 002B               ?_escriureCharEEPROM 006C  
                     ??_NoFerMenu 006C                        _ADCON0bits 000FC2  
                     ??_URegister 006C                       ??_SiFerMenu 006C  
           __size_of_UgetUserName 0014               __end_of_playAltaveu 1A34  
          __size_of_SsetNovaTecla 0008                          Espera@ms 0073  
                        _LcGotoXY 1648                    _usuariLoguejat 005F  
                        _LcLliure 19C0                       ??_TiGetTics 006E  
         __size_of_compareStrings 0046              __size_of_TiInitTimer 0038  
                 ??_JoystickMotor 006D                     GLCDMotor@max1 005E  
                   GLCDMotor@max2 005D                     GLCDMotor@min1 0018  
                   GLCDMotor@min2 0017                      _teclaPremuda 00A3  
                     LcGotoXY@Row 0074                         copy_data0 1366  
                       copy_data1 1386              ??_escriureCharEEPROM 006D  
                 ?_CantaPartBaixa 0067            ??_UcheckExistsGetError 006C  
           escriureCharEEPROM@pos 006C                  __size_of_LcClear 0024  
                __size_of_CantaIR 0032                          _TeTeclat 0E3E  
                  ??_MNouJoystick 006C                      ?_UmotorUsers 0067  
                    _JoystickInit 195E                        _EECON1bits 000FA6  
                    _registerText 0098                       _indexUsuari 0029  
            __size_of_TiResetTics 0018                          __Hrparam 0000  
                     _initAltaveu 19DC                         menu@state 0028  
                        __Lrparam 0000                        ?_motorHora 0067  
            __size_of__TiRSITimer 005A                      _UgetUserName 194A  
                     ??_UenviaPas 006D                      _novaDireccio 0060  
                    ??_init_ports 006C               HActualitzaHora@nova 006C  
           __size_of_motorAltaveu 00B6                   _do_check_exists 03C7  
                        __ptext10 19CC                          __ptext11 1A38  
              _EscriuPrimeraOrdre 12D8                          __ptext20 19D4  
                        __ptext12 1A3C                          __ptext21 19DC  
                        __ptext13 1A40                          __ptext30 19EC  
                        __ptext22 1812                          __ptext14 1A24  
                        __ptext31 19F4                          __ptext23 0CC8  
                        __ptext15 1A2A                          __ptext40 0FA2  
                        __ptext32 19FC                          __ptext24 186C  
                        __ptext16 1A44                          __ptext41 1A14  
                        __ptext33 0AB0                          __ptext25 1602  
                        __ptext17 1778                          __ptext50 168A  
                        __ptext42 195E                          __ptext34 1A04  
                        __ptext26 1224                          __ptext18 199C  
                        __ptext51 17E0                          __ptext43 06D8  
                        __ptext35 1A0C                          __ptext27 1740  
                        __ptext19 18FA                          __ptext60 1556  
                        __ptext52 13C8                          __ptext44 15B0  
                        __ptext36 14F8                          __ptext28 0E3E  
                        __ptext53 1430                          __ptext45 17AE  
                        __ptext37 108E                          __ptext29 19E4  
                        __ptext54 18B4                          __ptext46 19B4  
                        __ptext38 19A8                          __ptext55 191A  
                        __ptext47 19C0                          __ptext39 12D8  
                        __ptext56 1840                          __ptext48 1890  
                        __ptext57 1A1C                          __ptext49 1648  
                        __ptext58 1706                    CantaPartAlta@c 006D  
                     _lletraASCII 0066                          _high_rsi 0008  
                        _copsNota 001E                          _s_Timers 0080  
                        _initHora 19D4                       _lletraInici 0046  
                        _menuDalt 002A                          _menuList 0201  
             ?_EscriuPrimeraOrdre 0067                     __size_of_main 0060  
                   __size_of_menu 040E             __end_of_CantaPartAlta 1498  
                   CantaData@Data 006E                          _tiTeclat 0031  
              __end_of_init_ports 191A                          _setSMSon 03C9  
                   _SsetNovaTecla 19E4              __size_of_WaitForBusy 0040  
               ??_HActualitzaHora 006D                          _timerSMS 0064  
                        isa$xinst 000000                          int$flags 007A  
                    UenviaPas@pos 006C                       _playAltaveu 1A30  
                    _motorAltaveu 116E              ??_EscriuPrimeraOrdre 006C  
                      LcInit@rows 00AF                  ??_GLCDMostraMenu 006C  
         _UcheckExistsNotFinished 1990                        _INTCONbits 000FF2  
                   ??_MNovaLletra 006C                     ??_LcCursorOff 0074  
                   ??_LcNewString 0071                          intlevel2 0000  
                    _timerAltaveu 001F                        LcPutChar@c 0075  
                  ?_SsetNovaTecla 0067                 MNovaLletra@lletra 006C  
                 compareStrings@a 006C                   compareStrings@b 006D  
                     ??_motorHora 0073                       GLCDMotor@k1 0016  
                     GLCDMotor@k2 0015              __end_of_MNouJoystick 1A1C  
                  _compareStrings 1602                       _tmpPassword 0001  
             __end_of_MNovaLletra 1A0C             __end_of_MsetNovaTecla 19F4  
                     _tmpUsername 0039               __end_of_LcCursorOff 19B4  
                     SMotor@state 0032           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 19C0              __size_of_UmotorUsers 0176  
