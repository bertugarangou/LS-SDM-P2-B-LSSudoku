

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu May 05 09:45:33 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    99                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   100                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   101                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   102  0000                     
   103                           ; Version 2.32
   104                           ; Generated 02/02/2021 GMT
   105                           ; 
   106                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution. Publication is not required when
   120                           ;        this file is used in an embedded application.
   121                           ; 
   122                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   123                           ;        software without specific prior written permission.
   124                           ; 
   125                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   126                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   127                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   128                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   129                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   130                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   131                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   132                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   133                           ; 
   134                           ; 
   135                           ; Code-generator required, PIC18F4321 Definitions
   136                           ; 
   137                           ; SFR Addresses
   138  0000                     
   139                           	psect	idataCOMRAM
   140  001BA6                     __pidataCOMRAM:
   141                           	callstack 0
   142                           
   143                           ;initializer for _lletraInici
   144  001BA6  41                 	db	65
   145  001BA7  44                 	db	68
   146  001BA8  47                 	db	71
   147  001BA9  4A                 	db	74
   148  001BAA  4D                 	db	77
   149  001BAB  50                 	db	80
   150  001BAC  54                 	db	84
   151  001BAD  57                 	db	87
   152  001BAE  00                 	db	0
   153                           
   154                           ;initializer for _arrayZero
   155  001BAF  30                 	db	48
   156  001BB0  20                 	db	32
   157  001BB1  00                 	db	0
   158                           
   159                           ;initializer for _novaTeclaSIO
   160  001BB2  FF                 	db	255
   161                           
   162                           ;initializer for _direccioSIO
   163  001BB3  FF                 	db	255
   164                           
   165                           ;initializer for _usuariActualSIO
   166  001BB4  FF                 	db	255
   167                           
   168                           ;initializer for _novaTeclaJOC
   169  001BB5  FF                 	db	255
   170                           
   171                           ;initializer for _usuariJoc
   172  001BB6  FF                 	db	255
   173                           
   174                           ;initializer for GLCDMotor@max2
   175  001BB7  0F                 	db	15
   176                           
   177                           ;initializer for GLCDMotor@max1
   178  001BB8  0F                 	db	15
   179                           
   180                           ;initializer for _usuariLoguejat
   181  001BB9  FF                 	db	255
   182                           
   183                           ;initializer for _novaDireccio
   184  001BBA  FF                 	db	255
   185                           
   186                           ;initializer for _novaLletra
   187  001BBB  FF                 	db	255
   188                           
   189                           ;initializer for _NovaTecla
   190  001BBC  FF                 	db	255
   191                           
   192                           ;initializer for _ultimaTecla
   193  001BBD  FF                 	db	255
   194                           
   195                           ;initializer for _timerSMS
   196  001BBE  FF                 	db	255
   197                           
   198                           ;initializer for _novaTecla
   199  001BBF  FF                 	db	255
   200                           
   201                           ;initializer for _lletraASCII
   202  001BC0  FF                 	db	255
   203                           
   204                           ;initializer for _hora
   205  001BC1  33                 	db	51
   206  001BC2  30                 	db	48
   207  001BC3  3A                 	db	58
   208  001BC4  30                 	db	48
   209  001BC5  30                 	db	48
   210  001BC6  00                 	db	0
   211                           
   212                           	psect	idataBANK0
   213  001BE8                     __pidataBANK0:
   214                           	callstack 0
   215                           
   216                           ;initializer for _teclaPremuda
   217  001BE8  01                 	db	1
   218  001BE9  02                 	db	2
   219  001BEA  03                 	db	3
   220  001BEB  04                 	db	4
   221  001BEC  05                 	db	5
   222  001BED  06                 	db	6
   223  001BEE  07                 	db	7
   224  001BEF  08                 	db	8
   225  001BF0  09                 	db	9
   226  001BF1  0A                 	db	10
   227  001BF2  00                 	db	0
   228  001BF3  0B                 	db	11
   229                           
   230                           ;initializer for _registerText
   231  001BF4  32                 	db	50
   232  001BF5  2E                 	db	46
   233  001BF6  52                 	db	82
   234  001BF7  45                 	db	69
   235  001BF8  47                 	db	71
   236  001BF9  49                 	db	73
   237  001BFA  53                 	db	83
   238  001BFB  54                 	db	84
   239  001BFC  45                 	db	69
   240  001BFD  52                 	db	82
   241  001BFE  00                 	db	0
   242                           
   243                           ;initializer for _loginText
   244  001BFF  31                 	db	49
   245  001C00  2E                 	db	46
   246  001C01  4C                 	db	76
   247  001C02  4F                 	db	79
   248  001C03  47                 	db	71
   249  001C04  49                 	db	73
   250  001C05  4E                 	db	78
   251  001C06  00                 	db	0
   252                           
   253                           	psect	smallconst
   254  000200                     __psmallconst:
   255                           	callstack 0
   256  000200  00                 	db	0
   257  000201                     _menuList:
   258                           	callstack 0
   259  000201  31                 	db	49
   260  000202  2E                 	db	46
   261  000203  50                 	db	80
   262  000204  6C                 	db	108
   263  000205  61                 	db	97
   264  000206  79                 	db	121
   265  000207  20                 	db	32
   266  000208  61                 	db	97
   267  000209  20                 	db	32
   268  00020A  47                 	db	71
   269  00020B  61                 	db	97
   270  00020C  6D                 	db	109
   271  00020D  65                 	db	101
   272  00020E  00                 	db	0
   273  00020F  00                 	db	0
   274  000210  00                 	db	0
   275  000211  00                 	db	0
   276  000212  00                 	db	0
   277  000213  00                 	db	0
   278  000214  00                 	db	0
   279  000215  00                 	db	0
   280  000216  00                 	db	0
   281  000217  00                 	db	0
   282  000218  00                 	db	0
   283  000219  00                 	db	0
   284  00021A  00                 	db	0
   285  00021B  00                 	db	0
   286  00021C  00                 	db	0
   287  00021D  00                 	db	0
   288  00021E  32                 	db	50
   289  00021F  2E                 	db	46
   290  000220  4D                 	db	77
   291  000221  6F                 	db	111
   292  000222  64                 	db	100
   293  000223  69                 	db	105
   294  000224  66                 	db	102
   295  000225  79                 	db	121
   296  000226  20                 	db	32
   297  000227  54                 	db	84
   298  000228  69                 	db	105
   299  000229  6D                 	db	109
   300  00022A  65                 	db	101
   301  00022B  00                 	db	0
   302  00022C  00                 	db	0
   303  00022D  00                 	db	0
   304  00022E  00                 	db	0
   305  00022F  00                 	db	0
   306  000230  00                 	db	0
   307  000231  00                 	db	0
   308  000232  00                 	db	0
   309  000233  00                 	db	0
   310  000234  00                 	db	0
   311  000235  00                 	db	0
   312  000236  00                 	db	0
   313  000237  00                 	db	0
   314  000238  00                 	db	0
   315  000239  00                 	db	0
   316  00023A  00                 	db	0
   317  00023B  33                 	db	51
   318  00023C  2E                 	db	46
   319  00023D  53                 	db	83
   320  00023E  68                 	db	104
   321  00023F  6F                 	db	111
   322  000240  77                 	db	119
   323  000241  20                 	db	32
   324  000242  47                 	db	71
   325  000243  65                 	db	101
   326  000244  6E                 	db	110
   327  000245  65                 	db	101
   328  000246  72                 	db	114
   329  000247  61                 	db	97
   330  000248  6C                 	db	108
   331  000249  20                 	db	32
   332  00024A  54                 	db	84
   333  00024B  6F                 	db	111
   334  00024C  70                 	db	112
   335  00024D  20                 	db	32
   336  00024E  35                 	db	53
   337  00024F  20                 	db	32
   338  000250  53                 	db	83
   339  000251  63                 	db	99
   340  000252  6F                 	db	111
   341  000253  72                 	db	114
   342  000254  65                 	db	101
   343  000255  73                 	db	115
   344  000256  20                 	db	32
   345  000257  00                 	db	0
   346  000258  34                 	db	52
   347  000259  2E                 	db	46
   348  00025A  4C                 	db	76
   349  00025B  6F                 	db	111
   350  00025C  67                 	db	103
   351  00025D  6F                 	db	111
   352  00025E  75                 	db	117
   353  00025F  74                 	db	116
   354  000260  00                 	db	0
   355  000261  00                 	db	0
   356  000262  00                 	db	0
   357  000263  00                 	db	0
   358  000264  00                 	db	0
   359  000265  00                 	db	0
   360  000266  00                 	db	0
   361  000267  00                 	db	0
   362  000268  00                 	db	0
   363  000269  00                 	db	0
   364  00026A  00                 	db	0
   365  00026B  00                 	db	0
   366  00026C  00                 	db	0
   367  00026D  00                 	db	0
   368  00026E  00                 	db	0
   369  00026F  00                 	db	0
   370  000270  00                 	db	0
   371  000271  00                 	db	0
   372  000272  00                 	db	0
   373  000273  00                 	db	0
   374  000274  00                 	db	0
   375  000275  35                 	db	53
   376  000276  2E                 	db	46
   377  000277  53                 	db	83
   378  000278  68                 	db	104
   379  000279  6F                 	db	111
   380  00027A  77                 	db	119
   381  00027B  20                 	db	32
   382  00027C  41                 	db	65
   383  00027D  6C                 	db	108
   384  00027E  6C                 	db	108
   385  00027F  20                 	db	32
   386  000280  55                 	db	85
   387  000281  73                 	db	115
   388  000282  65                 	db	101
   389  000283  72                 	db	114
   390  000284  73                 	db	115
   391  000285  00                 	db	0
   392  000286  00                 	db	0
   393  000287  00                 	db	0
   394  000288  00                 	db	0
   395  000289  00                 	db	0
   396  00028A  00                 	db	0
   397  00028B  00                 	db	0
   398  00028C  00                 	db	0
   399  00028D  00                 	db	0
   400  00028E  00                 	db	0
   401  00028F  00                 	db	0
   402  000290  00                 	db	0
   403  000291  00                 	db	0
   404  000292                     __end_of_menuList:
   405                           	callstack 0
   406  0000                     _RCREG	set	4014
   407  0000                     _TXREG	set	4013
   408  0000                     _TXSTAbits	set	4012
   409  0000                     _ADCON0bits	set	4034
   410  0000                     _ADRESH	set	4036
   411  0000                     _ADCON2	set	4032
   412  0000                     _ADCON1	set	4033
   413  0000                     _ADCON0	set	4034
   414  0000                     _EECON2	set	4007
   415  0000                     _EEDATA	set	4008
   416  0000                     _EEADR	set	4009
   417  0000                     _T0CONbits	set	4053
   418  0000                     _TMR0L	set	4054
   419  0000                     _TMR0H	set	4055
   420  0000                     _T0CON	set	4053
   421  0000                     _INTCONbits	set	4082
   422  0000                     _RCONbits	set	4048
   423  0000                     _PORTDbits	set	3971
   424  0000                     _SPBRG	set	4015
   425  0000                     _SPBRGH	set	4016
   426  0000                     _BAUDCON	set	4024
   427  0000                     _RCSTA	set	4011
   428  0000                     _TXSTA	set	4012
   429  0000                     _EECON1bits	set	4006
   430  0000                     _LATD	set	3980
   431  0000                     _TRISD	set	3989
   432  0000                     _TRISC	set	3988
   433  0000                     _LATBbits	set	3978
   434  0000                     _TRISB	set	3987
   435  0000                     _TRISA	set	3986
   436  0000                     _PORTCbits	set	3970
   437  0000                     _LATDbits	set	3980
   438  0000                     _LATCbits	set	3979
   439  0000                     _TRISDbits	set	3989
   440  0000                     _TRISCbits	set	3988
   441  000292                     STR_5:
   442  000292  54                 	db	84	;'T'
   443  000293  49                 	db	73	;'I'
   444  000294  4D                 	db	77	;'M'
   445  000295  45                 	db	69	;'E'
   446  000296  20                 	db	32
   447  000297  52                 	db	82	;'R'
   448  000298  45                 	db	69	;'E'
   449  000299  4D                 	db	77	;'M'
   450  00029A  41                 	db	65	;'A'
   451  00029B  49                 	db	73	;'I'
   452  00029C  4E                 	db	78	;'N'
   453  00029D  49                 	db	73	;'I'
   454  00029E  4E                 	db	78	;'N'
   455  00029F  47                 	db	71	;'G'
   456  0002A0  3A                 	db	58	;':'
   457  0002A1  00                 	db	0
   458  0002A2                     STR_4:
   459  0002A2  4D                 	db	77	;'M'
   460  0002A3  6F                 	db	111	;'o'
   461  0002A4  64                 	db	100	;'d'
   462  0002A5  69                 	db	105	;'i'
   463  0002A6  66                 	db	102	;'f'
   464  0002A7  79                 	db	121	;'y'
   465  0002A8  20                 	db	32
   466  0002A9  54                 	db	84	;'T'
   467  0002AA  69                 	db	105	;'i'
   468  0002AB  6D                 	db	109	;'m'
   469  0002AC  65                 	db	101	;'e'
   470  0002AD  3A                 	db	58	;':'
   471  0002AE  00                 	db	0
   472  0002AF                     STR_3:
   473  0002AF  42                 	db	66	;'B'
   474  0002B0  59                 	db	89	;'Y'
   475  0002B1  45                 	db	69	;'E'
   476  0002B2  20                 	db	32
   477  0002B3  42                 	db	66	;'B'
   478  0002B4  59                 	db	89	;'Y'
   479  0002B5  45                 	db	69	;'E'
   480  0002B6  20                 	db	32
   481  0002B7  00                 	db	0
   482  0002B8                     STR_2:
   483  0002B8  50                 	db	80	;'P'
   484  0002B9  53                 	db	83	;'S'
   485  0002BA  57                 	db	87	;'W'
   486  0002BB  44                 	db	68	;'D'
   487  0002BC  3A                 	db	58	;':'
   488  0002BD  20                 	db	32
   489  0002BE  00                 	db	0
   490  0002BF                     STR_1:
   491  0002BF  55                 	db	85	;'U'
   492  0002C0  53                 	db	83	;'S'
   493  0002C1  45                 	db	69	;'E'
   494  0002C2  52                 	db	82	;'R'
   495  0002C3  3A                 	db	58	;':'
   496  0002C4  20                 	db	32
   497  0002C5  00                 	db	0
   498  0002C6  00                 	db	0	; dummy byte at the end
   499  0000                     
   500                           ; #config settings
   501                           
   502                           	psect	cinit
   503  0015E8                     __pcinit:
   504                           	callstack 0
   505  0015E8                     start_initialization:
   506                           	callstack 0
   507  0015E8                     __initialization:
   508                           	callstack 0
   509                           
   510                           ; Initialize objects allocated to BANK0 (31 bytes)
   511                           ; load TBLPTR registers with __pidataBANK0
   512  0015E8  0EE8               	movlw	low __pidataBANK0
   513  0015EA  6EF6               	movwf	tblptrl,c
   514  0015EC  0E1B               	movlw	high __pidataBANK0
   515  0015EE  6EF7               	movwf	tblptrh,c
   516  0015F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   517  0015F2  6EF8               	movwf	tblptru,c
   518  0015F4  EE00  F0A1         	lfsr	0,__pdataBANK0
   519  0015F8  EE10 F01F          	lfsr	1,31
   520  0015FC                     copy_data0:
   521  0015FC  0009               	tblrd		*+
   522  0015FE  CFF5 FFEE          	movff	tablat,postinc0
   523  001602  50E5               	movf	postdec1,w,c
   524  001604  50E1               	movf	fsr1l,w,c
   525  001606  E1FA               	bnz	copy_data0
   526                           
   527                           ; Initialize objects allocated to COMRAM (33 bytes)
   528                           ; load TBLPTR registers with __pidataCOMRAM
   529  001608  0EA6               	movlw	low __pidataCOMRAM
   530  00160A  6EF6               	movwf	tblptrl,c
   531  00160C  0E1B               	movlw	high __pidataCOMRAM
   532  00160E  6EF7               	movwf	tblptrh,c
   533  001610  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   534  001612  6EF8               	movwf	tblptru,c
   535  001614  EE00  F044         	lfsr	0,__pdataCOMRAM
   536  001618  EE10 F021          	lfsr	1,33
   537  00161C                     copy_data1:
   538  00161C  0009               	tblrd		*+
   539  00161E  CFF5 FFEE          	movff	tablat,postinc0
   540  001622  50E5               	movf	postdec1,w,c
   541  001624  50E1               	movf	fsr1l,w,c
   542  001626  E1FA               	bnz	copy_data1
   543                           
   544                           ; Clear objects allocated to BANK1 (184 bytes)
   545  001628  EE01  F000         	lfsr	0,__pbssBANK1
   546  00162C  0EB8               	movlw	184
   547  00162E                     clear_0:
   548  00162E  6AEE               	clrf	postinc0,c
   549  001630  06E8               	decf	wreg,f,c
   550  001632  E1FD               	bnz	clear_0
   551                           
   552                           ; Clear objects allocated to BANK0 (33 bytes)
   553  001634  EE00  F080         	lfsr	0,__pbssBANK0
   554  001638  0E21               	movlw	33
   555  00163A                     clear_1:
   556  00163A  6AEE               	clrf	postinc0,c
   557  00163C  06E8               	decf	wreg,f,c
   558  00163E  E1FD               	bnz	clear_1
   559                           
   560                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   561  001640  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   562  001642  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   563  001644  6A77               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   564                           
   565                           ; Clear objects allocated to COMRAM (67 bytes)
   566  001646  EE00  F001         	lfsr	0,__pbssCOMRAM
   567  00164A  0E43               	movlw	67
   568  00164C                     clear_2:
   569  00164C  6AEE               	clrf	postinc0,c
   570  00164E  06E8               	decf	wreg,f,c
   571  001650  E1FD               	bnz	clear_2
   572  001652                     end_of_initialization:
   573                           	callstack 0
   574  001652                     __end_of__initialization:
   575                           	callstack 0
   576  001652  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   577  001654  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   578  001656  0E00               	movlw	low (__Lmediumconst shr (0+16))
   579  001658  6EF8               	movwf	tblptru,c
   580  00165A  0100               	movlb	0
   581  00165C  EF30  F00B         	goto	_main	;jump to C main() function
   582                           
   583                           	psect	bitbssCOMRAM
   584  0003B8                     __pbitbssCOMRAM:
   585                           	callstack 0
   586  0003B8                     _Krebut:
   587                           	callstack 0
   588  0003B8                     	ds	1
   589  0003B9                     _jugantSIO:
   590                           	callstack 0
   591  0003B9                     	ds	1
   592  0003BA                     _jugantJoc:
   593                           	callstack 0
   594  0003BA                     	ds	1
   595  0003BB                     _tempsAcabat:
   596                           	callstack 0
   597  0003BB                     	ds	1
   598  0003BC                     _nouSegon:
   599                           	callstack 0
   600  0003BC                     	ds	1
   601  0003BD                     _jugant:
   602                           	callstack 0
   603  0003BD                     	ds	1
   604  0003BE                     _cap2:
   605                           	callstack 0
   606  0003BE                     	ds	1
   607  0003BF                     _cap1:
   608                           	callstack 0
   609  0003BF                     	ds	1
   610  0003C0                     _newString:
   611                           	callstack 0
   612  0003C0                     	ds	1
   613  0003C1                     _ferMenu:
   614                           	callstack 0
   615  0003C1                     	ds	1
   616  0003C2                     _reproduir:
   617                           	callstack 0
   618  0003C2                     	ds	1
   619  0003C3                     _borram:
   620                           	callstack 0
   621  0003C3                     	ds	1
   622  0003C4                     _do_register:
   623                           	callstack 0
   624  0003C4                     	ds	1
   625  0003C5                     _do_check_exists:
   626                           	callstack 0
   627  0003C5                     	ds	1
   628  0003C6                     _loginNOTRegister:
   629                           	callstack 0
   630  0003C6                     	ds	1
   631  0003C7                     _setSMSon:
   632                           	callstack 0
   633  0003C7                     	ds	1
   634  0003C8                     _nou_s:
   635                           	callstack 0
   636  0003C8                     	ds	1
   637                           
   638                           	psect	bssCOMRAM
   639  000001                     __pbssCOMRAM:
   640                           	callstack 0
   641  000001                     _userPtr:
   642                           	callstack 0
   643  000001                     	ds	2
   644  000003                     _h_Tics:
   645                           	callstack 0
   646  000003                     	ds	2
   647  000005                     _s_ptr:
   648                           	callstack 0
   649  000005                     	ds	2
   650  000007                     motorSIO@state:
   651                           	callstack 0
   652  000007                     	ds	1
   653  000008                     _rebut:
   654                           	callstack 0
   655  000008                     	ds	1
   656  000009                     motorJoc@state:
   657                           	callstack 0
   658  000009                     	ds	1
   659  00000A                     _direccioJoc:
   660                           	callstack 0
   661  00000A                     	ds	1
   662  00000B                     motorHora@state:
   663                           	callstack 0
   664  00000B                     	ds	1
   665  00000C                     _segons:
   666                           	callstack 0
   667  00000C                     	ds	1
   668  00000D                     _timerHora:
   669                           	callstack 0
   670  00000D                     	ds	1
   671  00000E                     JoystickMotor@state:
   672                           	callstack 0
   673  00000E                     	ds	1
   674  00000F                     _ultimaTeclaAD:
   675                           	callstack 0
   676  00000F                     	ds	1
   677  000010                     GLCDMotor@length2:
   678                           	callstack 0
   679  000010                     	ds	1
   680  000011                     GLCDMotor@length1:
   681                           	callstack 0
   682  000011                     	ds	1
   683  000012                     GLCDMotor@k2:
   684                           	callstack 0
   685  000012                     	ds	1
   686  000013                     GLCDMotor@k1:
   687                           	callstack 0
   688  000013                     	ds	1
   689  000014                     GLCDMotor@min2:
   690                           	callstack 0
   691  000014                     	ds	1
   692  000015                     GLCDMotor@min1:
   693                           	callstack 0
   694  000015                     	ds	1
   695  000016                     GLCDMotor@j:
   696                           	callstack 0
   697  000016                     	ds	1
   698  000017                     GLCDMotor@state:
   699                           	callstack 0
   700  000017                     	ds	1
   701  000018                     _menuDaltGLCD:
   702                           	callstack 0
   703  000018                     	ds	1
   704  000019                     _timerGLCD:
   705                           	callstack 0
   706  000019                     	ds	1
   707  00001A                     motorAltaveu@state:
   708                           	callstack 0
   709  00001A                     	ds	1
   710  00001B                     _copsNota:
   711                           	callstack 0
   712  00001B                     	ds	1
   713  00001C                     _timerAltaveu:
   714                           	callstack 0
   715  00001C                     	ds	1
   716  00001D                     _nota:
   717                           	callstack 0
   718  00001D                     	ds	1
   719  00001E                     UmotorUsers@state:
   720                           	callstack 0
   721  00001E                     	ds	1
   722  00001F                     _j:
   723                           	callstack 0
   724  00001F                     	ds	1
   725  000020                     _i:
   726                           	callstack 0
   727  000020                     	ds	1
   728  000021                     _indexNextUserStruct:
   729                           	callstack 0
   730  000021                     	ds	1
   731  000022                     _indexNextUser:
   732                           	callstack 0
   733  000022                     	ds	1
   734  000023                     _numUsuaris:
   735                           	callstack 0
   736  000023                     	ds	1
   737  000024                     _currentUsrIndex:
   738                           	callstack 0
   739  000024                     	ds	1
   740  000025                     menu@state:
   741                           	callstack 0
   742  000025                     	ds	1
   743  000026                     _indexUsuari:
   744                           	callstack 0
   745  000026                     	ds	1
   746  000027                     _menuDalt:
   747                           	callstack 0
   748  000027                     	ds	1
   749  000028                     _timerMenu:
   750                           	callstack 0
   751  000028                     	ds	1
   752  000029                     _tmp:
   753                           	callstack 0
   754  000029                     	ds	1
   755  00002A                     _counter:
   756                           	callstack 0
   757  00002A                     	ds	1
   758  00002B                     TeTeclat@files:
   759                           	callstack 0
   760  00002B                     	ds	1
   761  00002C                     TeTeclat@cols:
   762                           	callstack 0
   763  00002C                     	ds	1
   764  00002D                     TeTeclat@state:
   765                           	callstack 0
   766  00002D                     	ds	1
   767  00002E                     _tiTeclat:
   768                           	callstack 0
   769  00002E                     	ds	1
   770  00002F                     SMotor@state:
   771                           	callstack 0
   772  00002F                     	ds	1
   773  000030                     _zeroTecla:
   774                           	callstack 0
   775  000030                     	ds	1
   776  000031                     _sumaPulsacions:
   777                           	callstack 0
   778  000031                     	ds	1
   779  000032                     _Timer:
   780                           	callstack 0
   781  000032                     	ds	1
   782  000033                     _ColumnAct:
   783                           	callstack 0
   784  000033                     	ds	1
   785  000034                     _RowAct:
   786                           	callstack 0
   787  000034                     	ds	1
   788  000035                     _Columns:
   789                           	callstack 0
   790  000035                     	ds	1
   791  000036                     _Rows:
   792                           	callstack 0
   793  000036                     	ds	1
   794  000037                     _tmpUsername:
   795                           	callstack 0
   796  000037                     	ds	9
   797  000040                     _horaTmp:
   798                           	callstack 0
   799  000040                     	ds	4
   800                           
   801                           	psect	dataCOMRAM
   802  000044                     __pdataCOMRAM:
   803                           	callstack 0
   804  000044                     _lletraInici:
   805                           	callstack 0
   806  000044                     	ds	9
   807  00004D                     _arrayZero:
   808                           	callstack 0
   809  00004D                     	ds	3
   810  000050                     _novaTeclaSIO:
   811                           	callstack 0
   812  000050                     	ds	1
   813  000051                     _direccioSIO:
   814                           	callstack 0
   815  000051                     	ds	1
   816  000052                     _usuariActualSIO:
   817                           	callstack 0
   818  000052                     	ds	1
   819  000053                     _novaTeclaJOC:
   820                           	callstack 0
   821  000053                     	ds	1
   822  000054                     _usuariJoc:
   823                           	callstack 0
   824  000054                     	ds	1
   825  000055                     GLCDMotor@max2:
   826                           	callstack 0
   827  000055                     	ds	1
   828  000056                     GLCDMotor@max1:
   829                           	callstack 0
   830  000056                     	ds	1
   831  000057                     _usuariLoguejat:
   832                           	callstack 0
   833  000057                     	ds	1
   834  000058                     _novaDireccio:
   835                           	callstack 0
   836  000058                     	ds	1
   837  000059                     _novaLletra:
   838                           	callstack 0
   839  000059                     	ds	1
   840  00005A                     _NovaTecla:
   841                           	callstack 0
   842  00005A                     	ds	1
   843  00005B                     _ultimaTecla:
   844                           	callstack 0
   845  00005B                     	ds	1
   846  00005C                     _timerSMS:
   847                           	callstack 0
   848  00005C                     	ds	1
   849  00005D                     _novaTecla:
   850                           	callstack 0
   851  00005D                     	ds	1
   852  00005E                     _lletraASCII:
   853                           	callstack 0
   854  00005E                     	ds	1
   855  00005F                     _hora:
   856                           	callstack 0
   857  00005F                     	ds	6
   858                           
   859                           	psect	bssBANK0
   860  000080                     __pbssBANK0:
   861                           	callstack 0
   862  000080                     _s_Timers:
   863                           	callstack 0
   864  000080                     	ds	24
   865  000098                     _tmpPassword:
   866                           	callstack 0
   867  000098                     	ds	9
   868                           
   869                           	psect	dataBANK0
   870  0000A1                     __pdataBANK0:
   871                           	callstack 0
   872  0000A1                     _teclaPremuda:
   873                           	callstack 0
   874  0000A1                     	ds	12
   875  0000AD                     _registerText:
   876                           	callstack 0
   877  0000AD                     	ds	11
   878  0000B8                     _loginText:
   879                           	callstack 0
   880  0000B8                     	ds	8
   881                           
   882                           	psect	bssBANK1
   883  000100                     __pbssBANK1:
   884                           	callstack 0
   885  000100                     _usuaris:
   886                           	callstack 0
   887  000100                     	ds	184
   888                           
   889                           	psect	cstackBANK0
   890  0000C0                     __pcstackBANK0:
   891                           	callstack 0
   892  0000C0                     LcInit@rows:
   893                           	callstack 0
   894  0000C0                     LcGotoXY@Fisics:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x0
   898  0000C0                     	ds	1
   899  0000C1                     LcInit@i:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x1
   903  0000C1                     	ds	1
   904  0000C2                     _LcGotoXY$336:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x2
   908  0000C2                     	ds	2
   909  0000C4                     LcGotoXY@Column:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x4
   913  0000C4                     	ds	1
   914                           
   915                           	psect	cstackCOMRAM
   916  000065                     __pcstackCOMRAM:
   917                           	callstack 0
   918  000065                     
   919                           ; 1 bytes @ 0x0
   920  000065                     	ds	1
   921  000066                     ??_high_rsi:
   922                           
   923                           ; 1 bytes @ 0x1
   924  000066                     	ds	4
   925  00006A                     ??_EscriuPrimeraOrdre:
   926  00006A                     ??_Uinit:
   927  00006A                     ??_UcheckExistsGetError:
   928  00006A                     ??_CantaPartAlta:
   929  00006A                     ??_CantaPartBaixa:
   930  00006A                     ?_TiGetTics:
   931                           	callstack 0
   932  00006A                     ?_UgetUserName:
   933                           	callstack 0
   934  00006A                     SsetNovaTecla@tecla:
   935                           	callstack 0
   936  00006A                     TiResetTics@Handle:
   937                           	callstack 0
   938  00006A                     MsetNovaTecla@tecla:
   939                           	callstack 0
   940  00006A                     MNovaLletra@lletra:
   941                           	callstack 0
   942  00006A                     MNouJoystick@posicio:
   943                           	callstack 0
   944  00006A                     UenviaChar@pos:
   945                           	callstack 0
   946  00006A                     UenviaPas@pos:
   947                           	callstack 0
   948  00006A                     escriureCharEEPROM@pos:
   949                           	callstack 0
   950  00006A                     compareStrings@a:
   951                           	callstack 0
   952  00006A                     escriureEEPROM@caca:
   953                           	callstack 0
   954  00006A                     GLCDMostraMenu@num:
   955                           	callstack 0
   956  00006A                     HActualitzaHora@nova:
   957                           	callstack 0
   958  00006A                     JJuguem@usuari:
   959                           	callstack 0
   960  00006A                     JnovaTecla@tecla:
   961                           	callstack 0
   962  00006A                     JnovaDireccio@dir:
   963                           	callstack 0
   964  00006A                     conversorJoystick@direc:
   965                           	callstack 0
   966  00006A                     SIONovaDireccio@num:
   967                           	callstack 0
   968  00006A                     SIOStartGame@usuari:
   969                           	callstack 0
   970  00006A                     SIONovaTecla@tecla:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x5
   974  00006A                     	ds	1
   975  00006B                     ??_JoystickMotor:
   976  00006B                     CantaPartAlta@c:
   977                           	callstack 0
   978  00006B                     CantaPartBaixa@c:
   979                           	callstack 0
   980  00006B                     EscriuPrimeraOrdre@ordre:
   981                           	callstack 0
   982  00006B                     UenviaChar@c:
   983                           	callstack 0
   984  00006B                     UenviaPas@c:
   985                           	callstack 0
   986  00006B                     escriureCharEEPROM@c:
   987                           	callstack 0
   988  00006B                     compareStrings@b:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x6
   992  00006B                     	ds	1
   993  00006C                     ??_TiGetTics:
   994  00006C                     CantaIR@IR:
   995                           	callstack 0
   996  00006C                     CantaData@Data:
   997                           	callstack 0
   998  00006C                     UgetUserName@quin:
   999                           	callstack 0
  1000  00006C                     Uinit@i:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x7
  1004  00006C                     	ds	1
  1005  00006D                     ??_motorSIO:
  1006  00006D                     ??_compareStrings:
  1007  00006D                     Uinit@j:
  1008                           	callstack 0
  1009  00006D                     LcNewString@new_s:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x8
  1013  00006D                     	ds	1
  1014  00006E                     TiGetTics@Handle:
  1015                           	callstack 0
  1016  00006E                     Uinit@j_1144:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x9
  1020  00006E                     	ds	1
  1021  00006F                     ??_UmotorUsers:
  1022  00006F                     TiGetTics@actual:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0xA
  1026  00006F                     	ds	2
  1027  000071                     ??_SMotor:
  1028  000071                     ??_motorHora:
  1029  000071                     ??_motorAltaveu:
  1030  000071                     ??_TeTeclat:
  1031  000071                     WaitForBusy@Busy:
  1032                           	callstack 0
  1033  000071                     Espera@ms:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0xC
  1037  000071                     	ds	1
  1038  000072                     LcGotoXY@Row:
  1039                           	callstack 0
  1040                           
  1041                           ; 1 bytes @ 0xD
  1042  000072                     	ds	1
  1043  000073                     ??_Espera:
  1044  000073                     ??_motorJoc:
  1045  000073                     LcPutChar@c:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0xE
  1049  000073                     	ds	1
  1050  000074                     Espera@Timer:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0xF
  1054  000074                     	ds	1
  1055  000075                     ??_menu:
  1056  000075                     ??_GLCDMotor:
  1057  000075                     LcInit@columns:
  1058                           	callstack 0
  1059                           
  1060                           ; 1 bytes @ 0x10
  1061  000075                     	ds	1
  1062  000076                     
  1063                           ; 1 bytes @ 0x11
  1064  000076                     	ds	1
  1065  000077                     
  1066                           ; 1 bytes @ 0x12
  1067 ;;
  1068 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1069 ;;
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 75 in file "main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1
  1086 ;;      Params:         0       0       0
  1087 ;;      Locals:         0       0       0
  1088 ;;      Temps:          0       0       0
  1089 ;;      Totals:         0       0       0
  1090 ;;Total ram usage:        0 bytes
  1091 ;; Hardware stack levels required when called: 7
  1092 ;; This function calls:
  1093 ;;		_GLCDInit
  1094 ;;		_GLCDMotor
  1095 ;;		_JoystickInit
  1096 ;;		_JoystickMotor
  1097 ;;		_LcInit
  1098 ;;		_LcLCD
  1099 ;;		_Minit
  1100 ;;		_SMotor
  1101 ;;		_Sinit
  1102 ;;		_TeInit
  1103 ;;		_TeTeclat
  1104 ;;		_TiInitTimer
  1105 ;;		_Uinit
  1106 ;;		_UmotorUsers
  1107 ;;		_escriure2usuarisStruct
  1108 ;;		_escriureEEPROM
  1109 ;;		_initAltaveu
  1110 ;;		_initHora
  1111 ;;		_init_eusart
  1112 ;;		_init_ports
  1113 ;;		_menu
  1114 ;;		_motorAltaveu
  1115 ;;		_motorHora
  1116 ;;		_motorJoc
  1117 ;;		_motorSIO
  1118 ;; This function is called by:
  1119 ;;		Startup code after reset
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text0
  1124  001660                     __ptext0:
  1125                           	callstack 0
  1126  001660                     _main:
  1127                           	callstack 24
  1128                           
  1129                           ;main.c: 76:     init_ports();
  1130                           
  1131                           ;incstack = 0
  1132  001660  ECE4  F00D         	call	_init_ports	;wreg free
  1133                           
  1134                           ;main.c: 77:     escriureEEPROM();
  1135  001664  EC5A  F00D         	call	_escriureEEPROM	;wreg free
  1136                           
  1137                           ;main.c: 78:     init_eusart();
  1138  001668  EC10  F00E         	call	_init_eusart	;wreg free
  1139                           
  1140                           ;main.c: 79:     TiInitTimer();
  1141  00166C  ECD6  F00C         	call	_TiInitTimer	;wreg free
  1142                           
  1143                           ;main.c: 80:     TeInit();
  1144  001670  EC94  F00E         	call	_TeInit	;wreg free
  1145                           
  1146                           ;main.c: 81:     Sinit();
  1147  001674  EC98  F00E         	call	_Sinit	;wreg free
  1148                           
  1149                           ;main.c: 82:     SMotor();
  1150  001678  EC90  F005         	call	_SMotor	;wreg free
  1151                           
  1152                           ;main.c: 83:     Uinit();
  1153  00167C  EC0E  F00A         	call	_Uinit	;wreg free
  1154                           
  1155                           ;main.c: 84:     initAltaveu();
  1156  001680  EC88  F00E         	call	_initAltaveu	;wreg free
  1157                           
  1158                           ;main.c: 85:     GLCDInit();
  1159  001684  ECA8  F00E         	call	_GLCDInit	;wreg free
  1160                           
  1161                           ;main.c: 86:     JoystickInit();
  1162  001688  EC25  F00E         	call	_JoystickInit	;wreg free
  1163                           
  1164                           ;main.c: 87:     initHora();
  1165  00168C  EC84  F00E         	call	_initHora	;wreg free
  1166                           
  1167                           ;main.c: 89:     LcInit(2,16);
  1168  001690  0E10               	movlw	16
  1169  001692  6E75               	movwf	LcInit@columns^0,c
  1170  001694  0E02               	movlw	2
  1171  001696  EC72  F008         	call	_LcInit
  1172                           
  1173                           ;main.c: 90:     Minit();
  1174  00169A  ECA0  F00E         	call	_Minit	;wreg free
  1175                           
  1176                           ;main.c: 92:     escriure2usuarisStruct();
  1177  00169E  EC71  F00D         	call	_escriure2usuarisStruct	;wreg free
  1178  0016A2                     l6797:
  1179                           
  1180                           ;main.c: 95:         motorJoc();
  1181  0016A2  EC56  F009         	call	_motorJoc	;wreg free
  1182                           
  1183                           ;main.c: 96:         motorSIO();
  1184  0016A6  ECE5  F008         	call	_motorSIO	;wreg free
  1185                           
  1186                           ;main.c: 97:         motorHora();
  1187  0016AA  EC68  F00A         	call	_motorHora	;wreg free
  1188                           
  1189                           ;main.c: 98:         JoystickMotor();
  1190  0016AE  ECFD  F007         	call	_JoystickMotor	;wreg free
  1191                           
  1192                           ;main.c: 99:         menu();
  1193  0016B2  EC64  F001         	call	_menu	;wreg free
  1194                           
  1195                           ;main.c: 100:         motorAltaveu();
  1196  0016B6  ECB3  F009         	call	_motorAltaveu	;wreg free
  1197                           
  1198                           ;main.c: 101:         UmotorUsers();
  1199  0016BA  EC8E  F006         	call	_UmotorUsers	;wreg free
  1200                           
  1201                           ;main.c: 102:         GLCDMotor();
  1202  0016BE  ECAB  F003         	call	_GLCDMotor	;wreg free
  1203                           
  1204                           ;main.c: 103:         TeTeclat();
  1205  0016C2  EC4B  F007         	call	_TeTeclat	;wreg free
  1206                           
  1207                           ;main.c: 104:         SMotor();
  1208  0016C6  EC90  F005         	call	_SMotor	;wreg free
  1209                           
  1210                           ;main.c: 105:         LcLCD();
  1211  0016CA  ECD0  F00B         	call	_LcLCD	;wreg free
  1212  0016CE  D7E9               	goto	l6797
  1213  0016D0                     __end_of_main:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _motorSIO *****************
  1217 ;; Defined at:
  1218 ;;		line 34 in file "SIO.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/1
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1
  1232 ;;      Params:         0       0       0
  1233 ;;      Locals:         0       0       0
  1234 ;;      Temps:          2       0       0
  1235 ;;      Totals:         2       0       0
  1236 ;;Total ram usage:        2 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 3
  1239 ;; This function calls:
  1240 ;;		_UgetUserName
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text1
  1247  0011CA                     __ptext1:
  1248                           	callstack 0
  1249  0011CA                     _motorSIO:
  1250                           	callstack 27
  1251                           
  1252                           ;SIO.c: 35:     static char state = 0;;SIO.c: 37:  switch(state) {
  1253                           
  1254                           ;incstack = 0
  1255  0011CA  D05A               	goto	l4473
  1256  0011CC                     l4417:
  1257                           
  1258                           ;SIO.c: 39:    if (usuariActualSIO > -1) {
  1259  0011CC  BE52               	btfsc	_usuariActualSIO^0,7,c
  1260  0011CE  0012               	return	
  1261                           
  1262                           ;SIO.c: 40:     userPtr = UgetUserName(usuariActualSIO);
  1263  0011D0  5052               	movf	_usuariActualSIO^0,w,c
  1264  0011D2  EC1B  F00E         	call	_UgetUserName
  1265  0011D6  C06A  F001         	movff	?_UgetUserName,_userPtr
  1266  0011DA  C06B  F002         	movff	?_UgetUserName+1,_userPtr+1
  1267                           
  1268                           ;SIO.c: 41:     jugantSIO = 1;
  1269  0011DE  8277               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1270                           
  1271                           ;SIO.c: 42:     Krebut = 0;
  1272  0011E0  9077               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1273                           
  1274                           ;SIO.c: 43:     state = 1;
  1275  0011E2  0E01               	movlw	1
  1276  0011E4  6E07               	movwf	motorSIO@state^0,c
  1277  0011E6  0012               	return	
  1278  0011E8                     l4427:
  1279                           
  1280                           ;SIO.c: 47:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1281  0011E8  C001  FFD9         	movff	_userPtr,fsr2l
  1282  0011EC  C002  FFDA         	movff	_userPtr+1,fsr2h
  1283  0011F0  50DF               	movf	indf2,w,c
  1284  0011F2  B4D8               	btfsc	status,2,c
  1285  0011F4  A2AC               	btfss	172,1,c	;volatile
  1286  0011F6  D008               	goto	l4435
  1287                           
  1288                           ;SIO.c: 48:     TXREG = '\0';
  1289  0011F8  0E00               	movlw	0
  1290  0011FA  6EAD               	movwf	173,c	;volatile
  1291                           
  1292                           ;SIO.c: 49:     novaTeclaSIO = 0;
  1293  0011FC  0E00               	movlw	0
  1294  0011FE  6E50               	movwf	_novaTeclaSIO^0,c
  1295                           
  1296                           ;SIO.c: 50:     LATBbits.LATB3 = 1;
  1297  001200  868A               	bsf	138,3,c	;volatile
  1298                           
  1299                           ;SIO.c: 51:     state = 2;
  1300  001202  0E02               	movlw	2
  1301  001204  6E07               	movwf	motorSIO@state^0,c
  1302                           
  1303                           ;SIO.c: 52:    }
  1304  001206  0012               	return	
  1305  001208                     l4435:
  1306  001208  C001  FFD9         	movff	_userPtr,fsr2l
  1307  00120C  C002  FFDA         	movff	_userPtr+1,fsr2h
  1308  001210  50DF               	movf	indf2,w,c
  1309  001212  B4D8               	btfsc	status,2,c
  1310  001214  0012               	return	
  1311  001216  A2AC               	btfss	172,1,c	;volatile
  1312  001218  0012               	return	
  1313                           
  1314                           ;SIO.c: 54:     TXREG = *userPtr;
  1315  00121A  C001  FFD9         	movff	_userPtr,fsr2l
  1316  00121E  C002  FFDA         	movff	_userPtr+1,fsr2h
  1317  001222  50DF               	movf	indf2,w,c
  1318  001224  6EAD               	movwf	173,c	;volatile
  1319                           
  1320                           ;SIO.c: 55:     userPtr++;
  1321  001226  4A01               	infsnz	_userPtr^0,f,c
  1322  001228  2A02               	incf	(_userPtr+1)^0,f,c
  1323  00122A  0012               	return	
  1324  00122C                     l4443:
  1325                           
  1326                           ;SIO.c: 59:    if (RCREG == 'K') {
  1327  00122C  0E4B               	movlw	75
  1328  00122E  18AE               	xorwf	174,w,c
  1329  001230  A4D8               	btfss	status,2,c
  1330  001232  0012               	return	
  1331                           
  1332                           ;SIO.c: 60:     Krebut = 1;
  1333  001234  8077               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1334  001236                     l4447:
  1335                           
  1336                           ;SIO.c: 61:     state = 3;
  1337  001236  0E03               	movlw	3
  1338  001238  6E07               	movwf	motorSIO@state^0,c
  1339  00123A  0012               	return	
  1340  00123C                     l4449:
  1341                           
  1342                           ;SIO.c: 65:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1343  00123C  2851               	incf	_direccioSIO^0,w,c
  1344  00123E  A4D8               	btfss	status,2,c
  1345  001240  A2AC               	btfss	172,1,c	;volatile
  1346  001242  D004               	goto	l4457
  1347                           
  1348                           ;SIO.c: 66:     TXREG = direccioSIO;
  1349  001244  C051  FFAD         	movff	_direccioSIO,4013	;volatile
  1350                           
  1351                           ;SIO.c: 67:     direccioSIO = -1;
  1352  001248  6851               	setf	_direccioSIO^0,c
  1353  00124A  D7F5               	goto	l4447
  1354  00124C                     l4457:
  1355  00124C  0E30               	movlw	48
  1356  00124E  6450               	cpfsgt	_novaTeclaSIO^0,c
  1357  001250  D00C               	goto	l1121
  1358  001252  0E3A               	movlw	58
  1359  001254  6050               	cpfslt	_novaTeclaSIO^0,c
  1360  001256  D009               	goto	l1121
  1361  001258  A2AC               	btfss	172,1,c	;volatile
  1362  00125A  D007               	goto	l1121
  1363                           
  1364                           ;SIO.c: 71:     TXREG = novaTeclaSIO;
  1365  00125C  C050  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1366                           
  1367                           ;SIO.c: 72:     novaTeclaSIO = 0;
  1368  001260  0E00               	movlw	0
  1369  001262  6E50               	movwf	_novaTeclaSIO^0,c
  1370                           
  1371                           ;SIO.c: 73:     state = 3;
  1372  001264  0E03               	movlw	3
  1373  001266  6E07               	movwf	motorSIO@state^0,c
  1374                           
  1375                           ;SIO.c: 74:    }
  1376  001268  0012               	return	
  1377  00126A                     l1121:
  1378  00126A  B277               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1379  00126C  0012               	return	
  1380  00126E  A2AC               	btfss	172,1,c	;volatile
  1381  001270  0012               	return	
  1382                           
  1383                           ;SIO.c: 76:     TXREG = 'F';
  1384  001272  0E46               	movlw	70
  1385  001274  6EAD               	movwf	173,c	;volatile
  1386                           
  1387                           ;SIO.c: 77:     novaTeclaSIO = 0;
  1388  001276  0E00               	movlw	0
  1389  001278  6E50               	movwf	_novaTeclaSIO^0,c
  1390                           
  1391                           ;SIO.c: 78:     state = 4;
  1392  00127A  0E04               	movlw	4
  1393  00127C  6E07               	movwf	motorSIO@state^0,c
  1394  00127E  0012               	return	
  1395  001280                     l4473:
  1396  001280  5007               	movf	motorSIO@state^0,w,c
  1397  001282  6E6D               	movwf	??_motorSIO^0,c
  1398  001284  6A6E               	clrf	(??_motorSIO+1)^0,c
  1399                           
  1400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1401                           ; Switch size 1, requested type "simple"
  1402                           ; Number of cases is 1, Range of values is 0 to 0
  1403                           ; switch strategies available:
  1404                           ; Name         Instructions Cycles
  1405                           ; simple_byte            4     3 (average)
  1406                           ;	Chosen strategy is simple_byte
  1407  001286  506E               	movf	(??_motorSIO+1)^0,w,c
  1408  001288  0A00               	xorlw	0	; case 0
  1409  00128A  A4D8               	btfss	status,2,c
  1410  00128C  0012               	return	
  1411                           
  1412                           ; Switch size 1, requested type "simple"
  1413                           ; Number of cases is 5, Range of values is 0 to 4
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; simple_byte           16     9 (average)
  1417                           ;	Chosen strategy is simple_byte
  1418  00128E  506D               	movf	??_motorSIO^0,w,c
  1419  001290  0A00               	xorlw	0	; case 0
  1420  001292  B4D8               	btfsc	status,2,c
  1421  001294  D79B               	goto	l4417
  1422  001296  0A01               	xorlw	1	; case 1
  1423  001298  B4D8               	btfsc	status,2,c
  1424  00129A  D7A6               	goto	l4427
  1425  00129C  0A03               	xorlw	3	; case 2
  1426  00129E  B4D8               	btfsc	status,2,c
  1427  0012A0  D7C5               	goto	l4443
  1428  0012A2  0A01               	xorlw	1	; case 3
  1429  0012A4  B4D8               	btfsc	status,2,c
  1430  0012A6  D7CA               	goto	l4449
  1431  0012A8  0A07               	xorlw	7	; case 4
  1432  0012AA  0012               	return	
  1433  0012AC                     __end_of_motorSIO:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _motorJoc *****************
  1437 ;; Defined at:
  1438 ;;		line 48 in file "Joc.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/1
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1
  1452 ;;      Params:         0       0       0
  1453 ;;      Locals:         0       0       0
  1454 ;;      Temps:          2       0       0
  1455 ;;      Totals:         2       0       0
  1456 ;;Total ram usage:        2 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 5
  1459 ;; This function calls:
  1460 ;;		_HClearNouSegon
  1461 ;;		_HGetTime
  1462 ;;		_HJugant
  1463 ;;		_HNouSegon
  1464 ;;		_HnoJugant
  1465 ;;		_LcGotoXY
  1466 ;;		_LcLliure
  1467 ;;		_LcNewString
  1468 ;;		_SIONovaDireccio
  1469 ;;		_SIONovaTecla
  1470 ;;		_SIOStartGame
  1471 ;;		_SIOcheckKrebut
  1472 ;;		_SIOendGame
  1473 ;;		_conversorJoystick
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text2
  1480  0012AC                     __ptext2:
  1481                           	callstack 0
  1482  0012AC                     _motorJoc:
  1483                           	callstack 25
  1484                           
  1485                           ;Joc.c: 49:     static char state = 0;;Joc.c: 51:  switch(state) {
  1486                           
  1487                           ;incstack = 0
  1488  0012AC  D04A               	goto	l6011
  1489  0012AE                     l5959:
  1490                           
  1491                           ;Joc.c: 53:    if (usuariJoc != -1) {
  1492  0012AE  2854               	incf	_usuariJoc^0,w,c
  1493  0012B0  B4D8               	btfsc	status,2,c
  1494  0012B2  0012               	return	
  1495                           
  1496                           ;Joc.c: 54:     SIOStartGame(usuariJoc);
  1497  0012B4  5054               	movf	_usuariJoc^0,w,c
  1498  0012B6  EC68  F00E         	call	_SIOStartGame
  1499                           
  1500                           ;Joc.c: 55:     jugantJoc = 1;
  1501  0012BA  8477               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1502                           
  1503                           ;Joc.c: 56:     state = 2;
  1504  0012BC  0E02               	movlw	2
  1505  0012BE  6E09               	movwf	motorJoc@state^0,c
  1506                           
  1507                           ;Joc.c: 58:   break;
  1508                           
  1509                           ;Joc.c: 57:    }
  1510  0012C0  0012               	return	
  1511  0012C2                     l1047:
  1512                           
  1513                           ;Joc.c: 60:    if (!jugantJoc) {
  1514  0012C2  B477               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1515  0012C4  D009               	goto	l5975
  1516                           
  1517                           ;Joc.c: 61:     usuariJoc = -1;
  1518  0012C6  6854               	setf	_usuariJoc^0,c
  1519                           
  1520                           ;Joc.c: 62:     HnoJugant();
  1521  0012C8  ECB7  F00E         	call	_HnoJugant	;wreg free
  1522                           
  1523                           ;Joc.c: 63:     SIOendGame();
  1524  0012CC  ECB5  F00E         	call	_SIOendGame	;wreg free
  1525                           
  1526                           ;Joc.c: 64:     state = 0;
  1527  0012D0  0E00               	movlw	0
  1528  0012D2  6E09               	movwf	motorJoc@state^0,c
  1529                           
  1530                           ;Joc.c: 65:                 LATBbits.LATB3 = 0;
  1531  0012D4  968A               	bcf	138,3,c	;volatile
  1532                           
  1533                           ;Joc.c: 66:    }
  1534  0012D6  0012               	return	
  1535  0012D8                     l5975:
  1536  0012D8  BE0A               	btfsc	_direccioJoc^0,7,c
  1537  0012DA  D009               	goto	l5983
  1538                           
  1539                           ;Joc.c: 68:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1540  0012DC  500A               	movf	_direccioJoc^0,w,c
  1541  0012DE  ECF2  F00C         	call	_conversorJoystick
  1542  0012E2  EC70  F00E         	call	_SIONovaDireccio
  1543                           
  1544                           ;Joc.c: 69:     direccioJoc = -1;
  1545  0012E6  680A               	setf	_direccioJoc^0,c
  1546  0012E8                     l5981:
  1547                           
  1548                           ;Joc.c: 70:     state = 1;
  1549  0012E8  0E01               	movlw	1
  1550  0012EA  6E09               	movwf	motorJoc@state^0,c
  1551                           
  1552                           ;Joc.c: 71:    }
  1553  0012EC  0012               	return	
  1554  0012EE                     l5983:
  1555  0012EE  EC44  F00E         	call	_HNouSegon	;wreg free
  1556  0012F2  A0D8               	btfss	status,0,c
  1557  0012F4  D014               	goto	l5995
  1558  0012F6  EC62  F00E         	call	_LcLliure	;wreg free
  1559  0012FA  A0D8               	btfss	status,0,c
  1560  0012FC  D010               	goto	l5995
  1561                           
  1562                           ;Joc.c: 73:     HClearNouSegon();
  1563  0012FE  ECBB  F00E         	call	_HClearNouSegon	;wreg free
  1564                           
  1565                           ;Joc.c: 74:     LcGotoXY(0,1);
  1566  001302  0E01               	movlw	1
  1567  001304  6E72               	movwf	LcGotoXY@Row^0,c
  1568  001306  0E00               	movlw	0
  1569  001308  EC78  F00C         	call	_LcGotoXY
  1570                           
  1571                           ;Joc.c: 75:     LcNewString(HGetTime());
  1572  00130C  ECB9  F00E         	call	_HGetTime	;wreg free
  1573  001310  6E73               	movwf	??_motorJoc^0,c
  1574  001312  C073  F06D         	movff	??_motorJoc,LcNewString@new_s
  1575  001316  6A6E               	clrf	(LcNewString@new_s+1)^0,c
  1576  001318  EC5C  F00E         	call	_LcNewString	;wreg free
  1577  00131C  D7E5               	goto	l5981
  1578  00131E                     l5995:
  1579  00131E  5053               	movf	_novaTeclaJOC^0,w,c
  1580  001320  0A80               	xorlw	128
  1581  001322  0F7F               	addlw	-129
  1582  001324  A0D8               	btfss	status,0,c
  1583  001326  0012               	return	
  1584                           
  1585                           ;Joc.c: 79:     SIONovaTecla(novaTeclaJOC+48);
  1586  001328  5053               	movf	_novaTeclaJOC^0,w,c
  1587  00132A  0F30               	addlw	48
  1588  00132C  EC6C  F00E         	call	_SIONovaTecla
  1589                           
  1590                           ;Joc.c: 80:     novaTeclaJOC = -1;
  1591  001330  6853               	setf	_novaTeclaJOC^0,c
  1592  001332  D7DA               	goto	l5981
  1593  001334                     l6003:
  1594                           
  1595                           ;Joc.c: 85:    if (SIOcheckKrebut()) {
  1596  001334  EC3E  F00E         	call	_SIOcheckKrebut	;wreg free
  1597  001338  A0D8               	btfss	status,0,c
  1598  00133A  0012               	return	
  1599                           
  1600                           ;Joc.c: 86:     HJugant();
  1601  00133C  ECAC  F00E         	call	_HJugant	;wreg free
  1602  001340  D7D3               	goto	l5981
  1603  001342                     l6011:
  1604  001342  5009               	movf	motorJoc@state^0,w,c
  1605  001344  6E73               	movwf	??_motorJoc^0,c
  1606  001346  6A74               	clrf	(??_motorJoc+1)^0,c
  1607                           
  1608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1609                           ; Switch size 1, requested type "simple"
  1610                           ; Number of cases is 1, Range of values is 0 to 0
  1611                           ; switch strategies available:
  1612                           ; Name         Instructions Cycles
  1613                           ; simple_byte            4     3 (average)
  1614                           ;	Chosen strategy is simple_byte
  1615  001348  5074               	movf	(??_motorJoc+1)^0,w,c
  1616  00134A  0A00               	xorlw	0	; case 0
  1617  00134C  A4D8               	btfss	status,2,c
  1618  00134E  0012               	return	
  1619                           
  1620                           ; Switch size 1, requested type "simple"
  1621                           ; Number of cases is 3, Range of values is 0 to 2
  1622                           ; switch strategies available:
  1623                           ; Name         Instructions Cycles
  1624                           ; simple_byte           10     6 (average)
  1625                           ;	Chosen strategy is simple_byte
  1626  001350  5073               	movf	??_motorJoc^0,w,c
  1627  001352  0A00               	xorlw	0	; case 0
  1628  001354  B4D8               	btfsc	status,2,c
  1629  001356  D7AB               	goto	l5959
  1630  001358  0A01               	xorlw	1	; case 1
  1631  00135A  B4D8               	btfsc	status,2,c
  1632  00135C  D7B2               	goto	l1047
  1633  00135E  0A03               	xorlw	3	; case 2
  1634  001360  A4D8               	btfss	status,2,c
  1635  001362  0012               	return	
  1636  001364  D7E7               	goto	l6003
  1637  001366                     __end_of_motorJoc:
  1638                           	callstack 0
  1639                           
  1640 ;; *************** function _conversorJoystick *****************
  1641 ;; Defined at:
  1642 ;;		line 31 in file "Joc.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  direc           1    wreg     unsigned char 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  direc           1    5[COMRAM] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      unsigned char 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/1
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1
  1656 ;;      Params:         0       0       0
  1657 ;;      Locals:         1       0       0
  1658 ;;      Temps:          0       0       0
  1659 ;;      Totals:         1       0       0
  1660 ;;Total ram usage:        1 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 2
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_motorJoc
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text3
  1671  0019E4                     __ptext3:
  1672                           	callstack 0
  1673  0019E4                     _conversorJoystick:
  1674                           	callstack 27
  1675                           
  1676                           ;incstack = 0
  1677                           ;conversorJoystick@direc stored from wreg
  1678  0019E4  6E6A               	movwf	conversorJoystick@direc^0,c
  1679                           
  1680                           ;Joc.c: 33:     if (direc==2) {
  1681  0019E6  0E02               	movlw	2
  1682  0019E8  186A               	xorwf	conversorJoystick@direc^0,w,c
  1683  0019EA  A4D8               	btfss	status,2,c
  1684  0019EC  D002               	goto	l2099
  1685                           
  1686                           ;Joc.c: 34:         return 'W';
  1687  0019EE  0E57               	movlw	87
  1688  0019F0  0012               	return	
  1689  0019F2                     l2099:
  1690                           
  1691                           ;Joc.c: 36:     if (direc==6) {
  1692  0019F2  0E06               	movlw	6
  1693  0019F4  186A               	xorwf	conversorJoystick@direc^0,w,c
  1694  0019F6  A4D8               	btfss	status,2,c
  1695  0019F8  D002               	goto	l2105
  1696                           
  1697                           ;Joc.c: 37:         return 'D';
  1698  0019FA  0E44               	movlw	68
  1699  0019FC  0012               	return	
  1700  0019FE                     l2105:
  1701                           
  1702                           ;Joc.c: 39:     if (direc==8) {
  1703  0019FE  0E08               	movlw	8
  1704  001A00  186A               	xorwf	conversorJoystick@direc^0,w,c
  1705  001A02  A4D8               	btfss	status,2,c
  1706  001A04  D002               	goto	l2111
  1707                           
  1708                           ;Joc.c: 40:         return 'S';
  1709  001A06  0E53               	movlw	83
  1710  001A08  0012               	return	
  1711  001A0A                     l2111:
  1712                           
  1713                           ;Joc.c: 42:     if (direc==4) {
  1714  001A0A  0E04               	movlw	4
  1715  001A0C  186A               	xorwf	conversorJoystick@direc^0,w,c
  1716  001A0E  A4D8               	btfss	status,2,c
  1717  001A10  D002               	goto	l2117
  1718                           
  1719                           ;Joc.c: 43:         return 'A';
  1720  001A12  0E41               	movlw	65
  1721  001A14  0012               	return	
  1722  001A16                     l2117:
  1723                           
  1724                           ;Joc.c: 45:     return 0;
  1725  001A16  0E00               	movlw	0
  1726  001A18  0012               	return		;funcret
  1727  001A1A                     __end_of_conversorJoystick:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function _SIOendGame *****************
  1731 ;; Defined at:
  1732 ;;		line 13 in file "SIO.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		None
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/1
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1
  1746 ;;      Params:         0       0       0
  1747 ;;      Locals:         0       0       0
  1748 ;;      Temps:          0       0       0
  1749 ;;      Totals:         0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; Hardware stack levels required when called: 2
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_motorJoc
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text4
  1761  001D6A                     __ptext4:
  1762                           	callstack 0
  1763  001D6A                     _SIOendGame:
  1764                           	callstack 27
  1765                           
  1766                           ;SIO.c: 14:     jugantSIO = 0;
  1767                           
  1768                           ;incstack = 0
  1769  001D6A  9277               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1770  001D6C  0012               	return		;funcret
  1771  001D6E                     __end_of_SIOendGame:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _SIOcheckKrebut *****************
  1775 ;; Defined at:
  1776 ;;		line 16 in file "SIO.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;		None               void
  1783 ;; Registers used:
  1784 ;;		status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/1
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1
  1790 ;;      Params:         0       0       0
  1791 ;;      Locals:         0       0       0
  1792 ;;      Temps:          0       0       0
  1793 ;;      Totals:         0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 2
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_motorJoc
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text5
  1805  001C7C                     __ptext5:
  1806                           	callstack 0
  1807  001C7C                     _SIOcheckKrebut:
  1808                           	callstack 27
  1809                           
  1810                           ;SIO.c: 17:     return Krebut;
  1811                           
  1812                           ;incstack = 0
  1813  001C7C  B077               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1814  001C7E  D002               	goto	l2133
  1815  001C80  90D8               	bcf	status,0,c
  1816  001C82  0012               	return	
  1817  001C84                     l2133:
  1818  001C84  80D8               	bsf	status,0,c
  1819  001C86  0012               	return		;funcret
  1820  001C88                     __end_of_SIOcheckKrebut:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _SIOStartGame *****************
  1824 ;; Defined at:
  1825 ;;		line 23 in file "SIO.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  usuari          1    wreg     unsigned char 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  usuari          1    5[COMRAM] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/1
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1
  1839 ;;      Params:         0       0       0
  1840 ;;      Locals:         1       0       0
  1841 ;;      Temps:          0       0       0
  1842 ;;      Totals:         1       0       0
  1843 ;;Total ram usage:        1 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 2
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_motorJoc
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text6
  1854  001CD0                     __ptext6:
  1855                           	callstack 0
  1856  001CD0                     _SIOStartGame:
  1857                           	callstack 27
  1858                           
  1859                           ;incstack = 0
  1860                           ;SIOStartGame@usuari stored from wreg
  1861  001CD0  6E6A               	movwf	SIOStartGame@usuari^0,c
  1862                           
  1863                           ;SIO.c: 24:     usuariActualSIO = usuari;
  1864  001CD2  C06A  F052         	movff	SIOStartGame@usuari,_usuariActualSIO
  1865  001CD6  0012               	return		;funcret
  1866  001CD8                     __end_of_SIOStartGame:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _SIONovaTecla *****************
  1870 ;; Defined at:
  1871 ;;		line 30 in file "SIO.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  tecla           1    wreg     char 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  tecla           1    5[COMRAM] char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/1
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1
  1885 ;;      Params:         0       0       0
  1886 ;;      Locals:         1       0       0
  1887 ;;      Temps:          0       0       0
  1888 ;;      Totals:         1       0       0
  1889 ;;Total ram usage:        1 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 2
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_motorJoc
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text7
  1900  001CD8                     __ptext7:
  1901                           	callstack 0
  1902  001CD8                     _SIONovaTecla:
  1903                           	callstack 27
  1904                           
  1905                           ;incstack = 0
  1906                           ;SIONovaTecla@tecla stored from wreg
  1907  001CD8  6E6A               	movwf	SIONovaTecla@tecla^0,c
  1908                           
  1909                           ;SIO.c: 31:     novaTeclaSIO = tecla;
  1910  001CDA  C06A  F050         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  1911  001CDE  0012               	return		;funcret
  1912  001CE0                     __end_of_SIONovaTecla:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function _SIONovaDireccio *****************
  1916 ;; Defined at:
  1917 ;;		line 19 in file "SIO.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  num             1    wreg     unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  num             1    5[COMRAM] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/1
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1
  1931 ;;      Params:         0       0       0
  1932 ;;      Locals:         1       0       0
  1933 ;;      Temps:          0       0       0
  1934 ;;      Totals:         1       0       0
  1935 ;;Total ram usage:        1 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 2
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_motorJoc
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text8
  1946  001CE0                     __ptext8:
  1947                           	callstack 0
  1948  001CE0                     _SIONovaDireccio:
  1949                           	callstack 27
  1950                           
  1951                           ;incstack = 0
  1952                           ;SIONovaDireccio@num stored from wreg
  1953  001CE0  6E6A               	movwf	SIONovaDireccio@num^0,c
  1954                           
  1955                           ;SIO.c: 20:     direccioSIO = num;
  1956  001CE2  C06A  F051         	movff	SIONovaDireccio@num,_direccioSIO
  1957  001CE6  0012               	return		;funcret
  1958  001CE8                     __end_of_SIONovaDireccio:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _HnoJugant *****************
  1962 ;; Defined at:
  1963 ;;		line 34 in file "Hora.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		None
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/1
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1
  1977 ;;      Params:         0       0       0
  1978 ;;      Locals:         0       0       0
  1979 ;;      Temps:          0       0       0
  1980 ;;      Totals:         0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; Hardware stack levels required when called: 2
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_motorJoc
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text9
  1992  001D6E                     __ptext9:
  1993                           	callstack 0
  1994  001D6E                     _HnoJugant:
  1995                           	callstack 27
  1996                           
  1997                           ;Hora.c: 35:     jugant = 0;
  1998                           
  1999                           ;incstack = 0
  2000  001D6E  9A77               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2001  001D70  0012               	return		;funcret
  2002  001D72                     __end_of_HnoJugant:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function _HNouSegon *****************
  2006 ;; Defined at:
  2007 ;;		line 22 in file "Hora.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;		None               void
  2014 ;; Registers used:
  2015 ;;		status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/1
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1
  2021 ;;      Params:         0       0       0
  2022 ;;      Locals:         0       0       0
  2023 ;;      Temps:          0       0       0
  2024 ;;      Totals:         0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 2
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_motorJoc
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text10
  2036  001C88                     __ptext10:
  2037                           	callstack 0
  2038  001C88                     _HNouSegon:
  2039                           	callstack 27
  2040                           
  2041                           ;Hora.c: 23:     return nouSegon;
  2042                           
  2043                           ;incstack = 0
  2044  001C88  B877               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2045  001C8A  D002               	goto	l2079
  2046  001C8C  90D8               	bcf	status,0,c
  2047  001C8E  0012               	return	
  2048  001C90                     l2079:
  2049  001C90  80D8               	bsf	status,0,c
  2050  001C92  0012               	return		;funcret
  2051  001C94                     __end_of_HNouSegon:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function _HJugant *****************
  2055 ;; Defined at:
  2056 ;;		line 37 in file "Hora.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		None
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/1
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1
  2070 ;;      Params:         0       0       0
  2071 ;;      Locals:         0       0       0
  2072 ;;      Temps:          0       0       0
  2073 ;;      Totals:         0       0       0
  2074 ;;Total ram usage:        0 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 2
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_motorJoc
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text11
  2085  001D58                     __ptext11:
  2086                           	callstack 0
  2087  001D58                     _HJugant:
  2088                           	callstack 27
  2089                           
  2090                           ;Hora.c: 38:     jugant = 1;
  2091                           
  2092                           ;incstack = 0
  2093  001D58  8A77               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2094                           
  2095                           ;Hora.c: 39:     tempsAcabat = 0;
  2096  001D5A  9677               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2097  001D5C  0012               	return		;funcret
  2098  001D5E                     __end_of_HJugant:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _HGetTime *****************
  2102 ;; Defined at:
  2103 ;;		line 30 in file "Hora.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      PTR unsigned char 
  2110 ;; Registers used:
  2111 ;;		wreg
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/1
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1
  2117 ;;      Params:         2       0       0
  2118 ;;      Locals:         0       0       0
  2119 ;;      Temps:          0       0       0
  2120 ;;      Totals:         2       0       0
  2121 ;;Total ram usage:        2 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 2
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_motorJoc
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text12
  2132  001D72                     __ptext12:
  2133                           	callstack 0
  2134  001D72                     _HGetTime:
  2135                           	callstack 27
  2136                           
  2137                           ;Hora.c: 31:     return hora;
  2138                           
  2139                           ;incstack = 0
  2140  001D72  0E5F               	movlw	_hora& (0+255)
  2141  001D74  0012               	return		;funcret
  2142  001D76                     __end_of_HGetTime:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _HClearNouSegon *****************
  2146 ;; Defined at:
  2147 ;;		line 26 in file "Hora.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;		None
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		None
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/1
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1
  2161 ;;      Params:         0       0       0
  2162 ;;      Locals:         0       0       0
  2163 ;;      Temps:          0       0       0
  2164 ;;      Totals:         0       0       0
  2165 ;;Total ram usage:        0 bytes
  2166 ;; Hardware stack levels used: 1
  2167 ;; Hardware stack levels required when called: 2
  2168 ;; This function calls:
  2169 ;;		Nothing
  2170 ;; This function is called by:
  2171 ;;		_motorJoc
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text13
  2176  001D76                     __ptext13:
  2177                           	callstack 0
  2178  001D76                     _HClearNouSegon:
  2179                           	callstack 27
  2180                           
  2181                           ;Hora.c: 27:     nouSegon = 0;
  2182                           
  2183                           ;incstack = 0
  2184  001D76  9877               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2185  001D78  0012               	return		;funcret
  2186  001D7A                     __end_of_HClearNouSegon:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _motorHora *****************
  2190 ;; Defined at:
  2191 ;;		line 45 in file "Hora.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/1
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1
  2205 ;;      Params:         0       0       0
  2206 ;;      Locals:         0       0       0
  2207 ;;      Temps:          2       0       0
  2208 ;;      Totals:         2       0       0
  2209 ;;Total ram usage:        2 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 3
  2212 ;; This function calls:
  2213 ;;		_TiGetTics
  2214 ;;		_TiResetTics
  2215 ;;		_playAltaveu
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text14
  2222  0014D0                     __ptext14:
  2223                           	callstack 0
  2224  0014D0                     _motorHora:
  2225                           	callstack 27
  2226                           
  2227                           ;Hora.c: 46:  static char state = 0;;Hora.c: 48:  switch(state) {
  2228                           
  2229                           ;incstack = 0
  2230  0014D0  D042               	goto	l6069
  2231  0014D2                     l6019:
  2232                           
  2233                           ;Hora.c: 50:    if (TiGetTics(timerHora) >= 1205) {
  2234  0014D2  500D               	movf	_timerHora^0,w,c
  2235  0014D4  EC87  F00D         	call	_TiGetTics
  2236  0014D8  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  2237  0014DA  0012               	return	
  2238  0014DC  0EB5               	movlw	181
  2239  0014DE  5C6A               	subwf	?_TiGetTics^0,w,c
  2240  0014E0  0E04               	movlw	4
  2241  0014E2  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  2242  0014E4  A0D8               	btfss	status,0,c
  2243  0014E6  0012               	return	
  2244                           
  2245                           ;Hora.c: 51:     TiResetTics(timerHora);
  2246  0014E8  500D               	movf	_timerHora^0,w,c
  2247  0014EA  EC04  F00E         	call	_TiResetTics
  2248                           
  2249                           ;Hora.c: 52:     if(jugant){
  2250  0014EE  AA77               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2251  0014F0  D02F               	goto	l6065
  2252                           
  2253                           ;Hora.c: 53:       nouSegon = 1;
  2254  0014F2  8877               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2255                           
  2256                           ;Hora.c: 55:      hora[4]--;
  2257  0014F4  0663               	decf	(_hora+4)^0,f,c
  2258                           
  2259                           ;Hora.c: 56:      if(hora[4] == ('0'-1)){
  2260  0014F6  0E2F               	movlw	47
  2261  0014F8  1863               	xorwf	(_hora+4)^0,w,c
  2262  0014FA  A4D8               	btfss	status,2,c
  2263  0014FC  D003               	goto	l6035
  2264                           
  2265                           ;Hora.c: 57:       hora[4] = '9';
  2266  0014FE  0E39               	movlw	57
  2267  001500  6E63               	movwf	(_hora+4)^0,c
  2268                           
  2269                           ;Hora.c: 58:       hora[3]--;
  2270  001502  0662               	decf	(_hora+3)^0,f,c
  2271  001504                     l6035:
  2272                           
  2273                           ;Hora.c: 61:      if(hora[3] == ('0'-1)){
  2274  001504  0E2F               	movlw	47
  2275  001506  1862               	xorwf	(_hora+3)^0,w,c
  2276  001508  A4D8               	btfss	status,2,c
  2277  00150A  D003               	goto	l6041
  2278                           
  2279                           ;Hora.c: 62:       hora[3] = '5';
  2280  00150C  0E35               	movlw	53
  2281  00150E  6E62               	movwf	(_hora+3)^0,c
  2282                           
  2283                           ;Hora.c: 63:       hora[1]--;
  2284  001510  0660               	decf	(_hora+1)^0,f,c
  2285  001512                     l6041:
  2286                           
  2287                           ;Hora.c: 66:      if(hora[1] == ('0'-1)){
  2288  001512  0E2F               	movlw	47
  2289  001514  1860               	xorwf	(_hora+1)^0,w,c
  2290  001516  A4D8               	btfss	status,2,c
  2291  001518  D003               	goto	l6047
  2292                           
  2293                           ;Hora.c: 67:       hora[1] = '9';
  2294  00151A  0E39               	movlw	57
  2295  00151C  6E60               	movwf	(_hora+1)^0,c
  2296                           
  2297                           ;Hora.c: 68:       hora[0]--;
  2298  00151E  065F               	decf	_hora^0,f,c
  2299  001520                     l6047:
  2300                           
  2301                           ;Hora.c: 71:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2302  001520  0E30               	movlw	48
  2303  001522  185F               	xorwf	_hora^0,w,c
  2304  001524  A4D8               	btfss	status,2,c
  2305  001526  D00C               	goto	l6057
  2306  001528  0E30               	movlw	48
  2307  00152A  1860               	xorwf	(_hora+1)^0,w,c
  2308  00152C  A4D8               	btfss	status,2,c
  2309  00152E  D008               	goto	l6057
  2310  001530  0E30               	movlw	48
  2311  001532  1862               	xorwf	(_hora+3)^0,w,c
  2312  001534  A4D8               	btfss	status,2,c
  2313  001536  D004               	goto	l6057
  2314  001538  0E30               	movlw	48
  2315  00153A  1863               	xorwf	(_hora+4)^0,w,c
  2316  00153C  B4D8               	btfsc	status,2,c
  2317                           
  2318                           ;Hora.c: 72:       tempsAcabat = 1;
  2319  00153E  8677               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2320  001540                     l6057:
  2321                           
  2322                           ;Hora.c: 75:      segons++;
  2323  001540  2A0C               	incf	_segons^0,f,c
  2324                           
  2325                           ;Hora.c: 76:      if(segons > 59){
  2326  001542  0E3B               	movlw	59
  2327  001544  640C               	cpfsgt	_segons^0,c
  2328  001546  D004               	goto	l6065
  2329                           
  2330                           ;Hora.c: 77:       playAltaveu();
  2331  001548  ECBD  F00E         	call	_playAltaveu	;wreg free
  2332                           
  2333                           ;Hora.c: 78:       segons = 0;
  2334  00154C  0E00               	movlw	0
  2335  00154E  6E0C               	movwf	_segons^0,c
  2336  001550                     l6065:
  2337                           
  2338                           ;Hora.c: 81:     state = 0;
  2339  001550  0E00               	movlw	0
  2340  001552  6E0B               	movwf	motorHora@state^0,c
  2341  001554  0012               	return	
  2342  001556                     l6069:
  2343  001556  500B               	movf	motorHora@state^0,w,c
  2344  001558  6E71               	movwf	??_motorHora^0,c
  2345  00155A  6A72               	clrf	(??_motorHora+1)^0,c
  2346                           
  2347                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2348                           ; Switch size 1, requested type "simple"
  2349                           ; Number of cases is 1, Range of values is 0 to 0
  2350                           ; switch strategies available:
  2351                           ; Name         Instructions Cycles
  2352                           ; simple_byte            4     3 (average)
  2353                           ;	Chosen strategy is simple_byte
  2354  00155C  5072               	movf	(??_motorHora+1)^0,w,c
  2355  00155E  0A00               	xorlw	0	; case 0
  2356  001560  A4D8               	btfss	status,2,c
  2357  001562  0012               	return	
  2358                           
  2359                           ; Switch size 1, requested type "simple"
  2360                           ; Number of cases is 1, Range of values is 0 to 0
  2361                           ; switch strategies available:
  2362                           ; Name         Instructions Cycles
  2363                           ; simple_byte            4     3 (average)
  2364                           ;	Chosen strategy is simple_byte
  2365  001564  5071               	movf	??_motorHora^0,w,c
  2366  001566  0A00               	xorlw	0	; case 0
  2367  001568  A4D8               	btfss	status,2,c
  2368  00156A  0012               	return	
  2369  00156C  D7B2               	goto	l6019
  2370  00156E                     __end_of_motorHora:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function _playAltaveu *****************
  2374 ;; Defined at:
  2375 ;;		line 14 in file "Altaveu.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		None
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/1
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1
  2389 ;;      Params:         0       0       0
  2390 ;;      Locals:         0       0       0
  2391 ;;      Temps:          0       0       0
  2392 ;;      Totals:         0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 2
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_motorHora
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text15
  2404  001D7A                     __ptext15:
  2405                           	callstack 0
  2406  001D7A                     _playAltaveu:
  2407                           	callstack 27
  2408                           
  2409                           ;Altaveu.c: 15:     reproduir = 1;
  2410                           
  2411                           ;incstack = 0
  2412  001D7A  8478               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2413  001D7C  0012               	return		;funcret
  2414  001D7E                     __end_of_playAltaveu:
  2415                           	callstack 0
  2416                           
  2417 ;; *************** function _motorAltaveu *****************
  2418 ;; Defined at:
  2419 ;;		line 17 in file "Altaveu.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/1
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1
  2433 ;;      Params:         0       0       0
  2434 ;;      Locals:         0       0       0
  2435 ;;      Temps:          3       0       0
  2436 ;;      Totals:         3       0       0
  2437 ;;Total ram usage:        3 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; Hardware stack levels required when called: 3
  2440 ;; This function calls:
  2441 ;;		_TiGetTics
  2442 ;;		_TiResetTics
  2443 ;; This function is called by:
  2444 ;;		_main
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text16
  2449  001366                     __ptext16:
  2450                           	callstack 0
  2451  001366                     _motorAltaveu:
  2452                           	callstack 27
  2453                           
  2454                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  2455                           
  2456                           ;incstack = 0
  2457  001366  D048               	goto	l6485
  2458  001368                     l745:
  2459                           
  2460                           ;Altaveu.c: 22:    if (reproduir) {
  2461  001368  A478               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2462  00136A  0012               	return	
  2463                           
  2464                           ;Altaveu.c: 23:     nota = 1;
  2465  00136C  0E01               	movlw	1
  2466  00136E  6E1D               	movwf	_nota^0,c
  2467                           
  2468                           ;Altaveu.c: 24:     copsNota = 0;
  2469  001370  0E00               	movlw	0
  2470  001372  6E1B               	movwf	_copsNota^0,c
  2471                           
  2472                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  2473  001374  501C               	movf	_timerAltaveu^0,w,c
  2474  001376  EC04  F00E         	call	_TiResetTics
  2475  00137A                     l6449:
  2476                           
  2477                           ;Altaveu.c: 26:     state = 1;
  2478  00137A  0E01               	movlw	1
  2479  00137C  6E1A               	movwf	motorAltaveu@state^0,c
  2480  00137E  0012               	return	
  2481  001380                     l6451:
  2482                           
  2483                           ;Altaveu.c: 30:    if (nota > 5) {
  2484  001380  0E05               	movlw	5
  2485  001382  641D               	cpfsgt	_nota^0,c
  2486  001384  D004               	goto	l6457
  2487                           
  2488                           ;Altaveu.c: 31:     reproduir = 0;
  2489  001386  9478               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2490                           
  2491                           ;Altaveu.c: 32:     state = 0;
  2492  001388  0E00               	movlw	0
  2493  00138A  6E1A               	movwf	motorAltaveu@state^0,c
  2494                           
  2495                           ;Altaveu.c: 33:    }
  2496  00138C  0012               	return	
  2497  00138E                     l6457:
  2498  00138E  0EA8               	movlw	168
  2499  001390  181B               	xorwf	_copsNota^0,w,c
  2500  001392  A4D8               	btfss	status,2,c
  2501  001394  D004               	goto	l6465
  2502                           
  2503                           ;Altaveu.c: 35:     nota++;
  2504  001396  2A1D               	incf	_nota^0,f,c
  2505                           
  2506                           ;Altaveu.c: 36:     copsNota = 0;
  2507  001398  0E00               	movlw	0
  2508  00139A  6E1B               	movwf	_copsNota^0,c
  2509  00139C  D7EE               	goto	l6449
  2510  00139E                     l6465:
  2511  00139E  501C               	movf	_timerAltaveu^0,w,c
  2512  0013A0  EC87  F00D         	call	_TiGetTics
  2513  0013A4  501D               	movf	_nota^0,w,c
  2514  0013A6  6E71               	movwf	??_motorAltaveu^0,c
  2515  0013A8  6A72               	clrf	(??_motorAltaveu+1)^0,c
  2516  0013AA  506A               	movf	?_TiGetTics^0,w,c
  2517  0013AC  5C71               	subwf	??_motorAltaveu^0,w,c
  2518  0013AE  5072               	movf	(??_motorAltaveu+1)^0,w,c
  2519  0013B0  0A80               	xorlw	128
  2520  0013B2  6E73               	movwf	(??_motorAltaveu+2)^0,c
  2521  0013B4  506B               	movf	(?_TiGetTics+1)^0,w,c
  2522  0013B6  0A80               	xorlw	128
  2523  0013B8  5873               	subwfb	(??_motorAltaveu+2)^0,w,c
  2524  0013BA  B0D8               	btfsc	status,0,c
  2525  0013BC  0012               	return	
  2526                           
  2527                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  2528  0013BE  808A               	bsf	138,0,c	;volatile
  2529                           
  2530                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  2531  0013C0  501C               	movf	_timerAltaveu^0,w,c
  2532  0013C2  EC04  F00E         	call	_TiResetTics
  2533                           
  2534                           ;Altaveu.c: 42:     state = 2;
  2535  0013C6  0E02               	movlw	2
  2536  0013C8  6E1A               	movwf	motorAltaveu@state^0,c
  2537  0013CA  0012               	return	
  2538  0013CC                     l6473:
  2539                           
  2540                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  2541  0013CC  501C               	movf	_timerAltaveu^0,w,c
  2542  0013CE  EC87  F00D         	call	_TiGetTics
  2543  0013D2  501D               	movf	_nota^0,w,c
  2544  0013D4  6E71               	movwf	??_motorAltaveu^0,c
  2545  0013D6  6A72               	clrf	(??_motorAltaveu+1)^0,c
  2546  0013D8  506A               	movf	?_TiGetTics^0,w,c
  2547  0013DA  5C71               	subwf	??_motorAltaveu^0,w,c
  2548  0013DC  5072               	movf	(??_motorAltaveu+1)^0,w,c
  2549  0013DE  0A80               	xorlw	128
  2550  0013E0  6E73               	movwf	(??_motorAltaveu+2)^0,c
  2551  0013E2  506B               	movf	(?_TiGetTics+1)^0,w,c
  2552  0013E4  0A80               	xorlw	128
  2553  0013E6  5873               	subwfb	(??_motorAltaveu+2)^0,w,c
  2554  0013E8  B0D8               	btfsc	status,0,c
  2555  0013EA  0012               	return	
  2556                           
  2557                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  2558  0013EC  908A               	bcf	138,0,c	;volatile
  2559                           
  2560                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  2561  0013EE  501C               	movf	_timerAltaveu^0,w,c
  2562  0013F0  EC04  F00E         	call	_TiResetTics
  2563                           
  2564                           ;Altaveu.c: 49:     copsNota++;
  2565  0013F4  2A1B               	incf	_copsNota^0,f,c
  2566  0013F6  D7C1               	goto	l6449
  2567  0013F8                     l6485:
  2568  0013F8  501A               	movf	motorAltaveu@state^0,w,c
  2569  0013FA  6E71               	movwf	??_motorAltaveu^0,c
  2570  0013FC  6A72               	clrf	(??_motorAltaveu+1)^0,c
  2571                           
  2572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2573                           ; Switch size 1, requested type "simple"
  2574                           ; Number of cases is 1, Range of values is 0 to 0
  2575                           ; switch strategies available:
  2576                           ; Name         Instructions Cycles
  2577                           ; simple_byte            4     3 (average)
  2578                           ;	Chosen strategy is simple_byte
  2579  0013FE  5072               	movf	(??_motorAltaveu+1)^0,w,c
  2580  001400  0A00               	xorlw	0	; case 0
  2581  001402  A4D8               	btfss	status,2,c
  2582  001404  0012               	return	
  2583                           
  2584                           ; Switch size 1, requested type "simple"
  2585                           ; Number of cases is 3, Range of values is 0 to 2
  2586                           ; switch strategies available:
  2587                           ; Name         Instructions Cycles
  2588                           ; simple_byte           10     6 (average)
  2589                           ;	Chosen strategy is simple_byte
  2590  001406  5071               	movf	??_motorAltaveu^0,w,c
  2591  001408  0A00               	xorlw	0	; case 0
  2592  00140A  B4D8               	btfsc	status,2,c
  2593  00140C  D7AD               	goto	l745
  2594  00140E  0A01               	xorlw	1	; case 1
  2595  001410  B4D8               	btfsc	status,2,c
  2596  001412  D7B6               	goto	l6451
  2597  001414  0A03               	xorlw	3	; case 2
  2598  001416  A4D8               	btfss	status,2,c
  2599  001418  0012               	return	
  2600  00141A  D7D8               	goto	l6473
  2601  00141C                     __end_of_motorAltaveu:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _menu *****************
  2605 ;; Defined at:
  2606 ;;		line 39 in file "Menu.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/1
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1
  2620 ;;      Params:         0       0       0
  2621 ;;      Locals:         0       0       0
  2622 ;;      Temps:          2       0       0
  2623 ;;      Totals:         2       0       0
  2624 ;;Total ram usage:        2 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 6
  2627 ;; This function calls:
  2628 ;;		_GLCDMostraMenu
  2629 ;;		_HActualitzaHora
  2630 ;;		_JJuguem
  2631 ;;		_JendGame
  2632 ;;		_JnovaDireccio
  2633 ;;		_JnovaTecla
  2634 ;;		_LcClear
  2635 ;;		_LcGotoXY
  2636 ;;		_LcLliure
  2637 ;;		_LcNewString
  2638 ;;		_LcPutChar
  2639 ;;		_NoFerMenu
  2640 ;;		_SMSoff
  2641 ;;		_SMSon
  2642 ;;		_SiFerMenu
  2643 ;;		_TiGetTics
  2644 ;;		_TiResetTics
  2645 ;;		_URegister
  2646 ;;		_UcheckExists
  2647 ;;		_UcheckExistsGetError
  2648 ;;		_UcheckExistsNotFinished
  2649 ;;		_UenviaChar
  2650 ;;		_UenviaPas
  2651 ;;		_UgetNumUsuaris
  2652 ;;		_UgetUserName
  2653 ;;		_checkHoraAcabat
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text17
  2660  0002C8                     __ptext17:
  2661                           	callstack 0
  2662  0002C8                     _menu:
  2663                           	callstack 24
  2664                           
  2665                           ;Menu.c: 40:  static char state = 0;;Menu.c: 42:  switch(state) {
  2666                           
  2667                           ;incstack = 0
  2668  0002C8  D1FA               	goto	l6437
  2669  0002CA                     l6077:
  2670                           
  2671                           ;Menu.c: 44:    LcClear();
  2672  0002CA  ECAF  F00D         	call	_LcClear	;wreg free
  2673                           
  2674                           ;Menu.c: 45:    LcNewString(loginText);
  2675  0002CE  0EB8               	movlw	low _loginText
  2676  0002D0  6E6D               	movwf	LcNewString@new_s^0,c
  2677  0002D2  6A6E               	clrf	(LcNewString@new_s+1)^0,c
  2678  0002D4  EC5C  F00E         	call	_LcNewString	;wreg free
  2679                           
  2680                           ;Menu.c: 46:    state = 1;
  2681  0002D8  0E01               	movlw	1
  2682  0002DA  6E25               	movwf	menu@state^0,c
  2683                           
  2684                           ;Menu.c: 47:   break;
  2685  0002DC  0012               	return	
  2686  0002DE                     l6083:
  2687                           
  2688                           ;Menu.c: 49:    if (LcLliure()) {
  2689  0002DE  EC62  F00E         	call	_LcLliure	;wreg free
  2690  0002E2  A0D8               	btfss	status,0,c
  2691  0002E4  0012               	return	
  2692                           
  2693                           ;Menu.c: 50:     LcGotoXY(0,1);
  2694  0002E6  0E01               	movlw	1
  2695  0002E8  6E72               	movwf	LcGotoXY@Row^0,c
  2696  0002EA  0E00               	movlw	0
  2697  0002EC  EC78  F00C         	call	_LcGotoXY
  2698                           
  2699                           ;Menu.c: 51:     LcNewString(registerText);
  2700  0002F0  0EAD               	movlw	low _registerText
  2701  0002F2  6E6D               	movwf	LcNewString@new_s^0,c
  2702  0002F4  6A6E               	clrf	(LcNewString@new_s+1)^0,c
  2703  0002F6  EC5C  F00E         	call	_LcNewString	;wreg free
  2704                           
  2705                           ;Menu.c: 52:     NovaTecla = -1;
  2706  0002FA  685A               	setf	_NovaTecla^0,c
  2707                           
  2708                           ;Menu.c: 53:     state = 2;
  2709  0002FC  0E02               	movlw	2
  2710  0002FE  6E25               	movwf	menu@state^0,c
  2711                           
  2712                           ;Menu.c: 55:   break;
  2713                           
  2714                           ;Menu.c: 54:    }
  2715  000300  0012               	return	
  2716  000302                     l6093:
  2717                           
  2718                           ;Menu.c: 57:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  2719  000302  045A               	decf	_NovaTecla^0,w,c
  2720  000304  A4D8               	btfss	status,2,c
  2721  000306  D009               	goto	l6101
  2722  000308  ECBF  F00E         	call	_UgetNumUsuaris	;wreg free
  2723  00030C  0900               	iorlw	0
  2724  00030E  B4D8               	btfsc	status,2,c
  2725  000310  D004               	goto	l6101
  2726                           
  2727                           ;Menu.c: 58:     loginNOTRegister = 1;
  2728  000312  8C78               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2729  000314                     l6099:
  2730                           
  2731                           ;Menu.c: 59:     state = 3;
  2732  000314  0E03               	movlw	3
  2733  000316  6E25               	movwf	menu@state^0,c
  2734                           
  2735                           ;Menu.c: 60:    }
  2736  000318  0012               	return	
  2737  00031A                     l6101:
  2738  00031A  0E02               	movlw	2
  2739  00031C  185A               	xorwf	_NovaTecla^0,w,c
  2740  00031E  A4D8               	btfss	status,2,c
  2741  000320  0012               	return	
  2742                           
  2743                           ;Menu.c: 62:     loginNOTRegister = 0;
  2744  000322  9C78               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2745  000324  D7F7               	goto	l6099
  2746  000326                     l489:
  2747                           
  2748                           ;Menu.c: 67:    NovaTecla = -1;
  2749  000326  685A               	setf	_NovaTecla^0,c
  2750                           
  2751                           ;Menu.c: 68:    novaLletra = -1;
  2752  000328  6859               	setf	_novaLletra^0,c
  2753                           
  2754                           ;Menu.c: 69:    LcClear();
  2755  00032A  ECAF  F00D         	call	_LcClear	;wreg free
  2756                           
  2757                           ;Menu.c: 70:    LcNewString("USER: ");
  2758  00032E  0EBF               	movlw	low STR_1
  2759  000330  6E6D               	movwf	LcNewString@new_s^0,c
  2760  000332  506D               	movf	LcNewString@new_s^0,w,c
  2761  000334  A4D8               	btfss	status,2,c
  2762  000336  0E02               	movlw	high __smallconst
  2763  000338  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  2764  00033A  EC5C  F00E         	call	_LcNewString	;wreg free
  2765                           
  2766                           ;Menu.c: 71:    state = 4;
  2767  00033E  0E04               	movlw	4
  2768  000340  6E25               	movwf	menu@state^0,c
  2769                           
  2770                           ;Menu.c: 72:   break;
  2771  000342  0012               	return	
  2772  000344                     l6113:
  2773                           
  2774                           ;Menu.c: 74:    if (LcLliure()) {
  2775  000344  EC62  F00E         	call	_LcLliure	;wreg free
  2776  000348  A0D8               	btfss	status,0,c
  2777  00034A  0012               	return	
  2778                           
  2779                           ;Menu.c: 75:     LcGotoXY(0,1);
  2780  00034C  0E01               	movlw	1
  2781  00034E  6E72               	movwf	LcGotoXY@Row^0,c
  2782  000350  0E00               	movlw	0
  2783  000352  EC78  F00C         	call	_LcGotoXY
  2784                           
  2785                           ;Menu.c: 76:     LcNewString("PSWD: ");
  2786  000356  0EB8               	movlw	low STR_2
  2787  000358  6E6D               	movwf	LcNewString@new_s^0,c
  2788  00035A  506D               	movf	LcNewString@new_s^0,w,c
  2789  00035C  A4D8               	btfss	status,2,c
  2790  00035E  0E02               	movlw	high __smallconst
  2791  000360  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  2792  000362  EC5C  F00E         	call	_LcNewString	;wreg free
  2793                           
  2794                           ;Menu.c: 77:     state = 5;
  2795  000366  0E05               	movlw	5
  2796  000368  6E25               	movwf	menu@state^0,c
  2797  00036A  0012               	return	
  2798  00036C                     l6121:
  2799                           
  2800                           ;Menu.c: 81:    if (LcLliure()) {
  2801  00036C  EC62  F00E         	call	_LcLliure	;wreg free
  2802  000370  A0D8               	btfss	status,0,c
  2803  000372  0012               	return	
  2804                           
  2805                           ;Menu.c: 82:     LcGotoXY(6,0);
  2806  000374  0E00               	movlw	0
  2807  000376  6E72               	movwf	LcGotoXY@Row^0,c
  2808  000378  0E06               	movlw	6
  2809  00037A  EC78  F00C         	call	_LcGotoXY
  2810                           
  2811                           ;Menu.c: 83:     SMSon();
  2812  00037E  ECAF  F00E         	call	_SMSon	;wreg free
  2813                           
  2814                           ;Menu.c: 84:     tmp =0;
  2815  000382  0E00               	movlw	0
  2816  000384  6E29               	movwf	_tmp^0,c
  2817  000386                     l6129:
  2818                           
  2819                           ;Menu.c: 85:     state = 6;
  2820  000386  0E06               	movlw	6
  2821  000388  6E25               	movwf	menu@state^0,c
  2822  00038A  0012               	return	
  2823  00038C                     l6131:
  2824                           
  2825                           ;Menu.c: 89:    if (novaLletra > 47 && NovaTecla != 10) {
  2826  00038C  5059               	movf	_novaLletra^0,w,c
  2827  00038E  0A80               	xorlw	128
  2828  000390  0F50               	addlw	-176
  2829  000392  A0D8               	btfss	status,0,c
  2830  000394  D00F               	goto	l6141
  2831  000396  0E0A               	movlw	10
  2832  000398  185A               	xorwf	_NovaTecla^0,w,c
  2833  00039A  B4D8               	btfsc	status,2,c
  2834  00039C  D00B               	goto	l6141
  2835                           
  2836                           ;Menu.c: 90:     LcPutChar(novaLletra);
  2837  00039E  5059               	movf	_novaLletra^0,w,c
  2838  0003A0  EC2C  F00C         	call	_LcPutChar
  2839                           
  2840                           ;Menu.c: 91:     UenviaChar(novaLletra,tmp);
  2841  0003A4  C029  F06A         	movff	_tmp,UenviaChar@pos
  2842  0003A8  5059               	movf	_novaLletra^0,w,c
  2843  0003AA  EC36  F00E         	call	_UenviaChar
  2844  0003AE                     l6139:
  2845                           
  2846                           ;Menu.c: 92:     state = 7;
  2847  0003AE  0E07               	movlw	7
  2848  0003B0  6E25               	movwf	menu@state^0,c
  2849                           
  2850                           ;Menu.c: 93:    }
  2851  0003B2  0012               	return	
  2852  0003B4                     l6141:
  2853  0003B4  0E0B               	movlw	11
  2854  0003B6  185A               	xorwf	_NovaTecla^0,w,c
  2855  0003B8  A4D8               	btfss	status,2,c
  2856  0003BA  0012               	return	
  2857  0003BC  D7F8               	goto	l6139
  2858  0003BE                     l6145:
  2859                           
  2860                           ;Menu.c: 99:    if (tmp != 7 && NovaTecla != 11) {
  2861  0003BE  0E07               	movlw	7
  2862  0003C0  1829               	xorwf	_tmp^0,w,c
  2863  0003C2  B4D8               	btfsc	status,2,c
  2864  0003C4  D008               	goto	l6157
  2865  0003C6  0E0B               	movlw	11
  2866  0003C8  185A               	xorwf	_NovaTecla^0,w,c
  2867  0003CA  B4D8               	btfsc	status,2,c
  2868  0003CC  D004               	goto	l6157
  2869                           
  2870                           ;Menu.c: 100:     tmp++;
  2871  0003CE  2A29               	incf	_tmp^0,f,c
  2872                           
  2873                           ;Menu.c: 101:     NovaTecla = -1;
  2874  0003D0  685A               	setf	_NovaTecla^0,c
  2875                           
  2876                           ;Menu.c: 102:     novaLletra = -1;
  2877  0003D2  6859               	setf	_novaLletra^0,c
  2878  0003D4  D7D8               	goto	l6129
  2879  0003D6                     l6157:
  2880  0003D6  0E07               	movlw	7
  2881  0003D8  1829               	xorwf	_tmp^0,w,c
  2882  0003DA  B4D8               	btfsc	status,2,c
  2883  0003DC  D004               	goto	u6190
  2884  0003DE  0E0B               	movlw	11
  2885  0003E0  185A               	xorwf	_NovaTecla^0,w,c
  2886  0003E2  A4D8               	btfss	status,2,c
  2887  0003E4  0012               	return	
  2888  0003E6                     u6190:
  2889                           
  2890                           ;Menu.c: 106:     LcGotoXY(6,1);
  2891  0003E6  0E01               	movlw	1
  2892  0003E8  6E72               	movwf	LcGotoXY@Row^0,c
  2893  0003EA  0E06               	movlw	6
  2894  0003EC  EC78  F00C         	call	_LcGotoXY
  2895                           
  2896                           ;Menu.c: 107:     UenviaChar('\0',tmp);
  2897  0003F0  C029  F06A         	movff	_tmp,UenviaChar@pos
  2898  0003F4  0E00               	movlw	0
  2899  0003F6  EC36  F00E         	call	_UenviaChar
  2900                           
  2901                           ;Menu.c: 108:     NovaTecla = -1;
  2902  0003FA  685A               	setf	_NovaTecla^0,c
  2903                           
  2904                           ;Menu.c: 109:     novaLletra = -1;
  2905  0003FC  6859               	setf	_novaLletra^0,c
  2906                           
  2907                           ;Menu.c: 110:     tmp = 0;
  2908  0003FE  0E00               	movlw	0
  2909  000400  6E29               	movwf	_tmp^0,c
  2910  000402                     l6171:
  2911                           
  2912                           ;Menu.c: 111:     state = 8;
  2913  000402  0E08               	movlw	8
  2914  000404  6E25               	movwf	menu@state^0,c
  2915  000406  0012               	return	
  2916  000408                     l6173:
  2917                           
  2918                           ;Menu.c: 115:    if (novaLletra > 47 && NovaTecla != 10) {
  2919  000408  5059               	movf	_novaLletra^0,w,c
  2920  00040A  0A80               	xorlw	128
  2921  00040C  0F50               	addlw	-176
  2922  00040E  A0D8               	btfss	status,0,c
  2923  000410  D00F               	goto	l6183
  2924  000412  0E0A               	movlw	10
  2925  000414  185A               	xorwf	_NovaTecla^0,w,c
  2926  000416  B4D8               	btfsc	status,2,c
  2927  000418  D00B               	goto	l6183
  2928                           
  2929                           ;Menu.c: 116:     LcPutChar(novaLletra);
  2930  00041A  5059               	movf	_novaLletra^0,w,c
  2931  00041C  EC2C  F00C         	call	_LcPutChar
  2932                           
  2933                           ;Menu.c: 117:     UenviaPas(novaLletra,tmp);
  2934  000420  C029  F06A         	movff	_tmp,UenviaPas@pos
  2935  000424  5059               	movf	_novaLletra^0,w,c
  2936  000426  EC2E  F00E         	call	_UenviaPas
  2937  00042A                     l6181:
  2938                           
  2939                           ;Menu.c: 118:     state = 9;
  2940  00042A  0E09               	movlw	9
  2941  00042C  6E25               	movwf	menu@state^0,c
  2942                           
  2943                           ;Menu.c: 119:    }
  2944  00042E  0012               	return	
  2945  000430                     l6183:
  2946  000430  0E0B               	movlw	11
  2947  000432  185A               	xorwf	_NovaTecla^0,w,c
  2948  000434  A4D8               	btfss	status,2,c
  2949  000436  0012               	return	
  2950  000438  D7F8               	goto	l6181
  2951  00043A                     l6187:
  2952                           
  2953                           ;Menu.c: 125:    if (tmp != 7 && NovaTecla != 11) {
  2954  00043A  0E07               	movlw	7
  2955  00043C  1829               	xorwf	_tmp^0,w,c
  2956  00043E  B4D8               	btfsc	status,2,c
  2957  000440  D008               	goto	l6199
  2958  000442  0E0B               	movlw	11
  2959  000444  185A               	xorwf	_NovaTecla^0,w,c
  2960  000446  B4D8               	btfsc	status,2,c
  2961  000448  D004               	goto	l6199
  2962                           
  2963                           ;Menu.c: 126:     tmp++;
  2964  00044A  2A29               	incf	_tmp^0,f,c
  2965                           
  2966                           ;Menu.c: 127:     NovaTecla = -1;
  2967  00044C  685A               	setf	_NovaTecla^0,c
  2968                           
  2969                           ;Menu.c: 128:     novaLletra = -1;
  2970  00044E  6859               	setf	_novaLletra^0,c
  2971  000450  D7D8               	goto	l6171
  2972  000452                     l6199:
  2973  000452  0E07               	movlw	7
  2974  000454  1829               	xorwf	_tmp^0,w,c
  2975  000456  B4D8               	btfsc	status,2,c
  2976  000458  D004               	goto	u6260
  2977  00045A  0E0B               	movlw	11
  2978  00045C  185A               	xorwf	_NovaTecla^0,w,c
  2979  00045E  A4D8               	btfss	status,2,c
  2980  000460  0012               	return	
  2981  000462                     u6260:
  2982                           
  2983                           ;Menu.c: 132:     UenviaPas('\0',tmp);
  2984  000462  C029  F06A         	movff	_tmp,UenviaPas@pos
  2985  000466  0E00               	movlw	0
  2986  000468  EC2E  F00E         	call	_UenviaPas
  2987                           
  2988                           ;Menu.c: 133:     NovaTecla = -1;
  2989  00046C  685A               	setf	_NovaTecla^0,c
  2990                           
  2991                           ;Menu.c: 134:     novaLletra = -1;
  2992  00046E  6859               	setf	_novaLletra^0,c
  2993                           
  2994                           ;Menu.c: 135:     tmp = 0;
  2995  000470  0E00               	movlw	0
  2996  000472  6E29               	movwf	_tmp^0,c
  2997                           
  2998                           ;Menu.c: 136:     UcheckExists();
  2999  000474  ECC1  F00E         	call	_UcheckExists	;wreg free
  3000                           
  3001                           ;Menu.c: 137:     SMSoff();
  3002  000478  ECB2  F00E         	call	_SMSoff	;wreg free
  3003                           
  3004                           ;Menu.c: 138:     state = 10;
  3005  00047C  0E0A               	movlw	10
  3006  00047E  6E25               	movwf	menu@state^0,c
  3007  000480  0012               	return	
  3008  000482                     l6217:
  3009                           
  3010                           ;Menu.c: 142:    if (!UcheckExistsNotFinished()) {
  3011  000482  EC50  F00E         	call	_UcheckExistsNotFinished	;wreg free
  3012  000486  B0D8               	btfsc	status,0,c
  3013  000488  0012               	return	
  3014                           
  3015                           ;Menu.c: 143:     indexUsuari = UcheckExistsGetError();
  3016  00048A  EC74  F00E         	call	_UcheckExistsGetError	;wreg free
  3017  00048E  A0D8               	btfss	status,0,c
  3018  000490  D002               	goto	u6280
  3019  000492  0E01               	movlw	1
  3020  000494  D001               	goto	u6290
  3021  000496                     u6280:
  3022  000496  0E00               	movlw	0
  3023  000498                     u6290:
  3024  000498  6E26               	movwf	_indexUsuari^0,c
  3025                           
  3026                           ;Menu.c: 144:     state = 11;
  3027  00049A  0E0B               	movlw	11
  3028  00049C  6E25               	movwf	menu@state^0,c
  3029  00049E  0012               	return	
  3030  0004A0                     l6223:
  3031                           
  3032                           ;Menu.c: 149:     state = 12;
  3033  0004A0  0E0C               	movlw	12
  3034  0004A2  6E25               	movwf	menu@state^0,c
  3035                           
  3036                           ;Menu.c: 150:    }
  3037  0004A4  0012               	return	
  3038  0004A6                     l6229:
  3039                           
  3040                           ;Menu.c: 153:     state = 0;
  3041  0004A6  0E00               	movlw	0
  3042  0004A8  6E25               	movwf	menu@state^0,c
  3043                           
  3044                           ;Menu.c: 154:    }
  3045  0004AA  0012               	return	
  3046  0004AC                     l6241:
  3047                           
  3048                           ;Menu.c: 164:    LcClear();
  3049  0004AC  ECAF  F00D         	call	_LcClear	;wreg free
  3050                           
  3051                           ;Menu.c: 165:    SiFerMenu();
  3052  0004B0  ECC5  F00E         	call	_SiFerMenu	;wreg free
  3053                           
  3054                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  3055  0004B4  5027               	movf	_menuDalt^0,w,c
  3056  0004B6  EC56  F00E         	call	_GLCDMostraMenu
  3057                           
  3058                           ;Menu.c: 167:    novaDireccio = -1;
  3059  0004BA  6858               	setf	_novaDireccio^0,c
  3060                           
  3061                           ;Menu.c: 168:    NovaTecla = -1;
  3062  0004BC  685A               	setf	_NovaTecla^0,c
  3063                           
  3064                           ;Menu.c: 169:    state = 13;
  3065  0004BE  0E0D               	movlw	13
  3066  0004C0  6E25               	movwf	menu@state^0,c
  3067                           
  3068                           ;Menu.c: 170:   break;
  3069  0004C2  0012               	return	
  3070  0004C4                     l6253:
  3071                           
  3072                           ;Menu.c: 172:    if (novaDireccio == 8) {
  3073  0004C4  0E08               	movlw	8
  3074  0004C6  1858               	xorwf	_novaDireccio^0,w,c
  3075  0004C8  A4D8               	btfss	status,2,c
  3076  0004CA  D005               	goto	l6261
  3077                           
  3078                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  3079  0004CC  0E04               	movlw	4
  3080  0004CE  6027               	cpfslt	_menuDalt^0,c
  3081  0004D0  D7E7               	goto	l6223
  3082  0004D2  2A27               	incf	_menuDalt^0,f,c
  3083  0004D4  D7E5               	goto	l6223
  3084  0004D6                     l6261:
  3085  0004D6  0E02               	movlw	2
  3086  0004D8  1858               	xorwf	_novaDireccio^0,w,c
  3087  0004DA  A4D8               	btfss	status,2,c
  3088  0004DC  D005               	goto	l6269
  3089                           
  3090                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  3091  0004DE  5027               	movf	_menuDalt^0,w,c
  3092  0004E0  B4D8               	btfsc	status,2,c
  3093  0004E2  D7DE               	goto	l6223
  3094  0004E4  0627               	decf	_menuDalt^0,f,c
  3095  0004E6  D7DC               	goto	l6223
  3096  0004E8                     l6269:
  3097  0004E8  0E0B               	movlw	11
  3098  0004EA  185A               	xorwf	_NovaTecla^0,w,c
  3099  0004EC  A4D8               	btfss	status,2,c
  3100  0004EE  D013               	goto	l6281
  3101  0004F0  0E03               	movlw	3
  3102  0004F2  1827               	xorwf	_menuDalt^0,w,c
  3103  0004F4  A4D8               	btfss	status,2,c
  3104  0004F6  D00F               	goto	l6281
  3105                           
  3106                           ;Menu.c: 181:     NoFerMenu();
  3107  0004F8  ECC7  F00E         	call	_NoFerMenu	;wreg free
  3108                           
  3109                           ;Menu.c: 182:     LcClear();
  3110  0004FC  ECAF  F00D         	call	_LcClear	;wreg free
  3111                           
  3112                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  3113  000500  0EAF               	movlw	low STR_3
  3114  000502  6E6D               	movwf	LcNewString@new_s^0,c
  3115  000504  506D               	movf	LcNewString@new_s^0,w,c
  3116  000506  A4D8               	btfss	status,2,c
  3117  000508  0E02               	movlw	high __smallconst
  3118  00050A  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  3119  00050C  EC5C  F00E         	call	_LcNewString	;wreg free
  3120                           
  3121                           ;Menu.c: 184:     state = 14;
  3122  000510  0E0E               	movlw	14
  3123  000512  6E25               	movwf	menu@state^0,c
  3124                           
  3125                           ;Menu.c: 185:    }
  3126  000514  0012               	return	
  3127  000516                     l6281:
  3128  000516  0E0B               	movlw	11
  3129  000518  185A               	xorwf	_NovaTecla^0,w,c
  3130  00051A  A4D8               	btfss	status,2,c
  3131  00051C  D013               	goto	l6295
  3132  00051E  0427               	decf	_menuDalt^0,w,c
  3133  000520  A4D8               	btfss	status,2,c
  3134  000522  D010               	goto	l6295
  3135                           
  3136                           ;Menu.c: 187:     LcClear();
  3137  000524  ECAF  F00D         	call	_LcClear	;wreg free
  3138                           
  3139                           ;Menu.c: 188:     NoFerMenu();
  3140  000528  ECC7  F00E         	call	_NoFerMenu	;wreg free
  3141                           
  3142                           ;Menu.c: 189:     LcNewString("Modify Time:");
  3143  00052C  0EA2               	movlw	low STR_4
  3144  00052E  6E6D               	movwf	LcNewString@new_s^0,c
  3145  000530  506D               	movf	LcNewString@new_s^0,w,c
  3146  000532  A4D8               	btfss	status,2,c
  3147  000534  0E02               	movlw	high __smallconst
  3148  000536  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  3149  000538  EC5C  F00E         	call	_LcNewString	;wreg free
  3150                           
  3151                           ;Menu.c: 190:     NovaTecla = -1;
  3152  00053C  685A               	setf	_NovaTecla^0,c
  3153                           
  3154                           ;Menu.c: 191:     state = 16;
  3155  00053E  0E10               	movlw	16
  3156  000540  6E25               	movwf	menu@state^0,c
  3157                           
  3158                           ;Menu.c: 192:    }
  3159  000542  0012               	return	
  3160  000544                     l6295:
  3161  000544  5027               	movf	_menuDalt^0,w,c
  3162  000546  A4D8               	btfss	status,2,c
  3163  000548  0012               	return	
  3164  00054A  0E0B               	movlw	11
  3165  00054C  185A               	xorwf	_NovaTecla^0,w,c
  3166  00054E  A4D8               	btfss	status,2,c
  3167  000550  0012               	return	
  3168                           
  3169                           ;Menu.c: 194:     NoFerMenu();
  3170  000552  ECC7  F00E         	call	_NoFerMenu	;wreg free
  3171                           
  3172                           ;Menu.c: 195:     NovaTecla = -1;
  3173  000556  685A               	setf	_NovaTecla^0,c
  3174                           
  3175                           ;Menu.c: 196:     LcClear();
  3176  000558  ECAF  F00D         	call	_LcClear	;wreg free
  3177                           
  3178                           ;Menu.c: 197:     LcNewString("TIME REMAINING:");
  3179  00055C  0E92               	movlw	low STR_5
  3180  00055E  6E6D               	movwf	LcNewString@new_s^0,c
  3181  000560  506D               	movf	LcNewString@new_s^0,w,c
  3182  000562  A4D8               	btfss	status,2,c
  3183  000564  0E02               	movlw	high __smallconst
  3184  000566  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  3185  000568  EC5C  F00E         	call	_LcNewString	;wreg free
  3186                           
  3187                           ;Menu.c: 198:     JJuguem(indexUsuari);
  3188  00056C  5026               	movf	_indexUsuari^0,w,c
  3189  00056E  EC80  F00E         	call	_JJuguem
  3190  000572                     l6309:
  3191                           
  3192                           ;Menu.c: 199:     state = 21;
  3193  000572  0E15               	movlw	21
  3194  000574  6E25               	movwf	menu@state^0,c
  3195  000576  0012               	return	
  3196  000578                     l6311:
  3197                           
  3198                           ;Menu.c: 203:    if (LcLliure()) {
  3199  000578  EC62  F00E         	call	_LcLliure	;wreg free
  3200  00057C  A0D8               	btfss	status,0,c
  3201  00057E  0012               	return	
  3202                           
  3203                           ;Menu.c: 204:     LcNewString(UgetUserName(indexUsuari));
  3204  000580  5026               	movf	_indexUsuari^0,w,c
  3205  000582  EC1B  F00E         	call	_UgetUserName
  3206  000586  C06A  F06D         	movff	?_UgetUserName,LcNewString@new_s
  3207  00058A  C06B  F06E         	movff	?_UgetUserName+1,LcNewString@new_s+1
  3208  00058E  EC5C  F00E         	call	_LcNewString	;wreg free
  3209                           
  3210                           ;Menu.c: 205:     TiResetTics(timerMenu);
  3211  000592  5028               	movf	_timerMenu^0,w,c
  3212  000594  EC04  F00E         	call	_TiResetTics
  3213                           
  3214                           ;Menu.c: 206:     state = 15;
  3215  000598  0E0F               	movlw	15
  3216  00059A  6E25               	movwf	menu@state^0,c
  3217  00059C  0012               	return	
  3218  00059E                     l6319:
  3219                           
  3220                           ;Menu.c: 210:    if (TiGetTics(timerMenu) > 2410) {
  3221  00059E  5028               	movf	_timerMenu^0,w,c
  3222  0005A0  EC87  F00D         	call	_TiGetTics
  3223  0005A4  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  3224  0005A6  0012               	return	
  3225  0005A8  0E6B               	movlw	107
  3226  0005AA  5C6A               	subwf	?_TiGetTics^0,w,c
  3227  0005AC  0E09               	movlw	9
  3228  0005AE  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  3229  0005B0  A0D8               	btfss	status,0,c
  3230  0005B2  0012               	return	
  3231  0005B4  D778               	goto	l6229
  3232  0005B6                     l6323:
  3233                           
  3234                           ;Menu.c: 215:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3235  0005B6  EC62  F00E         	call	_LcLliure	;wreg free
  3236  0005BA  B0D8               	btfsc	status,0,c
  3237  0005BC  BE5A               	btfsc	_NovaTecla^0,7,c
  3238  0005BE  D047               	goto	l6389
  3239  0005C0  505A               	movf	_NovaTecla^0,w,c
  3240  0005C2  0A80               	xorlw	128
  3241  0005C4  0F76               	addlw	-138
  3242  0005C6  B0D8               	btfsc	status,0,c
  3243  0005C8  D042               	goto	l6389
  3244                           
  3245                           ;Menu.c: 216:     LcGotoXY(0,1);
  3246  0005CA  0E01               	movlw	1
  3247  0005CC  6E72               	movwf	LcGotoXY@Row^0,c
  3248  0005CE  0E00               	movlw	0
  3249  0005D0  EC78  F00C         	call	_LcGotoXY
  3250                           
  3251                           ;Menu.c: 217:     horaTmp[0] = NovaTecla+48;
  3252  0005D4  505A               	movf	_NovaTecla^0,w,c
  3253  0005D6  0F30               	addlw	48
  3254  0005D8  6E40               	movwf	_horaTmp^0,c
  3255                           
  3256                           ;Menu.c: 218:     LcPutChar(horaTmp[0]);
  3257  0005DA  5040               	movf	_horaTmp^0,w,c
  3258  0005DC  EC2C  F00C         	call	_LcPutChar
  3259                           
  3260                           ;Menu.c: 219:     NovaTecla = -1;
  3261  0005E0  685A               	setf	_NovaTecla^0,c
  3262                           
  3263                           ;Menu.c: 220:     state = 17;
  3264  0005E2  0E11               	movlw	17
  3265  0005E4                     L1:
  3266  0005E4  6E25               	movwf	menu@state^0,c
  3267                           
  3268                           ;Menu.c: 221:    }
  3269  0005E6  0012               	return	
  3270  0005E8                     l6343:
  3271                           
  3272                           ;Menu.c: 227:    if (NovaTecla > -1 && NovaTecla < 10) {
  3273  0005E8  BE5A               	btfsc	_NovaTecla^0,7,c
  3274  0005EA  D031               	goto	l6389
  3275  0005EC  505A               	movf	_NovaTecla^0,w,c
  3276  0005EE  0A80               	xorlw	128
  3277  0005F0  0F76               	addlw	-138
  3278  0005F2  B0D8               	btfsc	status,0,c
  3279  0005F4  D02C               	goto	l6389
  3280                           
  3281                           ;Menu.c: 228:     horaTmp[1] = NovaTecla+48;
  3282  0005F6  505A               	movf	_NovaTecla^0,w,c
  3283  0005F8  0F30               	addlw	48
  3284  0005FA  6E41               	movwf	(_horaTmp+1)^0,c
  3285                           
  3286                           ;Menu.c: 229:     LcPutChar(horaTmp[1]);
  3287  0005FC  5041               	movf	(_horaTmp+1)^0,w,c
  3288  0005FE  EC2C  F00C         	call	_LcPutChar
  3289                           
  3290                           ;Menu.c: 230:     NovaTecla = -1;
  3291  000602  685A               	setf	_NovaTecla^0,c
  3292                           
  3293                           ;Menu.c: 231:     LcPutChar(':');
  3294  000604  0E3A               	movlw	58
  3295  000606  EC2C  F00C         	call	_LcPutChar
  3296                           
  3297                           ;Menu.c: 232:     state = 18;
  3298  00060A  0E12               	movlw	18
  3299  00060C  D7EB               	goto	L1
  3300  00060E                     l6361:
  3301                           
  3302                           ;Menu.c: 239:    if (NovaTecla > -1 && NovaTecla < 10) {
  3303  00060E  BE5A               	btfsc	_NovaTecla^0,7,c
  3304  000610  D01E               	goto	l6389
  3305  000612  505A               	movf	_NovaTecla^0,w,c
  3306  000614  0A80               	xorlw	128
  3307  000616  0F76               	addlw	-138
  3308  000618  B0D8               	btfsc	status,0,c
  3309  00061A  D019               	goto	l6389
  3310                           
  3311                           ;Menu.c: 240:     horaTmp[2] = NovaTecla+48;
  3312  00061C  505A               	movf	_NovaTecla^0,w,c
  3313  00061E  0F30               	addlw	48
  3314  000620  6E42               	movwf	(_horaTmp+2)^0,c
  3315                           
  3316                           ;Menu.c: 241:     LcPutChar(horaTmp[2]);
  3317  000622  5042               	movf	(_horaTmp+2)^0,w,c
  3318  000624  EC2C  F00C         	call	_LcPutChar
  3319                           
  3320                           ;Menu.c: 242:     NovaTecla = -1;
  3321  000628  685A               	setf	_NovaTecla^0,c
  3322                           
  3323                           ;Menu.c: 243:     state = 19;
  3324  00062A  0E13               	movlw	19
  3325  00062C  D7DB               	goto	L1
  3326  00062E                     l6377:
  3327                           
  3328                           ;Menu.c: 250:    if (NovaTecla > -1 && NovaTecla < 10) {
  3329  00062E  BE5A               	btfsc	_NovaTecla^0,7,c
  3330  000630  D00E               	goto	l6389
  3331  000632  505A               	movf	_NovaTecla^0,w,c
  3332  000634  0A80               	xorlw	128
  3333  000636  0F76               	addlw	-138
  3334  000638  B0D8               	btfsc	status,0,c
  3335  00063A  D009               	goto	l6389
  3336                           
  3337                           ;Menu.c: 251:     horaTmp[3] = NovaTecla+48;
  3338  00063C  505A               	movf	_NovaTecla^0,w,c
  3339  00063E  0F30               	addlw	48
  3340  000640  6E43               	movwf	(_horaTmp+3)^0,c
  3341                           
  3342                           ;Menu.c: 252:     LcPutChar(horaTmp[3]);
  3343  000642  5043               	movf	(_horaTmp+3)^0,w,c
  3344  000644  EC2C  F00C         	call	_LcPutChar
  3345                           
  3346                           ;Menu.c: 253:     NovaTecla = -1;
  3347  000648  685A               	setf	_NovaTecla^0,c
  3348                           
  3349                           ;Menu.c: 254:     state = 20;
  3350  00064A  0E14               	movlw	20
  3351  00064C  D7CB               	goto	L1
  3352  00064E                     l6389:
  3353  00064E  0E0A               	movlw	10
  3354  000650  185A               	xorwf	_NovaTecla^0,w,c
  3355  000652  A4D8               	btfss	status,2,c
  3356  000654  0012               	return	
  3357  000656  D724               	goto	l6223
  3358  000658                     l6393:
  3359                           
  3360                           ;Menu.c: 261:    if (NovaTecla == 11) {
  3361  000658  0E0B               	movlw	11
  3362  00065A  185A               	xorwf	_NovaTecla^0,w,c
  3363  00065C  A4D8               	btfss	status,2,c
  3364  00065E  D7F7               	goto	l6389
  3365                           
  3366                           ;Menu.c: 262:     HActualitzaHora(horaTmp);
  3367  000660  0E40               	movlw	low _horaTmp
  3368  000662  6E6A               	movwf	HActualitzaHora@nova^0,c
  3369  000664  EC0D  F00D         	call	_HActualitzaHora	;wreg free
  3370                           
  3371                           ;Menu.c: 263:     NovaTecla = -1;
  3372  000668  685A               	setf	_NovaTecla^0,c
  3373  00066A  D71A               	goto	l6223
  3374  00066C                     l6405:
  3375                           
  3376                           ;Menu.c: 271:    if (NovaTecla == 10 && LcLliure() || checkHoraAcabat()) {
  3377  00066C  0E0A               	movlw	10
  3378  00066E  185A               	xorwf	_NovaTecla^0,w,c
  3379  000670  A4D8               	btfss	status,2,c
  3380  000672  D004               	goto	u6580
  3381  000674  EC62  F00E         	call	_LcLliure	;wreg free
  3382  000678  B0D8               	btfsc	status,0,c
  3383  00067A  D004               	goto	u6590
  3384  00067C                     u6580:
  3385  00067C  EC4A  F00E         	call	_checkHoraAcabat	;wreg free
  3386  000680  A0D8               	btfss	status,0,c
  3387  000682  D007               	goto	l6417
  3388  000684                     u6590:
  3389                           
  3390                           ;Menu.c: 272:     LcClear();
  3391  000684  ECAF  F00D         	call	_LcClear	;wreg free
  3392                           
  3393                           ;Menu.c: 273:     JendGame();
  3394  000688  ECC9  F00E         	call	_JendGame	;wreg free
  3395                           
  3396                           ;Menu.c: 274:     state = 22;
  3397  00068C  0E16               	movlw	22
  3398  00068E  6E25               	movwf	menu@state^0,c
  3399                           
  3400                           ;Menu.c: 275:    }
  3401  000690  0012               	return	
  3402  000692                     l6417:
  3403  000692  505A               	movf	_NovaTecla^0,w,c
  3404  000694  0A80               	xorlw	128
  3405  000696  0F7F               	addlw	-129
  3406  000698  A0D8               	btfss	status,0,c
  3407  00069A  D00A               	goto	l6427
  3408  00069C  505A               	movf	_NovaTecla^0,w,c
  3409  00069E  0A80               	xorlw	128
  3410  0006A0  0F76               	addlw	-138
  3411  0006A2  B0D8               	btfsc	status,0,c
  3412  0006A4  D005               	goto	l6427
  3413                           
  3414                           ;Menu.c: 277:     JnovaTecla(NovaTecla);
  3415  0006A6  505A               	movf	_NovaTecla^0,w,c
  3416  0006A8  EC78  F00E         	call	_JnovaTecla
  3417                           
  3418                           ;Menu.c: 278:     NovaTecla = -1;
  3419  0006AC  685A               	setf	_NovaTecla^0,c
  3420  0006AE  D761               	goto	l6309
  3421  0006B0                     l6427:
  3422  0006B0  BE58               	btfsc	_novaDireccio^0,7,c
  3423  0006B2  0012               	return	
  3424                           
  3425                           ;Menu.c: 282:     JnovaDireccio(novaDireccio);
  3426  0006B4  5058               	movf	_novaDireccio^0,w,c
  3427  0006B6  EC7C  F00E         	call	_JnovaDireccio
  3428                           
  3429                           ;Menu.c: 283:     novaDireccio = -1;
  3430  0006BA  6858               	setf	_novaDireccio^0,c
  3431  0006BC  D75A               	goto	l6309
  3432  0006BE                     l6437:
  3433  0006BE  5025               	movf	menu@state^0,w,c
  3434  0006C0  6E75               	movwf	??_menu^0,c
  3435  0006C2  6A76               	clrf	(??_menu+1)^0,c
  3436                           
  3437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3438                           ; Switch size 1, requested type "simple"
  3439                           ; Number of cases is 1, Range of values is 0 to 0
  3440                           ; switch strategies available:
  3441                           ; Name         Instructions Cycles
  3442                           ; simple_byte            4     3 (average)
  3443                           ;	Chosen strategy is simple_byte
  3444  0006C4  5076               	movf	(??_menu+1)^0,w,c
  3445  0006C6  0A00               	xorlw	0	; case 0
  3446  0006C8  A4D8               	btfss	status,2,c
  3447  0006CA  0012               	return	
  3448                           
  3449                           ; Switch size 1, requested type "simple"
  3450                           ; Number of cases is 23, Range of values is 0 to 22
  3451                           ; switch strategies available:
  3452                           ; Name         Instructions Cycles
  3453                           ; simple_byte           70    36 (average)
  3454                           ;	Chosen strategy is simple_byte
  3455  0006CC  5075               	movf	??_menu^0,w,c
  3456  0006CE  0A00               	xorlw	0	; case 0
  3457  0006D0  B4D8               	btfsc	status,2,c
  3458  0006D2  D5FB               	goto	l6077
  3459  0006D4  0A01               	xorlw	1	; case 1
  3460  0006D6  B4D8               	btfsc	status,2,c
  3461  0006D8  D602               	goto	l6083
  3462  0006DA  0A03               	xorlw	3	; case 2
  3463  0006DC  B4D8               	btfsc	status,2,c
  3464  0006DE  D611               	goto	l6093
  3465  0006E0  0A01               	xorlw	1	; case 3
  3466  0006E2  B4D8               	btfsc	status,2,c
  3467  0006E4  D620               	goto	l489
  3468  0006E6  0A07               	xorlw	7	; case 4
  3469  0006E8  B4D8               	btfsc	status,2,c
  3470  0006EA  D62C               	goto	l6113
  3471  0006EC  0A01               	xorlw	1	; case 5
  3472  0006EE  B4D8               	btfsc	status,2,c
  3473  0006F0  D63D               	goto	l6121
  3474  0006F2  0A03               	xorlw	3	; case 6
  3475  0006F4  B4D8               	btfsc	status,2,c
  3476  0006F6  D64A               	goto	l6131
  3477  0006F8  0A01               	xorlw	1	; case 7
  3478  0006FA  B4D8               	btfsc	status,2,c
  3479  0006FC  D660               	goto	l6145
  3480  0006FE  0A0F               	xorlw	15	; case 8
  3481  000700  B4D8               	btfsc	status,2,c
  3482  000702  D682               	goto	l6173
  3483  000704  0A01               	xorlw	1	; case 9
  3484  000706  B4D8               	btfsc	status,2,c
  3485  000708  D698               	goto	l6187
  3486  00070A  0A03               	xorlw	3	; case 10
  3487  00070C  B4D8               	btfsc	status,2,c
  3488  00070E  D6B9               	goto	l6217
  3489  000710  0A01               	xorlw	1	; case 11
  3490  000712  B4D8               	btfsc	status,2,c
  3491  000714  D6C5               	goto	l6223
  3492  000716  0A07               	xorlw	7	; case 12
  3493  000718  B4D8               	btfsc	status,2,c
  3494  00071A  D6C8               	goto	l6241
  3495  00071C  0A01               	xorlw	1	; case 13
  3496  00071E  B4D8               	btfsc	status,2,c
  3497  000720  D6D1               	goto	l6253
  3498  000722  0A03               	xorlw	3	; case 14
  3499  000724  B4D8               	btfsc	status,2,c
  3500  000726  D728               	goto	l6311
  3501  000728  0A01               	xorlw	1	; case 15
  3502  00072A  B4D8               	btfsc	status,2,c
  3503  00072C  D738               	goto	l6319
  3504  00072E  0A1F               	xorlw	31	; case 16
  3505  000730  B4D8               	btfsc	status,2,c
  3506  000732  D741               	goto	l6323
  3507  000734  0A01               	xorlw	1	; case 17
  3508  000736  B4D8               	btfsc	status,2,c
  3509  000738  D757               	goto	l6343
  3510  00073A  0A03               	xorlw	3	; case 18
  3511  00073C  B4D8               	btfsc	status,2,c
  3512  00073E  D767               	goto	l6361
  3513  000740  0A01               	xorlw	1	; case 19
  3514  000742  B4D8               	btfsc	status,2,c
  3515  000744  D774               	goto	l6377
  3516  000746  0A07               	xorlw	7	; case 20
  3517  000748  B4D8               	btfsc	status,2,c
  3518  00074A  D786               	goto	l6393
  3519  00074C  0A01               	xorlw	1	; case 21
  3520  00074E  B4D8               	btfsc	status,2,c
  3521  000750  D78D               	goto	l6405
  3522  000752  0A03               	xorlw	3	; case 22
  3523  000754  0012               	return	
  3524  000756                     __end_of_menu:
  3525                           	callstack 0
  3526                           
  3527 ;; *************** function _checkHoraAcabat *****************
  3528 ;; Defined at:
  3529 ;;		line 41 in file "Hora.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;		None               void
  3536 ;; Registers used:
  3537 ;;		status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/1
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1
  3543 ;;      Params:         0       0       0
  3544 ;;      Locals:         0       0       0
  3545 ;;      Temps:          0       0       0
  3546 ;;      Totals:         0       0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 2
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_menu
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text18
  3558  001C94                     __ptext18:
  3559                           	callstack 0
  3560  001C94                     _checkHoraAcabat:
  3561                           	callstack 27
  3562                           
  3563                           ;Hora.c: 42:     return tempsAcabat;
  3564                           
  3565                           ;incstack = 0
  3566  001C94  B677               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  3567  001C96  D002               	goto	l4029
  3568  001C98  90D8               	bcf	status,0,c
  3569  001C9A  0012               	return	
  3570  001C9C                     l4029:
  3571  001C9C  80D8               	bsf	status,0,c
  3572  001C9E  0012               	return		;funcret
  3573  001CA0                     __end_of_checkHoraAcabat:
  3574                           	callstack 0
  3575                           
  3576 ;; *************** function _UgetUserName *****************
  3577 ;; Defined at:
  3578 ;;		line 27 in file "Usuaris.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  quin            1    wreg     unsigned char 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  quin            1    7[COMRAM] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  2    5[COMRAM] PTR unsigned char 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0, prodl, prodh
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/1
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1
  3592 ;;      Params:         2       0       0
  3593 ;;      Locals:         1       0       0
  3594 ;;      Temps:          0       0       0
  3595 ;;      Totals:         3       0       0
  3596 ;;Total ram usage:        3 bytes
  3597 ;; Hardware stack levels used: 1
  3598 ;; Hardware stack levels required when called: 2
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_menu
  3603 ;;		_motorSIO
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text19
  3608  001C36                     __ptext19:
  3609                           	callstack 0
  3610  001C36                     _UgetUserName:
  3611                           	callstack 27
  3612                           
  3613                           ;incstack = 0
  3614                           ;UgetUserName@quin stored from wreg
  3615  001C36  6E6C               	movwf	UgetUserName@quin^0,c
  3616                           
  3617                           ;Usuaris.c: 28:     return usuaris[quin].username;
  3618  001C38  506C               	movf	UgetUserName@quin^0,w,c
  3619  001C3A  0D17               	mullw	23
  3620  001C3C  0E00               	movlw	low _usuaris
  3621  001C3E  24F3               	addwf	243,w,c
  3622  001C40  6E6A               	movwf	?_UgetUserName^0,c
  3623  001C42  0E01               	movlw	high _usuaris
  3624  001C44  20F4               	addwfc	prodh,w,c
  3625  001C46  6E6B               	movwf	(?_UgetUserName+1)^0,c
  3626  001C48  0012               	return		;funcret
  3627  001C4A                     __end_of_UgetUserName:
  3628                           	callstack 0
  3629                           
  3630 ;; *************** function _UgetNumUsuaris *****************
  3631 ;; Defined at:
  3632 ;;		line 30 in file "Usuaris.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      unsigned char 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/1
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1
  3646 ;;      Params:         0       0       0
  3647 ;;      Locals:         0       0       0
  3648 ;;      Temps:          0       0       0
  3649 ;;      Totals:         0       0       0
  3650 ;;Total ram usage:        0 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 2
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_menu
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text20
  3661  001D7E                     __ptext20:
  3662                           	callstack 0
  3663  001D7E                     _UgetNumUsuaris:
  3664                           	callstack 27
  3665                           
  3666                           ;Usuaris.c: 31:     return numUsuaris;
  3667                           
  3668                           ;incstack = 0
  3669  001D7E  5023               	movf	_numUsuaris^0,w,c
  3670  001D80  0012               	return		;funcret
  3671  001D82                     __end_of_UgetNumUsuaris:
  3672                           	callstack 0
  3673                           
  3674 ;; *************** function _UenviaPas *****************
  3675 ;; Defined at:
  3676 ;;		line 46 in file "Usuaris.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  c               1    wreg     unsigned char 
  3679 ;;  pos             1    5[COMRAM] unsigned char 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  c               1    6[COMRAM] unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/1
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1
  3691 ;;      Params:         1       0       0
  3692 ;;      Locals:         1       0       0
  3693 ;;      Temps:          0       0       0
  3694 ;;      Totals:         2       0       0
  3695 ;;Total ram usage:        2 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; Hardware stack levels required when called: 2
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_menu
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text21
  3706  001C5C                     __ptext21:
  3707                           	callstack 0
  3708  001C5C                     _UenviaPas:
  3709                           	callstack 27
  3710                           
  3711                           ;incstack = 0
  3712                           ;UenviaPas@c stored from wreg
  3713  001C5C  6E6B               	movwf	UenviaPas@c^0,c
  3714                           
  3715                           ;Usuaris.c: 47:     tmpPassword[pos] = c;
  3716  001C5E  506A               	movf	UenviaPas@pos^0,w,c
  3717  001C60  0F98               	addlw	low _tmpPassword
  3718  001C62  6ED9               	movwf	fsr2l,c
  3719  001C64  6ADA               	clrf	fsr2h,c
  3720  001C66  C06B  FFDF         	movff	UenviaPas@c,indf2
  3721  001C6A  0012               	return		;funcret
  3722  001C6C                     __end_of_UenviaPas:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _UenviaChar *****************
  3726 ;; Defined at:
  3727 ;;		line 43 in file "Usuaris.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  c               1    wreg     unsigned char 
  3730 ;;  pos             1    5[COMRAM] unsigned char 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  c               1    6[COMRAM] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/1
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1
  3742 ;;      Params:         1       0       0
  3743 ;;      Locals:         1       0       0
  3744 ;;      Temps:          0       0       0
  3745 ;;      Totals:         2       0       0
  3746 ;;Total ram usage:        2 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 2
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_menu
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text22
  3757  001C6C                     __ptext22:
  3758                           	callstack 0
  3759  001C6C                     _UenviaChar:
  3760                           	callstack 27
  3761                           
  3762                           ;incstack = 0
  3763                           ;UenviaChar@c stored from wreg
  3764  001C6C  6E6B               	movwf	UenviaChar@c^0,c
  3765                           
  3766                           ;Usuaris.c: 44:     tmpUsername[pos] = c;
  3767  001C6E  506A               	movf	UenviaChar@pos^0,w,c
  3768  001C70  0F37               	addlw	low _tmpUsername
  3769  001C72  6ED9               	movwf	fsr2l,c
  3770  001C74  6ADA               	clrf	fsr2h,c
  3771  001C76  C06B  FFDF         	movff	UenviaChar@c,indf2
  3772  001C7A  0012               	return		;funcret
  3773  001C7C                     __end_of_UenviaChar:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function _UcheckExistsNotFinished *****************
  3777 ;; Defined at:
  3778 ;;		line 37 in file "Usuaris.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;		None               void
  3785 ;; Registers used:
  3786 ;;		status,0
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/1
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1
  3792 ;;      Params:         0       0       0
  3793 ;;      Locals:         0       0       0
  3794 ;;      Temps:          0       0       0
  3795 ;;      Totals:         0       0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 2
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_menu
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text23
  3807  001CA0                     __ptext23:
  3808                           	callstack 0
  3809  001CA0                     _UcheckExistsNotFinished:
  3810                           	callstack 27
  3811                           
  3812                           ;Usuaris.c: 38:     return do_check_exists;
  3813                           
  3814                           ;incstack = 0
  3815  001CA0  BA78               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  3816  001CA2  D002               	goto	l3991
  3817  001CA4  90D8               	bcf	status,0,c
  3818  001CA6  0012               	return	
  3819  001CA8                     l3991:
  3820  001CA8  80D8               	bsf	status,0,c
  3821  001CAA  0012               	return		;funcret
  3822  001CAC                     __end_of_UcheckExistsNotFinished:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _UcheckExistsGetError *****************
  3826 ;; Defined at:
  3827 ;;		line 40 in file "Usuaris.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;		None               void
  3834 ;; Registers used:
  3835 ;;		wreg, status,0
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/1
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1
  3841 ;;      Params:         0       0       0
  3842 ;;      Locals:         0       0       0
  3843 ;;      Temps:          1       0       0
  3844 ;;      Totals:         1       0       0
  3845 ;;Total ram usage:        1 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 2
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_menu
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text24
  3856  001CE8                     __ptext24:
  3857                           	callstack 0
  3858  001CE8                     _UcheckExistsGetError:
  3859                           	callstack 27
  3860                           
  3861                           ;Usuaris.c: 41:     return usuariLoguejat;
  3862                           
  3863                           ;incstack = 0
  3864  001CE8  C057  F06A         	movff	_usuariLoguejat,??_UcheckExistsGetError
  3865  001CEC  306A               	rrcf	??_UcheckExistsGetError^0,w,c
  3866  001CEE  0012               	return		;funcret
  3867  001CF0                     __end_of_UcheckExistsGetError:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function _UcheckExists *****************
  3871 ;; Defined at:
  3872 ;;		line 34 in file "Usuaris.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		None
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/1
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1
  3886 ;;      Params:         0       0       0
  3887 ;;      Locals:         0       0       0
  3888 ;;      Temps:          0       0       0
  3889 ;;      Totals:         0       0       0
  3890 ;;Total ram usage:        0 bytes
  3891 ;; Hardware stack levels used: 1
  3892 ;; Hardware stack levels required when called: 2
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_menu
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text25
  3901  001D82                     __ptext25:
  3902                           	callstack 0
  3903  001D82                     _UcheckExists:
  3904                           	callstack 27
  3905                           
  3906                           ;Usuaris.c: 35:     do_check_exists = 1;
  3907                           
  3908                           ;incstack = 0
  3909  001D82  8A78               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  3910  001D84  0012               	return		;funcret
  3911  001D86                     __end_of_UcheckExists:
  3912                           	callstack 0
  3913                           
  3914 ;; *************** function _URegister *****************
  3915 ;; Defined at:
  3916 ;;		line 54 in file "Usuaris.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		None
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1
  3930 ;;      Params:         0       0       0
  3931 ;;      Locals:         0       0       0
  3932 ;;      Temps:          0       0       0
  3933 ;;      Totals:         0       0       0
  3934 ;;Total ram usage:        0 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; Hardware stack levels required when called: 2
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_menu
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text26
  3945  001D86                     __ptext26:
  3946                           	callstack 0
  3947  001D86                     _URegister:
  3948                           	callstack 27
  3949                           
  3950                           ;Usuaris.c: 55:     do_register = 1;
  3951                           
  3952                           ;incstack = 0
  3953  001D86  8878               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  3954  001D88  0012               	return		;funcret
  3955  001D8A                     __end_of_URegister:
  3956                           	callstack 0
  3957                           
  3958 ;; *************** function _SiFerMenu *****************
  3959 ;; Defined at:
  3960 ;;		line 19 in file "GestioLCD.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		None
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/1
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1
  3974 ;;      Params:         0       0       0
  3975 ;;      Locals:         0       0       0
  3976 ;;      Temps:          0       0       0
  3977 ;;      Totals:         0       0       0
  3978 ;;Total ram usage:        0 bytes
  3979 ;; Hardware stack levels used: 1
  3980 ;; Hardware stack levels required when called: 2
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_menu
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text27
  3989  001D8A                     __ptext27:
  3990                           	callstack 0
  3991  001D8A                     _SiFerMenu:
  3992                           	callstack 27
  3993                           
  3994                           ;GestioLCD.c: 20:     ferMenu = 1;
  3995                           
  3996                           ;incstack = 0
  3997  001D8A  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  3998  001D8C  0012               	return		;funcret
  3999  001D8E                     __end_of_SiFerMenu:
  4000                           	callstack 0
  4001                           
  4002 ;; *************** function _SMSon *****************
  4003 ;; Defined at:
  4004 ;;		line 130 in file "Ssms.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		None
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/1
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1
  4018 ;;      Params:         0       0       0
  4019 ;;      Locals:         0       0       0
  4020 ;;      Temps:          0       0       0
  4021 ;;      Totals:         0       0       0
  4022 ;;Total ram usage:        0 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 2
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_menu
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text28
  4033  001D5E                     __ptext28:
  4034                           	callstack 0
  4035  001D5E                     _SMSon:
  4036                           	callstack 27
  4037                           
  4038                           ;Ssms.c: 131:     setSMSon = 1;
  4039                           
  4040                           ;incstack = 0
  4041  001D5E  8E78               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4042                           
  4043                           ;Ssms.c: 132:     novaTecla = -1;
  4044  001D60  685D               	setf	_novaTecla^0,c
  4045  001D62  0012               	return		;funcret
  4046  001D64                     __end_of_SMSon:
  4047                           	callstack 0
  4048                           
  4049 ;; *************** function _SMSoff *****************
  4050 ;; Defined at:
  4051 ;;		line 135 in file "Ssms.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		None
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/1
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1
  4065 ;;      Params:         0       0       0
  4066 ;;      Locals:         0       0       0
  4067 ;;      Temps:          0       0       0
  4068 ;;      Totals:         0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; Hardware stack levels required when called: 2
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_menu
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text29
  4080  001D64                     __ptext29:
  4081                           	callstack 0
  4082  001D64                     _SMSoff:
  4083                           	callstack 27
  4084                           
  4085                           ;Ssms.c: 136:     setSMSon = 0;
  4086                           
  4087                           ;incstack = 0
  4088  001D64  9E78               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4089                           
  4090                           ;Ssms.c: 137:     novaTecla = -1;
  4091  001D66  685D               	setf	_novaTecla^0,c
  4092  001D68  0012               	return		;funcret
  4093  001D6A                     __end_of_SMSoff:
  4094                           	callstack 0
  4095                           
  4096 ;; *************** function _NoFerMenu *****************
  4097 ;; Defined at:
  4098 ;;		line 22 in file "GestioLCD.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		None
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/1
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1
  4112 ;;      Params:         0       0       0
  4113 ;;      Locals:         0       0       0
  4114 ;;      Temps:          0       0       0
  4115 ;;      Totals:         0       0       0
  4116 ;;Total ram usage:        0 bytes
  4117 ;; Hardware stack levels used: 1
  4118 ;; Hardware stack levels required when called: 2
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_menu
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text30
  4127  001D8E                     __ptext30:
  4128                           	callstack 0
  4129  001D8E                     _NoFerMenu:
  4130                           	callstack 27
  4131                           
  4132                           ;GestioLCD.c: 23:     ferMenu = 0;
  4133                           
  4134                           ;incstack = 0
  4135  001D8E  9278               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4136  001D90  0012               	return		;funcret
  4137  001D92                     __end_of_NoFerMenu:
  4138                           	callstack 0
  4139                           
  4140 ;; *************** function _JnovaTecla *****************
  4141 ;; Defined at:
  4142 ;;		line 16 in file "Joc.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  tecla           1    wreg     char 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  tecla           1    5[COMRAM] char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/1
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1
  4156 ;;      Params:         0       0       0
  4157 ;;      Locals:         1       0       0
  4158 ;;      Temps:          0       0       0
  4159 ;;      Totals:         1       0       0
  4160 ;;Total ram usage:        1 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 2
  4163 ;; This function calls:
  4164 ;;		Nothing
  4165 ;; This function is called by:
  4166 ;;		_menu
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text31
  4171  001CF0                     __ptext31:
  4172                           	callstack 0
  4173  001CF0                     _JnovaTecla:
  4174                           	callstack 27
  4175                           
  4176                           ;incstack = 0
  4177                           ;JnovaTecla@tecla stored from wreg
  4178  001CF0  6E6A               	movwf	JnovaTecla@tecla^0,c
  4179                           
  4180                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  4181  001CF2  C06A  F053         	movff	JnovaTecla@tecla,_novaTeclaJOC
  4182  001CF6  0012               	return		;funcret
  4183  001CF8                     __end_of_JnovaTecla:
  4184                           	callstack 0
  4185                           
  4186 ;; *************** function _JnovaDireccio *****************
  4187 ;; Defined at:
  4188 ;;		line 19 in file "Joc.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  dir             1    wreg     unsigned char 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  dir             1    5[COMRAM] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/1
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1
  4202 ;;      Params:         0       0       0
  4203 ;;      Locals:         1       0       0
  4204 ;;      Temps:          0       0       0
  4205 ;;      Totals:         1       0       0
  4206 ;;Total ram usage:        1 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 2
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_menu
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text32
  4217  001CF8                     __ptext32:
  4218                           	callstack 0
  4219  001CF8                     _JnovaDireccio:
  4220                           	callstack 27
  4221                           
  4222                           ;incstack = 0
  4223                           ;JnovaDireccio@dir stored from wreg
  4224  001CF8  6E6A               	movwf	JnovaDireccio@dir^0,c
  4225                           
  4226                           ;Joc.c: 20:     direccioJoc = dir;
  4227  001CFA  C06A  F00A         	movff	JnovaDireccio@dir,_direccioJoc
  4228  001CFE  0012               	return		;funcret
  4229  001D00                     __end_of_JnovaDireccio:
  4230                           	callstack 0
  4231                           
  4232 ;; *************** function _JendGame *****************
  4233 ;; Defined at:
  4234 ;;		line 27 in file "Joc.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		None
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/1
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1
  4248 ;;      Params:         0       0       0
  4249 ;;      Locals:         0       0       0
  4250 ;;      Temps:          0       0       0
  4251 ;;      Totals:         0       0       0
  4252 ;;Total ram usage:        0 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; Hardware stack levels required when called: 2
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_menu
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text33
  4263  001D92                     __ptext33:
  4264                           	callstack 0
  4265  001D92                     _JendGame:
  4266                           	callstack 27
  4267                           
  4268                           ;Joc.c: 28:     jugantJoc = 0;
  4269                           
  4270                           ;incstack = 0
  4271  001D92  9477               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  4272  001D94  0012               	return		;funcret
  4273  001D96                     __end_of_JendGame:
  4274                           	callstack 0
  4275                           
  4276 ;; *************** function _JJuguem *****************
  4277 ;; Defined at:
  4278 ;;		line 13 in file "Joc.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  usuari          1    wreg     unsigned char 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  usuari          1    5[COMRAM] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      void 
  4285 ;; Registers used:
  4286 ;;		wreg
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/1
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1
  4292 ;;      Params:         0       0       0
  4293 ;;      Locals:         1       0       0
  4294 ;;      Temps:          0       0       0
  4295 ;;      Totals:         1       0       0
  4296 ;;Total ram usage:        1 bytes
  4297 ;; Hardware stack levels used: 1
  4298 ;; Hardware stack levels required when called: 2
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_menu
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text34
  4307  001D00                     __ptext34:
  4308                           	callstack 0
  4309  001D00                     _JJuguem:
  4310                           	callstack 27
  4311                           
  4312                           ;incstack = 0
  4313                           ;JJuguem@usuari stored from wreg
  4314  001D00  6E6A               	movwf	JJuguem@usuari^0,c
  4315                           
  4316                           ;Joc.c: 14:     usuariJoc = usuari;
  4317  001D02  C06A  F054         	movff	JJuguem@usuari,_usuariJoc
  4318  001D06  0012               	return		;funcret
  4319  001D08                     __end_of_JJuguem:
  4320                           	callstack 0
  4321                           
  4322 ;; *************** function _HActualitzaHora *****************
  4323 ;; Defined at:
  4324 ;;		line 15 in file "Hora.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  nova            1    5[COMRAM] PTR unsigned char 
  4327 ;;		 -> horaTmp(4), 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/1
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1
  4339 ;;      Params:         1       0       0
  4340 ;;      Locals:         0       0       0
  4341 ;;      Temps:          0       0       0
  4342 ;;      Totals:         1       0       0
  4343 ;;Total ram usage:        1 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; Hardware stack levels required when called: 2
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_menu
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text35
  4354  001A1A                     __ptext35:
  4355                           	callstack 0
  4356  001A1A                     _HActualitzaHora:
  4357                           	callstack 27
  4358                           
  4359                           ;Hora.c: 16:     hora[0] = nova[0];
  4360                           
  4361                           ;incstack = 0
  4362  001A1A  506A               	movf	HActualitzaHora@nova^0,w,c
  4363  001A1C  6ED9               	movwf	fsr2l,c
  4364  001A1E  6ADA               	clrf	fsr2h,c
  4365  001A20  50DF               	movf	indf2,w,c
  4366  001A22  6E5F               	movwf	_hora^0,c
  4367                           
  4368                           ;Hora.c: 17:     hora[1] = nova[1];
  4369  001A24  506A               	movf	HActualitzaHora@nova^0,w,c
  4370  001A26  6ED9               	movwf	fsr2l,c
  4371  001A28  6ADA               	clrf	fsr2h,c
  4372  001A2A  0E01               	movlw	1
  4373  001A2C  26D9               	addwf	fsr2l,f,c
  4374  001A2E  50DF               	movf	indf2,w,c
  4375  001A30  6E60               	movwf	(_hora+1)^0,c
  4376                           
  4377                           ;Hora.c: 18:     hora[3] = nova[2];
  4378  001A32  506A               	movf	HActualitzaHora@nova^0,w,c
  4379  001A34  6ED9               	movwf	fsr2l,c
  4380  001A36  6ADA               	clrf	fsr2h,c
  4381  001A38  0E02               	movlw	2
  4382  001A3A  26D9               	addwf	fsr2l,f,c
  4383  001A3C  50DF               	movf	indf2,w,c
  4384  001A3E  6E62               	movwf	(_hora+3)^0,c
  4385                           
  4386                           ;Hora.c: 19:     hora[4] = nova[3];
  4387  001A40  506A               	movf	HActualitzaHora@nova^0,w,c
  4388  001A42  6ED9               	movwf	fsr2l,c
  4389  001A44  6ADA               	clrf	fsr2h,c
  4390  001A46  0E03               	movlw	3
  4391  001A48  26D9               	addwf	fsr2l,f,c
  4392  001A4A  50DF               	movf	indf2,w,c
  4393  001A4C  6E63               	movwf	(_hora+4)^0,c
  4394  001A4E  0012               	return		;funcret
  4395  001A50                     __end_of_HActualitzaHora:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _GLCDMostraMenu *****************
  4399 ;; Defined at:
  4400 ;;		line 30 in file "GestioLCD.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  num             1    wreg     unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  num             1    5[COMRAM] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/1
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1
  4414 ;;      Params:         0       0       0
  4415 ;;      Locals:         1       0       0
  4416 ;;      Temps:          0       0       0
  4417 ;;      Totals:         1       0       0
  4418 ;;Total ram usage:        1 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 2
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_menu
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text36
  4429  001CAC                     __ptext36:
  4430                           	callstack 0
  4431  001CAC                     _GLCDMostraMenu:
  4432                           	callstack 27
  4433                           
  4434                           ;incstack = 0
  4435                           ;GLCDMostraMenu@num stored from wreg
  4436  001CAC  6E6A               	movwf	GLCDMostraMenu@num^0,c
  4437                           
  4438                           ;GestioLCD.c: 31:     newString = 1;
  4439  001CAE  8078               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  4440                           
  4441                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  4442  001CB0  C06A  F018         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  4443                           
  4444                           ;GestioLCD.c: 33:     ferMenu = 1;
  4445  001CB4  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4446  001CB6  0012               	return		;funcret
  4447  001CB8                     __end_of_GLCDMostraMenu:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function _init_ports *****************
  4451 ;; Defined at:
  4452 ;;		line 25 in file "main.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;		None
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;		None
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  1    wreg      void 
  4459 ;; Registers used:
  4460 ;;		wreg, status,2
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1
  4466 ;;      Params:         0       0       0
  4467 ;;      Locals:         0       0       0
  4468 ;;      Temps:          0       0       0
  4469 ;;      Totals:         0       0       0
  4470 ;;Total ram usage:        0 bytes
  4471 ;; Hardware stack levels used: 1
  4472 ;; Hardware stack levels required when called: 2
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_main
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text37
  4481  001BC8                     __ptext37:
  4482                           	callstack 0
  4483  001BC8                     _init_ports:
  4484                           	callstack 28
  4485                           
  4486                           ;incstack = 0
  4487  001BC8  0E03               	movlw	3
  4488  001BCA  6E92               	movwf	146,c	;volatile
  4489  001BCC  0EE0               	movlw	224
  4490  001BCE  6E93               	movwf	147,c	;volatile
  4491  001BD0  968A               	bcf	138,3,c	;volatile
  4492  001BD2  908A               	bcf	138,0,c	;volatile
  4493  001BD4  928A               	bcf	138,1,c	;volatile
  4494                           
  4495                           ;main.c: 48:     TRISC = 0xC0;
  4496  001BD6  0EC0               	movlw	192
  4497  001BD8  6E94               	movwf	148,c	;volatile
  4498                           
  4499                           ;main.c: 58:     TRISD = 0x8F;
  4500  001BDA  0E8F               	movlw	143
  4501  001BDC  6E95               	movwf	149,c	;volatile
  4502                           
  4503                           ;main.c: 59:     LATD = 0x00;
  4504  001BDE  0E00               	movlw	0
  4505  001BE0  6E8C               	movwf	140,c	;volatile
  4506                           
  4507                           ;main.c: 62:     EECON1bits.EEPGD = 1;
  4508  001BE2  8EA6               	bsf	166,7,c	;volsfr
  4509                           
  4510                           ;main.c: 63:     EECON1bits.CFGS = 0;
  4511  001BE4  9CA6               	bcf	166,6,c	;volsfr
  4512  001BE6  0012               	return		;funcret
  4513  001BE8                     __end_of_init_ports:
  4514                           	callstack 0
  4515                           
  4516 ;; *************** function _init_eusart *****************
  4517 ;; Defined at:
  4518 ;;		line 66 in file "main.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;		None
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;		None
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      void 
  4525 ;; Registers used:
  4526 ;;		wreg, status,2
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1
  4532 ;;      Params:         0       0       0
  4533 ;;      Locals:         0       0       0
  4534 ;;      Temps:          0       0       0
  4535 ;;      Totals:         0       0       0
  4536 ;;Total ram usage:        0 bytes
  4537 ;; Hardware stack levels used: 1
  4538 ;; Hardware stack levels required when called: 2
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_main
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text38
  4547  001C20                     __ptext38:
  4548                           	callstack 0
  4549  001C20                     _init_eusart:
  4550                           	callstack 28
  4551                           
  4552                           ;main.c: 67:     TXSTA = 0x24;
  4553                           
  4554                           ;incstack = 0
  4555  001C20  0E24               	movlw	36
  4556  001C22  6EAC               	movwf	172,c	;volatile
  4557                           
  4558                           ;main.c: 68:     RCSTA = 0x90;
  4559  001C24  0E90               	movlw	144
  4560  001C26  6EAB               	movwf	171,c	;volatile
  4561                           
  4562                           ;main.c: 69:     BAUDCON = 0x08;
  4563  001C28  0E08               	movlw	8
  4564  001C2A  6EB8               	movwf	184,c	;volatile
  4565                           
  4566                           ;main.c: 70:     SPBRGH = 0x04;
  4567  001C2C  0E04               	movlw	4
  4568  001C2E  6EB0               	movwf	176,c	;volatile
  4569                           
  4570                           ;main.c: 71:     SPBRG = 0x10;
  4571  001C30  0E10               	movlw	16
  4572  001C32  6EAF               	movwf	175,c	;volatile
  4573  001C34  0012               	return		;funcret
  4574  001C36                     __end_of_init_eusart:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function _initHora *****************
  4578 ;; Defined at:
  4579 ;;		line 11 in file "Hora.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1
  4593 ;;      Params:         0       0       0
  4594 ;;      Locals:         0       0       0
  4595 ;;      Temps:          0       0       0
  4596 ;;      Totals:         0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 3
  4600 ;; This function calls:
  4601 ;;		_TiGetTimer
  4602 ;; This function is called by:
  4603 ;;		_main
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text39
  4608  001D08                     __ptext39:
  4609                           	callstack 0
  4610  001D08                     _initHora:
  4611                           	callstack 27
  4612                           
  4613                           ;Hora.c: 12:     timerHora = TiGetTimer();
  4614                           
  4615                           ;incstack = 0
  4616  001D08  ECB9  F00C         	call	_TiGetTimer	;wreg free
  4617  001D0C  6E0D               	movwf	_timerHora^0,c
  4618  001D0E  0012               	return		;funcret
  4619  001D10                     __end_of_initHora:
  4620                           	callstack 0
  4621                           
  4622 ;; *************** function _initAltaveu *****************
  4623 ;; Defined at:
  4624 ;;		line 10 in file "Altaveu.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1
  4638 ;;      Params:         0       0       0
  4639 ;;      Locals:         0       0       0
  4640 ;;      Temps:          0       0       0
  4641 ;;      Totals:         0       0       0
  4642 ;;Total ram usage:        0 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; Hardware stack levels required when called: 3
  4645 ;; This function calls:
  4646 ;;		_TiGetTimer
  4647 ;; This function is called by:
  4648 ;;		_main
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text40
  4653  001D10                     __ptext40:
  4654                           	callstack 0
  4655  001D10                     _initAltaveu:
  4656                           	callstack 27
  4657                           
  4658                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  4659                           
  4660                           ;incstack = 0
  4661  001D10  ECB9  F00C         	call	_TiGetTimer	;wreg free
  4662  001D14  6E1C               	movwf	_timerAltaveu^0,c
  4663  001D16  0012               	return		;funcret
  4664  001D18                     __end_of_initAltaveu:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function _escriureEEPROM *****************
  4668 ;; Defined at:
  4669 ;;		line 208 in file "Usuaris.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  caca            1    5[COMRAM] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1
  4683 ;;      Params:         0       0       0
  4684 ;;      Locals:         1       0       0
  4685 ;;      Temps:          0       0       0
  4686 ;;      Totals:         1       0       0
  4687 ;;Total ram usage:        1 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 2
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_main
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text41
  4698  001AB4                     __ptext41:
  4699                           	callstack 0
  4700  001AB4                     _escriureEEPROM:
  4701                           	callstack 28
  4702                           
  4703                           ;Usuaris.c: 209:     for(unsigned char caca = 0; caca < 160; caca++){
  4704                           
  4705                           ;incstack = 0
  4706  001AB4  0E00               	movlw	0
  4707  001AB6  6E6A               	movwf	escriureEEPROM@caca^0,c
  4708  001AB8                     l2245:
  4709                           
  4710                           ;Usuaris.c: 210:         EEADR = 0;
  4711  001AB8  0E00               	movlw	0
  4712  001ABA  6EA9               	movwf	169,c	;volatile
  4713                           
  4714                           ;Usuaris.c: 211:         EEDATA = 0;
  4715  001ABC  0E00               	movlw	0
  4716  001ABE  6EA8               	movwf	168,c	;volatile
  4717                           
  4718                           ;Usuaris.c: 212:         EECON1bits.EEPGD = 0;
  4719  001AC0  9EA6               	bcf	166,7,c	;volsfr
  4720                           
  4721                           ;Usuaris.c: 213:         EECON1bits.CFGS = 0;
  4722  001AC2  9CA6               	bcf	166,6,c	;volsfr
  4723                           
  4724                           ;Usuaris.c: 214:         EECON1bits.WREN = 1;
  4725  001AC4  84A6               	bsf	166,2,c	;volsfr
  4726                           
  4727                           ;Usuaris.c: 215:         INTCONbits.GIE = 0;
  4728  001AC6  9EF2               	bcf	242,7,c	;volatile
  4729                           
  4730                           ;Usuaris.c: 216:         EECON2 = 85;
  4731  001AC8  0E55               	movlw	85
  4732  001ACA  6EA7               	movwf	167,c	;volsfr
  4733                           
  4734                           ;Usuaris.c: 217:         EECON2 = 170;
  4735  001ACC  0EAA               	movlw	170
  4736  001ACE  6EA7               	movwf	167,c	;volsfr
  4737                           
  4738                           ;Usuaris.c: 218:          EECON1bits.WR = 1;
  4739  001AD0  82A6               	bsf	166,1,c	;volsfr
  4740  001AD2                     l714:
  4741                           
  4742                           ;Usuaris.c: 219:         while(EECON1bits.WR){
  4743  001AD2  B2A6               	btfsc	166,1,c	;volsfr
  4744  001AD4  D7FE               	goto	l714
  4745                           
  4746                           ;Usuaris.c: 224:     }
  4747  001AD6  2A6A               	incf	escriureEEPROM@caca^0,f,c
  4748  001AD8  0E9F               	movlw	159
  4749  001ADA  646A               	cpfsgt	escriureEEPROM@caca^0,c
  4750  001ADC  D7ED               	goto	l2245
  4751                           
  4752                           ;Usuaris.c: 225:    INTCONbits.GIE = 1;
  4753  001ADE  8EF2               	bsf	242,7,c	;volatile
  4754  001AE0  0012               	return		;funcret
  4755  001AE2                     __end_of_escriureEEPROM:
  4756                           	callstack 0
  4757                           
  4758 ;; *************** function _escriure2usuarisStruct *****************
  4759 ;; Defined at:
  4760 ;;		line 115 in file "Usuaris.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		wreg, status,2
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 3F/1
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1
  4774 ;;      Params:         0       0       0
  4775 ;;      Locals:         0       0       0
  4776 ;;      Temps:          0       0       0
  4777 ;;      Totals:         0       0       0
  4778 ;;Total ram usage:        0 bytes
  4779 ;; Hardware stack levels used: 1
  4780 ;; Hardware stack levels required when called: 2
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_main
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text42
  4789  001AE2                     __ptext42:
  4790                           	callstack 0
  4791  001AE2                     _escriure2usuarisStruct:
  4792                           	callstack 28
  4793                           
  4794                           ;Usuaris.c: 117:     usuaris[0].username[0] = 1;
  4795                           
  4796                           ;incstack = 0
  4797  001AE2  0E01               	movlw	1
  4798  001AE4  0101               	movlb	1	; () banked
  4799  001AE6  6F00               	movwf	_usuaris& (0+255),b
  4800                           
  4801                           ;Usuaris.c: 118:     usuaris[0].password[0] = 1;
  4802  001AE8  0E01               	movlw	1
  4803  001AEA  6F09               	movwf	(_usuaris+9)& (0+255),b
  4804                           
  4805                           ;Usuaris.c: 119:     usuaris[1].username[0] = '1';
  4806  001AEC  0E31               	movlw	49
  4807  001AEE  6F17               	movwf	(_usuaris+23)& (0+255),b
  4808                           
  4809                           ;Usuaris.c: 120:     usuaris[1].password[0] = '1';
  4810  001AF0  0E31               	movlw	49
  4811  001AF2  6F20               	movwf	(_usuaris+32)& (0+255),b
  4812                           
  4813                           ;Usuaris.c: 121:     usuaris[0].username[1] = '\0';
  4814  001AF4  0E00               	movlw	0
  4815  001AF6  6F01               	movwf	(_usuaris+1)& (0+255),b
  4816                           
  4817                           ;Usuaris.c: 122:     usuaris[0].password[1] = '\0';
  4818  001AF8  0E00               	movlw	0
  4819  001AFA  6F0A               	movwf	(_usuaris+10)& (0+255),b
  4820                           
  4821                           ;Usuaris.c: 123:     usuaris[1].username[1] = '\0';
  4822  001AFC  0E00               	movlw	0
  4823  001AFE  6F18               	movwf	(_usuaris+24)& (0+255),b
  4824                           
  4825                           ;Usuaris.c: 124:     usuaris[1].password[1] = '\0';
  4826  001B00  0E00               	movlw	0
  4827  001B02  6F21               	movwf	(_usuaris+33)& (0+255),b
  4828                           
  4829                           ;Usuaris.c: 125:     numUsuaris = 2;
  4830  001B04  0E02               	movlw	2
  4831  001B06  6E23               	movwf	_numUsuaris^0,c
  4832                           
  4833                           ;Usuaris.c: 126:     indexNextUser = 2;
  4834  001B08  0E02               	movlw	2
  4835  001B0A  6E22               	movwf	_indexNextUser^0,c
  4836                           
  4837                           ; BSR set to: 1
  4838  001B0C  0012               	return		;funcret
  4839  001B0E                     __end_of_escriure2usuarisStruct:
  4840                           	callstack 0
  4841                           
  4842 ;; *************** function _UmotorUsers *****************
  4843 ;; Defined at:
  4844 ;;		line 139 in file "Usuaris.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/1
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1
  4858 ;;      Params:         0       0       0
  4859 ;;      Locals:         0       0       0
  4860 ;;      Temps:          2       0       0
  4861 ;;      Totals:         2       0       0
  4862 ;;Total ram usage:        2 bytes
  4863 ;; Hardware stack levels used: 1
  4864 ;; Hardware stack levels required when called: 3
  4865 ;; This function calls:
  4866 ;;		_compareStrings
  4867 ;;		_escriureCharEEPROM
  4868 ;; This function is called by:
  4869 ;;		_main
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text43
  4874  000D1C                     __ptext43:
  4875                           	callstack 0
  4876  000D1C                     _UmotorUsers:
  4877                           	callstack 27
  4878                           
  4879                           ;Usuaris.c: 140: static char state = 0;;Usuaris.c: 142:  switch(state) {
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;incstack = 0
  4883  000D1C  D0A7               	goto	l5033
  4884  000D1E                     l686:
  4885                           
  4886                           ;Usuaris.c: 144:    if (!do_check_exists && !do_register) {
  4887  000D1E  AA78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4888  000D20  B878               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  4889  000D22  D005               	goto	l687
  4890                           
  4891                           ;Usuaris.c: 145:     i = 0;
  4892  000D24  0E00               	movlw	0
  4893  000D26  6E20               	movwf	_i^0,c
  4894                           
  4895                           ;Usuaris.c: 146:     j = 0;
  4896  000D28  0E00               	movlw	0
  4897  000D2A  6E1F               	movwf	_j^0,c
  4898                           
  4899                           ;Usuaris.c: 147:    }
  4900  000D2C  0012               	return	
  4901  000D2E                     l687:
  4902  000D2E  AA78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4903  000D30  D004               	goto	l689
  4904                           
  4905                           ;Usuaris.c: 149:     usuariLoguejat = -1;
  4906  000D32  6857               	setf	_usuariLoguejat^0,c
  4907  000D34                     l4961:
  4908                           
  4909                           ;Usuaris.c: 150:     state = 1;
  4910  000D34  0E01               	movlw	1
  4911  000D36  6E1E               	movwf	UmotorUsers@state^0,c
  4912                           
  4913                           ;Usuaris.c: 151:    }
  4914  000D38  0012               	return	
  4915  000D3A                     l689:
  4916  000D3A  A878               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  4917  000D3C  0012               	return	
  4918  000D3E                     u4500:
  4919                           
  4920                           ;Usuaris.c: 153:     state = 2;
  4921  000D3E  0E02               	movlw	2
  4922  000D40  6E1E               	movwf	UmotorUsers@state^0,c
  4923                           
  4924                           ;Usuaris.c: 155:   break;
  4925  000D42  0012               	return	
  4926  000D44                     l4965:
  4927                           
  4928                           ;Usuaris.c: 158:    if (i < numUsuaris) {
  4929  000D44  5023               	movf	_numUsuaris^0,w,c
  4930  000D46  5C20               	subwf	_i^0,w,c
  4931  000D48  B0D8               	btfsc	status,0,c
  4932  000D4A  D014               	goto	l4975
  4933                           
  4934                           ;Usuaris.c: 159:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  4935  000D4C  0E37               	movlw	low _tmpUsername
  4936  000D4E  6E6A               	movwf	compareStrings@a^0,c
  4937  000D50  5020               	movf	_i^0,w,c
  4938  000D52  0D17               	mullw	23
  4939  000D54  0E00               	movlw	low _usuaris
  4940  000D56  24F3               	addwf	243,w,c
  4941  000D58  6E6B               	movwf	compareStrings@b^0,c
  4942  000D5A  0E01               	movlw	high _usuaris
  4943  000D5C  20F4               	addwfc	prodh,w,c
  4944  000D5E  6E6C               	movwf	(compareStrings@b+1)^0,c
  4945  000D60  EC55  F00C         	call	_compareStrings	;wreg free
  4946  000D64  0900               	iorlw	0
  4947  000D66  A4D8               	btfss	status,2,c
  4948  000D68  D003               	goto	l4971
  4949                           
  4950                           ;Usuaris.c: 160:      usuariLoguejat = i;
  4951  000D6A  C020  F057         	movff	_i,_usuariLoguejat
  4952                           
  4953                           ;Usuaris.c: 161:                     LATBbits.LATB3 = 1;
  4954  000D6E  868A               	bsf	138,3,c	;volatile
  4955  000D70                     l4971:
  4956                           
  4957                           ;Usuaris.c: 166:     i++;
  4958  000D70  2A20               	incf	_i^0,f,c
  4959  000D72  D7E0               	goto	l4961
  4960  000D74                     l4975:
  4961  000D74  5023               	movf	_numUsuaris^0,w,c
  4962  000D76  1820               	xorwf	_i^0,w,c
  4963  000D78  A4D8               	btfss	status,2,c
  4964  000D7A  0012               	return	
  4965                           
  4966                           ;Usuaris.c: 170:     do_check_exists = 0;
  4967  000D7C  9A78               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4968  000D7E                     l4979:
  4969                           
  4970                           ;Usuaris.c: 171:     state = 0;
  4971  000D7E  0E00               	movlw	0
  4972  000D80  6E1E               	movwf	UmotorUsers@state^0,c
  4973  000D82  0012               	return	
  4974  000D84                     l4981:
  4975                           
  4976                           ;Usuaris.c: 176:    if (i != 8) {
  4977  000D84  0E08               	movlw	8
  4978  000D86  1820               	xorwf	_i^0,w,c
  4979  000D88  B4D8               	btfsc	status,2,c
  4980  000D8A  D022               	goto	l4993
  4981                           
  4982                           ;Usuaris.c: 177:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  4983  000D8C  C022  F06A         	movff	_indexNextUser,escriureCharEEPROM@pos
  4984  000D90  5020               	movf	_i^0,w,c
  4985  000D92  0F37               	addlw	low _tmpUsername
  4986  000D94  6ED9               	movwf	fsr2l,c
  4987  000D96  6ADA               	clrf	fsr2h,c
  4988  000D98  50DF               	movf	indf2,w,c
  4989  000D9A  EC9D  F00D         	call	_escriureCharEEPROM
  4990  000D9E  2A22               	incf	_indexNextUser^0,f,c
  4991                           
  4992                           ;Usuaris.c: 178:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  4993  000DA0  5020               	movf	_i^0,w,c
  4994  000DA2  0F37               	addlw	low _tmpUsername
  4995  000DA4  6ED9               	movwf	fsr2l,c
  4996  000DA6  6ADA               	clrf	fsr2h,c
  4997  000DA8  5021               	movf	_indexNextUserStruct^0,w,c
  4998  000DAA  0D17               	mullw	23
  4999  000DAC  0E00               	movlw	low _usuaris
  5000  000DAE  6E6F               	movwf	??_UmotorUsers^0,c
  5001  000DB0  0E01               	movlw	high _usuaris
  5002  000DB2  6E70               	movwf	(??_UmotorUsers+1)^0,c
  5003  000DB4  50F3               	movf	243,w,c
  5004  000DB6  266F               	addwf	??_UmotorUsers^0,f,c
  5005  000DB8  50F4               	movf	244,w,c
  5006  000DBA  2270               	addwfc	(??_UmotorUsers+1)^0,f,c
  5007  000DBC  5020               	movf	_i^0,w,c
  5008  000DBE  246F               	addwf	??_UmotorUsers^0,w,c
  5009  000DC0  6EE1               	movwf	fsr1l,c
  5010  000DC2  0E00               	movlw	0
  5011  000DC4  2070               	addwfc	(??_UmotorUsers+1)^0,w,c
  5012  000DC6  6EE2               	movwf	fsr1h,c
  5013  000DC8  CFDF FFE7          	movff	indf2,indf1
  5014                           
  5015                           ;Usuaris.c: 179:     i++;
  5016  000DCC  2A20               	incf	_i^0,f,c
  5017  000DCE  D7B7               	goto	u4500
  5018  000DD0                     l4993:
  5019  000DD0  0E08               	movlw	8
  5020  000DD2  1820               	xorwf	_i^0,w,c
  5021  000DD4  A4D8               	btfss	status,2,c
  5022  000DD6  0012               	return	
  5023                           
  5024                           ;Usuaris.c: 183:     i = 0;
  5025  000DD8  0E00               	movlw	0
  5026  000DDA  6E20               	movwf	_i^0,c
  5027                           
  5028                           ;Usuaris.c: 184:     state = 3;
  5029  000DDC  0E03               	movlw	3
  5030  000DDE  6E1E               	movwf	UmotorUsers@state^0,c
  5031  000DE0  0012               	return	
  5032  000DE2                     l4997:
  5033                           
  5034                           ;Usuaris.c: 188:    if (i != 8) {
  5035  000DE2  0E08               	movlw	8
  5036  000DE4  1820               	xorwf	_i^0,w,c
  5037  000DE6  B4D8               	btfsc	status,2,c
  5038  000DE8  D028               	goto	l5009
  5039                           
  5040                           ;Usuaris.c: 189:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  5041  000DEA  C022  F06A         	movff	_indexNextUser,escriureCharEEPROM@pos
  5042  000DEE  5020               	movf	_i^0,w,c
  5043  000DF0  0F98               	addlw	low _tmpPassword
  5044  000DF2  6ED9               	movwf	fsr2l,c
  5045  000DF4  6ADA               	clrf	fsr2h,c
  5046  000DF6  50DF               	movf	indf2,w,c
  5047  000DF8  EC9D  F00D         	call	_escriureCharEEPROM
  5048  000DFC  2A22               	incf	_indexNextUser^0,f,c
  5049                           
  5050                           ;Usuaris.c: 190:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  5051  000DFE  5020               	movf	_i^0,w,c
  5052  000E00  0F98               	addlw	low _tmpPassword
  5053  000E02  6ED9               	movwf	fsr2l,c
  5054  000E04  6ADA               	clrf	fsr2h,c
  5055  000E06  5021               	movf	_indexNextUserStruct^0,w,c
  5056  000E08  0D17               	mullw	23
  5057  000E0A  0E00               	movlw	low _usuaris
  5058  000E0C  6E6F               	movwf	??_UmotorUsers^0,c
  5059  000E0E  0E01               	movlw	high _usuaris
  5060  000E10  6E70               	movwf	(??_UmotorUsers+1)^0,c
  5061  000E12  0E09               	movlw	9
  5062  000E14  266F               	addwf	??_UmotorUsers^0,f,c
  5063  000E16  0E00               	movlw	0
  5064  000E18  2270               	addwfc	(??_UmotorUsers+1)^0,f,c
  5065  000E1A  50F3               	movf	243,w,c
  5066  000E1C  266F               	addwf	??_UmotorUsers^0,f,c
  5067  000E1E  50F4               	movf	244,w,c
  5068  000E20  2270               	addwfc	(??_UmotorUsers+1)^0,f,c
  5069  000E22  5020               	movf	_i^0,w,c
  5070  000E24  246F               	addwf	??_UmotorUsers^0,w,c
  5071  000E26  6EE1               	movwf	fsr1l,c
  5072  000E28  0E00               	movlw	0
  5073  000E2A  2070               	addwfc	(??_UmotorUsers+1)^0,w,c
  5074  000E2C  6EE2               	movwf	fsr1h,c
  5075  000E2E  CFDF FFE7          	movff	indf2,indf1
  5076                           
  5077                           ;Usuaris.c: 191:     i++;
  5078  000E32  2A20               	incf	_i^0,f,c
  5079                           
  5080                           ;Usuaris.c: 192:     state = 3;
  5081  000E34  0E03               	movlw	3
  5082  000E36  6E1E               	movwf	UmotorUsers@state^0,c
  5083                           
  5084                           ;Usuaris.c: 193:    }
  5085  000E38  0012               	return	
  5086  000E3A                     l5009:
  5087  000E3A  0E08               	movlw	8
  5088  000E3C  1820               	xorwf	_i^0,w,c
  5089  000E3E  A4D8               	btfss	status,2,c
  5090  000E40  0012               	return	
  5091                           
  5092                           ;Usuaris.c: 195:     do_register = 0;
  5093  000E42  9878               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5094                           
  5095                           ;Usuaris.c: 196:     indexNextUser++;
  5096  000E44  2A22               	incf	_indexNextUser^0,f,c
  5097                           
  5098                           ;Usuaris.c: 197:     if(indexNextUser == 159) indexNextUser = 16;
  5099  000E46  0E9F               	movlw	159
  5100  000E48  1822               	xorwf	_indexNextUser^0,w,c
  5101  000E4A  A4D8               	btfss	status,2,c
  5102  000E4C  D002               	goto	l5019
  5103  000E4E  0E10               	movlw	16
  5104  000E50  6E22               	movwf	_indexNextUser^0,c
  5105  000E52                     l5019:
  5106                           
  5107                           ;Usuaris.c: 198:     indexNextUserStruct++;
  5108  000E52  2A21               	incf	_indexNextUserStruct^0,f,c
  5109                           
  5110                           ;Usuaris.c: 199:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  5111  000E54  0E08               	movlw	8
  5112  000E56  1821               	xorwf	_indexNextUserStruct^0,w,c
  5113  000E58  A4D8               	btfss	status,2,c
  5114  000E5A  D002               	goto	l5025
  5115  000E5C  0E00               	movlw	0
  5116  000E5E  6E21               	movwf	_indexNextUserStruct^0,c
  5117  000E60                     l5025:
  5118                           
  5119                           ;Usuaris.c: 200:     if(numUsuaris != 8) numUsuaris++;
  5120  000E60  0E08               	movlw	8
  5121  000E62  1823               	xorwf	_numUsuaris^0,w,c
  5122  000E64  B4D8               	btfsc	status,2,c
  5123  000E66  D78B               	goto	l4979
  5124  000E68  2A23               	incf	_numUsuaris^0,f,c
  5125  000E6A  D789               	goto	l4979
  5126  000E6C                     l5033:
  5127  000E6C  501E               	movf	UmotorUsers@state^0,w,c
  5128  000E6E  6E6F               	movwf	??_UmotorUsers^0,c
  5129  000E70  6A70               	clrf	(??_UmotorUsers+1)^0,c
  5130                           
  5131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5132                           ; Switch size 1, requested type "simple"
  5133                           ; Number of cases is 1, Range of values is 0 to 0
  5134                           ; switch strategies available:
  5135                           ; Name         Instructions Cycles
  5136                           ; simple_byte            4     3 (average)
  5137                           ;	Chosen strategy is simple_byte
  5138  000E72  5070               	movf	(??_UmotorUsers+1)^0,w,c
  5139  000E74  0A00               	xorlw	0	; case 0
  5140  000E76  A4D8               	btfss	status,2,c
  5141  000E78  0012               	return	
  5142                           
  5143                           ; Switch size 1, requested type "simple"
  5144                           ; Number of cases is 4, Range of values is 0 to 3
  5145                           ; switch strategies available:
  5146                           ; Name         Instructions Cycles
  5147                           ; simple_byte           13     7 (average)
  5148                           ;	Chosen strategy is simple_byte
  5149  000E7A  506F               	movf	??_UmotorUsers^0,w,c
  5150  000E7C  0A00               	xorlw	0	; case 0
  5151  000E7E  B4D8               	btfsc	status,2,c
  5152  000E80  D74E               	goto	l686
  5153  000E82  0A01               	xorlw	1	; case 1
  5154  000E84  B4D8               	btfsc	status,2,c
  5155  000E86  D75E               	goto	l4965
  5156  000E88  0A03               	xorlw	3	; case 2
  5157  000E8A  B4D8               	btfsc	status,2,c
  5158  000E8C  D77B               	goto	l4981
  5159  000E8E  0A01               	xorlw	1	; case 3
  5160  000E90  A4D8               	btfss	status,2,c
  5161  000E92  0012               	return	
  5162  000E94  D7A6               	goto	l4997
  5163  000E96                     __end_of_UmotorUsers:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function _escriureCharEEPROM *****************
  5167 ;; Defined at:
  5168 ;;		line 57 in file "Usuaris.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  c               1    wreg     unsigned char 
  5171 ;;  pos             1    5[COMRAM] unsigned char 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  c               1    6[COMRAM] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/1
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1
  5183 ;;      Params:         1       0       0
  5184 ;;      Locals:         1       0       0
  5185 ;;      Temps:          0       0       0
  5186 ;;      Totals:         2       0       0
  5187 ;;Total ram usage:        2 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; Hardware stack levels required when called: 2
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_UmotorUsers
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text44
  5198  001B3A                     __ptext44:
  5199                           	callstack 0
  5200  001B3A                     _escriureCharEEPROM:
  5201                           	callstack 27
  5202                           
  5203                           ;incstack = 0
  5204                           ;escriureCharEEPROM@c stored from wreg
  5205  001B3A  6E6B               	movwf	escriureCharEEPROM@c^0,c
  5206                           
  5207                           ;Usuaris.c: 58:     EEADR = pos;
  5208  001B3C  C06A  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  5209                           
  5210                           ;Usuaris.c: 59:     EEDATA = c;
  5211  001B40  C06B  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  5212                           
  5213                           ;Usuaris.c: 60:     EECON1bits.EEPGD = 0;
  5214  001B44  9EA6               	bcf	166,7,c	;volsfr
  5215                           
  5216                           ;Usuaris.c: 61:     EECON1bits.CFGS = 0;
  5217  001B46  9CA6               	bcf	166,6,c	;volsfr
  5218                           
  5219                           ;Usuaris.c: 62:     EECON1bits.WREN = 1;
  5220  001B48  84A6               	bsf	166,2,c	;volsfr
  5221                           
  5222                           ;Usuaris.c: 63:     INTCONbits.GIE = 0;
  5223  001B4A  9EF2               	bcf	242,7,c	;volatile
  5224                           
  5225                           ;Usuaris.c: 64:     EECON2 = 85;
  5226  001B4C  0E55               	movlw	85
  5227  001B4E  6EA7               	movwf	167,c	;volsfr
  5228                           
  5229                           ;Usuaris.c: 65:     EECON2 = 170;
  5230  001B50  0EAA               	movlw	170
  5231  001B52  6EA7               	movwf	167,c	;volsfr
  5232                           
  5233                           ;Usuaris.c: 66:     EECON1bits.WR = 1;
  5234  001B54  82A6               	bsf	166,1,c	;volsfr
  5235  001B56                     l645:
  5236  001B56  B2A6               	btfsc	166,1,c	;volsfr
  5237  001B58  D7FE               	goto	l645
  5238                           
  5239                           ;Usuaris.c: 68:     INTCONbits.GIE = 1;
  5240  001B5A  8EF2               	bsf	242,7,c	;volatile
  5241  001B5C  0012               	return		;funcret
  5242  001B5E                     __end_of_escriureCharEEPROM:
  5243                           	callstack 0
  5244                           
  5245 ;; *************** function _compareStrings *****************
  5246 ;; Defined at:
  5247 ;;		line 129 in file "Usuaris.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  a               1    5[COMRAM] PTR const unsigned char 
  5250 ;;		 -> tmpUsername(9), 
  5251 ;;  b               2    6[COMRAM] PTR const unsigned char 
  5252 ;;		 -> usuaris.username(9), usuaris(184), 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      unsigned char 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/1
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1
  5264 ;;      Params:         3       0       0
  5265 ;;      Locals:         0       0       0
  5266 ;;      Temps:          2       0       0
  5267 ;;      Totals:         5       0       0
  5268 ;;Total ram usage:        5 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 2
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_UmotorUsers
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text45
  5279  0018AA                     __ptext45:
  5280                           	callstack 0
  5281  0018AA                     _compareStrings:
  5282                           	callstack 27
  5283                           
  5284                           ;Usuaris.c: 130:     while (*a){
  5285                           
  5286                           ;incstack = 0
  5287  0018AA  D00E               	goto	l4065
  5288  0018AC                     l4059:
  5289                           
  5290                           ;Usuaris.c: 131:         if (*a != *b)break;
  5291  0018AC  C06B  FFD9         	movff	compareStrings@b,fsr2l
  5292  0018B0  C06C  FFDA         	movff	compareStrings@b+1,fsr2h
  5293  0018B4  506A               	movf	compareStrings@a^0,w,c
  5294  0018B6  6EE1               	movwf	fsr1l,c
  5295  0018B8  6AE2               	clrf	fsr1h,c
  5296  0018BA  50DE               	movf	postinc2,w,c
  5297  0018BC  18E6               	xorwf	postinc1,w,c
  5298  0018BE  A4D8               	btfss	status,2,c
  5299  0018C0  D009               	goto	u3130
  5300                           
  5301                           ;Usuaris.c: 132:         a++;
  5302  0018C2  2A6A               	incf	compareStrings@a^0,f,c
  5303                           
  5304                           ;Usuaris.c: 133:         b++;
  5305  0018C4  4A6B               	infsnz	compareStrings@b^0,f,c
  5306  0018C6  2A6C               	incf	(compareStrings@b+1)^0,f,c
  5307  0018C8                     l4065:
  5308                           
  5309                           ;Usuaris.c: 130:     while (*a){
  5310  0018C8  506A               	movf	compareStrings@a^0,w,c
  5311  0018CA  6ED9               	movwf	fsr2l,c
  5312  0018CC  6ADA               	clrf	fsr2h,c
  5313  0018CE  50DF               	movf	indf2,w,c
  5314  0018D0  A4D8               	btfss	status,2,c
  5315  0018D2  D7EC               	goto	l4059
  5316  0018D4                     u3130:
  5317                           
  5318                           ;Usuaris.c: 135:     return *(const unsigned char*)a - *(const unsigned char*)b;
  5319  0018D4  C06B  FFD9         	movff	compareStrings@b,fsr2l
  5320  0018D8  C06C  FFDA         	movff	compareStrings@b+1,fsr2h
  5321  0018DC  50DF               	movf	indf2,w,c
  5322  0018DE  6E6D               	movwf	??_compareStrings^0,c
  5323  0018E0  506A               	movf	compareStrings@a^0,w,c
  5324  0018E2  6ED9               	movwf	fsr2l,c
  5325  0018E4  6ADA               	clrf	fsr2h,c
  5326  0018E6  50DF               	movf	indf2,w,c
  5327  0018E8  6E6E               	movwf	(??_compareStrings+1)^0,c
  5328  0018EA  506D               	movf	??_compareStrings^0,w,c
  5329  0018EC  5C6E               	subwf	(??_compareStrings+1)^0,w,c
  5330  0018EE  0012               	return		;funcret
  5331  0018F0                     __end_of_compareStrings:
  5332                           	callstack 0
  5333                           
  5334 ;; *************** function _Uinit *****************
  5335 ;; Defined at:
  5336 ;;		line 70 in file "Usuaris.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  j               1    9[COMRAM] unsigned char 
  5341 ;;  j               1    8[COMRAM] unsigned char 
  5342 ;;  i               1    7[COMRAM] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      void 
  5345 ;; Registers used:
  5346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1
  5352 ;;      Params:         0       0       0
  5353 ;;      Locals:         3       0       0
  5354 ;;      Temps:          2       0       0
  5355 ;;      Totals:         5       0       0
  5356 ;;Total ram usage:        5 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; Hardware stack levels required when called: 2
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_main
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text46
  5367  00141C                     __ptext46:
  5368                           	callstack 0
  5369  00141C                     _Uinit:
  5370                           	callstack 28
  5371                           
  5372                           ;Usuaris.c: 75:     EEADR = 0;
  5373                           
  5374                           ;incstack = 0
  5375  00141C  0E00               	movlw	0
  5376  00141E  6EA9               	movwf	169,c	;volatile
  5377                           
  5378                           ;Usuaris.c: 76:     EECON1bits.EEPGD = 0;
  5379  001420  9EA6               	bcf	166,7,c	;volsfr
  5380                           
  5381                           ;Usuaris.c: 77:     EECON1bits.CFGS = 0;
  5382  001422  9CA6               	bcf	166,6,c	;volsfr
  5383                           
  5384                           ;Usuaris.c: 78:     EECON1bits.RD = 1;
  5385  001424  80A6               	bsf	166,0,c	;volsfr
  5386  001426                     l651:
  5387  001426  B0A6               	btfsc	166,0,c	;volsfr
  5388  001428  D7FE               	goto	l651
  5389                           
  5390                           ;Usuaris.c: 80:     numUsuaris = EEDATA;
  5391  00142A  CFA8 F023          	movff	4008,_numUsuaris	;volatile
  5392                           
  5393                           ;Usuaris.c: 83:     EEADR++;
  5394  00142E  2AA9               	incf	169,f,c	;volatile
  5395                           
  5396                           ;Usuaris.c: 84:     EECON1bits.EEPGD = 0;
  5397  001430  9EA6               	bcf	166,7,c	;volsfr
  5398                           
  5399                           ;Usuaris.c: 85:     EECON1bits.CFGS = 0;
  5400  001432  9CA6               	bcf	166,6,c	;volsfr
  5401  001434                     l654:
  5402  001434  B0A6               	btfsc	166,0,c	;volsfr
  5403  001436  D7FE               	goto	l654
  5404                           
  5405                           ;Usuaris.c: 88:     indexNextUser = EEDATA;
  5406  001438  CFA8 F022          	movff	4008,_indexNextUser	;volatile
  5407                           
  5408                           ;Usuaris.c: 90:     EEADR++;
  5409  00143C  2AA9               	incf	169,f,c	;volatile
  5410                           
  5411                           ;Usuaris.c: 92:     for(char i = 0; i< numUsuaris; i++){
  5412  00143E  0E00               	movlw	0
  5413  001440  6E6C               	movwf	Uinit@i^0,c
  5414  001442  D041               	goto	l2493
  5415  001444                     l2463:
  5416                           
  5417                           ;Usuaris.c: 93:         for(char j = 0; j<9; j++){
  5418  001444  0E00               	movlw	0
  5419  001446  6E6D               	movwf	Uinit@j^0,c
  5420  001448                     l659:
  5421                           
  5422                           ;Usuaris.c: 94:             EECON1bits.EEPGD = 0;
  5423  001448  9EA6               	bcf	166,7,c	;volsfr
  5424                           
  5425                           ;Usuaris.c: 95:             EECON1bits.CFGS = 0;
  5426  00144A  9CA6               	bcf	166,6,c	;volsfr
  5427                           
  5428                           ;Usuaris.c: 96:             EECON1bits.RD = 1;
  5429  00144C  80A6               	bsf	166,0,c	;volsfr
  5430  00144E                     l661:
  5431  00144E  B0A6               	btfsc	166,0,c	;volsfr
  5432  001450  D7FE               	goto	l661
  5433                           
  5434                           ;Usuaris.c: 98:             usuaris[i].username[j] = EEDATA;
  5435  001452  506C               	movf	Uinit@i^0,w,c
  5436  001454  0D17               	mullw	23
  5437  001456  0E00               	movlw	low _usuaris
  5438  001458  6E6A               	movwf	??_Uinit^0,c
  5439  00145A  0E01               	movlw	high _usuaris
  5440  00145C  6E6B               	movwf	(??_Uinit+1)^0,c
  5441  00145E  50F3               	movf	243,w,c
  5442  001460  266A               	addwf	??_Uinit^0,f,c
  5443  001462  50F4               	movf	244,w,c
  5444  001464  226B               	addwfc	(??_Uinit+1)^0,f,c
  5445  001466  506D               	movf	Uinit@j^0,w,c
  5446  001468  246A               	addwf	??_Uinit^0,w,c
  5447  00146A  6ED9               	movwf	fsr2l,c
  5448  00146C  0E00               	movlw	0
  5449  00146E  206B               	addwfc	(??_Uinit+1)^0,w,c
  5450  001470  6EDA               	movwf	fsr2h,c
  5451  001472  CFA8 FFDF          	movff	4008,indf2	;volatile
  5452                           
  5453                           ;Usuaris.c: 99:             EEADR++;
  5454  001476  2AA9               	incf	169,f,c	;volatile
  5455                           
  5456                           ;Usuaris.c: 100:         }
  5457  001478  2A6D               	incf	Uinit@j^0,f,c
  5458  00147A  0E08               	movlw	8
  5459  00147C  646D               	cpfsgt	Uinit@j^0,c
  5460  00147E  D7E4               	goto	l659
  5461                           
  5462                           ;Usuaris.c: 101:         for(char j = 0; j<9; j++){
  5463  001480  0E00               	movlw	0
  5464  001482  6E6E               	movwf	Uinit@j_1144^0,c
  5465  001484                     l664:
  5466                           
  5467                           ;Usuaris.c: 102:             EECON1bits.EEPGD = 0;
  5468  001484  9EA6               	bcf	166,7,c	;volsfr
  5469                           
  5470                           ;Usuaris.c: 103:             EECON1bits.CFGS = 0;
  5471  001486  9CA6               	bcf	166,6,c	;volsfr
  5472                           
  5473                           ;Usuaris.c: 104:             EECON1bits.RD = 1;
  5474  001488  80A6               	bsf	166,0,c	;volsfr
  5475  00148A                     l666:
  5476  00148A  B0A6               	btfsc	166,0,c	;volsfr
  5477  00148C  D7FE               	goto	l666
  5478                           
  5479                           ;Usuaris.c: 106:             usuaris[i].password[j] = EEDATA;
  5480  00148E  506C               	movf	Uinit@i^0,w,c
  5481  001490  0D17               	mullw	23
  5482  001492  0E00               	movlw	low _usuaris
  5483  001494  6E6A               	movwf	??_Uinit^0,c
  5484  001496  0E01               	movlw	high _usuaris
  5485  001498  6E6B               	movwf	(??_Uinit+1)^0,c
  5486  00149A  0E09               	movlw	9
  5487  00149C  266A               	addwf	??_Uinit^0,f,c
  5488  00149E  0E00               	movlw	0
  5489  0014A0  226B               	addwfc	(??_Uinit+1)^0,f,c
  5490  0014A2  50F3               	movf	243,w,c
  5491  0014A4  266A               	addwf	??_Uinit^0,f,c
  5492  0014A6  50F4               	movf	244,w,c
  5493  0014A8  226B               	addwfc	(??_Uinit+1)^0,f,c
  5494  0014AA  506E               	movf	Uinit@j_1144^0,w,c
  5495  0014AC  246A               	addwf	??_Uinit^0,w,c
  5496  0014AE  6ED9               	movwf	fsr2l,c
  5497  0014B0  0E00               	movlw	0
  5498  0014B2  206B               	addwfc	(??_Uinit+1)^0,w,c
  5499  0014B4  6EDA               	movwf	fsr2h,c
  5500  0014B6  CFA8 FFDF          	movff	4008,indf2	;volatile
  5501                           
  5502                           ;Usuaris.c: 107:             EEADR++;
  5503  0014BA  2AA9               	incf	169,f,c	;volatile
  5504                           
  5505                           ;Usuaris.c: 108:         }
  5506  0014BC  2A6E               	incf	Uinit@j_1144^0,f,c
  5507  0014BE  0E08               	movlw	8
  5508  0014C0  646E               	cpfsgt	Uinit@j_1144^0,c
  5509  0014C2  D7E0               	goto	l664
  5510                           
  5511                           ;Usuaris.c: 109:     }
  5512  0014C4  2A6C               	incf	Uinit@i^0,f,c
  5513  0014C6                     l2493:
  5514  0014C6  5023               	movf	_numUsuaris^0,w,c
  5515  0014C8  5C6C               	subwf	Uinit@i^0,w,c
  5516  0014CA  B0D8               	btfsc	status,0,c
  5517  0014CC  0012               	return	
  5518  0014CE  D7BA               	goto	l2463
  5519  0014D0                     __end_of_Uinit:
  5520                           	callstack 0
  5521                           
  5522 ;; *************** function _TiInitTimer *****************
  5523 ;; Defined at:
  5524 ;;		line 18 in file "TiTTimer.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1
  5538 ;;      Params:         0       0       0
  5539 ;;      Locals:         0       0       0
  5540 ;;      Temps:          0       0       0
  5541 ;;      Totals:         0       0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; Hardware stack levels required when called: 2
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_main
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text47
  5553  0019AC                     __ptext47:
  5554                           	callstack 0
  5555  0019AC                     _TiInitTimer:
  5556                           	callstack 28
  5557                           
  5558                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  5559                           
  5560                           ;incstack = 0
  5561  0019AC  9ED0               	bcf	208,7,c	;volatile
  5562                           
  5563                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  5564  0019AE  8EF2               	bsf	242,7,c	;volatile
  5565                           
  5566                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  5567  0019B0  8CF2               	bsf	242,6,c	;volatile
  5568                           
  5569                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  5570  0019B2  8AF2               	bsf	242,5,c	;volatile
  5571                           
  5572                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  5573  0019B4  94F2               	bcf	242,2,c	;volatile
  5574                           
  5575                           ;TiTTimer.c: 25:     T0CON = 136;
  5576  0019B6  0E88               	movlw	136
  5577  0019B8  6ED5               	movwf	213,c	;volatile
  5578                           
  5579                           ;TiTTimer.c: 27:     TMR0H = 223;
  5580  0019BA  0EDF               	movlw	223
  5581  0019BC  6ED7               	movwf	215,c	;volatile
  5582                           
  5583                           ;TiTTimer.c: 28:     TMR0L = 148;
  5584  0019BE  0E94               	movlw	148
  5585  0019C0  6ED6               	movwf	214,c	;volatile
  5586                           
  5587                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  5588  0019C2  8ED5               	bsf	213,7,c	;volatile
  5589                           
  5590                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  5591  0019C4  0E00               	movlw	0
  5592  0019C6  6E2A               	movwf	_counter^0,c
  5593  0019C8                     l4169:
  5594  0019C8  0E07               	movlw	7
  5595  0019CA  642A               	cpfsgt	_counter^0,c
  5596  0019CC  D001               	goto	l4173
  5597  0019CE  0012               	return	
  5598  0019D0                     l4173:
  5599                           
  5600                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  5601  0019D0  502A               	movf	_counter^0,w,c
  5602  0019D2  0D03               	mullw	3
  5603  0019D4  50F3               	movf	243,w,c
  5604  0019D6  0F82               	addlw	low (_s_Timers+2)
  5605  0019D8  6ED9               	movwf	fsr2l,c
  5606  0019DA  6ADA               	clrf	fsr2h,c
  5607  0019DC  0E00               	movlw	0
  5608  0019DE  6EDF               	movwf	indf2,c
  5609                           
  5610                           ;TiTTimer.c: 33:     }
  5611  0019E0  2A2A               	incf	_counter^0,f,c
  5612  0019E2  D7F2               	goto	l4169
  5613  0019E4                     __end_of_TiInitTimer:
  5614                           	callstack 0
  5615                           
  5616 ;; *************** function _TeTeclat *****************
  5617 ;; Defined at:
  5618 ;;		line 22 in file "TeTeclat.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;		None
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      void 
  5625 ;; Registers used:
  5626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/1
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1
  5632 ;;      Params:         0       0       0
  5633 ;;      Locals:         0       0       0
  5634 ;;      Temps:          3       0       0
  5635 ;;      Totals:         3       0       0
  5636 ;;Total ram usage:        3 bytes
  5637 ;; Hardware stack levels used: 1
  5638 ;; Hardware stack levels required when called: 3
  5639 ;; This function calls:
  5640 ;;		_MsetNovaTecla
  5641 ;;		_SsetNovaTecla
  5642 ;;		_TiGetTics
  5643 ;;		_TiResetTics
  5644 ;; This function is called by:
  5645 ;;		_main
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text48
  5650  000E96                     __ptext48:
  5651                           	callstack 0
  5652  000E96                     _TeTeclat:
  5653                           	callstack 27
  5654                           
  5655                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  5656                           
  5657                           ;incstack = 0
  5658  000E96  A083               	btfss	131,0,c	;volatile
  5659  000E98  D003               	goto	u7070
  5660  000E9A  6A71               	clrf	??_TeTeclat^0,c
  5661  000E9C  2A71               	incf	??_TeTeclat^0,f,c
  5662  000E9E  D001               	goto	u7078
  5663  000EA0                     u7070:
  5664  000EA0  6A71               	clrf	??_TeTeclat^0,c
  5665  000EA2                     u7078:
  5666  000EA2  A283               	btfss	131,1,c	;volatile
  5667  000EA4  D002               	goto	u7080
  5668  000EA6  0E01               	movlw	1
  5669  000EA8  D001               	goto	u7086
  5670  000EAA                     u7080:
  5671  000EAA  0E00               	movlw	0
  5672  000EAC                     u7086:
  5673  000EAC  0D02               	mullw	2
  5674  000EAE  CFF3 F072          	movff	prodl,??_TeTeclat+1
  5675  000EB2  A483               	btfss	131,2,c	;volatile
  5676  000EB4  D002               	goto	u7090
  5677  000EB6  0E01               	movlw	1
  5678  000EB8  D001               	goto	u7096
  5679  000EBA                     u7090:
  5680  000EBA  0E00               	movlw	0
  5681  000EBC                     u7096:
  5682  000EBC  0D03               	mullw	3
  5683  000EBE  CFF3 F073          	movff	prodl,??_TeTeclat+2
  5684  000EC2  A683               	btfss	131,3,c	;volatile
  5685  000EC4  D002               	goto	u7100
  5686  000EC6  0E01               	movlw	1
  5687  000EC8  D001               	goto	u7106
  5688  000ECA                     u7100:
  5689  000ECA  0E00               	movlw	0
  5690  000ECC                     u7106:
  5691  000ECC  0D04               	mullw	4
  5692  000ECE  50F3               	movf	243,w,c
  5693  000ED0  2473               	addwf	(??_TeTeclat+2)^0,w,c
  5694  000ED2  2472               	addwf	(??_TeTeclat+1)^0,w,c
  5695  000ED4  2471               	addwf	??_TeTeclat^0,w,c
  5696  000ED6  6E2B               	movwf	TeTeclat@files^0,c
  5697                           
  5698                           ;TeTeclat.c: 27:  switch(state) {
  5699  000ED8  D06F               	goto	l6761
  5700  000EDA                     l6687:
  5701                           
  5702                           ;TeTeclat.c: 29:    if (files==0) {
  5703  000EDA  502B               	movf	TeTeclat@files^0,w,c
  5704  000EDC  A4D8               	btfss	status,2,c
  5705  000EDE  D007               	goto	l6695
  5706                           
  5707                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  5708  000EE0  888C               	bsf	140,4,c	;volatile
  5709                           
  5710                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  5711  000EE2  9A8C               	bcf	140,5,c	;volatile
  5712                           
  5713                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  5714  000EE4  9C8C               	bcf	140,6,c	;volatile
  5715                           
  5716                           ;TeTeclat.c: 33:     cols=0;
  5717  000EE6  0E00               	movlw	0
  5718  000EE8  6E2C               	movwf	TeTeclat@cols^0,c
  5719  000EEA                     l6693:
  5720                           
  5721                           ;TeTeclat.c: 34:     state++;
  5722  000EEA  2A2D               	incf	TeTeclat@state^0,f,c
  5723                           
  5724                           ;TeTeclat.c: 35:    }
  5725  000EEC  0012               	return	
  5726  000EEE                     l6695:
  5727  000EEE  502B               	movf	TeTeclat@files^0,w,c
  5728  000EF0  B4D8               	btfsc	status,2,c
  5729  000EF2  0012               	return	
  5730                           
  5731                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  5732  000EF4  502E               	movf	_tiTeclat^0,w,c
  5733  000EF6  EC04  F00E         	call	_TiResetTics
  5734  000EFA                     l6699:
  5735                           
  5736                           ;TeTeclat.c: 38:     state = 3;
  5737  000EFA  0E03               	movlw	3
  5738  000EFC  6E2D               	movwf	TeTeclat@state^0,c
  5739  000EFE  0012               	return	
  5740  000F00                     l6701:
  5741                           
  5742                           ;TeTeclat.c: 42:    if (files==0) {
  5743  000F00  502B               	movf	TeTeclat@files^0,w,c
  5744  000F02  A4D8               	btfss	status,2,c
  5745  000F04  D005               	goto	l6709
  5746                           
  5747                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  5748  000F06  988C               	bcf	140,4,c	;volatile
  5749                           
  5750                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  5751  000F08  8A8C               	bsf	140,5,c	;volatile
  5752                           
  5753                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  5754  000F0A  9C8C               	bcf	140,6,c	;volatile
  5755                           
  5756                           ;TeTeclat.c: 46:     cols=1;
  5757  000F0C  0E01               	movlw	1
  5758  000F0E  D7EC               	goto	L2
  5759  000F10                     l6709:
  5760  000F10  502B               	movf	TeTeclat@files^0,w,c
  5761  000F12  B4D8               	btfsc	status,2,c
  5762  000F14  0012               	return	
  5763                           
  5764                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  5765  000F16  502E               	movf	_tiTeclat^0,w,c
  5766  000F18  EC04  F00E         	call	_TiResetTics
  5767  000F1C  D7EE               	goto	l6699
  5768  000F1E                     l6715:
  5769                           
  5770                           ;TeTeclat.c: 55:    if (files==0) {
  5771  000F1E  502B               	movf	TeTeclat@files^0,w,c
  5772  000F20  A4D8               	btfss	status,2,c
  5773  000F22  D008               	goto	l6721
  5774                           
  5775                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  5776  000F24  988C               	bcf	140,4,c	;volatile
  5777                           
  5778                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  5779  000F26  9A8C               	bcf	140,5,c	;volatile
  5780                           
  5781                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  5782  000F28  8C8C               	bsf	140,6,c	;volatile
  5783                           
  5784                           ;TeTeclat.c: 59:     cols=2;
  5785  000F2A  0E02               	movlw	2
  5786  000F2C  6E2C               	movwf	TeTeclat@cols^0,c
  5787                           
  5788                           ;TeTeclat.c: 60:     state = 0;
  5789  000F2E  0E00               	movlw	0
  5790  000F30  6E2D               	movwf	TeTeclat@state^0,c
  5791                           
  5792                           ;TeTeclat.c: 61:    }
  5793  000F32  0012               	return	
  5794  000F34                     l6721:
  5795  000F34  502B               	movf	TeTeclat@files^0,w,c
  5796  000F36  B4D8               	btfsc	status,2,c
  5797  000F38  0012               	return	
  5798                           
  5799                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  5800  000F3A  502E               	movf	_tiTeclat^0,w,c
  5801  000F3C  EC04  F00E         	call	_TiResetTics
  5802  000F40  D7D4               	goto	l6693
  5803  000F42                     l6727:
  5804                           
  5805                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  5806  000F42  502E               	movf	_tiTeclat^0,w,c
  5807  000F44  EC87  F00D         	call	_TiGetTics
  5808  000F48  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  5809  000F4A  0012               	return	
  5810  000F4C  D7CE               	goto	l6693
  5811  000F4E                     l6731:
  5812                           
  5813                           ;TeTeclat.c: 73:    if (files==0) {
  5814  000F4E  502B               	movf	TeTeclat@files^0,w,c
  5815  000F50  A4D8               	btfss	status,2,c
  5816  000F52  D003               	goto	l6735
  5817                           
  5818                           ;TeTeclat.c: 74:     state = 1;
  5819  000F54  0E01               	movlw	1
  5820  000F56  6E2D               	movwf	TeTeclat@state^0,c
  5821                           
  5822                           ;TeTeclat.c: 75:    }
  5823  000F58  0012               	return	
  5824  000F5A                     l6735:
  5825  000F5A  502B               	movf	TeTeclat@files^0,w,c
  5826  000F5C  B4D8               	btfsc	status,2,c
  5827  000F5E  0012               	return	
  5828                           
  5829                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  5830  000F60  502B               	movf	TeTeclat@files^0,w,c
  5831  000F62  0D03               	mullw	3
  5832  000F64  50F3               	movf	243,w,c
  5833  000F66  0F9E               	addlw	low (_teclaPremuda+253)
  5834  000F68  242C               	addwf	TeTeclat@cols^0,w,c
  5835  000F6A  6ED9               	movwf	fsr2l,c
  5836  000F6C  6ADA               	clrf	fsr2h,c
  5837  000F6E  50DF               	movf	indf2,w,c
  5838  000F70  EC90  F00E         	call	_MsetNovaTecla
  5839                           
  5840                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  5841  000F74  502B               	movf	TeTeclat@files^0,w,c
  5842  000F76  0D03               	mullw	3
  5843  000F78  50F3               	movf	243,w,c
  5844  000F7A  0F9E               	addlw	low (_teclaPremuda+253)
  5845  000F7C  242C               	addwf	TeTeclat@cols^0,w,c
  5846  000F7E  6ED9               	movwf	fsr2l,c
  5847  000F80  6ADA               	clrf	fsr2h,c
  5848  000F82  50DF               	movf	indf2,w,c
  5849  000F84  EC8C  F00E         	call	_SsetNovaTecla
  5850  000F88  D7B0               	goto	l6693
  5851  000F8A                     l6741:
  5852                           
  5853                           ;TeTeclat.c: 84:    if (files==0) {
  5854  000F8A  502B               	movf	TeTeclat@files^0,w,c
  5855  000F8C  A4D8               	btfss	status,2,c
  5856  000F8E  0012               	return	
  5857                           
  5858                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  5859  000F90  502E               	movf	_tiTeclat^0,w,c
  5860  000F92  EC04  F00E         	call	_TiResetTics
  5861  000F96  D7A9               	goto	l6693
  5862  000F98                     l6747:
  5863                           
  5864                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  5865  000F98  502E               	movf	_tiTeclat^0,w,c
  5866  000F9A  EC87  F00D         	call	_TiGetTics
  5867  000F9E  D7D4               	goto	L3
  5868  000FA0                     l6751:
  5869                           
  5870                           ;TeTeclat.c: 95:    if (files!=0) {
  5871  000FA0  502B               	movf	TeTeclat@files^0,w,c
  5872  000FA2  B4D8               	btfsc	status,2,c
  5873  000FA4  D003               	goto	l6755
  5874                           
  5875                           ;TeTeclat.c: 96:     state = 5;
  5876  000FA6  0E05               	movlw	5
  5877  000FA8  6E2D               	movwf	TeTeclat@state^0,c
  5878                           
  5879                           ;TeTeclat.c: 97:    }
  5880  000FAA  0012               	return	
  5881  000FAC                     l6755:
  5882  000FAC  502B               	movf	TeTeclat@files^0,w,c
  5883  000FAE  A4D8               	btfss	status,2,c
  5884  000FB0  0012               	return	
  5885                           
  5886                           ;TeTeclat.c: 99:     state = 0;
  5887  000FB2  0E00               	movlw	0
  5888  000FB4  6E2D               	movwf	TeTeclat@state^0,c
  5889  000FB6  0012               	return	
  5890  000FB8                     l6761:
  5891  000FB8  502D               	movf	TeTeclat@state^0,w,c
  5892  000FBA  6E71               	movwf	??_TeTeclat^0,c
  5893  000FBC  6A72               	clrf	(??_TeTeclat+1)^0,c
  5894                           
  5895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5896                           ; Switch size 1, requested type "simple"
  5897                           ; Number of cases is 1, Range of values is 0 to 0
  5898                           ; switch strategies available:
  5899                           ; Name         Instructions Cycles
  5900                           ; simple_byte            4     3 (average)
  5901                           ;	Chosen strategy is simple_byte
  5902  000FBE  5072               	movf	(??_TeTeclat+1)^0,w,c
  5903  000FC0  0A00               	xorlw	0	; case 0
  5904  000FC2  A4D8               	btfss	status,2,c
  5905  000FC4  0012               	return	
  5906                           
  5907                           ; Switch size 1, requested type "simple"
  5908                           ; Number of cases is 8, Range of values is 0 to 7
  5909                           ; switch strategies available:
  5910                           ; Name         Instructions Cycles
  5911                           ; simple_byte           25    13 (average)
  5912                           ;	Chosen strategy is simple_byte
  5913  000FC6  5071               	movf	??_TeTeclat^0,w,c
  5914  000FC8  0A00               	xorlw	0	; case 0
  5915  000FCA  B4D8               	btfsc	status,2,c
  5916  000FCC  D786               	goto	l6687
  5917  000FCE  0A01               	xorlw	1	; case 1
  5918  000FD0  B4D8               	btfsc	status,2,c
  5919  000FD2  D796               	goto	l6701
  5920  000FD4  0A03               	xorlw	3	; case 2
  5921  000FD6  B4D8               	btfsc	status,2,c
  5922  000FD8  D7A2               	goto	l6715
  5923  000FDA  0A01               	xorlw	1	; case 3
  5924  000FDC  B4D8               	btfsc	status,2,c
  5925  000FDE  D7B1               	goto	l6727
  5926  000FE0  0A07               	xorlw	7	; case 4
  5927  000FE2  B4D8               	btfsc	status,2,c
  5928  000FE4  D7B4               	goto	l6731
  5929  000FE6  0A01               	xorlw	1	; case 5
  5930  000FE8  B4D8               	btfsc	status,2,c
  5931  000FEA  D7CF               	goto	l6741
  5932  000FEC  0A03               	xorlw	3	; case 6
  5933  000FEE  B4D8               	btfsc	status,2,c
  5934  000FF0  D7D3               	goto	l6747
  5935  000FF2  0A01               	xorlw	1	; case 7
  5936  000FF4  A4D8               	btfss	status,2,c
  5937  000FF6  0012               	return	
  5938  000FF8  D7D3               	goto	l6751
  5939  000FFA                     __end_of_TeTeclat:
  5940                           	callstack 0
  5941                           
  5942 ;; *************** function _SsetNovaTecla *****************
  5943 ;; Defined at:
  5944 ;;		line 126 in file "Ssms.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  tecla           1    wreg     unsigned char 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  tecla           1    5[COMRAM] unsigned char 
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1    wreg      void 
  5951 ;; Registers used:
  5952 ;;		wreg
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/1
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1
  5958 ;;      Params:         0       0       0
  5959 ;;      Locals:         1       0       0
  5960 ;;      Temps:          0       0       0
  5961 ;;      Totals:         1       0       0
  5962 ;;Total ram usage:        1 bytes
  5963 ;; Hardware stack levels used: 1
  5964 ;; Hardware stack levels required when called: 2
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_TeTeclat
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text49
  5973  001D18                     __ptext49:
  5974                           	callstack 0
  5975  001D18                     _SsetNovaTecla:
  5976                           	callstack 27
  5977                           
  5978                           ;incstack = 0
  5979                           ;SsetNovaTecla@tecla stored from wreg
  5980  001D18  6E6A               	movwf	SsetNovaTecla@tecla^0,c
  5981                           
  5982                           ;Ssms.c: 127:     novaTecla = tecla;
  5983  001D1A  C06A  F05D         	movff	SsetNovaTecla@tecla,_novaTecla
  5984  001D1E  0012               	return		;funcret
  5985  001D20                     __end_of_SsetNovaTecla:
  5986                           	callstack 0
  5987                           
  5988 ;; *************** function _MsetNovaTecla *****************
  5989 ;; Defined at:
  5990 ;;		line 28 in file "Menu.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  tecla           1    wreg     unsigned char 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  tecla           1    5[COMRAM] unsigned char 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/1
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1
  6004 ;;      Params:         0       0       0
  6005 ;;      Locals:         1       0       0
  6006 ;;      Temps:          0       0       0
  6007 ;;      Totals:         1       0       0
  6008 ;;Total ram usage:        1 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; Hardware stack levels required when called: 2
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_TeTeclat
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text50
  6019  001D20                     __ptext50:
  6020                           	callstack 0
  6021  001D20                     _MsetNovaTecla:
  6022                           	callstack 27
  6023                           
  6024                           ;incstack = 0
  6025                           ;MsetNovaTecla@tecla stored from wreg
  6026  001D20  6E6A               	movwf	MsetNovaTecla@tecla^0,c
  6027                           
  6028                           ;Menu.c: 29:     NovaTecla = tecla;
  6029  001D22  C06A  F05A         	movff	MsetNovaTecla@tecla,_NovaTecla
  6030  001D26  0012               	return		;funcret
  6031  001D28                     __end_of_MsetNovaTecla:
  6032                           	callstack 0
  6033                           
  6034 ;; *************** function _TeInit *****************
  6035 ;; Defined at:
  6036 ;;		line 18 in file "TeTeclat.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1
  6050 ;;      Params:         0       0       0
  6051 ;;      Locals:         0       0       0
  6052 ;;      Temps:          0       0       0
  6053 ;;      Totals:         0       0       0
  6054 ;;Total ram usage:        0 bytes
  6055 ;; Hardware stack levels used: 1
  6056 ;; Hardware stack levels required when called: 3
  6057 ;; This function calls:
  6058 ;;		_TiGetTimer
  6059 ;; This function is called by:
  6060 ;;		_main
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text51
  6065  001D28                     __ptext51:
  6066                           	callstack 0
  6067  001D28                     _TeInit:
  6068                           	callstack 27
  6069                           
  6070                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  6071                           
  6072                           ;incstack = 0
  6073  001D28  ECB9  F00C         	call	_TiGetTimer	;wreg free
  6074  001D2C  6E2E               	movwf	_tiTeclat^0,c
  6075  001D2E  0012               	return		;funcret
  6076  001D30                     __end_of_TeInit:
  6077                           	callstack 0
  6078                           
  6079 ;; *************** function _Sinit *****************
  6080 ;; Defined at:
  6081 ;;		line 18 in file "Ssms.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;		None
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;		None
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  1    wreg      void 
  6088 ;; Registers used:
  6089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1
  6095 ;;      Params:         0       0       0
  6096 ;;      Locals:         0       0       0
  6097 ;;      Temps:          0       0       0
  6098 ;;      Totals:         0       0       0
  6099 ;;Total ram usage:        0 bytes
  6100 ;; Hardware stack levels used: 1
  6101 ;; Hardware stack levels required when called: 3
  6102 ;; This function calls:
  6103 ;;		_TiGetTimer
  6104 ;; This function is called by:
  6105 ;;		_main
  6106 ;; This function uses a non-reentrant model
  6107 ;;
  6108                           
  6109                           	psect	text52
  6110  001D30                     __ptext52:
  6111                           	callstack 0
  6112  001D30                     _Sinit:
  6113                           	callstack 27
  6114                           
  6115                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  6116                           
  6117                           ;incstack = 0
  6118  001D30  ECB9  F00C         	call	_TiGetTimer	;wreg free
  6119  001D34  6E5C               	movwf	_timerSMS^0,c
  6120  001D36  0012               	return		;funcret
  6121  001D38                     __end_of_Sinit:
  6122                           	callstack 0
  6123                           
  6124 ;; *************** function _SMotor *****************
  6125 ;; Defined at:
  6126 ;;		line 22 in file "Ssms.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;		None
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;		None
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1
  6140 ;;      Params:         0       0       0
  6141 ;;      Locals:         0       0       0
  6142 ;;      Temps:          2       0       0
  6143 ;;      Totals:         2       0       0
  6144 ;;Total ram usage:        2 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; Hardware stack levels required when called: 3
  6147 ;; This function calls:
  6148 ;;		_MNovaLletra
  6149 ;;		_TiGetTics
  6150 ;;		_TiResetTics
  6151 ;; This function is called by:
  6152 ;;		_main
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text53
  6157  000B20                     __ptext53:
  6158                           	callstack 0
  6159  000B20                     _SMotor:
  6160                           	callstack 27
  6161                           
  6162                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  6163                           
  6164                           ;incstack = 0
  6165  000B20  D0DF               	goto	l5943
  6166  000B22                     l5787:
  6167                           
  6168                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  6169  000B22  285D               	incf	_novaTecla^0,w,c
  6170  000B24  A4D8               	btfss	status,2,c
  6171  000B26  AE78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6172  000B28  D006               	goto	l5795
  6173                           
  6174                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  6175  000B2A  505C               	movf	_timerSMS^0,w,c
  6176  000B2C  EC04  F00E         	call	_TiResetTics
  6177                           
  6178                           ;Ssms.c: 29:     state = 3;
  6179  000B30  0E03               	movlw	3
  6180  000B32  6E2F               	movwf	SMotor@state^0,c
  6181                           
  6182                           ;Ssms.c: 30:    }
  6183  000B34  0012               	return	
  6184  000B36                     l5795:
  6185  000B36  285D               	incf	_novaTecla^0,w,c
  6186  000B38  A4D8               	btfss	status,2,c
  6187  000B3A  0012               	return	
  6188  000B3C  505C               	movf	_timerSMS^0,w,c
  6189  000B3E  EC87  F00D         	call	_TiGetTics
  6190  000B42  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  6191  000B44  0012               	return	
  6192  000B46  0E5A               	movlw	90
  6193  000B48  5C6A               	subwf	?_TiGetTics^0,w,c
  6194  000B4A  0E02               	movlw	2
  6195  000B4C  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  6196  000B4E  A0D8               	btfss	status,0,c
  6197  000B50  0012               	return	
  6198  000B52  285E               	incf	_lletraASCII^0,w,c
  6199  000B54  B4D8               	btfsc	status,2,c
  6200  000B56  0012               	return	
  6201  000B58  AE78               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6202  000B5A  0012               	return	
  6203                           
  6204                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  6205  000B5C  505E               	movf	_lletraASCII^0,w,c
  6206  000B5E  EC9C  F00E         	call	_MNovaLletra
  6207                           
  6208                           ;Ssms.c: 33:     lletraASCII = -1;
  6209  000B62  685E               	setf	_lletraASCII^0,c
  6210                           
  6211                           ;Ssms.c: 34:     ultimaTecla = -1;
  6212  000B64  685B               	setf	_ultimaTecla^0,c
  6213                           
  6214                           ;Ssms.c: 35:     zeroTecla = 0;
  6215  000B66  0E00               	movlw	0
  6216  000B68  6E30               	movwf	_zeroTecla^0,c
  6217  000B6A                     l5811:
  6218                           
  6219                           ;Ssms.c: 36:     state = 0;
  6220  000B6A  0E00               	movlw	0
  6221  000B6C  6E2F               	movwf	SMotor@state^0,c
  6222  000B6E  0012               	return	
  6223  000B70                     l5813:
  6224                           
  6225                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  6226  000B70  505B               	movf	_ultimaTecla^0,w,c
  6227  000B72  185D               	xorwf	_novaTecla^0,w,c
  6228  000B74  A4D8               	btfss	status,2,c
  6229  000B76  D011               	goto	l5823
  6230  000B78  505C               	movf	_timerSMS^0,w,c
  6231  000B7A  EC87  F00D         	call	_TiGetTics
  6232  000B7E  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  6233  000B80  D006               	goto	u5640
  6234  000B82  0E5A               	movlw	90
  6235  000B84  5C6A               	subwf	?_TiGetTics^0,w,c
  6236  000B86  0E02               	movlw	2
  6237  000B88  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  6238  000B8A  B0D8               	btfsc	status,0,c
  6239  000B8C  D006               	goto	l5823
  6240  000B8E                     u5640:
  6241                           
  6242                           ;Ssms.c: 41:     novaTecla = -1;
  6243  000B8E  685D               	setf	_novaTecla^0,c
  6244                           
  6245                           ;Ssms.c: 42:     sumaPulsacions++;
  6246  000B90  2A31               	incf	_sumaPulsacions^0,f,c
  6247                           
  6248                           ;Ssms.c: 43:     lletraASCII++;
  6249  000B92  2A5E               	incf	_lletraASCII^0,f,c
  6250                           
  6251                           ;Ssms.c: 44:     state = 2;
  6252  000B94  0E02               	movlw	2
  6253  000B96  6E2F               	movwf	SMotor@state^0,c
  6254                           
  6255                           ;Ssms.c: 45:    }
  6256  000B98  0012               	return	
  6257  000B9A                     l5823:
  6258  000B9A  285D               	incf	_novaTecla^0,w,c
  6259  000B9C  B4D8               	btfsc	status,2,c
  6260  000B9E  0012               	return	
  6261  000BA0  505B               	movf	_ultimaTecla^0,w,c
  6262  000BA2  185D               	xorwf	_novaTecla^0,w,c
  6263  000BA4  B4D8               	btfsc	status,2,c
  6264  000BA6  0012               	return	
  6265                           
  6266                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  6267  000BA8  505E               	movf	_lletraASCII^0,w,c
  6268  000BAA  EC9C  F00E         	call	_MNovaLletra
  6269                           
  6270                           ;Ssms.c: 48:     if(novaTecla != 0){
  6271  000BAE  505D               	movf	_novaTecla^0,w,c
  6272  000BB0  B4D8               	btfsc	status,2,c
  6273  000BB2  D006               	goto	l5835
  6274                           
  6275                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  6276  000BB4  505D               	movf	_novaTecla^0,w,c
  6277  000BB6  0F42               	addlw	low (_lletraInici+254)
  6278  000BB8  6ED9               	movwf	fsr2l,c
  6279  000BBA  6ADA               	clrf	fsr2h,c
  6280  000BBC  50DF               	movf	indf2,w,c
  6281  000BBE  D001               	goto	L10
  6282  000BC0                     l5835:
  6283                           
  6284                           ;Ssms.c: 52:       lletraASCII = '0';
  6285  000BC0  0E30               	movlw	48
  6286  000BC2                     L10:
  6287  000BC2  6E5E               	movwf	_lletraASCII^0,c
  6288                           
  6289                           ;Ssms.c: 53:       zeroTecla=0;
  6290  000BC4  0E00               	movlw	0
  6291  000BC6  6E30               	movwf	_zeroTecla^0,c
  6292                           
  6293                           ;Ssms.c: 55:     ultimaTecla = novaTecla;
  6294  000BC8  C05D  F05B         	movff	_novaTecla,_ultimaTecla
  6295                           
  6296                           ;Ssms.c: 56:     sumaPulsacions = 0;
  6297  000BCC  0E00               	movlw	0
  6298  000BCE  6E31               	movwf	_sumaPulsacions^0,c
  6299                           
  6300                           ;Ssms.c: 57:     novaTecla = -1;
  6301  000BD0  685D               	setf	_novaTecla^0,c
  6302                           
  6303                           ;Ssms.c: 58:     state = 0;
  6304  000BD2  0E00               	movlw	0
  6305  000BD4  6E2F               	movwf	SMotor@state^0,c
  6306  000BD6  0012               	return	
  6307  000BD8                     l5841:
  6308                           
  6309                           ;Ssms.c: 62:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  6310  000BD8  0E07               	movlw	7
  6311  000BDA  185B               	xorwf	_ultimaTecla^0,w,c
  6312  000BDC  B4D8               	btfsc	status,2,c
  6313  000BDE  D00A               	goto	l5849
  6314  000BE0  0E09               	movlw	9
  6315  000BE2  185B               	xorwf	_ultimaTecla^0,w,c
  6316  000BE4  B4D8               	btfsc	status,2,c
  6317  000BE6  D006               	goto	l5849
  6318  000BE8  505B               	movf	_ultimaTecla^0,w,c
  6319  000BEA  B4D8               	btfsc	status,2,c
  6320  000BEC  D003               	goto	l5849
  6321                           
  6322                           ;Ssms.c: 63:     state = 5;
  6323  000BEE  0E05               	movlw	5
  6324  000BF0  6E2F               	movwf	SMotor@state^0,c
  6325                           
  6326                           ;Ssms.c: 64:    }
  6327  000BF2  0012               	return	
  6328  000BF4                     l5849:
  6329  000BF4  0E07               	movlw	7
  6330  000BF6  185B               	xorwf	_ultimaTecla^0,w,c
  6331  000BF8  B4D8               	btfsc	status,2,c
  6332  000BFA  D004               	goto	u5720
  6333  000BFC  0E09               	movlw	9
  6334  000BFE  185B               	xorwf	_ultimaTecla^0,w,c
  6335  000C00  A4D8               	btfss	status,2,c
  6336  000C02  D003               	goto	l5855
  6337  000C04                     u5720:
  6338                           
  6339                           ;Ssms.c: 66:     state = 6;
  6340  000C04  0E06               	movlw	6
  6341  000C06  6E2F               	movwf	SMotor@state^0,c
  6342                           
  6343                           ;Ssms.c: 67:    }
  6344  000C08  0012               	return	
  6345  000C0A                     l5855:
  6346  000C0A  505B               	movf	_ultimaTecla^0,w,c
  6347  000C0C  A4D8               	btfss	status,2,c
  6348  000C0E  0012               	return	
  6349                           
  6350                           ;Ssms.c: 69:     zeroTecla++;
  6351  000C10  2A30               	incf	_zeroTecla^0,f,c
  6352                           
  6353                           ;Ssms.c: 70:     if(zeroTecla == 2) zeroTecla = 0;
  6354  000C12  0E02               	movlw	2
  6355  000C14  1830               	xorwf	_zeroTecla^0,w,c
  6356  000C16  A4D8               	btfss	status,2,c
  6357  000C18  D002               	goto	l5863
  6358  000C1A  0E00               	movlw	0
  6359  000C1C  6E30               	movwf	_zeroTecla^0,c
  6360  000C1E                     l5863:
  6361                           
  6362                           ;Ssms.c: 71:     lletraASCII = arrayZero[zeroTecla];
  6363  000C1E  5030               	movf	_zeroTecla^0,w,c
  6364  000C20  0F4D               	addlw	low _arrayZero
  6365  000C22  6ED9               	movwf	fsr2l,c
  6366  000C24  6ADA               	clrf	fsr2h,c
  6367  000C26  50DF               	movf	indf2,w,c
  6368  000C28  D04B               	goto	L5
  6369  000C2A                     l5867:
  6370                           
  6371                           ;Ssms.c: 76:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  6372  000C2A  505D               	movf	_novaTecla^0,w,c
  6373  000C2C  0A80               	xorlw	128
  6374  000C2E  0F7E               	addlw	-130
  6375  000C30  B0D8               	btfsc	status,0,c
  6376  000C32  D003               	goto	u5760
  6377  000C34  505D               	movf	_novaTecla^0,w,c
  6378  000C36  A4D8               	btfss	status,2,c
  6379  000C38  D008               	goto	l5875
  6380  000C3A                     u5760:
  6381  000C3A  505D               	movf	_novaTecla^0,w,c
  6382  000C3C  0A80               	xorlw	128
  6383  000C3E  0F76               	addlw	-138
  6384  000C40  B0D8               	btfsc	status,0,c
  6385  000C42  D003               	goto	l5875
  6386                           
  6387                           ;Ssms.c: 77:     state = 1;
  6388  000C44  0E01               	movlw	1
  6389  000C46  6E2F               	movwf	SMotor@state^0,c
  6390                           
  6391                           ;Ssms.c: 78:    }
  6392  000C48  0012               	return	
  6393  000C4A                     l5875:
  6394  000C4A  505D               	movf	_novaTecla^0,w,c
  6395  000C4C  B4D8               	btfsc	status,2,c
  6396  000C4E  D00E               	goto	l5887
  6397  000C50  505D               	movf	_novaTecla^0,w,c
  6398  000C52  0A80               	xorlw	128
  6399  000C54  0F7E               	addlw	-130
  6400  000C56  B0D8               	btfsc	status,0,c
  6401  000C58  D009               	goto	l5887
  6402  000C5A  285E               	incf	_lletraASCII^0,w,c
  6403  000C5C  A4D8               	btfss	status,2,c
  6404  000C5E  D006               	goto	l5887
  6405                           
  6406                           ;Ssms.c: 80:     MNovaLletra(novaTecla+48);
  6407  000C60  505D               	movf	_novaTecla^0,w,c
  6408  000C62  0F30               	addlw	48
  6409  000C64  EC9C  F00E         	call	_MNovaLletra
  6410  000C68                     l5883:
  6411                           
  6412                           ;Ssms.c: 81:     novaTecla = -1;
  6413  000C68  685D               	setf	_novaTecla^0,c
  6414  000C6A  D77F               	goto	l5811
  6415  000C6C                     l5887:
  6416  000C6C  505D               	movf	_novaTecla^0,w,c
  6417  000C6E  B4D8               	btfsc	status,2,c
  6418  000C70  0012               	return	
  6419  000C72  505D               	movf	_novaTecla^0,w,c
  6420  000C74  0A80               	xorlw	128
  6421  000C76  0F7E               	addlw	-130
  6422  000C78  B0D8               	btfsc	status,0,c
  6423  000C7A  0012               	return	
  6424  000C7C  285E               	incf	_lletraASCII^0,w,c
  6425  000C7E  B4D8               	btfsc	status,2,c
  6426  000C80  0012               	return	
  6427                           
  6428                           ;Ssms.c: 85:     MNovaLletra(lletraASCII);
  6429  000C82  505E               	movf	_lletraASCII^0,w,c
  6430  000C84  EC9C  F00E         	call	_MNovaLletra
  6431                           
  6432                           ;Ssms.c: 86:     lletraASCII = -1;
  6433  000C88  685E               	setf	_lletraASCII^0,c
  6434                           
  6435                           ;Ssms.c: 87:     state = 4;
  6436  000C8A  0E04               	movlw	4
  6437  000C8C  6E2F               	movwf	SMotor@state^0,c
  6438  000C8E  0012               	return	
  6439  000C90                     l5899:
  6440                           
  6441                           ;Ssms.c: 91:    MNovaLletra(novaTecla+48);
  6442  000C90  505D               	movf	_novaTecla^0,w,c
  6443  000C92  0F30               	addlw	48
  6444  000C94  EC9C  F00E         	call	_MNovaLletra
  6445  000C98  D7E7               	goto	l5883
  6446  000C9A                     l5905:
  6447                           
  6448                           ;Ssms.c: 96:    if (sumaPulsacions == 4) {
  6449  000C9A  0E04               	movlw	4
  6450  000C9C  1831               	xorwf	_sumaPulsacions^0,w,c
  6451  000C9E  A4D8               	btfss	status,2,c
  6452  000CA0  D009               	goto	l5913
  6453  000CA2                     u5840:
  6454                           
  6455                           ;Ssms.c: 97:     lletraASCII = lletraInici[ultimaTecla-2];
  6456  000CA2  505B               	movf	_ultimaTecla^0,w,c
  6457  000CA4  0F42               	addlw	low (_lletraInici+254)
  6458  000CA6  6ED9               	movwf	fsr2l,c
  6459  000CA8  6ADA               	clrf	fsr2h,c
  6460  000CAA  50DF               	movf	indf2,w,c
  6461  000CAC  6E5E               	movwf	_lletraASCII^0,c
  6462                           
  6463                           ;Ssms.c: 98:     sumaPulsacions = 0;
  6464  000CAE  0E00               	movlw	0
  6465  000CB0  6E31               	movwf	_sumaPulsacions^0,c
  6466  000CB2  D75B               	goto	l5811
  6467  000CB4                     l5913:
  6468  000CB4  0E03               	movlw	3
  6469  000CB6  1831               	xorwf	_sumaPulsacions^0,w,c
  6470  000CB8  A4D8               	btfss	status,2,c
  6471  000CBA  D004               	goto	l5919
  6472  000CBC                     u5850:
  6473                           
  6474                           ;Ssms.c: 102:     lletraASCII = ultimaTecla+48;
  6475  000CBC  505B               	movf	_ultimaTecla^0,w,c
  6476  000CBE  0F30               	addlw	48
  6477  000CC0                     L5:
  6478  000CC0  6E5E               	movwf	_lletraASCII^0,c
  6479  000CC2  D753               	goto	l5811
  6480  000CC4                     l5919:
  6481  000CC4  0E03               	movlw	3
  6482  000CC6  6031               	cpfslt	_sumaPulsacions^0,c
  6483  000CC8  0012               	return	
  6484  000CCA  D74F               	goto	l5811
  6485  000CCC                     l5923:
  6486                           
  6487                           ;Ssms.c: 110:    if (sumaPulsacions == 4) {
  6488  000CCC  0E04               	movlw	4
  6489  000CCE  1831               	xorwf	_sumaPulsacions^0,w,c
  6490  000CD0  B4D8               	btfsc	status,2,c
  6491  000CD2  D7F4               	goto	u5850
  6492  000CD4  0E05               	movlw	5
  6493  000CD6  1831               	xorwf	_sumaPulsacions^0,w,c
  6494  000CD8  B4D8               	btfsc	status,2,c
  6495  000CDA  D7E3               	goto	u5840
  6496  000CDC  0E04               	movlw	4
  6497  000CDE  D7F3               	goto	L6
  6498  000CE0                     l5943:
  6499  000CE0  502F               	movf	SMotor@state^0,w,c
  6500  000CE2  6E71               	movwf	??_SMotor^0,c
  6501  000CE4  6A72               	clrf	(??_SMotor+1)^0,c
  6502                           
  6503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6504                           ; Switch size 1, requested type "simple"
  6505                           ; Number of cases is 1, Range of values is 0 to 0
  6506                           ; switch strategies available:
  6507                           ; Name         Instructions Cycles
  6508                           ; simple_byte            4     3 (average)
  6509                           ;	Chosen strategy is simple_byte
  6510  000CE6  5072               	movf	(??_SMotor+1)^0,w,c
  6511  000CE8  0A00               	xorlw	0	; case 0
  6512  000CEA  A4D8               	btfss	status,2,c
  6513  000CEC  0012               	return	
  6514                           
  6515                           ; Switch size 1, requested type "simple"
  6516                           ; Number of cases is 7, Range of values is 0 to 6
  6517                           ; switch strategies available:
  6518                           ; Name         Instructions Cycles
  6519                           ; simple_byte           22    12 (average)
  6520                           ;	Chosen strategy is simple_byte
  6521  000CEE  5071               	movf	??_SMotor^0,w,c
  6522  000CF0  0A00               	xorlw	0	; case 0
  6523  000CF2  B4D8               	btfsc	status,2,c
  6524  000CF4  D716               	goto	l5787
  6525  000CF6  0A01               	xorlw	1	; case 1
  6526  000CF8  B4D8               	btfsc	status,2,c
  6527  000CFA  D73A               	goto	l5813
  6528  000CFC  0A03               	xorlw	3	; case 2
  6529  000CFE  B4D8               	btfsc	status,2,c
  6530  000D00  D76B               	goto	l5841
  6531  000D02  0A01               	xorlw	1	; case 3
  6532  000D04  B4D8               	btfsc	status,2,c
  6533  000D06  D791               	goto	l5867
  6534  000D08  0A07               	xorlw	7	; case 4
  6535  000D0A  B4D8               	btfsc	status,2,c
  6536  000D0C  D7C1               	goto	l5899
  6537  000D0E  0A01               	xorlw	1	; case 5
  6538  000D10  B4D8               	btfsc	status,2,c
  6539  000D12  D7C3               	goto	l5905
  6540  000D14  0A03               	xorlw	3	; case 6
  6541  000D16  A4D8               	btfss	status,2,c
  6542  000D18  0012               	return	
  6543  000D1A  D7D8               	goto	l5923
  6544  000D1C                     __end_of_SMotor:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function _MNovaLletra *****************
  6548 ;; Defined at:
  6549 ;;		line 32 in file "Menu.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  lletra          1    wreg     unsigned char 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  lletra          1    5[COMRAM] unsigned char 
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  1    wreg      void 
  6556 ;; Registers used:
  6557 ;;		wreg
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1
  6563 ;;      Params:         0       0       0
  6564 ;;      Locals:         1       0       0
  6565 ;;      Temps:          0       0       0
  6566 ;;      Totals:         1       0       0
  6567 ;;Total ram usage:        1 bytes
  6568 ;; Hardware stack levels used: 1
  6569 ;; Hardware stack levels required when called: 2
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_SMotor
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text54
  6578  001D38                     __ptext54:
  6579                           	callstack 0
  6580  001D38                     _MNovaLletra:
  6581                           	callstack 27
  6582                           
  6583                           ;incstack = 0
  6584                           ;MNovaLletra@lletra stored from wreg
  6585  001D38  6E6A               	movwf	MNovaLletra@lletra^0,c
  6586                           
  6587                           ;Menu.c: 33:     novaLletra = lletra;
  6588  001D3A  C06A  F059         	movff	MNovaLletra@lletra,_novaLletra
  6589  001D3E  0012               	return		;funcret
  6590  001D40                     __end_of_MNovaLletra:
  6591                           	callstack 0
  6592                           
  6593 ;; *************** function _Minit *****************
  6594 ;; Defined at:
  6595 ;;		line 25 in file "Menu.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;		None
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;		None
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  1    wreg      void 
  6602 ;; Registers used:
  6603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1
  6609 ;;      Params:         0       0       0
  6610 ;;      Locals:         0       0       0
  6611 ;;      Temps:          0       0       0
  6612 ;;      Totals:         0       0       0
  6613 ;;Total ram usage:        0 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; Hardware stack levels required when called: 3
  6616 ;; This function calls:
  6617 ;;		_TiGetTimer
  6618 ;; This function is called by:
  6619 ;;		_main
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text55
  6624  001D40                     __ptext55:
  6625                           	callstack 0
  6626  001D40                     _Minit:
  6627                           	callstack 27
  6628                           
  6629                           ;Menu.c: 26:     timerMenu = TiGetTimer();
  6630                           
  6631                           ;incstack = 0
  6632  001D40  ECB9  F00C         	call	_TiGetTimer	;wreg free
  6633  001D44  6E28               	movwf	_timerMenu^0,c
  6634  001D46  0012               	return		;funcret
  6635  001D48                     __end_of_Minit:
  6636                           	callstack 0
  6637                           
  6638 ;; *************** function _LcLCD *****************
  6639 ;; Defined at:
  6640 ;;		line 246 in file "LcTLCD.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;		None
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;		None
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      void 
  6647 ;; Registers used:
  6648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/1
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1
  6654 ;;      Params:         0       0       0
  6655 ;;      Locals:         0       0       0
  6656 ;;      Temps:          0       0       0
  6657 ;;      Totals:         0       0       0
  6658 ;;Total ram usage:        0 bytes
  6659 ;; Hardware stack levels used: 1
  6660 ;; Hardware stack levels required when called: 6
  6661 ;; This function calls:
  6662 ;;		_LcPutChar
  6663 ;; This function is called by:
  6664 ;;		_main
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text56
  6669  0017A0                     __ptext56:
  6670                           	callstack 0
  6671  0017A0                     _LcLCD:
  6672                           	callstack 24
  6673                           
  6674                           ;LcTLCD.c: 247:     if(nou_s == 1){
  6675                           
  6676                           ;incstack = 0
  6677  0017A0  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6678  0017A2  0012               	return	
  6679                           
  6680                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  6681  0017A4  C005  FFF6         	movff	_s_ptr,tblptrl
  6682  0017A8  C006  FFF7         	movff	_s_ptr+1,tblptrh
  6683  0017AC  6AF8               	clrf	tblptru,c
  6684  0017AE  0E01               	movlw	(high __ramtop+-1)
  6685  0017B0  64F7               	cpfsgt	tblptrh,c
  6686  0017B2  D003               	bra	u5547
  6687  0017B4  0008               	tblrd		*
  6688  0017B6  50F5               	movf	tablat,w,c
  6689  0017B8  D005               	bra	u5540
  6690  0017BA                     u5547:
  6691  0017BA  CFF6 FFE1          	movff	tblptrl,fsr1l
  6692  0017BE  CFF7 FFE2          	movff	tblptrh,fsr1h
  6693  0017C2  50E7               	movf	indf1,w,c
  6694  0017C4                     u5540:
  6695  0017C4  EC2C  F00C         	call	_LcPutChar
  6696                           
  6697                           ;LcTLCD.c: 249:         s_ptr++;
  6698  0017C8  4A05               	infsnz	_s_ptr^0,f,c
  6699  0017CA  2A06               	incf	(_s_ptr+1)^0,f,c
  6700                           
  6701                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  6702  0017CC  C005  FFF6         	movff	_s_ptr,tblptrl
  6703  0017D0  C006  FFF7         	movff	_s_ptr+1,tblptrh
  6704  0017D4  6AF8               	clrf	tblptru,c
  6705  0017D6  0E01               	movlw	(high __ramtop+-1)
  6706  0017D8  64F7               	cpfsgt	tblptrh,c
  6707  0017DA  D003               	bra	u5557
  6708  0017DC  0008               	tblrd		*
  6709  0017DE  50F5               	movf	tablat,w,c
  6710  0017E0  D005               	bra	u5550
  6711  0017E2                     u5557:
  6712  0017E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  6713  0017E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  6714  0017EA  50E7               	movf	indf1,w,c
  6715  0017EC                     u5550:
  6716  0017EC  0900               	iorlw	0
  6717  0017EE  A4D8               	btfss	status,2,c
  6718  0017F0  0012               	return	
  6719                           
  6720                           ;LcTLCD.c: 251:             nou_s = 0;
  6721  0017F2  9079               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6722                           
  6723                           ;LcTLCD.c: 252:             s_ptr=0;
  6724  0017F4  0E00               	movlw	0
  6725  0017F6  6E05               	movwf	_s_ptr^0,c
  6726  0017F8  0E00               	movlw	0
  6727  0017FA  6E06               	movwf	(_s_ptr+1)^0,c
  6728  0017FC  0012               	return		;funcret
  6729  0017FE                     __end_of_LcLCD:
  6730                           	callstack 0
  6731                           
  6732 ;; *************** function _LcInit *****************
  6733 ;; Defined at:
  6734 ;;		line 41 in file "LcTLCD.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  rows            1    wreg     unsigned char 
  6737 ;;  columns         1   16[COMRAM] unsigned char 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  rows            1    0[BANK0 ] unsigned char 
  6740 ;;  i               2    1[BANK0 ] int 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1
  6750 ;;      Params:         1       0       0
  6751 ;;      Locals:         0       3       0
  6752 ;;      Temps:          0       0       0
  6753 ;;      Totals:         1       3       0
  6754 ;;Total ram usage:        4 bytes
  6755 ;; Hardware stack levels used: 1
  6756 ;; Hardware stack levels required when called: 4
  6757 ;; This function calls:
  6758 ;;		_CantaIR
  6759 ;;		_EscriuPrimeraOrdre
  6760 ;;		_Espera
  6761 ;;		_TiGetTimer
  6762 ;;		_WaitForBusy
  6763 ;; This function is called by:
  6764 ;;		_main
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text57
  6769  0010E4                     __ptext57:
  6770                           	callstack 0
  6771  0010E4                     _LcInit:
  6772                           	callstack 26
  6773                           
  6774                           ;incstack = 0
  6775                           ;LcInit@rows stored from wreg
  6776  0010E4  0100               	movlb	0	; () banked
  6777  0010E6  6FC0               	movwf	LcInit@rows& (0+255),b
  6778                           
  6779                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  6780  0010E8  ECB9  F00C         	call	_TiGetTimer	;wreg free
  6781  0010EC  6E32               	movwf	_Timer^0,c
  6782                           
  6783                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  6784  0010EE  C0C0  F036         	movff	LcInit@rows,_Rows
  6785  0010F2  C075  F035         	movff	LcInit@columns,_Columns
  6786                           
  6787                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  6788  0010F6  0E00               	movlw	0
  6789  0010F8  6E33               	movwf	_ColumnAct^0,c
  6790  0010FA  C033  F034         	movff	_ColumnAct,_RowAct
  6791                           
  6792                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  6793  0010FE  9894               	bcf	148,4,c	;volatile
  6794  001100  9E95               	bcf	149,7,c	;volatile
  6795  001102  9A94               	bcf	148,5,c	;volatile
  6796                           
  6797                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  6798  001104  0E00               	movlw	0
  6799  001106  0100               	movlb	0	; () banked
  6800  001108  6FC2               	movwf	(LcInit@i+1)& (0+255),b
  6801  00110A  0E00               	movlw	0
  6802  00110C  6FC1               	movwf	LcInit@i& (0+255),b
  6803  00110E                     l5733:
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  6807  00110E  0E00               	movlw	0
  6808  001110  6E72               	movwf	(Espera@ms+1)^0,c
  6809  001112  0E64               	movlw	100
  6810  001114  6E71               	movwf	Espera@ms^0,c
  6811  001116  5032               	movf	_Timer^0,w,c
  6812  001118  ECC1  F00D         	call	_Espera
  6813                           
  6814                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  6815  00111C  0E03               	movlw	3
  6816  00111E  ECB7  F00A         	call	_EscriuPrimeraOrdre
  6817                           
  6818                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  6819  001122  0E00               	movlw	0
  6820  001124  6E72               	movwf	(Espera@ms+1)^0,c
  6821  001126  0E05               	movlw	5
  6822  001128  6E71               	movwf	Espera@ms^0,c
  6823  00112A  5032               	movf	_Timer^0,w,c
  6824  00112C  ECC1  F00D         	call	_Espera
  6825                           
  6826                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  6827  001130  0E03               	movlw	3
  6828  001132  ECB7  F00A         	call	_EscriuPrimeraOrdre
  6829                           
  6830                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  6831  001136  0E00               	movlw	0
  6832  001138  6E72               	movwf	(Espera@ms+1)^0,c
  6833  00113A  0E01               	movlw	1
  6834  00113C  6E71               	movwf	Espera@ms^0,c
  6835  00113E  5032               	movf	_Timer^0,w,c
  6836  001140  ECC1  F00D         	call	_Espera
  6837                           
  6838                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  6839  001144  0E03               	movlw	3
  6840  001146  ECB7  F00A         	call	_EscriuPrimeraOrdre
  6841                           
  6842                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  6843  00114A  0E00               	movlw	0
  6844  00114C  6E72               	movwf	(Espera@ms+1)^0,c
  6845  00114E  0E01               	movlw	1
  6846  001150  6E71               	movwf	Espera@ms^0,c
  6847  001152  5032               	movf	_Timer^0,w,c
  6848  001154  ECC1  F00D         	call	_Espera
  6849                           
  6850                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  6851  001158  0E02               	movlw	2
  6852  00115A  ECB7  F00A         	call	_EscriuPrimeraOrdre
  6853                           
  6854                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  6855  00115E  0E00               	movlw	0
  6856  001160  6E72               	movwf	(Espera@ms+1)^0,c
  6857  001162  0E04               	movlw	4
  6858  001164  6E71               	movwf	Espera@ms^0,c
  6859  001166  5032               	movf	_Timer^0,w,c
  6860  001168  ECC1  F00D         	call	_Espera
  6861                           
  6862                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  6863  00116C  0E28               	movlw	40
  6864  00116E  EC41  F00D         	call	_CantaIR
  6865                           
  6866                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  6867  001172  EC99  F00C         	call	_WaitForBusy	;wreg free
  6868  001176  0E08               	movlw	8
  6869  001178  EC41  F00D         	call	_CantaIR
  6870                           
  6871                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  6872  00117C  EC99  F00C         	call	_WaitForBusy	;wreg free
  6873  001180  0E01               	movlw	1
  6874  001182  EC41  F00D         	call	_CantaIR
  6875                           
  6876                           ;LcTLCD.c: 71:   Espera(Timer,3);
  6877  001186  0E00               	movlw	0
  6878  001188  6E72               	movwf	(Espera@ms+1)^0,c
  6879  00118A  0E03               	movlw	3
  6880  00118C  6E71               	movwf	Espera@ms^0,c
  6881  00118E  5032               	movf	_Timer^0,w,c
  6882  001190  ECC1  F00D         	call	_Espera
  6883                           
  6884                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  6885  001194  EC99  F00C         	call	_WaitForBusy	;wreg free
  6886  001198  0E06               	movlw	6
  6887  00119A  EC41  F00D         	call	_CantaIR
  6888                           
  6889                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  6890  00119E  EC99  F00C         	call	_WaitForBusy	;wreg free
  6891  0011A2  0E0F               	movlw	15
  6892  0011A4  EC41  F00D         	call	_CantaIR
  6893                           
  6894                           ;LcTLCD.c: 74:  }
  6895  0011A8  0100               	movlb	0	; () banked
  6896  0011AA  4BC1               	infsnz	LcInit@i& (0+255),f,b
  6897  0011AC  2BC2               	incf	(LcInit@i+1)& (0+255),f,b
  6898                           
  6899                           ; BSR set to: 0
  6900  0011AE  BFC2               	btfsc	(LcInit@i+1)& (0+255),7,b
  6901  0011B0  D7AE               	goto	l5733
  6902  0011B2  51C2               	movf	(LcInit@i+1)& (0+255),w,b
  6903  0011B4  E104               	bnz	u5520
  6904  0011B6  0E02               	movlw	2
  6905  0011B8  5DC1               	subwf	LcInit@i& (0+255),w,b
  6906  0011BA  A0D8               	btfss	status,0,c
  6907  0011BC  D7A8               	goto	l5733
  6908  0011BE                     u5520:
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;LcTLCD.c: 80:     WaitForBusy();
  6912  0011BE  EC99  F00C         	call	_WaitForBusy	;wreg free
  6913                           
  6914                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  6915  0011C2  0E0C               	movlw	12
  6916  0011C4  EC41  F00D         	call	_CantaIR
  6917  0011C8  0012               	return		;funcret
  6918  0011CA                     __end_of_LcInit:
  6919                           	callstack 0
  6920                           
  6921 ;; *************** function _EscriuPrimeraOrdre *****************
  6922 ;; Defined at:
  6923 ;;		line 230 in file "LcTLCD.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  ordre           1    wreg     unsigned char 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  ordre           1    6[COMRAM] unsigned char 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1
  6937 ;;      Params:         0       0       0
  6938 ;;      Locals:         1       0       0
  6939 ;;      Temps:          1       0       0
  6940 ;;      Totals:         2       0       0
  6941 ;;Total ram usage:        2 bytes
  6942 ;; Hardware stack levels used: 1
  6943 ;; Hardware stack levels required when called: 2
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_LcInit
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           	psect	text58
  6952  00156E                     __ptext58:
  6953                           	callstack 0
  6954  00156E                     _EscriuPrimeraOrdre:
  6955                           	callstack 27
  6956                           
  6957                           ;incstack = 0
  6958                           ;EscriuPrimeraOrdre@ordre stored from wreg
  6959  00156E  6E6B               	movwf	EscriuPrimeraOrdre@ordre^0,c
  6960                           
  6961                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  6962  001570  9694               	bcf	148,3,c	;volatile
  6963  001572  9494               	bcf	148,2,c	;volatile
  6964  001574  9294               	bcf	148,1,c	;volatile
  6965  001576  9094               	bcf	148,0,c	;volatile
  6966  001578  9A8B               	bcf	139,5,c	;volatile
  6967  00157A  9E8C               	bcf	140,7,c	;volatile
  6968                           
  6969                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  6970  00157C  888B               	bsf	139,4,c	;volatile
  6971  00157E  888B               	bsf	139,4,c	;volatile
  6972                           
  6973                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  6974  001580  A66B               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  6975  001582  D003               	goto	u5390
  6976  001584  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6977  001586  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  6978  001588  D001               	goto	u5408
  6979  00158A                     u5390:
  6980  00158A  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6981  00158C                     u5408:
  6982  00158C  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6983  00158E  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6984  001590  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6985  001592  508B               	movf	139,w,c	;volatile
  6986  001594  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6987  001596  0BF7               	andlw	-9
  6988  001598  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6989  00159A  6E8B               	movwf	139,c	;volatile
  6990                           
  6991                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  6992  00159C  A46B               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  6993  00159E  D003               	goto	u5410
  6994  0015A0  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6995  0015A2  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  6996  0015A4  D001               	goto	u5428
  6997  0015A6                     u5410:
  6998  0015A6  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  6999  0015A8                     u5428:
  7000  0015A8  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7001  0015AA  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7002  0015AC  508B               	movf	139,w,c	;volatile
  7003  0015AE  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7004  0015B0  0BFB               	andlw	-5
  7005  0015B2  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7006  0015B4  6E8B               	movwf	139,c	;volatile
  7007                           
  7008                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  7009  0015B6  A26B               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  7010  0015B8  D003               	goto	u5430
  7011  0015BA  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7012  0015BC  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  7013  0015BE  D001               	goto	u5448
  7014  0015C0                     u5430:
  7015  0015C0  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7016  0015C2                     u5448:
  7017  0015C2  466A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7018  0015C4  508B               	movf	139,w,c	;volatile
  7019  0015C6  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7020  0015C8  0BFD               	andlw	-3
  7021  0015CA  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7022  0015CC  6E8B               	movwf	139,c	;volatile
  7023                           
  7024                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  7025  0015CE  A06B               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  7026  0015D0  D003               	goto	u5450
  7027  0015D2  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7028  0015D4  2A6A               	incf	??_EscriuPrimeraOrdre^0,f,c
  7029  0015D6  D001               	goto	u5468
  7030  0015D8                     u5450:
  7031  0015D8  6A6A               	clrf	??_EscriuPrimeraOrdre^0,c
  7032  0015DA                     u5468:
  7033  0015DA  508B               	movf	139,w,c	;volatile
  7034  0015DC  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7035  0015DE  0BFE               	andlw	-2
  7036  0015E0  186A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7037  0015E2  6E8B               	movwf	139,c	;volatile
  7038                           
  7039                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  7040  0015E4  988B               	bcf	139,4,c	;volatile
  7041  0015E6  0012               	return		;funcret
  7042  0015E8                     __end_of_EscriuPrimeraOrdre:
  7043                           	callstack 0
  7044                           
  7045 ;; *************** function _JoystickMotor *****************
  7046 ;; Defined at:
  7047 ;;		line 18 in file "Joystick.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;		None
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;		None
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      void 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0, cstack
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/1
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1
  7061 ;;      Params:         0       0       0
  7062 ;;      Locals:         0       0       0
  7063 ;;      Temps:          2       0       0
  7064 ;;      Totals:         2       0       0
  7065 ;;Total ram usage:        2 bytes
  7066 ;; Hardware stack levels used: 1
  7067 ;; Hardware stack levels required when called: 3
  7068 ;; This function calls:
  7069 ;;		_MNouJoystick
  7070 ;; This function is called by:
  7071 ;;		_main
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text59
  7076  000FFA                     __ptext59:
  7077                           	callstack 0
  7078  000FFA                     _JoystickMotor:
  7079                           	callstack 27
  7080                           
  7081                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  7082                           
  7083                           ;incstack = 0
  7084  000FFA  D05A               	goto	l2769
  7085  000FFC                     l895:
  7086                           
  7087                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7088  000FFC  B2C2               	btfsc	194,1,c	;volatile
  7089  000FFE  D00B               	goto	l896
  7090  001000  0EC8               	movlw	200
  7091  001002  60C4               	cpfslt	196,c	;volatile
  7092  001004  D008               	goto	l896
  7093  001006  0E32               	movlw	50
  7094  001008  64C4               	cpfsgt	196,c	;volatile
  7095  00100A  D005               	goto	l896
  7096                           
  7097                           ;Joystick.c: 23:     ADCON0 = 0x07;
  7098  00100C  0E07               	movlw	7
  7099  00100E  6EC2               	movwf	194,c	;volatile
  7100                           
  7101                           ;Joystick.c: 24:                 cap1 = 1;
  7102  001010  8E77               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7103  001012                     l2699:
  7104                           
  7105                           ;Joystick.c: 25:     state++;
  7106  001012  2A0E               	incf	JoystickMotor@state^0,f,c
  7107                           
  7108                           ;Joystick.c: 26:    }
  7109  001014  D05B               	goto	l903
  7110  001016                     l896:
  7111  001016  B2C2               	btfsc	194,1,c	;volatile
  7112  001018  D010               	goto	l898
  7113  00101A  0EC7               	movlw	199
  7114  00101C  64C4               	cpfsgt	196,c	;volatile
  7115  00101E  D00D               	goto	l898
  7116                           
  7117                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  7118  001020  0E02               	movlw	2
  7119  001022  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7120  001024  B4D8               	btfsc	status,2,c
  7121  001026  D003               	goto	l2707
  7122  001028  0E02               	movlw	2
  7123  00102A  ECA4  F00E         	call	_MNouJoystick
  7124  00102E                     l2707:
  7125                           
  7126                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  7127  00102E  0E02               	movlw	2
  7128  001030  6E0F               	movwf	_ultimaTeclaAD^0,c
  7129                           
  7130                           ;Joystick.c: 30:     ADCON0 = 0x07;
  7131  001032  0E07               	movlw	7
  7132  001034  6EC2               	movwf	194,c	;volatile
  7133                           
  7134                           ;Joystick.c: 31:                 cap1 = 0;
  7135  001036  9E77               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7136  001038  D7EC               	goto	l2699
  7137  00103A                     l898:
  7138  00103A  B2C2               	btfsc	194,1,c	;volatile
  7139  00103C  D047               	goto	l903
  7140  00103E  0E33               	movlw	51
  7141  001040  60C4               	cpfslt	196,c	;volatile
  7142  001042  D044               	goto	l903
  7143                           
  7144                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  7145  001044  0E08               	movlw	8
  7146  001046  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7147  001048  B4D8               	btfsc	status,2,c
  7148  00104A  D003               	goto	l2721
  7149  00104C  0E08               	movlw	8
  7150  00104E  ECA4  F00E         	call	_MNouJoystick
  7151  001052                     l2721:
  7152                           
  7153                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  7154  001052  0E08               	movlw	8
  7155  001054  D7ED               	goto	L7
  7156  001056                     l904:
  7157                           
  7158                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7159  001056  B2C2               	btfsc	194,1,c	;volatile
  7160  001058  D00B               	goto	l905
  7161  00105A  0EC8               	movlw	200
  7162  00105C  60C4               	cpfslt	196,c	;volatile
  7163  00105E  D008               	goto	l905
  7164  001060  0E32               	movlw	50
  7165  001062  64C4               	cpfsgt	196,c	;volatile
  7166  001064  D005               	goto	l905
  7167                           
  7168                           ;Joystick.c: 44:     ADCON0 = 0x03;
  7169  001066  0E03               	movlw	3
  7170  001068  6EC2               	movwf	194,c	;volatile
  7171                           
  7172                           ;Joystick.c: 45:                 cap2 = 1;
  7173  00106A  8C77               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7174  00106C                     l2737:
  7175                           
  7176                           ;Joystick.c: 46:     state--;
  7177  00106C  060E               	decf	JoystickMotor@state^0,f,c
  7178                           
  7179                           ;Joystick.c: 47:    }
  7180  00106E  D02E               	goto	l903
  7181  001070                     l905:
  7182  001070  B2C2               	btfsc	194,1,c	;volatile
  7183  001072  D010               	goto	l907
  7184  001074  0EC7               	movlw	199
  7185  001076  64C4               	cpfsgt	196,c	;volatile
  7186  001078  D00D               	goto	l907
  7187                           
  7188                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  7189  00107A  0E06               	movlw	6
  7190  00107C  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7191  00107E  B4D8               	btfsc	status,2,c
  7192  001080  D003               	goto	l2745
  7193  001082  0E06               	movlw	6
  7194  001084  ECA4  F00E         	call	_MNouJoystick
  7195  001088                     l2745:
  7196                           
  7197                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  7198  001088  0E06               	movlw	6
  7199  00108A  6E0F               	movwf	_ultimaTeclaAD^0,c
  7200                           
  7201                           ;Joystick.c: 51:     ADCON0 = 0x03;
  7202  00108C  0E03               	movlw	3
  7203  00108E  6EC2               	movwf	194,c	;volatile
  7204                           
  7205                           ;Joystick.c: 52:                 cap2 = 0;
  7206  001090  9C77               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7207  001092  D7EC               	goto	l2737
  7208  001094                     l907:
  7209  001094  B2C2               	btfsc	194,1,c	;volatile
  7210  001096  D01A               	goto	l903
  7211  001098  0E33               	movlw	51
  7212  00109A  60C4               	cpfslt	196,c	;volatile
  7213  00109C  D017               	goto	l903
  7214                           
  7215                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  7216  00109E  0E04               	movlw	4
  7217  0010A0  180F               	xorwf	_ultimaTeclaAD^0,w,c
  7218  0010A2  B4D8               	btfsc	status,2,c
  7219  0010A4  D003               	goto	l2759
  7220  0010A6  0E04               	movlw	4
  7221  0010A8  ECA4  F00E         	call	_MNouJoystick
  7222  0010AC                     l2759:
  7223                           
  7224                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  7225  0010AC  0E04               	movlw	4
  7226  0010AE  D7ED               	goto	L8
  7227  0010B0                     l2769:
  7228  0010B0  500E               	movf	JoystickMotor@state^0,w,c
  7229  0010B2  6E6B               	movwf	??_JoystickMotor^0,c
  7230  0010B4  6A6C               	clrf	(??_JoystickMotor+1)^0,c
  7231                           
  7232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7233                           ; Switch size 1, requested type "simple"
  7234                           ; Number of cases is 1, Range of values is 0 to 0
  7235                           ; switch strategies available:
  7236                           ; Name         Instructions Cycles
  7237                           ; simple_byte            4     3 (average)
  7238                           ;	Chosen strategy is simple_byte
  7239  0010B6  506C               	movf	(??_JoystickMotor+1)^0,w,c
  7240  0010B8  0A00               	xorlw	0	; case 0
  7241  0010BA  A4D8               	btfss	status,2,c
  7242  0010BC  D007               	goto	l903
  7243                           
  7244                           ; Switch size 1, requested type "simple"
  7245                           ; Number of cases is 2, Range of values is 0 to 1
  7246                           ; switch strategies available:
  7247                           ; Name         Instructions Cycles
  7248                           ; simple_byte            7     4 (average)
  7249                           ;	Chosen strategy is simple_byte
  7250  0010BE  506B               	movf	??_JoystickMotor^0,w,c
  7251  0010C0  0A00               	xorlw	0	; case 0
  7252  0010C2  B4D8               	btfsc	status,2,c
  7253  0010C4  D79B               	goto	l895
  7254  0010C6  0A01               	xorlw	1	; case 1
  7255  0010C8  B4D8               	btfsc	status,2,c
  7256  0010CA  D7C5               	goto	l904
  7257  0010CC                     l903:
  7258                           
  7259                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  7260  0010CC  AE77               	btfss	(_cap1/(0+8))^0,_cap1& (0+7),c
  7261  0010CE  0012               	return	
  7262  0010D0  AC77               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  7263  0010D2  0012               	return	
  7264  0010D4  500F               	movf	_ultimaTeclaAD^0,w,c
  7265  0010D6  B4D8               	btfsc	status,2,c
  7266  0010D8  0012               	return	
  7267                           
  7268                           ;Joystick.c: 66:         MNouJoystick(-1);
  7269  0010DA  0EFF               	movlw	255
  7270  0010DC  ECA4  F00E         	call	_MNouJoystick
  7271                           
  7272                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  7273  0010E0  680F               	setf	_ultimaTeclaAD^0,c
  7274  0010E2  0012               	return		;funcret
  7275  0010E4                     __end_of_JoystickMotor:
  7276                           	callstack 0
  7277                           
  7278 ;; *************** function _MNouJoystick *****************
  7279 ;; Defined at:
  7280 ;;		line 35 in file "Menu.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  posicio         1    wreg     char 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  posicio         1    5[COMRAM] char 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/1
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1
  7294 ;;      Params:         0       0       0
  7295 ;;      Locals:         1       0       0
  7296 ;;      Temps:          0       0       0
  7297 ;;      Totals:         1       0       0
  7298 ;;Total ram usage:        1 bytes
  7299 ;; Hardware stack levels used: 1
  7300 ;; Hardware stack levels required when called: 2
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_JoystickMotor
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text60
  7309  001D48                     __ptext60:
  7310                           	callstack 0
  7311  001D48                     _MNouJoystick:
  7312                           	callstack 27
  7313                           
  7314                           ;incstack = 0
  7315                           ;MNouJoystick@posicio stored from wreg
  7316  001D48  6E6A               	movwf	MNouJoystick@posicio^0,c
  7317                           
  7318                           ;Menu.c: 36:     novaDireccio = posicio;
  7319  001D4A  C06A  F058         	movff	MNouJoystick@posicio,_novaDireccio
  7320  001D4E  0012               	return		;funcret
  7321  001D50                     __end_of_MNouJoystick:
  7322                           	callstack 0
  7323                           
  7324 ;; *************** function _JoystickInit *****************
  7325 ;; Defined at:
  7326 ;;		line 12 in file "Joystick.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;		None
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;		None
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      void 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMRAM   BANK0   BANK1
  7340 ;;      Params:         0       0       0
  7341 ;;      Locals:         0       0       0
  7342 ;;      Temps:          0       0       0
  7343 ;;      Totals:         0       0       0
  7344 ;;Total ram usage:        0 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; Hardware stack levels required when called: 2
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_main
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           	psect	text61
  7355  001C4A                     __ptext61:
  7356                           	callstack 0
  7357  001C4A                     _JoystickInit:
  7358                           	callstack 28
  7359                           
  7360                           ;Joystick.c: 13:     ADCON0 = 0x01;
  7361                           
  7362                           ;incstack = 0
  7363  001C4A  0E01               	movlw	1
  7364  001C4C  6EC2               	movwf	194,c	;volatile
  7365                           
  7366                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  7367  001C4E  0E0D               	movlw	13
  7368  001C50  6EC1               	movwf	193,c	;volatile
  7369                           
  7370                           ;Joystick.c: 15:     ADCON2 = 0x09;
  7371  001C52  0E09               	movlw	9
  7372  001C54  6EC0               	movwf	192,c	;volatile
  7373                           
  7374                           ;Joystick.c: 16:     ADRESH = 127;
  7375  001C56  0E7F               	movlw	127
  7376  001C58  6EC4               	movwf	196,c	;volatile
  7377  001C5A  0012               	return		;funcret
  7378  001C5C                     __end_of_JoystickInit:
  7379                           	callstack 0
  7380                           
  7381 ;; *************** function _GLCDMotor *****************
  7382 ;; Defined at:
  7383 ;;		line 36 in file "GestioLCD.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;		None
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;		None
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  1    wreg      void 
  7390 ;; Registers used:
  7391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/1
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1
  7397 ;;      Params:         0       0       0
  7398 ;;      Locals:         0       0       0
  7399 ;;      Temps:          2       0       0
  7400 ;;      Totals:         2       0       0
  7401 ;;Total ram usage:        2 bytes
  7402 ;; Hardware stack levels used: 1
  7403 ;; Hardware stack levels required when called: 6
  7404 ;; This function calls:
  7405 ;;		_LcClear
  7406 ;;		_LcGotoXY
  7407 ;;		_LcLliure
  7408 ;;		_LcNewString
  7409 ;;		_LcPutChar
  7410 ;;		_TiGetTics
  7411 ;;		_TiResetTics
  7412 ;; This function is called by:
  7413 ;;		_main
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text62
  7418  000756                     __ptext62:
  7419                           	callstack 0
  7420  000756                     _GLCDMotor:
  7421                           	callstack 24
  7422                           
  7423                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  7424                           
  7425                           ;incstack = 0
  7426  000756  D1B7               	goto	l6679
  7427  000758                     l6493:
  7428                           
  7429                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  7430  000758  0E11               	movlw	17
  7431  00075A  6011               	cpfslt	GLCDMotor@length1^0,c
  7432  00075C  D017               	goto	l6503
  7433  00075E  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7434  000760  D015               	goto	l6503
  7435                           
  7436                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  7437  000762  0E00               	movlw	0
  7438  000764  6E72               	movwf	LcGotoXY@Row^0,c
  7439  000766  0E00               	movlw	0
  7440  000768  EC78  F00C         	call	_LcGotoXY
  7441                           
  7442                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  7443  00076C  5018               	movf	_menuDaltGLCD^0,w,c
  7444  00076E  0D1D               	mullw	29
  7445  000770  50F3               	movf	243,w,c
  7446  000772  0F01               	addlw	low _menuList
  7447  000774  6E75               	movwf	??_GLCDMotor^0,c
  7448  000776  C075  F06D         	movff	??_GLCDMotor,LcNewString@new_s
  7449  00077A  506D               	movf	LcNewString@new_s^0,w,c
  7450  00077C  A4D8               	btfss	status,2,c
  7451  00077E  0E02               	movlw	high __smallconst
  7452  000780  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  7453  000782  EC5C  F00E         	call	_LcNewString	;wreg free
  7454                           
  7455                           ;GestioLCD.c: 53:     state = 5;
  7456  000786  0E05               	movlw	5
  7457  000788  6E17               	movwf	GLCDMotor@state^0,c
  7458                           
  7459                           ;GestioLCD.c: 54:    }
  7460  00078A  0012               	return	
  7461  00078C                     l6503:
  7462  00078C  0E10               	movlw	16
  7463  00078E  6411               	cpfsgt	GLCDMotor@length1^0,c
  7464  000790  0012               	return	
  7465  000792  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7466  000794  0012               	return	
  7467  000796                     u6710:
  7468                           
  7469                           ;GestioLCD.c: 56:     state++;
  7470  000796  2A17               	incf	GLCDMotor@state^0,f,c
  7471  000798  0012               	return	
  7472  00079A                     l6509:
  7473                           
  7474                           ;GestioLCD.c: 60:    if (j>=16) {
  7475  00079A  0E0F               	movlw	15
  7476  00079C  6416               	cpfsgt	GLCDMotor@j^0,c
  7477  00079E  D02B               	goto	l6523
  7478                           
  7479                           ;GestioLCD.c: 61:     min1++;
  7480  0007A0  2A15               	incf	GLCDMotor@min1^0,f,c
  7481                           
  7482                           ;GestioLCD.c: 62:     max1++;
  7483  0007A2  2A56               	incf	GLCDMotor@max1^0,f,c
  7484                           
  7485                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  7486  0007A4  5018               	movf	_menuDaltGLCD^0,w,c
  7487  0007A6  0D1D               	mullw	29
  7488  0007A8  50F3               	movf	243,w,c
  7489  0007AA  0F01               	addlw	low _menuList
  7490  0007AC  2456               	addwf	GLCDMotor@max1^0,w,c
  7491  0007AE  6E75               	movwf	??_GLCDMotor^0,c
  7492  0007B0  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  7493  0007B4                     	if	1	;There is more than 1 active tblptr byte
  7494  0007B4  0E02               	movlw	high __smallconst
  7495  0007B6  6EF7               	movwf	tblptrh,c
  7496  0007B8                     	endif
  7497  0007B8                     	if	0	;tblptru may be non-zero
  7498  0007B8                     	endif
  7499  0007B8                     	if	0	;tblptru may be non-zero
  7500  0007B8                     	endif
  7501  0007B8  0008               	tblrd		*
  7502  0007BA  50F5               	movf	tablat,w,c
  7503  0007BC  0900               	iorlw	0
  7504  0007BE  A4D8               	btfss	status,2,c
  7505  0007C0  D002               	goto	l6517
  7506  0007C2  0E00               	movlw	0
  7507  0007C4  6E56               	movwf	GLCDMotor@max1^0,c
  7508  0007C6                     l6517:
  7509                           
  7510                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  7511  0007C6  5018               	movf	_menuDaltGLCD^0,w,c
  7512  0007C8  0D1D               	mullw	29
  7513  0007CA  50F3               	movf	243,w,c
  7514  0007CC  0F01               	addlw	low _menuList
  7515  0007CE  2415               	addwf	GLCDMotor@min1^0,w,c
  7516  0007D0  6E75               	movwf	??_GLCDMotor^0,c
  7517  0007D2  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  7518  0007D6                     	if	1	;There is more than 1 active tblptr byte
  7519  0007D6  0E02               	movlw	high __smallconst
  7520  0007D8  6EF7               	movwf	tblptrh,c
  7521  0007DA                     	endif
  7522  0007DA                     	if	0	;tblptru may be non-zero
  7523  0007DA                     	endif
  7524  0007DA                     	if	0	;tblptru may be non-zero
  7525  0007DA                     	endif
  7526  0007DA  0008               	tblrd		*
  7527  0007DC  50F5               	movf	tablat,w,c
  7528  0007DE  0900               	iorlw	0
  7529  0007E0  A4D8               	btfss	status,2,c
  7530  0007E2  D002               	goto	l826
  7531  0007E4  0E00               	movlw	0
  7532  0007E6  6E15               	movwf	GLCDMotor@min1^0,c
  7533  0007E8                     l826:
  7534                           
  7535                           ;GestioLCD.c: 65:     j=0;
  7536  0007E8  0E00               	movlw	0
  7537  0007EA  6E16               	movwf	GLCDMotor@j^0,c
  7538                           
  7539                           ;GestioLCD.c: 66:     k1=min1;
  7540  0007EC  C015  F013         	movff	GLCDMotor@min1,GLCDMotor@k1
  7541                           
  7542                           ;GestioLCD.c: 67:     state = 6;
  7543  0007F0  0E06               	movlw	6
  7544  0007F2  6E17               	movwf	GLCDMotor@state^0,c
  7545                           
  7546                           ;GestioLCD.c: 68:    }
  7547  0007F4  0012               	return	
  7548  0007F6                     l6523:
  7549  0007F6  0E10               	movlw	16
  7550  0007F8  6016               	cpfslt	GLCDMotor@j^0,c
  7551  0007FA  0012               	return	
  7552                           
  7553                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  7554  0007FC  0E00               	movlw	0
  7555  0007FE  6E72               	movwf	LcGotoXY@Row^0,c
  7556  000800  5016               	movf	GLCDMotor@j^0,w,c
  7557  000802  EC78  F00C         	call	_LcGotoXY
  7558                           
  7559                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  7560  000806  5018               	movf	_menuDaltGLCD^0,w,c
  7561  000808  0D1D               	mullw	29
  7562  00080A  50F3               	movf	243,w,c
  7563  00080C  0F01               	addlw	low _menuList
  7564  00080E  2413               	addwf	GLCDMotor@k1^0,w,c
  7565  000810  6E75               	movwf	??_GLCDMotor^0,c
  7566  000812  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  7567  000816                     	if	1	;There is more than 1 active tblptr byte
  7568  000816  0E02               	movlw	high __smallconst
  7569  000818  6EF7               	movwf	tblptrh,c
  7570  00081A                     	endif
  7571  00081A                     	if	0	;tblptru may be non-zero
  7572  00081A                     	endif
  7573  00081A                     	if	0	;tblptru may be non-zero
  7574  00081A                     	endif
  7575  00081A  0008               	tblrd		*
  7576  00081C  50F5               	movf	tablat,w,c
  7577  00081E  EC2C  F00C         	call	_LcPutChar
  7578                           
  7579                           ;GestioLCD.c: 72:     j++;
  7580  000822  2A16               	incf	GLCDMotor@j^0,f,c
  7581                           
  7582                           ;GestioLCD.c: 73:     k1++;
  7583  000824  2A13               	incf	GLCDMotor@k1^0,f,c
  7584                           
  7585                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  7586  000826  5018               	movf	_menuDaltGLCD^0,w,c
  7587  000828  0D1D               	mullw	29
  7588  00082A  50F3               	movf	243,w,c
  7589  00082C  0F01               	addlw	low _menuList
  7590  00082E  2413               	addwf	GLCDMotor@k1^0,w,c
  7591  000830  6E75               	movwf	??_GLCDMotor^0,c
  7592  000832  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  7593  000836                     	if	1	;There is more than 1 active tblptr byte
  7594  000836  0E02               	movlw	high __smallconst
  7595  000838  6EF7               	movwf	tblptrh,c
  7596  00083A                     	endif
  7597  00083A                     	if	0	;tblptru may be non-zero
  7598  00083A                     	endif
  7599  00083A                     	if	0	;tblptru may be non-zero
  7600  00083A                     	endif
  7601  00083A  0008               	tblrd		*
  7602  00083C  50F5               	movf	tablat,w,c
  7603  00083E  0900               	iorlw	0
  7604  000840  A4D8               	btfss	status,2,c
  7605  000842  0012               	return	
  7606  000844  0E00               	movlw	0
  7607  000846  6E13               	movwf	GLCDMotor@k1^0,c
  7608  000848  0012               	return	
  7609  00084A                     l6537:
  7610                           
  7611                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  7612  00084A  0E04               	movlw	4
  7613  00084C  6018               	cpfslt	_menuDaltGLCD^0,c
  7614  00084E  D012               	goto	u6810
  7615  000850  D7A2               	goto	u6710
  7616  000852                     u6780:
  7617                           
  7618                           ;GestioLCD.c: 82:     state = 0;
  7619  000852  0E00               	movlw	0
  7620  000854  6E17               	movwf	GLCDMotor@state^0,c
  7621  000856  0012               	return	
  7622  000858                     l6545:
  7623                           
  7624                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  7625  000858  EC62  F00E         	call	_LcLliure	;wreg free
  7626  00085C  A0D8               	btfss	status,0,c
  7627  00085E  D006               	goto	l6551
  7628  000860  0E04               	movlw	4
  7629  000862  6018               	cpfslt	_menuDaltGLCD^0,c
  7630  000864  D003               	goto	l6551
  7631                           
  7632                           ;GestioLCD.c: 87:     state = 7;
  7633  000866  0E07               	movlw	7
  7634  000868  6E17               	movwf	GLCDMotor@state^0,c
  7635                           
  7636                           ;GestioLCD.c: 88:    }
  7637  00086A  0012               	return	
  7638  00086C                     l6551:
  7639  00086C  EC62  F00E         	call	_LcLliure	;wreg free
  7640  000870  A0D8               	btfss	status,0,c
  7641  000872  0012               	return	
  7642  000874                     u6810:
  7643  000874  0E03               	movlw	3
  7644  000876  6418               	cpfsgt	_menuDaltGLCD^0,c
  7645  000878  0012               	return	
  7646  00087A  D7EB               	goto	u6780
  7647  00087C                     l838:
  7648                           
  7649                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  7650  00087C  A078               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  7651  00087E  0012               	return	
  7652  000880  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7653  000882  0012               	return	
  7654                           
  7655                           ;GestioLCD.c: 95:     length1 = 0;
  7656  000884  0E00               	movlw	0
  7657  000886  6E11               	movwf	GLCDMotor@length1^0,c
  7658                           
  7659                           ;GestioLCD.c: 96:     length2 = 0;
  7660  000888  0E00               	movlw	0
  7661  00088A  6E10               	movwf	GLCDMotor@length2^0,c
  7662                           
  7663                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  7664  00088C  0E00               	movlw	0
  7665  00088E  6E72               	movwf	LcGotoXY@Row^0,c
  7666  000890  0E00               	movlw	0
  7667  000892  EC78  F00C         	call	_LcGotoXY
  7668                           
  7669                           ;GestioLCD.c: 98:     min1 = 0;
  7670  000896  0E00               	movlw	0
  7671  000898  6E15               	movwf	GLCDMotor@min1^0,c
  7672                           
  7673                           ;GestioLCD.c: 99:     max1 = 15;
  7674  00089A  0E0F               	movlw	15
  7675  00089C  6E56               	movwf	GLCDMotor@max1^0,c
  7676                           
  7677                           ;GestioLCD.c: 100:     min2 = 0;
  7678  00089E  0E00               	movlw	0
  7679  0008A0  6E14               	movwf	GLCDMotor@min2^0,c
  7680                           
  7681                           ;GestioLCD.c: 101:     max2 = 15;
  7682  0008A2  0E0F               	movlw	15
  7683  0008A4  6E55               	movwf	GLCDMotor@max2^0,c
  7684                           
  7685                           ;GestioLCD.c: 102:     j = 0;
  7686  0008A6  0E00               	movlw	0
  7687  0008A8  6E16               	movwf	GLCDMotor@j^0,c
  7688                           
  7689                           ;GestioLCD.c: 103:     k1 = 0;
  7690  0008AA  0E00               	movlw	0
  7691  0008AC  6E13               	movwf	GLCDMotor@k1^0,c
  7692                           
  7693                           ;GestioLCD.c: 104:     k2 = 0;
  7694  0008AE  0E00               	movlw	0
  7695  0008B0  6E12               	movwf	GLCDMotor@k2^0,c
  7696                           
  7697                           ;GestioLCD.c: 105:     newString = 0;
  7698  0008B2  9078               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  7699  0008B4  D770               	goto	u6710
  7700  0008B6                     l6581:
  7701                           
  7702                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  7703  0008B6  5018               	movf	_menuDaltGLCD^0,w,c
  7704  0008B8  0D1D               	mullw	29
  7705  0008BA  50F3               	movf	243,w,c
  7706  0008BC  0F01               	addlw	low _menuList
  7707  0008BE  2411               	addwf	GLCDMotor@length1^0,w,c
  7708  0008C0  6E75               	movwf	??_GLCDMotor^0,c
  7709  0008C2  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  7710  0008C6                     	if	1	;There is more than 1 active tblptr byte
  7711  0008C6  0E02               	movlw	high __smallconst
  7712  0008C8  6EF7               	movwf	tblptrh,c
  7713  0008CA                     	endif
  7714  0008CA                     	if	0	;tblptru may be non-zero
  7715  0008CA                     	endif
  7716  0008CA                     	if	0	;tblptru may be non-zero
  7717  0008CA                     	endif
  7718  0008CA  0008               	tblrd		*
  7719  0008CC  50F5               	movf	tablat,w,c
  7720  0008CE  0900               	iorlw	0
  7721  0008D0  A4D8               	btfss	status,2,c
  7722  0008D2  D004               	goto	l6587
  7723  0008D4  0E03               	movlw	3
  7724  0008D6  6418               	cpfsgt	_menuDaltGLCD^0,c
  7725  0008D8  D001               	goto	l6587
  7726  0008DA  D75D               	goto	u6710
  7727  0008DC                     l6587:
  7728  0008DC  5018               	movf	_menuDaltGLCD^0,w,c
  7729  0008DE  0D1D               	mullw	29
  7730  0008E0  50F3               	movf	243,w,c
  7731  0008E2  0F01               	addlw	low _menuList
  7732  0008E4  2411               	addwf	GLCDMotor@length1^0,w,c
  7733  0008E6  6E75               	movwf	??_GLCDMotor^0,c
  7734  0008E8  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  7735  0008EC                     	if	1	;There is more than 1 active tblptr byte
  7736  0008EC  0E02               	movlw	high __smallconst
  7737  0008EE  6EF7               	movwf	tblptrh,c
  7738  0008F0                     	endif
  7739  0008F0                     	if	0	;tblptru may be non-zero
  7740  0008F0                     	endif
  7741  0008F0                     	if	0	;tblptru may be non-zero
  7742  0008F0                     	endif
  7743  0008F0  0008               	tblrd		*
  7744  0008F2  50F5               	movf	tablat,w,c
  7745  0008F4  0900               	iorlw	0
  7746  0008F6  B4D8               	btfsc	status,2,c
  7747  0008F8  D002               	goto	l6591
  7748                           
  7749                           ;GestioLCD.c: 114:     length1++;
  7750  0008FA  2A11               	incf	GLCDMotor@length1^0,f,c
  7751                           
  7752                           ;GestioLCD.c: 115:    }
  7753  0008FC  0012               	return	
  7754  0008FE                     l6591:
  7755  0008FE  0E04               	movlw	4
  7756  000900  6018               	cpfslt	_menuDaltGLCD^0,c
  7757  000902  0012               	return	
  7758  000904  5018               	movf	_menuDaltGLCD^0,w,c
  7759  000906  0D1D               	mullw	29
  7760  000908  50F3               	movf	243,w,c
  7761  00090A  0F01               	addlw	low _menuList
  7762  00090C  2411               	addwf	GLCDMotor@length1^0,w,c
  7763  00090E  6E75               	movwf	??_GLCDMotor^0,c
  7764  000910  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  7765  000914                     	if	1	;There is more than 1 active tblptr byte
  7766  000914  0E02               	movlw	high __smallconst
  7767  000916  6EF7               	movwf	tblptrh,c
  7768  000918                     	endif
  7769  000918                     	if	0	;tblptru may be non-zero
  7770  000918                     	endif
  7771  000918                     	if	0	;tblptru may be non-zero
  7772  000918                     	endif
  7773  000918  0008               	tblrd		*
  7774  00091A  50F5               	movf	tablat,w,c
  7775  00091C  0900               	iorlw	0
  7776  00091E  A4D8               	btfss	status,2,c
  7777  000920  0012               	return	
  7778                           
  7779                           ;GestioLCD.c: 117:     state = 13;
  7780  000922  0E0D               	movlw	13
  7781  000924  6E17               	movwf	GLCDMotor@state^0,c
  7782  000926  0012               	return	
  7783  000928                     l6597:
  7784                           
  7785                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  7786  000928  0E11               	movlw	17
  7787  00092A  6010               	cpfslt	GLCDMotor@length2^0,c
  7788  00092C  D019               	goto	l6607
  7789  00092E  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7790  000930  D017               	goto	l6607
  7791                           
  7792                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  7793  000932  0E01               	movlw	1
  7794  000934  6E72               	movwf	LcGotoXY@Row^0,c
  7795  000936  0E00               	movlw	0
  7796  000938  EC78  F00C         	call	_LcGotoXY
  7797                           
  7798                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  7799  00093C  5018               	movf	_menuDaltGLCD^0,w,c
  7800  00093E  0D1D               	mullw	29
  7801  000940  CFF3 F075          	movff	prodl,??_GLCDMotor
  7802  000944  0E1D               	movlw	29
  7803  000946  2675               	addwf	??_GLCDMotor^0,f,c
  7804  000948  5075               	movf	??_GLCDMotor^0,w,c
  7805  00094A  0F01               	addlw	low _menuList
  7806  00094C  6E76               	movwf	(??_GLCDMotor+1)^0,c
  7807  00094E  C076  F06D         	movff	??_GLCDMotor+1,LcNewString@new_s
  7808  000952  506D               	movf	LcNewString@new_s^0,w,c
  7809  000954  A4D8               	btfss	status,2,c
  7810  000956  0E02               	movlw	high __smallconst
  7811  000958  6E6E               	movwf	(LcNewString@new_s+1)^0,c
  7812  00095A  EC5C  F00E         	call	_LcNewString	;wreg free
  7813  00095E  D71B               	goto	u6710
  7814  000960                     l6607:
  7815  000960  0E10               	movlw	16
  7816  000962  6410               	cpfsgt	GLCDMotor@length2^0,c
  7817  000964  0012               	return	
  7818  000966  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7819  000968  0012               	return	
  7820                           
  7821                           ;GestioLCD.c: 127:     state = 9;
  7822  00096A  0E09               	movlw	9
  7823  00096C  6E17               	movwf	GLCDMotor@state^0,c
  7824  00096E  0012               	return	
  7825  000970                     l6613:
  7826                           
  7827                           ;GestioLCD.c: 131:    if (j<16) {
  7828  000970  0E10               	movlw	16
  7829  000972  6016               	cpfslt	GLCDMotor@j^0,c
  7830  000974  D02B               	goto	l6627
  7831                           
  7832                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  7833  000976  0E01               	movlw	1
  7834  000978  6E72               	movwf	LcGotoXY@Row^0,c
  7835  00097A  5016               	movf	GLCDMotor@j^0,w,c
  7836  00097C  EC78  F00C         	call	_LcGotoXY
  7837                           
  7838                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  7839  000980  5018               	movf	_menuDaltGLCD^0,w,c
  7840  000982  0D1D               	mullw	29
  7841  000984  50F3               	movf	243,w,c
  7842  000986  0F01               	addlw	low _menuList
  7843  000988  2412               	addwf	GLCDMotor@k2^0,w,c
  7844  00098A  6E75               	movwf	??_GLCDMotor^0,c
  7845  00098C  0E1D               	movlw	29
  7846  00098E  2675               	addwf	??_GLCDMotor^0,f,c
  7847  000990  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  7848  000994                     	if	1	;There is more than 1 active tblptr byte
  7849  000994  0E02               	movlw	high __smallconst
  7850  000996  6EF7               	movwf	tblptrh,c
  7851  000998                     	endif
  7852  000998                     	if	0	;tblptru may be non-zero
  7853  000998                     	endif
  7854  000998                     	if	0	;tblptru may be non-zero
  7855  000998                     	endif
  7856  000998  0008               	tblrd		*
  7857  00099A  50F5               	movf	tablat,w,c
  7858  00099C  EC2C  F00C         	call	_LcPutChar
  7859                           
  7860                           ;GestioLCD.c: 134:     j++;
  7861  0009A0  2A16               	incf	GLCDMotor@j^0,f,c
  7862                           
  7863                           ;GestioLCD.c: 135:     k2++;
  7864  0009A2  2A12               	incf	GLCDMotor@k2^0,f,c
  7865                           
  7866                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  7867  0009A4  5018               	movf	_menuDaltGLCD^0,w,c
  7868  0009A6  0D1D               	mullw	29
  7869  0009A8  50F3               	movf	243,w,c
  7870  0009AA  0F01               	addlw	low _menuList
  7871  0009AC  2412               	addwf	GLCDMotor@k2^0,w,c
  7872  0009AE  6E75               	movwf	??_GLCDMotor^0,c
  7873  0009B0  0E1D               	movlw	29
  7874  0009B2  2675               	addwf	??_GLCDMotor^0,f,c
  7875  0009B4  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  7876  0009B8                     	if	1	;There is more than 1 active tblptr byte
  7877  0009B8  0E02               	movlw	high __smallconst
  7878  0009BA  6EF7               	movwf	tblptrh,c
  7879  0009BC                     	endif
  7880  0009BC                     	if	0	;tblptru may be non-zero
  7881  0009BC                     	endif
  7882  0009BC                     	if	0	;tblptru may be non-zero
  7883  0009BC                     	endif
  7884  0009BC  0008               	tblrd		*
  7885  0009BE  50F5               	movf	tablat,w,c
  7886  0009C0  0900               	iorlw	0
  7887  0009C2  A4D8               	btfss	status,2,c
  7888  0009C4  0012               	return	
  7889  0009C6  0E00               	movlw	0
  7890  0009C8  6E12               	movwf	GLCDMotor@k2^0,c
  7891  0009CA  0012               	return	
  7892  0009CC                     l6627:
  7893  0009CC  0E0F               	movlw	15
  7894  0009CE  6416               	cpfsgt	GLCDMotor@j^0,c
  7895  0009D0  0012               	return	
  7896                           
  7897                           ;GestioLCD.c: 139:     min2++;
  7898  0009D2  2A14               	incf	GLCDMotor@min2^0,f,c
  7899                           
  7900                           ;GestioLCD.c: 140:     max2++;
  7901  0009D4  2A55               	incf	GLCDMotor@max2^0,f,c
  7902                           
  7903                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  7904  0009D6  5018               	movf	_menuDaltGLCD^0,w,c
  7905  0009D8  0D1D               	mullw	29
  7906  0009DA  50F3               	movf	243,w,c
  7907  0009DC  0F01               	addlw	low _menuList
  7908  0009DE  2455               	addwf	GLCDMotor@max2^0,w,c
  7909  0009E0  6E75               	movwf	??_GLCDMotor^0,c
  7910  0009E2  0E1D               	movlw	29
  7911  0009E4  2675               	addwf	??_GLCDMotor^0,f,c
  7912  0009E6  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  7913  0009EA                     	if	1	;There is more than 1 active tblptr byte
  7914  0009EA  0E02               	movlw	high __smallconst
  7915  0009EC  6EF7               	movwf	tblptrh,c
  7916  0009EE                     	endif
  7917  0009EE                     	if	0	;tblptru may be non-zero
  7918  0009EE                     	endif
  7919  0009EE                     	if	0	;tblptru may be non-zero
  7920  0009EE                     	endif
  7921  0009EE  0008               	tblrd		*
  7922  0009F0  50F5               	movf	tablat,w,c
  7923  0009F2  0900               	iorlw	0
  7924  0009F4  A4D8               	btfss	status,2,c
  7925  0009F6  D002               	goto	l6635
  7926  0009F8  0E00               	movlw	0
  7927  0009FA  6E55               	movwf	GLCDMotor@max2^0,c
  7928  0009FC                     l6635:
  7929                           
  7930                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  7931  0009FC  5018               	movf	_menuDaltGLCD^0,w,c
  7932  0009FE  0D1D               	mullw	29
  7933  000A00  50F3               	movf	243,w,c
  7934  000A02  0F01               	addlw	low _menuList
  7935  000A04  2414               	addwf	GLCDMotor@min2^0,w,c
  7936  000A06  6E75               	movwf	??_GLCDMotor^0,c
  7937  000A08  0E1D               	movlw	29
  7938  000A0A  2675               	addwf	??_GLCDMotor^0,f,c
  7939  000A0C  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  7940  000A10                     	if	1	;There is more than 1 active tblptr byte
  7941  000A10  0E02               	movlw	high __smallconst
  7942  000A12  6EF7               	movwf	tblptrh,c
  7943  000A14                     	endif
  7944  000A14                     	if	0	;tblptru may be non-zero
  7945  000A14                     	endif
  7946  000A14                     	if	0	;tblptru may be non-zero
  7947  000A14                     	endif
  7948  000A14  0008               	tblrd		*
  7949  000A16  50F5               	movf	tablat,w,c
  7950  000A18  0900               	iorlw	0
  7951  000A1A  A4D8               	btfss	status,2,c
  7952  000A1C  D002               	goto	l856
  7953  000A1E  0E00               	movlw	0
  7954  000A20  6E14               	movwf	GLCDMotor@min2^0,c
  7955  000A22                     l856:
  7956                           
  7957                           ;GestioLCD.c: 143:     j=0;
  7958  000A22  0E00               	movlw	0
  7959  000A24  6E16               	movwf	GLCDMotor@j^0,c
  7960                           
  7961                           ;GestioLCD.c: 144:     k2=min2;
  7962  000A26  C014  F012         	movff	GLCDMotor@min2,GLCDMotor@k2
  7963  000A2A  D6B5               	goto	u6710
  7964  000A2C                     l6643:
  7965                           
  7966                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  7967  000A2C  5019               	movf	_timerGLCD^0,w,c
  7968  000A2E  EC87  F00D         	call	_TiGetTics
  7969  000A32  BE6B               	btfsc	(?_TiGetTics+1)^0,7,c
  7970  000A34  D00E               	goto	l858
  7971  000A36  0EB5               	movlw	181
  7972  000A38  5C6A               	subwf	?_TiGetTics^0,w,c
  7973  000A3A  0E04               	movlw	4
  7974  000A3C  586B               	subwfb	(?_TiGetTics+1)^0,w,c
  7975  000A3E  B0D8               	btfsc	status,0,c
  7976  000A40  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  7977  000A42  D007               	goto	l858
  7978  000A44  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7979  000A46  D005               	goto	l858
  7980                           
  7981                           ;GestioLCD.c: 150:     LcClear();
  7982  000A48  ECAF  F00D         	call	_LcClear	;wreg free
  7983  000A4C                     l6651:
  7984                           
  7985                           ;GestioLCD.c: 151:     state = 2;
  7986  000A4C  0E02               	movlw	2
  7987  000A4E  6E17               	movwf	GLCDMotor@state^0,c
  7988                           
  7989                           ;GestioLCD.c: 152:    }
  7990  000A50  0012               	return	
  7991  000A52                     l858:
  7992  000A52  A078               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  7993  000A54  0012               	return	
  7994  000A56  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7995  000A58  0012               	return	
  7996                           
  7997                           ;GestioLCD.c: 154:     LcClear();
  7998  000A5A  ECAF  F00D         	call	_LcClear	;wreg free
  7999  000A5E  D6F9               	goto	u6780
  8000  000A60                     l6659:
  8001                           
  8002                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  8003  000A60  5019               	movf	_timerGLCD^0,w,c
  8004  000A62  EC04  F00E         	call	_TiResetTics
  8005  000A66  D697               	goto	u6710
  8006  000A68                     l6663:
  8007                           
  8008                           ;GestioLCD.c: 163:    if (LcLliure()) {
  8009  000A68  EC62  F00E         	call	_LcLliure	;wreg free
  8010  000A6C  A0D8               	btfss	status,0,c
  8011  000A6E  0012               	return	
  8012                           
  8013                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  8014  000A70  5019               	movf	_timerGLCD^0,w,c
  8015  000A72  EC04  F00E         	call	_TiResetTics
  8016                           
  8017                           ;GestioLCD.c: 165:     state = 11;
  8018  000A76  0E0B               	movlw	11
  8019  000A78  6E17               	movwf	GLCDMotor@state^0,c
  8020  000A7A  0012               	return	
  8021  000A7C                     l6669:
  8022                           
  8023                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  8024  000A7C  5018               	movf	_menuDaltGLCD^0,w,c
  8025  000A7E  0D1D               	mullw	29
  8026  000A80  50F3               	movf	243,w,c
  8027  000A82  0F01               	addlw	low _menuList
  8028  000A84  2410               	addwf	GLCDMotor@length2^0,w,c
  8029  000A86  6E75               	movwf	??_GLCDMotor^0,c
  8030  000A88  0E1D               	movlw	29
  8031  000A8A  2675               	addwf	??_GLCDMotor^0,f,c
  8032  000A8C  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8033  000A90                     	if	1	;There is more than 1 active tblptr byte
  8034  000A90  0E02               	movlw	high __smallconst
  8035  000A92  6EF7               	movwf	tblptrh,c
  8036  000A94                     	endif
  8037  000A94                     	if	0	;tblptru may be non-zero
  8038  000A94                     	endif
  8039  000A94                     	if	0	;tblptru may be non-zero
  8040  000A94                     	endif
  8041  000A94  0008               	tblrd		*
  8042  000A96  50F5               	movf	tablat,w,c
  8043  000A98  0900               	iorlw	0
  8044  000A9A  B4D8               	btfsc	status,2,c
  8045  000A9C  D002               	goto	l6673
  8046                           
  8047                           ;GestioLCD.c: 170:     length2++;
  8048  000A9E  2A10               	incf	GLCDMotor@length2^0,f,c
  8049                           
  8050                           ;GestioLCD.c: 171:    }
  8051  000AA0  0012               	return	
  8052  000AA2                     l6673:
  8053  000AA2  5018               	movf	_menuDaltGLCD^0,w,c
  8054  000AA4  0D1D               	mullw	29
  8055  000AA6  50F3               	movf	243,w,c
  8056  000AA8  0F01               	addlw	low _menuList
  8057  000AAA  2410               	addwf	GLCDMotor@length2^0,w,c
  8058  000AAC  6E75               	movwf	??_GLCDMotor^0,c
  8059  000AAE  0E1D               	movlw	29
  8060  000AB0  2675               	addwf	??_GLCDMotor^0,f,c
  8061  000AB2  C075  FFF6         	movff	??_GLCDMotor,tblptrl
  8062  000AB6                     	if	1	;There is more than 1 active tblptr byte
  8063  000AB6  0E02               	movlw	high __smallconst
  8064  000AB8  6EF7               	movwf	tblptrh,c
  8065  000ABA                     	endif
  8066  000ABA                     	if	0	;tblptru may be non-zero
  8067  000ABA                     	endif
  8068  000ABA                     	if	0	;tblptru may be non-zero
  8069  000ABA                     	endif
  8070  000ABA  0008               	tblrd		*
  8071  000ABC  50F5               	movf	tablat,w,c
  8072  000ABE  0900               	iorlw	0
  8073  000AC0  A4D8               	btfss	status,2,c
  8074  000AC2  0012               	return	
  8075  000AC4  D7C3               	goto	l6651
  8076  000AC6                     l6679:
  8077  000AC6  5017               	movf	GLCDMotor@state^0,w,c
  8078  000AC8  6E75               	movwf	??_GLCDMotor^0,c
  8079  000ACA  6A76               	clrf	(??_GLCDMotor+1)^0,c
  8080                           
  8081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8082                           ; Switch size 1, requested type "simple"
  8083                           ; Number of cases is 1, Range of values is 0 to 0
  8084                           ; switch strategies available:
  8085                           ; Name         Instructions Cycles
  8086                           ; simple_byte            4     3 (average)
  8087                           ;	Chosen strategy is simple_byte
  8088  000ACC  5076               	movf	(??_GLCDMotor+1)^0,w,c
  8089  000ACE  0A00               	xorlw	0	; case 0
  8090  000AD0  A4D8               	btfss	status,2,c
  8091  000AD2  0012               	return	
  8092                           
  8093                           ; Switch size 1, requested type "simple"
  8094                           ; Number of cases is 12, Range of values is 0 to 13
  8095                           ; switch strategies available:
  8096                           ; Name         Instructions Cycles
  8097                           ; simple_byte           37    19 (average)
  8098                           ;	Chosen strategy is simple_byte
  8099  000AD4  5075               	movf	??_GLCDMotor^0,w,c
  8100  000AD6  0A00               	xorlw	0	; case 0
  8101  000AD8  B4D8               	btfsc	status,2,c
  8102  000ADA  D6D0               	goto	l838
  8103  000ADC  0A01               	xorlw	1	; case 1
  8104  000ADE  B4D8               	btfsc	status,2,c
  8105  000AE0  D6EA               	goto	l6581
  8106  000AE2  0A03               	xorlw	3	; case 2
  8107  000AE4  B4D8               	btfsc	status,2,c
  8108  000AE6  D638               	goto	l6493
  8109  000AE8  0A01               	xorlw	1	; case 3
  8110  000AEA  B4D8               	btfsc	status,2,c
  8111  000AEC  D656               	goto	l6509
  8112  000AEE  0A06               	xorlw	6	; case 5
  8113  000AF0  B4D8               	btfsc	status,2,c
  8114  000AF2  D6B2               	goto	l6545
  8115  000AF4  0A03               	xorlw	3	; case 6
  8116  000AF6  B4D8               	btfsc	status,2,c
  8117  000AF8  D6A8               	goto	l6537
  8118  000AFA  0A01               	xorlw	1	; case 7
  8119  000AFC  B4D8               	btfsc	status,2,c
  8120  000AFE  D714               	goto	l6597
  8121  000B00  0A0F               	xorlw	15	; case 8
  8122  000B02  B4D8               	btfsc	status,2,c
  8123  000B04  D7B1               	goto	l6663
  8124  000B06  0A01               	xorlw	1	; case 9
  8125  000B08  B4D8               	btfsc	status,2,c
  8126  000B0A  D732               	goto	l6613
  8127  000B0C  0A03               	xorlw	3	; case 10
  8128  000B0E  B4D8               	btfsc	status,2,c
  8129  000B10  D7A7               	goto	l6659
  8130  000B12  0A01               	xorlw	1	; case 11
  8131  000B14  B4D8               	btfsc	status,2,c
  8132  000B16  D78A               	goto	l6643
  8133  000B18  0A06               	xorlw	6	; case 13
  8134  000B1A  A4D8               	btfss	status,2,c
  8135  000B1C  0012               	return	
  8136  000B1E  D7AE               	goto	l6669
  8137  000B20                     __end_of_GLCDMotor:
  8138                           	callstack 0
  8139                           
  8140 ;; *************** function _LcPutChar *****************
  8141 ;; Defined at:
  8142 ;;		line 134 in file "LcTLCD.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;  c               1    wreg     unsigned char 
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;  c               1   14[COMRAM] unsigned char 
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1    wreg      void 
  8149 ;; Registers used:
  8150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/1
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1
  8156 ;;      Params:         0       0       0
  8157 ;;      Locals:         1       0       0
  8158 ;;      Temps:          0       0       0
  8159 ;;      Totals:         1       0       0
  8160 ;;Total ram usage:        1 bytes
  8161 ;; Hardware stack levels used: 1
  8162 ;; Hardware stack levels required when called: 5
  8163 ;; This function calls:
  8164 ;;		_CantaData
  8165 ;;		_LcGotoXY
  8166 ;;		_WaitForBusy
  8167 ;; This function is called by:
  8168 ;;		_LcLCD
  8169 ;;		_menu
  8170 ;;		_GLCDMotor
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text63
  8175  001858                     __ptext63:
  8176                           	callstack 0
  8177  001858                     _LcPutChar:
  8178                           	callstack 24
  8179                           
  8180                           ;incstack = 0
  8181                           ;LcPutChar@c stored from wreg
  8182  001858  6E73               	movwf	LcPutChar@c^0,c
  8183                           
  8184                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  8185  00185A  EC99  F00C         	call	_WaitForBusy	;wreg free
  8186  00185E  5073               	movf	LcPutChar@c^0,w,c
  8187  001860  EC28  F00D         	call	_CantaData
  8188                           
  8189                           ;LcTLCD.c: 138:  ++ColumnAct;
  8190  001864  2A33               	incf	_ColumnAct^0,f,c
  8191                           
  8192                           ;LcTLCD.c: 140:  if (Rows == 2) {
  8193  001866  0E02               	movlw	2
  8194  001868  1836               	xorwf	_Rows^0,w,c
  8195  00186A  A4D8               	btfss	status,2,c
  8196  00186C  D010               	goto	l5709
  8197                           
  8198                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  8199  00186E  0E27               	movlw	39
  8200  001870  6433               	cpfsgt	_ColumnAct^0,c
  8201  001872  D00D               	goto	l5709
  8202                           
  8203                           ;LcTLCD.c: 142:    ColumnAct = 0;
  8204  001874  0E00               	movlw	0
  8205  001876  6E33               	movwf	_ColumnAct^0,c
  8206                           
  8207                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  8208  001878  2A34               	incf	_RowAct^0,f,c
  8209  00187A  0E01               	movlw	1
  8210  00187C  6434               	cpfsgt	_RowAct^0,c
  8211  00187E  D002               	goto	l5707
  8212  001880  0E00               	movlw	0
  8213  001882  6E34               	movwf	_RowAct^0,c
  8214  001884                     l5707:
  8215                           
  8216                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  8217  001884  C034  F072         	movff	_RowAct,LcGotoXY@Row
  8218  001888  5033               	movf	_ColumnAct^0,w,c
  8219  00188A  EC78  F00C         	call	_LcGotoXY
  8220  00188E                     l5709:
  8221                           
  8222                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  8223  00188E  0434               	decf	_RowAct^0,w,c
  8224  001890  A4D8               	btfss	status,2,c
  8225  001892  0012               	return	
  8226                           
  8227                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  8228  001894  0E27               	movlw	39
  8229  001896  6433               	cpfsgt	_ColumnAct^0,c
  8230  001898  D002               	goto	l5715
  8231  00189A  0E00               	movlw	0
  8232  00189C  6E33               	movwf	_ColumnAct^0,c
  8233  00189E                     l5715:
  8234                           
  8235                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  8236  00189E  C034  F072         	movff	_RowAct,LcGotoXY@Row
  8237  0018A2  5033               	movf	_ColumnAct^0,w,c
  8238  0018A4  EC78  F00C         	call	_LcGotoXY
  8239  0018A8  0012               	return		;funcret
  8240  0018AA                     __end_of_LcPutChar:
  8241                           	callstack 0
  8242                           
  8243 ;; *************** function _CantaData *****************
  8244 ;; Defined at:
  8245 ;;		line 196 in file "LcTLCD.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;  Data            1    wreg     unsigned char 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  Data            1    7[COMRAM] unsigned char 
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  1    wreg      void 
  8252 ;; Registers used:
  8253 ;;		wreg, status,2, status,0, cstack
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/1
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1
  8259 ;;      Params:         0       0       0
  8260 ;;      Locals:         1       0       0
  8261 ;;      Temps:          0       0       0
  8262 ;;      Totals:         1       0       0
  8263 ;;Total ram usage:        1 bytes
  8264 ;; Hardware stack levels used: 1
  8265 ;; Hardware stack levels required when called: 3
  8266 ;; This function calls:
  8267 ;;		_CantaPartAlta
  8268 ;;		_CantaPartBaixa
  8269 ;; This function is called by:
  8270 ;;		_LcPutChar
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text64
  8275  001A50                     __ptext64:
  8276                           	callstack 0
  8277  001A50                     _CantaData:
  8278                           	callstack 25
  8279                           
  8280                           ;incstack = 0
  8281                           ;CantaData@Data stored from wreg
  8282  001A50  6E6C               	movwf	CantaData@Data^0,c
  8283                           
  8284                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8285  001A52  9694               	bcf	148,3,c	;volatile
  8286  001A54  9494               	bcf	148,2,c	;volatile
  8287  001A56  9294               	bcf	148,1,c	;volatile
  8288  001A58  9094               	bcf	148,0,c	;volatile
  8289                           
  8290                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  8291  001A5A  8A8B               	bsf	139,5,c	;volatile
  8292                           
  8293                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  8294  001A5C  9E8C               	bcf	140,7,c	;volatile
  8295                           
  8296                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  8297  001A5E  888B               	bsf	139,4,c	;volatile
  8298                           
  8299                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  8300  001A60  506C               	movf	CantaData@Data^0,w,c
  8301  001A62  EC9C  F00B         	call	_CantaPartAlta
  8302                           
  8303                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  8304  001A66  888B               	bsf	139,4,c	;volatile
  8305                           
  8306                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  8307  001A68  988B               	bcf	139,4,c	;volatile
  8308                           
  8309                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  8310  001A6A  988B               	bcf	139,4,c	;volatile
  8311                           
  8312                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  8313  001A6C  888B               	bsf	139,4,c	;volatile
  8314                           
  8315                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  8316  001A6E  506C               	movf	CantaData@Data^0,w,c
  8317  001A70  EC68  F00B         	call	_CantaPartBaixa
  8318                           
  8319                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  8320  001A74  888B               	bsf	139,4,c	;volatile
  8321                           
  8322                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  8323  001A76  988B               	bcf	139,4,c	;volatile
  8324                           
  8325                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8326  001A78  8694               	bsf	148,3,c	;volatile
  8327  001A7A  8494               	bsf	148,2,c	;volatile
  8328  001A7C  8294               	bsf	148,1,c	;volatile
  8329  001A7E  8094               	bsf	148,0,c	;volatile
  8330  001A80  0012               	return		;funcret
  8331  001A82                     __end_of_CantaData:
  8332                           	callstack 0
  8333                           
  8334 ;; *************** function _LcNewString *****************
  8335 ;; Defined at:
  8336 ;;		line 241 in file "LcTLCD.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  8339 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  8340 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  8341 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1    wreg      void 
  8346 ;; Registers used:
  8347 ;;		wreg, status,2, status,0
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/1
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1
  8353 ;;      Params:         2       0       0
  8354 ;;      Locals:         0       0       0
  8355 ;;      Temps:          0       0       0
  8356 ;;      Totals:         2       0       0
  8357 ;;Total ram usage:        2 bytes
  8358 ;; Hardware stack levels used: 1
  8359 ;; Hardware stack levels required when called: 2
  8360 ;; This function calls:
  8361 ;;		Nothing
  8362 ;; This function is called by:
  8363 ;;		_menu
  8364 ;;		_GLCDMotor
  8365 ;;		_motorJoc
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           	psect	text65
  8370  001CB8                     __ptext65:
  8371                           	callstack 0
  8372  001CB8                     _LcNewString:
  8373                           	callstack 27
  8374                           
  8375                           ;LcTLCD.c: 242:     s_ptr = new_s;
  8376                           
  8377                           ;incstack = 0
  8378  001CB8  C06D  F005         	movff	LcNewString@new_s,_s_ptr
  8379  001CBC  C06E  F006         	movff	LcNewString@new_s+1,_s_ptr+1
  8380                           
  8381                           ;LcTLCD.c: 243:     nou_s = 1;
  8382  001CC0  8079               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8383  001CC2  0012               	return		;funcret
  8384  001CC4                     __end_of_LcNewString:
  8385                           	callstack 0
  8386                           
  8387 ;; *************** function _LcLliure *****************
  8388 ;; Defined at:
  8389 ;;		line 257 in file "LcTLCD.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;		None               void
  8396 ;; Registers used:
  8397 ;;		status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/1
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1
  8403 ;;      Params:         0       0       0
  8404 ;;      Locals:         0       0       0
  8405 ;;      Temps:          0       0       0
  8406 ;;      Totals:         0       0       0
  8407 ;;Total ram usage:        0 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 2
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_menu
  8414 ;;		_GLCDMotor
  8415 ;;		_motorJoc
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text66
  8420  001CC4                     __ptext66:
  8421                           	callstack 0
  8422  001CC4                     _LcLliure:
  8423                           	callstack 27
  8424                           
  8425                           ;LcTLCD.c: 258:     return !nou_s;
  8426                           
  8427                           ;incstack = 0
  8428  001CC4  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8429  001CC6  D002               	goto	l3965
  8430  001CC8  90D8               	bcf	status,0,c
  8431  001CCA  0012               	return	
  8432  001CCC                     l3965:
  8433  001CCC  80D8               	bsf	status,0,c
  8434  001CCE  0012               	return		;funcret
  8435  001CD0                     __end_of_LcLliure:
  8436                           	callstack 0
  8437                           
  8438 ;; *************** function _LcClear *****************
  8439 ;; Defined at:
  8440 ;;		line 84 in file "LcTLCD.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;		None
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;		None
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  1    wreg      void 
  8447 ;; Registers used:
  8448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/1
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1
  8454 ;;      Params:         0       0       0
  8455 ;;      Locals:         0       0       0
  8456 ;;      Temps:          0       0       0
  8457 ;;      Totals:         0       0       0
  8458 ;;Total ram usage:        0 bytes
  8459 ;; Hardware stack levels used: 1
  8460 ;; Hardware stack levels required when called: 5
  8461 ;; This function calls:
  8462 ;;		_CantaIR
  8463 ;;		_Espera
  8464 ;;		_LcGotoXY
  8465 ;;		_WaitForBusy
  8466 ;; This function is called by:
  8467 ;;		_menu
  8468 ;;		_GLCDMotor
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           	psect	text67
  8473  001B5E                     __ptext67:
  8474                           	callstack 0
  8475  001B5E                     _LcClear:
  8476                           	callstack 24
  8477                           
  8478                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  8479                           
  8480                           ;incstack = 0
  8481  001B5E  EC99  F00C         	call	_WaitForBusy	;wreg free
  8482  001B62  0E01               	movlw	1
  8483  001B64  EC41  F00D         	call	_CantaIR
  8484                           
  8485                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  8486  001B68  0E00               	movlw	0
  8487  001B6A  6E72               	movwf	(Espera@ms+1)^0,c
  8488  001B6C  0E03               	movlw	3
  8489  001B6E  6E71               	movwf	Espera@ms^0,c
  8490  001B70  5032               	movf	_Timer^0,w,c
  8491  001B72  ECC1  F00D         	call	_Espera
  8492                           
  8493                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  8494  001B76  0E00               	movlw	0
  8495  001B78  6E72               	movwf	LcGotoXY@Row^0,c
  8496  001B7A  0E00               	movlw	0
  8497  001B7C  EC78  F00C         	call	_LcGotoXY
  8498  001B80  0012               	return		;funcret
  8499  001B82                     __end_of_LcClear:
  8500                           	callstack 0
  8501                           
  8502 ;; *************** function _LcGotoXY *****************
  8503 ;; Defined at:
  8504 ;;		line 106 in file "LcTLCD.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  Column          1    wreg     unsigned char 
  8507 ;;  Row             1   13[COMRAM] unsigned char 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;  Column          1    4[BANK0 ] unsigned char 
  8510 ;;  Fisics          2    0[BANK0 ] int 
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      void 
  8513 ;; Registers used:
  8514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/1
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1
  8520 ;;      Params:         1       0       0
  8521 ;;      Locals:         0       5       0
  8522 ;;      Temps:          0       0       0
  8523 ;;      Totals:         1       5       0
  8524 ;;Total ram usage:        6 bytes
  8525 ;; Hardware stack levels used: 1
  8526 ;; Hardware stack levels required when called: 4
  8527 ;; This function calls:
  8528 ;;		_CantaIR
  8529 ;;		_WaitForBusy
  8530 ;; This function is called by:
  8531 ;;		_LcClear
  8532 ;;		_LcPutChar
  8533 ;;		_menu
  8534 ;;		_GLCDMotor
  8535 ;;		_motorJoc
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           	psect	text68
  8540  0018F0                     __ptext68:
  8541                           	callstack 0
  8542  0018F0                     _LcGotoXY:
  8543                           	callstack 25
  8544                           
  8545                           ;incstack = 0
  8546                           ;LcGotoXY@Column stored from wreg
  8547  0018F0  0100               	movlb	0	; () banked
  8548  0018F2  6FC4               	movwf	LcGotoXY@Column& (0+255),b
  8549                           
  8550                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  8551  0018F4  5072               	movf	LcGotoXY@Row^0,w,c
  8552  0018F6  B4D8               	btfsc	status,2,c
  8553  0018F8  D005               	goto	l5629
  8554  0018FA  0E00               	movlw	0
  8555  0018FC  0100               	movlb	0	; () banked
  8556  0018FE  6FC3               	movwf	(_LcGotoXY$336+1)& (0+255),b
  8557  001900  0E40               	movlw	64
  8558  001902  D004               	goto	L9
  8559  001904                     l5629:
  8560  001904  0E00               	movlw	0
  8561  001906  0100               	movlb	0	; () banked
  8562  001908  6FC3               	movwf	(_LcGotoXY$336+1)& (0+255),b
  8563  00190A  0E00               	movlw	0
  8564  00190C                     L9:
  8565  00190C  6FC2               	movwf	_LcGotoXY$336& (0+255),b
  8566                           
  8567                           ; BSR set to: 0
  8568  00190E  51C4               	movf	LcGotoXY@Column& (0+255),w,b
  8569  001910  25C2               	addwf	_LcGotoXY$336& (0+255),w,b
  8570  001912  6FC0               	movwf	LcGotoXY@Fisics& (0+255),b
  8571  001914  0E00               	movlw	0
  8572  001916  21C3               	addwfc	(_LcGotoXY$336+1)& (0+255),w,b
  8573  001918  6FC1               	movwf	(LcGotoXY@Fisics+1)& (0+255),b
  8574                           
  8575                           ; BSR set to: 0
  8576                           ;LcTLCD.c: 127:  WaitForBusy();
  8577  00191A  EC99  F00C         	call	_WaitForBusy	;wreg free
  8578                           
  8579                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  8580  00191E  0100               	movlb	0	; () banked
  8581  001920  51C0               	movf	LcGotoXY@Fisics& (0+255),w,b
  8582  001922  0980               	iorlw	128
  8583  001924  EC41  F00D         	call	_CantaIR
  8584                           
  8585                           ;LcTLCD.c: 130:  RowAct = Row;
  8586  001928  C072  F034         	movff	LcGotoXY@Row,_RowAct
  8587                           
  8588                           ;LcTLCD.c: 131:  ColumnAct = Column;
  8589  00192C  C0C4  F033         	movff	LcGotoXY@Column,_ColumnAct
  8590  001930  0012               	return		;funcret
  8591  001932                     __end_of_LcGotoXY:
  8592                           	callstack 0
  8593                           
  8594 ;; *************** function _WaitForBusy *****************
  8595 ;; Defined at:
  8596 ;;		line 212 in file "LcTLCD.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;		None
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;  Busy            1   12[COMRAM] unsigned char 
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  1    wreg      void 
  8603 ;; Registers used:
  8604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/0
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMRAM   BANK0   BANK1
  8610 ;;      Params:         0       0       0
  8611 ;;      Locals:         1       0       0
  8612 ;;      Temps:          0       0       0
  8613 ;;      Totals:         1       0       0
  8614 ;;Total ram usage:        1 bytes
  8615 ;; Hardware stack levels used: 1
  8616 ;; Hardware stack levels required when called: 3
  8617 ;; This function calls:
  8618 ;;		_TiGetTics
  8619 ;;		_TiResetTics
  8620 ;; This function is called by:
  8621 ;;		_LcInit
  8622 ;;		_LcClear
  8623 ;;		_LcGotoXY
  8624 ;;		_LcPutChar
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           	psect	text69
  8629  001932                     __ptext69:
  8630                           	callstack 0
  8631  001932                     _WaitForBusy:
  8632                           	callstack 25
  8633                           
  8634                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8635                           
  8636                           ;incstack = 0
  8637  001932  8694               	bsf	148,3,c	;volatile
  8638  001934  8494               	bsf	148,2,c	;volatile
  8639  001936  8294               	bsf	148,1,c	;volatile
  8640  001938  8094               	bsf	148,0,c	;volatile
  8641                           
  8642                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  8643  00193A  9A8B               	bcf	139,5,c	;volatile
  8644                           
  8645                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  8646  00193C  8E8C               	bsf	140,7,c	;volatile
  8647                           
  8648                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  8649  00193E  5032               	movf	_Timer^0,w,c
  8650  001940  EC04  F00E         	call	_TiResetTics
  8651  001944                     l5597:
  8652                           
  8653                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8654  001944  888B               	bsf	139,4,c	;volatile
  8655  001946  888B               	bsf	139,4,c	;volatile
  8656                           
  8657                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  8658  001948  0E00               	movlw	0
  8659  00194A  B682               	btfsc	130,3,c	;volatile
  8660  00194C  0E01               	movlw	1
  8661  00194E  6E71               	movwf	WaitForBusy@Busy^0,c
  8662                           
  8663                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  8664  001950  988B               	bcf	139,4,c	;volatile
  8665                           
  8666                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  8667  001952  988B               	bcf	139,4,c	;volatile
  8668                           
  8669                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8670  001954  888B               	bsf	139,4,c	;volatile
  8671  001956  888B               	bsf	139,4,c	;volatile
  8672                           
  8673                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  8674  001958  988B               	bcf	139,4,c	;volatile
  8675                           
  8676                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  8677  00195A  988B               	bcf	139,4,c	;volatile
  8678                           
  8679                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  8680  00195C  5032               	movf	_Timer^0,w,c
  8681  00195E  EC87  F00D         	call	_TiGetTics
  8682  001962  506A               	movf	?_TiGetTics^0,w,c
  8683  001964  106B               	iorwf	(?_TiGetTics+1)^0,w,c
  8684  001966  A4D8               	btfss	status,2,c
  8685  001968  0012               	return	
  8686                           
  8687                           ;LcTLCD.c: 227:  } while(Busy);
  8688  00196A  5071               	movf	WaitForBusy@Busy^0,w,c
  8689  00196C  B4D8               	btfsc	status,2,c
  8690  00196E  0012               	return	
  8691  001970  D7E9               	goto	l5597
  8692  001972                     __end_of_WaitForBusy:
  8693                           	callstack 0
  8694                           
  8695 ;; *************** function _CantaIR *****************
  8696 ;; Defined at:
  8697 ;;		line 180 in file "LcTLCD.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  IR              1    wreg     unsigned char 
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;  IR              1    7[COMRAM] unsigned char 
  8702 ;; Return value:  Size  Location     Type
  8703 ;;                  1    wreg      void 
  8704 ;; Registers used:
  8705 ;;		wreg, status,2, status,0, cstack
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMRAM   BANK0   BANK1
  8711 ;;      Params:         0       0       0
  8712 ;;      Locals:         1       0       0
  8713 ;;      Temps:          0       0       0
  8714 ;;      Totals:         1       0       0
  8715 ;;Total ram usage:        1 bytes
  8716 ;; Hardware stack levels used: 1
  8717 ;; Hardware stack levels required when called: 3
  8718 ;; This function calls:
  8719 ;;		_CantaPartAlta
  8720 ;;		_CantaPartBaixa
  8721 ;; This function is called by:
  8722 ;;		_LcInit
  8723 ;;		_LcClear
  8724 ;;		_LcGotoXY
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text70
  8729  001A82                     __ptext70:
  8730                           	callstack 0
  8731  001A82                     _CantaIR:
  8732                           	callstack 25
  8733                           
  8734                           ;incstack = 0
  8735                           ;CantaIR@IR stored from wreg
  8736  001A82  6E6C               	movwf	CantaIR@IR^0,c
  8737                           
  8738                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8739  001A84  9694               	bcf	148,3,c	;volatile
  8740  001A86  9494               	bcf	148,2,c	;volatile
  8741  001A88  9294               	bcf	148,1,c	;volatile
  8742  001A8A  9094               	bcf	148,0,c	;volatile
  8743                           
  8744                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  8745  001A8C  9A8B               	bcf	139,5,c	;volatile
  8746                           
  8747                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  8748  001A8E  9E8C               	bcf	140,7,c	;volatile
  8749                           
  8750                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  8751  001A90  888B               	bsf	139,4,c	;volatile
  8752                           
  8753                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  8754  001A92  506C               	movf	CantaIR@IR^0,w,c
  8755  001A94  EC9C  F00B         	call	_CantaPartAlta
  8756                           
  8757                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  8758  001A98  888B               	bsf	139,4,c	;volatile
  8759                           
  8760                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  8761  001A9A  988B               	bcf	139,4,c	;volatile
  8762                           
  8763                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  8764  001A9C  988B               	bcf	139,4,c	;volatile
  8765                           
  8766                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  8767  001A9E  888B               	bsf	139,4,c	;volatile
  8768                           
  8769                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  8770  001AA0  506C               	movf	CantaIR@IR^0,w,c
  8771  001AA2  EC68  F00B         	call	_CantaPartBaixa
  8772                           
  8773                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  8774  001AA6  888B               	bsf	139,4,c	;volatile
  8775                           
  8776                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  8777  001AA8  988B               	bcf	139,4,c	;volatile
  8778                           
  8779                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8780  001AAA  8694               	bsf	148,3,c	;volatile
  8781  001AAC  8494               	bsf	148,2,c	;volatile
  8782  001AAE  8294               	bsf	148,1,c	;volatile
  8783  001AB0  8094               	bsf	148,0,c	;volatile
  8784  001AB2  0012               	return		;funcret
  8785  001AB4                     __end_of_CantaIR:
  8786                           	callstack 0
  8787                           
  8788 ;; *************** function _CantaPartBaixa *****************
  8789 ;; Defined at:
  8790 ;;		line 173 in file "LcTLCD.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  c               1    wreg     unsigned char 
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;  c               1    6[COMRAM] unsigned char 
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  1    wreg      void 
  8797 ;; Registers used:
  8798 ;;		wreg, status,2, status,0
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/1
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMRAM   BANK0   BANK1
  8804 ;;      Params:         0       0       0
  8805 ;;      Locals:         1       0       0
  8806 ;;      Temps:          1       0       0
  8807 ;;      Totals:         2       0       0
  8808 ;;Total ram usage:        2 bytes
  8809 ;; Hardware stack levels used: 1
  8810 ;; Hardware stack levels required when called: 2
  8811 ;; This function calls:
  8812 ;;		Nothing
  8813 ;; This function is called by:
  8814 ;;		_CantaIR
  8815 ;;		_CantaData
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text71
  8820  0016D0                     __ptext71:
  8821                           	callstack 0
  8822  0016D0                     _CantaPartBaixa:
  8823                           	callstack 25
  8824                           
  8825                           ;incstack = 0
  8826                           ;CantaPartBaixa@c stored from wreg
  8827  0016D0  6E6B               	movwf	CantaPartBaixa@c^0,c
  8828                           
  8829                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  8830  0016D2  A66B               	btfss	CantaPartBaixa@c^0,3,c
  8831  0016D4  D003               	goto	u5250
  8832  0016D6  6A6A               	clrf	??_CantaPartBaixa^0,c
  8833  0016D8  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8834  0016DA  D001               	goto	u5268
  8835  0016DC                     u5250:
  8836  0016DC  6A6A               	clrf	??_CantaPartBaixa^0,c
  8837  0016DE                     u5268:
  8838  0016DE  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8839  0016E0  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8840  0016E2  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8841  0016E4  508B               	movf	139,w,c	;volatile
  8842  0016E6  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8843  0016E8  0BF7               	andlw	-9
  8844  0016EA  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8845  0016EC  6E8B               	movwf	139,c	;volatile
  8846                           
  8847                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  8848  0016EE  A46B               	btfss	CantaPartBaixa@c^0,2,c
  8849  0016F0  D003               	goto	u5270
  8850  0016F2  6A6A               	clrf	??_CantaPartBaixa^0,c
  8851  0016F4  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8852  0016F6  D001               	goto	u5288
  8853  0016F8                     u5270:
  8854  0016F8  6A6A               	clrf	??_CantaPartBaixa^0,c
  8855  0016FA                     u5288:
  8856  0016FA  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8857  0016FC  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8858  0016FE  508B               	movf	139,w,c	;volatile
  8859  001700  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8860  001702  0BFB               	andlw	-5
  8861  001704  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8862  001706  6E8B               	movwf	139,c	;volatile
  8863                           
  8864                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  8865  001708  A26B               	btfss	CantaPartBaixa@c^0,1,c
  8866  00170A  D003               	goto	u5290
  8867  00170C  6A6A               	clrf	??_CantaPartBaixa^0,c
  8868  00170E  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8869  001710  D001               	goto	u5308
  8870  001712                     u5290:
  8871  001712  6A6A               	clrf	??_CantaPartBaixa^0,c
  8872  001714                     u5308:
  8873  001714  466A               	rlncf	??_CantaPartBaixa^0,f,c
  8874  001716  508B               	movf	139,w,c	;volatile
  8875  001718  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8876  00171A  0BFD               	andlw	-3
  8877  00171C  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8878  00171E  6E8B               	movwf	139,c	;volatile
  8879                           
  8880                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  8881  001720  A06B               	btfss	CantaPartBaixa@c^0,0,c
  8882  001722  D003               	goto	u5310
  8883  001724  6A6A               	clrf	??_CantaPartBaixa^0,c
  8884  001726  2A6A               	incf	??_CantaPartBaixa^0,f,c
  8885  001728  D001               	goto	u5328
  8886  00172A                     u5310:
  8887  00172A  6A6A               	clrf	??_CantaPartBaixa^0,c
  8888  00172C                     u5328:
  8889  00172C  508B               	movf	139,w,c	;volatile
  8890  00172E  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8891  001730  0BFE               	andlw	-2
  8892  001732  186A               	xorwf	??_CantaPartBaixa^0,w,c
  8893  001734  6E8B               	movwf	139,c	;volatile
  8894  001736  0012               	return		;funcret
  8895  001738                     __end_of_CantaPartBaixa:
  8896                           	callstack 0
  8897                           
  8898 ;; *************** function _CantaPartAlta *****************
  8899 ;; Defined at:
  8900 ;;		line 166 in file "LcTLCD.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  c               1    wreg     unsigned char 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  c               1    6[COMRAM] unsigned char 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      void 
  8907 ;; Registers used:
  8908 ;;		wreg, status,2, status,0
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/1
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1
  8914 ;;      Params:         0       0       0
  8915 ;;      Locals:         1       0       0
  8916 ;;      Temps:          1       0       0
  8917 ;;      Totals:         2       0       0
  8918 ;;Total ram usage:        2 bytes
  8919 ;; Hardware stack levels used: 1
  8920 ;; Hardware stack levels required when called: 2
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_CantaIR
  8925 ;;		_CantaData
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           
  8929                           	psect	text72
  8930  001738                     __ptext72:
  8931                           	callstack 0
  8932  001738                     _CantaPartAlta:
  8933                           	callstack 25
  8934                           
  8935                           ;incstack = 0
  8936                           ;CantaPartAlta@c stored from wreg
  8937  001738  6E6B               	movwf	CantaPartAlta@c^0,c
  8938                           
  8939                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  8940  00173A  AE6B               	btfss	CantaPartAlta@c^0,7,c
  8941  00173C  D003               	goto	u5170
  8942  00173E  6A6A               	clrf	??_CantaPartAlta^0,c
  8943  001740  2A6A               	incf	??_CantaPartAlta^0,f,c
  8944  001742  D001               	goto	u5188
  8945  001744                     u5170:
  8946  001744  6A6A               	clrf	??_CantaPartAlta^0,c
  8947  001746                     u5188:
  8948  001746  466A               	rlncf	??_CantaPartAlta^0,f,c
  8949  001748  466A               	rlncf	??_CantaPartAlta^0,f,c
  8950  00174A  466A               	rlncf	??_CantaPartAlta^0,f,c
  8951  00174C  508B               	movf	139,w,c	;volatile
  8952  00174E  186A               	xorwf	??_CantaPartAlta^0,w,c
  8953  001750  0BF7               	andlw	-9
  8954  001752  186A               	xorwf	??_CantaPartAlta^0,w,c
  8955  001754  6E8B               	movwf	139,c	;volatile
  8956                           
  8957                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  8958  001756  AC6B               	btfss	CantaPartAlta@c^0,6,c
  8959  001758  D003               	goto	u5190
  8960  00175A  6A6A               	clrf	??_CantaPartAlta^0,c
  8961  00175C  2A6A               	incf	??_CantaPartAlta^0,f,c
  8962  00175E  D001               	goto	u5208
  8963  001760                     u5190:
  8964  001760  6A6A               	clrf	??_CantaPartAlta^0,c
  8965  001762                     u5208:
  8966  001762  466A               	rlncf	??_CantaPartAlta^0,f,c
  8967  001764  466A               	rlncf	??_CantaPartAlta^0,f,c
  8968  001766  508B               	movf	139,w,c	;volatile
  8969  001768  186A               	xorwf	??_CantaPartAlta^0,w,c
  8970  00176A  0BFB               	andlw	-5
  8971  00176C  186A               	xorwf	??_CantaPartAlta^0,w,c
  8972  00176E  6E8B               	movwf	139,c	;volatile
  8973                           
  8974                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  8975  001770  AA6B               	btfss	CantaPartAlta@c^0,5,c
  8976  001772  D003               	goto	u5210
  8977  001774  6A6A               	clrf	??_CantaPartAlta^0,c
  8978  001776  2A6A               	incf	??_CantaPartAlta^0,f,c
  8979  001778  D001               	goto	u5228
  8980  00177A                     u5210:
  8981  00177A  6A6A               	clrf	??_CantaPartAlta^0,c
  8982  00177C                     u5228:
  8983  00177C  466A               	rlncf	??_CantaPartAlta^0,f,c
  8984  00177E  508B               	movf	139,w,c	;volatile
  8985  001780  186A               	xorwf	??_CantaPartAlta^0,w,c
  8986  001782  0BFD               	andlw	-3
  8987  001784  186A               	xorwf	??_CantaPartAlta^0,w,c
  8988  001786  6E8B               	movwf	139,c	;volatile
  8989                           
  8990                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  8991  001788  A86B               	btfss	CantaPartAlta@c^0,4,c
  8992  00178A  D003               	goto	u5230
  8993  00178C  6A6A               	clrf	??_CantaPartAlta^0,c
  8994  00178E  2A6A               	incf	??_CantaPartAlta^0,f,c
  8995  001790  D001               	goto	u5248
  8996  001792                     u5230:
  8997  001792  6A6A               	clrf	??_CantaPartAlta^0,c
  8998  001794                     u5248:
  8999  001794  508B               	movf	139,w,c	;volatile
  9000  001796  186A               	xorwf	??_CantaPartAlta^0,w,c
  9001  001798  0BFE               	andlw	-2
  9002  00179A  186A               	xorwf	??_CantaPartAlta^0,w,c
  9003  00179C  6E8B               	movwf	139,c	;volatile
  9004  00179E  0012               	return		;funcret
  9005  0017A0                     __end_of_CantaPartAlta:
  9006                           	callstack 0
  9007                           
  9008 ;; *************** function _Espera *****************
  9009 ;; Defined at:
  9010 ;;		line 161 in file "LcTLCD.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  Timer           1    wreg     unsigned char 
  9013 ;;  ms              2   12[COMRAM] int 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  Timer           1   15[COMRAM] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      void 
  9018 ;; Registers used:
  9019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1
  9025 ;;      Params:         2       0       0
  9026 ;;      Locals:         1       0       0
  9027 ;;      Temps:          1       0       0
  9028 ;;      Totals:         4       0       0
  9029 ;;Total ram usage:        4 bytes
  9030 ;; Hardware stack levels used: 1
  9031 ;; Hardware stack levels required when called: 3
  9032 ;; This function calls:
  9033 ;;		_TiGetTics
  9034 ;;		_TiResetTics
  9035 ;; This function is called by:
  9036 ;;		_LcInit
  9037 ;;		_LcClear
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text73
  9042  001B82                     __ptext73:
  9043                           	callstack 0
  9044  001B82                     _Espera:
  9045                           	callstack 25
  9046                           
  9047                           ;incstack = 0
  9048                           ;Espera@Timer stored from wreg
  9049  001B82  6E74               	movwf	Espera@Timer^0,c
  9050                           
  9051                           ;LcTLCD.c: 162:  TiResetTics(Timer);
  9052  001B84  5074               	movf	Espera@Timer^0,w,c
  9053  001B86  EC04  F00E         	call	_TiResetTics
  9054  001B8A                     l5623:
  9055  001B8A  5074               	movf	Espera@Timer^0,w,c
  9056  001B8C  EC87  F00D         	call	_TiGetTics
  9057  001B90  5071               	movf	Espera@ms^0,w,c
  9058  001B92  5C6A               	subwf	?_TiGetTics^0,w,c
  9059  001B94  506B               	movf	(?_TiGetTics+1)^0,w,c
  9060  001B96  0A80               	xorlw	128
  9061  001B98  6E73               	movwf	??_Espera^0,c
  9062  001B9A  5072               	movf	(Espera@ms+1)^0,w,c
  9063  001B9C  0A80               	xorlw	128
  9064  001B9E  5873               	subwfb	??_Espera^0,w,c
  9065  001BA0  B0D8               	btfsc	status,0,c
  9066  001BA2  0012               	return	
  9067  001BA4  D7F2               	goto	l5623
  9068  001BA6                     __end_of_Espera:
  9069                           	callstack 0
  9070                           
  9071 ;; *************** function _TiResetTics *****************
  9072 ;; Defined at:
  9073 ;;		line 55 in file "TiTTimer.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;  Handle          1    wreg     unsigned char 
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;  Handle          1    5[COMRAM] unsigned char 
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  1    wreg      void 
  9080 ;; Registers used:
  9081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9082 ;; Tracked objects:
  9083 ;;		On entry : 0/1
  9084 ;;		On exit  : 0/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMRAM   BANK0   BANK1
  9087 ;;      Params:         0       0       0
  9088 ;;      Locals:         1       0       0
  9089 ;;      Temps:          0       0       0
  9090 ;;      Totals:         1       0       0
  9091 ;;Total ram usage:        1 bytes
  9092 ;; Hardware stack levels used: 1
  9093 ;; Hardware stack levels required when called: 2
  9094 ;; This function calls:
  9095 ;;		Nothing
  9096 ;; This function is called by:
  9097 ;;		_Espera
  9098 ;;		_WaitForBusy
  9099 ;;		_SMotor
  9100 ;;		_TeTeclat
  9101 ;;		_menu
  9102 ;;		_motorAltaveu
  9103 ;;		_GLCDMotor
  9104 ;;		_motorHora
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           	psect	text74
  9109  001C08                     __ptext74:
  9110                           	callstack 0
  9111  001C08                     _TiResetTics:
  9112                           	callstack 25
  9113                           
  9114                           ;incstack = 0
  9115                           ;TiResetTics@Handle stored from wreg
  9116  001C08  6E6A               	movwf	TiResetTics@Handle^0,c
  9117                           
  9118                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  9119  001C0A  506A               	movf	TiResetTics@Handle^0,w,c
  9120  001C0C  0D03               	mullw	3
  9121  001C0E  50F3               	movf	243,w,c
  9122  001C10  0F80               	addlw	low _s_Timers
  9123  001C12  6ED9               	movwf	fsr2l,c
  9124  001C14  6ADA               	clrf	fsr2h,c
  9125  001C16  C003  FFDE         	movff	_h_Tics,postinc2
  9126  001C1A  C004  FFDD         	movff	_h_Tics+1,postdec2
  9127  001C1E  0012               	return		;funcret
  9128  001C20                     __end_of_TiResetTics:
  9129                           	callstack 0
  9130                           
  9131 ;; *************** function _TiGetTics *****************
  9132 ;; Defined at:
  9133 ;;		line 61 in file "TiTTimer.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;  Handle          1    wreg     unsigned char 
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;  Handle          1    9[COMRAM] unsigned char 
  9138 ;;  actual          2   10[COMRAM] volatile unsigned int 
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  2    5[COMRAM] int 
  9141 ;; Registers used:
  9142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/1
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1
  9148 ;;      Params:         2       0       0
  9149 ;;      Locals:         3       0       0
  9150 ;;      Temps:          2       0       0
  9151 ;;      Totals:         7       0       0
  9152 ;;Total ram usage:        7 bytes
  9153 ;; Hardware stack levels used: 1
  9154 ;; Hardware stack levels required when called: 2
  9155 ;; This function calls:
  9156 ;;		Nothing
  9157 ;; This function is called by:
  9158 ;;		_Espera
  9159 ;;		_WaitForBusy
  9160 ;;		_SMotor
  9161 ;;		_TeTeclat
  9162 ;;		_menu
  9163 ;;		_motorAltaveu
  9164 ;;		_GLCDMotor
  9165 ;;		_motorHora
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text75
  9170  001B0E                     __ptext75:
  9171                           	callstack 0
  9172  001B0E                     _TiGetTics:
  9173                           	callstack 25
  9174                           
  9175                           ;incstack = 0
  9176                           ;TiGetTics@Handle stored from wreg
  9177  001B0E  6E6E               	movwf	TiGetTics@Handle^0,c
  9178                           
  9179                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  9180  001B10  C003  F06F         	movff	_h_Tics,TiGetTics@actual	;volatile
  9181  001B14  C004  F070         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  9182                           
  9183                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  9184  001B18  506E               	movf	TiGetTics@Handle^0,w,c
  9185  001B1A  0D03               	mullw	3
  9186  001B1C  50F3               	movf	243,w,c
  9187  001B1E  0F80               	addlw	low _s_Timers
  9188  001B20  6ED9               	movwf	fsr2l,c
  9189  001B22  6ADA               	clrf	fsr2h,c
  9190  001B24  CFDE F06C          	movff	postinc2,??_TiGetTics
  9191  001B28  CFDD F06D          	movff	postdec2,??_TiGetTics+1
  9192  001B2C  506C               	movf	??_TiGetTics^0,w,c
  9193  001B2E  5C6F               	subwf	TiGetTics@actual^0,w,c	;volatile
  9194  001B30  6E6A               	movwf	?_TiGetTics^0,c
  9195  001B32  506D               	movf	(??_TiGetTics+1)^0,w,c
  9196  001B34  5870               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  9197  001B36  6E6B               	movwf	(?_TiGetTics+1)^0,c
  9198  001B38  0012               	return		;funcret
  9199  001B3A                     __end_of_TiGetTics:
  9200                           	callstack 0
  9201                           
  9202 ;; *************** function _GLCDInit *****************
  9203 ;; Defined at:
  9204 ;;		line 26 in file "GestioLCD.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;		None
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;		None
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMRAM   BANK0   BANK1
  9218 ;;      Params:         0       0       0
  9219 ;;      Locals:         0       0       0
  9220 ;;      Temps:          0       0       0
  9221 ;;      Totals:         0       0       0
  9222 ;;Total ram usage:        0 bytes
  9223 ;; Hardware stack levels used: 1
  9224 ;; Hardware stack levels required when called: 3
  9225 ;; This function calls:
  9226 ;;		_TiGetTimer
  9227 ;; This function is called by:
  9228 ;;		_main
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text76
  9233  001D50                     __ptext76:
  9234                           	callstack 0
  9235  001D50                     _GLCDInit:
  9236                           	callstack 27
  9237                           
  9238                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  9239                           
  9240                           ;incstack = 0
  9241  001D50  ECB9  F00C         	call	_TiGetTimer	;wreg free
  9242  001D54  6E19               	movwf	_timerGLCD^0,c
  9243  001D56  0012               	return		;funcret
  9244  001D58                     __end_of_GLCDInit:
  9245                           	callstack 0
  9246                           
  9247 ;; *************** function _TiGetTimer *****************
  9248 ;; Defined at:
  9249 ;;		line 70 in file "TiTTimer.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;		None
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;		None
  9254 ;; Return value:  Size  Location     Type
  9255 ;;                  1    wreg      unsigned char 
  9256 ;; Registers used:
  9257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9258 ;; Tracked objects:
  9259 ;;		On entry : 0/0
  9260 ;;		On exit  : 0/0
  9261 ;;		Unchanged: 0/0
  9262 ;; Data sizes:     COMRAM   BANK0   BANK1
  9263 ;;      Params:         0       0       0
  9264 ;;      Locals:         0       0       0
  9265 ;;      Temps:          1       0       0
  9266 ;;      Totals:         1       0       0
  9267 ;;Total ram usage:        1 bytes
  9268 ;; Hardware stack levels used: 1
  9269 ;; Hardware stack levels required when called: 2
  9270 ;; This function calls:
  9271 ;;		Nothing
  9272 ;; This function is called by:
  9273 ;;		_LcInit
  9274 ;;		_Sinit
  9275 ;;		_TeInit
  9276 ;;		_Minit
  9277 ;;		_initAltaveu
  9278 ;;		_GLCDInit
  9279 ;;		_initHora
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           	psect	text77
  9284  001972                     __ptext77:
  9285                           	callstack 0
  9286  001972                     _TiGetTimer:
  9287                           	callstack 27
  9288                           
  9289                           ;TiTTimer.c: 74:     counter=0;
  9290                           
  9291                           ;incstack = 0
  9292  001972  0E00               	movlw	0
  9293  001974  6E2A               	movwf	_counter^0,c
  9294                           
  9295                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9296  001976  D007               	goto	l5669
  9297  001978                     l5661:
  9298                           
  9299                           ;TiTTimer.c: 76:         counter++;
  9300  001978  2A2A               	incf	_counter^0,f,c
  9301                           
  9302                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  9303  00197A  0E08               	movlw	8
  9304  00197C  182A               	xorwf	_counter^0,w,c
  9305  00197E  A4D8               	btfss	status,2,c
  9306  001980  D002               	goto	l5669
  9307  001982  0EFF               	movlw	255
  9308  001984  0012               	return	
  9309  001986                     l5669:
  9310                           
  9311                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9312  001986  502A               	movf	_counter^0,w,c
  9313  001988  0D03               	mullw	3
  9314  00198A  50F3               	movf	243,w,c
  9315  00198C  0F82               	addlw	low (_s_Timers+2)
  9316  00198E  6ED9               	movwf	fsr2l,c
  9317  001990  6ADA               	clrf	fsr2h,c
  9318  001992  04DE               	decf	postinc2,w,c
  9319  001994  B4D8               	btfsc	status,2,c
  9320  001996  D7F0               	goto	l5661
  9321                           
  9322                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  9323  001998  502A               	movf	_counter^0,w,c
  9324  00199A  0D03               	mullw	3
  9325  00199C  50F3               	movf	243,w,c
  9326  00199E  0F82               	addlw	low (_s_Timers+2)
  9327  0019A0  6ED9               	movwf	fsr2l,c
  9328  0019A2  6ADA               	clrf	fsr2h,c
  9329  0019A4  0E01               	movlw	1
  9330  0019A6  6EDF               	movwf	indf2,c
  9331                           
  9332                           ;TiTTimer.c: 80:     return (counter);
  9333  0019A8  502A               	movf	_counter^0,w,c
  9334  0019AA  0012               	return		;funcret
  9335  0019AC                     __end_of_TiGetTimer:
  9336                           	callstack 0
  9337                           
  9338 ;; *************** function _high_rsi *****************
  9339 ;; Defined at:
  9340 ;;		line 21 in file "main.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;		None
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;		None
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/0
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1
  9354 ;;      Params:         0       0       0
  9355 ;;      Locals:         0       0       0
  9356 ;;      Temps:          4       0       0
  9357 ;;      Totals:         4       0       0
  9358 ;;Total ram usage:        4 bytes
  9359 ;; Hardware stack levels used: 1
  9360 ;; Hardware stack levels required when called: 1
  9361 ;; This function calls:
  9362 ;;		__TiRSITimer
  9363 ;; This function is called by:
  9364 ;;		Interrupt level 2
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	intcode
  9369  000008                     __pintcode:
  9370                           	callstack 0
  9371  000008                     _high_rsi:
  9372                           	callstack 24
  9373                           
  9374                           ;incstack = 0
  9375  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9376  00000A  CFD9 F066          	movff	fsr2l,??_high_rsi
  9377  00000E  CFDA F067          	movff	fsr2h,??_high_rsi+1
  9378  000012  CFF3 F068          	movff	prodl,??_high_rsi+2
  9379  000016  CFF4 F069          	movff	prodh,??_high_rsi+3
  9380  00001A  ECFF  F00B         	call	__TiRSITimer	;wreg free
  9381  00001E  C069  FFF4         	movff	??_high_rsi+3,prodh
  9382  000022  C068  FFF3         	movff	??_high_rsi+2,prodl
  9383  000026  C067  FFDA         	movff	??_high_rsi+1,fsr2h
  9384  00002A  C066  FFD9         	movff	??_high_rsi,fsr2l
  9385  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9386  000030  0011               	retfie		f
  9387  000032                     __end_of_high_rsi:
  9388                           	callstack 0
  9389                           
  9390 ;; *************** function __TiRSITimer *****************
  9391 ;; Defined at:
  9392 ;;		line 37 in file "TiTTimer.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;		None
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      void 
  9399 ;; Registers used:
  9400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9401 ;; Tracked objects:
  9402 ;;		On entry : 0/0
  9403 ;;		On exit  : 0/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMRAM   BANK0   BANK1
  9406 ;;      Params:         0       0       0
  9407 ;;      Locals:         0       0       0
  9408 ;;      Temps:          1       0       0
  9409 ;;      Totals:         1       0       0
  9410 ;;Total ram usage:        1 bytes
  9411 ;; Hardware stack levels used: 1
  9412 ;; This function calls:
  9413 ;;		Nothing
  9414 ;; This function is called by:
  9415 ;;		_high_rsi
  9416 ;; This function uses a non-reentrant model
  9417 ;;
  9418                           
  9419                           	psect	text79
  9420  0017FE                     __ptext79:
  9421                           	callstack 0
  9422  0017FE                     __TiRSITimer:
  9423                           	callstack 24
  9424                           
  9425                           ;TiTTimer.c: 39:     TMR0H = 223;
  9426                           
  9427                           ;incstack = 0
  9428  0017FE  0EDF               	movlw	223
  9429  001800  6ED7               	movwf	215,c	;volatile
  9430                           
  9431                           ;TiTTimer.c: 40:     TMR0L = 148;
  9432  001802  0E94               	movlw	148
  9433  001804  6ED6               	movwf	214,c	;volatile
  9434                           
  9435                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  9436  001806  94F2               	bcf	242,2,c	;volatile
  9437                           
  9438                           ;TiTTimer.c: 42:     h_Tics++;
  9439  001808  4A03               	infsnz	_h_Tics^0,f,c
  9440  00180A  2A04               	incf	(_h_Tics+1)^0,f,c
  9441                           
  9442                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  9443  00180C  0E48               	movlw	72
  9444  00180E  5C03               	subwf	_h_Tics^0,w,c
  9445  001810  0EEE               	movlw	238
  9446  001812  5804               	subwfb	(_h_Tics+1)^0,w,c
  9447  001814  A0D8               	btfss	status,0,c
  9448  001816  0012               	return	
  9449                           
  9450                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  9451  001818  0E00               	movlw	0
  9452  00181A  6E2A               	movwf	_counter^0,c
  9453  00181C                     i2l4149:
  9454  00181C  0E07               	movlw	7
  9455  00181E  642A               	cpfsgt	_counter^0,c
  9456  001820  D001               	goto	i2l4153
  9457  001822  D015               	goto	i2l4161
  9458  001824                     i2l4153:
  9459                           
  9460                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  9461  001824  502A               	movf	_counter^0,w,c
  9462  001826  0D03               	mullw	3
  9463  001828  50F3               	movf	243,w,c
  9464  00182A  0F82               	addlw	low (_s_Timers+2)
  9465  00182C  6ED9               	movwf	fsr2l,c
  9466  00182E  6ADA               	clrf	fsr2h,c
  9467  001830  04DE               	decf	postinc2,w,c
  9468  001832  A4D8               	btfss	status,2,c
  9469  001834  D00A               	goto	i2l4157
  9470                           
  9471                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  9472  001836  502A               	movf	_counter^0,w,c
  9473  001838  0D03               	mullw	3
  9474  00183A  50F3               	movf	243,w,c
  9475  00183C  0F80               	addlw	low _s_Timers
  9476  00183E  6ED9               	movwf	fsr2l,c
  9477  001840  6ADA               	clrf	fsr2h,c
  9478  001842  5003               	movf	_h_Tics^0,w,c
  9479  001844  5EDE               	subwf	postinc2,f,c
  9480  001846  5004               	movf	(_h_Tics+1)^0,w,c
  9481  001848  5ADD               	subwfb	postdec2,f,c
  9482  00184A                     i2l4157:
  9483                           
  9484                           ;TiTTimer.c: 50:         }
  9485  00184A  2A2A               	incf	_counter^0,f,c
  9486  00184C  D7E7               	goto	i2l4149
  9487  00184E                     i2l4161:
  9488                           
  9489                           ;TiTTimer.c: 51:         h_Tics=0;
  9490  00184E  0E00               	movlw	0
  9491  001850  6E04               	movwf	(_h_Tics+1)^0,c
  9492  001852  0E00               	movlw	0
  9493  001854  6E03               	movwf	_h_Tics^0,c
  9494  001856  0012               	return		;funcret
  9495  001858                     __end_of__TiRSITimer:
  9496                           	callstack 0
  9497                           
  9498                           	psect	rparam
  9499  0000                     
  9500                           	psect	temp
  9501  00007A                     btemp:
  9502                           	callstack 0
  9503  00007A                     	ds	1
  9504  0000                     int$flags	set	btemp
  9505  0000                     wtemp8	set	btemp+1
  9506  0000                     ttemp5	set	btemp+1
  9507  0000                     ttemp6	set	btemp+4
  9508  0000                     ttemp7	set	btemp+8
  9509                           
  9510                           	psect	idloc
  9511                           
  9512                           ;Config register IDLOC0 @ 0x200000
  9513                           ;	unspecified, using default values
  9514  200000                     	org	2097152
  9515  200000  FF                 	db	255
  9516                           
  9517                           ;Config register IDLOC1 @ 0x200001
  9518                           ;	unspecified, using default values
  9519  200001                     	org	2097153
  9520  200001  FF                 	db	255
  9521                           
  9522                           ;Config register IDLOC2 @ 0x200002
  9523                           ;	unspecified, using default values
  9524  200002                     	org	2097154
  9525  200002  FF                 	db	255
  9526                           
  9527                           ;Config register IDLOC3 @ 0x200003
  9528                           ;	unspecified, using default values
  9529  200003                     	org	2097155
  9530  200003  FF                 	db	255
  9531                           
  9532                           ;Config register IDLOC4 @ 0x200004
  9533                           ;	unspecified, using default values
  9534  200004                     	org	2097156
  9535  200004  FF                 	db	255
  9536                           
  9537                           ;Config register IDLOC5 @ 0x200005
  9538                           ;	unspecified, using default values
  9539  200005                     	org	2097157
  9540  200005  FF                 	db	255
  9541                           
  9542                           ;Config register IDLOC6 @ 0x200006
  9543                           ;	unspecified, using default values
  9544  200006                     	org	2097158
  9545  200006  FF                 	db	255
  9546                           
  9547                           ;Config register IDLOC7 @ 0x200007
  9548                           ;	unspecified, using default values
  9549  200007                     	org	2097159
  9550  200007  FF                 	db	255
  9551                           
  9552                           	psect	config
  9553                           
  9554                           ; Padding undefined space
  9555  300000                     	org	3145728
  9556  300000  FF                 	db	255
  9557                           
  9558                           ;Config register CONFIG1H @ 0x300001
  9559                           ;	Oscillator
  9560                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  9561                           ;	Fail-Safe Clock Monitor Enable bit
  9562                           ;	FCMEN = 0x0, unprogrammed default
  9563                           ;	Internal/External Oscillator Switchover bit
  9564                           ;	IESO = 0x0, unprogrammed default
  9565  300001                     	org	3145729
  9566  300001  06                 	db	6
  9567                           
  9568                           ;Config register CONFIG2L @ 0x300002
  9569                           ;	unspecified, using default values
  9570                           ;	Power-up Timer Enable bit
  9571                           ;	PWRT = 0x1, unprogrammed default
  9572                           ;	Brown-out Reset Enable bits
  9573                           ;	BOR = 0x3, unprogrammed default
  9574                           ;	Brown-out Reset Voltage bits
  9575                           ;	BORV = 0x3, unprogrammed default
  9576  300002                     	org	3145730
  9577  300002  1F                 	db	31
  9578                           
  9579                           ;Config register CONFIG2H @ 0x300003
  9580                           ;	Watchdog Timer Enable bit
  9581                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9582                           ;	Watchdog Timer Postscale Select bits
  9583                           ;	WDTPS = 0xF, unprogrammed default
  9584  300003                     	org	3145731
  9585  300003  1E                 	db	30
  9586                           
  9587                           ; Padding undefined space
  9588  300004                     	org	3145732
  9589  300004  FF                 	db	255
  9590                           
  9591                           ;Config register CONFIG3H @ 0x300005
  9592                           ;	CCP2 MUX bit
  9593                           ;	CCP2MX = 0x1, unprogrammed default
  9594                           ;	PORTB A/D Enable bit
  9595                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  9596                           ;	Low-Power Timer1 Oscillator Enable bit
  9597                           ;	LPT1OSC = 0x0, unprogrammed default
  9598                           ;	MCLR Pin Enable bit
  9599                           ;	MCLRE = 0x1, unprogrammed default
  9600  300005                     	org	3145733
  9601  300005  81                 	db	129
  9602                           
  9603                           ;Config register CONFIG4L @ 0x300006
  9604                           ;	Stack Full/Underflow Reset Enable bit
  9605                           ;	STVREN = 0x1, unprogrammed default
  9606                           ;	Single-Supply ICSP Enable bit
  9607                           ;	LVP = OFF, Single-Supply ICSP disabled
  9608                           ;	Boot Block Size Select bits
  9609                           ;	BBSIZ = 0x0, unprogrammed default
  9610                           ;	Extended Instruction Set Enable bit
  9611                           ;	XINST = 0x0, unprogrammed default
  9612                           ;	Background Debugger Enable bit
  9613                           ;	DEBUG = 0x1, unprogrammed default
  9614  300006                     	org	3145734
  9615  300006  81                 	db	129
  9616                           
  9617                           ; Padding undefined space
  9618  300007                     	org	3145735
  9619  300007  FF                 	db	255
  9620                           
  9621                           ;Config register CONFIG5L @ 0x300008
  9622                           ;	unspecified, using default values
  9623                           ;	Code Protection bit
  9624                           ;	CP0 = 0x1, unprogrammed default
  9625                           ;	Code Protection bit
  9626                           ;	CP1 = 0x1, unprogrammed default
  9627  300008                     	org	3145736
  9628  300008  03                 	db	3
  9629                           
  9630                           ;Config register CONFIG5H @ 0x300009
  9631                           ;	unspecified, using default values
  9632                           ;	Boot Block Code Protection bitProtect Boot
  9633                           ;	CPB = 0x1, unprogrammed default
  9634                           ;	Data EEPROM Code Protection bit
  9635                           ;	CPD = 0x1, unprogrammed default
  9636  300009                     	org	3145737
  9637  300009  C0                 	db	192
  9638                           
  9639                           ;Config register CONFIG6L @ 0x30000A
  9640                           ;	unspecified, using default values
  9641                           ;	Write Protection bit
  9642                           ;	WRT0 = 0x1, unprogrammed default
  9643                           ;	Write Protection bit
  9644                           ;	WRT1 = 0x1, unprogrammed default
  9645  30000A                     	org	3145738
  9646  30000A  03                 	db	3
  9647                           
  9648                           ;Config register CONFIG6H @ 0x30000B
  9649                           ;	unspecified, using default values
  9650                           ;	Configuration Register Write Protection bit
  9651                           ;	WRTC = 0x1, unprogrammed default
  9652                           ;	Boot Block Write Protection bit
  9653                           ;	WRTB = 0x1, unprogrammed default
  9654                           ;	Data EEPROM Write Protection bit
  9655                           ;	WRTD = 0x1, unprogrammed default
  9656  30000B                     	org	3145739
  9657  30000B  E0                 	db	224
  9658                           
  9659                           ;Config register CONFIG7L @ 0x30000C
  9660                           ;	unspecified, using default values
  9661                           ;	Table Read Protection bit
  9662                           ;	EBTR0 = 0x1, unprogrammed default
  9663                           ;	Table Read Protection bit
  9664                           ;	EBTR1 = 0x1, unprogrammed default
  9665  30000C                     	org	3145740
  9666  30000C  03                 	db	3
  9667                           
  9668                           ;Config register CONFIG7H @ 0x30000D
  9669                           ;	unspecified, using default values
  9670                           ;	Boot Block Table Read Protection bit
  9671                           ;	EBTRB = 0x1, unprogrammed default
  9672  30000D                     	org	3145741
  9673  30000D  40                 	db	64
  9674                           tosu	equ	0xFFF
  9675                           tosh	equ	0xFFE
  9676                           tosl	equ	0xFFD
  9677                           stkptr	equ	0xFFC
  9678                           pclatu	equ	0xFFB
  9679                           pclath	equ	0xFFA
  9680                           pcl	equ	0xFF9
  9681                           tblptru	equ	0xFF8
  9682                           tblptrh	equ	0xFF7
  9683                           tblptrl	equ	0xFF6
  9684                           tablat	equ	0xFF5
  9685                           prodh	equ	0xFF4
  9686                           prodl	equ	0xFF3
  9687                           indf0	equ	0xFEF
  9688                           postinc0	equ	0xFEE
  9689                           postdec0	equ	0xFED
  9690                           preinc0	equ	0xFEC
  9691                           plusw0	equ	0xFEB
  9692                           fsr0h	equ	0xFEA
  9693                           fsr0l	equ	0xFE9
  9694                           wreg	equ	0xFE8
  9695                           indf1	equ	0xFE7
  9696                           postinc1	equ	0xFE6
  9697                           postdec1	equ	0xFE5
  9698                           preinc1	equ	0xFE4
  9699                           plusw1	equ	0xFE3
  9700                           fsr1h	equ	0xFE2
  9701                           fsr1l	equ	0xFE1
  9702                           bsr	equ	0xFE0
  9703                           indf2	equ	0xFDF
  9704                           postinc2	equ	0xFDE
  9705                           postdec2	equ	0xFDD
  9706                           preinc2	equ	0xFDC
  9707                           plusw2	equ	0xFDB
  9708                           fsr2h	equ	0xFDA
  9709                           fsr2l	equ	0xFD9
  9710                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    145
    Data        64
    BSS         284
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     18     121
    BANK0           128      5      69
    BANK1           256      0     184

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_menu
    _motorSIO->_UgetUserName
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_Espera
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _motorJoc->_LcGotoXY
    _menu->_LcGotoXY
    _GLCDMotor->_LcGotoXY
    _LcPutChar->_LcGotoXY
    _LcClear->_LcGotoXY

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   25300
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0      22
                                              8 COMRAM     2     2      0
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    2858
                                             14 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      96
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      96
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    9035
                                             16 COMRAM     2     2      0
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _NoFerMenu
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
                    _checkHoraAcabat
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     140
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0     111
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2366
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1567
                                             16 COMRAM     1     0      1
                                              0 BANK0      3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    8369
                                             16 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2366
                                             14 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2     858
                                              8 COMRAM     2     0      2
                           _HGetTime (ARG)
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3154
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcGotoXY                                             6     5      1    1895
                                             13 COMRAM     1     0      1
                                              0 BANK0      5     5      0
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0     130
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (3) _CantaIR                                              1     1      0     310
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (4) _CantaPartBaixa                                       2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _CantaPartAlta                                        2     2      0     124
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     819
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      65
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _HGetTime (ARG)
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _NoFerMenu
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
     _checkHoraAcabat
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _UgetUserName

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      45       4       53.9%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     12      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     176       7        0.0%
DATA                 0      0     176       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu May 05 09:45:33 2022

               TiResetTics@Handle 006A                  _loginNOTRegister 03C6  
                               _i 0020                                 _j 001F  
                UgetUserName@quin 006C         ??_UcheckExistsNotFinished 006A  
          __end_of_compareStrings 18F0                               l714 1AD2  
                             l651 1426                               l661 144E  
                             l645 1B56                               l654 1434  
                             l903 10CC                               l904 1056  
                             l664 1484                               l905 1070  
                             l489 0326                               l745 1368  
                             l826 07E8                               l666 148A  
                             l907 1094                               l659 1448  
                             l838 087C                               l686 0D1E  
                             l687 0D2E                               l856 0A22  
                             l689 0D3A                               l858 0A52  
                             l895 0FFC                               l896 1016  
                             l898 103A                               _tmp 0029  
                ??_CantaPartBaixa 006A                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 005B  
              __size_of_GLCDMotor 03CA                              l1121 126A  
                            l2111 1A0A                              l1047 12C2  
                            l2105 19FE                              l2133 1C84  
                            l2117 1A16                              l2245 1AB8  
                            l2079 1C90                              l2099 19F2  
                            l4029 1C9C                              l2463 1444  
                            l2721 1052                              l4065 18C8  
                            l5025 0E60                              l5009 0E3A  
                            l5033 0E6C                              l2707 102E  
                            l4059 18AC                              l5019 0E52  
                            l6003 1334                              l6011 1342  
                            l4173 19D0                              l2493 14C6  
                            l6101 031A                              l2745 1088  
                            l2737 106C                              l4169 19C8  
                            l6121 036C                              l6113 0344  
                            l6041 1512                              l4417 11CC  
                            l6131 038C                              l6035 1504  
                            l6019 14D2                              l4443 122C  
                            l4435 1208                              l4427 11E8  
                            l6141 03B4                              l2759 10AC  
                            l6311 0578                              l6223 04A0  
                            l6047 1520                              l4447 1236  
                            l2769 10B0                              l6241 04AC  
                            l6217 0482                              l6145 03BE  
                            l6129 0386                              l6057 1540  
                            l6065 1550                              l4457 124C  
                            l4449 123C                              l4473 1280  
                            l2699 1012                              l6323 05B6  
                            l6171 0402                              l6139 03AE  
                            l6083 02DE                              l6405 066C  
                            l6309 0572                              l6261 04D6  
                            l6253 04C4                              l6229 04A6  
                            l6181 042A                              l6173 0408  
                            l6157 03D6                              l6093 0302  
                            l6077 02CA                              l6069 1556  
                            l5623 1B8A                              l6503 078C  
                            l6343 05E8                              l6319 059E  
                            l6183 0430                              l6417 0692  
                            l6361 060E                              l6281 0516  
                            l5715 189E                              l5707 1884  
                            l6523 07F6                              l5811 0B6A  
                            l6427 06B0                              l6187 043A  
                            l6099 0314                              l6451 1380  
                            l5661 1978                              l5629 1904  
                            l3965 1CCC                              l5709 188E  
                            l6613 0970                              l6517 07C6  
                            l6509 079A                              l5733 110E  
                            l5813 0B70                              l6701 0F00  
                            l6269 04E8                              l6437 06BE  
                            l6607 0960                              l6551 086C  
                            l5823 0B9A                              l3991 1CA8  
                            l6295 0544                              l6199 0452  
                            l6545 0858                              l6537 084A  
                            l5913 0CB4                              l5905 0C9A  
                            l5841 0BD8                              l6721 0F34  
                            l4961 0D34                              l6393 0658  
                            l6377 062E                              l6473 13CC  
                            l6465 139E                              l6457 138E  
                            l6449 137A                              l6651 0A4C  
                            l6643 0A2C                              l6635 09FC  
                            l6627 09CC                              l5923 0CCC  
                            l5835 0BC0                              l6731 0F4E  
                            l6715 0F1E                              l4971 0D70  
                            l5669 1986                              l5597 1944  
                            l6581 08B6                              l6493 0758  
                            l6741 0F8A                              l6709 0F10  
                            l4981 0D84                              l4965 0D44  
                            l6389 064E                              l6485 13F8  
                            l6663 0A68                              l6591 08FE  
                            l5919 0CC4                              l5863 0C1E  
                            l5855 0C0A                              l5943 0CE0  
                            l6751 0FA0                              l6735 0F5A  
                            l6727 0F42                              l4975 0D74  
                            l6673 0AA2                              l5849 0BF4  
                            l6761 0FB8                              l4993 0DD0  
                            l6659 0A60                              l6587 08DC  
                            l5883 0C68                              l5875 0C4A  
                            l5867 0C2A                              l5795 0B36  
                            l5787 0B22                              l6755 0FAC  
                            l6747 0F98                              l4979 0D7E  
                            l6669 0A7C                              l6597 0928  
                            l6693 0EEA                              l4997 0DE2  
                            l5981 12E8                              l6679 0AC6  
                            l5887 0C6C                              l6695 0EEE  
                            l6687 0EDA                              l5983 12EE  
                            l5975 12D8                              l5959 12AE  
                            l5899 0C90                              l6699 0EFA  
                            l5995 131E                              l6797 16A2  
                            STR_1 02BF                              STR_2 02B8  
                            STR_3 02AF                              STR_4 02A2  
                            STR_5 0292                              _LATD 000F8C  
                            u3130 18D4                              u5210 177A  
                            u4500 0D3E                              u5230 1792  
                            u5310 172A                              u5208 1762  
                            u5170 1744                              u5250 16DC  
                            u5410 15A6                              u5228 177C  
                            u5308 1714                              u7100 0ECA  
                            u5190 1760                              u5270 16F8  
                            u5430 15C0                              u5248 1794  
                            u5328 172C                              u5408 158C  
                            u5520 11BE                              u5290 1712  
                            u5450 15D8                              u7106 0ECC  
                            u5188 1746                              u5268 16DE  
                            u5428 15A8                              u5540 17C4  
                            u6260 0462                              u5390 158A  
                            u5550 17EC                              u7070 0EA0  
                            u6190 03E6                              u5288 16FA  
                            u5448 15C2                              u5720 0C04  
                            u5640 0B8E                              u7080 0EAA  
                            u6280 0496                              u7090 0EBA  
                            u6290 0498                              u5547 17BA  
                            u5468 15DA                              u5557 17E2  
                            u6710 0796                              u7086 0EAC  
                            u7078 0EA2                              u5840 0CA2  
                            u5760 0C3A                              u7096 0EBC  
                            u6810 0874                              u5850 0CBC  
                            u6580 067C                              u6590 0684  
                            u6780 0852                   ??_SsetNovaTecla 006A  
          __end_of_SIOcheckKrebut 1C88                              _cap1 03BF  
                            _Rows 0036                              _cap2 03BE  
                            _main 1660                              _hora 005F  
                            _menu 02C8                              _nota 001D  
                 __end_of_HJugant 1D5E                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 007A  
                 __end_of_JJuguem 1D08                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 1B82  
                            start 0032                   __end_of_CantaIR 1AB4  
                    ?_initAltaveu 0065                     LcInit@columns 0075  
                    ___param_bank 000000                  __end_of_GLCDInit 1D58  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 1D76  
                     Espera@Timer 0074                             ?_main 0065  
         __size_of_escriureEEPROM 002E                             ?_menu 0065  
                           _EEADR 000FA9                     ??_TiInitTimer 006A  
                           _T0CON 000FD5                   ?_compareStrings 006A  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 17A0  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 0065                             _TXREG 000FAD  
                           _SMSon 1D5E                             _TXSTA 000FAC  
                     _MNovaLletra 1D38                             _Minit 1D40  
                __end_of_HGetTime 1D76                             _Sinit 1D30  
                           _Timer 0032                             _Uinit 141C  
                           _rebut 0008                             _s_ptr 0005  
                           _nou_s 03C8             __end_of_JoystickMotor 10E4  
                 _HActualitzaHora 1A1A       __size_of_escriureCharEEPROM 0024  
                  __pbitbssCOMRAM 03B8                             tablat 000FF5  
                     _LcNewString 1CB8                     ??_TiResetTics 006A  
                 ?_SIOcheckKrebut 0065                             ttemp5 007B  
                           ttemp6 007E                             ttemp7 0082  
                           status 000FD8                  ?_checkHoraAcabat 0065  
                           wtemp8 007B     __size_of_UcheckExistsGetError 0008  
              __size_of_HNouSegon 000C                  __end_of_LcGotoXY 1932  
                __end_of_LcLliure 1CD0                     ??__TiRSITimer 0065  
                      _TiGetTimer 1972           EscriuPrimeraOrdre@ordre 006B  
                __end_of_JendGame 1D96                       ?_SIOendGame 0065  
                 __initialization 15E8                __size_of_CantaData 0032  
                    __end_of_main 16D0            __end_of_HClearNouSegon 1D7A  
                    __end_of_menu 0756             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 0065                 __end_of_GLCDMotor 0B20  
                __end_of_TeTeclat 0FFA                     _indexNextUser 0022  
                          ??_main 0077                            ??_menu 0075  
              __size_of_LcPutChar 0052                     __activetblptr 000002  
                   _ultimaTeclaAD 000F            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 0011                  GLCDMotor@length2 0010  
                      _JnovaTecla 1CF0                            ?_LcLCD 0065  
                          ?_SMSon 0065                            ?_Minit 0065  
                          ?_Sinit 0065                            ?_Uinit 0065  
              __size_of_NoFerMenu 0004                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
             __end_of_TiInitTimer 19E4                            _ADRESH 000FC4  
                          _EEDATA 000FA8                         ??_HJugant 006A  
                          _EECON2 000FA7                __size_of_URegister 0004  
              __size_of_HnoJugant 0004                         ??_JJuguem 006A  
              __size_of_SiFerMenu 0004          ??_escriure2usuarisStruct 006A  
                       ??_LcClear 0075                         ??_CantaIR 006C  
                          i2l4161 184E                            i2l4153 1824  
                          i2l4157 184A                            i2l4149 181C  
                  LcGotoXY@Fisics 00C0                    LcGotoXY@Column 00C4  
                   ??_WaitForBusy 0071                __size_of_TiGetTics 002C  
                          _SPBRGH 000FB0                    _sumaPulsacions 0031  
                          _SMSoff 1D64                SIONovaDireccio@num 006A  
                          _LcInit 10E4                      _MNouJoystick 1D48  
                  _UgetNumUsuaris 1D7E                            _SMotor 0B20  
             escriureCharEEPROM@c 006B                            _TeInit 1D28  
                          _Espera 1B82                      _LcGotoXY$336 00C2  
                          _Krebut 03B8                            _RowAct 0034  
             __end_of_TiResetTics 1C20                            Uinit@i 006C  
                          Uinit@j 006D                  __end_of_high_rsi 0032  
                          _h_Tics 0003                   ?_HClearNouSegon 0065  
                __end_of_initHora 1D10                            _borram 03C3  
             __end_of__TiRSITimer 1858                  __end_of_menuList 0292  
                          clear_0 162E                            clear_1 163A  
                          clear_2 164C                            _jugant 03BD  
                          _segons 000C                        _UenviaChar 1C6C  
                          isa$std 000001                        UenviaPas@c 006B  
     __size_of_EscriuPrimeraOrdre 007A                 __end_of_HNouSegon 1C94  
                    __pdataCOMRAM 0044            __size_of_CantaPartAlta 0068  
                __end_of_motorSIO 12AC                __size_of_UenviaPas 0010  
         __end_of_HActualitzaHora 1A50                 ??_SIONovaDireccio 006A  
                __end_of_motorJoc 1366                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentUsrIndex 0024  
             __size_of_SIOendGame 0004                 __end_of_CantaData 1A82  
                    TeTeclat@cols 002C                         ?_GLCDInit 0065  
                   ?_UcheckExists 0065                        __accesstop 0080  
         __end_of__initialization 1652            __end_of_UgetNumUsuaris 1D82  
               __end_of_LcPutChar 18AA                     _JnovaDireccio 1CF8  
                JnovaDireccio@dir 006A                     ___rparam_used 000001  
                   __end_of_LcLCD 17FE                       ?_TiGetTimer 0065  
                   __end_of_SMSon 1D64                 SIONovaTecla@tecla 006A  
                  __pcstackCOMRAM 0065                     __end_of_Minit 1D48  
             __end_of_WaitForBusy 1972                     __end_of_Sinit 1D38  
                   __end_of_Uinit 14D0                 __end_of_NoFerMenu 1D92  
                       ?_HGetTime 006A                      __pidataBANK0 1BE8  
            __size_of_initAltaveu 0008                 __end_of_URegister 1D8A  
               __end_of_HnoJugant 1D72                 __end_of_SiFerMenu 1D8E  
                  _escriureEEPROM 1AB4                 __end_of_TiGetTics 1B3A  
                     _TiInitTimer 19AC                       ?_JnovaTecla 0065  
                         ??_LcLCD 0074                           ??_SMSon 006A  
                       ?_LcGotoXY 0072                         ?_LcLliure 0065  
                         ??_Minit 006B                           ??_Sinit 006B  
                 JnovaTecla@tecla 006A                           ??_Uinit 006A  
            __size_of_init_eusart 0016                         ?_JendGame 0065  
                  ??_UcheckExists 006A               MNouJoystick@posicio 006A  
                      ??_GLCDInit 006B           __size_of_GLCDMostraMenu 000C  
                      __pbssBANK0 0080                        __pbssBANK1 0100  
 __size_of_escriure2usuarisStruct 002C                         ?_TeTeclat 0065  
                     _TiResetTics 1C08                   ?_UgetNumUsuaris 0065  
                  ?_JnovaDireccio 0065                     ??_UmotorUsers 006F  
                   ?_JoystickInit 0065                           ?_SMSoff 0065  
                         ?_LcInit 0075                     _CantaPartAlta 1738  
                         ?_SMotor 0065                           ?_TeInit 0065  
                         ?_Espera 0071                 __end_of_UenviaPas 1C6C  
                     __TiRSITimer 17FE               _indexNextUserStruct 0021  
                      ??_HGetTime 006C                     ?_UgetUserName 006A  
                ??_compareStrings 006D            __end_of_escriureEEPROM 1AE2  
                         _BAUDCON 000FB8                       ?_UenviaChar 006A  
            __size_of_playAltaveu 0004                __size_of_motorHora 009E  
          __size_of_MsetNovaTecla 0008                           LcInit@i 00C1  
                ?_HActualitzaHora 006A                        ??_LcGotoXY 0073  
                    ?_MNovaLletra 0065                        ??_LcLliure 006A  
                ??_SIOcheckKrebut 006A               __size_of_TiGetTimer 003A  
                      ??_JendGame 006A                           _HJugant 1D58  
                       ?_high_rsi 0065                           _JJuguem 1D00  
                         _LcClear 1B5E                           _CantaIR 1A82  
                    ?_LcNewString 006D                    ??_JoystickInit 006A  
                       ?_initHora 0065                        ??_TeTeclat 0071  
                     _WaitForBusy 1932                    ?_CantaPartAlta 0065  
                         _Columns 0035             __end_of_SsetNovaTecla 1D20  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00E6  
                         __Hparam 0000                   __size_of_SMotor 01FC  
             __size_of_JnovaTecla 0008                   __size_of_TeInit 0008  
                 __size_of_Espera 0024                           __Lparam 0000  
                    ??_SIOendGame 006A                         ?_motorSIO 0065  
                       ?_motorJoc 0065                    ??_UgetUserName 006C  
             __end_of_UmotorUsers 0E96          ?_UcheckExistsNotFinished 0065  
                 ?_escriureEEPROM 0065                     ?_motorAltaveu 0065  
                    __psmallconst 0200            _escriure2usuarisStruct 1AE2  
                         __pcinit 15E8      __end_of_UcheckExistsGetError 1CF0  
                         _ferMenu 03C1                        _init_ports 1BC8  
                         __ramtop 0200                           __ptext0 1660  
                         __ptext1 11CA                           __ptext2 12AC  
                         __ptext3 19E4                           __ptext4 1D6A  
                         __ptext5 1C7C                           __ptext6 1CD0  
                         __ptext7 1CD8                           __ptext8 1CE0  
                         __ptext9 1D6E                         _T0CONbits 000FD5  
                       _GLCDMotor 0756                         CantaIR@IR 006C  
                         _counter 002A                           _horaTmp 0040  
          conversorJoystick@direc 006A                       UenviaChar@c 006B  
      __end_of_escriureCharEEPROM 1B5E                  LcNewString@new_s 006D  
                 WaitForBusy@Busy 0071                       Uinit@j_1144 006E  
                         _userPtr 0001                 GLCDMostraMenu@num 006A  
              __end_of_SIOendGame 1D6E                        ??_high_rsi 0066  
            end_of_initialization 1652                           _usuaris 0100  
                 ??_JnovaDireccio 006A                        ??_initHora 006B  
         __size_of_CantaPartBaixa 0068                     __Lmediumconst 0000  
                 TiGetTics@Handle 006E                     _MsetNovaTecla 1D20  
             __size_of_UenviaChar 0010                 _conversorJoystick 19E4  
               __end_of_motorHora 156E                  ??_HClearNouSegon 006A  
                      _novaLletra 0059                ?_conversorJoystick 0065  
                 _usuariActualSIO 0052                        ??_motorSIO 006D  
                      ??_motorJoc 0073                   TiGetTics@actual 006F  
                   ?_SIONovaTecla 0065                        GLCDMotor@j 0016  
                         postdec1 000FE5                           postdec2 000FDD  
                 _SIONovaDireccio 1CE0                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 0071          __size_of_checkHoraAcabat 000C  
                      _numUsuaris 0023              __end_of_UcheckExists 1D86  
                   TeTeclat@files 002B               ??_conversorJoystick 006A  
              SIOStartGame@usuari 006A            __size_of_JoystickMotor 00EA  
                   TeTeclat@state 002D                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 0065  
                   ?_SIOStartGame 0065                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _HNouSegon 1C88  
                  _GLCDMostraMenu 1CAC         __end_of_conversorJoystick 1A1A  
                 ??_CantaPartAlta 006A                    ?_MsetNovaTecla 0065  
                       _CantaData 1A50                 __size_of_GLCDInit 0008  
                     _UmotorUsers 0D1C                         _TXSTAbits 000FAC  
 __end_of_UcheckExistsNotFinished 1CAC                    __end_of_SMSoff 1D6A  
                    ??_TiGetTimer 006A                    __end_of_LcInit 11CA  
                  ??_SIONovaTecla 006A                    __end_of_SMotor 0D1C  
                       _LcPutChar 1858                    __end_of_TeInit 1D30  
               motorAltaveu@state 001A                    __end_of_Espera 1BA6  
                  GLCDMotor@state 0017        __end_of_EscriuPrimeraOrdre 15E8  
               __size_of_HGetTime 0004                     __pidataCOMRAM 1BA6  
                     ?_init_ports 0065                         _NoFerMenu 1D8E  
                       _ColumnAct 0033              __end_of_JoystickInit 1C5C  
                  ??_SIOStartGame 006A                         _URegister 1D86  
                       _HnoJugant 1D6E                      ?_TiInitTimer 0065  
                    ??_JnovaTecla 006A                         _SiFerMenu 1D8A  
             start_initialization 15E8                         _TiGetTics 1B0E  
          __end_of_GLCDMostraMenu 1CB8                        ?_HNouSegon 0065  
                ??_UgetNumUsuaris 006A                  UmotorUsers@state 001E  
               __size_of_LcGotoXY 0042              __end_of_UgetUserName 1C4A  
              __end_of_TiGetTimer 19AC                     JJuguem@usuari 006A  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
                   _JoystickMotor 0FFA                 __size_of_JendGame 0004  
                    ?_TiResetTics 0065                        ?_CantaData 0065  
            _UcheckExistsGetError 1CE8           __end_of_SIONovaDireccio 1CE8  
            __size_of_LcNewString 000C                          ??_SMSoff 006A  
                        ??_LcInit 0076                         _NovaTecla 005A  
               __size_of_TeTeclat 0164                          ??_SMotor 0071  
                        ??_TeInit 006B                      ?__TiRSITimer 0065  
                   ??_initAltaveu 006B                          ??_Espera 0073  
              __end_of_JnovaTecla 1CF8                        ?_LcPutChar 0065  
                       _UenviaPas 1C5C                       __pdataBANK0 00A1  
                  motorHora@state 000B                      _menuDaltGLCD 0018  
                    ??_UenviaChar 006B                        ?_NoFerMenu 0065  
                     ??_GLCDMotor 0075                        ?_URegister 0065  
                      ?_HnoJugant 0065                 ??_checkHoraAcabat 006A  
                   ??_init_eusart 006A                        ?_SiFerMenu 0065  
                     __pbssCOMRAM 0001                     __pcstackBANK0 00C0  
                      ?_TiGetTics 006A                   ?_GLCDMostraMenu 0065  
                        ?_HJugant 0065                    ?_JoystickMotor 0065  
                 ??_MsetNovaTecla 006A              __end_of_motorAltaveu 141C  
                        ?_JJuguem 0065                          ?_LcClear 0065  
                        ?_CantaIR 0065        __size_of_conversorJoystick 0036  
                  _CantaPartBaixa 16D0             ?_UcheckExistsGetError 0065  
               __size_of_high_rsi 002A                      ?_WaitForBusy 0065  
             __size_of_init_ports 0020                MsetNovaTecla@tecla 006A  
              SsetNovaTecla@tecla 006A                __end_of_UenviaChar 1C7C  
               __size_of_initHora 0008                  ??_escriureEEPROM 006A  
           __size_of_UcheckExists 0004           ?_escriure2usuarisStruct 0065  
                       __pintcode 0008                     ??_playAltaveu 006A  
                      ?_UenviaPas 006A                 __size_of_motorSIO 00E2  
               __size_of_motorJoc 00BA                   CantaPartBaixa@c 006B  
             __end_of_initAltaveu 1D18                         _arrayZero 004D  
                     __smallconst 0200                    __size_of_LcLCD 005E  
                  __size_of_SMSon 0006  __size_of_UcheckExistsNotFinished 000C  
                  __size_of_Minit 0008              __end_of_SIONovaTecla 1CE0  
                  __size_of_Sinit 0008                       ??_HNouSegon 006A  
                  __size_of_Uinit 00B4                       _direccioSIO 0051  
                     _direccioJoc 000A            __end_of_CantaPartBaixa 1738  
              JoystickMotor@state 000E                          _GLCDInit 1D50  
              escriureEEPROM@caca 006A                       _do_register 03C4  
             __end_of_init_eusart 1C36                         _newString 03C0  
                    _UcheckExists 1D82                         _loginText 00B8  
                       _jugantSIO 03B9          __size_of_HActualitzaHora 0036  
                       _jugantJoc 03BA                       ??_CantaData 006C  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                     ?_MNouJoystick 0065  
                ?_SIONovaDireccio 0065              __end_of_SIOStartGame 1CD8  
                   UenviaChar@pos 006A    __end_of_escriure2usuarisStruct 1B0E  
              _escriureCharEEPROM 1B3A                         _novaTecla 005D  
                   motorSIO@state 0007                       ??_LcPutChar 0073  
                       _timerGLCD 0019                         _motorHora 14D0  
                        _RCONbits 000FD0                         _reproduir 03C2  
                        _HGetTime 1D72             __size_of_JoystickInit 0012  
                       _timerHora 000D                         _timerMenu 0028  
             ?_escriureCharEEPROM 006A                       ??_NoFerMenu 006A  
                      _ADCON0bits 000FC2                       ??_URegister 006A  
                     ??_HnoJugant 006A                       ??_SiFerMenu 006A  
           __size_of_UgetUserName 0014               __end_of_playAltaveu 1D7E  
          __size_of_SsetNovaTecla 0008                          Espera@ms 0071  
                       _zeroTecla 0030                          _LcGotoXY 18F0  
                  _usuariLoguejat 0057                          _LcLliure 1CC4  
                     ??_TiGetTics 006C           __size_of_compareStrings 0046  
            __size_of_TiInitTimer 0038                   ??_JoystickMotor 006B  
                   GLCDMotor@max1 0056                     GLCDMotor@max2 0055  
                   GLCDMotor@min1 0015                     GLCDMotor@min2 0014  
                    _teclaPremuda 00A1                          _JendGame 1D92  
                       _usuariJoc 0054                       LcGotoXY@Row 0072  
                       copy_data0 15FC                         copy_data1 161C  
            ??_escriureCharEEPROM 006B                   ?_CantaPartBaixa 0065  
                __size_of_HJugant 0006            ??_UcheckExistsGetError 006A  
           escriureCharEEPROM@pos 006A                  __size_of_JJuguem 0008  
                __size_of_LcClear 0024                  __size_of_CantaIR 0032  
                        _TeTeclat 0E96             __end_of_JnovaDireccio 1D00  
                  ??_MNouJoystick 006A                      ?_UmotorUsers 0065  
                    _JoystickInit 1C4A                        _EECON1bits 000FA6  
                    _registerText 00AD                       _indexUsuari 0026  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0018  
                   motorJoc@state 0009                          __Hrparam 0000  
                     _initAltaveu 1D10                         menu@state 0025  
                        __Lrparam 0000                        ?_motorHora 0065  
            __size_of__TiRSITimer 005A                      _UgetUserName 1C36  
                     ??_UenviaPas 006B                      _novaDireccio 0058  
                    ??_init_ports 006A               HActualitzaHora@nova 006A  
                     _init_eusart 1C20             __size_of_motorAltaveu 00B6  
                    _novaTeclaJOC 0053                      _novaTeclaSIO 0050  
                 _do_check_exists 03C5                          __ptext10 1C88  
                        __ptext11 1D58                _EscriuPrimeraOrdre 156E  
                        __ptext20 1D7E                          __ptext12 1D72  
                        __ptext21 1C5C                          __ptext13 1D76  
                        __ptext30 1D8E                          __ptext22 1C6C  
                        __ptext14 14D0                          __ptext31 1CF0  
                        __ptext23 1CA0                          __ptext15 1D7A  
                        __ptext40 1D10                          __ptext32 1CF8  
                        __ptext24 1CE8                          __ptext16 1366  
                        __ptext41 1AB4                          __ptext33 1D92  
                        __ptext25 1D82                          __ptext17 02C8  
                        __ptext50 1D20                          __ptext42 1AE2  
                        __ptext34 1D00                          __ptext26 1D86  
                        __ptext18 1C94                          __ptext51 1D28  
                        __ptext43 0D1C                          __ptext35 1A1A  
                        __ptext27 1D8A                          __ptext19 1C36  
                        __ptext60 1D48                          __ptext52 1D30  
                        __ptext44 1B3A                          __ptext36 1CAC  
                        __ptext28 1D5E                          __ptext61 1C4A  
                        __ptext53 0B20                          __ptext45 18AA  
                        __ptext37 1BC8                          __ptext29 1D64  
                        __ptext70 1A82                          __ptext62 0756  
                        __ptext54 1D38                          __ptext46 141C  
                        __ptext38 1C20                          __ptext71 16D0  
                        __ptext63 1858                          __ptext55 1D40  
                        __ptext47 19AC                          __ptext39 1D08  
                        __ptext72 1738                          __ptext64 1A50  
                        __ptext56 17A0                          __ptext48 0E96  
                        __ptext73 1B82                          __ptext65 1CB8  
                        __ptext57 10E4                          __ptext49 1D18  
                        __ptext74 1C08                          __ptext66 1CC4  
                        __ptext58 156E                          __ptext75 1B0E  
                        __ptext67 1B5E                          __ptext59 0FFA  
                        __ptext76 1D50                          __ptext68 18F0  
                        __ptext77 1972                          __ptext69 1932  
                        __ptext79 17FE                    CantaPartAlta@c 006B  
                     _lletraASCII 005E                          _high_rsi 0008  
                        _copsNota 001B                          _s_Timers 0080  
                        _initHora 1D08                       _lletraInici 0044  
                        _menuDalt 0027                          _menuList 0201  
             ?_EscriuPrimeraOrdre 0065                     __size_of_main 0070  
                   __size_of_menu 048E             __end_of_CantaPartAlta 17A0  
                   CantaData@Data 006C                          _tiTeclat 002E  
              __end_of_init_ports 1BE8                          _setSMSon 03C7  
                   _SsetNovaTecla 1D18              __size_of_WaitForBusy 0040  
                        _nouSegon 03BC                          _motorSIO 11CA  
               ??_HActualitzaHora 006B                          _motorJoc 12AC  
                 _checkHoraAcabat 1C94                          _timerSMS 005C  
                        isa$xinst 000000                          int$flags 007A  
                    UenviaPas@pos 006A                       _playAltaveu 1D7A  
                    _motorAltaveu 1366           __size_of_HClearNouSegon 0004  
            ??_EscriuPrimeraOrdre 006A                        LcInit@rows 00C0  
                ??_GLCDMostraMenu 006A             __size_of_SIONovaTecla 0008  
         _UcheckExistsNotFinished 1CA0                        _INTCONbits 000FF2  
                   ??_MNovaLletra 006A             __size_of_SIOStartGame 0008  
                   ??_LcNewString 006F                          intlevel2 0000  
                    _timerAltaveu 001C                        LcPutChar@c 0073  
                  ?_SsetNovaTecla 0065                 MNovaLletra@lletra 006A  
                 compareStrings@a 006A                   compareStrings@b 006B  
                     ??_motorHora 0071                      _SIONovaTecla 1CD8  
                     _tempsAcabat 03BB                       GLCDMotor@k1 0013  
                     GLCDMotor@k2 0012              __end_of_MNouJoystick 1D50  
                    _SIOStartGame 1CD0                    _compareStrings 18AA  
                     _tmpPassword 0098               __end_of_MNovaLletra 1D40  
           __end_of_MsetNovaTecla 1D28           __end_of_checkHoraAcabat 1CA0  
                     _tmpUsername 0037                    _SIOcheckKrebut 1C7C  
                     SMotor@state 002F           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 1CC4              __size_of_UmotorUsers 017A  
                      _SIOendGame 1D6A  
