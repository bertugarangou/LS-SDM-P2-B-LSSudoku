

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Apr 21 13:11:20 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.32
    55                           ; Generated 02/02/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4321 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  000D56                     __pidataCOMRAM:
    92                           	callstack 0
    93                           
    94                           ;initializer for _lletraInici
    95  000D56  41                 	db	65
    96  000D57  44                 	db	68
    97  000D58  47                 	db	71
    98  000D59  4A                 	db	74
    99  000D5A  4D                 	db	77
   100  000D5B  50                 	db	80
   101  000D5C  54                 	db	84
   102  000D5D  57                 	db	87
   103  000D5E  00                 	db	0
   104                           
   105                           ;initializer for _novaLletra
   106  000D5F  FF                 	db	255
   107                           
   108                           ;initializer for _NovaTecla
   109  000D60  FF                 	db	255
   110                           
   111                           ;initializer for _ultimaTecla
   112  000D61  FF                 	db	255
   113                           
   114                           ;initializer for _timerSMS
   115  000D62  FF                 	db	255
   116                           
   117                           ;initializer for _novaTecla
   118  000D63  FF                 	db	255
   119                           
   120                           ;initializer for _lletraASCII
   121  000D64  FF                 	db	255
   122                           
   123                           ;initializer for _teclaPremuda
   124  000D65  01                 	db	1
   125  000D66  02                 	db	2
   126  000D67  03                 	db	3
   127  000D68  04                 	db	4
   128  000D69  05                 	db	5
   129  000D6A  06                 	db	6
   130  000D6B  07                 	db	7
   131  000D6C  08                 	db	8
   132  000D6D  09                 	db	9
   133  000D6E  0A                 	db	10
   134  000D6F  00                 	db	0
   135  000D70  0B                 	db	11
   136  0000                     _EECON2	set	4007
   137  0000                     _EEDATA	set	4008
   138  0000                     _EEADR	set	4009
   139  0000                     _T0CONbits	set	4053
   140  0000                     _TMR0L	set	4054
   141  0000                     _TMR0H	set	4055
   142  0000                     _T0CON	set	4053
   143  0000                     _INTCONbits	set	4082
   144  0000                     _RCONbits	set	4048
   145  0000                     _PORTDbits	set	3971
   146  0000                     _EECON1bits	set	4006
   147  0000                     _LATD	set	3980
   148  0000                     _TRISD	set	3989
   149  0000                     _TRISC	set	3988
   150  0000                     _LATBbits	set	3978
   151  0000                     _TRISB	set	3987
   152  0000                     _TRISA	set	3986
   153  0000                     _PORTCbits	set	3970
   154  0000                     _LATDbits	set	3980
   155  0000                     _LATCbits	set	3979
   156  0000                     _TRISDbits	set	3989
   157  0000                     _TRISCbits	set	3988
   158                           
   159                           	psect	smallconst
   160  000200                     __psmallconst:
   161                           	callstack 0
   162  000200  00                 	db	0
   163  000201                     STR_2:
   164  000201  32                 	db	50	;'2'
   165  000202  2E                 	db	46
   166  000203  52                 	db	82	;'R'
   167  000204  45                 	db	69	;'E'
   168  000205  47                 	db	71	;'G'
   169  000206  49                 	db	73	;'I'
   170  000207  53                 	db	83	;'S'
   171  000208  54                 	db	84	;'T'
   172  000209  45                 	db	69	;'E'
   173  00020A  52                 	db	82	;'R'
   174  00020B  00                 	db	0
   175  00020C                     STR_1:
   176  00020C  31                 	db	49	;'1'
   177  00020D  2E                 	db	46
   178  00020E  4C                 	db	76	;'L'
   179  00020F  4F                 	db	79	;'O'
   180  000210  47                 	db	71	;'G'
   181  000211  49                 	db	73	;'I'
   182  000212  4E                 	db	78	;'N'
   183  000213  00                 	db	0
   184  000214                     STR_4:
   185  000214  50                 	db	80	;'P'
   186  000215  53                 	db	83	;'S'
   187  000216  57                 	db	87	;'W'
   188  000217  44                 	db	68	;'D'
   189  000218  3A                 	db	58	;':'
   190  000219  20                 	db	32
   191  00021A  00                 	db	0
   192  00021B                     STR_3:
   193  00021B  55                 	db	85	;'U'
   194  00021C  53                 	db	83	;'S'
   195  00021D  45                 	db	69	;'E'
   196  00021E  52                 	db	82	;'R'
   197  00021F  3A                 	db	58	;':'
   198  000220  20                 	db	32
   199  000221  00                 	db	0
   200  000222  00                 	db	0	; dummy byte at the end
   201  0000                     
   202                           ; #config settings
   203                           
   204                           	psect	cinit
   205  000B0E                     __pcinit:
   206                           	callstack 0
   207  000B0E                     start_initialization:
   208                           	callstack 0
   209  000B0E                     __initialization:
   210                           	callstack 0
   211                           
   212                           ; Initialize objects allocated to COMRAM (27 bytes)
   213                           ; load TBLPTR registers with __pidataCOMRAM
   214  000B0E  0E56               	movlw	low __pidataCOMRAM
   215  000B10  6EF6               	movwf	tblptrl,c
   216  000B12  0E0D               	movlw	high __pidataCOMRAM
   217  000B14  6EF7               	movwf	tblptrh,c
   218  000B16  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   219  000B18  6EF8               	movwf	tblptru,c
   220  000B1A  EE00  F049         	lfsr	0,__pdataCOMRAM
   221  000B1E  EE10 F01B          	lfsr	1,27
   222  000B22                     copy_data0:
   223  000B22  0009               	tblrd		*+
   224  000B24  CFF5 FFEE          	movff	tablat,postinc0
   225  000B28  50E5               	movf	postdec1,w,c
   226  000B2A  50E1               	movf	fsr1l,w,c
   227  000B2C  E1FA               	bnz	copy_data0
   228                           
   229                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   230  000B2E  6A78               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   231                           
   232                           ; Clear objects allocated to COMRAM (72 bytes)
   233  000B30  EE00  F001         	lfsr	0,__pbssCOMRAM
   234  000B34  0E48               	movlw	72
   235  000B36                     clear_0:
   236  000B36  6AEE               	clrf	postinc0,c
   237  000B38  06E8               	decf	wreg,f,c
   238  000B3A  E1FD               	bnz	clear_0
   239  000B3C                     end_of_initialization:
   240                           	callstack 0
   241  000B3C                     __end_of__initialization:
   242                           	callstack 0
   243  000B3C  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   244  000B3E  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   245  000B40  0E00               	movlw	low (__Lmediumconst shr (0+16))
   246  000B42  6EF8               	movwf	tblptru,c
   247  000B44  0100               	movlb	0
   248  000B46  EFDF  F005         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bitbssCOMRAM
   251  0003C0                     __pbitbssCOMRAM:
   252                           	callstack 0
   253  0003C0                     _createUser:
   254                           	callstack 0
   255  0003C0                     	ds	1
   256  0003C1                     _loginNOTRegister:
   257                           	callstack 0
   258  0003C1                     	ds	1
   259  0003C2                     _setSMSon:
   260                           	callstack 0
   261  0003C2                     	ds	1
   262  0003C3                     _nou_s:
   263                           	callstack 0
   264  0003C3                     	ds	1
   265                           
   266                           	psect	bssCOMRAM
   267  000001                     __pbssCOMRAM:
   268                           	callstack 0
   269  000001                     _s_Timers:
   270                           	callstack 0
   271  000001                     	ds	24
   272  000019                     _tmpEEPROM:
   273                           	callstack 0
   274  000019                     	ds	9
   275  000022                     _password:
   276                           	callstack 0
   277  000022                     	ds	9
   278  00002B                     _username:
   279                           	callstack 0
   280  00002B                     	ds	9
   281  000034                     _h_Tics:
   282                           	callstack 0
   283  000034                     	ds	2
   284  000036                     motorUsuaris@state:
   285                           	callstack 0
   286  000036                     	ds	1
   287  000037                     _numUsuaris:
   288                           	callstack 0
   289  000037                     	ds	1
   290  000038                     _currentUsrIndex:
   291                           	callstack 0
   292  000038                     	ds	1
   293  000039                     menu@state:
   294                           	callstack 0
   295  000039                     	ds	1
   296  00003A                     _timerMenu:
   297                           	callstack 0
   298  00003A                     	ds	1
   299  00003B                     _j:
   300                           	callstack 0
   301  00003B                     	ds	1
   302  00003C                     _counter:
   303                           	callstack 0
   304  00003C                     	ds	1
   305  00003D                     TeTeclat@files:
   306                           	callstack 0
   307  00003D                     	ds	1
   308  00003E                     TeTeclat@cols:
   309                           	callstack 0
   310  00003E                     	ds	1
   311  00003F                     TeTeclat@state:
   312                           	callstack 0
   313  00003F                     	ds	1
   314  000040                     _tiTeclat:
   315                           	callstack 0
   316  000040                     	ds	1
   317  000041                     SMotor@state:
   318                           	callstack 0
   319  000041                     	ds	1
   320  000042                     _sumaPulsacions:
   321                           	callstack 0
   322  000042                     	ds	1
   323  000043                     _s_ptr:
   324                           	callstack 0
   325  000043                     	ds	1
   326  000044                     _Timer:
   327                           	callstack 0
   328  000044                     	ds	1
   329  000045                     _ColumnAct:
   330                           	callstack 0
   331  000045                     	ds	1
   332  000046                     _RowAct:
   333                           	callstack 0
   334  000046                     	ds	1
   335  000047                     _Columns:
   336                           	callstack 0
   337  000047                     	ds	1
   338  000048                     _Rows:
   339                           	callstack 0
   340  000048                     	ds	1
   341                           
   342                           	psect	dataCOMRAM
   343  000049                     __pdataCOMRAM:
   344                           	callstack 0
   345  000049                     _lletraInici:
   346                           	callstack 0
   347  000049                     	ds	9
   348  000052                     _novaLletra:
   349                           	callstack 0
   350  000052                     	ds	1
   351  000053                     _NovaTecla:
   352                           	callstack 0
   353  000053                     	ds	1
   354  000054                     _ultimaTecla:
   355                           	callstack 0
   356  000054                     	ds	1
   357  000055                     _timerSMS:
   358                           	callstack 0
   359  000055                     	ds	1
   360  000056                     _novaTecla:
   361                           	callstack 0
   362  000056                     	ds	1
   363  000057                     _lletraASCII:
   364                           	callstack 0
   365  000057                     	ds	1
   366  000058                     _teclaPremuda:
   367                           	callstack 0
   368  000058                     	ds	12
   369                           
   370                           	psect	cstackBANK0
   371  000080                     __pcstackBANK0:
   372                           	callstack 0
   373  000080                     ??_menu:
   374                           
   375                           ; 1 bytes @ 0x0
   376  000080                     	ds	2
   377                           
   378                           	psect	cstackCOMRAM
   379  000064                     __pcstackCOMRAM:
   380                           	callstack 0
   381  000064                     
   382                           ; 1 bytes @ 0x0
   383  000064                     	ds	1
   384  000065                     ??_high_rsi:
   385                           
   386                           ; 1 bytes @ 0x1
   387  000065                     	ds	4
   388  000069                     ??_EscriuPrimeraOrdre:
   389  000069                     ??_motorUsuaris:
   390  000069                     ??_CantaPartAlta:
   391  000069                     ??_CantaPartBaixa:
   392  000069                     ?_TiGetTics:
   393                           	callstack 0
   394  000069                     LcNewString@new_s:
   395                           	callstack 0
   396  000069                     SsetNovaTecla@tecla:
   397                           	callstack 0
   398  000069                     TiResetTics@Handle:
   399                           	callstack 0
   400  000069                     MsetNovaTecla@tecla:
   401                           	callstack 0
   402  000069                     MNovaLletra@lletra:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x5
   406  000069                     	ds	1
   407  00006A                     CantaPartAlta@c:
   408                           	callstack 0
   409  00006A                     CantaPartBaixa@c:
   410                           	callstack 0
   411  00006A                     EscriuPrimeraOrdre@ordre:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x6
   415  00006A                     	ds	1
   416  00006B                     ??_TiGetTics:
   417  00006B                     CantaIR@IR:
   418                           	callstack 0
   419  00006B                     CantaData@Data:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x7
   423  00006B                     	ds	2
   424  00006D                     TiGetTics@Handle:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x9
   428  00006D                     	ds	1
   429  00006E                     TiGetTics@actual:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0xA
   433  00006E                     	ds	2
   434  000070                     ??_SMotor:
   435  000070                     ??_TeTeclat:
   436  000070                     WaitForBusy@Busy:
   437                           	callstack 0
   438  000070                     Espera@ms:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0xC
   442  000070                     	ds	1
   443  000071                     LcGotoXY@Row:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0xD
   447  000071                     	ds	1
   448  000072                     ??_Espera:
   449  000072                     LcGotoXY@Fisics:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xE
   453  000072                     	ds	1
   454  000073                     Espera@Timer:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0xF
   458  000073                     	ds	1
   459  000074                     LcInit@columns:
   460                           	callstack 0
   461  000074                     _LcGotoXY$342:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x10
   465  000074                     	ds	1
   466  000075                     LcInit@rows:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x11
   470  000075                     	ds	1
   471  000076                     LcGotoXY@Column:
   472                           	callstack 0
   473  000076                     LcInit@i:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x12
   477  000076                     	ds	1
   478  000077                     LcPutChar@c:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x13
   482  000077                     	ds	1
   483  000078                     
   484                           ; 1 bytes @ 0x14
   485 ;;
   486 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   487 ;;
   488 ;; *************** function _main *****************
   489 ;; Defined at:
   490 ;;		line 69 in file "main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1
   504 ;;      Params:         0       0       0
   505 ;;      Locals:         0       0       0
   506 ;;      Temps:          0       0       0
   507 ;;      Totals:         0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels required when called: 7
   510 ;; This function calls:
   511 ;;		_LcInit
   512 ;;		_LcLCD
   513 ;;		_Minit
   514 ;;		_SMotor
   515 ;;		_Sinit
   516 ;;		_TeInit
   517 ;;		_TeTeclat
   518 ;;		_TiInitTimer
   519 ;;		_init_ports
   520 ;;		_menu
   521 ;;		_motorUsuaris
   522 ;; This function is called by:
   523 ;;		Startup code after reset
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text0
   528  000BBE                     __ptext0:
   529                           	callstack 0
   530  000BBE                     _main:
   531                           	callstack 24
   532                           
   533                           ;main.c: 70:     init_ports();
   534                           
   535                           ;incstack = 0
   536  000BBE  EC9B  F006         	call	_init_ports	;wreg free
   537                           
   538                           ;main.c: 71:     TiInitTimer();
   539  000BC2  ECFB  F005         	call	_TiInitTimer	;wreg free
   540                           
   541                           ;main.c: 72:     TeInit();
   542  000BC6  ECDD  F006         	call	_TeInit	;wreg free
   543                           
   544                           ;main.c: 73:     Sinit();
   545  000BCA  ECE1  F006         	call	_Sinit	;wreg free
   546                           
   547                           ;main.c: 74:     SMotor();
   548  000BCE  EC0E  F002         	call	_SMotor	;wreg free
   549                           
   550                           ;main.c: 76:     LcInit(2,16);
   551  000BD2  0E10               	movlw	16
   552  000BD4  6E74               	movwf	LcInit@columns^0,c
   553  000BD6  0E02               	movlw	2
   554  000BD8  EC96  F003         	call	_LcInit
   555                           
   556                           ;main.c: 77:     Minit();
   557  000BDC  ECE9  F006         	call	_Minit	;wreg free
   558  000BE0                     l2685:
   559                           
   560                           ;main.c: 81:         menu();
   561  000BE0  EC12  F001         	call	_menu	;wreg free
   562                           
   563                           ;main.c: 82:         motorUsuaris();
   564  000BE4  EC03  F004         	call	_motorUsuaris	;wreg free
   565                           
   566                           ;main.c: 84:         TeTeclat();
   567  000BE8  ECE4  F002         	call	_TeTeclat	;wreg free
   568                           
   569                           ;main.c: 85:         SMotor();
   570  000BEC  EC0E  F002         	call	_SMotor	;wreg free
   571                           
   572                           ;main.c: 86:         LcLCD();
   573  000BF0  EC49  F006         	call	_LcLCD	;wreg free
   574  000BF4  D7F5               	goto	l2685
   575  000BF6                     __end_of_main:
   576                           	callstack 0
   577                           
   578 ;; *************** function _motorUsuaris *****************
   579 ;; Defined at:
   580 ;;		line 21 in file "Usuaris.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1
   594 ;;      Params:         0       0       0
   595 ;;      Locals:         0       0       0
   596 ;;      Temps:          2       0       0
   597 ;;      Totals:         2       0       0
   598 ;;Total ram usage:        2 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; Hardware stack levels required when called: 2
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           	psect	text1
   609  000806                     __ptext1:
   610                           	callstack 0
   611  000806                     _motorUsuaris:
   612                           	callstack 28
   613                           
   614                           ;Usuaris.c: 22:     static char state = 0;;Usuaris.c: 24:  switch(state) {
   615                           
   616                           ;incstack = 0
   617  000806  D050               	goto	l1797
   618  000808                     l1739:
   619                           
   620                           ;Usuaris.c: 26:    if (j < 9) {
   621  000808  0E09               	movlw	9
   622  00080A  603B               	cpfslt	_j^0,c
   623  00080C  D014               	goto	l1761
   624                           
   625                           ;Usuaris.c: 27:     EEADR = currentUsrIndex;
   626  00080E  C038  FFA9         	movff	_currentUsrIndex,4009	;volatile
   627                           
   628                           ;Usuaris.c: 28:     EEDATA = tmpEEPROM[j];
   629  000812  503B               	movf	_j^0,w,c
   630  000814  0F19               	addlw	low _tmpEEPROM
   631  000816  6ED9               	movwf	fsr2l,c
   632  000818  6ADA               	clrf	fsr2h,c
   633  00081A  50DF               	movf	indf2,w,c
   634  00081C  6EA8               	movwf	168,c	;volatile
   635                           
   636                           ;Usuaris.c: 29:     EECON1bits.EEPGD = 0;
   637  00081E  9EA6               	bcf	166,7,c	;volsfr
   638                           
   639                           ;Usuaris.c: 30:     EECON1bits.CFGS = 0;
   640  000820  9CA6               	bcf	166,6,c	;volsfr
   641                           
   642                           ;Usuaris.c: 31:     EECON1bits.WREN = 1;
   643  000822  84A6               	bsf	166,2,c	;volsfr
   644                           
   645                           ;Usuaris.c: 32:     INTCONbits.GIE = 0;
   646  000824  9EF2               	bcf	242,7,c	;volatile
   647                           
   648                           ;Usuaris.c: 33:     EECON2 = 0x55;
   649  000826  0E55               	movlw	85
   650  000828  6EA7               	movwf	167,c	;volsfr
   651                           
   652                           ;Usuaris.c: 34:     EECON2 = 0x0AA;
   653  00082A  0EAA               	movlw	170
   654  00082C  6EA7               	movwf	167,c	;volsfr
   655                           
   656                           ;Usuaris.c: 35:     EECON1bits.WR = 1;
   657  00082E  82A6               	bsf	166,1,c	;volsfr
   658                           
   659                           ;Usuaris.c: 36:     state = 2;
   660  000830  0E02               	movlw	2
   661  000832  6E36               	movwf	motorUsuaris@state^0,c
   662                           
   663                           ;Usuaris.c: 37:    }
   664  000834  0012               	return	
   665  000836                     l1761:
   666  000836  0E09               	movlw	9
   667  000838  183B               	xorwf	_j^0,w,c
   668  00083A  A4D8               	btfss	status,2,c
   669  00083C  0012               	return	
   670                           
   671                           ;Usuaris.c: 39:     createUser = 0;
   672  00083E  9078               	bcf	(_createUser/(0+8))^0,_createUser& (0+7),c
   673                           
   674                           ;Usuaris.c: 40:     state = 0;
   675  000840  0E00               	movlw	0
   676  000842  6E36               	movwf	motorUsuaris@state^0,c
   677  000844  0012               	return	
   678  000846                     l469:
   679                           
   680                           ;Usuaris.c: 44:    if (EECON1bits.WR == 0) {
   681  000846  B2A6               	btfsc	166,1,c	;volsfr
   682  000848  0012               	return	
   683                           
   684                           ;Usuaris.c: 45:     INTCONbits.GIE = 1;
   685  00084A  8EF2               	bsf	242,7,c	;volatile
   686                           
   687                           ;Usuaris.c: 46:     currentUsrIndex++;
   688  00084C  2A38               	incf	_currentUsrIndex^0,f,c
   689                           
   690                           ;Usuaris.c: 47:     state = 3;
   691  00084E  0E03               	movlw	3
   692  000850  6E36               	movwf	motorUsuaris@state^0,c
   693  000852  0012               	return	
   694  000854                     l1773:
   695                           
   696                           ;Usuaris.c: 51:    if (tmpEEPROM[j] != '\0') {
   697  000854  503B               	movf	_j^0,w,c
   698  000856  0F19               	addlw	low _tmpEEPROM
   699  000858  6ED9               	movwf	fsr2l,c
   700  00085A  6ADA               	clrf	fsr2h,c
   701  00085C  50DF               	movf	indf2,w,c
   702  00085E  B4D8               	btfsc	status,2,c
   703  000860  D004               	goto	l1779
   704                           
   705                           ;Usuaris.c: 52:     j++;
   706  000862  2A3B               	incf	_j^0,f,c
   707                           
   708                           ;Usuaris.c: 53:     state = 1;
   709  000864  0E01               	movlw	1
   710  000866  6E36               	movwf	motorUsuaris@state^0,c
   711                           
   712                           ;Usuaris.c: 54:    }
   713  000868  0012               	return	
   714  00086A                     l1779:
   715  00086A  503B               	movf	_j^0,w,c
   716  00086C  0F19               	addlw	low _tmpEEPROM
   717  00086E  6ED9               	movwf	fsr2l,c
   718  000870  6ADA               	clrf	fsr2h,c
   719  000872  50DF               	movf	indf2,w,c
   720  000874  A4D8               	btfss	status,2,c
   721  000876  0012               	return	
   722                           
   723                           ;Usuaris.c: 56:     j++;
   724  000878  2A3B               	incf	_j^0,f,c
   725                           
   726                           ;Usuaris.c: 57:     state = 4;
   727  00087A  0E04               	movlw	4
   728  00087C  6E36               	movwf	motorUsuaris@state^0,c
   729  00087E  0012               	return	
   730  000880                     l475:
   731                           
   732                           ;Usuaris.c: 61:    if (createUser == 1) {
   733  000880  A078               	btfss	(_createUser/(0+8))^0,_createUser& (0+7),c
   734  000882  0012               	return	
   735                           
   736                           ;Usuaris.c: 62:     state = 1;
   737  000884  0E01               	movlw	1
   738  000886  6E36               	movwf	motorUsuaris@state^0,c
   739                           
   740                           ;Usuaris.c: 63:                 j = 0;
   741  000888  0E00               	movlw	0
   742  00088A  6E3B               	movwf	_j^0,c
   743  00088C  0012               	return	
   744  00088E                     l1787:
   745                           
   746                           ;Usuaris.c: 67:    if (j < 9) {
   747  00088E  0E09               	movlw	9
   748  000890  603B               	cpfslt	_j^0,c
   749  000892  D001               	goto	l1791
   750  000894  0012               	return	
   751  000896                     l1791:
   752  000896  0E09               	movlw	9
   753  000898  183B               	xorwf	_j^0,w,c
   754  00089A  A4D8               	btfss	status,2,c
   755  00089C  0012               	return	
   756                           
   757                           ;Usuaris.c: 70:     j = 0;
   758  00089E  0E00               	movlw	0
   759  0008A0  6E3B               	movwf	_j^0,c
   760                           
   761                           ;Usuaris.c: 71:     state = 0;
   762  0008A2  0E00               	movlw	0
   763  0008A4  6E36               	movwf	motorUsuaris@state^0,c
   764  0008A6  0012               	return	
   765  0008A8                     l1797:
   766  0008A8  5036               	movf	motorUsuaris@state^0,w,c
   767  0008AA  6E69               	movwf	??_motorUsuaris^0,c
   768  0008AC  6A6A               	clrf	(??_motorUsuaris+1)^0,c
   769                           
   770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   771                           ; Switch size 1, requested type "simple"
   772                           ; Number of cases is 1, Range of values is 0 to 0
   773                           ; switch strategies available:
   774                           ; Name         Instructions Cycles
   775                           ; simple_byte            4     3 (average)
   776                           ;	Chosen strategy is simple_byte
   777  0008AE  506A               	movf	(??_motorUsuaris+1)^0,w,c
   778  0008B0  0A00               	xorlw	0	; case 0
   779  0008B2  A4D8               	btfss	status,2,c
   780  0008B4  0012               	return	
   781                           
   782                           ; Switch size 1, requested type "simple"
   783                           ; Number of cases is 5, Range of values is 0 to 4
   784                           ; switch strategies available:
   785                           ; Name         Instructions Cycles
   786                           ; simple_byte           16     9 (average)
   787                           ;	Chosen strategy is simple_byte
   788  0008B6  5069               	movf	??_motorUsuaris^0,w,c
   789  0008B8  0A00               	xorlw	0	; case 0
   790  0008BA  B4D8               	btfsc	status,2,c
   791  0008BC  D7E1               	goto	l475
   792  0008BE  0A01               	xorlw	1	; case 1
   793  0008C0  B4D8               	btfsc	status,2,c
   794  0008C2  D7A2               	goto	l1739
   795  0008C4  0A03               	xorlw	3	; case 2
   796  0008C6  B4D8               	btfsc	status,2,c
   797  0008C8  D7BE               	goto	l469
   798  0008CA  0A01               	xorlw	1	; case 3
   799  0008CC  B4D8               	btfsc	status,2,c
   800  0008CE  D7C2               	goto	l1773
   801  0008D0  0A07               	xorlw	7	; case 4
   802  0008D2  A4D8               	btfss	status,2,c
   803  0008D4  0012               	return	
   804  0008D6  D7DB               	goto	l1787
   805  0008D8                     __end_of_motorUsuaris:
   806                           	callstack 0
   807                           
   808 ;; *************** function _menu *****************
   809 ;; Defined at:
   810 ;;		line 27 in file "Menu.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1
   824 ;;      Params:         0       0       0
   825 ;;      Locals:         0       0       0
   826 ;;      Temps:          0       2       0
   827 ;;      Totals:         0       2       0
   828 ;;Total ram usage:        2 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; Hardware stack levels required when called: 6
   831 ;; This function calls:
   832 ;;		_LcClear
   833 ;;		_LcGotoXY
   834 ;;		_LcLliure
   835 ;;		_LcNewString
   836 ;;		_LcPutChar
   837 ;;		_SMSon
   838 ;;		_UgetNumUsuaris
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text2
   845  000224                     __ptext2:
   846                           	callstack 0
   847  000224                     _menu:
   848                           	callstack 24
   849                           
   850                           ;Menu.c: 28:  static char state = 0;;Menu.c: 30:  switch(state) {
   851                           
   852                           ;incstack = 0
   853  000224  D0D2               	goto	l2663
   854  000226                     l2529:
   855                           
   856                           ; BSR set to: 0
   857                           ;Menu.c: 32:    LcClear();
   858  000226  EC77  F006         	call	_LcClear	;wreg free
   859                           
   860                           ;Menu.c: 33:    LcNewString("1.LOGIN");
   861  00022A  0E0C               	movlw	low STR_1
   862  00022C  6E69               	movwf	LcNewString@new_s^0,c
   863  00022E  ECD1  F006         	call	_LcNewString	;wreg free
   864                           
   865                           ;Menu.c: 34:    state = 1;
   866  000232  0E01               	movlw	1
   867  000234  6E39               	movwf	menu@state^0,c
   868                           
   869                           ;Menu.c: 35:   break;
   870  000236  0012               	return	
   871  000238                     l2535:
   872                           
   873                           ; BSR set to: 0
   874                           ;Menu.c: 37:    if (LcLliure()) {
   875  000238  ECC5  F006         	call	_LcLliure	;wreg free
   876  00023C  A0D8               	btfss	status,0,c
   877  00023E  0012               	return	
   878                           
   879                           ;Menu.c: 38:     LcGotoXY(0,1);
   880  000240  0E01               	movlw	1
   881  000242  6E71               	movwf	LcGotoXY@Row^0,c
   882  000244  0E00               	movlw	0
   883  000246  ECA5  F005         	call	_LcGotoXY
   884                           
   885                           ;Menu.c: 39:     LcNewString("2.REGISTER");
   886  00024A  0E01               	movlw	low STR_2
   887  00024C  6E69               	movwf	LcNewString@new_s^0,c
   888  00024E  ECD1  F006         	call	_LcNewString	;wreg free
   889                           
   890                           ;Menu.c: 40:     NovaTecla = -1;
   891  000252  6853               	setf	_NovaTecla^0,c
   892                           
   893                           ;Menu.c: 41:     state = 2;
   894  000254  0E02               	movlw	2
   895  000256  6E39               	movwf	menu@state^0,c
   896  000258  0012               	return	
   897  00025A                     l2545:
   898                           
   899                           ; BSR set to: 0
   900                           ;Menu.c: 45:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
   901  00025A  0453               	decf	_NovaTecla^0,w,c
   902  00025C  A4D8               	btfss	status,2,c
   903  00025E  D009               	goto	l2553
   904                           
   905                           ; BSR set to: 0
   906  000260  ECF0  F006         	call	_UgetNumUsuaris	;wreg free
   907  000264  0900               	iorlw	0
   908  000266  B4D8               	btfsc	status,2,c
   909  000268  D004               	goto	l2553
   910                           
   911                           ;Menu.c: 46:     loginNOTRegister = 1;
   912  00026A  8278               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   913  00026C                     l2551:
   914                           
   915                           ;Menu.c: 47:     state = 3;
   916  00026C  0E03               	movlw	3
   917  00026E  6E39               	movwf	menu@state^0,c
   918                           
   919                           ;Menu.c: 48:    }
   920  000270  0012               	return	
   921  000272                     l2553:
   922  000272  0E02               	movlw	2
   923  000274  1853               	xorwf	_NovaTecla^0,w,c
   924  000276  A4D8               	btfss	status,2,c
   925  000278  0012               	return	
   926  00027A  ECF0  F006         	call	_UgetNumUsuaris	;wreg free
   927  00027E  0100               	movlb	0	; () banked
   928  000280  6F80               	movwf	??_menu& (0+255),b
   929  000282  0E08               	movlw	8
   930  000284  6180               	cpfslt	??_menu& (0+255),b
   931  000286  0012               	return	
   932                           
   933                           ; BSR set to: 0
   934                           ;Menu.c: 50:     loginNOTRegister = 0;
   935  000288  9278               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   936  00028A  D7F0               	goto	l2551
   937  00028C                     l407:
   938                           
   939                           ; BSR set to: 0
   940                           ;Menu.c: 55:    NovaTecla = -1;
   941  00028C  6853               	setf	_NovaTecla^0,c
   942                           
   943                           ; BSR set to: 0
   944                           ;Menu.c: 56:    LcClear();
   945  00028E  EC77  F006         	call	_LcClear	;wreg free
   946                           
   947                           ;Menu.c: 57:    LcNewString("USER: ");
   948  000292  0E1B               	movlw	low STR_3
   949  000294  6E69               	movwf	LcNewString@new_s^0,c
   950  000296  ECD1  F006         	call	_LcNewString	;wreg free
   951                           
   952                           ;Menu.c: 58:    state = 4;
   953  00029A  0E04               	movlw	4
   954  00029C  6E39               	movwf	menu@state^0,c
   955                           
   956                           ;Menu.c: 59:   break;
   957  00029E  0012               	return	
   958  0002A0                     l2567:
   959                           
   960                           ; BSR set to: 0
   961                           ;Menu.c: 61:    if (LcLliure()) {
   962  0002A0  ECC5  F006         	call	_LcLliure	;wreg free
   963  0002A4  A0D8               	btfss	status,0,c
   964  0002A6  0012               	return	
   965                           
   966                           ;Menu.c: 62:     LcGotoXY(0,1);
   967  0002A8  0E01               	movlw	1
   968  0002AA  6E71               	movwf	LcGotoXY@Row^0,c
   969  0002AC  0E00               	movlw	0
   970  0002AE  ECA5  F005         	call	_LcGotoXY
   971                           
   972                           ;Menu.c: 63:     LcNewString("PSWD: ");
   973  0002B2  0E14               	movlw	low STR_4
   974  0002B4  6E69               	movwf	LcNewString@new_s^0,c
   975  0002B6  ECD1  F006         	call	_LcNewString	;wreg free
   976                           
   977                           ;Menu.c: 64:     state = 5;
   978  0002BA  0E05               	movlw	5
   979  0002BC  6E39               	movwf	menu@state^0,c
   980  0002BE  0012               	return	
   981  0002C0                     l2575:
   982                           
   983                           ; BSR set to: 0
   984                           ;Menu.c: 68:    if (LcLliure()) {
   985  0002C0  ECC5  F006         	call	_LcLliure	;wreg free
   986  0002C4  A0D8               	btfss	status,0,c
   987  0002C6  0012               	return	
   988                           
   989                           ;Menu.c: 69:     LcGotoXY(6,0);
   990  0002C8  0E00               	movlw	0
   991  0002CA  6E71               	movwf	LcGotoXY@Row^0,c
   992  0002CC  0E06               	movlw	6
   993  0002CE  ECA5  F005         	call	_LcGotoXY
   994                           
   995                           ;Menu.c: 70:     SMSon();
   996  0002D2  ECED  F006         	call	_SMSon	;wreg free
   997                           
   998                           ;Menu.c: 71:     j =0;
   999  0002D6  0E00               	movlw	0
  1000  0002D8  6E3B               	movwf	_j^0,c
  1001  0002DA                     l2583:
  1002                           
  1003                           ;Menu.c: 72:     state = 6;
  1004  0002DA  0E06               	movlw	6
  1005  0002DC  6E39               	movwf	menu@state^0,c
  1006  0002DE  0012               	return	
  1007  0002E0                     l2585:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;Menu.c: 76:    if (novaLletra > 47 && NovaTecla < 11) {
  1011  0002E0  5052               	movf	_novaLletra^0,w,c
  1012  0002E2  0A80               	xorlw	128
  1013  0002E4  0F50               	addlw	-176
  1014  0002E6  A0D8               	btfss	status,0,c
  1015  0002E8  D014               	goto	l2601
  1016                           
  1017                           ; BSR set to: 0
  1018  0002EA  5053               	movf	_NovaTecla^0,w,c
  1019  0002EC  0A80               	xorlw	128
  1020  0002EE  0F75               	addlw	-139
  1021  0002F0  B0D8               	btfsc	status,0,c
  1022  0002F2  D00F               	goto	l2601
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;Menu.c: 77:     LcPutChar(novaLletra);
  1026  0002F4  5052               	movf	_novaLletra^0,w,c
  1027  0002F6  EC3E  F005         	call	_LcPutChar
  1028                           
  1029                           ;Menu.c: 78:     username[j] = novaLletra;
  1030  0002FA  503B               	movf	_j^0,w,c
  1031  0002FC  0F2B               	addlw	low _username
  1032  0002FE  6ED9               	movwf	fsr2l,c
  1033  000300  6ADA               	clrf	fsr2h,c
  1034  000302  C052  FFDF         	movff	_novaLletra,indf2
  1035                           
  1036                           ;Menu.c: 79:     NovaTecla = -1;
  1037  000306  6853               	setf	_NovaTecla^0,c
  1038                           
  1039                           ;Menu.c: 80:     novaLletra = -1;
  1040  000308  6852               	setf	_novaLletra^0,c
  1041                           
  1042                           ;Menu.c: 81:     j++;
  1043  00030A  2A3B               	incf	_j^0,f,c
  1044                           
  1045                           ;Menu.c: 82:     state = 7;
  1046  00030C  0E07               	movlw	7
  1047  00030E  6E39               	movwf	menu@state^0,c
  1048                           
  1049                           ;Menu.c: 83:    }
  1050  000310  0012               	return	
  1051  000312                     l2601:
  1052                           
  1053                           ; BSR set to: 0
  1054  000312  0E0B               	movlw	11
  1055  000314  1853               	xorwf	_NovaTecla^0,w,c
  1056  000316  A4D8               	btfss	status,2,c
  1057  000318  0012               	return	
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;Menu.c: 85:     j = 8;
  1061  00031A  0E08               	movlw	8
  1062  00031C  6E3B               	movwf	_j^0,c
  1063                           
  1064                           ;Menu.c: 86:     state = 7;
  1065  00031E  0E07               	movlw	7
  1066  000320  6E39               	movwf	menu@state^0,c
  1067  000322  0012               	return	
  1068  000324                     l2605:
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;Menu.c: 90:    if (j != 8) {
  1072  000324  0E08               	movlw	8
  1073  000326  183B               	xorwf	_j^0,w,c
  1074  000328  A4D8               	btfss	status,2,c
  1075  00032A  D7D7               	goto	l2583
  1076                           
  1077                           ; BSR set to: 0
  1078  00032C  0E08               	movlw	8
  1079  00032E  183B               	xorwf	_j^0,w,c
  1080  000330  A4D8               	btfss	status,2,c
  1081  000332  0012               	return	
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;Menu.c: 94:     LcGotoXY(6,1);
  1085  000334  0E01               	movlw	1
  1086  000336  6E71               	movwf	LcGotoXY@Row^0,c
  1087  000338  0E06               	movlw	6
  1088  00033A  ECA5  F005         	call	_LcGotoXY
  1089                           
  1090                           ;Menu.c: 95:     username[j] = novaLletra;
  1091  00033E  503B               	movf	_j^0,w,c
  1092  000340  0F2B               	addlw	low _username
  1093  000342  6ED9               	movwf	fsr2l,c
  1094  000344  6ADA               	clrf	fsr2h,c
  1095  000346  C052  FFDF         	movff	_novaLletra,indf2
  1096                           
  1097                           ;Menu.c: 96:     NovaTecla = -1;
  1098  00034A  6853               	setf	_NovaTecla^0,c
  1099                           
  1100                           ;Menu.c: 97:     novaLletra = -1;
  1101  00034C  6852               	setf	_novaLletra^0,c
  1102                           
  1103                           ;Menu.c: 98:     j = 0;
  1104  00034E  0E00               	movlw	0
  1105  000350  6E3B               	movwf	_j^0,c
  1106  000352                     l2621:
  1107                           
  1108                           ;Menu.c: 99:     state = 8;
  1109  000352  0E08               	movlw	8
  1110  000354  6E39               	movwf	menu@state^0,c
  1111  000356  0012               	return	
  1112  000358                     l2623:
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;Menu.c: 103:    if (novaLletra > 47 && NovaTecla < 11) {
  1116  000358  5052               	movf	_novaLletra^0,w,c
  1117  00035A  0A80               	xorlw	128
  1118  00035C  0F50               	addlw	-176
  1119  00035E  A0D8               	btfss	status,0,c
  1120  000360  D014               	goto	l2639
  1121                           
  1122                           ; BSR set to: 0
  1123  000362  5053               	movf	_NovaTecla^0,w,c
  1124  000364  0A80               	xorlw	128
  1125  000366  0F75               	addlw	-139
  1126  000368  B0D8               	btfsc	status,0,c
  1127  00036A  D00F               	goto	l2639
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;Menu.c: 104:     LcPutChar(novaLletra);
  1131  00036C  5052               	movf	_novaLletra^0,w,c
  1132  00036E  EC3E  F005         	call	_LcPutChar
  1133                           
  1134                           ;Menu.c: 105:     password[j] = novaLletra;
  1135  000372  503B               	movf	_j^0,w,c
  1136  000374  0F22               	addlw	low _password
  1137  000376  6ED9               	movwf	fsr2l,c
  1138  000378  6ADA               	clrf	fsr2h,c
  1139  00037A  C052  FFDF         	movff	_novaLletra,indf2
  1140                           
  1141                           ;Menu.c: 106:     NovaTecla = -1;
  1142  00037E  6853               	setf	_NovaTecla^0,c
  1143                           
  1144                           ;Menu.c: 107:     novaLletra = -1;
  1145  000380  6852               	setf	_novaLletra^0,c
  1146                           
  1147                           ;Menu.c: 108:     j++;
  1148  000382  2A3B               	incf	_j^0,f,c
  1149                           
  1150                           ;Menu.c: 109:     state = 9;
  1151  000384  0E09               	movlw	9
  1152  000386  6E39               	movwf	menu@state^0,c
  1153                           
  1154                           ;Menu.c: 110:    }
  1155  000388  0012               	return	
  1156  00038A                     l2639:
  1157                           
  1158                           ; BSR set to: 0
  1159  00038A  0E0B               	movlw	11
  1160  00038C  1853               	xorwf	_NovaTecla^0,w,c
  1161  00038E  A4D8               	btfss	status,2,c
  1162  000390  0012               	return	
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;Menu.c: 112:     j = 8;
  1166  000392  0E08               	movlw	8
  1167  000394  6E3B               	movwf	_j^0,c
  1168                           
  1169                           ;Menu.c: 113:     state = 9;
  1170  000396  0E09               	movlw	9
  1171  000398  6E39               	movwf	menu@state^0,c
  1172  00039A  0012               	return	
  1173  00039C                     l2643:
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;Menu.c: 117:    if (j != 8) {
  1177  00039C  0E08               	movlw	8
  1178  00039E  183B               	xorwf	_j^0,w,c
  1179  0003A0  A4D8               	btfss	status,2,c
  1180  0003A2  D7D7               	goto	l2621
  1181                           
  1182                           ; BSR set to: 0
  1183  0003A4  0E08               	movlw	8
  1184  0003A6  183B               	xorwf	_j^0,w,c
  1185  0003A8  A4D8               	btfss	status,2,c
  1186  0003AA  0012               	return	
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;Menu.c: 121:     password[j] = novaLletra;
  1190  0003AC  503B               	movf	_j^0,w,c
  1191  0003AE  0F22               	addlw	low _password
  1192  0003B0  6ED9               	movwf	fsr2l,c
  1193  0003B2  6ADA               	clrf	fsr2h,c
  1194  0003B4  C052  FFDF         	movff	_novaLletra,indf2
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;Menu.c: 122:     NovaTecla = -1;
  1198  0003B8  6853               	setf	_NovaTecla^0,c
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;Menu.c: 123:     novaLletra = -1;
  1202  0003BA  6852               	setf	_novaLletra^0,c
  1203                           
  1204                           ; BSR set to: 0
  1205                           ;Menu.c: 124:     j = 0;
  1206  0003BC  0E00               	movlw	0
  1207  0003BE  6E3B               	movwf	_j^0,c
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;Menu.c: 125:     LcClear();
  1211  0003C0  EC77  F006         	call	_LcClear	;wreg free
  1212                           
  1213                           ;Menu.c: 126:     state = 10;
  1214  0003C4  0E0A               	movlw	10
  1215  0003C6  6E39               	movwf	menu@state^0,c
  1216  0003C8  0012               	return	
  1217  0003CA                     l2663:
  1218  0003CA  5039               	movf	menu@state^0,w,c
  1219  0003CC  0100               	movlb	0	; () banked
  1220  0003CE  6F80               	movwf	??_menu& (0+255),b
  1221  0003D0  6B81               	clrf	(??_menu+1)& (0+255),b
  1222                           
  1223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1224                           ; Switch size 1, requested type "simple"
  1225                           ; Number of cases is 1, Range of values is 0 to 0
  1226                           ; switch strategies available:
  1227                           ; Name         Instructions Cycles
  1228                           ; simple_byte            4     3 (average)
  1229                           ;	Chosen strategy is simple_byte
  1230  0003D2  5181               	movf	(??_menu+1)& (0+255),w,b
  1231  0003D4  0A00               	xorlw	0	; case 0
  1232  0003D6  A4D8               	btfss	status,2,c
  1233  0003D8  0012               	return	
  1234                           
  1235                           ; BSR set to: 0
  1236                           ; Switch size 1, requested type "simple"
  1237                           ; Number of cases is 11, Range of values is 0 to 10
  1238                           ; switch strategies available:
  1239                           ; Name         Instructions Cycles
  1240                           ; simple_byte           34    18 (average)
  1241                           ;	Chosen strategy is simple_byte
  1242  0003DA  5180               	movf	??_menu& (0+255),w,b
  1243  0003DC  0A00               	xorlw	0	; case 0
  1244  0003DE  B4D8               	btfsc	status,2,c
  1245  0003E0  D722               	goto	l2529
  1246  0003E2  0A01               	xorlw	1	; case 1
  1247  0003E4  B4D8               	btfsc	status,2,c
  1248  0003E6  D728               	goto	l2535
  1249  0003E8  0A03               	xorlw	3	; case 2
  1250  0003EA  B4D8               	btfsc	status,2,c
  1251  0003EC  D736               	goto	l2545
  1252  0003EE  0A01               	xorlw	1	; case 3
  1253  0003F0  B4D8               	btfsc	status,2,c
  1254  0003F2  D74C               	goto	l407
  1255  0003F4  0A07               	xorlw	7	; case 4
  1256  0003F6  B4D8               	btfsc	status,2,c
  1257  0003F8  D753               	goto	l2567
  1258  0003FA  0A01               	xorlw	1	; case 5
  1259  0003FC  B4D8               	btfsc	status,2,c
  1260  0003FE  D760               	goto	l2575
  1261  000400  0A03               	xorlw	3	; case 6
  1262  000402  B4D8               	btfsc	status,2,c
  1263  000404  D76D               	goto	l2585
  1264  000406  0A01               	xorlw	1	; case 7
  1265  000408  B4D8               	btfsc	status,2,c
  1266  00040A  D78C               	goto	l2605
  1267  00040C  0A0F               	xorlw	15	; case 8
  1268  00040E  B4D8               	btfsc	status,2,c
  1269  000410  D7A3               	goto	l2623
  1270  000412  0A01               	xorlw	1	; case 9
  1271  000414  B4D8               	btfsc	status,2,c
  1272  000416  D7C2               	goto	l2643
  1273  000418  0A03               	xorlw	3	; case 10
  1274  00041A  0012               	return	
  1275  00041C                     __end_of_menu:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _UgetNumUsuaris *****************
  1279 ;; Defined at:
  1280 ;;		line 11 in file "Usuaris.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      unsigned char 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1
  1294 ;;      Params:         0       0       0
  1295 ;;      Locals:         0       0       0
  1296 ;;      Temps:          0       0       0
  1297 ;;      Totals:         0       0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 2
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_menu
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text3
  1309  000DE0                     __ptext3:
  1310                           	callstack 0
  1311  000DE0                     _UgetNumUsuaris:
  1312                           	callstack 27
  1313                           
  1314                           ;Usuaris.c: 12:     return numUsuaris;
  1315                           
  1316                           ;incstack = 0
  1317  000DE0  5037               	movf	_numUsuaris^0,w,c
  1318  000DE2  0012               	return		;funcret
  1319  000DE4                     __end_of_UgetNumUsuaris:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _SMSon *****************
  1323 ;; Defined at:
  1324 ;;		line 114 in file "Ssms.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		None
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1
  1338 ;;      Params:         0       0       0
  1339 ;;      Locals:         0       0       0
  1340 ;;      Temps:          0       0       0
  1341 ;;      Totals:         0       0       0
  1342 ;;Total ram usage:        0 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; Hardware stack levels required when called: 2
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_menu
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text4
  1353  000DDA                     __ptext4:
  1354                           	callstack 0
  1355  000DDA                     _SMSon:
  1356                           	callstack 27
  1357                           
  1358                           ;Ssms.c: 115:     setSMSon = 1;
  1359                           
  1360                           ;incstack = 0
  1361  000DDA  8478               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1362                           
  1363                           ;Ssms.c: 116:     novaTecla = -1;
  1364  000DDC  6856               	setf	_novaTecla^0,c
  1365  000DDE  0012               	return		;funcret
  1366  000DE0                     __end_of_SMSon:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _LcNewString *****************
  1370 ;; Defined at:
  1371 ;;		line 239 in file "LcTLCD.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  new_s           1    5[COMRAM] PTR unsigned char 
  1374 ;;		 -> STR_4(7), STR_3(7), STR_2(11), STR_1(8), 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1
  1386 ;;      Params:         1       0       0
  1387 ;;      Locals:         0       0       0
  1388 ;;      Temps:          0       0       0
  1389 ;;      Totals:         1       0       0
  1390 ;;Total ram usage:        1 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 2
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_menu
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text5
  1401  000DA2                     __ptext5:
  1402                           	callstack 0
  1403  000DA2                     _LcNewString:
  1404                           	callstack 27
  1405                           
  1406                           ;LcTLCD.c: 240:     s_ptr = new_s;
  1407                           
  1408                           ;incstack = 0
  1409  000DA2  C069  F043         	movff	LcNewString@new_s,_s_ptr
  1410                           
  1411                           ;LcTLCD.c: 241:     nou_s = 1;
  1412  000DA6  8678               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1413  000DA8  0012               	return		;funcret
  1414  000DAA                     __end_of_LcNewString:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _LcLliure *****************
  1418 ;; Defined at:
  1419 ;;		line 265 in file "LcTLCD.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;		None               void
  1426 ;; Registers used:
  1427 ;;		status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1
  1433 ;;      Params:         0       0       0
  1434 ;;      Locals:         0       0       0
  1435 ;;      Temps:          0       0       0
  1436 ;;      Totals:         0       0       0
  1437 ;;Total ram usage:        0 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 2
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_menu
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text6
  1448  000D8A                     __ptext6:
  1449                           	callstack 0
  1450  000D8A                     _LcLliure:
  1451                           	callstack 27
  1452                           
  1453                           ;LcTLCD.c: 266:     return !nou_s;
  1454                           
  1455                           ;incstack = 0
  1456  000D8A  A678               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1457  000D8C  D002               	goto	l1323
  1458  000D8E  90D8               	bcf	status,0,c
  1459  000D90  0012               	return	
  1460  000D92                     l1323:
  1461  000D92  80D8               	bsf	status,0,c
  1462  000D94  0012               	return		;funcret
  1463  000D96                     __end_of_LcLliure:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _LcClear *****************
  1467 ;; Defined at:
  1468 ;;		line 82 in file "LcTLCD.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1
  1482 ;;      Params:         0       0       0
  1483 ;;      Locals:         0       0       0
  1484 ;;      Temps:          0       0       0
  1485 ;;      Totals:         0       0       0
  1486 ;;Total ram usage:        0 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 5
  1489 ;; This function calls:
  1490 ;;		_CantaIR
  1491 ;;		_Espera
  1492 ;;		_LcGotoXY
  1493 ;;		_WaitForBusy
  1494 ;; This function is called by:
  1495 ;;		_menu
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text7
  1500  000CEE                     __ptext7:
  1501                           	callstack 0
  1502  000CEE                     _LcClear:
  1503                           	callstack 24
  1504                           
  1505                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  1506                           
  1507                           ;incstack = 0
  1508  000CEE  EC67  F005         	call	_WaitForBusy	;wreg free
  1509  000CF2  0E01               	movlw	1
  1510  000CF4  EC30  F006         	call	_CantaIR
  1511                           
  1512                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  1513  000CF8  0E00               	movlw	0
  1514  000CFA  6E71               	movwf	(Espera@ms+1)^0,c
  1515  000CFC  0E03               	movlw	3
  1516  000CFE  6E70               	movwf	Espera@ms^0,c
  1517  000D00  5044               	movf	_Timer^0,w,c
  1518  000D02  EC89  F006         	call	_Espera
  1519                           
  1520                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  1521  000D06  0E00               	movlw	0
  1522  000D08  6E71               	movwf	LcGotoXY@Row^0,c
  1523  000D0A  0E00               	movlw	0
  1524  000D0C  ECA5  F005         	call	_LcGotoXY
  1525  000D10  0012               	return		;funcret
  1526  000D12                     __end_of_LcClear:
  1527                           	callstack 0
  1528                           
  1529 ;; *************** function _init_ports *****************
  1530 ;; Defined at:
  1531 ;;		line 19 in file "main.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1
  1545 ;;      Params:         0       0       0
  1546 ;;      Locals:         0       0       0
  1547 ;;      Temps:          0       0       0
  1548 ;;      Totals:         0       0       0
  1549 ;;Total ram usage:        0 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; Hardware stack levels required when called: 2
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text8
  1560  000D36                     __ptext8:
  1561                           	callstack 0
  1562  000D36                     _init_ports:
  1563                           	callstack 28
  1564                           
  1565                           ;incstack = 0
  1566  000D36  0E03               	movlw	3
  1567  000D38  6E92               	movwf	146,c	;volatile
  1568  000D3A  0EE0               	movlw	224
  1569  000D3C  6E93               	movwf	147,c	;volatile
  1570  000D3E  968A               	bcf	138,3,c	;volatile
  1571  000D40  908A               	bcf	138,0,c	;volatile
  1572  000D42  928A               	bcf	138,1,c	;volatile
  1573                           
  1574                           ;main.c: 42:     TRISC = 0xC0;
  1575  000D44  0EC0               	movlw	192
  1576  000D46  6E94               	movwf	148,c	;volatile
  1577                           
  1578                           ;main.c: 52:     TRISD = 0x8F;
  1579  000D48  0E8F               	movlw	143
  1580  000D4A  6E95               	movwf	149,c	;volatile
  1581                           
  1582                           ;main.c: 53:     LATD = 0x00;
  1583  000D4C  0E00               	movlw	0
  1584  000D4E  6E8C               	movwf	140,c	;volatile
  1585                           
  1586                           ;main.c: 56:     EECON1bits.EEPGD = 1;
  1587  000D50  8EA6               	bsf	166,7,c	;volsfr
  1588                           
  1589                           ;main.c: 57:     EECON1bits.CFGS = 0;
  1590  000D52  9CA6               	bcf	166,6,c	;volsfr
  1591  000D54  0012               	return		;funcret
  1592  000D56                     __end_of_init_ports:
  1593                           	callstack 0
  1594                           
  1595 ;; *************** function _TiInitTimer *****************
  1596 ;; Defined at:
  1597 ;;		line 18 in file "TiTTimer.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1
  1611 ;;      Params:         0       0       0
  1612 ;;      Locals:         0       0       0
  1613 ;;      Temps:          0       0       0
  1614 ;;      Totals:         0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 2
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text9
  1626  000BF6                     __ptext9:
  1627                           	callstack 0
  1628  000BF6                     _TiInitTimer:
  1629                           	callstack 28
  1630                           
  1631                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  1632                           
  1633                           ;incstack = 0
  1634  000BF6  9ED0               	bcf	208,7,c	;volatile
  1635                           
  1636                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  1637  000BF8  8EF2               	bsf	242,7,c	;volatile
  1638                           
  1639                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  1640  000BFA  8CF2               	bsf	242,6,c	;volatile
  1641                           
  1642                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  1643  000BFC  8AF2               	bsf	242,5,c	;volatile
  1644                           
  1645                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  1646  000BFE  94F2               	bcf	242,2,c	;volatile
  1647                           
  1648                           ;TiTTimer.c: 25:     T0CON = 136;
  1649  000C00  0E88               	movlw	136
  1650  000C02  6ED5               	movwf	213,c	;volatile
  1651                           
  1652                           ;TiTTimer.c: 27:     TMR0H = 223;
  1653  000C04  0EDF               	movlw	223
  1654  000C06  6ED7               	movwf	215,c	;volatile
  1655                           
  1656                           ;TiTTimer.c: 28:     TMR0L = 148;
  1657  000C08  0E94               	movlw	148
  1658  000C0A  6ED6               	movwf	214,c	;volatile
  1659                           
  1660                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  1661  000C0C  8ED5               	bsf	213,7,c	;volatile
  1662                           
  1663                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  1664  000C0E  0E00               	movlw	0
  1665  000C10  6E3C               	movwf	_counter^0,c
  1666  000C12                     l1443:
  1667  000C12  0E07               	movlw	7
  1668  000C14  643C               	cpfsgt	_counter^0,c
  1669  000C16  D001               	goto	l1447
  1670  000C18  0012               	return	
  1671  000C1A                     l1447:
  1672                           
  1673                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  1674  000C1A  503C               	movf	_counter^0,w,c
  1675  000C1C  0D03               	mullw	3
  1676  000C1E  50F3               	movf	243,w,c
  1677  000C20  0F03               	addlw	low (_s_Timers+2)
  1678  000C22  6ED9               	movwf	fsr2l,c
  1679  000C24  6ADA               	clrf	fsr2h,c
  1680  000C26  0E00               	movlw	0
  1681  000C28  6EDF               	movwf	indf2,c
  1682                           
  1683                           ;TiTTimer.c: 33:     }
  1684  000C2A  2A3C               	incf	_counter^0,f,c
  1685  000C2C  D7F2               	goto	l1443
  1686  000C2E                     __end_of_TiInitTimer:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _TeTeclat *****************
  1690 ;; Defined at:
  1691 ;;		line 22 in file "TeTeclat.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1
  1705 ;;      Params:         0       0       0
  1706 ;;      Locals:         0       0       0
  1707 ;;      Temps:          3       0       0
  1708 ;;      Totals:         3       0       0
  1709 ;;Total ram usage:        3 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 3
  1712 ;; This function calls:
  1713 ;;		_MsetNovaTecla
  1714 ;;		_SsetNovaTecla
  1715 ;;		_TiGetTics
  1716 ;;		_TiResetTics
  1717 ;; This function is called by:
  1718 ;;		_main
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text10
  1723  0005C8                     __ptext10:
  1724                           	callstack 0
  1725  0005C8                     _TeTeclat:
  1726                           	callstack 27
  1727                           
  1728                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  1729                           
  1730                           ;incstack = 0
  1731  0005C8  A083               	btfss	131,0,c	;volatile
  1732  0005CA  D003               	goto	u1830
  1733  0005CC  6A70               	clrf	??_TeTeclat^0,c
  1734  0005CE  2A70               	incf	??_TeTeclat^0,f,c
  1735  0005D0  D001               	goto	u1838
  1736  0005D2                     u1830:
  1737  0005D2  6A70               	clrf	??_TeTeclat^0,c
  1738  0005D4                     u1838:
  1739  0005D4  A283               	btfss	131,1,c	;volatile
  1740  0005D6  D002               	goto	u1840
  1741  0005D8  0E01               	movlw	1
  1742  0005DA  D001               	goto	u1846
  1743  0005DC                     u1840:
  1744  0005DC  0E00               	movlw	0
  1745  0005DE                     u1846:
  1746  0005DE  0D02               	mullw	2
  1747  0005E0  CFF3 F071          	movff	prodl,??_TeTeclat+1
  1748  0005E4  A483               	btfss	131,2,c	;volatile
  1749  0005E6  D002               	goto	u1850
  1750  0005E8  0E01               	movlw	1
  1751  0005EA  D001               	goto	u1856
  1752  0005EC                     u1850:
  1753  0005EC  0E00               	movlw	0
  1754  0005EE                     u1856:
  1755  0005EE  0D03               	mullw	3
  1756  0005F0  CFF3 F072          	movff	prodl,??_TeTeclat+2
  1757  0005F4  A683               	btfss	131,3,c	;volatile
  1758  0005F6  D002               	goto	u1860
  1759  0005F8  0E01               	movlw	1
  1760  0005FA  D001               	goto	u1866
  1761  0005FC                     u1860:
  1762  0005FC  0E00               	movlw	0
  1763  0005FE                     u1866:
  1764  0005FE  0D04               	mullw	4
  1765  000600  50F3               	movf	243,w,c
  1766  000602  2472               	addwf	(??_TeTeclat+2)^0,w,c
  1767  000604  2471               	addwf	(??_TeTeclat+1)^0,w,c
  1768  000606  2470               	addwf	??_TeTeclat^0,w,c
  1769  000608  6E3D               	movwf	TeTeclat@files^0,c
  1770                           
  1771                           ;TeTeclat.c: 27:  switch(state) {
  1772  00060A  D06F               	goto	l2481
  1773  00060C                     l2407:
  1774                           
  1775                           ;TeTeclat.c: 29:    if (files==0) {
  1776  00060C  503D               	movf	TeTeclat@files^0,w,c
  1777  00060E  A4D8               	btfss	status,2,c
  1778  000610  D007               	goto	l2415
  1779                           
  1780                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  1781  000612  888C               	bsf	140,4,c	;volatile
  1782                           
  1783                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  1784  000614  9A8C               	bcf	140,5,c	;volatile
  1785                           
  1786                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  1787  000616  9C8C               	bcf	140,6,c	;volatile
  1788                           
  1789                           ;TeTeclat.c: 33:     cols=0;
  1790  000618  0E00               	movlw	0
  1791  00061A  6E3E               	movwf	TeTeclat@cols^0,c
  1792  00061C                     l2413:
  1793                           
  1794                           ;TeTeclat.c: 34:     state++;
  1795  00061C  2A3F               	incf	TeTeclat@state^0,f,c
  1796                           
  1797                           ;TeTeclat.c: 35:    }
  1798  00061E  0012               	return	
  1799  000620                     l2415:
  1800  000620  503D               	movf	TeTeclat@files^0,w,c
  1801  000622  B4D8               	btfsc	status,2,c
  1802  000624  0012               	return	
  1803                           
  1804                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  1805  000626  5040               	movf	_tiTeclat^0,w,c
  1806  000628  ECB9  F006         	call	_TiResetTics
  1807  00062C                     l2419:
  1808                           
  1809                           ;TeTeclat.c: 38:     state = 3;
  1810  00062C  0E03               	movlw	3
  1811  00062E  6E3F               	movwf	TeTeclat@state^0,c
  1812  000630  0012               	return	
  1813  000632                     l2421:
  1814                           
  1815                           ;TeTeclat.c: 42:    if (files==0) {
  1816  000632  503D               	movf	TeTeclat@files^0,w,c
  1817  000634  A4D8               	btfss	status,2,c
  1818  000636  D005               	goto	l2429
  1819                           
  1820                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  1821  000638  988C               	bcf	140,4,c	;volatile
  1822                           
  1823                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  1824  00063A  8A8C               	bsf	140,5,c	;volatile
  1825                           
  1826                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  1827  00063C  9C8C               	bcf	140,6,c	;volatile
  1828                           
  1829                           ;TeTeclat.c: 46:     cols=1;
  1830  00063E  0E01               	movlw	1
  1831  000640  D7EC               	goto	L1
  1832  000642                     l2429:
  1833  000642  503D               	movf	TeTeclat@files^0,w,c
  1834  000644  B4D8               	btfsc	status,2,c
  1835  000646  0012               	return	
  1836                           
  1837                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  1838  000648  5040               	movf	_tiTeclat^0,w,c
  1839  00064A  ECB9  F006         	call	_TiResetTics
  1840  00064E  D7EE               	goto	l2419
  1841  000650                     l2435:
  1842                           
  1843                           ;TeTeclat.c: 55:    if (files==0) {
  1844  000650  503D               	movf	TeTeclat@files^0,w,c
  1845  000652  A4D8               	btfss	status,2,c
  1846  000654  D008               	goto	l2441
  1847                           
  1848                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  1849  000656  988C               	bcf	140,4,c	;volatile
  1850                           
  1851                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  1852  000658  9A8C               	bcf	140,5,c	;volatile
  1853                           
  1854                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  1855  00065A  8C8C               	bsf	140,6,c	;volatile
  1856                           
  1857                           ;TeTeclat.c: 59:     cols=2;
  1858  00065C  0E02               	movlw	2
  1859  00065E  6E3E               	movwf	TeTeclat@cols^0,c
  1860                           
  1861                           ;TeTeclat.c: 60:     state = 0;
  1862  000660  0E00               	movlw	0
  1863  000662  6E3F               	movwf	TeTeclat@state^0,c
  1864                           
  1865                           ;TeTeclat.c: 61:    }
  1866  000664  0012               	return	
  1867  000666                     l2441:
  1868  000666  503D               	movf	TeTeclat@files^0,w,c
  1869  000668  B4D8               	btfsc	status,2,c
  1870  00066A  0012               	return	
  1871                           
  1872                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  1873  00066C  5040               	movf	_tiTeclat^0,w,c
  1874  00066E  ECB9  F006         	call	_TiResetTics
  1875  000672  D7D4               	goto	l2413
  1876  000674                     l2447:
  1877                           
  1878                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  1879  000674  5040               	movf	_tiTeclat^0,w,c
  1880  000676  EC61  F006         	call	_TiGetTics
  1881  00067A  BE6A               	btfsc	(?_TiGetTics+1)^0,7,c
  1882  00067C  0012               	return	
  1883  00067E  D7CE               	goto	l2413
  1884  000680                     l2451:
  1885                           
  1886                           ;TeTeclat.c: 73:    if (files==0) {
  1887  000680  503D               	movf	TeTeclat@files^0,w,c
  1888  000682  A4D8               	btfss	status,2,c
  1889  000684  D003               	goto	l2455
  1890                           
  1891                           ;TeTeclat.c: 74:     state = 1;
  1892  000686  0E01               	movlw	1
  1893  000688  6E3F               	movwf	TeTeclat@state^0,c
  1894                           
  1895                           ;TeTeclat.c: 75:    }
  1896  00068A  0012               	return	
  1897  00068C                     l2455:
  1898  00068C  503D               	movf	TeTeclat@files^0,w,c
  1899  00068E  B4D8               	btfsc	status,2,c
  1900  000690  0012               	return	
  1901                           
  1902                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  1903  000692  503D               	movf	TeTeclat@files^0,w,c
  1904  000694  0D03               	mullw	3
  1905  000696  50F3               	movf	243,w,c
  1906  000698  0F55               	addlw	low (_teclaPremuda+253)
  1907  00069A  243E               	addwf	TeTeclat@cols^0,w,c
  1908  00069C  6ED9               	movwf	fsr2l,c
  1909  00069E  6ADA               	clrf	fsr2h,c
  1910  0006A0  50DF               	movf	indf2,w,c
  1911  0006A2  ECD9  F006         	call	_MsetNovaTecla
  1912                           
  1913                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  1914  0006A6  503D               	movf	TeTeclat@files^0,w,c
  1915  0006A8  0D03               	mullw	3
  1916  0006AA  50F3               	movf	243,w,c
  1917  0006AC  0F55               	addlw	low (_teclaPremuda+253)
  1918  0006AE  243E               	addwf	TeTeclat@cols^0,w,c
  1919  0006B0  6ED9               	movwf	fsr2l,c
  1920  0006B2  6ADA               	clrf	fsr2h,c
  1921  0006B4  50DF               	movf	indf2,w,c
  1922  0006B6  ECD5  F006         	call	_SsetNovaTecla
  1923  0006BA  D7B0               	goto	l2413
  1924  0006BC                     l2461:
  1925                           
  1926                           ;TeTeclat.c: 84:    if (files==0) {
  1927  0006BC  503D               	movf	TeTeclat@files^0,w,c
  1928  0006BE  A4D8               	btfss	status,2,c
  1929  0006C0  0012               	return	
  1930                           
  1931                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  1932  0006C2  5040               	movf	_tiTeclat^0,w,c
  1933  0006C4  ECB9  F006         	call	_TiResetTics
  1934  0006C8  D7A9               	goto	l2413
  1935  0006CA                     l2467:
  1936                           
  1937                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  1938  0006CA  5040               	movf	_tiTeclat^0,w,c
  1939  0006CC  EC61  F006         	call	_TiGetTics
  1940  0006D0  D7D4               	goto	L2
  1941  0006D2                     l2471:
  1942                           
  1943                           ;TeTeclat.c: 95:    if (files!=0) {
  1944  0006D2  503D               	movf	TeTeclat@files^0,w,c
  1945  0006D4  B4D8               	btfsc	status,2,c
  1946  0006D6  D003               	goto	l2475
  1947                           
  1948                           ;TeTeclat.c: 96:     state = 5;
  1949  0006D8  0E05               	movlw	5
  1950  0006DA  6E3F               	movwf	TeTeclat@state^0,c
  1951                           
  1952                           ;TeTeclat.c: 97:    }
  1953  0006DC  0012               	return	
  1954  0006DE                     l2475:
  1955  0006DE  503D               	movf	TeTeclat@files^0,w,c
  1956  0006E0  A4D8               	btfss	status,2,c
  1957  0006E2  0012               	return	
  1958                           
  1959                           ;TeTeclat.c: 99:     state = 0;
  1960  0006E4  0E00               	movlw	0
  1961  0006E6  6E3F               	movwf	TeTeclat@state^0,c
  1962  0006E8  0012               	return	
  1963  0006EA                     l2481:
  1964  0006EA  503F               	movf	TeTeclat@state^0,w,c
  1965  0006EC  6E70               	movwf	??_TeTeclat^0,c
  1966  0006EE  6A71               	clrf	(??_TeTeclat+1)^0,c
  1967                           
  1968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1969                           ; Switch size 1, requested type "simple"
  1970                           ; Number of cases is 1, Range of values is 0 to 0
  1971                           ; switch strategies available:
  1972                           ; Name         Instructions Cycles
  1973                           ; simple_byte            4     3 (average)
  1974                           ;	Chosen strategy is simple_byte
  1975  0006F0  5071               	movf	(??_TeTeclat+1)^0,w,c
  1976  0006F2  0A00               	xorlw	0	; case 0
  1977  0006F4  A4D8               	btfss	status,2,c
  1978  0006F6  0012               	return	
  1979                           
  1980                           ; Switch size 1, requested type "simple"
  1981                           ; Number of cases is 8, Range of values is 0 to 7
  1982                           ; switch strategies available:
  1983                           ; Name         Instructions Cycles
  1984                           ; simple_byte           25    13 (average)
  1985                           ;	Chosen strategy is simple_byte
  1986  0006F8  5070               	movf	??_TeTeclat^0,w,c
  1987  0006FA  0A00               	xorlw	0	; case 0
  1988  0006FC  B4D8               	btfsc	status,2,c
  1989  0006FE  D786               	goto	l2407
  1990  000700  0A01               	xorlw	1	; case 1
  1991  000702  B4D8               	btfsc	status,2,c
  1992  000704  D796               	goto	l2421
  1993  000706  0A03               	xorlw	3	; case 2
  1994  000708  B4D8               	btfsc	status,2,c
  1995  00070A  D7A2               	goto	l2435
  1996  00070C  0A01               	xorlw	1	; case 3
  1997  00070E  B4D8               	btfsc	status,2,c
  1998  000710  D7B1               	goto	l2447
  1999  000712  0A07               	xorlw	7	; case 4
  2000  000714  B4D8               	btfsc	status,2,c
  2001  000716  D7B4               	goto	l2451
  2002  000718  0A01               	xorlw	1	; case 5
  2003  00071A  B4D8               	btfsc	status,2,c
  2004  00071C  D7CF               	goto	l2461
  2005  00071E  0A03               	xorlw	3	; case 6
  2006  000720  B4D8               	btfsc	status,2,c
  2007  000722  D7D3               	goto	l2467
  2008  000724  0A01               	xorlw	1	; case 7
  2009  000726  A4D8               	btfss	status,2,c
  2010  000728  0012               	return	
  2011  00072A  D7D3               	goto	l2471
  2012  00072C                     __end_of_TeTeclat:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _SsetNovaTecla *****************
  2016 ;; Defined at:
  2017 ;;		line 110 in file "Ssms.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  tecla           1    wreg     unsigned char 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  tecla           1    5[COMRAM] unsigned char 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1
  2031 ;;      Params:         0       0       0
  2032 ;;      Locals:         1       0       0
  2033 ;;      Temps:          0       0       0
  2034 ;;      Totals:         1       0       0
  2035 ;;Total ram usage:        1 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 2
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_TeTeclat
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text11
  2046  000DAA                     __ptext11:
  2047                           	callstack 0
  2048  000DAA                     _SsetNovaTecla:
  2049                           	callstack 27
  2050                           
  2051                           ;incstack = 0
  2052                           ;SsetNovaTecla@tecla stored from wreg
  2053  000DAA  6E69               	movwf	SsetNovaTecla@tecla^0,c
  2054                           
  2055                           ;Ssms.c: 111:     novaTecla = tecla;
  2056  000DAC  C069  F056         	movff	SsetNovaTecla@tecla,_novaTecla
  2057  000DB0  0012               	return		;funcret
  2058  000DB2                     __end_of_SsetNovaTecla:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _MsetNovaTecla *****************
  2062 ;; Defined at:
  2063 ;;		line 19 in file "Menu.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  tecla           1    wreg     unsigned char 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  tecla           1    5[COMRAM] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1
  2077 ;;      Params:         0       0       0
  2078 ;;      Locals:         1       0       0
  2079 ;;      Temps:          0       0       0
  2080 ;;      Totals:         1       0       0
  2081 ;;Total ram usage:        1 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 2
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_TeTeclat
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text12
  2092  000DB2                     __ptext12:
  2093                           	callstack 0
  2094  000DB2                     _MsetNovaTecla:
  2095                           	callstack 27
  2096                           
  2097                           ;incstack = 0
  2098                           ;MsetNovaTecla@tecla stored from wreg
  2099  000DB2  6E69               	movwf	MsetNovaTecla@tecla^0,c
  2100                           
  2101                           ;Menu.c: 20:     NovaTecla = tecla;
  2102  000DB4  C069  F053         	movff	MsetNovaTecla@tecla,_NovaTecla
  2103  000DB8  0012               	return		;funcret
  2104  000DBA                     __end_of_MsetNovaTecla:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _TeInit *****************
  2108 ;; Defined at:
  2109 ;;		line 18 in file "TeTeclat.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1
  2123 ;;      Params:         0       0       0
  2124 ;;      Locals:         0       0       0
  2125 ;;      Temps:          0       0       0
  2126 ;;      Totals:         0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 3
  2130 ;; This function calls:
  2131 ;;		_TiGetTimer
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text13
  2138  000DBA                     __ptext13:
  2139                           	callstack 0
  2140  000DBA                     _TeInit:
  2141                           	callstack 27
  2142                           
  2143                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  2144                           
  2145                           ;incstack = 0
  2146  000DBA  ECC2  F005         	call	_TiGetTimer	;wreg free
  2147  000DBE  6E40               	movwf	_tiTeclat^0,c
  2148  000DC0  0012               	return		;funcret
  2149  000DC2                     __end_of_TeInit:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _Sinit *****************
  2153 ;; Defined at:
  2154 ;;		line 16 in file "Ssms.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1
  2168 ;;      Params:         0       0       0
  2169 ;;      Locals:         0       0       0
  2170 ;;      Temps:          0       0       0
  2171 ;;      Totals:         0       0       0
  2172 ;;Total ram usage:        0 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 3
  2175 ;; This function calls:
  2176 ;;		_TiGetTimer
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text14
  2183  000DC2                     __ptext14:
  2184                           	callstack 0
  2185  000DC2                     _Sinit:
  2186                           	callstack 27
  2187                           
  2188                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  2189                           
  2190                           ;incstack = 0
  2191  000DC2  ECC2  F005         	call	_TiGetTimer	;wreg free
  2192  000DC6  6E55               	movwf	_timerSMS^0,c
  2193  000DC8  0012               	return		;funcret
  2194  000DCA                     __end_of_Sinit:
  2195                           	callstack 0
  2196                           
  2197 ;; *************** function _SMotor *****************
  2198 ;; Defined at:
  2199 ;;		line 21 in file "Ssms.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1
  2213 ;;      Params:         0       0       0
  2214 ;;      Locals:         0       0       0
  2215 ;;      Temps:          2       0       0
  2216 ;;      Totals:         2       0       0
  2217 ;;Total ram usage:        2 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 3
  2220 ;; This function calls:
  2221 ;;		_MNovaLletra
  2222 ;;		_TiGetTics
  2223 ;;		_TiResetTics
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text15
  2230  00041C                     __ptext15:
  2231                           	callstack 0
  2232  00041C                     _SMotor:
  2233                           	callstack 27
  2234                           
  2235                           ;Ssms.c: 22:  static char state = 0;;Ssms.c: 23:  switch(state) {
  2236                           
  2237                           ;incstack = 0
  2238  00041C  D0B7               	goto	l2257
  2239  00041E                     l2129:
  2240                           
  2241                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  2242  00041E  2856               	incf	_novaTecla^0,w,c
  2243  000420  A4D8               	btfss	status,2,c
  2244  000422  A478               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2245  000424  D006               	goto	l2137
  2246                           
  2247                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  2248  000426  5055               	movf	_timerSMS^0,w,c
  2249  000428  ECB9  F006         	call	_TiResetTics
  2250                           
  2251                           ;Ssms.c: 27:     state = 3;
  2252  00042C  0E03               	movlw	3
  2253  00042E  6E41               	movwf	SMotor@state^0,c
  2254                           
  2255                           ;Ssms.c: 28:    }
  2256  000430  0012               	return	
  2257  000432                     l2137:
  2258  000432  2856               	incf	_novaTecla^0,w,c
  2259  000434  A4D8               	btfss	status,2,c
  2260  000436  0012               	return	
  2261  000438  5055               	movf	_timerSMS^0,w,c
  2262  00043A  EC61  F006         	call	_TiGetTics
  2263  00043E  BE6A               	btfsc	(?_TiGetTics+1)^0,7,c
  2264  000440  0012               	return	
  2265  000442  0E5A               	movlw	90
  2266  000444  5C69               	subwf	?_TiGetTics^0,w,c
  2267  000446  0E02               	movlw	2
  2268  000448  586A               	subwfb	(?_TiGetTics+1)^0,w,c
  2269  00044A  A0D8               	btfss	status,0,c
  2270  00044C  0012               	return	
  2271  00044E  2857               	incf	_lletraASCII^0,w,c
  2272  000450  B4D8               	btfsc	status,2,c
  2273  000452  0012               	return	
  2274  000454  A478               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2275  000456  0012               	return	
  2276                           
  2277                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  2278  000458  5057               	movf	_lletraASCII^0,w,c
  2279  00045A  ECE5  F006         	call	_MNovaLletra
  2280                           
  2281                           ;Ssms.c: 31:     lletraASCII = -1;
  2282  00045E  6857               	setf	_lletraASCII^0,c
  2283                           
  2284                           ;Ssms.c: 32:     ultimaTecla = -1;
  2285  000460  6854               	setf	_ultimaTecla^0,c
  2286  000462  0012               	return	
  2287  000464                     l2151:
  2288                           
  2289                           ;Ssms.c: 36:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  2290  000464  5054               	movf	_ultimaTecla^0,w,c
  2291  000466  1856               	xorwf	_novaTecla^0,w,c
  2292  000468  A4D8               	btfss	status,2,c
  2293  00046A  D010               	goto	l2159
  2294  00046C  5055               	movf	_timerSMS^0,w,c
  2295  00046E  EC61  F006         	call	_TiGetTics
  2296  000472  BE6A               	btfsc	(?_TiGetTics+1)^0,7,c
  2297  000474  D006               	goto	u1470
  2298  000476  0E5A               	movlw	90
  2299  000478  5C69               	subwf	?_TiGetTics^0,w,c
  2300  00047A  0E02               	movlw	2
  2301  00047C  586A               	subwfb	(?_TiGetTics+1)^0,w,c
  2302  00047E  B0D8               	btfsc	status,0,c
  2303  000480  D005               	goto	l2159
  2304  000482                     u1470:
  2305                           
  2306                           ;Ssms.c: 37:     novaTecla = -1;
  2307  000482  6856               	setf	_novaTecla^0,c
  2308                           
  2309                           ;Ssms.c: 38:     sumaPulsacions++;
  2310  000484  2A42               	incf	_sumaPulsacions^0,f,c
  2311                           
  2312                           ;Ssms.c: 39:     lletraASCII++;
  2313  000486  2A57               	incf	_lletraASCII^0,f,c
  2314                           
  2315                           ;Ssms.c: 40:     state++;
  2316  000488  2A41               	incf	SMotor@state^0,f,c
  2317                           
  2318                           ;Ssms.c: 41:    }
  2319  00048A  0012               	return	
  2320  00048C                     l2159:
  2321  00048C  2856               	incf	_novaTecla^0,w,c
  2322  00048E  B4D8               	btfsc	status,2,c
  2323  000490  0012               	return	
  2324  000492  5054               	movf	_ultimaTecla^0,w,c
  2325  000494  1856               	xorwf	_novaTecla^0,w,c
  2326  000496  B4D8               	btfsc	status,2,c
  2327  000498  0012               	return	
  2328                           
  2329                           ;Ssms.c: 43:     MNovaLletra(lletraASCII);
  2330  00049A  5057               	movf	_lletraASCII^0,w,c
  2331  00049C  ECE5  F006         	call	_MNovaLletra
  2332                           
  2333                           ;Ssms.c: 44:     lletraASCII = lletraInici[novaTecla-2];
  2334  0004A0  5056               	movf	_novaTecla^0,w,c
  2335  0004A2  0F47               	addlw	low (_lletraInici+254)
  2336  0004A4  6ED9               	movwf	fsr2l,c
  2337  0004A6  6ADA               	clrf	fsr2h,c
  2338  0004A8  50DF               	movf	indf2,w,c
  2339  0004AA  6E57               	movwf	_lletraASCII^0,c
  2340                           
  2341                           ;Ssms.c: 45:     ultimaTecla = novaTecla;
  2342  0004AC  C056  F054         	movff	_novaTecla,_ultimaTecla
  2343                           
  2344                           ;Ssms.c: 46:     sumaPulsacions = 0;
  2345  0004B0  0E00               	movlw	0
  2346  0004B2  6E42               	movwf	_sumaPulsacions^0,c
  2347                           
  2348                           ;Ssms.c: 47:     novaTecla = -1;
  2349  0004B4  6856               	setf	_novaTecla^0,c
  2350                           
  2351                           ;Ssms.c: 48:     state--;
  2352  0004B6  0641               	decf	SMotor@state^0,f,c
  2353  0004B8  0012               	return	
  2354  0004BA                     l2175:
  2355                           
  2356                           ;Ssms.c: 52:    if (ultimaTecla != 7 && ultimaTecla != 9) {
  2357  0004BA  0E07               	movlw	7
  2358  0004BC  1854               	xorwf	_ultimaTecla^0,w,c
  2359  0004BE  B4D8               	btfsc	status,2,c
  2360  0004C0  D007               	goto	l2181
  2361  0004C2  0E09               	movlw	9
  2362  0004C4  1854               	xorwf	_ultimaTecla^0,w,c
  2363  0004C6  B4D8               	btfsc	status,2,c
  2364  0004C8  D003               	goto	l2181
  2365                           
  2366                           ;Ssms.c: 53:     state = 5;
  2367  0004CA  0E05               	movlw	5
  2368  0004CC  6E41               	movwf	SMotor@state^0,c
  2369                           
  2370                           ;Ssms.c: 54:    }
  2371  0004CE  0012               	return	
  2372  0004D0                     l2181:
  2373  0004D0  0E07               	movlw	7
  2374  0004D2  1854               	xorwf	_ultimaTecla^0,w,c
  2375  0004D4  B4D8               	btfsc	status,2,c
  2376  0004D6  D004               	goto	u1530
  2377  0004D8  0E09               	movlw	9
  2378  0004DA  1854               	xorwf	_ultimaTecla^0,w,c
  2379  0004DC  A4D8               	btfss	status,2,c
  2380  0004DE  0012               	return	
  2381  0004E0                     u1530:
  2382                           
  2383                           ;Ssms.c: 56:     state = 6;
  2384  0004E0  0E06               	movlw	6
  2385  0004E2  6E41               	movwf	SMotor@state^0,c
  2386  0004E4  0012               	return	
  2387  0004E6                     l2187:
  2388                           
  2389                           ;Ssms.c: 60:    if (novaTecla > 1 && novaTecla < 10) {
  2390  0004E6  5056               	movf	_novaTecla^0,w,c
  2391  0004E8  0A80               	xorlw	128
  2392  0004EA  0F7E               	addlw	-130
  2393  0004EC  A0D8               	btfss	status,0,c
  2394  0004EE  D008               	goto	l2193
  2395  0004F0  5056               	movf	_novaTecla^0,w,c
  2396  0004F2  0A80               	xorlw	128
  2397  0004F4  0F76               	addlw	-138
  2398  0004F6  B0D8               	btfsc	status,0,c
  2399  0004F8  D003               	goto	l2193
  2400                           
  2401                           ;Ssms.c: 61:     state = 1;
  2402  0004FA  0E01               	movlw	1
  2403  0004FC  6E41               	movwf	SMotor@state^0,c
  2404                           
  2405                           ;Ssms.c: 62:    }
  2406  0004FE  0012               	return	
  2407  000500                     l2193:
  2408  000500  5056               	movf	_novaTecla^0,w,c
  2409  000502  0A80               	xorlw	128
  2410  000504  0F7E               	addlw	-130
  2411  000506  B0D8               	btfsc	status,0,c
  2412  000508  D00B               	goto	l2203
  2413  00050A  2857               	incf	_lletraASCII^0,w,c
  2414  00050C  A4D8               	btfss	status,2,c
  2415  00050E  D008               	goto	l2203
  2416                           
  2417                           ;Ssms.c: 64:     MNovaLletra(novaTecla+48);
  2418  000510  5056               	movf	_novaTecla^0,w,c
  2419  000512  0F30               	addlw	48
  2420  000514  ECE5  F006         	call	_MNovaLletra
  2421  000518                     l2199:
  2422                           
  2423                           ;Ssms.c: 65:     novaTecla = -1;
  2424  000518  6856               	setf	_novaTecla^0,c
  2425  00051A                     l2201:
  2426                           
  2427                           ;Ssms.c: 66:     state = 0;
  2428  00051A  0E00               	movlw	0
  2429  00051C  6E41               	movwf	SMotor@state^0,c
  2430                           
  2431                           ;Ssms.c: 67:    }
  2432  00051E  0012               	return	
  2433  000520                     l2203:
  2434  000520  5056               	movf	_novaTecla^0,w,c
  2435  000522  0A80               	xorlw	128
  2436  000524  0F7E               	addlw	-130
  2437  000526  B0D8               	btfsc	status,0,c
  2438  000528  0012               	return	
  2439  00052A  2857               	incf	_lletraASCII^0,w,c
  2440  00052C  B4D8               	btfsc	status,2,c
  2441  00052E  0012               	return	
  2442                           
  2443                           ;Ssms.c: 69:     MNovaLletra(lletraASCII);
  2444  000530  5057               	movf	_lletraASCII^0,w,c
  2445  000532  ECE5  F006         	call	_MNovaLletra
  2446                           
  2447                           ;Ssms.c: 70:     lletraASCII = -1;
  2448  000536  6857               	setf	_lletraASCII^0,c
  2449                           
  2450                           ;Ssms.c: 71:     state++;
  2451  000538  2A41               	incf	SMotor@state^0,f,c
  2452  00053A  0012               	return	
  2453  00053C                     l2213:
  2454                           
  2455                           ;Ssms.c: 75:    MNovaLletra(novaTecla+48);
  2456  00053C  5056               	movf	_novaTecla^0,w,c
  2457  00053E  0F30               	addlw	48
  2458  000540  ECE5  F006         	call	_MNovaLletra
  2459  000544  D7E9               	goto	l2199
  2460  000546                     l2219:
  2461                           
  2462                           ;Ssms.c: 80:    if (sumaPulsacions == 4) {
  2463  000546  0E04               	movlw	4
  2464  000548  1842               	xorwf	_sumaPulsacions^0,w,c
  2465  00054A  A4D8               	btfss	status,2,c
  2466  00054C  D009               	goto	l2227
  2467  00054E                     u1600:
  2468                           
  2469                           ;Ssms.c: 81:     lletraASCII = lletraInici[ultimaTecla-2];
  2470  00054E  5054               	movf	_ultimaTecla^0,w,c
  2471  000550  0F47               	addlw	low (_lletraInici+254)
  2472  000552  6ED9               	movwf	fsr2l,c
  2473  000554  6ADA               	clrf	fsr2h,c
  2474  000556  50DF               	movf	indf2,w,c
  2475  000558  6E57               	movwf	_lletraASCII^0,c
  2476                           
  2477                           ;Ssms.c: 82:     sumaPulsacions = 0;
  2478  00055A  0E00               	movlw	0
  2479  00055C  6E42               	movwf	_sumaPulsacions^0,c
  2480  00055E  D7DD               	goto	l2201
  2481  000560                     l2227:
  2482  000560  0E03               	movlw	3
  2483  000562  1842               	xorwf	_sumaPulsacions^0,w,c
  2484  000564  A4D8               	btfss	status,2,c
  2485  000566  D004               	goto	l2233
  2486  000568                     u1610:
  2487                           
  2488                           ;Ssms.c: 86:     lletraASCII = ultimaTecla+48;
  2489  000568  5054               	movf	_ultimaTecla^0,w,c
  2490  00056A  0F30               	addlw	48
  2491  00056C  6E57               	movwf	_lletraASCII^0,c
  2492  00056E  D7D5               	goto	l2201
  2493  000570                     l2233:
  2494  000570  0E03               	movlw	3
  2495  000572  6042               	cpfslt	_sumaPulsacions^0,c
  2496  000574  0012               	return	
  2497  000576  D7D1               	goto	l2201
  2498  000578                     l2237:
  2499                           
  2500                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  2501  000578  0E04               	movlw	4
  2502  00057A  1842               	xorwf	_sumaPulsacions^0,w,c
  2503  00057C  B4D8               	btfsc	status,2,c
  2504  00057E  D7F4               	goto	u1610
  2505  000580  0E05               	movlw	5
  2506  000582  1842               	xorwf	_sumaPulsacions^0,w,c
  2507  000584  B4D8               	btfsc	status,2,c
  2508  000586  D7E3               	goto	u1600
  2509  000588  0E04               	movlw	4
  2510  00058A  D7F3               	goto	L3
  2511  00058C                     l2257:
  2512  00058C  5041               	movf	SMotor@state^0,w,c
  2513  00058E  6E70               	movwf	??_SMotor^0,c
  2514  000590  6A71               	clrf	(??_SMotor+1)^0,c
  2515                           
  2516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2517                           ; Switch size 1, requested type "simple"
  2518                           ; Number of cases is 1, Range of values is 0 to 0
  2519                           ; switch strategies available:
  2520                           ; Name         Instructions Cycles
  2521                           ; simple_byte            4     3 (average)
  2522                           ;	Chosen strategy is simple_byte
  2523  000592  5071               	movf	(??_SMotor+1)^0,w,c
  2524  000594  0A00               	xorlw	0	; case 0
  2525  000596  A4D8               	btfss	status,2,c
  2526  000598  0012               	return	
  2527                           
  2528                           ; Switch size 1, requested type "simple"
  2529                           ; Number of cases is 7, Range of values is 0 to 6
  2530                           ; switch strategies available:
  2531                           ; Name         Instructions Cycles
  2532                           ; simple_byte           22    12 (average)
  2533                           ;	Chosen strategy is simple_byte
  2534  00059A  5070               	movf	??_SMotor^0,w,c
  2535  00059C  0A00               	xorlw	0	; case 0
  2536  00059E  B4D8               	btfsc	status,2,c
  2537  0005A0  D73E               	goto	l2129
  2538  0005A2  0A01               	xorlw	1	; case 1
  2539  0005A4  B4D8               	btfsc	status,2,c
  2540  0005A6  D75E               	goto	l2151
  2541  0005A8  0A03               	xorlw	3	; case 2
  2542  0005AA  B4D8               	btfsc	status,2,c
  2543  0005AC  D786               	goto	l2175
  2544  0005AE  0A01               	xorlw	1	; case 3
  2545  0005B0  B4D8               	btfsc	status,2,c
  2546  0005B2  D799               	goto	l2187
  2547  0005B4  0A07               	xorlw	7	; case 4
  2548  0005B6  B4D8               	btfsc	status,2,c
  2549  0005B8  D7C1               	goto	l2213
  2550  0005BA  0A01               	xorlw	1	; case 5
  2551  0005BC  B4D8               	btfsc	status,2,c
  2552  0005BE  D7C3               	goto	l2219
  2553  0005C0  0A03               	xorlw	3	; case 6
  2554  0005C2  A4D8               	btfss	status,2,c
  2555  0005C4  0012               	return	
  2556  0005C6  D7D8               	goto	l2237
  2557  0005C8                     __end_of_SMotor:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _MNovaLletra *****************
  2561 ;; Defined at:
  2562 ;;		line 23 in file "Menu.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  lletra          1    wreg     unsigned char 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  lletra          1    5[COMRAM] unsigned char 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1
  2576 ;;      Params:         0       0       0
  2577 ;;      Locals:         1       0       0
  2578 ;;      Temps:          0       0       0
  2579 ;;      Totals:         1       0       0
  2580 ;;Total ram usage:        1 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; Hardware stack levels required when called: 2
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_SMotor
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text16
  2591  000DCA                     __ptext16:
  2592                           	callstack 0
  2593  000DCA                     _MNovaLletra:
  2594                           	callstack 27
  2595                           
  2596                           ;incstack = 0
  2597                           ;MNovaLletra@lletra stored from wreg
  2598  000DCA  6E69               	movwf	MNovaLletra@lletra^0,c
  2599                           
  2600                           ;Menu.c: 24:     novaLletra = lletra;
  2601  000DCC  C069  F052         	movff	MNovaLletra@lletra,_novaLletra
  2602  000DD0  0012               	return		;funcret
  2603  000DD2                     __end_of_MNovaLletra:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function _Minit *****************
  2607 ;; Defined at:
  2608 ;;		line 16 in file "Menu.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1
  2622 ;;      Params:         0       0       0
  2623 ;;      Locals:         0       0       0
  2624 ;;      Temps:          0       0       0
  2625 ;;      Totals:         0       0       0
  2626 ;;Total ram usage:        0 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 3
  2629 ;; This function calls:
  2630 ;;		_TiGetTimer
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text17
  2637  000DD2                     __ptext17:
  2638                           	callstack 0
  2639  000DD2                     _Minit:
  2640                           	callstack 27
  2641                           
  2642                           ;Menu.c: 17:     timerMenu = TiGetTimer();
  2643                           
  2644                           ;incstack = 0
  2645  000DD2  ECC2  F005         	call	_TiGetTimer	;wreg free
  2646  000DD6  6E3A               	movwf	_timerMenu^0,c
  2647  000DD8  0012               	return		;funcret
  2648  000DDA                     __end_of_Minit:
  2649                           	callstack 0
  2650                           
  2651 ;; *************** function _LcLCD *****************
  2652 ;; Defined at:
  2653 ;;		line 254 in file "LcTLCD.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1
  2667 ;;      Params:         0       0       0
  2668 ;;      Locals:         0       0       0
  2669 ;;      Temps:          0       0       0
  2670 ;;      Totals:         0       0       0
  2671 ;;Total ram usage:        0 bytes
  2672 ;; Hardware stack levels used: 1
  2673 ;; Hardware stack levels required when called: 6
  2674 ;; This function calls:
  2675 ;;		_LcPutChar
  2676 ;; This function is called by:
  2677 ;;		_main
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text18
  2682  000C92                     __ptext18:
  2683                           	callstack 0
  2684  000C92                     _LcLCD:
  2685                           	callstack 24
  2686                           
  2687                           ;LcTLCD.c: 255:     if(nou_s == 1){
  2688                           
  2689                           ;incstack = 0
  2690  000C92  A678               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  2691  000C94  0012               	return	
  2692                           
  2693                           ;LcTLCD.c: 256:         LcPutChar(*s_ptr);
  2694  000C96  C043  FFF6         	movff	_s_ptr,tblptrl
  2695  000C9A                     	if	1	;There is more than 1 active tblptr byte
  2696  000C9A  0E02               	movlw	high __smallconst
  2697  000C9C  6EF7               	movwf	tblptrh,c
  2698  000C9E                     	endif
  2699  000C9E                     	if	0	;tblptru may be non-zero
  2700  000C9E                     	endif
  2701  000C9E                     	if	0	;tblptru may be non-zero
  2702  000C9E                     	endif
  2703  000C9E  0008               	tblrd		*
  2704  000CA0  50F5               	movf	tablat,w,c
  2705  000CA2  EC3E  F005         	call	_LcPutChar
  2706                           
  2707                           ;LcTLCD.c: 257:         s_ptr++;
  2708  000CA6  2A43               	incf	_s_ptr^0,f,c
  2709                           
  2710                           ;LcTLCD.c: 258:         if(*s_ptr == '\0'){
  2711  000CA8  C043  FFF6         	movff	_s_ptr,tblptrl
  2712  000CAC                     	if	1	;There is more than 1 active tblptr byte
  2713  000CAC  0E02               	movlw	high __smallconst
  2714  000CAE  6EF7               	movwf	tblptrh,c
  2715  000CB0                     	endif
  2716  000CB0                     	if	0	;tblptru may be non-zero
  2717  000CB0                     	endif
  2718  000CB0                     	if	0	;tblptru may be non-zero
  2719  000CB0                     	endif
  2720  000CB0  0008               	tblrd		*
  2721  000CB2  50F5               	movf	tablat,w,c
  2722  000CB4  0900               	iorlw	0
  2723  000CB6  A4D8               	btfss	status,2,c
  2724  000CB8  0012               	return	
  2725                           
  2726                           ;LcTLCD.c: 259:             nou_s = 0;
  2727  000CBA  9678               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  2728                           
  2729                           ;LcTLCD.c: 260:             s_ptr=0;
  2730  000CBC  0E00               	movlw	0
  2731  000CBE  6E43               	movwf	_s_ptr^0,c
  2732  000CC0  0012               	return		;funcret
  2733  000CC2                     __end_of_LcLCD:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _LcPutChar *****************
  2737 ;; Defined at:
  2738 ;;		line 132 in file "LcTLCD.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  c               1    wreg     unsigned char 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  c               1   19[COMRAM] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1
  2752 ;;      Params:         0       0       0
  2753 ;;      Locals:         1       0       0
  2754 ;;      Temps:          0       0       0
  2755 ;;      Totals:         1       0       0
  2756 ;;Total ram usage:        1 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 5
  2759 ;; This function calls:
  2760 ;;		_CantaData
  2761 ;;		_LcGotoXY
  2762 ;;		_WaitForBusy
  2763 ;; This function is called by:
  2764 ;;		_LcLCD
  2765 ;;		_menu
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text19
  2770  000A7C                     __ptext19:
  2771                           	callstack 0
  2772  000A7C                     _LcPutChar:
  2773                           	callstack 24
  2774                           
  2775                           ;incstack = 0
  2776                           ;LcPutChar@c stored from wreg
  2777  000A7C  6E77               	movwf	LcPutChar@c^0,c
  2778                           
  2779                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  2780  000A7E  EC67  F005         	call	_WaitForBusy	;wreg free
  2781  000A82  5077               	movf	LcPutChar@c^0,w,c
  2782  000A84  EC17  F006         	call	_CantaData
  2783                           
  2784                           ;LcTLCD.c: 136:  ++ColumnAct;
  2785  000A88  2A45               	incf	_ColumnAct^0,f,c
  2786                           
  2787                           ;LcTLCD.c: 138:  if (Rows == 2) {
  2788  000A8A  0E02               	movlw	2
  2789  000A8C  1848               	xorwf	_Rows^0,w,c
  2790  000A8E  A4D8               	btfss	status,2,c
  2791  000A90  D010               	goto	l2053
  2792                           
  2793                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  2794  000A92  0E27               	movlw	39
  2795  000A94  6445               	cpfsgt	_ColumnAct^0,c
  2796  000A96  D00D               	goto	l2053
  2797                           
  2798                           ;LcTLCD.c: 140:    ColumnAct = 0;
  2799  000A98  0E00               	movlw	0
  2800  000A9A  6E45               	movwf	_ColumnAct^0,c
  2801                           
  2802                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  2803  000A9C  2A46               	incf	_RowAct^0,f,c
  2804  000A9E  0E01               	movlw	1
  2805  000AA0  6446               	cpfsgt	_RowAct^0,c
  2806  000AA2  D002               	goto	l2051
  2807  000AA4  0E00               	movlw	0
  2808  000AA6  6E46               	movwf	_RowAct^0,c
  2809  000AA8                     l2051:
  2810                           
  2811                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  2812  000AA8  C046  F071         	movff	_RowAct,LcGotoXY@Row
  2813  000AAC  5045               	movf	_ColumnAct^0,w,c
  2814  000AAE  ECA5  F005         	call	_LcGotoXY
  2815  000AB2                     l2053:
  2816                           
  2817                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  2818  000AB2  0446               	decf	_RowAct^0,w,c
  2819  000AB4  A4D8               	btfss	status,2,c
  2820  000AB6  0012               	return	
  2821                           
  2822                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  2823  000AB8  0E27               	movlw	39
  2824  000ABA  6445               	cpfsgt	_ColumnAct^0,c
  2825  000ABC  D002               	goto	l2059
  2826  000ABE  0E00               	movlw	0
  2827  000AC0  6E45               	movwf	_ColumnAct^0,c
  2828  000AC2                     l2059:
  2829                           
  2830                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  2831  000AC2  C046  F071         	movff	_RowAct,LcGotoXY@Row
  2832  000AC6  5045               	movf	_ColumnAct^0,w,c
  2833  000AC8  ECA5  F005         	call	_LcGotoXY
  2834  000ACC  0012               	return		;funcret
  2835  000ACE                     __end_of_LcPutChar:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _LcGotoXY *****************
  2839 ;; Defined at:
  2840 ;;		line 104 in file "LcTLCD.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  Column          1    wreg     unsigned char 
  2843 ;;  Row             1   13[COMRAM] unsigned char 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  Column          1   18[COMRAM] unsigned char 
  2846 ;;  Fisics          2   14[COMRAM] int 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1
  2856 ;;      Params:         1       0       0
  2857 ;;      Locals:         5       0       0
  2858 ;;      Temps:          0       0       0
  2859 ;;      Totals:         6       0       0
  2860 ;;Total ram usage:        6 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 4
  2863 ;; This function calls:
  2864 ;;		_CantaIR
  2865 ;;		_WaitForBusy
  2866 ;; This function is called by:
  2867 ;;		_LcClear
  2868 ;;		_LcPutChar
  2869 ;;		_menu
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text20
  2874  000B4A                     __ptext20:
  2875                           	callstack 0
  2876  000B4A                     _LcGotoXY:
  2877                           	callstack 24
  2878                           
  2879                           ;incstack = 0
  2880                           ;LcGotoXY@Column stored from wreg
  2881  000B4A  6E76               	movwf	LcGotoXY@Column^0,c
  2882                           
  2883                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  2884  000B4C  5071               	movf	LcGotoXY@Row^0,w,c
  2885  000B4E  B4D8               	btfsc	status,2,c
  2886  000B50  D004               	goto	l1993
  2887  000B52  0E00               	movlw	0
  2888  000B54  6E75               	movwf	(_LcGotoXY$342+1)^0,c
  2889  000B56  0E40               	movlw	64
  2890  000B58  D003               	goto	L4
  2891  000B5A                     l1993:
  2892  000B5A  0E00               	movlw	0
  2893  000B5C  6E75               	movwf	(_LcGotoXY$342+1)^0,c
  2894  000B5E  0E00               	movlw	0
  2895  000B60                     L4:
  2896  000B60  6E74               	movwf	_LcGotoXY$342^0,c
  2897  000B62  5076               	movf	LcGotoXY@Column^0,w,c
  2898  000B64  2474               	addwf	_LcGotoXY$342^0,w,c
  2899  000B66  6E72               	movwf	LcGotoXY@Fisics^0,c
  2900  000B68  0E00               	movlw	0
  2901  000B6A  2075               	addwfc	(_LcGotoXY$342+1)^0,w,c
  2902  000B6C  6E73               	movwf	(LcGotoXY@Fisics+1)^0,c
  2903                           
  2904                           ;LcTLCD.c: 125:  WaitForBusy();
  2905  000B6E  EC67  F005         	call	_WaitForBusy	;wreg free
  2906                           
  2907                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  2908  000B72  5072               	movf	LcGotoXY@Fisics^0,w,c
  2909  000B74  0980               	iorlw	128
  2910  000B76  EC30  F006         	call	_CantaIR
  2911                           
  2912                           ;LcTLCD.c: 128:  RowAct = Row;
  2913  000B7A  C071  F046         	movff	LcGotoXY@Row,_RowAct
  2914                           
  2915                           ;LcTLCD.c: 129:  ColumnAct = Column;
  2916  000B7E  C076  F045         	movff	LcGotoXY@Column,_ColumnAct
  2917  000B82  0012               	return		;funcret
  2918  000B84                     __end_of_LcGotoXY:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _CantaData *****************
  2922 ;; Defined at:
  2923 ;;		line 194 in file "LcTLCD.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  Data            1    wreg     unsigned char 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  Data            1    7[COMRAM] unsigned char 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1
  2937 ;;      Params:         0       0       0
  2938 ;;      Locals:         1       0       0
  2939 ;;      Temps:          0       0       0
  2940 ;;      Totals:         1       0       0
  2941 ;;Total ram usage:        1 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 3
  2944 ;; This function calls:
  2945 ;;		_CantaPartAlta
  2946 ;;		_CantaPartBaixa
  2947 ;; This function is called by:
  2948 ;;		_LcPutChar
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text21
  2953  000C2E                     __ptext21:
  2954                           	callstack 0
  2955  000C2E                     _CantaData:
  2956                           	callstack 25
  2957                           
  2958                           ;incstack = 0
  2959                           ;CantaData@Data stored from wreg
  2960  000C2E  6E6B               	movwf	CantaData@Data^0,c
  2961                           
  2962                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  2963  000C30  9694               	bcf	148,3,c	;volatile
  2964  000C32  9494               	bcf	148,2,c	;volatile
  2965  000C34  9294               	bcf	148,1,c	;volatile
  2966  000C36  9094               	bcf	148,0,c	;volatile
  2967                           
  2968                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  2969  000C38  8A8B               	bsf	139,5,c	;volatile
  2970                           
  2971                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  2972  000C3A  9E8C               	bcf	140,7,c	;volatile
  2973                           
  2974                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  2975  000C3C  888B               	bsf	139,4,c	;volatile
  2976                           
  2977                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  2978  000C3E  506B               	movf	CantaData@Data^0,w,c
  2979  000C40  ECDD  F004         	call	_CantaPartAlta
  2980                           
  2981                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  2982  000C44  888B               	bsf	139,4,c	;volatile
  2983                           
  2984                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  2985  000C46  988B               	bcf	139,4,c	;volatile
  2986                           
  2987                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  2988  000C48  988B               	bcf	139,4,c	;volatile
  2989                           
  2990                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  2991  000C4A  888B               	bsf	139,4,c	;volatile
  2992                           
  2993                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  2994  000C4C  506B               	movf	CantaData@Data^0,w,c
  2995  000C4E  ECA9  F004         	call	_CantaPartBaixa
  2996                           
  2997                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  2998  000C52  888B               	bsf	139,4,c	;volatile
  2999                           
  3000                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  3001  000C54  988B               	bcf	139,4,c	;volatile
  3002                           
  3003                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3004  000C56  8694               	bsf	148,3,c	;volatile
  3005  000C58  8494               	bsf	148,2,c	;volatile
  3006  000C5A  8294               	bsf	148,1,c	;volatile
  3007  000C5C  8094               	bsf	148,0,c	;volatile
  3008  000C5E  0012               	return		;funcret
  3009  000C60                     __end_of_CantaData:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _LcInit *****************
  3013 ;; Defined at:
  3014 ;;		line 41 in file "LcTLCD.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  rows            1    wreg     unsigned char 
  3017 ;;  columns         1   16[COMRAM] unsigned char 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  rows            1   17[COMRAM] unsigned char 
  3020 ;;  i               2   18[COMRAM] int 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1
  3030 ;;      Params:         1       0       0
  3031 ;;      Locals:         3       0       0
  3032 ;;      Temps:          0       0       0
  3033 ;;      Totals:         4       0       0
  3034 ;;Total ram usage:        4 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 5
  3037 ;; This function calls:
  3038 ;;		_CantaIR
  3039 ;;		_EscriuPrimeraOrdre
  3040 ;;		_Espera
  3041 ;;		_LcCursorOff
  3042 ;;		_TiGetTimer
  3043 ;;		_WaitForBusy
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text22
  3050  00072C                     __ptext22:
  3051                           	callstack 0
  3052  00072C                     _LcInit:
  3053                           	callstack 25
  3054                           
  3055                           ;incstack = 0
  3056                           ;LcInit@rows stored from wreg
  3057  00072C  6E75               	movwf	LcInit@rows^0,c
  3058                           
  3059                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  3060  00072E  ECC2  F005         	call	_TiGetTimer	;wreg free
  3061  000732  6E44               	movwf	_Timer^0,c
  3062                           
  3063                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  3064  000734  C075  F048         	movff	LcInit@rows,_Rows
  3065  000738  C074  F047         	movff	LcInit@columns,_Columns
  3066                           
  3067                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  3068  00073C  0E00               	movlw	0
  3069  00073E  6E45               	movwf	_ColumnAct^0,c
  3070  000740  C045  F046         	movff	_ColumnAct,_RowAct
  3071                           
  3072                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  3073  000744  9894               	bcf	148,4,c	;volatile
  3074  000746  9E95               	bcf	149,7,c	;volatile
  3075  000748  9A94               	bcf	148,5,c	;volatile
  3076                           
  3077                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  3078  00074A  0E00               	movlw	0
  3079  00074C  6E77               	movwf	(LcInit@i+1)^0,c
  3080  00074E  0E00               	movlw	0
  3081  000750  6E76               	movwf	LcInit@i^0,c
  3082  000752                     l2081:
  3083                           
  3084                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  3085  000752  0E00               	movlw	0
  3086  000754  6E71               	movwf	(Espera@ms+1)^0,c
  3087  000756  0E64               	movlw	100
  3088  000758  6E70               	movwf	Espera@ms^0,c
  3089  00075A  5044               	movf	_Timer^0,w,c
  3090  00075C  EC89  F006         	call	_Espera
  3091                           
  3092                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  3093  000760  0E03               	movlw	3
  3094  000762  EC6C  F004         	call	_EscriuPrimeraOrdre
  3095                           
  3096                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  3097  000766  0E00               	movlw	0
  3098  000768  6E71               	movwf	(Espera@ms+1)^0,c
  3099  00076A  0E05               	movlw	5
  3100  00076C  6E70               	movwf	Espera@ms^0,c
  3101  00076E  5044               	movf	_Timer^0,w,c
  3102  000770  EC89  F006         	call	_Espera
  3103                           
  3104                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  3105  000774  0E03               	movlw	3
  3106  000776  EC6C  F004         	call	_EscriuPrimeraOrdre
  3107                           
  3108                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  3109  00077A  0E00               	movlw	0
  3110  00077C  6E71               	movwf	(Espera@ms+1)^0,c
  3111  00077E  0E01               	movlw	1
  3112  000780  6E70               	movwf	Espera@ms^0,c
  3113  000782  5044               	movf	_Timer^0,w,c
  3114  000784  EC89  F006         	call	_Espera
  3115                           
  3116                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  3117  000788  0E03               	movlw	3
  3118  00078A  EC6C  F004         	call	_EscriuPrimeraOrdre
  3119                           
  3120                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  3121  00078E  0E00               	movlw	0
  3122  000790  6E71               	movwf	(Espera@ms+1)^0,c
  3123  000792  0E01               	movlw	1
  3124  000794  6E70               	movwf	Espera@ms^0,c
  3125  000796  5044               	movf	_Timer^0,w,c
  3126  000798  EC89  F006         	call	_Espera
  3127                           
  3128                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  3129  00079C  0E02               	movlw	2
  3130  00079E  EC6C  F004         	call	_EscriuPrimeraOrdre
  3131                           
  3132                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  3133  0007A2  0E00               	movlw	0
  3134  0007A4  6E71               	movwf	(Espera@ms+1)^0,c
  3135  0007A6  0E04               	movlw	4
  3136  0007A8  6E70               	movwf	Espera@ms^0,c
  3137  0007AA  5044               	movf	_Timer^0,w,c
  3138  0007AC  EC89  F006         	call	_Espera
  3139                           
  3140                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  3141  0007B0  0E28               	movlw	40
  3142  0007B2  EC30  F006         	call	_CantaIR
  3143                           
  3144                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  3145  0007B6  EC67  F005         	call	_WaitForBusy	;wreg free
  3146  0007BA  0E08               	movlw	8
  3147  0007BC  EC30  F006         	call	_CantaIR
  3148                           
  3149                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  3150  0007C0  EC67  F005         	call	_WaitForBusy	;wreg free
  3151  0007C4  0E01               	movlw	1
  3152  0007C6  EC30  F006         	call	_CantaIR
  3153                           
  3154                           ;LcTLCD.c: 71:   Espera(Timer,3);
  3155  0007CA  0E00               	movlw	0
  3156  0007CC  6E71               	movwf	(Espera@ms+1)^0,c
  3157  0007CE  0E03               	movlw	3
  3158  0007D0  6E70               	movwf	Espera@ms^0,c
  3159  0007D2  5044               	movf	_Timer^0,w,c
  3160  0007D4  EC89  F006         	call	_Espera
  3161                           
  3162                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  3163  0007D8  EC67  F005         	call	_WaitForBusy	;wreg free
  3164  0007DC  0E06               	movlw	6
  3165  0007DE  EC30  F006         	call	_CantaIR
  3166                           
  3167                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  3168  0007E2  EC67  F005         	call	_WaitForBusy	;wreg free
  3169  0007E6  0E0F               	movlw	15
  3170  0007E8  EC30  F006         	call	_CantaIR
  3171                           
  3172                           ;LcTLCD.c: 74:  }
  3173  0007EC  4A76               	infsnz	LcInit@i^0,f,c
  3174  0007EE  2A77               	incf	(LcInit@i+1)^0,f,c
  3175  0007F0  BE77               	btfsc	(LcInit@i+1)^0,7,c
  3176  0007F2  D7AF               	goto	l2081
  3177  0007F4  5077               	movf	(LcInit@i+1)^0,w,c
  3178  0007F6  E104               	bnz	u1370
  3179  0007F8  0E02               	movlw	2
  3180  0007FA  5C76               	subwf	LcInit@i^0,w,c
  3181  0007FC  A0D8               	btfss	status,0,c
  3182  0007FE  D7A9               	goto	l2081
  3183  000800                     u1370:
  3184                           
  3185                           ;LcTLCD.c: 79:     LcCursorOff();
  3186  000800  ECCB  F006         	call	_LcCursorOff	;wreg free
  3187  000804  0012               	return		;funcret
  3188  000806                     __end_of_LcInit:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _TiGetTimer *****************
  3192 ;; Defined at:
  3193 ;;		line 70 in file "TiTTimer.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      unsigned char 
  3200 ;; Registers used:
  3201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1
  3207 ;;      Params:         0       0       0
  3208 ;;      Locals:         0       0       0
  3209 ;;      Temps:          1       0       0
  3210 ;;      Totals:         1       0       0
  3211 ;;Total ram usage:        1 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; Hardware stack levels required when called: 2
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_LcInit
  3218 ;;		_Sinit
  3219 ;;		_TeInit
  3220 ;;		_Minit
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text23
  3225  000B84                     __ptext23:
  3226                           	callstack 0
  3227  000B84                     _TiGetTimer:
  3228                           	callstack 27
  3229                           
  3230                           ;TiTTimer.c: 74:     counter=0;
  3231                           
  3232                           ;incstack = 0
  3233  000B84  0E00               	movlw	0
  3234  000B86  6E3C               	movwf	_counter^0,c
  3235                           
  3236                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  3237  000B88  D007               	goto	l1263
  3238  000B8A                     l1255:
  3239                           
  3240                           ;TiTTimer.c: 76:         counter++;
  3241  000B8A  2A3C               	incf	_counter^0,f,c
  3242                           
  3243                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  3244  000B8C  0E08               	movlw	8
  3245  000B8E  183C               	xorwf	_counter^0,w,c
  3246  000B90  A4D8               	btfss	status,2,c
  3247  000B92  D002               	goto	l1263
  3248  000B94  0EFF               	movlw	255
  3249  000B96  0012               	return	
  3250  000B98                     l1263:
  3251                           
  3252                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  3253  000B98  503C               	movf	_counter^0,w,c
  3254  000B9A  0D03               	mullw	3
  3255  000B9C  50F3               	movf	243,w,c
  3256  000B9E  0F03               	addlw	low (_s_Timers+2)
  3257  000BA0  6ED9               	movwf	fsr2l,c
  3258  000BA2  6ADA               	clrf	fsr2h,c
  3259  000BA4  04DE               	decf	postinc2,w,c
  3260  000BA6  B4D8               	btfsc	status,2,c
  3261  000BA8  D7F0               	goto	l1255
  3262                           
  3263                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  3264  000BAA  503C               	movf	_counter^0,w,c
  3265  000BAC  0D03               	mullw	3
  3266  000BAE  50F3               	movf	243,w,c
  3267  000BB0  0F03               	addlw	low (_s_Timers+2)
  3268  000BB2  6ED9               	movwf	fsr2l,c
  3269  000BB4  6ADA               	clrf	fsr2h,c
  3270  000BB6  0E01               	movlw	1
  3271  000BB8  6EDF               	movwf	indf2,c
  3272                           
  3273                           ;TiTTimer.c: 80:     return (counter);
  3274  000BBA  503C               	movf	_counter^0,w,c
  3275  000BBC  0012               	return		;funcret
  3276  000BBE                     __end_of_TiGetTimer:
  3277                           	callstack 0
  3278                           
  3279 ;; *************** function _LcCursorOff *****************
  3280 ;; Defined at:
  3281 ;;		line 97 in file "LcTLCD.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1
  3295 ;;      Params:         0       0       0
  3296 ;;      Locals:         0       0       0
  3297 ;;      Temps:          0       0       0
  3298 ;;      Totals:         0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used: 1
  3301 ;; Hardware stack levels required when called: 4
  3302 ;; This function calls:
  3303 ;;		_CantaIR
  3304 ;;		_WaitForBusy
  3305 ;; This function is called by:
  3306 ;;		_LcInit
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text24
  3311  000D96                     __ptext24:
  3312                           	callstack 0
  3313  000D96                     _LcCursorOff:
  3314                           	callstack 25
  3315                           
  3316                           ;LcTLCD.c: 100:  WaitForBusy();
  3317                           
  3318                           ;incstack = 0
  3319  000D96  EC67  F005         	call	_WaitForBusy	;wreg free
  3320                           
  3321                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  3322  000D9A  0E0C               	movlw	12
  3323  000D9C  EC30  F006         	call	_CantaIR
  3324  000DA0  0012               	return		;funcret
  3325  000DA2                     __end_of_LcCursorOff:
  3326                           	callstack 0
  3327                           
  3328 ;; *************** function _WaitForBusy *****************
  3329 ;; Defined at:
  3330 ;;		line 210 in file "LcTLCD.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  Busy            1   12[COMRAM] unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1
  3344 ;;      Params:         0       0       0
  3345 ;;      Locals:         1       0       0
  3346 ;;      Temps:          0       0       0
  3347 ;;      Totals:         1       0       0
  3348 ;;Total ram usage:        1 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 3
  3351 ;; This function calls:
  3352 ;;		_TiGetTics
  3353 ;;		_TiResetTics
  3354 ;; This function is called by:
  3355 ;;		_LcInit
  3356 ;;		_LcClear
  3357 ;;		_LcCursorOff
  3358 ;;		_LcGotoXY
  3359 ;;		_LcPutChar
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text25
  3364  000ACE                     __ptext25:
  3365                           	callstack 0
  3366  000ACE                     _WaitForBusy:
  3367                           	callstack 25
  3368                           
  3369                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3370                           
  3371                           ;incstack = 0
  3372  000ACE  8694               	bsf	148,3,c	;volatile
  3373  000AD0  8494               	bsf	148,2,c	;volatile
  3374  000AD2  8294               	bsf	148,1,c	;volatile
  3375  000AD4  8094               	bsf	148,0,c	;volatile
  3376                           
  3377                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  3378  000AD6  9A8B               	bcf	139,5,c	;volatile
  3379                           
  3380                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  3381  000AD8  8E8C               	bsf	140,7,c	;volatile
  3382                           
  3383                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  3384  000ADA  5044               	movf	_Timer^0,w,c
  3385  000ADC  ECB9  F006         	call	_TiResetTics
  3386  000AE0                     l1961:
  3387                           
  3388                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  3389  000AE0  888B               	bsf	139,4,c	;volatile
  3390  000AE2  888B               	bsf	139,4,c	;volatile
  3391                           
  3392                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  3393  000AE4  0E00               	movlw	0
  3394  000AE6  B682               	btfsc	130,3,c	;volatile
  3395  000AE8  0E01               	movlw	1
  3396  000AEA  6E70               	movwf	WaitForBusy@Busy^0,c
  3397                           
  3398                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  3399  000AEC  988B               	bcf	139,4,c	;volatile
  3400                           
  3401                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  3402  000AEE  988B               	bcf	139,4,c	;volatile
  3403                           
  3404                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  3405  000AF0  888B               	bsf	139,4,c	;volatile
  3406  000AF2  888B               	bsf	139,4,c	;volatile
  3407                           
  3408                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  3409  000AF4  988B               	bcf	139,4,c	;volatile
  3410                           
  3411                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  3412  000AF6  988B               	bcf	139,4,c	;volatile
  3413                           
  3414                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  3415  000AF8  5044               	movf	_Timer^0,w,c
  3416  000AFA  EC61  F006         	call	_TiGetTics
  3417  000AFE  5069               	movf	?_TiGetTics^0,w,c
  3418  000B00  106A               	iorwf	(?_TiGetTics+1)^0,w,c
  3419  000B02  A4D8               	btfss	status,2,c
  3420  000B04  0012               	return	
  3421                           
  3422                           ;LcTLCD.c: 225:  } while(Busy);
  3423  000B06  5070               	movf	WaitForBusy@Busy^0,w,c
  3424  000B08  B4D8               	btfsc	status,2,c
  3425  000B0A  0012               	return	
  3426  000B0C  D7E9               	goto	l1961
  3427  000B0E                     __end_of_WaitForBusy:
  3428                           	callstack 0
  3429                           
  3430 ;; *************** function _CantaIR *****************
  3431 ;; Defined at:
  3432 ;;		line 178 in file "LcTLCD.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;  IR              1    wreg     unsigned char 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  IR              1    7[COMRAM] unsigned char 
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  1    wreg      void 
  3439 ;; Registers used:
  3440 ;;		wreg, status,2, status,0, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1
  3446 ;;      Params:         0       0       0
  3447 ;;      Locals:         1       0       0
  3448 ;;      Temps:          0       0       0
  3449 ;;      Totals:         1       0       0
  3450 ;;Total ram usage:        1 bytes
  3451 ;; Hardware stack levels used: 1
  3452 ;; Hardware stack levels required when called: 3
  3453 ;; This function calls:
  3454 ;;		_CantaPartAlta
  3455 ;;		_CantaPartBaixa
  3456 ;; This function is called by:
  3457 ;;		_LcInit
  3458 ;;		_LcClear
  3459 ;;		_LcCursorOff
  3460 ;;		_LcGotoXY
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text26
  3465  000C60                     __ptext26:
  3466                           	callstack 0
  3467  000C60                     _CantaIR:
  3468                           	callstack 24
  3469                           
  3470                           ;incstack = 0
  3471                           ;CantaIR@IR stored from wreg
  3472  000C60  6E6B               	movwf	CantaIR@IR^0,c
  3473                           
  3474                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  3475  000C62  9694               	bcf	148,3,c	;volatile
  3476  000C64  9494               	bcf	148,2,c	;volatile
  3477  000C66  9294               	bcf	148,1,c	;volatile
  3478  000C68  9094               	bcf	148,0,c	;volatile
  3479                           
  3480                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  3481  000C6A  9A8B               	bcf	139,5,c	;volatile
  3482                           
  3483                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  3484  000C6C  9E8C               	bcf	140,7,c	;volatile
  3485                           
  3486                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  3487  000C6E  888B               	bsf	139,4,c	;volatile
  3488                           
  3489                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  3490  000C70  506B               	movf	CantaIR@IR^0,w,c
  3491  000C72  ECDD  F004         	call	_CantaPartAlta
  3492                           
  3493                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  3494  000C76  888B               	bsf	139,4,c	;volatile
  3495                           
  3496                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  3497  000C78  988B               	bcf	139,4,c	;volatile
  3498                           
  3499                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  3500  000C7A  988B               	bcf	139,4,c	;volatile
  3501                           
  3502                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  3503  000C7C  888B               	bsf	139,4,c	;volatile
  3504                           
  3505                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  3506  000C7E  506B               	movf	CantaIR@IR^0,w,c
  3507  000C80  ECA9  F004         	call	_CantaPartBaixa
  3508                           
  3509                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  3510  000C84  888B               	bsf	139,4,c	;volatile
  3511                           
  3512                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  3513  000C86  988B               	bcf	139,4,c	;volatile
  3514                           
  3515                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3516  000C88  8694               	bsf	148,3,c	;volatile
  3517  000C8A  8494               	bsf	148,2,c	;volatile
  3518  000C8C  8294               	bsf	148,1,c	;volatile
  3519  000C8E  8094               	bsf	148,0,c	;volatile
  3520  000C90  0012               	return		;funcret
  3521  000C92                     __end_of_CantaIR:
  3522                           	callstack 0
  3523                           
  3524 ;; *************** function _CantaPartBaixa *****************
  3525 ;; Defined at:
  3526 ;;		line 171 in file "LcTLCD.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  c               1    wreg     unsigned char 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  c               1    6[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1
  3540 ;;      Params:         0       0       0
  3541 ;;      Locals:         1       0       0
  3542 ;;      Temps:          1       0       0
  3543 ;;      Totals:         2       0       0
  3544 ;;Total ram usage:        2 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 2
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_CantaIR
  3551 ;;		_CantaData
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text27
  3556  000952                     __ptext27:
  3557                           	callstack 0
  3558  000952                     _CantaPartBaixa:
  3559                           	callstack 24
  3560                           
  3561                           ;incstack = 0
  3562                           ;CantaPartBaixa@c stored from wreg
  3563  000952  6E6A               	movwf	CantaPartBaixa@c^0,c
  3564                           
  3565                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  3566  000954  A66A               	btfss	CantaPartBaixa@c^0,3,c
  3567  000956  D003               	goto	u1200
  3568  000958  6A69               	clrf	??_CantaPartBaixa^0,c
  3569  00095A  2A69               	incf	??_CantaPartBaixa^0,f,c
  3570  00095C  D001               	goto	u1218
  3571  00095E                     u1200:
  3572  00095E  6A69               	clrf	??_CantaPartBaixa^0,c
  3573  000960                     u1218:
  3574  000960  4669               	rlncf	??_CantaPartBaixa^0,f,c
  3575  000962  4669               	rlncf	??_CantaPartBaixa^0,f,c
  3576  000964  4669               	rlncf	??_CantaPartBaixa^0,f,c
  3577  000966  508B               	movf	139,w,c	;volatile
  3578  000968  1869               	xorwf	??_CantaPartBaixa^0,w,c
  3579  00096A  0BF7               	andlw	-9
  3580  00096C  1869               	xorwf	??_CantaPartBaixa^0,w,c
  3581  00096E  6E8B               	movwf	139,c	;volatile
  3582                           
  3583                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  3584  000970  A46A               	btfss	CantaPartBaixa@c^0,2,c
  3585  000972  D003               	goto	u1220
  3586  000974  6A69               	clrf	??_CantaPartBaixa^0,c
  3587  000976  2A69               	incf	??_CantaPartBaixa^0,f,c
  3588  000978  D001               	goto	u1238
  3589  00097A                     u1220:
  3590  00097A  6A69               	clrf	??_CantaPartBaixa^0,c
  3591  00097C                     u1238:
  3592  00097C  4669               	rlncf	??_CantaPartBaixa^0,f,c
  3593  00097E  4669               	rlncf	??_CantaPartBaixa^0,f,c
  3594  000980  508B               	movf	139,w,c	;volatile
  3595  000982  1869               	xorwf	??_CantaPartBaixa^0,w,c
  3596  000984  0BFB               	andlw	-5
  3597  000986  1869               	xorwf	??_CantaPartBaixa^0,w,c
  3598  000988  6E8B               	movwf	139,c	;volatile
  3599                           
  3600                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  3601  00098A  A26A               	btfss	CantaPartBaixa@c^0,1,c
  3602  00098C  D003               	goto	u1240
  3603  00098E  6A69               	clrf	??_CantaPartBaixa^0,c
  3604  000990  2A69               	incf	??_CantaPartBaixa^0,f,c
  3605  000992  D001               	goto	u1258
  3606  000994                     u1240:
  3607  000994  6A69               	clrf	??_CantaPartBaixa^0,c
  3608  000996                     u1258:
  3609  000996  4669               	rlncf	??_CantaPartBaixa^0,f,c
  3610  000998  508B               	movf	139,w,c	;volatile
  3611  00099A  1869               	xorwf	??_CantaPartBaixa^0,w,c
  3612  00099C  0BFD               	andlw	-3
  3613  00099E  1869               	xorwf	??_CantaPartBaixa^0,w,c
  3614  0009A0  6E8B               	movwf	139,c	;volatile
  3615                           
  3616                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  3617  0009A2  A06A               	btfss	CantaPartBaixa@c^0,0,c
  3618  0009A4  D003               	goto	u1260
  3619  0009A6  6A69               	clrf	??_CantaPartBaixa^0,c
  3620  0009A8  2A69               	incf	??_CantaPartBaixa^0,f,c
  3621  0009AA  D001               	goto	u1278
  3622  0009AC                     u1260:
  3623  0009AC  6A69               	clrf	??_CantaPartBaixa^0,c
  3624  0009AE                     u1278:
  3625  0009AE  508B               	movf	139,w,c	;volatile
  3626  0009B0  1869               	xorwf	??_CantaPartBaixa^0,w,c
  3627  0009B2  0BFE               	andlw	-2
  3628  0009B4  1869               	xorwf	??_CantaPartBaixa^0,w,c
  3629  0009B6  6E8B               	movwf	139,c	;volatile
  3630  0009B8  0012               	return		;funcret
  3631  0009BA                     __end_of_CantaPartBaixa:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _CantaPartAlta *****************
  3635 ;; Defined at:
  3636 ;;		line 164 in file "LcTLCD.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  c               1    wreg     unsigned char 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  c               1    6[COMRAM] unsigned char 
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		wreg, status,2, status,0
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1
  3650 ;;      Params:         0       0       0
  3651 ;;      Locals:         1       0       0
  3652 ;;      Temps:          1       0       0
  3653 ;;      Totals:         2       0       0
  3654 ;;Total ram usage:        2 bytes
  3655 ;; Hardware stack levels used: 1
  3656 ;; Hardware stack levels required when called: 2
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_CantaIR
  3661 ;;		_CantaData
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text28
  3666  0009BA                     __ptext28:
  3667                           	callstack 0
  3668  0009BA                     _CantaPartAlta:
  3669                           	callstack 24
  3670                           
  3671                           ;incstack = 0
  3672                           ;CantaPartAlta@c stored from wreg
  3673  0009BA  6E6A               	movwf	CantaPartAlta@c^0,c
  3674                           
  3675                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  3676  0009BC  AE6A               	btfss	CantaPartAlta@c^0,7,c
  3677  0009BE  D003               	goto	u1120
  3678  0009C0  6A69               	clrf	??_CantaPartAlta^0,c
  3679  0009C2  2A69               	incf	??_CantaPartAlta^0,f,c
  3680  0009C4  D001               	goto	u1138
  3681  0009C6                     u1120:
  3682  0009C6  6A69               	clrf	??_CantaPartAlta^0,c
  3683  0009C8                     u1138:
  3684  0009C8  4669               	rlncf	??_CantaPartAlta^0,f,c
  3685  0009CA  4669               	rlncf	??_CantaPartAlta^0,f,c
  3686  0009CC  4669               	rlncf	??_CantaPartAlta^0,f,c
  3687  0009CE  508B               	movf	139,w,c	;volatile
  3688  0009D0  1869               	xorwf	??_CantaPartAlta^0,w,c
  3689  0009D2  0BF7               	andlw	-9
  3690  0009D4  1869               	xorwf	??_CantaPartAlta^0,w,c
  3691  0009D6  6E8B               	movwf	139,c	;volatile
  3692                           
  3693                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  3694  0009D8  AC6A               	btfss	CantaPartAlta@c^0,6,c
  3695  0009DA  D003               	goto	u1140
  3696  0009DC  6A69               	clrf	??_CantaPartAlta^0,c
  3697  0009DE  2A69               	incf	??_CantaPartAlta^0,f,c
  3698  0009E0  D001               	goto	u1158
  3699  0009E2                     u1140:
  3700  0009E2  6A69               	clrf	??_CantaPartAlta^0,c
  3701  0009E4                     u1158:
  3702  0009E4  4669               	rlncf	??_CantaPartAlta^0,f,c
  3703  0009E6  4669               	rlncf	??_CantaPartAlta^0,f,c
  3704  0009E8  508B               	movf	139,w,c	;volatile
  3705  0009EA  1869               	xorwf	??_CantaPartAlta^0,w,c
  3706  0009EC  0BFB               	andlw	-5
  3707  0009EE  1869               	xorwf	??_CantaPartAlta^0,w,c
  3708  0009F0  6E8B               	movwf	139,c	;volatile
  3709                           
  3710                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  3711  0009F2  AA6A               	btfss	CantaPartAlta@c^0,5,c
  3712  0009F4  D003               	goto	u1160
  3713  0009F6  6A69               	clrf	??_CantaPartAlta^0,c
  3714  0009F8  2A69               	incf	??_CantaPartAlta^0,f,c
  3715  0009FA  D001               	goto	u1178
  3716  0009FC                     u1160:
  3717  0009FC  6A69               	clrf	??_CantaPartAlta^0,c
  3718  0009FE                     u1178:
  3719  0009FE  4669               	rlncf	??_CantaPartAlta^0,f,c
  3720  000A00  508B               	movf	139,w,c	;volatile
  3721  000A02  1869               	xorwf	??_CantaPartAlta^0,w,c
  3722  000A04  0BFD               	andlw	-3
  3723  000A06  1869               	xorwf	??_CantaPartAlta^0,w,c
  3724  000A08  6E8B               	movwf	139,c	;volatile
  3725                           
  3726                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  3727  000A0A  A86A               	btfss	CantaPartAlta@c^0,4,c
  3728  000A0C  D003               	goto	u1180
  3729  000A0E  6A69               	clrf	??_CantaPartAlta^0,c
  3730  000A10  2A69               	incf	??_CantaPartAlta^0,f,c
  3731  000A12  D001               	goto	u1198
  3732  000A14                     u1180:
  3733  000A14  6A69               	clrf	??_CantaPartAlta^0,c
  3734  000A16                     u1198:
  3735  000A16  508B               	movf	139,w,c	;volatile
  3736  000A18  1869               	xorwf	??_CantaPartAlta^0,w,c
  3737  000A1A  0BFE               	andlw	-2
  3738  000A1C  1869               	xorwf	??_CantaPartAlta^0,w,c
  3739  000A1E  6E8B               	movwf	139,c	;volatile
  3740  000A20  0012               	return		;funcret
  3741  000A22                     __end_of_CantaPartAlta:
  3742                           	callstack 0
  3743                           
  3744 ;; *************** function _Espera *****************
  3745 ;; Defined at:
  3746 ;;		line 159 in file "LcTLCD.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  Timer           1    wreg     unsigned char 
  3749 ;;  ms              2   12[COMRAM] int 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  Timer           1   15[COMRAM] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1
  3761 ;;      Params:         2       0       0
  3762 ;;      Locals:         1       0       0
  3763 ;;      Temps:          1       0       0
  3764 ;;      Totals:         4       0       0
  3765 ;;Total ram usage:        4 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 3
  3768 ;; This function calls:
  3769 ;;		_TiGetTics
  3770 ;;		_TiResetTics
  3771 ;; This function is called by:
  3772 ;;		_LcInit
  3773 ;;		_LcClear
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text29
  3778  000D12                     __ptext29:
  3779                           	callstack 0
  3780  000D12                     _Espera:
  3781                           	callstack 25
  3782                           
  3783                           ;incstack = 0
  3784                           ;Espera@Timer stored from wreg
  3785  000D12  6E73               	movwf	Espera@Timer^0,c
  3786                           
  3787                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  3788  000D14  5073               	movf	Espera@Timer^0,w,c
  3789  000D16  ECB9  F006         	call	_TiResetTics
  3790  000D1A                     l1987:
  3791  000D1A  5073               	movf	Espera@Timer^0,w,c
  3792  000D1C  EC61  F006         	call	_TiGetTics
  3793  000D20  5070               	movf	Espera@ms^0,w,c
  3794  000D22  5C69               	subwf	?_TiGetTics^0,w,c
  3795  000D24  506A               	movf	(?_TiGetTics+1)^0,w,c
  3796  000D26  0A80               	xorlw	128
  3797  000D28  6E72               	movwf	??_Espera^0,c
  3798  000D2A  5071               	movf	(Espera@ms+1)^0,w,c
  3799  000D2C  0A80               	xorlw	128
  3800  000D2E  5872               	subwfb	??_Espera^0,w,c
  3801  000D30  B0D8               	btfsc	status,0,c
  3802  000D32  0012               	return	
  3803  000D34  D7F2               	goto	l1987
  3804  000D36                     __end_of_Espera:
  3805                           	callstack 0
  3806                           
  3807 ;; *************** function _TiResetTics *****************
  3808 ;; Defined at:
  3809 ;;		line 55 in file "TiTTimer.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  Handle          1    wreg     unsigned char 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  Handle          1    5[COMRAM] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1
  3823 ;;      Params:         0       0       0
  3824 ;;      Locals:         1       0       0
  3825 ;;      Temps:          0       0       0
  3826 ;;      Totals:         1       0       0
  3827 ;;Total ram usage:        1 bytes
  3828 ;; Hardware stack levels used: 1
  3829 ;; Hardware stack levels required when called: 2
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_Espera
  3834 ;;		_WaitForBusy
  3835 ;;		_SMotor
  3836 ;;		_TeTeclat
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text30
  3841  000D72                     __ptext30:
  3842                           	callstack 0
  3843  000D72                     _TiResetTics:
  3844                           	callstack 25
  3845                           
  3846                           ;incstack = 0
  3847                           ;TiResetTics@Handle stored from wreg
  3848  000D72  6E69               	movwf	TiResetTics@Handle^0,c
  3849                           
  3850                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  3851  000D74  5069               	movf	TiResetTics@Handle^0,w,c
  3852  000D76  0D03               	mullw	3
  3853  000D78  50F3               	movf	243,w,c
  3854  000D7A  0F01               	addlw	low _s_Timers
  3855  000D7C  6ED9               	movwf	fsr2l,c
  3856  000D7E  6ADA               	clrf	fsr2h,c
  3857  000D80  C034  FFDE         	movff	_h_Tics,postinc2
  3858  000D84  C035  FFDD         	movff	_h_Tics+1,postdec2
  3859  000D88  0012               	return		;funcret
  3860  000D8A                     __end_of_TiResetTics:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _TiGetTics *****************
  3864 ;; Defined at:
  3865 ;;		line 61 in file "TiTTimer.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  Handle          1    wreg     unsigned char 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  Handle          1    9[COMRAM] unsigned char 
  3870 ;;  actual          2   10[COMRAM] volatile unsigned int 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  2    5[COMRAM] int 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1
  3880 ;;      Params:         2       0       0
  3881 ;;      Locals:         3       0       0
  3882 ;;      Temps:          2       0       0
  3883 ;;      Totals:         7       0       0
  3884 ;;Total ram usage:        7 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 2
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_Espera
  3891 ;;		_WaitForBusy
  3892 ;;		_SMotor
  3893 ;;		_TeTeclat
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text31
  3898  000CC2                     __ptext31:
  3899                           	callstack 0
  3900  000CC2                     _TiGetTics:
  3901                           	callstack 25
  3902                           
  3903                           ;incstack = 0
  3904                           ;TiGetTics@Handle stored from wreg
  3905  000CC2  6E6D               	movwf	TiGetTics@Handle^0,c
  3906                           
  3907                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  3908  000CC4  C034  F06E         	movff	_h_Tics,TiGetTics@actual	;volatile
  3909  000CC8  C035  F06F         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  3910                           
  3911                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  3912  000CCC  506D               	movf	TiGetTics@Handle^0,w,c
  3913  000CCE  0D03               	mullw	3
  3914  000CD0  50F3               	movf	243,w,c
  3915  000CD2  0F01               	addlw	low _s_Timers
  3916  000CD4  6ED9               	movwf	fsr2l,c
  3917  000CD6  6ADA               	clrf	fsr2h,c
  3918  000CD8  CFDE F06B          	movff	postinc2,??_TiGetTics
  3919  000CDC  CFDD F06C          	movff	postdec2,??_TiGetTics+1
  3920  000CE0  506B               	movf	??_TiGetTics^0,w,c
  3921  000CE2  5C6E               	subwf	TiGetTics@actual^0,w,c	;volatile
  3922  000CE4  6E69               	movwf	?_TiGetTics^0,c
  3923  000CE6  506C               	movf	(??_TiGetTics+1)^0,w,c
  3924  000CE8  586F               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  3925  000CEA  6E6A               	movwf	(?_TiGetTics+1)^0,c
  3926  000CEC  0012               	return		;funcret
  3927  000CEE                     __end_of_TiGetTics:
  3928                           	callstack 0
  3929                           
  3930 ;; *************** function _EscriuPrimeraOrdre *****************
  3931 ;; Defined at:
  3932 ;;		line 228 in file "LcTLCD.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  ordre           1    wreg     unsigned char 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  ordre           1    6[COMRAM] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1
  3946 ;;      Params:         0       0       0
  3947 ;;      Locals:         1       0       0
  3948 ;;      Temps:          1       0       0
  3949 ;;      Totals:         2       0       0
  3950 ;;Total ram usage:        2 bytes
  3951 ;; Hardware stack levels used: 1
  3952 ;; Hardware stack levels required when called: 2
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_LcInit
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text32
  3961  0008D8                     __ptext32:
  3962                           	callstack 0
  3963  0008D8                     _EscriuPrimeraOrdre:
  3964                           	callstack 27
  3965                           
  3966                           ;incstack = 0
  3967                           ;EscriuPrimeraOrdre@ordre stored from wreg
  3968  0008D8  6E6A               	movwf	EscriuPrimeraOrdre@ordre^0,c
  3969                           
  3970                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  3971  0008DA  9694               	bcf	148,3,c	;volatile
  3972  0008DC  9494               	bcf	148,2,c	;volatile
  3973  0008DE  9294               	bcf	148,1,c	;volatile
  3974  0008E0  9094               	bcf	148,0,c	;volatile
  3975  0008E2  9A8B               	bcf	139,5,c	;volatile
  3976  0008E4  9E8C               	bcf	140,7,c	;volatile
  3977                           
  3978                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  3979  0008E6  888B               	bsf	139,4,c	;volatile
  3980  0008E8  888B               	bsf	139,4,c	;volatile
  3981                           
  3982                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  3983  0008EA  A66A               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  3984  0008EC  D003               	goto	u230
  3985  0008EE  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  3986  0008F0  2A69               	incf	??_EscriuPrimeraOrdre^0,f,c
  3987  0008F2  D001               	goto	u248
  3988  0008F4                     u230:
  3989  0008F4  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  3990  0008F6                     u248:
  3991  0008F6  4669               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3992  0008F8  4669               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3993  0008FA  4669               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3994  0008FC  508B               	movf	139,w,c	;volatile
  3995  0008FE  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3996  000900  0BF7               	andlw	-9
  3997  000902  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3998  000904  6E8B               	movwf	139,c	;volatile
  3999                           
  4000                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  4001  000906  A46A               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4002  000908  D003               	goto	u250
  4003  00090A  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  4004  00090C  2A69               	incf	??_EscriuPrimeraOrdre^0,f,c
  4005  00090E  D001               	goto	u268
  4006  000910                     u250:
  4007  000910  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  4008  000912                     u268:
  4009  000912  4669               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4010  000914  4669               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4011  000916  508B               	movf	139,w,c	;volatile
  4012  000918  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4013  00091A  0BFB               	andlw	-5
  4014  00091C  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4015  00091E  6E8B               	movwf	139,c	;volatile
  4016                           
  4017                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  4018  000920  A26A               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4019  000922  D003               	goto	u270
  4020  000924  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  4021  000926  2A69               	incf	??_EscriuPrimeraOrdre^0,f,c
  4022  000928  D001               	goto	u288
  4023  00092A                     u270:
  4024  00092A  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  4025  00092C                     u288:
  4026  00092C  4669               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4027  00092E  508B               	movf	139,w,c	;volatile
  4028  000930  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4029  000932  0BFD               	andlw	-3
  4030  000934  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4031  000936  6E8B               	movwf	139,c	;volatile
  4032                           
  4033                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  4034  000938  A06A               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4035  00093A  D003               	goto	u290
  4036  00093C  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  4037  00093E  2A69               	incf	??_EscriuPrimeraOrdre^0,f,c
  4038  000940  D001               	goto	u308
  4039  000942                     u290:
  4040  000942  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  4041  000944                     u308:
  4042  000944  508B               	movf	139,w,c	;volatile
  4043  000946  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4044  000948  0BFE               	andlw	-2
  4045  00094A  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4046  00094C  6E8B               	movwf	139,c	;volatile
  4047                           
  4048                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  4049  00094E  988B               	bcf	139,4,c	;volatile
  4050  000950  0012               	return		;funcret
  4051  000952                     __end_of_EscriuPrimeraOrdre:
  4052                           	callstack 0
  4053                           
  4054 ;; *************** function _high_rsi *****************
  4055 ;; Defined at:
  4056 ;;		line 15 in file "main.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1
  4070 ;;      Params:         0       0       0
  4071 ;;      Locals:         0       0       0
  4072 ;;      Temps:          4       0       0
  4073 ;;      Totals:         4       0       0
  4074 ;;Total ram usage:        4 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 1
  4077 ;; This function calls:
  4078 ;;		__TiRSITimer
  4079 ;; This function is called by:
  4080 ;;		Interrupt level 2
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	intcode
  4085  000008                     __pintcode:
  4086                           	callstack 0
  4087  000008                     _high_rsi:
  4088                           	callstack 24
  4089                           
  4090                           ;incstack = 0
  4091  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4092  00000A  CFD9 F065          	movff	fsr2l,??_high_rsi
  4093  00000E  CFDA F066          	movff	fsr2h,??_high_rsi+1
  4094  000012  CFF3 F067          	movff	prodl,??_high_rsi+2
  4095  000016  CFF4 F068          	movff	prodh,??_high_rsi+3
  4096                           
  4097                           ;main.c: 16:     LATBbits.LATB0 = 0;
  4098  00001A  EC11  F005         	call	__TiRSITimer	;wreg free
  4099  00001E  C068  FFF4         	movff	??_high_rsi+3,prodh
  4100  000022  C067  FFF3         	movff	??_high_rsi+2,prodl
  4101  000026  C066  FFDA         	movff	??_high_rsi+1,fsr2h
  4102  00002A  C065  FFD9         	movff	??_high_rsi,fsr2l
  4103  00002E  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4104  000030  0011               	retfie		f
  4105  000032                     __end_of_high_rsi:
  4106                           	callstack 0
  4107                           
  4108 ;; *************** function __TiRSITimer *****************
  4109 ;; Defined at:
  4110 ;;		line 37 in file "TiTTimer.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1
  4124 ;;      Params:         0       0       0
  4125 ;;      Locals:         0       0       0
  4126 ;;      Temps:          1       0       0
  4127 ;;      Totals:         1       0       0
  4128 ;;Total ram usage:        1 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_high_rsi
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text34
  4138  000A22                     __ptext34:
  4139                           	callstack 0
  4140  000A22                     __TiRSITimer:
  4141                           	callstack 24
  4142                           
  4143                           ;TiTTimer.c: 39:     TMR0H = 223;
  4144                           
  4145                           ;incstack = 0
  4146  000A22  0EDF               	movlw	223
  4147  000A24  6ED7               	movwf	215,c	;volatile
  4148                           
  4149                           ;TiTTimer.c: 40:     TMR0L = 148;
  4150  000A26  0E94               	movlw	148
  4151  000A28  6ED6               	movwf	214,c	;volatile
  4152                           
  4153                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  4154  000A2A  94F2               	bcf	242,2,c	;volatile
  4155                           
  4156                           ;TiTTimer.c: 42:     h_Tics++;
  4157  000A2C  4A34               	infsnz	_h_Tics^0,f,c
  4158  000A2E  2A35               	incf	(_h_Tics+1)^0,f,c
  4159                           
  4160                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  4161  000A30  0E48               	movlw	72
  4162  000A32  5C34               	subwf	_h_Tics^0,w,c
  4163  000A34  0EEE               	movlw	238
  4164  000A36  5835               	subwfb	(_h_Tics+1)^0,w,c
  4165  000A38  A0D8               	btfss	status,0,c
  4166  000A3A  0012               	return	
  4167                           
  4168                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  4169  000A3C  0E00               	movlw	0
  4170  000A3E  6E3C               	movwf	_counter^0,c
  4171  000A40                     i2l1411:
  4172  000A40  0E07               	movlw	7
  4173  000A42  643C               	cpfsgt	_counter^0,c
  4174  000A44  D001               	goto	i2l1415
  4175  000A46  D015               	goto	i2l1423
  4176  000A48                     i2l1415:
  4177                           
  4178                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  4179  000A48  503C               	movf	_counter^0,w,c
  4180  000A4A  0D03               	mullw	3
  4181  000A4C  50F3               	movf	243,w,c
  4182  000A4E  0F03               	addlw	low (_s_Timers+2)
  4183  000A50  6ED9               	movwf	fsr2l,c
  4184  000A52  6ADA               	clrf	fsr2h,c
  4185  000A54  04DE               	decf	postinc2,w,c
  4186  000A56  A4D8               	btfss	status,2,c
  4187  000A58  D00A               	goto	i2l1419
  4188                           
  4189                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  4190  000A5A  503C               	movf	_counter^0,w,c
  4191  000A5C  0D03               	mullw	3
  4192  000A5E  50F3               	movf	243,w,c
  4193  000A60  0F01               	addlw	low _s_Timers
  4194  000A62  6ED9               	movwf	fsr2l,c
  4195  000A64  6ADA               	clrf	fsr2h,c
  4196  000A66  5034               	movf	_h_Tics^0,w,c
  4197  000A68  5EDE               	subwf	postinc2,f,c
  4198  000A6A  5035               	movf	(_h_Tics+1)^0,w,c
  4199  000A6C  5ADD               	subwfb	postdec2,f,c
  4200  000A6E                     i2l1419:
  4201                           
  4202                           ;TiTTimer.c: 50:         }
  4203  000A6E  2A3C               	incf	_counter^0,f,c
  4204  000A70  D7E7               	goto	i2l1411
  4205  000A72                     i2l1423:
  4206                           
  4207                           ;TiTTimer.c: 51:         h_Tics=0;
  4208  000A72  0E00               	movlw	0
  4209  000A74  6E35               	movwf	(_h_Tics+1)^0,c
  4210  000A76  0E00               	movlw	0
  4211  000A78  6E34               	movwf	_h_Tics^0,c
  4212  000A7A  0012               	return		;funcret
  4213  000A7C                     __end_of__TiRSITimer:
  4214                           	callstack 0
  4215                           
  4216                           	psect	rparam
  4217  0000                     
  4218                           	psect	temp
  4219  000079                     btemp:
  4220                           	callstack 0
  4221  000079                     	ds	1
  4222  0000                     int$flags	set	btemp
  4223  0000                     wtemp8	set	btemp+1
  4224  0000                     ttemp5	set	btemp+1
  4225  0000                     ttemp6	set	btemp+4
  4226  0000                     ttemp7	set	btemp+8
  4227                           
  4228                           	psect	idloc
  4229                           
  4230                           ;Config register IDLOC0 @ 0x200000
  4231                           ;	unspecified, using default values
  4232  200000                     	org	2097152
  4233  200000  FF                 	db	255
  4234                           
  4235                           ;Config register IDLOC1 @ 0x200001
  4236                           ;	unspecified, using default values
  4237  200001                     	org	2097153
  4238  200001  FF                 	db	255
  4239                           
  4240                           ;Config register IDLOC2 @ 0x200002
  4241                           ;	unspecified, using default values
  4242  200002                     	org	2097154
  4243  200002  FF                 	db	255
  4244                           
  4245                           ;Config register IDLOC3 @ 0x200003
  4246                           ;	unspecified, using default values
  4247  200003                     	org	2097155
  4248  200003  FF                 	db	255
  4249                           
  4250                           ;Config register IDLOC4 @ 0x200004
  4251                           ;	unspecified, using default values
  4252  200004                     	org	2097156
  4253  200004  FF                 	db	255
  4254                           
  4255                           ;Config register IDLOC5 @ 0x200005
  4256                           ;	unspecified, using default values
  4257  200005                     	org	2097157
  4258  200005  FF                 	db	255
  4259                           
  4260                           ;Config register IDLOC6 @ 0x200006
  4261                           ;	unspecified, using default values
  4262  200006                     	org	2097158
  4263  200006  FF                 	db	255
  4264                           
  4265                           ;Config register IDLOC7 @ 0x200007
  4266                           ;	unspecified, using default values
  4267  200007                     	org	2097159
  4268  200007  FF                 	db	255
  4269                           
  4270                           	psect	config
  4271                           
  4272                           ; Padding undefined space
  4273  300000                     	org	3145728
  4274  300000  FF                 	db	255
  4275                           
  4276                           ;Config register CONFIG1H @ 0x300001
  4277                           ;	Oscillator
  4278                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  4279                           ;	Fail-Safe Clock Monitor Enable bit
  4280                           ;	FCMEN = 0x0, unprogrammed default
  4281                           ;	Internal/External Oscillator Switchover bit
  4282                           ;	IESO = 0x0, unprogrammed default
  4283  300001                     	org	3145729
  4284  300001  06                 	db	6
  4285                           
  4286                           ;Config register CONFIG2L @ 0x300002
  4287                           ;	unspecified, using default values
  4288                           ;	Power-up Timer Enable bit
  4289                           ;	PWRT = 0x1, unprogrammed default
  4290                           ;	Brown-out Reset Enable bits
  4291                           ;	BOR = 0x3, unprogrammed default
  4292                           ;	Brown-out Reset Voltage bits
  4293                           ;	BORV = 0x3, unprogrammed default
  4294  300002                     	org	3145730
  4295  300002  1F                 	db	31
  4296                           
  4297                           ;Config register CONFIG2H @ 0x300003
  4298                           ;	Watchdog Timer Enable bit
  4299                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4300                           ;	Watchdog Timer Postscale Select bits
  4301                           ;	WDTPS = 0xF, unprogrammed default
  4302  300003                     	org	3145731
  4303  300003  1E                 	db	30
  4304                           
  4305                           ; Padding undefined space
  4306  300004                     	org	3145732
  4307  300004  FF                 	db	255
  4308                           
  4309                           ;Config register CONFIG3H @ 0x300005
  4310                           ;	CCP2 MUX bit
  4311                           ;	CCP2MX = 0x1, unprogrammed default
  4312                           ;	PORTB A/D Enable bit
  4313                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  4314                           ;	Low-Power Timer1 Oscillator Enable bit
  4315                           ;	LPT1OSC = 0x0, unprogrammed default
  4316                           ;	MCLR Pin Enable bit
  4317                           ;	MCLRE = 0x1, unprogrammed default
  4318  300005                     	org	3145733
  4319  300005  81                 	db	129
  4320                           
  4321                           ;Config register CONFIG4L @ 0x300006
  4322                           ;	Stack Full/Underflow Reset Enable bit
  4323                           ;	STVREN = 0x1, unprogrammed default
  4324                           ;	Single-Supply ICSP Enable bit
  4325                           ;	LVP = OFF, Single-Supply ICSP disabled
  4326                           ;	Boot Block Size Select bits
  4327                           ;	BBSIZ = 0x0, unprogrammed default
  4328                           ;	Extended Instruction Set Enable bit
  4329                           ;	XINST = 0x0, unprogrammed default
  4330                           ;	Background Debugger Enable bit
  4331                           ;	DEBUG = 0x1, unprogrammed default
  4332  300006                     	org	3145734
  4333  300006  81                 	db	129
  4334                           
  4335                           ; Padding undefined space
  4336  300007                     	org	3145735
  4337  300007  FF                 	db	255
  4338                           
  4339                           ;Config register CONFIG5L @ 0x300008
  4340                           ;	unspecified, using default values
  4341                           ;	Code Protection bit
  4342                           ;	CP0 = 0x1, unprogrammed default
  4343                           ;	Code Protection bit
  4344                           ;	CP1 = 0x1, unprogrammed default
  4345  300008                     	org	3145736
  4346  300008  03                 	db	3
  4347                           
  4348                           ;Config register CONFIG5H @ 0x300009
  4349                           ;	unspecified, using default values
  4350                           ;	Boot Block Code Protection bitProtect Boot
  4351                           ;	CPB = 0x1, unprogrammed default
  4352                           ;	Data EEPROM Code Protection bit
  4353                           ;	CPD = 0x1, unprogrammed default
  4354  300009                     	org	3145737
  4355  300009  C0                 	db	192
  4356                           
  4357                           ;Config register CONFIG6L @ 0x30000A
  4358                           ;	unspecified, using default values
  4359                           ;	Write Protection bit
  4360                           ;	WRT0 = 0x1, unprogrammed default
  4361                           ;	Write Protection bit
  4362                           ;	WRT1 = 0x1, unprogrammed default
  4363  30000A                     	org	3145738
  4364  30000A  03                 	db	3
  4365                           
  4366                           ;Config register CONFIG6H @ 0x30000B
  4367                           ;	unspecified, using default values
  4368                           ;	Configuration Register Write Protection bit
  4369                           ;	WRTC = 0x1, unprogrammed default
  4370                           ;	Boot Block Write Protection bit
  4371                           ;	WRTB = 0x1, unprogrammed default
  4372                           ;	Data EEPROM Write Protection bit
  4373                           ;	WRTD = 0x1, unprogrammed default
  4374  30000B                     	org	3145739
  4375  30000B  E0                 	db	224
  4376                           
  4377                           ;Config register CONFIG7L @ 0x30000C
  4378                           ;	unspecified, using default values
  4379                           ;	Table Read Protection bit
  4380                           ;	EBTR0 = 0x1, unprogrammed default
  4381                           ;	Table Read Protection bit
  4382                           ;	EBTR1 = 0x1, unprogrammed default
  4383  30000C                     	org	3145740
  4384  30000C  03                 	db	3
  4385                           
  4386                           ;Config register CONFIG7H @ 0x30000D
  4387                           ;	unspecified, using default values
  4388                           ;	Boot Block Table Read Protection bit
  4389                           ;	EBTRB = 0x1, unprogrammed default
  4390  30000D                     	org	3145741
  4391  30000D  40                 	db	64
  4392                           tosu	equ	0xFFF
  4393                           tosh	equ	0xFFE
  4394                           tosl	equ	0xFFD
  4395                           stkptr	equ	0xFFC
  4396                           pclatu	equ	0xFFB
  4397                           pclath	equ	0xFFA
  4398                           pcl	equ	0xFF9
  4399                           tblptru	equ	0xFF8
  4400                           tblptrh	equ	0xFF7
  4401                           tblptrl	equ	0xFF6
  4402                           tablat	equ	0xFF5
  4403                           prodh	equ	0xFF4
  4404                           prodl	equ	0xFF3
  4405                           indf0	equ	0xFEF
  4406                           postinc0	equ	0xFEE
  4407                           postdec0	equ	0xFED
  4408                           preinc0	equ	0xFEC
  4409                           plusw0	equ	0xFEB
  4410                           fsr0h	equ	0xFEA
  4411                           fsr0l	equ	0xFE9
  4412                           wreg	equ	0xFE8
  4413                           indf1	equ	0xFE7
  4414                           postinc1	equ	0xFE6
  4415                           postdec1	equ	0xFE5
  4416                           preinc1	equ	0xFE4
  4417                           plusw1	equ	0xFE3
  4418                           fsr1h	equ	0xFE2
  4419                           fsr1l	equ	0xFE1
  4420                           bsr	equ	0xFE0
  4421                           indf2	equ	0xFDF
  4422                           postinc2	equ	0xFDE
  4423                           postdec2	equ	0xFDD
  4424                           preinc2	equ	0xFDC
  4425                           plusw2	equ	0xFDB
  4426                           fsr2h	equ	0xFDA
  4427                           fsr2l	equ	0xFD9
  4428                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        27
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20     120
    BANK0           128      2       2
    BANK1           256      0       0

Pointer List with Targets:

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_LcInit
    _menu->_LcPutChar
    _LcClear->_LcGotoXY
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7815
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                         _init_ports
                               _menu
                       _motorUsuaris
 ---------------------------------------------------------------------------------
 (1) _motorUsuaris                                         2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    4753
                                              0 BANK0      2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                              _SMSon
                     _UgetNumUsuaris
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     326
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2015
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1372
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1372
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1040
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _LcCursorOff
       _CantaIR
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _WaitForBusy
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _init_ports
   _menu
     _LcClear
       _CantaIR
       _Espera
       _LcGotoXY
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _SMSon
     _UgetNumUsuaris
   _motorUsuaris

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      2       2       4        1.6%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     14      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A       7        0.0%
DATA                 0      0      7A       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Apr 21 13:11:20 2022

          TiResetTics@Handle 0069             _loginNOTRegister 03C1                            _j 003B  
                        l407 028C                          l475 0880                          l469 0846  
                        u230 08F4                          u250 0910                          u308 0944  
                        u270 092A                          u248 08F6                          u290 0942  
                        u268 0912                          u288 092C             ??_CantaPartBaixa 0069  
                        wreg 000FE8                  _ultimaTecla 0054                         l2201 051A  
                       l2051 0AA8                         l2203 0520                         l1323 0D92  
                       l2053 0AB2                         l2213 053C                         l1255 0B8A  
                       l1263 0B98                         l2151 0464                         l2081 0752  
                       l2233 0570                         l2137 0432                         l2129 041E  
                       l2059 0AC2                         l2227 0560                         l2219 0546  
                       l1443 0C12                         l2237 0578                         l2181 04D0  
                       l2421 0632                         l2413 061C                         l2175 04BA  
                       l2159 048C                         l2415 0620                         l2407 060C  
                       l1447 0C1A                         l2193 0500                         l2257 058C  
                       l2441 0666                         l2601 0312                         l2187 04E6  
                       l2451 0680                         l2435 0650                         l2419 062C  
                       l2461 06BC                         l2429 0642                         l2621 0352  
                       l2605 0324                         l2199 0518                         l2471 06D2  
                       l2455 068C                         l2447 0674                         l2623 0358  
                       l2551 026C                         l2535 0238                         l2481 06EA  
                       l2553 0272                         l2545 025A                         l2529 0226  
                       l1761 0836                         l2475 06DE                         l2467 06CA  
                       l2643 039C                         l1739 0808                         l1773 0854  
                       l2639 038A                         l2583 02DA                         l2575 02C0  
                       l2567 02A0                         l2663 03CA                         l1791 0896  
                       l1961 0AE0                         l2585 02E0                         l1787 088E  
                       l1779 086A                         l1797 08A8                         l2685 0BE0  
                       l1993 0B5A                         l1987 0D1A                         STR_1 020C  
                       STR_2 0201                         STR_3 021B                         STR_4 0214  
                       u1120 09C6                         u1200 095E                         u1140 09E2  
                       u1220 097A                         u1160 09FC                         u1240 0994  
                       u1138 09C8                         u1218 0960                         u1180 0A14  
                       u1260 09AC                         u1158 09E4                         u1238 097C  
                       u1600 054E                         _LATD 000F8C                         u1178 09FE  
                       u1258 0996                         u1370 0800                         u1610 0568  
                       u1530 04E0                         u1198 0A16                         u1278 09AE  
                       u1470 0482                         u1830 05D2                         u1840 05DC  
                       u1850 05EC                         u1860 05FC                         u1846 05DE  
                       u1838 05D4                         u1856 05EE                         u1866 05FE  
            ??_SsetNovaTecla 0069                         _Rows 0048                         _main 0BBE  
                       _menu 0224                         fsr2h 000FDA                         indf2 000FDF  
                       fsr1l 000FE1                         fsr2l 000FD9                         btemp 0079  
                       prodh 000FF4                         prodl 000FF3              __end_of_LcClear 0D12  
                       start 0032              __end_of_CantaIR 0C92                LcInit@columns 0074  
               ___param_bank 000000                  Espera@Timer 0073                        ?_main 0064  
                      ?_menu 0064                        _EEADR 000FA9                ??_TiInitTimer 0069  
                      _T0CON 000FD5                        _TMR0H 000FD7                        _TMR0L 000FD6  
                      _LcLCD 0C92                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _SMSon 0DDA  
                _MNovaLletra 0DCA                        _Minit 0DD2                        _Sinit 0DC2  
                      _Timer 0044                        _s_ptr 0043                        _nou_s 03C3  
                _LcCursorOff 0D96               __pbitbssCOMRAM 03C0                        tablat 000FF5  
                _LcNewString 0DA2                ??_TiResetTics 0069                        ttemp5 007A  
                      ttemp6 007D                        ttemp7 0081                        status 000FD8  
                      wtemp8 007A             __end_of_LcGotoXY 0B84             __end_of_LcLliure 0D96  
              ??__TiRSITimer 0064                   _TiGetTimer 0B84      EscriuPrimeraOrdre@ordre 006A  
          motorUsuaris@state 0036              __initialization 0B0E           __size_of_CantaData 0032  
               __end_of_main 0BF6                 __end_of_menu 041C             __end_of_TeTeclat 072C  
                     ??_main 0078                       ??_menu 0080           __size_of_LcPutChar 0052  
              __activetblptr 000002                       ?_LcLCD 0064                       ?_SMSon 0064  
                     ?_Minit 0064                       ?_Sinit 0064          __end_of_TiInitTimer 0C2E  
                     _EEDATA 000FA8                       _EECON2 000FA7                    ??_LcClear 0077  
                  ??_CantaIR 006B                       i2l1411 0A40                       i2l1423 0A72  
                     i2l1415 0A48                       i2l1419 0A6E               LcGotoXY@Fisics 0072  
             LcGotoXY@Column 0076                ??_WaitForBusy 0070           __size_of_TiGetTics 002C  
             _sumaPulsacions 0042                       _LcInit 072C               _UgetNumUsuaris 0DE0  
                     _SMotor 041C                       _TeInit 0DBA                       _Espera 0D12  
               _LcGotoXY$342 0074                       _RowAct 0046          __end_of_TiResetTics 0D8A  
           __end_of_high_rsi 0032                       _h_Tics 0034          __end_of__TiRSITimer 0A7C  
                     clear_0 0B36                       isa$std 000001  __size_of_EscriuPrimeraOrdre 007A  
               __pdataCOMRAM 0049       __size_of_CantaPartAlta 0068                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
            _currentUsrIndex 0038            __end_of_CantaData 0C60                 TeTeclat@cols 003E  
                 __accesstop 0080      __end_of__initialization 0B3C       __end_of_UgetNumUsuaris 0DE4  
          __end_of_LcPutChar 0ACE                ___rparam_used 000001                __end_of_LcLCD 0CC2  
                ?_TiGetTimer 0064                __end_of_SMSon 0DE0               __pcstackCOMRAM 0064  
              __end_of_Minit 0DDA          __end_of_WaitForBusy 0B0E                __end_of_Sinit 0DCA  
          __end_of_TiGetTics 0CEE                  _TiInitTimer 0BF6                      ??_LcLCD 0078  
                    ??_SMSon 0069                    ?_LcGotoXY 0071                    ?_LcLliure 0064  
                    ??_Minit 006A                      ??_Sinit 006A                    ?_TeTeclat 0064  
                _TiResetTics 0D72              ?_UgetNumUsuaris 0064                      ?_LcInit 0074  
              _CantaPartAlta 09BA                      ?_SMotor 0064                      ?_TeInit 0064  
                    ?_Espera 0070                  __TiRSITimer 0A22       __size_of_MsetNovaTecla 0008  
                 _createUser 03C0                      LcInit@i 0076                   ??_LcGotoXY 0072  
               ?_MNovaLletra 0064                   ??_LcLliure 0069          __size_of_TiGetTimer 003A  
               ?_LcCursorOff 0064                    ?_high_rsi 0064                      _LcClear 0CEE  
                    _CantaIR 0C60                 ?_LcNewString 0069                   ??_TeTeclat 0070  
                _WaitForBusy 0ACE               ?_CantaPartAlta 0064                      _Columns 0047  
      __end_of_SsetNovaTecla 0DB2              __size_of_LcInit 00DA                      __Hparam 0000  
            __size_of_SMotor 01AC              __size_of_TeInit 0008              __size_of_Espera 0024  
                    __Lparam 0000                 __psmallconst 0200                      __pcinit 0B0E  
                 _init_ports 0D36                      __ramtop 0200                      __ptext0 0BBE  
                    __ptext1 0806                      __ptext2 0224                      __ptext3 0DE0  
                    __ptext4 0DDA                      __ptext5 0DA2                      __ptext6 0D8A  
                    __ptext7 0CEE                      __ptext8 0D36                      __ptext9 0BF6  
                  _T0CONbits 000FD5                    CantaIR@IR 006B                      _counter 003C  
              ?_motorUsuaris 0064             LcNewString@new_s 0069              WaitForBusy@Busy 0070  
                 ??_high_rsi 0065         end_of_initialization 0B3C      __size_of_CantaPartBaixa 0068  
              __Lmediumconst 0000              TiGetTics@Handle 006D                _MsetNovaTecla 0DB2  
                 _novaLletra 0052              TiGetTics@actual 006E                      postdec1 000FE5  
                    postdec2 000FDD                      postinc0 000FEE                      postinc2 000FDE  
                 _numUsuaris 0037                TeTeclat@files 003D                TeTeclat@state 003F  
                  _PORTCbits 000F82                    _PORTDbits 000F83               ??_motorUsuaris 0069  
                  _TRISCbits 000F94                    _TRISDbits 000F95              ??_CantaPartAlta 0069  
             ?_MsetNovaTecla 0064                    _CantaData 0C2E                 ??_TiGetTimer 0069  
             __end_of_LcInit 0806               __end_of_SMotor 05C8                    _LcPutChar 0A7C  
             __end_of_TeInit 0DC2               __end_of_Espera 0D36   __end_of_EscriuPrimeraOrdre 0952  
              __pidataCOMRAM 0D56                  ?_init_ports 0064                    _ColumnAct 0045  
               ?_TiInitTimer 0064          start_initialization 0B0E                    _TiGetTics 0CC2  
           ??_UgetNumUsuaris 0069            __size_of_LcGotoXY 003A           __end_of_TiGetTimer 0BBE  
       __size_of_MNovaLletra 0008            __size_of_LcLliure 000C                 ?_TiResetTics 0064  
       __size_of_LcCursorOff 000C                   ?_CantaData 0064         __size_of_LcNewString 0008  
                   ??_LcInit 0075                    _NovaTecla 0053            __size_of_TeTeclat 0164  
                   ??_SMotor 0070                     ??_TeInit 006A                 ?__TiRSITimer 0064  
                   ??_Espera 0072                   ?_LcPutChar 0064                  __pbssCOMRAM 0001  
              __pcstackBANK0 0080                   ?_TiGetTics 0069              ??_MsetNovaTecla 0069  
                   ?_LcClear 0064                     ?_CantaIR 0064               _CantaPartBaixa 0952  
          __size_of_high_rsi 002A                 ?_WaitForBusy 0064          __size_of_init_ports 0020  
         MsetNovaTecla@tecla 0069           SsetNovaTecla@tecla 0069         __end_of_motorUsuaris 08D8  
                  __pintcode 0008              CantaPartBaixa@c 006A                  __smallconst 0200  
             __size_of_LcLCD 0030               __size_of_SMSon 0006               __size_of_Minit 0008  
             __size_of_Sinit 0008       __end_of_CantaPartBaixa 09BA                  ??_CantaData 006B  
                  _tmpEEPROM 0019                     _LATBbits 000F8A                     _LATCbits 000F8B  
                   _LATDbits 000F8C                    _novaTecla 0056                  ??_LcPutChar 0077  
                   _RCONbits 000FD0                    _timerMenu 003A       __size_of_SsetNovaTecla 0008  
                   Espera@ms 0070                     _LcGotoXY 0B4A                     _LcLliure 0D8A  
                ??_TiGetTics 006B         __size_of_TiInitTimer 0038                 _teclaPremuda 0058  
                LcGotoXY@Row 0071                    copy_data0 0B22              ?_CantaPartBaixa 0064  
           __size_of_LcClear 0024             __size_of_CantaIR 0032                     _TeTeclat 05C8  
                 _EECON1bits 000FA6         __size_of_TiResetTics 0018                     __Hrparam 0000  
                  menu@state 0039                     __Lrparam 0000         __size_of__TiRSITimer 005A  
               ??_init_ports 0069                     __ptext10 05C8                     __ptext11 0DAA  
         _EscriuPrimeraOrdre 08D8                     __ptext20 0B4A                     __ptext12 0DB2  
                   __ptext21 0C2E                     __ptext13 0DBA                     __ptext30 0D72  
                   __ptext22 072C                     __ptext14 0DC2                     __ptext31 0CC2  
                   __ptext23 0B84                     __ptext15 041C                     __ptext32 08D8  
                   __ptext24 0D96                     __ptext16 0DCA                     __ptext25 0ACE  
                   __ptext17 0DD2                     __ptext34 0A22                     __ptext26 0C60  
                   __ptext18 0C92                     __ptext27 0952                     __ptext19 0A7C  
                   __ptext28 09BA                     __ptext29 0D12               CantaPartAlta@c 006A  
                _lletraASCII 0057                     _high_rsi 0008                     _s_Timers 0001  
                _lletraInici 0049          ?_EscriuPrimeraOrdre 0064                __size_of_main 0038  
              __size_of_menu 01F8        __size_of_motorUsuaris 00D2        __end_of_CantaPartAlta 0A22  
              CantaData@Data 006B                     _tiTeclat 0040           __end_of_init_ports 0D56  
                   _setSMSon 03C2                _SsetNovaTecla 0DAA         __size_of_WaitForBusy 0040  
                   _password 0022                     _timerSMS 0055                     isa$xinst 000000  
                   int$flags 0079                     _username 002B         ??_EscriuPrimeraOrdre 0069  
                 LcInit@rows 0075                   _INTCONbits 000FF2                ??_MNovaLletra 0069  
               _motorUsuaris 0806                ??_LcCursorOff 0071                ??_LcNewString 006A  
                   intlevel2 0000                   LcPutChar@c 0077               ?_SsetNovaTecla 0064  
          MNovaLletra@lletra 0069          __end_of_MNovaLletra 0DD2        __end_of_MsetNovaTecla 0DBA  
        __end_of_LcCursorOff 0DA2                  SMotor@state 0041      __size_of_UgetNumUsuaris 0004  
        __end_of_LcNewString 0DAA  
