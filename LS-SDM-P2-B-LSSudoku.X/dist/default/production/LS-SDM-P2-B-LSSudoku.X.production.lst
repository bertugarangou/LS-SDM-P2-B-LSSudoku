

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri May 06 17:20:42 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   112                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   113                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   114                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   115                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   116  0000                     
   117                           ; Version 2.32
   118                           ; Generated 02/02/2021 GMT
   119                           ; 
   120                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   121                           ; All rights reserved.
   122                           ; 
   123                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   124                           ; 
   125                           ; Redistribution and use in source and binary forms, with or without modification, are
   126                           ; permitted provided that the following conditions are met:
   127                           ; 
   128                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   129                           ;        conditions and the following disclaimer.
   130                           ; 
   131                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   132                           ;        of conditions and the following disclaimer in the documentation and/or other
   133                           ;        materials provided with the distribution. Publication is not required when
   134                           ;        this file is used in an embedded application.
   135                           ; 
   136                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   137                           ;        software without specific prior written permission.
   138                           ; 
   139                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   140                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   141                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   142                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   143                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   144                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   145                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   146                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   147                           ; 
   148                           ; 
   149                           ; Code-generator required, PIC18F4321 Definitions
   150                           ; 
   151                           ; SFR Addresses
   152  0000                     
   153                           	psect	idataCOMRAM
   154  0000'                    __pidataCOMRAM:
   155                           	callstack 0
   156                           
   157                           ;initializer for _convertir
   158  0000' FA                 	db	250
   159                           
   160                           ;initializer for _novaTeclaSIO
   161  0001' FF                 	db	255
   162                           
   163                           ;initializer for _direccioSIO
   164  0002' FF                 	db	255
   165                           
   166                           ;initializer for _usuariActualSIO
   167  0003' FF                 	db	255
   168                           
   169                           ;initializer for _novaTeclaJOC
   170  0004' FF                 	db	255
   171                           
   172                           ;initializer for _usuariJoc
   173  0005' FF                 	db	255
   174                           
   175                           ;initializer for GLCDMotor@max2
   176  0006' 0F                 	db	15
   177                           
   178                           ;initializer for GLCDMotor@max1
   179  0007' 0F                 	db	15
   180                           
   181                           ;initializer for _novaScore
   182  0008' FF                 	db	255
   183                           
   184                           ;initializer for _nouIndex
   185  0009' FF                 	db	255
   186                           
   187                           ;initializer for _usuariLoguejat
   188  000A' FF                 	db	255
   189                           
   190                           ;initializer for _novaDireccio
   191  000B' FF                 	db	255
   192                           
   193                           ;initializer for _novaLletra
   194  000C' FF                 	db	255
   195                           
   196                           ;initializer for _NovaTecla
   197  000D' FF                 	db	255
   198                           
   199                           ;initializer for _ultimaTecla
   200  000E' FF                 	db	255
   201                           
   202                           ;initializer for _timerSMS
   203  000F' FF                 	db	255
   204                           
   205                           ;initializer for _novaTecla
   206  0010' FF                 	db	255
   207                           
   208                           ;initializer for _lletraASCII
   209  0011' FF                 	db	255
   210                           
   211                           ;initializer for _hora
   212  0012' 33                 	db	51
   213  0013' 30                 	db	48
   214  0014' 3A                 	db	58
   215  0015' 30                 	db	48
   216  0016' 30                 	db	48
   217  0017' 00                 	db	0
   218                           
   219                           ;initializer for _stringScore
   220  0018' 30                 	db	48
   221  0019' 30                 	db	48
   222  001A' 00                 	db	0
   223                           
   224                           	psect	idataBANK0
   225  0000'                    __pidataBANK0:
   226                           	callstack 0
   227                           
   228                           ;initializer for _lletraInici
   229  0000' 41                 	db	65
   230  0001' 44                 	db	68
   231  0002' 47                 	db	71
   232  0003' 4A                 	db	74
   233  0004' 4D                 	db	77
   234  0005' 50                 	db	80
   235  0006' 54                 	db	84
   236  0007' 57                 	db	87
   237  0008' 00                 	db	0
   238                           
   239                           ;initializer for _arrayMostrarUsuaris
   240  0009' FF                 	db	255
   241  000A' FF                 	db	255
   242  000B' FF                 	db	255
   243  000C' FF                 	db	255
   244  000D' FF                 	db	255
   245  000E' FF                 	db	255
   246  000F' FF                 	db	255
   247  0010' FF                 	db	255
   248                           
   249                           ;initializer for _arrayZero
   250  0011' 30                 	db	48
   251  0012' 20                 	db	32
   252  0013' 00                 	db	0
   253                           
   254                           ;initializer for _teclaPremuda
   255  0014' 01                 	db	1
   256  0015' 02                 	db	2
   257  0016' 03                 	db	3
   258  0017' 04                 	db	4
   259  0018' 05                 	db	5
   260  0019' 06                 	db	6
   261  001A' 07                 	db	7
   262  001B' 08                 	db	8
   263  001C' 09                 	db	9
   264  001D' 0A                 	db	10
   265  001E' 00                 	db	0
   266  001F' 0B                 	db	11
   267                           
   268                           	psect	smallconst
   269  0000'                    __psmallconst:
   270                           	callstack 0
   271  0000' 00                 	db	0
   272  0001'                    _menuList:
   273                           	callstack 0
   274  0001' 31                 	db	49
   275  0002' 2E                 	db	46
   276  0003' 50                 	db	80
   277  0004' 6C                 	db	108
   278  0005' 61                 	db	97
   279  0006' 79                 	db	121
   280  0007' 20                 	db	32
   281  0008' 61                 	db	97
   282  0009' 20                 	db	32
   283  000A' 47                 	db	71
   284  000B' 61                 	db	97
   285  000C' 6D                 	db	109
   286  000D' 65                 	db	101
   287  000E' 00                 	db	0
   288  000F' 00                 	db	0
   289  0010' 00                 	db	0
   290  0011' 00                 	db	0
   291  0012' 00                 	db	0
   292  0013' 00                 	db	0
   293  0014' 00                 	db	0
   294  0015' 00                 	db	0
   295  0016' 00                 	db	0
   296  0017' 00                 	db	0
   297  0018' 00                 	db	0
   298  0019' 00                 	db	0
   299  001A' 00                 	db	0
   300  001B' 00                 	db	0
   301  001C' 00                 	db	0
   302  001D' 00                 	db	0
   303  001E' 32                 	db	50
   304  001F' 2E                 	db	46
   305  0020' 4D                 	db	77
   306  0021' 6F                 	db	111
   307  0022' 64                 	db	100
   308  0023' 69                 	db	105
   309  0024' 66                 	db	102
   310  0025' 79                 	db	121
   311  0026' 20                 	db	32
   312  0027' 54                 	db	84
   313  0028' 69                 	db	105
   314  0029' 6D                 	db	109
   315  002A' 65                 	db	101
   316  002B' 00                 	db	0
   317  002C' 00                 	db	0
   318  002D' 00                 	db	0
   319  002E' 00                 	db	0
   320  002F' 00                 	db	0
   321  0030' 00                 	db	0
   322  0031' 00                 	db	0
   323  0032' 00                 	db	0
   324  0033' 00                 	db	0
   325  0034' 00                 	db	0
   326  0035' 00                 	db	0
   327  0036' 00                 	db	0
   328  0037' 00                 	db	0
   329  0038' 00                 	db	0
   330  0039' 00                 	db	0
   331  003A' 00                 	db	0
   332  003B' 33                 	db	51
   333  003C' 2E                 	db	46
   334  003D' 53                 	db	83
   335  003E' 68                 	db	104
   336  003F' 6F                 	db	111
   337  0040' 77                 	db	119
   338  0041' 20                 	db	32
   339  0042' 47                 	db	71
   340  0043' 65                 	db	101
   341  0044' 6E                 	db	110
   342  0045' 65                 	db	101
   343  0046' 72                 	db	114
   344  0047' 61                 	db	97
   345  0048' 6C                 	db	108
   346  0049' 20                 	db	32
   347  004A' 54                 	db	84
   348  004B' 6F                 	db	111
   349  004C' 70                 	db	112
   350  004D' 20                 	db	32
   351  004E' 35                 	db	53
   352  004F' 20                 	db	32
   353  0050' 53                 	db	83
   354  0051' 63                 	db	99
   355  0052' 6F                 	db	111
   356  0053' 72                 	db	114
   357  0054' 65                 	db	101
   358  0055' 73                 	db	115
   359  0056' 20                 	db	32
   360  0057' 00                 	db	0
   361  0058' 34                 	db	52
   362  0059' 2E                 	db	46
   363  005A' 4C                 	db	76
   364  005B' 6F                 	db	111
   365  005C' 67                 	db	103
   366  005D' 6F                 	db	111
   367  005E' 75                 	db	117
   368  005F' 74                 	db	116
   369  0060' 00                 	db	0
   370  0061' 00                 	db	0
   371  0062' 00                 	db	0
   372  0063' 00                 	db	0
   373  0064' 00                 	db	0
   374  0065' 00                 	db	0
   375  0066' 00                 	db	0
   376  0067' 00                 	db	0
   377  0068' 00                 	db	0
   378  0069' 00                 	db	0
   379  006A' 00                 	db	0
   380  006B' 00                 	db	0
   381  006C' 00                 	db	0
   382  006D' 00                 	db	0
   383  006E' 00                 	db	0
   384  006F' 00                 	db	0
   385  0070' 00                 	db	0
   386  0071' 00                 	db	0
   387  0072' 00                 	db	0
   388  0073' 00                 	db	0
   389  0074' 00                 	db	0
   390  0075' 35                 	db	53
   391  0076' 2E                 	db	46
   392  0077' 53                 	db	83
   393  0078' 68                 	db	104
   394  0079' 6F                 	db	111
   395  007A' 77                 	db	119
   396  007B' 20                 	db	32
   397  007C' 41                 	db	65
   398  007D' 6C                 	db	108
   399  007E' 6C                 	db	108
   400  007F' 20                 	db	32
   401  0080' 55                 	db	85
   402  0081' 73                 	db	115
   403  0082' 65                 	db	101
   404  0083' 72                 	db	114
   405  0084' 73                 	db	115
   406  0085' 00                 	db	0
   407  0086' 00                 	db	0
   408  0087' 00                 	db	0
   409  0088' 00                 	db	0
   410  0089' 00                 	db	0
   411  008A' 00                 	db	0
   412  008B' 00                 	db	0
   413  008C' 00                 	db	0
   414  008D' 00                 	db	0
   415  008E' 00                 	db	0
   416  008F' 00                 	db	0
   417  0090' 00                 	db	0
   418  0091' 00                 	db	0
   419  0092'                    __end_of_menuList:
   420                           	callstack 0
   421  0000                     _PIR1bits	set	3998
   422  0000                     _RCREG	set	4014
   423  0000                     _TXREG	set	4013
   424  0000                     _TXSTAbits	set	4012
   425  0000                     _ADCON0bits	set	4034
   426  0000                     _ADRESH	set	4036
   427  0000                     _ADCON2	set	4032
   428  0000                     _ADCON1	set	4033
   429  0000                     _ADCON0	set	4034
   430  0000                     _EECON2	set	4007
   431  0000                     _EEDATA	set	4008
   432  0000                     _EEADR	set	4009
   433  0000                     _T0CONbits	set	4053
   434  0000                     _TMR0L	set	4054
   435  0000                     _TMR0H	set	4055
   436  0000                     _T0CON	set	4053
   437  0000                     _INTCONbits	set	4082
   438  0000                     _RCONbits	set	4048
   439  0000                     _PORTDbits	set	3971
   440  0000                     _SPBRG	set	4015
   441  0000                     _SPBRGH	set	4016
   442  0000                     _BAUDCON	set	4024
   443  0000                     _RCSTA	set	4011
   444  0000                     _TXSTA	set	4012
   445  0000                     _EECON1bits	set	4006
   446  0000                     _LATD	set	3980
   447  0000                     _TRISD	set	3989
   448  0000                     _TRISC	set	3988
   449  0000                     _LATBbits	set	3978
   450  0000                     _TRISB	set	3987
   451  0000                     _TRISA	set	3986
   452  0000                     _PORTCbits	set	3970
   453  0000                     _LATDbits	set	3980
   454  0000                     _LATCbits	set	3979
   455  0000                     _TRISDbits	set	3989
   456  0000                     _TRISCbits	set	3988
   457  0092'                    STR_7:
   458  0092' 54                 	db	84	;'T'
   459  0093' 49                 	db	73	;'I'
   460  0094' 4D                 	db	77	;'M'
   461  0095' 45                 	db	69	;'E'
   462  0096' 20                 	db	32
   463  0097' 52                 	db	82	;'R'
   464  0098' 45                 	db	69	;'E'
   465  0099' 4D                 	db	77	;'M'
   466  009A' 41                 	db	65	;'A'
   467  009B' 49                 	db	73	;'I'
   468  009C' 4E                 	db	78	;'N'
   469  009D' 49                 	db	73	;'I'
   470  009E' 4E                 	db	78	;'N'
   471  009F' 47                 	db	71	;'G'
   472  00A0' 3A                 	db	58	;':'
   473  00A1' 00                 	db	0
   474  00A2'                    STR_6:
   475  00A2' 4D                 	db	77	;'M'
   476  00A3' 6F                 	db	111	;'o'
   477  00A4' 64                 	db	100	;'d'
   478  00A5' 69                 	db	105	;'i'
   479  00A6' 66                 	db	102	;'f'
   480  00A7' 79                 	db	121	;'y'
   481  00A8' 20                 	db	32
   482  00A9' 54                 	db	84	;'T'
   483  00AA' 69                 	db	105	;'i'
   484  00AB' 6D                 	db	109	;'m'
   485  00AC' 65                 	db	101	;'e'
   486  00AD' 3A                 	db	58	;':'
   487  00AE' 00                 	db	0
   488  00AF'                    STR_9:
   489  00AF' 54                 	db	84	;'T'
   490  00B0' 49                 	db	73	;'I'
   491  00B1' 4D                 	db	77	;'M'
   492  00B2' 45                 	db	69	;'E'
   493  00B3' 20                 	db	32
   494  00B4' 4C                 	db	76	;'L'
   495  00B5' 45                 	db	69	;'E'
   496  00B6' 46                 	db	70	;'F'
   497  00B7' 54                 	db	84	;'T'
   498  00B8' 3A                 	db	58	;':'
   499  00B9' 20                 	db	32
   500  00BA' 00                 	db	0
   501  00BB'                    STR_2:
   502  00BB' 32                 	db	50	;'2'
   503  00BC' 2E                 	db	46
   504  00BD' 52                 	db	82	;'R'
   505  00BE' 45                 	db	69	;'E'
   506  00BF' 47                 	db	71	;'G'
   507  00C0' 49                 	db	73	;'I'
   508  00C1' 53                 	db	83	;'S'
   509  00C2' 54                 	db	84	;'T'
   510  00C3' 45                 	db	69	;'E'
   511  00C4' 52                 	db	82	;'R'
   512  00C5' 00                 	db	0
   513  00C6'                    STR_5:
   514  00C6' 42                 	db	66	;'B'
   515  00C7' 59                 	db	89	;'Y'
   516  00C8' 45                 	db	69	;'E'
   517  00C9' 20                 	db	32
   518  00CA' 42                 	db	66	;'B'
   519  00CB' 59                 	db	89	;'Y'
   520  00CC' 45                 	db	69	;'E'
   521  00CD' 20                 	db	32
   522  00CE' 00                 	db	0
   523  00CF'                    STR_10:
   524  00CF' 53                 	db	83	;'S'
   525  00D0' 43                 	db	67	;'C'
   526  00D1' 4F                 	db	79	;'O'
   527  00D2' 52                 	db	82	;'R'
   528  00D3' 45                 	db	69	;'E'
   529  00D4' 3A                 	db	58	;':'
   530  00D5' 20                 	db	32
   531  00D6' 00                 	db	0
   532  00D7'                    STR_8:
   533  00D7' 45                 	db	69	;'E'
   534  00D8' 52                 	db	82	;'R'
   535  00D9' 52                 	db	82	;'R'
   536  00DA' 4F                 	db	79	;'O'
   537  00DB' 52                 	db	82	;'R'
   538  00DC' 53                 	db	83	;'S'
   539  00DD' 3A                 	db	58	;':'
   540  00DE' 00                 	db	0
   541  00DF'                    STR_1:
   542  00DF' 31                 	db	49	;'1'
   543  00E0' 2E                 	db	46
   544  00E1' 4C                 	db	76	;'L'
   545  00E2' 4F                 	db	79	;'O'
   546  00E3' 47                 	db	71	;'G'
   547  00E4' 49                 	db	73	;'I'
   548  00E5' 4E                 	db	78	;'N'
   549  00E6' 00                 	db	0
   550  00E7'                    STR_4:
   551  00E7' 50                 	db	80	;'P'
   552  00E8' 53                 	db	83	;'S'
   553  00E9' 57                 	db	87	;'W'
   554  00EA' 44                 	db	68	;'D'
   555  00EB' 3A                 	db	58	;':'
   556  00EC' 20                 	db	32
   557  00ED' 00                 	db	0
   558  00EE'                    STR_3:
   559  00EE' 55                 	db	85	;'U'
   560  00EF' 53                 	db	83	;'S'
   561  00F0' 45                 	db	69	;'E'
   562  00F1' 52                 	db	82	;'R'
   563  00F2' 3A                 	db	58	;':'
   564  00F3' 20                 	db	32
   565  00F4' 00                 	db	0
   566  00F5' 00                 	db	0	; dummy byte at the end
   567  0000                     
   568                           ; #config settings
   569                           
   570                           	psect	cinit
   571  0000'                    __pcinit:
   572                           	callstack 0
   573  0000'                    start_initialization:
   574                           	callstack 0
   575  0000'                    __initialization:
   576                           	callstack 0
   577                           
   578                           ; Initialize objects allocated to BANK0 (32 bytes)
   579                           ; load TBLPTR registers with __pidataBANK0
   580  0000' 0E00'              	movlw	low __pidataBANK0
   581  0002' 6EF6               	movwf	tblptrl,c
   582  0004' 0E00'              	movlw	high __pidataBANK0
   583  0006' 6EF7               	movwf	tblptrh,c
   584  0008' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
   585  000A' 6EF8               	movwf	tblptru,c
   586  000C' EE00' F000'        	lfsr	0,__pdataBANK0
   587  0010' EE10 F020          	lfsr	1,32
   588  0014'                    copy_data0:
   589  0014' 0009               	tblrd		*+
   590  0016' CFF5 FFEE          	movff	tablat,postinc0
   591  001A' 50E5               	movf	postdec1,w,c
   592  001C' 50E1               	movf	fsr1l,w,c
   593  001E' E1FA               	bnz	copy_data0
   594                           
   595                           ; Initialize objects allocated to COMRAM (27 bytes)
   596                           ; load TBLPTR registers with __pidataCOMRAM
   597  0020' 0E00'              	movlw	low __pidataCOMRAM
   598  0022' 6EF6               	movwf	tblptrl,c
   599  0024' 0E00'              	movlw	high __pidataCOMRAM
   600  0026' 6EF7               	movwf	tblptrh,c
   601  0028' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
   602  002A' 6EF8               	movwf	tblptru,c
   603  002C' EE00' F000'        	lfsr	0,__pdataCOMRAM
   604  0030' EE10 F01B          	lfsr	1,27
   605  0034'                    copy_data1:
   606  0034' 0009               	tblrd		*+
   607  0036' CFF5 FFEE          	movff	tablat,postinc0
   608  003A' 50E5               	movf	postdec1,w,c
   609  003C' 50E1               	movf	fsr1l,w,c
   610  003E' E1FA               	bnz	copy_data1
   611                           
   612                           ; Clear objects allocated to BANK1 (184 bytes)
   613  0040' EE00' F000'        	lfsr	0,__pbssBANK1
   614  0044' 0EB8               	movlw	184
   615  0046'                    clear_0:
   616  0046' 6AEE               	clrf	postinc0,c
   617  0048' 06E8               	decf	wreg,f,c
   618  004A' E1FD               	bnz	clear_0
   619                           
   620                           ; Clear objects allocated to BANK0 (50 bytes)
   621  004C' EE00' F000'        	lfsr	0,__pbssBANK0
   622  0050' 0E32               	movlw	50
   623  0052'                    clear_1:
   624  0052' 6AEE               	clrf	postinc0,c
   625  0054' 06E8               	decf	wreg,f,c
   626  0056' E1FD               	bnz	clear_1
   627                           
   628                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   629  0058' 6A00'              	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   630  005A' 6A00'              	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   631  005C' 6A00'              	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   632                           
   633                           ; Clear objects allocated to COMRAM (69 bytes)
   634  005E' EE00' F000'        	lfsr	0,__pbssCOMRAM
   635  0062' 0E45               	movlw	69
   636  0064'                    clear_2:
   637  0064' 6AEE               	clrf	postinc0,c
   638  0066' 06E8               	decf	wreg,f,c
   639  0068' E1FD               	bnz	clear_2
   640  006A'                    end_of_initialization:
   641                           	callstack 0
   642  006A'                    __end_of__initialization:
   643                           	callstack 0
   644  006A' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   645  006C' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   646  006E' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   647  0070' 6EF8               	movwf	tblptru,c
   648  0072' 0100               	movlb	0
   649  0074' EF00' F000'        	goto	_main	;jump to C main() function
   650                           
   651                           	psect	bitbssCOMRAM
   652  0000'                    __pbitbssCOMRAM:
   653                           	callstack 0
   654  0000'                    _Krebut:
   655                           	callstack 0
   656  0000'                    	ds	1
   657  0001'                    _jugantSIO:
   658                           	callstack 0
   659  0001'                    	ds	1
   660  0002'                    _jugantJoc:
   661                           	callstack 0
   662  0002'                    	ds	1
   663  0003'                    _tempsAcabat:
   664                           	callstack 0
   665  0003'                    	ds	1
   666  0004'                    _nouSegon:
   667                           	callstack 0
   668  0004'                    	ds	1
   669  0005'                    _jugant:
   670                           	callstack 0
   671  0005'                    	ds	1
   672  0006'                    _cap2:
   673                           	callstack 0
   674  0006'                    	ds	1
   675  0007'                    _cap1:
   676                           	callstack 0
   677  0007'                    	ds	1
   678  0008'                    _newString:
   679                           	callstack 0
   680  0008'                    	ds	1
   681  0009'                    _ferMenu:
   682                           	callstack 0
   683  0009'                    	ds	1
   684  000A'                    _reproduir:
   685                           	callstack 0
   686  000A'                    	ds	1
   687  000B'                    _do_updateScores:
   688                           	callstack 0
   689  000B'                    	ds	1
   690  000C'                    _do_showUsers:
   691                           	callstack 0
   692  000C'                    	ds	1
   693  000D'                    _borram:
   694                           	callstack 0
   695  000D'                    	ds	1
   696  000E'                    _do_register:
   697                           	callstack 0
   698  000E'                    	ds	1
   699  000F'                    _do_check_exists:
   700                           	callstack 0
   701  000F'                    	ds	1
   702  0010'                    _loginNOTRegister:
   703                           	callstack 0
   704  0010'                    	ds	1
   705  0011'                    _setSMSon:
   706                           	callstack 0
   707  0011'                    	ds	1
   708  0012'                    _nou_s:
   709                           	callstack 0
   710  0012'                    	ds	1
   711                           
   712                           	psect	bssCOMRAM
   713  0000'                    __pbssCOMRAM:
   714                           	callstack 0
   715  0000'                    _puntuacions:
   716                           	callstack 0
   717  0000'                    	ds	10
   718  000A'                    _userPtr:
   719                           	callstack 0
   720  000A'                    	ds	2
   721  000C'                    _h_Tics:
   722                           	callstack 0
   723  000C'                    	ds	2
   724  000E'                    _s_ptr:
   725                           	callstack 0
   726  000E'                    	ds	2
   727  0010'                    motorSIO@state:
   728                           	callstack 0
   729  0010'                    	ds	1
   730  0011'                    _score:
   731                           	callstack 0
   732  0011'                    	ds	1
   733  0012'                    _timerSIO:
   734                           	callstack 0
   735  0012'                    	ds	1
   736  0013'                    motorJoc@state:
   737                           	callstack 0
   738  0013'                    	ds	1
   739  0014'                    _direccioJoc:
   740                           	callstack 0
   741  0014'                    	ds	1
   742  0015'                    motorHora@state:
   743                           	callstack 0
   744  0015'                    	ds	1
   745  0016'                    _segons:
   746                           	callstack 0
   747  0016'                    	ds	1
   748  0017'                    _timerHora:
   749                           	callstack 0
   750  0017'                    	ds	1
   751  0018'                    JoystickMotor@state:
   752                           	callstack 0
   753  0018'                    	ds	1
   754  0019'                    _ultimaTeclaAD:
   755                           	callstack 0
   756  0019'                    	ds	1
   757  001A'                    GLCDMotor@length2:
   758                           	callstack 0
   759  001A'                    	ds	1
   760  001B'                    GLCDMotor@length1:
   761                           	callstack 0
   762  001B'                    	ds	1
   763  001C'                    GLCDMotor@k2:
   764                           	callstack 0
   765  001C'                    	ds	1
   766  001D'                    GLCDMotor@k1:
   767                           	callstack 0
   768  001D'                    	ds	1
   769  001E'                    GLCDMotor@min2:
   770                           	callstack 0
   771  001E'                    	ds	1
   772  001F'                    GLCDMotor@min1:
   773                           	callstack 0
   774  001F'                    	ds	1
   775  0020'                    GLCDMotor@j:
   776                           	callstack 0
   777  0020'                    	ds	1
   778  0021'                    GLCDMotor@state:
   779                           	callstack 0
   780  0021'                    	ds	1
   781  0022'                    _menuDaltGLCD:
   782                           	callstack 0
   783  0022'                    	ds	1
   784  0023'                    _timerGLCD:
   785                           	callstack 0
   786  0023'                    	ds	1
   787  0024'                    motorAltaveu@state:
   788                           	callstack 0
   789  0024'                    	ds	1
   790  0025'                    _copsNota:
   791                           	callstack 0
   792  0025'                    	ds	1
   793  0026'                    _timerAltaveu:
   794                           	callstack 0
   795  0026'                    	ds	1
   796  0027'                    _nota:
   797                           	callstack 0
   798  0027'                    	ds	1
   799  0028'                    UmotorUsers@state:
   800                           	callstack 0
   801  0028'                    	ds	1
   802  0029'                    _j:
   803                           	callstack 0
   804  0029'                    	ds	1
   805  002A'                    _i:
   806                           	callstack 0
   807  002A'                    	ds	1
   808  002B'                    _indexNextUserStruct:
   809                           	callstack 0
   810  002B'                    	ds	1
   811  002C'                    _indexNextUser:
   812                           	callstack 0
   813  002C'                    	ds	1
   814  002D'                    _numUsuaris:
   815                           	callstack 0
   816  002D'                    	ds	1
   817  002E'                    menu@state:
   818                           	callstack 0
   819  002E'                    	ds	1
   820  002F'                    _pos:
   821                           	callstack 0
   822  002F'                    	ds	1
   823  0030'                    _indexUsuari:
   824                           	callstack 0
   825  0030'                    	ds	1
   826  0031'                    _menuDalt:
   827                           	callstack 0
   828  0031'                    	ds	1
   829  0032'                    _timerMenu:
   830                           	callstack 0
   831  0032'                    	ds	1
   832  0033'                    _tmp:
   833                           	callstack 0
   834  0033'                    	ds	1
   835  0034'                    _counter:
   836                           	callstack 0
   837  0034'                    	ds	1
   838  0035'                    TeTeclat@files:
   839                           	callstack 0
   840  0035'                    	ds	1
   841  0036'                    TeTeclat@cols:
   842                           	callstack 0
   843  0036'                    	ds	1
   844  0037'                    TeTeclat@state:
   845                           	callstack 0
   846  0037'                    	ds	1
   847  0038'                    _tiTeclat:
   848                           	callstack 0
   849  0038'                    	ds	1
   850  0039'                    SMotor@state:
   851                           	callstack 0
   852  0039'                    	ds	1
   853  003A'                    _zeroTecla:
   854                           	callstack 0
   855  003A'                    	ds	1
   856  003B'                    _sumaPulsacions:
   857                           	callstack 0
   858  003B'                    	ds	1
   859  003C'                    _Timer:
   860                           	callstack 0
   861  003C'                    	ds	1
   862  003D'                    _ColumnAct:
   863                           	callstack 0
   864  003D'                    	ds	1
   865  003E'                    _RowAct:
   866                           	callstack 0
   867  003E'                    	ds	1
   868  003F'                    _Columns:
   869                           	callstack 0
   870  003F'                    	ds	1
   871  0040'                    _Rows:
   872                           	callstack 0
   873  0040'                    	ds	1
   874  0041'                    _horaTmp:
   875                           	callstack 0
   876  0041'                    	ds	4
   877                           
   878                           	psect	dataCOMRAM
   879  0000'                    __pdataCOMRAM:
   880                           	callstack 0
   881  0000'                    _convertir:
   882                           	callstack 0
   883  0000'                    	ds	1
   884  0001'                    _novaTeclaSIO:
   885                           	callstack 0
   886  0001'                    	ds	1
   887  0002'                    _direccioSIO:
   888                           	callstack 0
   889  0002'                    	ds	1
   890  0003'                    _usuariActualSIO:
   891                           	callstack 0
   892  0003'                    	ds	1
   893  0004'                    _novaTeclaJOC:
   894                           	callstack 0
   895  0004'                    	ds	1
   896  0005'                    _usuariJoc:
   897                           	callstack 0
   898  0005'                    	ds	1
   899  0006'                    GLCDMotor@max2:
   900                           	callstack 0
   901  0006'                    	ds	1
   902  0007'                    GLCDMotor@max1:
   903                           	callstack 0
   904  0007'                    	ds	1
   905  0008'                    _novaScore:
   906                           	callstack 0
   907  0008'                    	ds	1
   908  0009'                    _nouIndex:
   909                           	callstack 0
   910  0009'                    	ds	1
   911  000A'                    _usuariLoguejat:
   912                           	callstack 0
   913  000A'                    	ds	1
   914  000B'                    _novaDireccio:
   915                           	callstack 0
   916  000B'                    	ds	1
   917  000C'                    _novaLletra:
   918                           	callstack 0
   919  000C'                    	ds	1
   920  000D'                    _NovaTecla:
   921                           	callstack 0
   922  000D'                    	ds	1
   923  000E'                    _ultimaTecla:
   924                           	callstack 0
   925  000E'                    	ds	1
   926  000F'                    _timerSMS:
   927                           	callstack 0
   928  000F'                    	ds	1
   929  0010'                    _novaTecla:
   930                           	callstack 0
   931  0010'                    	ds	1
   932  0011'                    _lletraASCII:
   933                           	callstack 0
   934  0011'                    	ds	1
   935  0012'                    _hora:
   936                           	callstack 0
   937  0012'                    	ds	6
   938  0018'                    _stringScore:
   939                           	callstack 0
   940  0018'                    	ds	3
   941                           
   942                           	psect	bssBANK0
   943  0000'                    __pbssBANK0:
   944                           	callstack 0
   945  0000'                    _s_Timers:
   946                           	callstack 0
   947  0000'                    	ds	24
   948  0018'                    _tmpPassword:
   949                           	callstack 0
   950  0018'                    	ds	9
   951  0021'                    _arrayShowUsers:
   952                           	callstack 0
   953  0021'                    	ds	8
   954  0029'                    _tmpUsername:
   955                           	callstack 0
   956  0029'                    	ds	9
   957                           
   958                           	psect	dataBANK0
   959  0000'                    __pdataBANK0:
   960                           	callstack 0
   961  0000'                    _lletraInici:
   962                           	callstack 0
   963  0000'                    	ds	9
   964  0009'                    _arrayMostrarUsuaris:
   965                           	callstack 0
   966  0009'                    	ds	8
   967  0011'                    _arrayZero:
   968                           	callstack 0
   969  0011'                    	ds	3
   970  0014'                    _teclaPremuda:
   971                           	callstack 0
   972  0014'                    	ds	12
   973                           
   974                           	psect	bssBANK1
   975  0000'                    __pbssBANK1:
   976                           	callstack 0
   977  0000'                    _usuaris:
   978                           	callstack 0
   979  0000'                    	ds	184
   980                           
   981                           	psect	cstackBANK0
   982  0000'                    __pcstackBANK0:
   983                           	callstack 0
   984  0000'                    ??_menu:
   985                           
   986                           ; 1 bytes @ 0x0
   987  0000'                    	ds	5
   988                           
   989                           	psect	cstackCOMRAM
   990  0000'                    __pcstackCOMRAM:
   991                           	callstack 0
   992  0000'                    
   993                           ; 1 bytes @ 0x0
   994  0000'                    	ds	1
   995  0001'                    ??_high_rsi:
   996                           
   997                           ; 1 bytes @ 0x1
   998  0001'                    	ds	4
   999  0005'                    ??_EscriuPrimeraOrdre:
  1000  0005'                    ??_Uinit:
  1001  0005'                    ??_CantaPartAlta:
  1002  0005'                    ??_CantaPartBaixa:
  1003  0005'                    ?_TiGetTics:
  1004                           	callstack 0
  1005  0005'                    ?_UgetUserName:
  1006                           	callstack 0
  1007  0005'                    ?_getArrayShowUsers:
  1008                           	callstack 0
  1009  0005'                    SsetNovaTecla@tecla:
  1010                           	callstack 0
  1011  0005'                    TiResetTics@Handle:
  1012                           	callstack 0
  1013  0005'                    MsetNovaTecla@tecla:
  1014                           	callstack 0
  1015  0005'                    MNovaLletra@lletra:
  1016                           	callstack 0
  1017  0005'                    MNouJoystick@posicio:
  1018                           	callstack 0
  1019  0005'                    UenviaChar@pos:
  1020                           	callstack 0
  1021  0005'                    UenviaPas@pos:
  1022                           	callstack 0
  1023  0005'                    escriureCharEEPROM@pos:
  1024                           	callstack 0
  1025  0005'                    compareStrings@a:
  1026                           	callstack 0
  1027  0005'                    UgetScore@quin:
  1028                           	callstack 0
  1029  0005'                    UgetTop5@quin:
  1030                           	callstack 0
  1031  0005'                    UnewScore@score:
  1032                           	callstack 0
  1033  0005'                    escriureEEPROM@caca:
  1034                           	callstack 0
  1035  0005'                    GLCDMostraMenu@num:
  1036                           	callstack 0
  1037  0005'                    HActualitzaHora@nova:
  1038                           	callstack 0
  1039  0005'                    JJuguem@usuari:
  1040                           	callstack 0
  1041  0005'                    JnovaTecla@tecla:
  1042                           	callstack 0
  1043  0005'                    JnovaDireccio@dir:
  1044                           	callstack 0
  1045  0005'                    conversorJoystick@direc:
  1046                           	callstack 0
  1047  0005'                    SIONovaDireccio@num:
  1048                           	callstack 0
  1049  0005'                    SIOStartGame@usuari:
  1050                           	callstack 0
  1051  0005'                    SIONovaTecla@tecla:
  1052                           	callstack 0
  1053  0005'                    CToAConverteix@numero:
  1054                           	callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x5
  1057  0005'                    	ds	1
  1058  0006'                    ??_JoystickMotor:
  1059  0006'                    CantaPartAlta@c:
  1060                           	callstack 0
  1061  0006'                    CantaPartBaixa@c:
  1062                           	callstack 0
  1063  0006'                    EscriuPrimeraOrdre@ordre:
  1064                           	callstack 0
  1065  0006'                    UenviaChar@c:
  1066                           	callstack 0
  1067  0006'                    UenviaPas@c:
  1068                           	callstack 0
  1069  0006'                    escriureCharEEPROM@c:
  1070                           	callstack 0
  1071  0006'                    compareStrings@b:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x6
  1075  0006'                    	ds	1
  1076  0007'                    ??_TiGetTics:
  1077  0007'                    ??_getArrayShowUsers:
  1078  0007'                    CantaIR@IR:
  1079                           	callstack 0
  1080  0007'                    CantaData@Data:
  1081                           	callstack 0
  1082  0007'                    UgetUserName@quin:
  1083                           	callstack 0
  1084  0007'                    Uinit@i:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x7
  1088  0007'                    	ds	1
  1089  0008'                    ??_compareStrings:
  1090  0008'                    getArrayShowUsers@quin:
  1091                           	callstack 0
  1092  0008'                    Uinit@j:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x8
  1096  0008'                    	ds	1
  1097  0009'                    TiGetTics@Handle:
  1098                           	callstack 0
  1099  0009'                    Uinit@j_1190:
  1100                           	callstack 0
  1101  0009'                    LcNewString@new_s:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x9
  1105  0009'                    	ds	1
  1106  000A'                    ??_UmotorUsers:
  1107  000A'                    TiGetTics@actual:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0xA
  1111  000A'                    	ds	1
  1112  000B'                    
  1113                           ; 1 bytes @ 0xB
  1114  000B'                    	ds	1
  1115  000C'                    ??_SMotor:
  1116  000C'                    ??_motorHora:
  1117  000C'                    ??_motorAltaveu:
  1118  000C'                    ??_TeTeclat:
  1119  000C'                    WaitForBusy@Busy:
  1120                           	callstack 0
  1121  000C'                    Espera@ms:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0xC
  1125  000C'                    	ds	1
  1126  000D'                    LcGotoXY@Row:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0xD
  1130  000D'                    	ds	1
  1131  000E'                    ??_Espera:
  1132  000E'                    LcGotoXY@Fisics:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0xE
  1136  000E'                    	ds	1
  1137  000F'                    Espera@Timer:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0xF
  1141  000F'                    	ds	1
  1142  0010'                    LcInit@columns:
  1143                           	callstack 0
  1144  0010'                    _LcGotoXY$336:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x10
  1148  0010'                    	ds	1
  1149  0011'                    LcInit@rows:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x11
  1153  0011'                    	ds	1
  1154  0012'                    LcGotoXY@Column:
  1155                           	callstack 0
  1156  0012'                    LcInit@i:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x12
  1160  0012'                    	ds	1
  1161  0013'                    ??_motorJoc:
  1162  0013'                    LcPutChar@c:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x13
  1166  0013'                    	ds	1
  1167  0014'                    ??_motorSIO:
  1168  0014'                    ??_GLCDMotor:
  1169  0014'                    
  1170                           ; 1 bytes @ 0x14
  1171  0014'                    	ds	2
  1172  0016'                    
  1173                           ; 1 bytes @ 0x16
  1174 ;;
  1175 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1176 ;;
  1177 ;; *************** function _main *****************
  1178 ;; Defined at:
  1179 ;;		line 77 in file "main.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1
  1193 ;;      Params:         0       0       0
  1194 ;;      Locals:         0       0       0
  1195 ;;      Temps:          0       0       0
  1196 ;;      Totals:         0       0       0
  1197 ;;Total ram usage:        0 bytes
  1198 ;; Hardware stack levels required when called: 7
  1199 ;; This function calls:
  1200 ;;		_CtoA
  1201 ;;		_GLCDInit
  1202 ;;		_GLCDMotor
  1203 ;;		_JoystickInit
  1204 ;;		_JoystickMotor
  1205 ;;		_LcInit
  1206 ;;		_LcLCD
  1207 ;;		_Minit
  1208 ;;		_SMotor
  1209 ;;		_Sinit
  1210 ;;		_TeInit
  1211 ;;		_TeTeclat
  1212 ;;		_TiInitTimer
  1213 ;;		_Uinit
  1214 ;;		_UmotorUsers
  1215 ;;		_escriure2usuarisStruct
  1216 ;;		_escriureEEPROM
  1217 ;;		_initAltaveu
  1218 ;;		_initHora
  1219 ;;		_initSIO
  1220 ;;		_init_eusart
  1221 ;;		_init_ports
  1222 ;;		_menu
  1223 ;;		_motorAltaveu
  1224 ;;		_motorHora
  1225 ;;		_motorJoc
  1226 ;;		_motorSIO
  1227 ;; This function is called by:
  1228 ;;		Startup code after reset
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text0
  1233  0000'                    __ptext0:
  1234                           	callstack 0
  1235  0000'                    _main:
  1236                           	callstack 24
  1237                           
  1238                           ;main.c: 78:     init_ports();
  1239                           
  1240                           ;incstack = 0
  1241  0000' EC00' F000'        	call	_init_ports	;wreg free
  1242                           
  1243                           ;main.c: 79:     escriureEEPROM();
  1244  0004' EC00' F000'        	call	_escriureEEPROM	;wreg free
  1245                           
  1246                           ;main.c: 80:     init_eusart();
  1247  0008' EC00' F000'        	call	_init_eusart	;wreg free
  1248                           
  1249                           ;main.c: 81:     TiInitTimer();
  1250  000C' EC00' F000'        	call	_TiInitTimer	;wreg free
  1251                           
  1252                           ;main.c: 82:     TeInit();
  1253  0010' EC00' F000'        	call	_TeInit	;wreg free
  1254                           
  1255                           ;main.c: 83:     Sinit();
  1256  0014' EC00' F000'        	call	_Sinit	;wreg free
  1257                           
  1258                           ;main.c: 84:     SMotor();
  1259  0018' EC00' F000'        	call	_SMotor	;wreg free
  1260                           
  1261                           ;main.c: 85:     Uinit();
  1262  001C' EC00' F000'        	call	_Uinit	;wreg free
  1263                           
  1264                           ;main.c: 86:     initAltaveu();
  1265  0020' EC00' F000'        	call	_initAltaveu	;wreg free
  1266                           
  1267                           ;main.c: 87:     GLCDInit();
  1268  0024' EC00' F000'        	call	_GLCDInit	;wreg free
  1269                           
  1270                           ;main.c: 88:     JoystickInit();
  1271  0028' EC00' F000'        	call	_JoystickInit	;wreg free
  1272                           
  1273                           ;main.c: 89:     initHora();
  1274  002C' EC00' F000'        	call	_initHora	;wreg free
  1275                           
  1276                           ;main.c: 90:     initSIO();
  1277  0030' EC00' F000'        	call	_initSIO	;wreg free
  1278                           
  1279                           ;main.c: 92:     LcInit(2,16);
  1280  0034' 0E10               	movlw	16
  1281  0036' 6E00'              	movwf	LcInit@columns^0,c
  1282  0038' 0E02               	movlw	2
  1283  003A' EC00' F000'        	call	_LcInit
  1284                           
  1285                           ;main.c: 93:     Minit();
  1286  003E' EC00' F000'        	call	_Minit	;wreg free
  1287                           
  1288                           ;main.c: 95:     escriure2usuarisStruct();
  1289  0042' EC00' F000'        	call	_escriure2usuarisStruct	;wreg free
  1290  0046'                    l6921:
  1291                           
  1292                           ;main.c: 98:         motorJoc();
  1293  0046' EC00' F000'        	call	_motorJoc	;wreg free
  1294                           
  1295                           ;main.c: 99:         motorSIO();
  1296  004A' EC00' F000'        	call	_motorSIO	;wreg free
  1297                           
  1298                           ;main.c: 100:         motorHora();
  1299  004E' EC00' F000'        	call	_motorHora	;wreg free
  1300                           
  1301                           ;main.c: 101:         JoystickMotor();
  1302  0052' EC00' F000'        	call	_JoystickMotor	;wreg free
  1303                           
  1304                           ;main.c: 102:         menu();
  1305  0056' EC00' F000'        	call	_menu	;wreg free
  1306                           
  1307                           ;main.c: 104:         CtoA();
  1308  005A' EC00' F000'        	call	_CtoA	;wreg free
  1309                           
  1310                           ;main.c: 105:         motorAltaveu();
  1311  005E' EC00' F000'        	call	_motorAltaveu	;wreg free
  1312                           
  1313                           ;main.c: 106:         UmotorUsers();
  1314  0062' EC00' F000'        	call	_UmotorUsers	;wreg free
  1315                           
  1316                           ;main.c: 107:         GLCDMotor();
  1317  0066' EC00' F000'        	call	_GLCDMotor	;wreg free
  1318                           
  1319                           ;main.c: 108:         TeTeclat();
  1320  006A' EC00' F000'        	call	_TeTeclat	;wreg free
  1321                           
  1322                           ;main.c: 109:         SMotor();
  1323  006E' EC00' F000'        	call	_SMotor	;wreg free
  1324                           
  1325                           ;main.c: 110:         LcLCD();
  1326  0072' EC00' F000'        	call	_LcLCD	;wreg free
  1327  0076' D7E7               	goto	l6921
  1328  0078'                    __end_of_main:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _motorSIO *****************
  1332 ;; Defined at:
  1333 ;;		line 42 in file "SIO.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/1
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1
  1347 ;;      Params:         0       0       0
  1348 ;;      Locals:         0       0       0
  1349 ;;      Temps:          2       0       0
  1350 ;;      Totals:         2       0       0
  1351 ;;Total ram usage:        2 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 6
  1354 ;; This function calls:
  1355 ;;		_CToAConverteix
  1356 ;;		_CToAHaAcabat
  1357 ;;		_CToAobtenir
  1358 ;;		_HGetTime
  1359 ;;		_LcClear
  1360 ;;		_LcGotoXY
  1361 ;;		_LcLliure
  1362 ;;		_LcNewString
  1363 ;;		_LcPutChar
  1364 ;;		_TiGetTics
  1365 ;;		_TiResetTics
  1366 ;;		_UgetUserName
  1367 ;;		_UnewScore
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text1
  1374  0000'                    __ptext1:
  1375                           	callstack 0
  1376  0000'                    _motorSIO:
  1377                           	callstack 24
  1378                           
  1379                           ;SIO.c: 43:     static char state = 0;;SIO.c: 45:  switch(state) {
  1380                           
  1381                           ;incstack = 0
  1382  0000' D0EB               	goto	l5053
  1383  0002'                    l4933:
  1384                           
  1385                           ;SIO.c: 47:    if (usuariActualSIO > -1) {
  1386  0002' BE00'              	btfsc	_usuariActualSIO^0,7,c
  1387  0004' 0012               	return	
  1388                           
  1389                           ;SIO.c: 48:     userPtr = UgetUserName(usuariActualSIO);
  1390  0006' 5000'              	movf	_usuariActualSIO^0,w,c
  1391  0008' EC00' F000'        	call	_UgetUserName
  1392  000C' C005' F00A'        	movff	?_UgetUserName,_userPtr
  1393  0010' C006' F00B'        	movff	?_UgetUserName+1,_userPtr+1
  1394                           
  1395                           ;SIO.c: 49:     jugantSIO = 1;
  1396  0014' 8000'              	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1397                           
  1398                           ;SIO.c: 50:     Krebut = 0;
  1399  0016' 9000'              	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1400                           
  1401                           ;SIO.c: 51:     state = 1;
  1402  0018' 0E01               	movlw	1
  1403  001A' 6E00'              	movwf	motorSIO@state^0,c
  1404  001C' 0012               	return	
  1405  001E'                    l4943:
  1406                           
  1407                           ;SIO.c: 55:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1408  001E' C00A' FFD9         	movff	_userPtr,fsr2l
  1409  0022' C00B' FFDA         	movff	_userPtr+1,fsr2h
  1410  0026' 50DF               	movf	indf2,w,c
  1411  0028' B4D8               	btfsc	status,2,c
  1412  002A' A2AC               	btfss	172,1,c	;volatile
  1413  002C' D008               	goto	l4951
  1414                           
  1415                           ;SIO.c: 56:     TXREG = '\0';
  1416  002E' 0E00               	movlw	0
  1417  0030' 6EAD               	movwf	173,c	;volatile
  1418                           
  1419                           ;SIO.c: 57:     novaTeclaSIO = 0;
  1420  0032' 0E00               	movlw	0
  1421  0034' 6E00'              	movwf	_novaTeclaSIO^0,c
  1422                           
  1423                           ;SIO.c: 58:     LATBbits.LATB3 = 1;
  1424  0036' 868A               	bsf	138,3,c	;volatile
  1425                           
  1426                           ;SIO.c: 59:     state = 2;
  1427  0038' 0E02               	movlw	2
  1428  003A' 6E00'              	movwf	motorSIO@state^0,c
  1429                           
  1430                           ;SIO.c: 60:    }
  1431  003C' 0012               	return	
  1432  003E'                    l4951:
  1433  003E' C00A' FFD9         	movff	_userPtr,fsr2l
  1434  0042' C00B' FFDA         	movff	_userPtr+1,fsr2h
  1435  0046' 50DF               	movf	indf2,w,c
  1436  0048' B4D8               	btfsc	status,2,c
  1437  004A' 0012               	return	
  1438  004C' A2AC               	btfss	172,1,c	;volatile
  1439  004E' 0012               	return	
  1440                           
  1441                           ;SIO.c: 62:     TXREG = *userPtr;
  1442  0050' C00A' FFD9         	movff	_userPtr,fsr2l
  1443  0054' C00B' FFDA         	movff	_userPtr+1,fsr2h
  1444  0058' 50DF               	movf	indf2,w,c
  1445  005A' 6EAD               	movwf	173,c	;volatile
  1446                           
  1447                           ;SIO.c: 63:     userPtr++;
  1448  005C' 4A00'              	infsnz	_userPtr^0,f,c
  1449  005E' 2A00'              	incf	(_userPtr+1)^0,f,c
  1450  0060' 0012               	return	
  1451  0062'                    l4959:
  1452                           
  1453                           ;SIO.c: 67:    if (RCREG == 'K') {
  1454  0062' 0E4B               	movlw	75
  1455  0064' 18AE               	xorwf	174,w,c
  1456  0066' A4D8               	btfss	status,2,c
  1457  0068' 0012               	return	
  1458                           
  1459                           ;SIO.c: 68:     Krebut = 1;
  1460  006A' 8000'              	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1461  006C'                    l4963:
  1462                           
  1463                           ;SIO.c: 69:     state = 3;
  1464  006C' 0E03               	movlw	3
  1465  006E' 6E00'              	movwf	motorSIO@state^0,c
  1466  0070' 0012               	return	
  1467  0072'                    l4965:
  1468                           
  1469                           ;SIO.c: 73:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1470  0072' 2800'              	incf	_direccioSIO^0,w,c
  1471  0074' A4D8               	btfss	status,2,c
  1472  0076' A2AC               	btfss	172,1,c	;volatile
  1473  0078' D004               	goto	l4973
  1474                           
  1475                           ;SIO.c: 74:     TXREG = direccioSIO;
  1476  007A' C002' FFAD         	movff	_direccioSIO,4013	;volatile
  1477                           
  1478                           ;SIO.c: 75:     direccioSIO = -1;
  1479  007E' 6800'              	setf	_direccioSIO^0,c
  1480  0080' D7F5               	goto	l4963
  1481  0082'                    l4973:
  1482  0082' 0E30               	movlw	48
  1483  0084' 6400'              	cpfsgt	_novaTeclaSIO^0,c
  1484  0086' D00C               	goto	l1291
  1485  0088' 0E3A               	movlw	58
  1486  008A' 6000'              	cpfslt	_novaTeclaSIO^0,c
  1487  008C' D009               	goto	l1291
  1488  008E' A2AC               	btfss	172,1,c	;volatile
  1489  0090' D007               	goto	l1291
  1490                           
  1491                           ;SIO.c: 79:     TXREG = novaTeclaSIO;
  1492  0092' C001' FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1493                           
  1494                           ;SIO.c: 80:     novaTeclaSIO = 0;
  1495  0096' 0E00               	movlw	0
  1496  0098' 6E00'              	movwf	_novaTeclaSIO^0,c
  1497                           
  1498                           ;SIO.c: 81:     state = 3;
  1499  009A' 0E03               	movlw	3
  1500  009C' 6E00'              	movwf	motorSIO@state^0,c
  1501                           
  1502                           ;SIO.c: 82:    }
  1503  009E' 0012               	return	
  1504  00A0'                    l1291:
  1505  00A0' B000'              	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1506  00A2' D002               	goto	u4370
  1507  00A4' B2AC               	btfsc	172,1,c	;volatile
  1508  00A6' D002               	goto	u4380
  1509  00A8'                    u4370:
  1510  00A8' AA9E               	btfss	158,5,c	;volatile
  1511  00AA' 0012               	return	
  1512  00AC'                    u4380:
  1513                           
  1514                           ;SIO.c: 84:     LcClear();
  1515  00AC' EC00' F000'        	call	_LcClear	;wreg free
  1516                           
  1517                           ;SIO.c: 85:     LcNewString("ERRORS:");
  1518  00B0' 0E00'              	movlw	low STR_8
  1519  00B2' 6E00'              	movwf	LcNewString@new_s^0,c
  1520  00B4' 5000'              	movf	LcNewString@new_s^0,w,c
  1521  00B6' A4D8               	btfss	status,2,c
  1522  00B8' 0E00'              	movlw	high __smallconst
  1523  00BA' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  1524  00BC' EC00' F000'        	call	_LcNewString	;wreg free
  1525                           
  1526                           ;SIO.c: 86:     TXREG = 'F';
  1527  00C0' 0E46               	movlw	70
  1528  00C2' 6EAD               	movwf	173,c	;volatile
  1529                           
  1530                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1531  00C4' 0E00               	movlw	0
  1532  00C6' 6E00'              	movwf	_novaTeclaSIO^0,c
  1533                           
  1534                           ;SIO.c: 88:     state = 4;
  1535  00C8' 0E04               	movlw	4
  1536  00CA' 6E00'              	movwf	motorSIO@state^0,c
  1537  00CC' 0012               	return	
  1538  00CE'                    l1298:
  1539                           
  1540                           ;SIO.c: 92:    if (PIR1bits.RCIF) {
  1541  00CE' AA9E               	btfss	158,5,c	;volatile
  1542  00D0' 0012               	return	
  1543                           
  1544                           ;SIO.c: 93:                 score = RCREG;
  1545  00D2' CFAE F011'         	movff	4014,_score	;volatile
  1546                           
  1547                           ;SIO.c: 94:                 UnewScore(score);
  1548  00D6' 5000'              	movf	_score^0,w,c
  1549  00D8' EC00' F000'        	call	_UnewScore
  1550                           
  1551                           ;SIO.c: 95:     CToAConverteix(score);
  1552  00DC' 5000'              	movf	_score^0,w,c
  1553  00DE' EC00' F000'        	call	_CToAConverteix
  1554                           
  1555                           ;SIO.c: 96:     TiResetTics(timerSIO);
  1556  00E2' 5000'              	movf	_timerSIO^0,w,c
  1557  00E4' EC00' F000'        	call	_TiResetTics
  1558  00E8'                    l5003:
  1559                           
  1560                           ;SIO.c: 97:     state = 5;
  1561  00E8' 0E05               	movlw	5
  1562  00EA' 6E00'              	movwf	motorSIO@state^0,c
  1563  00EC' 0012               	return	
  1564  00EE'                    l5005:
  1565                           
  1566                           ;SIO.c: 101:    if (TiGetTics(timerSIO) > 2490) {
  1567  00EE' 5000'              	movf	_timerSIO^0,w,c
  1568  00F0' EC00' F000'        	call	_TiGetTics
  1569  00F4' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  1570  00F6' D013               	goto	l5013
  1571  00F8' 0EBB               	movlw	187
  1572  00FA' 5C00'              	subwf	?_TiGetTics^0,w,c
  1573  00FC' 0E09               	movlw	9
  1574  00FE' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  1575  0100' A0D8               	btfss	status,0,c
  1576  0102' D00D               	goto	l5013
  1577                           
  1578                           ;SIO.c: 102:     LcClear();
  1579  0104' EC00' F000'        	call	_LcClear	;wreg free
  1580                           
  1581                           ;SIO.c: 103:     LcNewString("TIME LEFT: ");
  1582  0108' 0E00'              	movlw	low STR_9
  1583  010A' 6E00'              	movwf	LcNewString@new_s^0,c
  1584  010C' 5000'              	movf	LcNewString@new_s^0,w,c
  1585  010E' A4D8               	btfss	status,2,c
  1586  0110' 0E00'              	movlw	high __smallconst
  1587  0112' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  1588  0114' EC00' F000'        	call	_LcNewString	;wreg free
  1589                           
  1590                           ;SIO.c: 104:     state = 7;
  1591  0118' 0E07               	movlw	7
  1592  011A' 6E00'              	movwf	motorSIO@state^0,c
  1593                           
  1594                           ;SIO.c: 105:    }
  1595  011C' 0012               	return	
  1596  011E'                    l5013:
  1597  011E' 5000'              	movf	_timerSIO^0,w,c
  1598  0120' EC00' F000'        	call	_TiGetTics
  1599  0124' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  1600  0126' D006               	goto	u4410
  1601  0128' 0EBA               	movlw	186
  1602  012A' 5C00'              	subwf	?_TiGetTics^0,w,c
  1603  012C' 0E09               	movlw	9
  1604  012E' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  1605  0130' B0D8               	btfsc	status,0,c
  1606  0132' 0012               	return	
  1607  0134'                    u4410:
  1608  0134' AA9E               	btfss	158,5,c	;volatile
  1609  0136' 0012               	return	
  1610  0138' EC00' F000'        	call	_LcLliure	;wreg free
  1611  013C' A0D8               	btfss	status,0,c
  1612  013E' 0012               	return	
  1613                           
  1614                           ;SIO.c: 107:     LcGotoXY(0,1);
  1615  0140' 0E01               	movlw	1
  1616  0142' 6E00'              	movwf	LcGotoXY@Row^0,c
  1617  0144' 0E00               	movlw	0
  1618  0146' EC00' F000'        	call	_LcGotoXY
  1619                           
  1620                           ;SIO.c: 108:     LcPutChar(RCREG);
  1621  014A' 50AE               	movf	174,w,c	;volatile
  1622  014C' EC00' F000'        	call	_LcPutChar
  1623                           
  1624                           ;SIO.c: 109:     state = 6;
  1625  0150' 0E06               	movlw	6
  1626  0152' 6E00'              	movwf	motorSIO@state^0,c
  1627  0154' 0012               	return	
  1628  0156'                    l5023:
  1629                           
  1630                           ;SIO.c: 113:    if (LcLliure()) {
  1631  0156' EC00' F000'        	call	_LcLliure	;wreg free
  1632  015A' A0D8               	btfss	status,0,c
  1633  015C' 0012               	return	
  1634                           
  1635                           ;SIO.c: 114:     LcNewString(HGetTime());
  1636  015E' EC00' F000'        	call	_HGetTime	;wreg free
  1637  0162' 6E00'              	movwf	??_motorSIO^0,c
  1638  0164' C014' F009'        	movff	??_motorSIO,LcNewString@new_s
  1639  0168' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  1640  016A' EC00' F000'        	call	_LcNewString	;wreg free
  1641                           
  1642                           ;SIO.c: 115:     state = 8;
  1643  016E' 0E08               	movlw	8
  1644  0170' 6E00'              	movwf	motorSIO@state^0,c
  1645  0172' 0012               	return	
  1646  0174'                    l1306:
  1647                           
  1648                           ;SIO.c: 119:    if (PIR1bits.RCIF) {
  1649  0174' AA9E               	btfss	158,5,c	;volatile
  1650  0176' 0012               	return	
  1651                           
  1652                           ;SIO.c: 120:     LcPutChar(RCREG);
  1653  0178' 50AE               	movf	174,w,c	;volatile
  1654  017A' EC00' F000'        	call	_LcPutChar
  1655                           
  1656                           ;SIO.c: 121:                 TiResetTics(timerSIO);
  1657  017E' 5000'              	movf	_timerSIO^0,w,c
  1658  0180' EC00' F000'        	call	_TiResetTics
  1659  0184' D7B1               	goto	l5003
  1660  0186'                    l5033:
  1661                           
  1662                           ;SIO.c: 126:    if (LcLliure()) {
  1663  0186' EC00' F000'        	call	_LcLliure	;wreg free
  1664  018A' A0D8               	btfss	status,0,c
  1665  018C' 0012               	return	
  1666                           
  1667                           ;SIO.c: 127:     LcGotoXY(0,1);
  1668  018E' 0E01               	movlw	1
  1669  0190' 6E00'              	movwf	LcGotoXY@Row^0,c
  1670  0192' 0E00               	movlw	0
  1671  0194' EC00' F000'        	call	_LcGotoXY
  1672                           
  1673                           ;SIO.c: 128:     LcNewString("SCORE: ");
  1674  0198' 0E00'              	movlw	low STR_10
  1675  019A' 6E00'              	movwf	LcNewString@new_s^0,c
  1676  019C' 5000'              	movf	LcNewString@new_s^0,w,c
  1677  019E' A4D8               	btfss	status,2,c
  1678  01A0' 0E00'              	movlw	high __smallconst
  1679  01A2' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  1680  01A4' EC00' F000'        	call	_LcNewString	;wreg free
  1681                           
  1682                           ;SIO.c: 129:     state = 9;
  1683  01A8' 0E09               	movlw	9
  1684  01AA' 6E00'              	movwf	motorSIO@state^0,c
  1685  01AC' 0012               	return	
  1686  01AE'                    l5041:
  1687                           
  1688                           ;SIO.c: 133:    if (LcLliure() && CToAHaAcabat() == 250) {
  1689  01AE' EC00' F000'        	call	_LcLliure	;wreg free
  1690  01B2' A0D8               	btfss	status,0,c
  1691  01B4' 0012               	return	
  1692  01B6' EC00' F000'        	call	_CToAHaAcabat	;wreg free
  1693  01BA' 0AFA               	xorlw	250
  1694  01BC' A4D8               	btfss	status,2,c
  1695  01BE' 0012               	return	
  1696                           
  1697                           ;SIO.c: 134:     LcNewString(CToAobtenir());
  1698  01C0' EC00' F000'        	call	_CToAobtenir	;wreg free
  1699  01C4' 6E00'              	movwf	??_motorSIO^0,c
  1700  01C6' C014' F009'        	movff	??_motorSIO,LcNewString@new_s
  1701  01CA' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  1702  01CC' EC00' F000'        	call	_LcNewString	;wreg free
  1703                           
  1704                           ;SIO.c: 135:     usuariActualSIO = -1;
  1705  01D0' 6800'              	setf	_usuariActualSIO^0,c
  1706                           
  1707                           ;SIO.c: 136:     state = 0;
  1708  01D2' 0E00               	movlw	0
  1709  01D4' 6E00'              	movwf	motorSIO@state^0,c
  1710  01D6' 0012               	return	
  1711  01D8'                    l5053:
  1712  01D8' 5000'              	movf	motorSIO@state^0,w,c
  1713  01DA' 6E00'              	movwf	??_motorSIO^0,c
  1714  01DC' 6A00'              	clrf	(??_motorSIO+1)^0,c
  1715                           
  1716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1717                           ; Switch size 1, requested type "simple"
  1718                           ; Number of cases is 1, Range of values is 0 to 0
  1719                           ; switch strategies available:
  1720                           ; Name         Instructions Cycles
  1721                           ; simple_byte            4     3 (average)
  1722                           ;	Chosen strategy is simple_byte
  1723  01DE' 5000'              	movf	(??_motorSIO+1)^0,w,c
  1724  01E0' 0A00               	xorlw	0	; case 0
  1725  01E2' A4D8               	btfss	status,2,c
  1726  01E4' 0012               	return	
  1727                           
  1728                           ; Switch size 1, requested type "simple"
  1729                           ; Number of cases is 10, Range of values is 0 to 9
  1730                           ; switch strategies available:
  1731                           ; Name         Instructions Cycles
  1732                           ; simple_byte           31    16 (average)
  1733                           ;	Chosen strategy is simple_byte
  1734  01E6' 5000'              	movf	??_motorSIO^0,w,c
  1735  01E8' 0A00               	xorlw	0	; case 0
  1736  01EA' B4D8               	btfsc	status,2,c
  1737  01EC' D70A               	goto	l4933
  1738  01EE' 0A01               	xorlw	1	; case 1
  1739  01F0' B4D8               	btfsc	status,2,c
  1740  01F2' D715               	goto	l4943
  1741  01F4' 0A03               	xorlw	3	; case 2
  1742  01F6' B4D8               	btfsc	status,2,c
  1743  01F8' D734               	goto	l4959
  1744  01FA' 0A01               	xorlw	1	; case 3
  1745  01FC' B4D8               	btfsc	status,2,c
  1746  01FE' D739               	goto	l4965
  1747  0200' 0A07               	xorlw	7	; case 4
  1748  0202' B4D8               	btfsc	status,2,c
  1749  0204' D764               	goto	l1298
  1750  0206' 0A01               	xorlw	1	; case 5
  1751  0208' B4D8               	btfsc	status,2,c
  1752  020A' D771               	goto	l5005
  1753  020C' 0A03               	xorlw	3	; case 6
  1754  020E' B4D8               	btfsc	status,2,c
  1755  0210' D7B1               	goto	l1306
  1756  0212' 0A01               	xorlw	1	; case 7
  1757  0214' B4D8               	btfsc	status,2,c
  1758  0216' D79F               	goto	l5023
  1759  0218' 0A0F               	xorlw	15	; case 8
  1760  021A' B4D8               	btfsc	status,2,c
  1761  021C' D7B4               	goto	l5033
  1762  021E' 0A01               	xorlw	1	; case 9
  1763  0220' A4D8               	btfss	status,2,c
  1764  0222' 0012               	return	
  1765  0224' D7C4               	goto	l5041
  1766  0226'                    __end_of_motorSIO:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _UnewScore *****************
  1770 ;; Defined at:
  1771 ;;		line 311 in file "Usuaris.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  score           1    wreg     unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  score           1    5[COMRAM] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/1
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1
  1785 ;;      Params:         0       0       0
  1786 ;;      Locals:         1       0       0
  1787 ;;      Temps:          0       0       0
  1788 ;;      Totals:         1       0       0
  1789 ;;Total ram usage:        1 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 2
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_motorSIO
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text2
  1800  0000'                    __ptext2:
  1801                           	callstack 0
  1802  0000'                    _UnewScore:
  1803                           	callstack 27
  1804                           
  1805                           ;incstack = 0
  1806                           ;UnewScore@score stored from wreg
  1807  0000' 6E00'              	movwf	UnewScore@score^0,c
  1808                           
  1809                           ;Usuaris.c: 312:     if(puntuacions[0].score < score){
  1810  0002' 5000'              	movf	UnewScore@score^0,w,c
  1811  0004' 5C00'              	subwf	(_puntuacions+1)^0,w,c
  1812  0006' B0D8               	btfsc	status,0,c
  1813  0008' D003               	goto	l2331
  1814                           
  1815                           ;Usuaris.c: 313:         puntuacions[0].indexStruct = usuariLoguejat;
  1816  000A' C00A' F000'        	movff	_usuariLoguejat,_puntuacions
  1817                           
  1818                           ;Usuaris.c: 314:     }else{
  1819  000E' 0012               	return	
  1820  0010'                    l2331:
  1821                           
  1822                           ;Usuaris.c: 315:         if(puntuacions[1].score < score){
  1823  0010' 5000'              	movf	UnewScore@score^0,w,c
  1824  0012' 5C00'              	subwf	(_puntuacions+3)^0,w,c
  1825  0014' B0D8               	btfsc	status,0,c
  1826  0016' D003               	goto	l2335
  1827                           
  1828                           ;Usuaris.c: 316:             puntuacions[1].indexStruct = usuariLoguejat;
  1829  0018' C00A' F002'        	movff	_usuariLoguejat,_puntuacions+2
  1830                           
  1831                           ;Usuaris.c: 317:         }else{
  1832  001C' 0012               	return	
  1833  001E'                    l2335:
  1834                           
  1835                           ;Usuaris.c: 318:             if(puntuacions[2].score < score){
  1836  001E' 5000'              	movf	UnewScore@score^0,w,c
  1837  0020' 5C00'              	subwf	(_puntuacions+5)^0,w,c
  1838  0022' B0D8               	btfsc	status,0,c
  1839  0024' D003               	goto	l2339
  1840                           
  1841                           ;Usuaris.c: 319:                 puntuacions[2].indexStruct = usuariLoguejat;
  1842  0026' C00A' F004'        	movff	_usuariLoguejat,_puntuacions+4
  1843                           
  1844                           ;Usuaris.c: 320:             }else{
  1845  002A' 0012               	return	
  1846  002C'                    l2339:
  1847                           
  1848                           ;Usuaris.c: 321:                 if(puntuacions[3].score < score){
  1849  002C' 5000'              	movf	UnewScore@score^0,w,c
  1850  002E' 5C00'              	subwf	(_puntuacions+7)^0,w,c
  1851  0030' B0D8               	btfsc	status,0,c
  1852  0032' D003               	goto	l2343
  1853                           
  1854                           ;Usuaris.c: 322:                     puntuacions[3].indexStruct = usuariLoguejat;
  1855  0034' C00A' F006'        	movff	_usuariLoguejat,_puntuacions+6
  1856                           
  1857                           ;Usuaris.c: 323:                 }else{
  1858  0038' 0012               	return	
  1859  003A'                    l2343:
  1860                           
  1861                           ;Usuaris.c: 324:                     if(puntuacions[4].score < score){
  1862  003A' 5000'              	movf	UnewScore@score^0,w,c
  1863  003C' 5C00'              	subwf	(_puntuacions+9)^0,w,c
  1864  003E' B0D8               	btfsc	status,0,c
  1865  0040' 0012               	return	
  1866                           
  1867                           ;Usuaris.c: 325:                         puntuacions[4].indexStruct = usuariLoguejat;
  1868  0042' C00A' F008'        	movff	_usuariLoguejat,_puntuacions+8
  1869  0046' 0012               	return	
  1870  0048'                    __end_of_UnewScore:
  1871                           	callstack 0
  1872                           
  1873 ;; *************** function _motorJoc *****************
  1874 ;; Defined at:
  1875 ;;		line 48 in file "Joc.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/1
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1
  1889 ;;      Params:         0       0       0
  1890 ;;      Locals:         0       0       0
  1891 ;;      Temps:          2       0       0
  1892 ;;      Totals:         2       0       0
  1893 ;;Total ram usage:        2 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; Hardware stack levels required when called: 5
  1896 ;; This function calls:
  1897 ;;		_HClearNouSegon
  1898 ;;		_HGetTime
  1899 ;;		_HJugant
  1900 ;;		_HNouSegon
  1901 ;;		_HnoJugant
  1902 ;;		_LcGotoXY
  1903 ;;		_LcLliure
  1904 ;;		_LcNewString
  1905 ;;		_SIONovaDireccio
  1906 ;;		_SIONovaTecla
  1907 ;;		_SIOStartGame
  1908 ;;		_SIOcheckKrebut
  1909 ;;		_SIOendGame
  1910 ;;		_conversorJoystick
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text3
  1917  0000'                    __ptext3:
  1918                           	callstack 0
  1919  0000'                    _motorJoc:
  1920                           	callstack 25
  1921                           
  1922                           ;Joc.c: 49:     static char state = 0;;Joc.c: 51:  switch(state) {
  1923                           
  1924                           ;incstack = 0
  1925  0000' D04A               	goto	l4925
  1926  0002'                    l4873:
  1927                           
  1928                           ;Joc.c: 53:    if (usuariJoc != -1) {
  1929  0002' 2800'              	incf	_usuariJoc^0,w,c
  1930  0004' B4D8               	btfsc	status,2,c
  1931  0006' 0012               	return	
  1932                           
  1933                           ;Joc.c: 54:     SIOStartGame(usuariJoc);
  1934  0008' 5000'              	movf	_usuariJoc^0,w,c
  1935  000A' EC00' F000'        	call	_SIOStartGame
  1936                           
  1937                           ;Joc.c: 55:     jugantJoc = 1;
  1938  000E' 8000'              	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1939                           
  1940                           ;Joc.c: 56:     state = 2;
  1941  0010' 0E02               	movlw	2
  1942  0012' 6E00'              	movwf	motorJoc@state^0,c
  1943                           
  1944                           ;Joc.c: 58:   break;
  1945                           
  1946                           ;Joc.c: 57:    }
  1947  0014' 0012               	return	
  1948  0016'                    l1184:
  1949                           
  1950                           ;Joc.c: 60:    if (!jugantJoc) {
  1951  0016' B000'              	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1952  0018' D009               	goto	l4889
  1953                           
  1954                           ;Joc.c: 61:     usuariJoc = -1;
  1955  001A' 6800'              	setf	_usuariJoc^0,c
  1956                           
  1957                           ;Joc.c: 62:     HnoJugant();
  1958  001C' EC00' F000'        	call	_HnoJugant	;wreg free
  1959                           
  1960                           ;Joc.c: 63:     SIOendGame();
  1961  0020' EC00' F000'        	call	_SIOendGame	;wreg free
  1962                           
  1963                           ;Joc.c: 64:     LATBbits.LATB3 = 0;
  1964  0024' 968A               	bcf	138,3,c	;volatile
  1965                           
  1966                           ;Joc.c: 65:     state = 0;
  1967  0026' 0E00               	movlw	0
  1968  0028' 6E00'              	movwf	motorJoc@state^0,c
  1969                           
  1970                           ;Joc.c: 66:    }
  1971  002A' 0012               	return	
  1972  002C'                    l4889:
  1973  002C' BE00'              	btfsc	_direccioJoc^0,7,c
  1974  002E' D009               	goto	l4897
  1975                           
  1976                           ;Joc.c: 68:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1977  0030' 5000'              	movf	_direccioJoc^0,w,c
  1978  0032' EC00' F000'        	call	_conversorJoystick
  1979  0036' EC00' F000'        	call	_SIONovaDireccio
  1980                           
  1981                           ;Joc.c: 69:     direccioJoc = -1;
  1982  003A' 6800'              	setf	_direccioJoc^0,c
  1983  003C'                    l4895:
  1984                           
  1985                           ;Joc.c: 70:     state = 1;
  1986  003C' 0E01               	movlw	1
  1987  003E' 6E00'              	movwf	motorJoc@state^0,c
  1988                           
  1989                           ;Joc.c: 71:    }
  1990  0040' 0012               	return	
  1991  0042'                    l4897:
  1992  0042' EC00' F000'        	call	_HNouSegon	;wreg free
  1993  0046' A0D8               	btfss	status,0,c
  1994  0048' D014               	goto	l4909
  1995  004A' EC00' F000'        	call	_LcLliure	;wreg free
  1996  004E' A0D8               	btfss	status,0,c
  1997  0050' D010               	goto	l4909
  1998                           
  1999                           ;Joc.c: 73:     HClearNouSegon();
  2000  0052' EC00' F000'        	call	_HClearNouSegon	;wreg free
  2001                           
  2002                           ;Joc.c: 74:     LcGotoXY(0,1);
  2003  0056' 0E01               	movlw	1
  2004  0058' 6E00'              	movwf	LcGotoXY@Row^0,c
  2005  005A' 0E00               	movlw	0
  2006  005C' EC00' F000'        	call	_LcGotoXY
  2007                           
  2008                           ;Joc.c: 75:     LcNewString(HGetTime());
  2009  0060' EC00' F000'        	call	_HGetTime	;wreg free
  2010  0064' 6E00'              	movwf	??_motorJoc^0,c
  2011  0066' C013' F009'        	movff	??_motorJoc,LcNewString@new_s
  2012  006A' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  2013  006C' EC00' F000'        	call	_LcNewString	;wreg free
  2014  0070' D7E5               	goto	l4895
  2015  0072'                    l4909:
  2016  0072' 5000'              	movf	_novaTeclaJOC^0,w,c
  2017  0074' 0A80               	xorlw	128
  2018  0076' 0F7F               	addlw	-129
  2019  0078' A0D8               	btfss	status,0,c
  2020  007A' 0012               	return	
  2021                           
  2022                           ;Joc.c: 79:     SIONovaTecla(novaTeclaJOC+48);
  2023  007C' 5000'              	movf	_novaTeclaJOC^0,w,c
  2024  007E' 0F30               	addlw	48
  2025  0080' EC00' F000'        	call	_SIONovaTecla
  2026                           
  2027                           ;Joc.c: 80:     novaTeclaJOC = -1;
  2028  0084' 6800'              	setf	_novaTeclaJOC^0,c
  2029  0086' D7DA               	goto	l4895
  2030  0088'                    l4917:
  2031                           
  2032                           ;Joc.c: 85:    if (SIOcheckKrebut()) {
  2033  0088' EC00' F000'        	call	_SIOcheckKrebut	;wreg free
  2034  008C' A0D8               	btfss	status,0,c
  2035  008E' 0012               	return	
  2036                           
  2037                           ;Joc.c: 86:     HJugant();
  2038  0090' EC00' F000'        	call	_HJugant	;wreg free
  2039  0094' D7D3               	goto	l4895
  2040  0096'                    l4925:
  2041  0096' 5000'              	movf	motorJoc@state^0,w,c
  2042  0098' 6E00'              	movwf	??_motorJoc^0,c
  2043  009A' 6A00'              	clrf	(??_motorJoc+1)^0,c
  2044                           
  2045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2046                           ; Switch size 1, requested type "simple"
  2047                           ; Number of cases is 1, Range of values is 0 to 0
  2048                           ; switch strategies available:
  2049                           ; Name         Instructions Cycles
  2050                           ; simple_byte            4     3 (average)
  2051                           ;	Chosen strategy is simple_byte
  2052  009C' 5000'              	movf	(??_motorJoc+1)^0,w,c
  2053  009E' 0A00               	xorlw	0	; case 0
  2054  00A0' A4D8               	btfss	status,2,c
  2055  00A2' 0012               	return	
  2056                           
  2057                           ; Switch size 1, requested type "simple"
  2058                           ; Number of cases is 3, Range of values is 0 to 2
  2059                           ; switch strategies available:
  2060                           ; Name         Instructions Cycles
  2061                           ; simple_byte           10     6 (average)
  2062                           ;	Chosen strategy is simple_byte
  2063  00A4' 5000'              	movf	??_motorJoc^0,w,c
  2064  00A6' 0A00               	xorlw	0	; case 0
  2065  00A8' B4D8               	btfsc	status,2,c
  2066  00AA' D7AB               	goto	l4873
  2067  00AC' 0A01               	xorlw	1	; case 1
  2068  00AE' B4D8               	btfsc	status,2,c
  2069  00B0' D7B2               	goto	l1184
  2070  00B2' 0A03               	xorlw	3	; case 2
  2071  00B4' A4D8               	btfss	status,2,c
  2072  00B6' 0012               	return	
  2073  00B8' D7E7               	goto	l4917
  2074  00BA'                    __end_of_motorJoc:
  2075                           	callstack 0
  2076                           
  2077 ;; *************** function _conversorJoystick *****************
  2078 ;; Defined at:
  2079 ;;		line 31 in file "Joc.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  direc           1    wreg     unsigned char 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  direc           1    5[COMRAM] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      unsigned char 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/1
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1
  2093 ;;      Params:         0       0       0
  2094 ;;      Locals:         1       0       0
  2095 ;;      Temps:          0       0       0
  2096 ;;      Totals:         1       0       0
  2097 ;;Total ram usage:        1 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; Hardware stack levels required when called: 2
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_motorJoc
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text4
  2108  0000'                    __ptext4:
  2109                           	callstack 0
  2110  0000'                    _conversorJoystick:
  2111                           	callstack 27
  2112                           
  2113                           ;incstack = 0
  2114                           ;conversorJoystick@direc stored from wreg
  2115  0000' 6E00'              	movwf	conversorJoystick@direc^0,c
  2116                           
  2117                           ;Joc.c: 33:     if (direc==2) {
  2118  0002' 0E02               	movlw	2
  2119  0004' 1800'              	xorwf	conversorJoystick@direc^0,w,c
  2120  0006' A4D8               	btfss	status,2,c
  2121  0008' D002               	goto	l2373
  2122                           
  2123                           ;Joc.c: 34:         return 'W';
  2124  000A' 0E57               	movlw	87
  2125  000C' 0012               	return	
  2126  000E'                    l2373:
  2127                           
  2128                           ;Joc.c: 36:     if (direc==6) {
  2129  000E' 0E06               	movlw	6
  2130  0010' 1800'              	xorwf	conversorJoystick@direc^0,w,c
  2131  0012' A4D8               	btfss	status,2,c
  2132  0014' D002               	goto	l2379
  2133                           
  2134                           ;Joc.c: 37:         return 'D';
  2135  0016' 0E44               	movlw	68
  2136  0018' 0012               	return	
  2137  001A'                    l2379:
  2138                           
  2139                           ;Joc.c: 39:     if (direc==8) {
  2140  001A' 0E08               	movlw	8
  2141  001C' 1800'              	xorwf	conversorJoystick@direc^0,w,c
  2142  001E' A4D8               	btfss	status,2,c
  2143  0020' D002               	goto	l2385
  2144                           
  2145                           ;Joc.c: 40:         return 'S';
  2146  0022' 0E53               	movlw	83
  2147  0024' 0012               	return	
  2148  0026'                    l2385:
  2149                           
  2150                           ;Joc.c: 42:     if (direc==4) {
  2151  0026' 0E04               	movlw	4
  2152  0028' 1800'              	xorwf	conversorJoystick@direc^0,w,c
  2153  002A' A4D8               	btfss	status,2,c
  2154  002C' D002               	goto	l2391
  2155                           
  2156                           ;Joc.c: 43:         return 'A';
  2157  002E' 0E41               	movlw	65
  2158  0030' 0012               	return	
  2159  0032'                    l2391:
  2160                           
  2161                           ;Joc.c: 45:     return 0;
  2162  0032' 0E00               	movlw	0
  2163  0034' 0012               	return		;funcret
  2164  0036'                    __end_of_conversorJoystick:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _SIOendGame *****************
  2168 ;; Defined at:
  2169 ;;		line 22 in file "SIO.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		None
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/1
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1
  2183 ;;      Params:         0       0       0
  2184 ;;      Locals:         0       0       0
  2185 ;;      Temps:          0       0       0
  2186 ;;      Totals:         0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 2
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_motorJoc
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text5
  2198  0000'                    __ptext5:
  2199                           	callstack 0
  2200  0000'                    _SIOendGame:
  2201                           	callstack 27
  2202                           
  2203                           ;SIO.c: 23:     jugantSIO = 0;
  2204                           
  2205                           ;incstack = 0
  2206  0000' 9000'              	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2207  0002' 0012               	return		;funcret
  2208  0004'                    __end_of_SIOendGame:
  2209                           	callstack 0
  2210                           
  2211 ;; *************** function _SIOcheckKrebut *****************
  2212 ;; Defined at:
  2213 ;;		line 25 in file "SIO.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;		None               void
  2220 ;; Registers used:
  2221 ;;		status,0
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/1
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1
  2227 ;;      Params:         0       0       0
  2228 ;;      Locals:         0       0       0
  2229 ;;      Temps:          0       0       0
  2230 ;;      Totals:         0       0       0
  2231 ;;Total ram usage:        0 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; Hardware stack levels required when called: 2
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_motorJoc
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text6
  2242  0000'                    __ptext6:
  2243                           	callstack 0
  2244  0000'                    _SIOcheckKrebut:
  2245                           	callstack 27
  2246                           
  2247                           ;SIO.c: 26:     return Krebut;
  2248                           
  2249                           ;incstack = 0
  2250  0000' B000'              	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2251  0002' D002               	goto	l2407
  2252  0004' 90D8               	bcf	status,0,c
  2253  0006' 0012               	return	
  2254  0008'                    l2407:
  2255  0008' 80D8               	bsf	status,0,c
  2256  000A' 0012               	return		;funcret
  2257  000C'                    __end_of_SIOcheckKrebut:
  2258                           	callstack 0
  2259                           
  2260 ;; *************** function _SIOStartGame *****************
  2261 ;; Defined at:
  2262 ;;		line 32 in file "SIO.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  usuari          1    wreg     unsigned char 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  usuari          1    5[COMRAM] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/1
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1
  2276 ;;      Params:         0       0       0
  2277 ;;      Locals:         1       0       0
  2278 ;;      Temps:          0       0       0
  2279 ;;      Totals:         1       0       0
  2280 ;;Total ram usage:        1 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; Hardware stack levels required when called: 2
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_motorJoc
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text7
  2291  0000'                    __ptext7:
  2292                           	callstack 0
  2293  0000'                    _SIOStartGame:
  2294                           	callstack 27
  2295                           
  2296                           ;incstack = 0
  2297                           ;SIOStartGame@usuari stored from wreg
  2298  0000' 6E00'              	movwf	SIOStartGame@usuari^0,c
  2299                           
  2300                           ;SIO.c: 33:     usuariActualSIO = usuari;
  2301  0002' C005' F003'        	movff	SIOStartGame@usuari,_usuariActualSIO
  2302  0006' 0012               	return		;funcret
  2303  0008'                    __end_of_SIOStartGame:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function _SIONovaTecla *****************
  2307 ;; Defined at:
  2308 ;;		line 39 in file "SIO.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  tecla           1    wreg     char 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  tecla           1    5[COMRAM] char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/1
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1
  2322 ;;      Params:         0       0       0
  2323 ;;      Locals:         1       0       0
  2324 ;;      Temps:          0       0       0
  2325 ;;      Totals:         1       0       0
  2326 ;;Total ram usage:        1 bytes
  2327 ;; Hardware stack levels used: 1
  2328 ;; Hardware stack levels required when called: 2
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_motorJoc
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text8
  2337  0000'                    __ptext8:
  2338                           	callstack 0
  2339  0000'                    _SIONovaTecla:
  2340                           	callstack 27
  2341                           
  2342                           ;incstack = 0
  2343                           ;SIONovaTecla@tecla stored from wreg
  2344  0000' 6E00'              	movwf	SIONovaTecla@tecla^0,c
  2345                           
  2346                           ;SIO.c: 40:     novaTeclaSIO = tecla;
  2347  0002' C005' F001'        	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2348  0006' 0012               	return		;funcret
  2349  0008'                    __end_of_SIONovaTecla:
  2350                           	callstack 0
  2351                           
  2352 ;; *************** function _SIONovaDireccio *****************
  2353 ;; Defined at:
  2354 ;;		line 28 in file "SIO.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  num             1    wreg     unsigned char 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  num             1    5[COMRAM] unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/1
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1
  2368 ;;      Params:         0       0       0
  2369 ;;      Locals:         1       0       0
  2370 ;;      Temps:          0       0       0
  2371 ;;      Totals:         1       0       0
  2372 ;;Total ram usage:        1 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 2
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_motorJoc
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text9
  2383  0000'                    __ptext9:
  2384                           	callstack 0
  2385  0000'                    _SIONovaDireccio:
  2386                           	callstack 27
  2387                           
  2388                           ;incstack = 0
  2389                           ;SIONovaDireccio@num stored from wreg
  2390  0000' 6E00'              	movwf	SIONovaDireccio@num^0,c
  2391                           
  2392                           ;SIO.c: 29:     direccioSIO = num;
  2393  0002' C005' F002'        	movff	SIONovaDireccio@num,_direccioSIO
  2394  0006' 0012               	return		;funcret
  2395  0008'                    __end_of_SIONovaDireccio:
  2396                           	callstack 0
  2397                           
  2398 ;; *************** function _HnoJugant *****************
  2399 ;; Defined at:
  2400 ;;		line 34 in file "Hora.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		None
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/1
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1
  2414 ;;      Params:         0       0       0
  2415 ;;      Locals:         0       0       0
  2416 ;;      Temps:          0       0       0
  2417 ;;      Totals:         0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 2
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_motorJoc
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text10
  2429  0000'                    __ptext10:
  2430                           	callstack 0
  2431  0000'                    _HnoJugant:
  2432                           	callstack 27
  2433                           
  2434                           ;Hora.c: 35:     jugant = 0;
  2435                           
  2436                           ;incstack = 0
  2437  0000' 9000'              	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2438  0002' 0012               	return		;funcret
  2439  0004'                    __end_of_HnoJugant:
  2440                           	callstack 0
  2441                           
  2442 ;; *************** function _HNouSegon *****************
  2443 ;; Defined at:
  2444 ;;		line 22 in file "Hora.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;		None               void
  2451 ;; Registers used:
  2452 ;;		status,0
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/1
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1
  2458 ;;      Params:         0       0       0
  2459 ;;      Locals:         0       0       0
  2460 ;;      Temps:          0       0       0
  2461 ;;      Totals:         0       0       0
  2462 ;;Total ram usage:        0 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 2
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_motorJoc
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text11
  2473  0000'                    __ptext11:
  2474                           	callstack 0
  2475  0000'                    _HNouSegon:
  2476                           	callstack 27
  2477                           
  2478                           ;Hora.c: 23:     return nouSegon;
  2479                           
  2480                           ;incstack = 0
  2481  0000' B000'              	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2482  0002' D002               	goto	l2353
  2483  0004' 90D8               	bcf	status,0,c
  2484  0006' 0012               	return	
  2485  0008'                    l2353:
  2486  0008' 80D8               	bsf	status,0,c
  2487  000A' 0012               	return		;funcret
  2488  000C'                    __end_of_HNouSegon:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _HJugant *****************
  2492 ;; Defined at:
  2493 ;;		line 37 in file "Hora.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		None
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/1
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1
  2507 ;;      Params:         0       0       0
  2508 ;;      Locals:         0       0       0
  2509 ;;      Temps:          0       0       0
  2510 ;;      Totals:         0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 2
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_motorJoc
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text12
  2522  0000'                    __ptext12:
  2523                           	callstack 0
  2524  0000'                    _HJugant:
  2525                           	callstack 27
  2526                           
  2527                           ;Hora.c: 38:     jugant = 1;
  2528                           
  2529                           ;incstack = 0
  2530  0000' 8000'              	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2531                           
  2532                           ;Hora.c: 39:     tempsAcabat = 0;
  2533  0002' 9000'              	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2534  0004' 0012               	return		;funcret
  2535  0006'                    __end_of_HJugant:
  2536                           	callstack 0
  2537                           
  2538 ;; *************** function _HGetTime *****************
  2539 ;; Defined at:
  2540 ;;		line 30 in file "Hora.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      PTR unsigned char 
  2547 ;; Registers used:
  2548 ;;		wreg
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/1
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1
  2554 ;;      Params:         2       0       0
  2555 ;;      Locals:         0       0       0
  2556 ;;      Temps:          0       0       0
  2557 ;;      Totals:         2       0       0
  2558 ;;Total ram usage:        2 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; Hardware stack levels required when called: 2
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_motorJoc
  2565 ;;		_motorSIO
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text13
  2570  0000'                    __ptext13:
  2571                           	callstack 0
  2572  0000'                    _HGetTime:
  2573                           	callstack 27
  2574                           
  2575                           ;Hora.c: 31:     return hora;
  2576                           
  2577                           ;incstack = 0
  2578  0000' 0E00'              	movlw	_hora& (0+255)
  2579  0002' 0012               	return		;funcret
  2580  0004'                    __end_of_HGetTime:
  2581                           	callstack 0
  2582                           
  2583 ;; *************** function _HClearNouSegon *****************
  2584 ;; Defined at:
  2585 ;;		line 26 in file "Hora.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		None
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/1
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1
  2599 ;;      Params:         0       0       0
  2600 ;;      Locals:         0       0       0
  2601 ;;      Temps:          0       0       0
  2602 ;;      Totals:         0       0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used: 1
  2605 ;; Hardware stack levels required when called: 2
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_motorJoc
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text14
  2614  0000'                    __ptext14:
  2615                           	callstack 0
  2616  0000'                    _HClearNouSegon:
  2617                           	callstack 27
  2618                           
  2619                           ;Hora.c: 27:     nouSegon = 0;
  2620                           
  2621                           ;incstack = 0
  2622  0000' 9000'              	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2623  0002' 0012               	return		;funcret
  2624  0004'                    __end_of_HClearNouSegon:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function _motorHora *****************
  2628 ;; Defined at:
  2629 ;;		line 45 in file "Hora.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/1
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1
  2643 ;;      Params:         0       0       0
  2644 ;;      Locals:         0       0       0
  2645 ;;      Temps:          2       0       0
  2646 ;;      Totals:         2       0       0
  2647 ;;Total ram usage:        2 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; Hardware stack levels required when called: 3
  2650 ;; This function calls:
  2651 ;;		_TiGetTics
  2652 ;;		_TiResetTics
  2653 ;;		_playAltaveu
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text15
  2660  0000'                    __ptext15:
  2661                           	callstack 0
  2662  0000'                    _motorHora:
  2663                           	callstack 27
  2664                           
  2665                           ;Hora.c: 46:  static char state = 0;;Hora.c: 48:  switch(state) {
  2666                           
  2667                           ;incstack = 0
  2668  0000' D042               	goto	l5111
  2669  0002'                    l5061:
  2670                           
  2671                           ;Hora.c: 50:    if (TiGetTics(timerHora) >= 1205) {
  2672  0002' 5000'              	movf	_timerHora^0,w,c
  2673  0004' EC00' F000'        	call	_TiGetTics
  2674  0008' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  2675  000A' 0012               	return	
  2676  000C' 0EB5               	movlw	181
  2677  000E' 5C00'              	subwf	?_TiGetTics^0,w,c
  2678  0010' 0E04               	movlw	4
  2679  0012' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  2680  0014' A0D8               	btfss	status,0,c
  2681  0016' 0012               	return	
  2682                           
  2683                           ;Hora.c: 51:     TiResetTics(timerHora);
  2684  0018' 5000'              	movf	_timerHora^0,w,c
  2685  001A' EC00' F000'        	call	_TiResetTics
  2686                           
  2687                           ;Hora.c: 52:     if(jugant){
  2688  001E' A000'              	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2689  0020' D02F               	goto	l5107
  2690                           
  2691                           ;Hora.c: 53:       nouSegon = 1;
  2692  0022' 8000'              	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2693                           
  2694                           ;Hora.c: 55:      hora[4]--;
  2695  0024' 0600'              	decf	(_hora+4)^0,f,c
  2696                           
  2697                           ;Hora.c: 56:      if(hora[4] == ('0'-1)){
  2698  0026' 0E2F               	movlw	47
  2699  0028' 1800'              	xorwf	(_hora+4)^0,w,c
  2700  002A' A4D8               	btfss	status,2,c
  2701  002C' D003               	goto	l5077
  2702                           
  2703                           ;Hora.c: 57:       hora[4] = '9';
  2704  002E' 0E39               	movlw	57
  2705  0030' 6E00'              	movwf	(_hora+4)^0,c
  2706                           
  2707                           ;Hora.c: 58:       hora[3]--;
  2708  0032' 0600'              	decf	(_hora+3)^0,f,c
  2709  0034'                    l5077:
  2710                           
  2711                           ;Hora.c: 61:      if(hora[3] == ('0'-1)){
  2712  0034' 0E2F               	movlw	47
  2713  0036' 1800'              	xorwf	(_hora+3)^0,w,c
  2714  0038' A4D8               	btfss	status,2,c
  2715  003A' D003               	goto	l5083
  2716                           
  2717                           ;Hora.c: 62:       hora[3] = '5';
  2718  003C' 0E35               	movlw	53
  2719  003E' 6E00'              	movwf	(_hora+3)^0,c
  2720                           
  2721                           ;Hora.c: 63:       hora[1]--;
  2722  0040' 0600'              	decf	(_hora+1)^0,f,c
  2723  0042'                    l5083:
  2724                           
  2725                           ;Hora.c: 66:      if(hora[1] == ('0'-1)){
  2726  0042' 0E2F               	movlw	47
  2727  0044' 1800'              	xorwf	(_hora+1)^0,w,c
  2728  0046' A4D8               	btfss	status,2,c
  2729  0048' D003               	goto	l5089
  2730                           
  2731                           ;Hora.c: 67:       hora[1] = '9';
  2732  004A' 0E39               	movlw	57
  2733  004C' 6E00'              	movwf	(_hora+1)^0,c
  2734                           
  2735                           ;Hora.c: 68:       hora[0]--;
  2736  004E' 0600'              	decf	_hora^0,f,c
  2737  0050'                    l5089:
  2738                           
  2739                           ;Hora.c: 71:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2740  0050' 0E30               	movlw	48
  2741  0052' 1800'              	xorwf	_hora^0,w,c
  2742  0054' A4D8               	btfss	status,2,c
  2743  0056' D00C               	goto	l5099
  2744  0058' 0E30               	movlw	48
  2745  005A' 1800'              	xorwf	(_hora+1)^0,w,c
  2746  005C' A4D8               	btfss	status,2,c
  2747  005E' D008               	goto	l5099
  2748  0060' 0E30               	movlw	48
  2749  0062' 1800'              	xorwf	(_hora+3)^0,w,c
  2750  0064' A4D8               	btfss	status,2,c
  2751  0066' D004               	goto	l5099
  2752  0068' 0E30               	movlw	48
  2753  006A' 1800'              	xorwf	(_hora+4)^0,w,c
  2754  006C' B4D8               	btfsc	status,2,c
  2755                           
  2756                           ;Hora.c: 72:       tempsAcabat = 1;
  2757  006E' 8000'              	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2758  0070'                    l5099:
  2759                           
  2760                           ;Hora.c: 75:      segons++;
  2761  0070' 2A00'              	incf	_segons^0,f,c
  2762                           
  2763                           ;Hora.c: 76:      if(segons > 59){
  2764  0072' 0E3B               	movlw	59
  2765  0074' 6400'              	cpfsgt	_segons^0,c
  2766  0076' D004               	goto	l5107
  2767                           
  2768                           ;Hora.c: 77:       playAltaveu();
  2769  0078' EC00' F000'        	call	_playAltaveu	;wreg free
  2770                           
  2771                           ;Hora.c: 78:       segons = 0;
  2772  007C' 0E00               	movlw	0
  2773  007E' 6E00'              	movwf	_segons^0,c
  2774  0080'                    l5107:
  2775                           
  2776                           ;Hora.c: 81:     state = 0;
  2777  0080' 0E00               	movlw	0
  2778  0082' 6E00'              	movwf	motorHora@state^0,c
  2779  0084' 0012               	return	
  2780  0086'                    l5111:
  2781  0086' 5000'              	movf	motorHora@state^0,w,c
  2782  0088' 6E00'              	movwf	??_motorHora^0,c
  2783  008A' 6A00'              	clrf	(??_motorHora+1)^0,c
  2784                           
  2785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2786                           ; Switch size 1, requested type "simple"
  2787                           ; Number of cases is 1, Range of values is 0 to 0
  2788                           ; switch strategies available:
  2789                           ; Name         Instructions Cycles
  2790                           ; simple_byte            4     3 (average)
  2791                           ;	Chosen strategy is simple_byte
  2792  008C' 5000'              	movf	(??_motorHora+1)^0,w,c
  2793  008E' 0A00               	xorlw	0	; case 0
  2794  0090' A4D8               	btfss	status,2,c
  2795  0092' 0012               	return	
  2796                           
  2797                           ; Switch size 1, requested type "simple"
  2798                           ; Number of cases is 1, Range of values is 0 to 0
  2799                           ; switch strategies available:
  2800                           ; Name         Instructions Cycles
  2801                           ; simple_byte            4     3 (average)
  2802                           ;	Chosen strategy is simple_byte
  2803  0094' 5000'              	movf	??_motorHora^0,w,c
  2804  0096' 0A00               	xorlw	0	; case 0
  2805  0098' A4D8               	btfss	status,2,c
  2806  009A' 0012               	return	
  2807  009C' D7B2               	goto	l5061
  2808  009E'                    __end_of_motorHora:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function _playAltaveu *****************
  2812 ;; Defined at:
  2813 ;;		line 14 in file "Altaveu.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		None
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/1
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1
  2827 ;;      Params:         0       0       0
  2828 ;;      Locals:         0       0       0
  2829 ;;      Temps:          0       0       0
  2830 ;;      Totals:         0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 2
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_motorHora
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text16
  2842  0000'                    __ptext16:
  2843                           	callstack 0
  2844  0000'                    _playAltaveu:
  2845                           	callstack 27
  2846                           
  2847                           ;Altaveu.c: 15:     reproduir = 1;
  2848                           
  2849                           ;incstack = 0
  2850  0000' 8000'              	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2851  0002' 0012               	return		;funcret
  2852  0004'                    __end_of_playAltaveu:
  2853                           	callstack 0
  2854                           
  2855 ;; *************** function _motorAltaveu *****************
  2856 ;; Defined at:
  2857 ;;		line 17 in file "Altaveu.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/1
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1
  2871 ;;      Params:         0       0       0
  2872 ;;      Locals:         0       0       0
  2873 ;;      Temps:          3       0       0
  2874 ;;      Totals:         3       0       0
  2875 ;;Total ram usage:        3 bytes
  2876 ;; Hardware stack levels used: 1
  2877 ;; Hardware stack levels required when called: 3
  2878 ;; This function calls:
  2879 ;;		_TiGetTics
  2880 ;;		_TiResetTics
  2881 ;; This function is called by:
  2882 ;;		_main
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text17
  2887  0000'                    __ptext17:
  2888                           	callstack 0
  2889  0000'                    _motorAltaveu:
  2890                           	callstack 27
  2891                           
  2892                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  2893                           
  2894                           ;incstack = 0
  2895  0000' D048               	goto	l5693
  2896  0002'                    l882:
  2897                           
  2898                           ;Altaveu.c: 22:    if (reproduir) {
  2899  0002' A000'              	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2900  0004' 0012               	return	
  2901                           
  2902                           ;Altaveu.c: 23:     nota = 1;
  2903  0006' 0E01               	movlw	1
  2904  0008' 6E00'              	movwf	_nota^0,c
  2905                           
  2906                           ;Altaveu.c: 24:     copsNota = 0;
  2907  000A' 0E00               	movlw	0
  2908  000C' 6E00'              	movwf	_copsNota^0,c
  2909                           
  2910                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  2911  000E' 5000'              	movf	_timerAltaveu^0,w,c
  2912  0010' EC00' F000'        	call	_TiResetTics
  2913  0014'                    l5657:
  2914                           
  2915                           ;Altaveu.c: 26:     state = 1;
  2916  0014' 0E01               	movlw	1
  2917  0016' 6E00'              	movwf	motorAltaveu@state^0,c
  2918  0018' 0012               	return	
  2919  001A'                    l5659:
  2920                           
  2921                           ;Altaveu.c: 30:    if (nota > 5) {
  2922  001A' 0E05               	movlw	5
  2923  001C' 6400'              	cpfsgt	_nota^0,c
  2924  001E' D004               	goto	l5665
  2925                           
  2926                           ;Altaveu.c: 31:     reproduir = 0;
  2927  0020' 9000'              	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2928                           
  2929                           ;Altaveu.c: 32:     state = 0;
  2930  0022' 0E00               	movlw	0
  2931  0024' 6E00'              	movwf	motorAltaveu@state^0,c
  2932                           
  2933                           ;Altaveu.c: 33:    }
  2934  0026' 0012               	return	
  2935  0028'                    l5665:
  2936  0028' 0EA8               	movlw	168
  2937  002A' 1800'              	xorwf	_copsNota^0,w,c
  2938  002C' A4D8               	btfss	status,2,c
  2939  002E' D004               	goto	l5673
  2940                           
  2941                           ;Altaveu.c: 35:     nota++;
  2942  0030' 2A00'              	incf	_nota^0,f,c
  2943                           
  2944                           ;Altaveu.c: 36:     copsNota = 0;
  2945  0032' 0E00               	movlw	0
  2946  0034' 6E00'              	movwf	_copsNota^0,c
  2947  0036' D7EE               	goto	l5657
  2948  0038'                    l5673:
  2949  0038' 5000'              	movf	_timerAltaveu^0,w,c
  2950  003A' EC00' F000'        	call	_TiGetTics
  2951  003E' 5000'              	movf	_nota^0,w,c
  2952  0040' 6E00'              	movwf	??_motorAltaveu^0,c
  2953  0042' 6A00'              	clrf	(??_motorAltaveu+1)^0,c
  2954  0044' 5000'              	movf	?_TiGetTics^0,w,c
  2955  0046' 5C00'              	subwf	??_motorAltaveu^0,w,c
  2956  0048' 5000'              	movf	(??_motorAltaveu+1)^0,w,c
  2957  004A' 0A80               	xorlw	128
  2958  004C' 6E00'              	movwf	(??_motorAltaveu+2)^0,c
  2959  004E' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  2960  0050' 0A80               	xorlw	128
  2961  0052' 5800'              	subwfb	(??_motorAltaveu+2)^0,w,c
  2962  0054' B0D8               	btfsc	status,0,c
  2963  0056' 0012               	return	
  2964                           
  2965                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  2966  0058' 808A               	bsf	138,0,c	;volatile
  2967                           
  2968                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  2969  005A' 5000'              	movf	_timerAltaveu^0,w,c
  2970  005C' EC00' F000'        	call	_TiResetTics
  2971                           
  2972                           ;Altaveu.c: 42:     state = 2;
  2973  0060' 0E02               	movlw	2
  2974  0062' 6E00'              	movwf	motorAltaveu@state^0,c
  2975  0064' 0012               	return	
  2976  0066'                    l5681:
  2977                           
  2978                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  2979  0066' 5000'              	movf	_timerAltaveu^0,w,c
  2980  0068' EC00' F000'        	call	_TiGetTics
  2981  006C' 5000'              	movf	_nota^0,w,c
  2982  006E' 6E00'              	movwf	??_motorAltaveu^0,c
  2983  0070' 6A00'              	clrf	(??_motorAltaveu+1)^0,c
  2984  0072' 5000'              	movf	?_TiGetTics^0,w,c
  2985  0074' 5C00'              	subwf	??_motorAltaveu^0,w,c
  2986  0076' 5000'              	movf	(??_motorAltaveu+1)^0,w,c
  2987  0078' 0A80               	xorlw	128
  2988  007A' 6E00'              	movwf	(??_motorAltaveu+2)^0,c
  2989  007C' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  2990  007E' 0A80               	xorlw	128
  2991  0080' 5800'              	subwfb	(??_motorAltaveu+2)^0,w,c
  2992  0082' B0D8               	btfsc	status,0,c
  2993  0084' 0012               	return	
  2994                           
  2995                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  2996  0086' 908A               	bcf	138,0,c	;volatile
  2997                           
  2998                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  2999  0088' 5000'              	movf	_timerAltaveu^0,w,c
  3000  008A' EC00' F000'        	call	_TiResetTics
  3001                           
  3002                           ;Altaveu.c: 49:     copsNota++;
  3003  008E' 2A00'              	incf	_copsNota^0,f,c
  3004  0090' D7C1               	goto	l5657
  3005  0092'                    l5693:
  3006  0092' 5000'              	movf	motorAltaveu@state^0,w,c
  3007  0094' 6E00'              	movwf	??_motorAltaveu^0,c
  3008  0096' 6A00'              	clrf	(??_motorAltaveu+1)^0,c
  3009                           
  3010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3011                           ; Switch size 1, requested type "simple"
  3012                           ; Number of cases is 1, Range of values is 0 to 0
  3013                           ; switch strategies available:
  3014                           ; Name         Instructions Cycles
  3015                           ; simple_byte            4     3 (average)
  3016                           ;	Chosen strategy is simple_byte
  3017  0098' 5000'              	movf	(??_motorAltaveu+1)^0,w,c
  3018  009A' 0A00               	xorlw	0	; case 0
  3019  009C' A4D8               	btfss	status,2,c
  3020  009E' 0012               	return	
  3021                           
  3022                           ; Switch size 1, requested type "simple"
  3023                           ; Number of cases is 3, Range of values is 0 to 2
  3024                           ; switch strategies available:
  3025                           ; Name         Instructions Cycles
  3026                           ; simple_byte           10     6 (average)
  3027                           ;	Chosen strategy is simple_byte
  3028  00A0' 5000'              	movf	??_motorAltaveu^0,w,c
  3029  00A2' 0A00               	xorlw	0	; case 0
  3030  00A4' B4D8               	btfsc	status,2,c
  3031  00A6' D7AD               	goto	l882
  3032  00A8' 0A01               	xorlw	1	; case 1
  3033  00AA' B4D8               	btfsc	status,2,c
  3034  00AC' D7B6               	goto	l5659
  3035  00AE' 0A03               	xorlw	3	; case 2
  3036  00B0' A4D8               	btfss	status,2,c
  3037  00B2' 0012               	return	
  3038  00B4' D7D8               	goto	l5681
  3039  00B6'                    __end_of_motorAltaveu:
  3040                           	callstack 0
  3041                           
  3042 ;; *************** function _menu *****************
  3043 ;; Defined at:
  3044 ;;		line 40 in file "Menu.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;		None
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/1
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1
  3058 ;;      Params:         0       0       0
  3059 ;;      Locals:         0       0       0
  3060 ;;      Temps:          0       5       0
  3061 ;;      Totals:         0       5       0
  3062 ;;Total ram usage:        5 bytes
  3063 ;; Hardware stack levels used: 1
  3064 ;; Hardware stack levels required when called: 6
  3065 ;; This function calls:
  3066 ;;		_CToAConverteix
  3067 ;;		_CToAHaAcabat
  3068 ;;		_CToAobtenir
  3069 ;;		_GLCDMostraMenu
  3070 ;;		_HActualitzaHora
  3071 ;;		_JJuguem
  3072 ;;		_JendGame
  3073 ;;		_JnovaDireccio
  3074 ;;		_JnovaTecla
  3075 ;;		_LcClear
  3076 ;;		_LcGotoXY
  3077 ;;		_LcLliure
  3078 ;;		_LcNewString
  3079 ;;		_LcPutChar
  3080 ;;		_LcScroll
  3081 ;;		_NoFerMenu
  3082 ;;		_SIOHaAcabatPuntuacions
  3083 ;;		_SMSoff
  3084 ;;		_SMSon
  3085 ;;		_SiFerMenu
  3086 ;;		_TiGetTics
  3087 ;;		_TiResetTics
  3088 ;;		_URegister
  3089 ;;		_UcheckExists
  3090 ;;		_UcheckExistsGetError
  3091 ;;		_UcheckExistsNotFinished
  3092 ;;		_UenviaChar
  3093 ;;		_UenviaPas
  3094 ;;		_UgetNumUsuaris
  3095 ;;		_UgetScore
  3096 ;;		_UgetTop5
  3097 ;;		_UgetUserName
  3098 ;;		_UshowUsersCalculat
  3099 ;;		_calculateShowUsers
  3100 ;;		_checkHoraAcabat
  3101 ;;		_getArrayShowUsers
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text18
  3108  0000'                    __ptext18:
  3109                           	callstack 0
  3110  0000'                    _menu:
  3111                           	callstack 24
  3112                           
  3113                           ;Menu.c: 41:  static char state = 0;;Menu.c: 43:  switch(state) {
  3114                           
  3115                           ;incstack = 0
  3116  0000' D396               	goto	l6879
  3117  0002'                    l6353:
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;Menu.c: 45:    LcClear();
  3121  0002' EC00' F000'        	call	_LcClear	;wreg free
  3122                           
  3123                           ;Menu.c: 46:    LcNewString("1.LOGIN");
  3124  0006' 0E00'              	movlw	low STR_1
  3125  0008' 6E00'              	movwf	LcNewString@new_s^0,c
  3126  000A' 5000'              	movf	LcNewString@new_s^0,w,c
  3127  000C' A4D8               	btfss	status,2,c
  3128  000E' 0E00'              	movlw	high __smallconst
  3129  0010' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3130  0012' EC00' F000'        	call	_LcNewString	;wreg free
  3131                           
  3132                           ;Menu.c: 47:    state = 1;
  3133  0016' 0E01               	movlw	1
  3134  0018' 6E00'              	movwf	menu@state^0,c
  3135                           
  3136                           ;Menu.c: 48:   break;
  3137  001A' 0012               	return	
  3138  001C'                    l6359:
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;Menu.c: 50:    if (LcLliure()) {
  3142  001C' EC00' F000'        	call	_LcLliure	;wreg free
  3143  0020' A0D8               	btfss	status,0,c
  3144  0022' 0012               	return	
  3145                           
  3146                           ;Menu.c: 51:     LcGotoXY(0,1);
  3147  0024' 0E01               	movlw	1
  3148  0026' 6E00'              	movwf	LcGotoXY@Row^0,c
  3149  0028' 0E00               	movlw	0
  3150  002A' EC00' F000'        	call	_LcGotoXY
  3151                           
  3152                           ;Menu.c: 52:     LcNewString("2.REGISTER");
  3153  002E' 0E00'              	movlw	low STR_2
  3154  0030' 6E00'              	movwf	LcNewString@new_s^0,c
  3155  0032' 5000'              	movf	LcNewString@new_s^0,w,c
  3156  0034' A4D8               	btfss	status,2,c
  3157  0036' 0E00'              	movlw	high __smallconst
  3158  0038' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3159  003A' EC00' F000'        	call	_LcNewString	;wreg free
  3160                           
  3161                           ;Menu.c: 53:     NovaTecla = -1;
  3162  003E' 6800'              	setf	_NovaTecla^0,c
  3163                           
  3164                           ;Menu.c: 54:     state = 2;
  3165  0040' 0E02               	movlw	2
  3166  0042' 6E00'              	movwf	menu@state^0,c
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;Menu.c: 56:   break;
  3170                           
  3171                           ;Menu.c: 55:    }
  3172  0044' 0012               	return	
  3173  0046'                    l6369:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;Menu.c: 58:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  3177  0046' 0400'              	decf	_NovaTecla^0,w,c
  3178  0048' A4D8               	btfss	status,2,c
  3179  004A' D009               	goto	l6377
  3180                           
  3181                           ; BSR set to: 0
  3182  004C' EC00' F000'        	call	_UgetNumUsuaris	;wreg free
  3183  0050' 0900               	iorlw	0
  3184  0052' B4D8               	btfsc	status,2,c
  3185  0054' D004               	goto	l6377
  3186                           
  3187                           ;Menu.c: 59:     loginNOTRegister = 1;
  3188  0056' 8000'              	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3189  0058'                    l6375:
  3190                           
  3191                           ;Menu.c: 60:     state = 3;
  3192  0058' 0E03               	movlw	3
  3193  005A' 6E00'              	movwf	menu@state^0,c
  3194                           
  3195                           ;Menu.c: 61:    }
  3196  005C' 0012               	return	
  3197  005E'                    l6377:
  3198  005E' 0E02               	movlw	2
  3199  0060' 1800'              	xorwf	_NovaTecla^0,w,c
  3200  0062' A4D8               	btfss	status,2,c
  3201  0064' 0012               	return	
  3202                           
  3203                           ;Menu.c: 63:     loginNOTRegister = 0;
  3204  0066' 9000'              	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3205  0068' D7F7               	goto	l6375
  3206  006A'                    l513:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;Menu.c: 68:    NovaTecla = -1;
  3210  006A' 6800'              	setf	_NovaTecla^0,c
  3211                           
  3212                           ;Menu.c: 69:    novaLletra = -1;
  3213  006C' 6800'              	setf	_novaLletra^0,c
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;Menu.c: 70:    LcClear();
  3217  006E' EC00' F000'        	call	_LcClear	;wreg free
  3218                           
  3219                           ;Menu.c: 71:    LcNewString("USER: ");
  3220  0072' 0E00'              	movlw	low STR_3
  3221  0074' 6E00'              	movwf	LcNewString@new_s^0,c
  3222  0076' 5000'              	movf	LcNewString@new_s^0,w,c
  3223  0078' A4D8               	btfss	status,2,c
  3224  007A' 0E00'              	movlw	high __smallconst
  3225  007C' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3226  007E' EC00' F000'        	call	_LcNewString	;wreg free
  3227                           
  3228                           ;Menu.c: 72:    state = 4;
  3229  0082' 0E04               	movlw	4
  3230  0084' 6E00'              	movwf	menu@state^0,c
  3231                           
  3232                           ;Menu.c: 73:   break;
  3233  0086' 0012               	return	
  3234  0088'                    l6389:
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;Menu.c: 75:    if (LcLliure()) {
  3238  0088' EC00' F000'        	call	_LcLliure	;wreg free
  3239  008C' A0D8               	btfss	status,0,c
  3240  008E' 0012               	return	
  3241                           
  3242                           ;Menu.c: 76:     LcGotoXY(0,1);
  3243  0090' 0E01               	movlw	1
  3244  0092' 6E00'              	movwf	LcGotoXY@Row^0,c
  3245  0094' 0E00               	movlw	0
  3246  0096' EC00' F000'        	call	_LcGotoXY
  3247                           
  3248                           ;Menu.c: 77:     LcNewString("PSWD: ");
  3249  009A' 0E00'              	movlw	low STR_4
  3250  009C' 6E00'              	movwf	LcNewString@new_s^0,c
  3251  009E' 5000'              	movf	LcNewString@new_s^0,w,c
  3252  00A0' A4D8               	btfss	status,2,c
  3253  00A2' 0E00'              	movlw	high __smallconst
  3254  00A4' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3255  00A6' EC00' F000'        	call	_LcNewString	;wreg free
  3256                           
  3257                           ;Menu.c: 78:     state = 5;
  3258  00AA' 0E05               	movlw	5
  3259  00AC' 6E00'              	movwf	menu@state^0,c
  3260  00AE' 0012               	return	
  3261  00B0'                    l6397:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;Menu.c: 82:    if (LcLliure()) {
  3265  00B0' EC00' F000'        	call	_LcLliure	;wreg free
  3266  00B4' A0D8               	btfss	status,0,c
  3267  00B6' 0012               	return	
  3268                           
  3269                           ;Menu.c: 83:     LcGotoXY(6,0);
  3270  00B8' 0E00               	movlw	0
  3271  00BA' 6E00'              	movwf	LcGotoXY@Row^0,c
  3272  00BC' 0E06               	movlw	6
  3273  00BE' EC00' F000'        	call	_LcGotoXY
  3274                           
  3275                           ;Menu.c: 84:     SMSon();
  3276  00C2' EC00' F000'        	call	_SMSon	;wreg free
  3277                           
  3278                           ;Menu.c: 85:     tmp =0;
  3279  00C6' 0E00               	movlw	0
  3280  00C8' 6E00'              	movwf	_tmp^0,c
  3281  00CA'                    l6405:
  3282                           
  3283                           ;Menu.c: 86:     state = 6;
  3284  00CA' 0E06               	movlw	6
  3285  00CC' 6E00'              	movwf	menu@state^0,c
  3286  00CE' 0012               	return	
  3287  00D0'                    l6407:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;Menu.c: 90:    if (novaLletra > 31 && NovaTecla != 10) {
  3291  00D0' 5000'              	movf	_novaLletra^0,w,c
  3292  00D2' 0A80               	xorlw	128
  3293  00D4' 0F60               	addlw	-160
  3294  00D6' A0D8               	btfss	status,0,c
  3295  00D8' D00F               	goto	l6417
  3296                           
  3297                           ; BSR set to: 0
  3298  00DA' 0E0A               	movlw	10
  3299  00DC' 1800'              	xorwf	_NovaTecla^0,w,c
  3300  00DE' B4D8               	btfsc	status,2,c
  3301  00E0' D00B               	goto	l6417
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;Menu.c: 91:     LcPutChar(novaLletra);
  3305  00E2' 5000'              	movf	_novaLletra^0,w,c
  3306  00E4' EC00' F000'        	call	_LcPutChar
  3307                           
  3308                           ;Menu.c: 92:     UenviaChar(novaLletra,tmp);
  3309  00E8' C033' F005'        	movff	_tmp,UenviaChar@pos
  3310  00EC' 5000'              	movf	_novaLletra^0,w,c
  3311  00EE' EC00' F000'        	call	_UenviaChar
  3312  00F2'                    l6415:
  3313                           
  3314                           ;Menu.c: 93:     state = 7;
  3315  00F2' 0E07               	movlw	7
  3316  00F4' 6E00'              	movwf	menu@state^0,c
  3317                           
  3318                           ;Menu.c: 94:    }
  3319  00F6' 0012               	return	
  3320  00F8'                    l6417:
  3321                           
  3322                           ; BSR set to: 0
  3323  00F8' 0E0B               	movlw	11
  3324  00FA' 1800'              	xorwf	_NovaTecla^0,w,c
  3325  00FC' A4D8               	btfss	status,2,c
  3326  00FE' 0012               	return	
  3327  0100' D7F8               	goto	l6415
  3328  0102'                    l6421:
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;Menu.c: 100:    if (tmp != 7 && NovaTecla != 11) {
  3332  0102' 0E07               	movlw	7
  3333  0104' 1800'              	xorwf	_tmp^0,w,c
  3334  0106' B4D8               	btfsc	status,2,c
  3335  0108' D008               	goto	l6433
  3336                           
  3337                           ; BSR set to: 0
  3338  010A' 0E0B               	movlw	11
  3339  010C' 1800'              	xorwf	_NovaTecla^0,w,c
  3340  010E' B4D8               	btfsc	status,2,c
  3341  0110' D004               	goto	l6433
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;Menu.c: 101:     tmp++;
  3345  0112' 2A00'              	incf	_tmp^0,f,c
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;Menu.c: 102:     NovaTecla = -1;
  3349  0114' 6800'              	setf	_NovaTecla^0,c
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;Menu.c: 103:     novaLletra = -1;
  3353  0116' 6800'              	setf	_novaLletra^0,c
  3354  0118' D7D8               	goto	l6405
  3355  011A'                    l6433:
  3356                           
  3357                           ; BSR set to: 0
  3358  011A' 0E07               	movlw	7
  3359  011C' 1800'              	xorwf	_tmp^0,w,c
  3360  011E' B4D8               	btfsc	status,2,c
  3361  0120' D004               	goto	u6470
  3362                           
  3363                           ; BSR set to: 0
  3364  0122' 0E0B               	movlw	11
  3365  0124' 1800'              	xorwf	_NovaTecla^0,w,c
  3366  0126' A4D8               	btfss	status,2,c
  3367  0128' 0012               	return	
  3368  012A'                    u6470:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;Menu.c: 107:     LcGotoXY(6,1);
  3372  012A' 0E01               	movlw	1
  3373  012C' 6E00'              	movwf	LcGotoXY@Row^0,c
  3374  012E' 0E06               	movlw	6
  3375  0130' EC00' F000'        	call	_LcGotoXY
  3376                           
  3377                           ;Menu.c: 108:     UenviaChar('\0',tmp);
  3378  0134' C033' F005'        	movff	_tmp,UenviaChar@pos
  3379  0138' 0E00               	movlw	0
  3380  013A' EC00' F000'        	call	_UenviaChar
  3381                           
  3382                           ;Menu.c: 109:     NovaTecla = -1;
  3383  013E' 6800'              	setf	_NovaTecla^0,c
  3384                           
  3385                           ;Menu.c: 110:     novaLletra = -1;
  3386  0140' 6800'              	setf	_novaLletra^0,c
  3387                           
  3388                           ;Menu.c: 111:     tmp = 0;
  3389  0142' 0E00               	movlw	0
  3390  0144' 6E00'              	movwf	_tmp^0,c
  3391  0146'                    l6447:
  3392                           
  3393                           ;Menu.c: 112:     state = 8;
  3394  0146' 0E08               	movlw	8
  3395  0148' 6E00'              	movwf	menu@state^0,c
  3396  014A' 0012               	return	
  3397  014C'                    l6449:
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;Menu.c: 116:    if (novaLletra > 31 && NovaTecla != 10) {
  3401  014C' 5000'              	movf	_novaLletra^0,w,c
  3402  014E' 0A80               	xorlw	128
  3403  0150' 0F60               	addlw	-160
  3404  0152' A0D8               	btfss	status,0,c
  3405  0154' D00F               	goto	l6459
  3406                           
  3407                           ; BSR set to: 0
  3408  0156' 0E0A               	movlw	10
  3409  0158' 1800'              	xorwf	_NovaTecla^0,w,c
  3410  015A' B4D8               	btfsc	status,2,c
  3411  015C' D00B               	goto	l6459
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;Menu.c: 117:     LcPutChar(novaLletra);
  3415  015E' 5000'              	movf	_novaLletra^0,w,c
  3416  0160' EC00' F000'        	call	_LcPutChar
  3417                           
  3418                           ;Menu.c: 118:     UenviaPas(novaLletra,tmp);
  3419  0164' C033' F005'        	movff	_tmp,UenviaPas@pos
  3420  0168' 5000'              	movf	_novaLletra^0,w,c
  3421  016A' EC00' F000'        	call	_UenviaPas
  3422  016E'                    l6457:
  3423                           
  3424                           ;Menu.c: 119:     state = 9;
  3425  016E' 0E09               	movlw	9
  3426  0170' 6E00'              	movwf	menu@state^0,c
  3427                           
  3428                           ;Menu.c: 120:    }
  3429  0172' 0012               	return	
  3430  0174'                    l6459:
  3431                           
  3432                           ; BSR set to: 0
  3433  0174' 0E0B               	movlw	11
  3434  0176' 1800'              	xorwf	_NovaTecla^0,w,c
  3435  0178' A4D8               	btfss	status,2,c
  3436  017A' 0012               	return	
  3437  017C' D7F8               	goto	l6457
  3438  017E'                    l6463:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;Menu.c: 126:    if (tmp != 7 && NovaTecla != 11) {
  3442  017E' 0E07               	movlw	7
  3443  0180' 1800'              	xorwf	_tmp^0,w,c
  3444  0182' B4D8               	btfsc	status,2,c
  3445  0184' D008               	goto	l6475
  3446                           
  3447                           ; BSR set to: 0
  3448  0186' 0E0B               	movlw	11
  3449  0188' 1800'              	xorwf	_NovaTecla^0,w,c
  3450  018A' B4D8               	btfsc	status,2,c
  3451  018C' D004               	goto	l6475
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;Menu.c: 127:     tmp++;
  3455  018E' 2A00'              	incf	_tmp^0,f,c
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;Menu.c: 128:     NovaTecla = -1;
  3459  0190' 6800'              	setf	_NovaTecla^0,c
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;Menu.c: 129:     novaLletra = -1;
  3463  0192' 6800'              	setf	_novaLletra^0,c
  3464  0194' D7D8               	goto	l6447
  3465  0196'                    l6475:
  3466                           
  3467                           ; BSR set to: 0
  3468  0196' 0E07               	movlw	7
  3469  0198' 1800'              	xorwf	_tmp^0,w,c
  3470  019A' B4D8               	btfsc	status,2,c
  3471  019C' D004               	goto	u6540
  3472                           
  3473                           ; BSR set to: 0
  3474  019E' 0E0B               	movlw	11
  3475  01A0' 1800'              	xorwf	_NovaTecla^0,w,c
  3476  01A2' A4D8               	btfss	status,2,c
  3477  01A4' 0012               	return	
  3478  01A6'                    u6540:
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;Menu.c: 133:     UenviaPas('\0',tmp);
  3482  01A6' C033' F005'        	movff	_tmp,UenviaPas@pos
  3483  01AA' 0E00               	movlw	0
  3484  01AC' EC00' F000'        	call	_UenviaPas
  3485                           
  3486                           ;Menu.c: 134:     NovaTecla = -1;
  3487  01B0' 6800'              	setf	_NovaTecla^0,c
  3488                           
  3489                           ;Menu.c: 135:     novaLletra = -1;
  3490  01B2' 6800'              	setf	_novaLletra^0,c
  3491                           
  3492                           ;Menu.c: 136:     tmp = 0;
  3493  01B4' 0E00               	movlw	0
  3494  01B6' 6E00'              	movwf	_tmp^0,c
  3495                           
  3496                           ;Menu.c: 137:     UcheckExists();
  3497  01B8' EC00' F000'        	call	_UcheckExists	;wreg free
  3498                           
  3499                           ;Menu.c: 138:     SMSoff();
  3500  01BC' EC00' F000'        	call	_SMSoff	;wreg free
  3501                           
  3502                           ;Menu.c: 139:     state = 10;
  3503  01C0' 0E0A               	movlw	10
  3504  01C2' 6E00'              	movwf	menu@state^0,c
  3505  01C4' 0012               	return	
  3506  01C6'                    l6493:
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;Menu.c: 143:    if (!UcheckExistsNotFinished()) {
  3510  01C6' EC00' F000'        	call	_UcheckExistsNotFinished	;wreg free
  3511  01CA' B0D8               	btfsc	status,0,c
  3512  01CC' 0012               	return	
  3513                           
  3514                           ;Menu.c: 144:     indexUsuari = UcheckExistsGetError();
  3515  01CE' EC00' F000'        	call	_UcheckExistsGetError	;wreg free
  3516  01D2' 6E00'              	movwf	_indexUsuari^0,c
  3517                           
  3518                           ;Menu.c: 145:     state = 11;
  3519  01D4' 0E0B               	movlw	11
  3520  01D6' 6E00'              	movwf	menu@state^0,c
  3521  01D8' 0012               	return	
  3522  01DA'                    l540:
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;Menu.c: 149:    if (!loginNOTRegister && indexUsuari == -1) {
  3526  01DA' B000'              	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3527  01DC' D008               	goto	l541
  3528                           
  3529                           ; BSR set to: 0
  3530  01DE' 2800'              	incf	_indexUsuari^0,w,c
  3531  01E0' A4D8               	btfss	status,2,c
  3532  01E2' D005               	goto	l541
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;Menu.c: 150:     URegister();
  3536  01E4' EC00' F000'        	call	_URegister	;wreg free
  3537  01E8'                    l6503:
  3538                           
  3539                           ;Menu.c: 151:     state = 0;
  3540  01E8' 0E00               	movlw	0
  3541  01EA' 6E00'              	movwf	menu@state^0,c
  3542                           
  3543                           ;Menu.c: 152:    }
  3544  01EC' 0012               	return	
  3545  01EE'                    l541:
  3546                           
  3547                           ; BSR set to: 0
  3548  01EE' B000'              	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3549                           
  3550                           ; BSR set to: 0
  3551  01F0' BE00'              	btfsc	_indexUsuari^0,7,c
  3552  01F2' D003               	goto	l543
  3553  01F4'                    u6590:
  3554                           
  3555                           ;Menu.c: 154:     state = 12;
  3556  01F4' 0E0C               	movlw	12
  3557  01F6' 6E00'              	movwf	menu@state^0,c
  3558                           
  3559                           ;Menu.c: 155:    }
  3560  01F8' 0012               	return	
  3561  01FA'                    l543:
  3562                           
  3563                           ; BSR set to: 0
  3564  01FA' A000'              	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3565  01FC' D003               	goto	u6610
  3566                           
  3567                           ; BSR set to: 0
  3568  01FE' 2800'              	incf	_indexUsuari^0,w,c
  3569  0200' B4D8               	btfsc	status,2,c
  3570  0202' D7F2               	goto	l6503
  3571  0204'                    u6610:
  3572                           
  3573                           ; BSR set to: 0
  3574  0204' B000'              	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3575  0206' D7F6               	goto	u6590
  3576                           
  3577                           ; BSR set to: 0
  3578  0208' AE00'              	btfss	_indexUsuari^0,7,c
  3579  020A' D7EE               	goto	l6503
  3580  020C' D7F3               	goto	u6590
  3581  020E'                    l6517:
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;Menu.c: 164:    LcClear();
  3585  020E' EC00' F000'        	call	_LcClear	;wreg free
  3586                           
  3587                           ;Menu.c: 165:    SiFerMenu();
  3588  0212' EC00' F000'        	call	_SiFerMenu	;wreg free
  3589                           
  3590                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  3591  0216' 5000'              	movf	_menuDalt^0,w,c
  3592  0218' EC00' F000'        	call	_GLCDMostraMenu
  3593                           
  3594                           ;Menu.c: 167:    novaDireccio = -1;
  3595  021C' 6800'              	setf	_novaDireccio^0,c
  3596                           
  3597                           ;Menu.c: 168:    NovaTecla = -1;
  3598  021E' 6800'              	setf	_NovaTecla^0,c
  3599                           
  3600                           ;Menu.c: 169:    state = 13;
  3601  0220' 0E0D               	movlw	13
  3602  0222' 6E00'              	movwf	menu@state^0,c
  3603                           
  3604                           ;Menu.c: 170:   break;
  3605  0224' 0012               	return	
  3606  0226'                    l6529:
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;Menu.c: 172:    if (novaDireccio == 8) {
  3610  0226' 0E08               	movlw	8
  3611  0228' 1800'              	xorwf	_novaDireccio^0,w,c
  3612  022A' A4D8               	btfss	status,2,c
  3613  022C' D005               	goto	l6537
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  3617  022E' 0E04               	movlw	4
  3618  0230' 6000'              	cpfslt	_menuDalt^0,c
  3619  0232' D7E0               	goto	u6590
  3620                           
  3621                           ; BSR set to: 0
  3622  0234' 2A00'              	incf	_menuDalt^0,f,c
  3623  0236' D7DE               	goto	u6590
  3624  0238'                    l6537:
  3625                           
  3626                           ; BSR set to: 0
  3627  0238' 0E02               	movlw	2
  3628  023A' 1800'              	xorwf	_novaDireccio^0,w,c
  3629  023C' A4D8               	btfss	status,2,c
  3630  023E' D005               	goto	l6545
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  3634  0240' 5000'              	movf	_menuDalt^0,w,c
  3635  0242' B4D8               	btfsc	status,2,c
  3636  0244' D7D7               	goto	u6590
  3637                           
  3638                           ; BSR set to: 0
  3639  0246' 0600'              	decf	_menuDalt^0,f,c
  3640  0248' D7D5               	goto	u6590
  3641  024A'                    l6545:
  3642                           
  3643                           ; BSR set to: 0
  3644  024A' 0E0B               	movlw	11
  3645  024C' 1800'              	xorwf	_NovaTecla^0,w,c
  3646  024E' A4D8               	btfss	status,2,c
  3647  0250' D013               	goto	l6557
  3648                           
  3649                           ; BSR set to: 0
  3650  0252' 0E03               	movlw	3
  3651  0254' 1800'              	xorwf	_menuDalt^0,w,c
  3652  0256' A4D8               	btfss	status,2,c
  3653  0258' D00F               	goto	l6557
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;Menu.c: 181:     NoFerMenu();
  3657  025A' EC00' F000'        	call	_NoFerMenu	;wreg free
  3658                           
  3659                           ;Menu.c: 182:     LcClear();
  3660  025E' EC00' F000'        	call	_LcClear	;wreg free
  3661                           
  3662                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  3663  0262' 0E00'              	movlw	low STR_5
  3664  0264' 6E00'              	movwf	LcNewString@new_s^0,c
  3665  0266' 5000'              	movf	LcNewString@new_s^0,w,c
  3666  0268' A4D8               	btfss	status,2,c
  3667  026A' 0E00'              	movlw	high __smallconst
  3668  026C' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3669  026E' EC00' F000'        	call	_LcNewString	;wreg free
  3670                           
  3671                           ;Menu.c: 184:     state = 14;
  3672  0272' 0E0E               	movlw	14
  3673  0274' 6E00'              	movwf	menu@state^0,c
  3674                           
  3675                           ;Menu.c: 185:    }
  3676  0276' 0012               	return	
  3677  0278'                    l6557:
  3678                           
  3679                           ; BSR set to: 0
  3680  0278' 0E0B               	movlw	11
  3681  027A' 1800'              	xorwf	_NovaTecla^0,w,c
  3682  027C' A4D8               	btfss	status,2,c
  3683  027E' D013               	goto	l6571
  3684                           
  3685                           ; BSR set to: 0
  3686  0280' 0400'              	decf	_menuDalt^0,w,c
  3687  0282' A4D8               	btfss	status,2,c
  3688  0284' D010               	goto	l6571
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;Menu.c: 187:     LcClear();
  3692  0286' EC00' F000'        	call	_LcClear	;wreg free
  3693                           
  3694                           ;Menu.c: 188:     NoFerMenu();
  3695  028A' EC00' F000'        	call	_NoFerMenu	;wreg free
  3696                           
  3697                           ;Menu.c: 189:     LcNewString("Modify Time:");
  3698  028E' 0E00'              	movlw	low STR_6
  3699  0290' 6E00'              	movwf	LcNewString@new_s^0,c
  3700  0292' 5000'              	movf	LcNewString@new_s^0,w,c
  3701  0294' A4D8               	btfss	status,2,c
  3702  0296' 0E00'              	movlw	high __smallconst
  3703  0298' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3704  029A' EC00' F000'        	call	_LcNewString	;wreg free
  3705                           
  3706                           ;Menu.c: 190:     NovaTecla = -1;
  3707  029E' 6800'              	setf	_NovaTecla^0,c
  3708                           
  3709                           ;Menu.c: 191:     state = 16;
  3710  02A0' 0E10               	movlw	16
  3711  02A2' 6E00'              	movwf	menu@state^0,c
  3712                           
  3713                           ;Menu.c: 192:    }
  3714  02A4' 0012               	return	
  3715  02A6'                    l6571:
  3716                           
  3717                           ; BSR set to: 0
  3718  02A6' 5000'              	movf	_menuDalt^0,w,c
  3719  02A8' A4D8               	btfss	status,2,c
  3720  02AA' D017               	goto	l6587
  3721                           
  3722                           ; BSR set to: 0
  3723  02AC' 0E0B               	movlw	11
  3724  02AE' 1800'              	xorwf	_NovaTecla^0,w,c
  3725  02B0' A4D8               	btfss	status,2,c
  3726  02B2' D013               	goto	l6587
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;Menu.c: 194:     NoFerMenu();
  3730  02B4' EC00' F000'        	call	_NoFerMenu	;wreg free
  3731                           
  3732                           ;Menu.c: 195:     NovaTecla = -1;
  3733  02B8' 6800'              	setf	_NovaTecla^0,c
  3734                           
  3735                           ;Menu.c: 196:     LcClear();
  3736  02BA' EC00' F000'        	call	_LcClear	;wreg free
  3737                           
  3738                           ;Menu.c: 197:     LcNewString("TIME REMAINING:");
  3739  02BE' 0E00'              	movlw	low STR_7
  3740  02C0' 6E00'              	movwf	LcNewString@new_s^0,c
  3741  02C2' 5000'              	movf	LcNewString@new_s^0,w,c
  3742  02C4' A4D8               	btfss	status,2,c
  3743  02C6' 0E00'              	movlw	high __smallconst
  3744  02C8' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  3745  02CA' EC00' F000'        	call	_LcNewString	;wreg free
  3746                           
  3747                           ;Menu.c: 198:     JJuguem(indexUsuari);
  3748  02CE' 5000'              	movf	_indexUsuari^0,w,c
  3749  02D0' EC00' F000'        	call	_JJuguem
  3750  02D4'                    l6585:
  3751                           
  3752                           ;Menu.c: 199:     state = 21;
  3753  02D4' 0E15               	movlw	21
  3754  02D6' 6E00'              	movwf	menu@state^0,c
  3755                           
  3756                           ;Menu.c: 200:    }
  3757  02D8' 0012               	return	
  3758  02DA'                    l6587:
  3759                           
  3760                           ; BSR set to: 0
  3761  02DA' 0E0B               	movlw	11
  3762  02DC' 1800'              	xorwf	_NovaTecla^0,w,c
  3763  02DE' A4D8               	btfss	status,2,c
  3764  02E0' D010               	goto	l6603
  3765                           
  3766                           ; BSR set to: 0
  3767  02E2' 0E04               	movlw	4
  3768  02E4' 1800'              	xorwf	_menuDalt^0,w,c
  3769  02E6' A4D8               	btfss	status,2,c
  3770  02E8' D00C               	goto	l6603
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;Menu.c: 202:     NoFerMenu();
  3774  02EA' EC00' F000'        	call	_NoFerMenu	;wreg free
  3775                           
  3776                           ;Menu.c: 203:     LcClear();
  3777  02EE' EC00' F000'        	call	_LcClear	;wreg free
  3778                           
  3779                           ;Menu.c: 204:     menuDalt = 0;
  3780  02F2' 0E00               	movlw	0
  3781  02F4' 6E00'              	movwf	_menuDalt^0,c
  3782                           
  3783                           ;Menu.c: 205:     NovaTecla = -1;
  3784  02F6' 6800'              	setf	_NovaTecla^0,c
  3785                           
  3786                           ;Menu.c: 206:     calculateShowUsers();
  3787  02F8' EC00' F000'        	call	_calculateShowUsers	;wreg free
  3788                           
  3789                           ;Menu.c: 207:     state = 30;
  3790  02FC' 0E1E               	movlw	30
  3791  02FE' 6E00'              	movwf	menu@state^0,c
  3792                           
  3793                           ;Menu.c: 208:    }
  3794  0300' 0012               	return	
  3795  0302'                    l6603:
  3796                           
  3797                           ; BSR set to: 0
  3798  0302' 0E0B               	movlw	11
  3799  0304' 1800'              	xorwf	_NovaTecla^0,w,c
  3800  0306' A4D8               	btfss	status,2,c
  3801  0308' 0012               	return	
  3802                           
  3803                           ; BSR set to: 0
  3804  030A' 0E02               	movlw	2
  3805  030C' 1800'              	xorwf	_menuDalt^0,w,c
  3806  030E' A4D8               	btfss	status,2,c
  3807  0310' 0012               	return	
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;Menu.c: 210:     NoFerMenu();
  3811  0312' EC00' F000'        	call	_NoFerMenu	;wreg free
  3812                           
  3813                           ;Menu.c: 211:     LcClear();
  3814  0316' EC00' F000'        	call	_LcClear	;wreg free
  3815                           
  3816                           ;Menu.c: 212:     menuDalt = 0;
  3817  031A' 0E00               	movlw	0
  3818  031C' 6E00'              	movwf	_menuDalt^0,c
  3819  031E'                    l6613:
  3820                           
  3821                           ;Menu.c: 213:     state = 31;
  3822  031E' 0E1F               	movlw	31
  3823  0320' 6E00'              	movwf	menu@state^0,c
  3824  0322' 0012               	return	
  3825  0324'                    l6615:
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;Menu.c: 217:    if (LcLliure()) {
  3829  0324' EC00' F000'        	call	_LcLliure	;wreg free
  3830  0328' A0D8               	btfss	status,0,c
  3831  032A' 0012               	return	
  3832                           
  3833                           ;Menu.c: 218:     LcNewString(UgetUserName(indexUsuari));
  3834  032C' 5000'              	movf	_indexUsuari^0,w,c
  3835  032E' EC00' F000'        	call	_UgetUserName
  3836  0332' C005' F009'        	movff	?_UgetUserName,LcNewString@new_s
  3837  0336' C006' F00A'        	movff	?_UgetUserName+1,LcNewString@new_s+1
  3838  033A' EC00' F000'        	call	_LcNewString	;wreg free
  3839                           
  3840                           ;Menu.c: 219:     TiResetTics(timerMenu);
  3841  033E' 5000'              	movf	_timerMenu^0,w,c
  3842  0340' EC00' F000'        	call	_TiResetTics
  3843                           
  3844                           ;Menu.c: 220:     state = 15;
  3845  0344' 0E0F               	movlw	15
  3846  0346' 6E00'              	movwf	menu@state^0,c
  3847  0348' 0012               	return	
  3848  034A'                    l6623:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;Menu.c: 224:    if (TiGetTics(timerMenu) > 2410) {
  3852  034A' 5000'              	movf	_timerMenu^0,w,c
  3853  034C' EC00' F000'        	call	_TiGetTics
  3854  0350' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  3855  0352' 0012               	return	
  3856  0354' 0E6B               	movlw	107
  3857  0356' 5C00'              	subwf	?_TiGetTics^0,w,c
  3858  0358' 0E09               	movlw	9
  3859  035A' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  3860  035C' A0D8               	btfss	status,0,c
  3861  035E' 0012               	return	
  3862  0360' D743               	goto	l6503
  3863  0362'                    l6627:
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;Menu.c: 229:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3867  0362' EC00' F000'        	call	_LcLliure	;wreg free
  3868  0366' B0D8               	btfsc	status,0,c
  3869  0368' BE00'              	btfsc	_NovaTecla^0,7,c
  3870  036A' D04B               	goto	l6693
  3871  036C' 5000'              	movf	_NovaTecla^0,w,c
  3872  036E' 0A80               	xorlw	128
  3873  0370' 0F76               	addlw	-138
  3874  0372' B0D8               	btfsc	status,0,c
  3875  0374' D046               	goto	l6693
  3876                           
  3877                           ;Menu.c: 230:     LcGotoXY(0,1);
  3878  0376' 0E01               	movlw	1
  3879  0378' 6E00'              	movwf	LcGotoXY@Row^0,c
  3880  037A' 0E00               	movlw	0
  3881  037C' EC00' F000'        	call	_LcGotoXY
  3882                           
  3883                           ;Menu.c: 231:     horaTmp[0] = NovaTecla+48;
  3884  0380' 5000'              	movf	_NovaTecla^0,w,c
  3885  0382' 0F30               	addlw	48
  3886  0384' 6E00'              	movwf	_horaTmp^0,c
  3887                           
  3888                           ;Menu.c: 232:     LcPutChar(horaTmp[0]);
  3889  0386' 5000'              	movf	_horaTmp^0,w,c
  3890  0388' EC00' F000'        	call	_LcPutChar
  3891                           
  3892                           ;Menu.c: 233:     NovaTecla = -1;
  3893  038C' 6800'              	setf	_NovaTecla^0,c
  3894                           
  3895                           ;Menu.c: 234:     state = 17;
  3896  038E' 0E11               	movlw	17
  3897  0390'                    L1:
  3898  0390' 6E00'              	movwf	menu@state^0,c
  3899                           
  3900                           ;Menu.c: 235:    }
  3901  0392' 0012               	return	
  3902  0394'                    L2:
  3903  0394' 1800'              	xorwf	_NovaTecla^0,w,c
  3904  0396' A4D8               	btfss	status,2,c
  3905  0398' 0012               	return	
  3906  039A' D72C               	goto	u6590
  3907  039C'                    l6647:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;Menu.c: 241:    if (NovaTecla > -1 && NovaTecla < 10) {
  3911  039C' BE00'              	btfsc	_NovaTecla^0,7,c
  3912  039E' D031               	goto	l6693
  3913                           
  3914                           ; BSR set to: 0
  3915  03A0' 5000'              	movf	_NovaTecla^0,w,c
  3916  03A2' 0A80               	xorlw	128
  3917  03A4' 0F76               	addlw	-138
  3918  03A6' B0D8               	btfsc	status,0,c
  3919  03A8' D02C               	goto	l6693
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;Menu.c: 242:     horaTmp[1] = NovaTecla+48;
  3923  03AA' 5000'              	movf	_NovaTecla^0,w,c
  3924  03AC' 0F30               	addlw	48
  3925  03AE' 6E00'              	movwf	(_horaTmp+1)^0,c
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;Menu.c: 243:     LcPutChar(horaTmp[1]);
  3929  03B0' 5000'              	movf	(_horaTmp+1)^0,w,c
  3930  03B2' EC00' F000'        	call	_LcPutChar
  3931                           
  3932                           ;Menu.c: 244:     NovaTecla = -1;
  3933  03B6' 6800'              	setf	_NovaTecla^0,c
  3934                           
  3935                           ;Menu.c: 245:     LcPutChar(':');
  3936  03B8' 0E3A               	movlw	58
  3937  03BA' EC00' F000'        	call	_LcPutChar
  3938                           
  3939                           ;Menu.c: 246:     state = 18;
  3940  03BE' 0E12               	movlw	18
  3941  03C0' D7E7               	goto	L1
  3942  03C2'                    l6665:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;Menu.c: 253:    if (NovaTecla > -1 && NovaTecla < 10) {
  3946  03C2' BE00'              	btfsc	_NovaTecla^0,7,c
  3947  03C4' D01E               	goto	l6693
  3948                           
  3949                           ; BSR set to: 0
  3950  03C6' 5000'              	movf	_NovaTecla^0,w,c
  3951  03C8' 0A80               	xorlw	128
  3952  03CA' 0F76               	addlw	-138
  3953  03CC' B0D8               	btfsc	status,0,c
  3954  03CE' D019               	goto	l6693
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;Menu.c: 254:     horaTmp[2] = NovaTecla+48;
  3958  03D0' 5000'              	movf	_NovaTecla^0,w,c
  3959  03D2' 0F30               	addlw	48
  3960  03D4' 6E00'              	movwf	(_horaTmp+2)^0,c
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;Menu.c: 255:     LcPutChar(horaTmp[2]);
  3964  03D6' 5000'              	movf	(_horaTmp+2)^0,w,c
  3965  03D8' EC00' F000'        	call	_LcPutChar
  3966                           
  3967                           ;Menu.c: 256:     NovaTecla = -1;
  3968  03DC' 6800'              	setf	_NovaTecla^0,c
  3969                           
  3970                           ;Menu.c: 257:     state = 19;
  3971  03DE' 0E13               	movlw	19
  3972  03E0' D7D7               	goto	L1
  3973  03E2'                    l6681:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;Menu.c: 264:    if (NovaTecla > -1 && NovaTecla < 10) {
  3977  03E2' BE00'              	btfsc	_NovaTecla^0,7,c
  3978  03E4' D00E               	goto	l6693
  3979                           
  3980                           ; BSR set to: 0
  3981  03E6' 5000'              	movf	_NovaTecla^0,w,c
  3982  03E8' 0A80               	xorlw	128
  3983  03EA' 0F76               	addlw	-138
  3984  03EC' B0D8               	btfsc	status,0,c
  3985  03EE' D009               	goto	l6693
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;Menu.c: 265:     horaTmp[3] = NovaTecla+48;
  3989  03F0' 5000'              	movf	_NovaTecla^0,w,c
  3990  03F2' 0F30               	addlw	48
  3991  03F4' 6E00'              	movwf	(_horaTmp+3)^0,c
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;Menu.c: 266:     LcPutChar(horaTmp[3]);
  3995  03F6' 5000'              	movf	(_horaTmp+3)^0,w,c
  3996  03F8' EC00' F000'        	call	_LcPutChar
  3997                           
  3998                           ;Menu.c: 267:     NovaTecla = -1;
  3999  03FC' 6800'              	setf	_NovaTecla^0,c
  4000                           
  4001                           ;Menu.c: 268:     state = 20;
  4002  03FE' 0E14               	movlw	20
  4003  0400' D7C7               	goto	L1
  4004  0402'                    l6693:
  4005                           
  4006                           ; BSR set to: 0
  4007  0402' 0E0A               	movlw	10
  4008  0404' D7C7               	goto	L2
  4009  0406'                    l6697:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;Menu.c: 275:    if (NovaTecla == 11) {
  4013  0406' 0E0B               	movlw	11
  4014  0408' 1800'              	xorwf	_NovaTecla^0,w,c
  4015  040A' A4D8               	btfss	status,2,c
  4016  040C' D7FA               	goto	l6693
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;Menu.c: 276:     HActualitzaHora(horaTmp);
  4020  040E' 0E00'              	movlw	low _horaTmp
  4021  0410' 6E00'              	movwf	HActualitzaHora@nova^0,c
  4022  0412' EC00' F000'        	call	_HActualitzaHora	;wreg free
  4023                           
  4024                           ;Menu.c: 277:     NovaTecla = -1;
  4025  0416' 6800'              	setf	_NovaTecla^0,c
  4026  0418' D6ED               	goto	u6590
  4027  041A'                    l6709:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;Menu.c: 285:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  4031  041A' 0E0A               	movlw	10
  4032  041C' 1800'              	xorwf	_NovaTecla^0,w,c
  4033  041E' A4D8               	btfss	status,2,c
  4034  0420' D004               	goto	u6960
  4035                           
  4036                           ; BSR set to: 0
  4037  0422' EC00' F000'        	call	_LcLliure	;wreg free
  4038  0426' B0D8               	btfsc	status,0,c
  4039  0428' D004               	goto	u6970
  4040  042A'                    u6960:
  4041  042A' EC00' F000'        	call	_checkHoraAcabat	;wreg free
  4042  042E' A0D8               	btfss	status,0,c
  4043  0430' D007               	goto	l6721
  4044  0432'                    u6970:
  4045                           
  4046                           ;Menu.c: 286:     LcClear();
  4047  0432' EC00' F000'        	call	_LcClear	;wreg free
  4048                           
  4049                           ;Menu.c: 287:     JendGame();
  4050  0436' EC00' F000'        	call	_JendGame	;wreg free
  4051                           
  4052                           ;Menu.c: 288:     state = 22;
  4053  043A' 0E16               	movlw	22
  4054  043C' 6E00'              	movwf	menu@state^0,c
  4055                           
  4056                           ;Menu.c: 289:    }
  4057  043E' 0012               	return	
  4058  0440'                    l6721:
  4059  0440' 5000'              	movf	_NovaTecla^0,w,c
  4060  0442' 0A80               	xorlw	128
  4061  0444' 0F7F               	addlw	-129
  4062  0446' A0D8               	btfss	status,0,c
  4063  0448' D00A               	goto	l6731
  4064  044A' 5000'              	movf	_NovaTecla^0,w,c
  4065  044C' 0A80               	xorlw	128
  4066  044E' 0F76               	addlw	-138
  4067  0450' B0D8               	btfsc	status,0,c
  4068  0452' D005               	goto	l6731
  4069                           
  4070                           ;Menu.c: 291:     JnovaTecla(NovaTecla);
  4071  0454' 5000'              	movf	_NovaTecla^0,w,c
  4072  0456' EC00' F000'        	call	_JnovaTecla
  4073                           
  4074                           ;Menu.c: 292:     NovaTecla = -1;
  4075  045A' 6800'              	setf	_NovaTecla^0,c
  4076  045C' D73B               	goto	l6585
  4077  045E'                    l6731:
  4078  045E' BE00'              	btfsc	_novaDireccio^0,7,c
  4079  0460' 0012               	return	
  4080                           
  4081                           ;Menu.c: 296:     JnovaDireccio(novaDireccio);
  4082  0462' 5000'              	movf	_novaDireccio^0,w,c
  4083  0464' EC00' F000'        	call	_JnovaDireccio
  4084                           
  4085                           ;Menu.c: 297:     novaDireccio = -1;
  4086  0468' 6800'              	setf	_novaDireccio^0,c
  4087  046A' D734               	goto	l6585
  4088  046C'                    l6739:
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;Menu.c: 302:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  4092  046C' EC00' F000'        	call	_SIOHaAcabatPuntuacions	;wreg free
  4093  0470' 0900               	iorlw	0
  4094  0472' B4D8               	btfsc	status,2,c
  4095  0474' 0012               	return	
  4096  0476' 0E0B               	movlw	11
  4097  0478' D78D               	goto	L2
  4098  047A'                    l6745:
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;Menu.c: 307:    if (LcLliure()) {
  4102  047A' EC00' F000'        	call	_LcLliure	;wreg free
  4103  047E' A0D8               	btfss	status,0,c
  4104  0480' 0012               	return	
  4105                           
  4106                           ;Menu.c: 308:     LcGotoXY(0,0);
  4107  0482' 0E00               	movlw	0
  4108  0484' 6E00'              	movwf	LcGotoXY@Row^0,c
  4109  0486' 0E00               	movlw	0
  4110  0488' EC00' F000'        	call	_LcGotoXY
  4111                           
  4112                           ;Menu.c: 309:     LcNewString(getArrayShowUsers(menuDalt));
  4113  048C' 5000'              	movf	_menuDalt^0,w,c
  4114  048E' EC00' F000'        	call	_getArrayShowUsers
  4115  0492' C005' F009'        	movff	?_getArrayShowUsers,LcNewString@new_s
  4116  0496' C006' F00A'        	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4117  049A' EC00' F000'        	call	_LcNewString	;wreg free
  4118                           
  4119                           ;Menu.c: 310:     menuDalt++;
  4120  049E' 2A00'              	incf	_menuDalt^0,f,c
  4121                           
  4122                           ;Menu.c: 311:     state = 24;
  4123  04A0' 0E18               	movlw	24
  4124  04A2' 6E00'              	movwf	menu@state^0,c
  4125  04A4' 0012               	return	
  4126  04A6'                    l6753:
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;Menu.c: 315:    if (LcLliure()) {
  4130  04A6' EC00' F000'        	call	_LcLliure	;wreg free
  4131  04AA' A0D8               	btfss	status,0,c
  4132  04AC' 0012               	return	
  4133                           
  4134                           ;Menu.c: 316:     if (menuDalt < UgetNumUsuaris()){
  4135  04AE' EC00' F000'        	call	_UgetNumUsuaris	;wreg free
  4136  04B2' 6000'              	cpfslt	_menuDalt^0,c
  4137  04B4' D010               	goto	l6761
  4138                           
  4139                           ;Menu.c: 317:       LcGotoXY(0,1);
  4140  04B6' 0E01               	movlw	1
  4141  04B8' 6E00'              	movwf	LcGotoXY@Row^0,c
  4142  04BA' 0E00               	movlw	0
  4143  04BC' EC00' F000'        	call	_LcGotoXY
  4144                           
  4145                           ;Menu.c: 318:       LcNewString(getArrayShowUsers(menuDalt));
  4146  04C0' 5000'              	movf	_menuDalt^0,w,c
  4147  04C2' EC00' F000'        	call	_getArrayShowUsers
  4148  04C6' C005' F009'        	movff	?_getArrayShowUsers,LcNewString@new_s
  4149  04CA' C006' F00A'        	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4150  04CE' EC00' F000'        	call	_LcNewString	;wreg free
  4151                           
  4152                           ;Menu.c: 319:       menuDalt++;
  4153  04D2' 2A00'              	incf	_menuDalt^0,f,c
  4154                           
  4155                           ;Menu.c: 320:     } else {
  4156  04D4' D002               	goto	l610
  4157  04D6'                    l6761:
  4158                           
  4159                           ;Menu.c: 321:       menuDalt = 0;
  4160  04D6' 0E00               	movlw	0
  4161  04D8' 6E00'              	movwf	_menuDalt^0,c
  4162  04DA'                    l610:
  4163                           
  4164                           ;Menu.c: 323:     state = 25;
  4165  04DA' 0E19               	movlw	25
  4166  04DC' 6E00'              	movwf	menu@state^0,c
  4167  04DE' 0012               	return	
  4168  04E0'                    l6763:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;Menu.c: 327:    if (LcLliure()) {
  4172  04E0' EC00' F000'        	call	_LcLliure	;wreg free
  4173  04E4' A0D8               	btfss	status,0,c
  4174  04E6' 0012               	return	
  4175                           
  4176                           ;Menu.c: 328:     if (menuDalt == UgetNumUsuaris()){
  4177  04E8' EC00' F000'        	call	_UgetNumUsuaris	;wreg free
  4178  04EC' 1800'              	xorwf	_menuDalt^0,w,c
  4179  04EE' A4D8               	btfss	status,2,c
  4180  04F0' D002               	goto	l6769
  4181                           
  4182                           ;Menu.c: 329:       menuDalt = 0;
  4183  04F2' 0E00               	movlw	0
  4184  04F4' 6E00'              	movwf	_menuDalt^0,c
  4185  04F6'                    l6769:
  4186                           
  4187                           ;Menu.c: 331:     LcGotoXY(16,0);
  4188  04F6' 0E00               	movlw	0
  4189  04F8' 6E00'              	movwf	LcGotoXY@Row^0,c
  4190  04FA' 0E10               	movlw	16
  4191  04FC' EC00' F000'        	call	_LcGotoXY
  4192                           
  4193                           ;Menu.c: 332:     LcNewString(getArrayShowUsers(menuDalt));
  4194  0500' 5000'              	movf	_menuDalt^0,w,c
  4195  0502' EC00' F000'        	call	_getArrayShowUsers
  4196  0506' C005' F009'        	movff	?_getArrayShowUsers,LcNewString@new_s
  4197  050A' C006' F00A'        	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4198  050E' EC00' F000'        	call	_LcNewString	;wreg free
  4199                           
  4200                           ;Menu.c: 333:     state = 26;
  4201  0512' 0E1A               	movlw	26
  4202  0514' 6E00'              	movwf	menu@state^0,c
  4203  0516' 0012               	return	
  4204  0518'                    l6773:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;Menu.c: 337:    if (LcLliure()) {
  4208  0518' EC00' F000'        	call	_LcLliure	;wreg free
  4209  051C' A0D8               	btfss	status,0,c
  4210  051E' 0012               	return	
  4211                           
  4212                           ;Menu.c: 338:     if (menuDalt+1 < UgetNumUsuaris()){
  4213  0520' EC00' F000'        	call	_UgetNumUsuaris	;wreg free
  4214  0524' 0100               	movlb	0	; () banked
  4215  0526' 6F00'              	movwf	??_menu& (0+255),b
  4216  0528' 6B00'              	clrf	(??_menu+1)& (0+255),b
  4217  052A' 5000'              	movf	_menuDalt^0,w,c
  4218  052C' 6F00'              	movwf	(??_menu+2)& (0+255),b
  4219  052E' 6B00'              	clrf	(??_menu+3)& (0+255),b
  4220  0530' 0E01               	movlw	1
  4221  0532' 2700'              	addwf	(??_menu+2)& (0+255),f,b
  4222  0534' 0E00               	movlw	0
  4223  0536' 2300'              	addwfc	(??_menu+3)& (0+255),f,b
  4224  0538' 5100'              	movf	??_menu& (0+255),w,b
  4225  053A' 5D00'              	subwf	(??_menu+2)& (0+255),w,b
  4226  053C' 5100'              	movf	(??_menu+3)& (0+255),w,b
  4227  053E' 0A80               	xorlw	128
  4228  0540' 6F00'              	movwf	(??_menu+4)& (0+255),b
  4229  0542' 5100'              	movf	(??_menu+1)& (0+255),w,b
  4230  0544' 0A80               	xorlw	128
  4231  0546' 5900'              	subwfb	(??_menu+4)& (0+255),w,b
  4232  0548' B0D8               	btfsc	status,0,c
  4233  054A' D00E               	goto	l6779
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;Menu.c: 339:       LcGotoXY(16,1);
  4237  054C' 0E01               	movlw	1
  4238  054E' 6E00'              	movwf	LcGotoXY@Row^0,c
  4239  0550' 0E10               	movlw	16
  4240  0552' EC00' F000'        	call	_LcGotoXY
  4241                           
  4242                           ;Menu.c: 340:       LcNewString(getArrayShowUsers(menuDalt+1));
  4243  0556' 2800'              	incf	_menuDalt^0,w,c
  4244  0558' EC00' F000'        	call	_getArrayShowUsers
  4245  055C' C005' F009'        	movff	?_getArrayShowUsers,LcNewString@new_s
  4246  0560' C006' F00A'        	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4247  0564' EC00' F000'        	call	_LcNewString	;wreg free
  4248  0568'                    l6779:
  4249                           
  4250                           ;Menu.c: 342:     state = 27;
  4251  0568' 0E1B               	movlw	27
  4252  056A' 6E00'              	movwf	menu@state^0,c
  4253  056C' 0012               	return	
  4254  056E'                    l6781:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;Menu.c: 346:    if (TiGetTics(timerMenu) > 1205) {
  4258  056E' 5000'              	movf	_timerMenu^0,w,c
  4259  0570' EC00' F000'        	call	_TiGetTics
  4260  0574' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  4261  0576' D009               	goto	l6785
  4262  0578' 0EB6               	movlw	182
  4263  057A' 5C00'              	subwf	?_TiGetTics^0,w,c
  4264  057C' 0E04               	movlw	4
  4265  057E' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  4266  0580' A0D8               	btfss	status,0,c
  4267  0582' D003               	goto	l6785
  4268                           
  4269                           ;Menu.c: 347:     state = 29;
  4270  0584' 0E1D               	movlw	29
  4271  0586' 6E00'              	movwf	menu@state^0,c
  4272                           
  4273                           ;Menu.c: 348:    }
  4274  0588' 0012               	return	
  4275  058A'                    l6785:
  4276  058A' 0E0B               	movlw	11
  4277  058C' 1800'              	xorwf	_NovaTecla^0,w,c
  4278  058E' A4D8               	btfss	status,2,c
  4279  0590' 0012               	return	
  4280  0592'                    u7110:
  4281                           
  4282                           ;Menu.c: 350:     menuDalt = 0;
  4283  0592' 0E00               	movlw	0
  4284  0594' 6E00'              	movwf	_menuDalt^0,c
  4285                           
  4286                           ;Menu.c: 351:     state = 12;
  4287  0596' 0E0C               	movlw	12
  4288  0598' 6E00'              	movwf	menu@state^0,c
  4289  059A' 0012               	return	
  4290  059C'                    l6789:
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;Menu.c: 355:    if (pos > 15) {
  4294  059C' 0E0F               	movlw	15
  4295  059E' 6400'              	cpfsgt	_pos^0,c
  4296  05A0' D005               	goto	l6795
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;Menu.c: 356:     LcClear();
  4300  05A2' EC00' F000'        	call	_LcClear	;wreg free
  4301  05A6'                    l6793:
  4302                           
  4303                           ;Menu.c: 357:     state = 23;
  4304  05A6' 0E17               	movlw	23
  4305  05A8' 6E00'              	movwf	menu@state^0,c
  4306                           
  4307                           ;Menu.c: 358:    }
  4308  05AA' 0012               	return	
  4309  05AC'                    l6795:
  4310                           
  4311                           ; BSR set to: 0
  4312  05AC' 0E10               	movlw	16
  4313  05AE' 6000'              	cpfslt	_pos^0,c
  4314  05B0' 0012               	return	
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;Menu.c: 360:     TiResetTics(timerMenu);
  4318  05B2' 5000'              	movf	_timerMenu^0,w,c
  4319  05B4' EC00' F000'        	call	_TiResetTics
  4320                           
  4321                           ;Menu.c: 361:     LcScroll();
  4322  05B8' EC00' F000'        	call	_LcScroll	;wreg free
  4323                           
  4324                           ;Menu.c: 362:     pos++;
  4325  05BC' 2A00'              	incf	_pos^0,f,c
  4326  05BE'                    l6803:
  4327                           
  4328                           ;Menu.c: 363:     state = 28;
  4329  05BE' 0E1C               	movlw	28
  4330  05C0' 6E00'              	movwf	menu@state^0,c
  4331  05C2' 0012               	return	
  4332  05C4'                    l6805:
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;Menu.c: 367:    if (LcLliure()) {
  4336  05C4' EC00' F000'        	call	_LcLliure	;wreg free
  4337  05C8' A0D8               	btfss	status,0,c
  4338  05CA' 0012               	return	
  4339                           
  4340                           ;Menu.c: 368:     TiResetTics(timerMenu);
  4341  05CC' 5000'              	movf	_timerMenu^0,w,c
  4342  05CE' EC00' F000'        	call	_TiResetTics
  4343                           
  4344                           ;Menu.c: 369:     pos = 0;
  4345  05D2' 0E00               	movlw	0
  4346  05D4' 6E00'              	movwf	_pos^0,c
  4347  05D6' D7F3               	goto	l6803
  4348  05D8'                    l6813:
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;Menu.c: 374:    if (UshowUsersCalculat()) {
  4352  05D8' EC00' F000'        	call	_UshowUsersCalculat	;wreg free
  4353  05DC' A0D8               	btfss	status,0,c
  4354  05DE' 0012               	return	
  4355  05E0' D7E2               	goto	l6793
  4356  05E2'                    l6817:
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;Menu.c: 379:    if (LcLliure()) {
  4360  05E2' EC00' F000'        	call	_LcLliure	;wreg free
  4361  05E6' A0D8               	btfss	status,0,c
  4362  05E8' 0012               	return	
  4363                           
  4364                           ;Menu.c: 380:     LcGotoXY(0,0);
  4365  05EA' 0E00               	movlw	0
  4366  05EC' 6E00'              	movwf	LcGotoXY@Row^0,c
  4367  05EE' 0E00               	movlw	0
  4368  05F0' EC00' F000'        	call	_LcGotoXY
  4369                           
  4370                           ;Menu.c: 381:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4371  05F4' 5000'              	movf	_menuDalt^0,w,c
  4372  05F6' EC00' F000'        	call	_UgetTop5
  4373  05FA' EC00' F000'        	call	_UgetUserName
  4374  05FE' C005' F009'        	movff	?_UgetUserName,LcNewString@new_s
  4375  0602' C006' F00A'        	movff	?_UgetUserName+1,LcNewString@new_s+1
  4376  0606' EC00' F000'        	call	_LcNewString	;wreg free
  4377                           
  4378                           ;Menu.c: 382:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4379  060A' 5000'              	movf	_menuDalt^0,w,c
  4380  060C' EC00' F000'        	call	_UgetTop5
  4381  0610' EC00' F000'        	call	_UgetScore
  4382  0614' EC00' F000'        	call	_CToAConverteix
  4383                           
  4384                           ;Menu.c: 383:     state = 32;
  4385  0618' 0E20               	movlw	32
  4386  061A' 6E00'              	movwf	menu@state^0,c
  4387  061C' 0012               	return	
  4388  061E'                    l6823:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;Menu.c: 387:    if (CToAHaAcabat() == 250 && LcLliure()) {
  4392  061E' EC00' F000'        	call	_CToAHaAcabat	;wreg free
  4393  0622' 0AFA               	xorlw	250
  4394  0624' A4D8               	btfss	status,2,c
  4395  0626' 0012               	return	
  4396  0628' EC00' F000'        	call	_LcLliure	;wreg free
  4397  062C' A0D8               	btfss	status,0,c
  4398  062E' 0012               	return	
  4399                           
  4400                           ;Menu.c: 388:     LcPutChar(':');
  4401  0630' 0E3A               	movlw	58
  4402  0632' EC00' F000'        	call	_LcPutChar
  4403                           
  4404                           ;Menu.c: 389:     LcGotoXY(0,1);
  4405  0636' 0E01               	movlw	1
  4406  0638' 6E00'              	movwf	LcGotoXY@Row^0,c
  4407  063A' 0E00               	movlw	0
  4408  063C' EC00' F000'        	call	_LcGotoXY
  4409                           
  4410                           ;Menu.c: 390:     LcNewString(CToAobtenir());
  4411  0640' EC00' F000'        	call	_CToAobtenir	;wreg free
  4412  0644' 0100               	movlb	0	; () banked
  4413  0646' 6F00'              	movwf	??_menu& (0+255),b
  4414  0648' C000' F009'        	movff	??_menu,LcNewString@new_s
  4415  064C' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  4416  064E' EC00' F000'        	call	_LcNewString	;wreg free
  4417                           
  4418                           ;Menu.c: 391:     menuDalt++;
  4419  0652' 2A00'              	incf	_menuDalt^0,f,c
  4420                           
  4421                           ;Menu.c: 392:     state = 34;
  4422  0654' 0E22               	movlw	34
  4423  0656' 6E00'              	movwf	menu@state^0,c
  4424  0658' 0012               	return	
  4425  065A'                    l6835:
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;Menu.c: 396:    if (UgetTop5(menuDalt) == -1 || menuDalt == 5) {
  4429  065A' 5000'              	movf	_menuDalt^0,w,c
  4430  065C' EC00' F000'        	call	_UgetTop5
  4431  0660' 0AFF               	xorlw	255
  4432  0662' B4D8               	btfsc	status,2,c
  4433  0664' D004               	goto	u7200
  4434  0666' 0E05               	movlw	5
  4435  0668' 1800'              	xorwf	_menuDalt^0,w,c
  4436  066A' A4D8               	btfss	status,2,c
  4437  066C' D008               	goto	l6845
  4438  066E'                    u7200:
  4439                           
  4440                           ;Menu.c: 397:     pos = 0;
  4441  066E' 0E00               	movlw	0
  4442  0670' 6E00'              	movwf	_pos^0,c
  4443                           
  4444                           ;Menu.c: 398:     TiResetTics(timerMenu);
  4445  0672' 5000'              	movf	_timerMenu^0,w,c
  4446  0674' EC00' F000'        	call	_TiResetTics
  4447  0678'                    l6843:
  4448                           
  4449                           ;Menu.c: 399:     state = 37;
  4450  0678' 0E25               	movlw	37
  4451  067A' 6E00'              	movwf	menu@state^0,c
  4452                           
  4453                           ;Menu.c: 400:    }
  4454  067C' 0012               	return	
  4455  067E'                    l6845:
  4456  067E' 5000'              	movf	_menuDalt^0,w,c
  4457  0680' EC00' F000'        	call	_UgetTop5
  4458  0684' 0AFF               	xorlw	255
  4459  0686' A4D8               	btfss	status,2,c
  4460  0688' D004               	goto	u7220
  4461  068A' 0E05               	movlw	5
  4462  068C' 1800'              	xorwf	_menuDalt^0,w,c
  4463  068E' B4D8               	btfsc	status,2,c
  4464  0690' 0012               	return	
  4465  0692'                    u7220:
  4466  0692' EC00' F000'        	call	_LcLliure	;wreg free
  4467  0696' A0D8               	btfss	status,0,c
  4468  0698' 0012               	return	
  4469                           
  4470                           ;Menu.c: 402:     LcGotoXY(16,0);
  4471  069A' 0E00               	movlw	0
  4472  069C' 6E00'              	movwf	LcGotoXY@Row^0,c
  4473  069E' 0E10               	movlw	16
  4474  06A0' EC00' F000'        	call	_LcGotoXY
  4475                           
  4476                           ;Menu.c: 403:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4477  06A4' 5000'              	movf	_menuDalt^0,w,c
  4478  06A6' EC00' F000'        	call	_UgetTop5
  4479  06AA' EC00' F000'        	call	_UgetUserName
  4480  06AE' C005' F009'        	movff	?_UgetUserName,LcNewString@new_s
  4481  06B2' C006' F00A'        	movff	?_UgetUserName+1,LcNewString@new_s+1
  4482  06B6' EC00' F000'        	call	_LcNewString	;wreg free
  4483                           
  4484                           ;Menu.c: 404:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4485  06BA' 5000'              	movf	_menuDalt^0,w,c
  4486  06BC' EC00' F000'        	call	_UgetTop5
  4487  06C0' EC00' F000'        	call	_UgetScore
  4488  06C4' EC00' F000'        	call	_CToAConverteix
  4489                           
  4490                           ;Menu.c: 405:     state = 35;
  4491  06C8' 0E23               	movlw	35
  4492  06CA' 6E00'              	movwf	menu@state^0,c
  4493  06CC' 0012               	return	
  4494  06CE'                    l6855:
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;Menu.c: 409:    if (LcLliure() && CToAHaAcabat() == 250) {
  4498  06CE' EC00' F000'        	call	_LcLliure	;wreg free
  4499  06D2' A0D8               	btfss	status,0,c
  4500  06D4' 0012               	return	
  4501  06D6' EC00' F000'        	call	_CToAHaAcabat	;wreg free
  4502  06DA' 0AFA               	xorlw	250
  4503  06DC' A4D8               	btfss	status,2,c
  4504  06DE' 0012               	return	
  4505                           
  4506                           ;Menu.c: 410:     LcPutChar(':');
  4507  06E0' 0E3A               	movlw	58
  4508  06E2' EC00' F000'        	call	_LcPutChar
  4509                           
  4510                           ;Menu.c: 411:     LcGotoXY(28,1);
  4511  06E6' 0E01               	movlw	1
  4512  06E8' 6E00'              	movwf	LcGotoXY@Row^0,c
  4513  06EA' 0E1C               	movlw	28
  4514  06EC' EC00' F000'        	call	_LcGotoXY
  4515                           
  4516                           ;Menu.c: 412:     LcNewString(CToAobtenir());
  4517  06F0' EC00' F000'        	call	_CToAobtenir	;wreg free
  4518  06F4' 0100               	movlb	0	; () banked
  4519  06F6' 6F00'              	movwf	??_menu& (0+255),b
  4520  06F8' C000' F009'        	movff	??_menu,LcNewString@new_s
  4521  06FC' 6A00'              	clrf	(LcNewString@new_s+1)^0,c
  4522  06FE' EC00' F000'        	call	_LcNewString	;wreg free
  4523                           
  4524                           ;Menu.c: 413:     pos = 0;
  4525  0702' 0E00               	movlw	0
  4526  0704' 6E00'              	movwf	_pos^0,c
  4527                           
  4528                           ;Menu.c: 414:     TiResetTics(timerMenu);
  4529  0706' 5000'              	movf	_timerMenu^0,w,c
  4530  0708' EC00' F000'        	call	_TiResetTics
  4531  070C' D7B5               	goto	l6843
  4532  070E'                    l6869:
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;Menu.c: 419:    if (NovaTecla == 11) {
  4536  070E' 0E0B               	movlw	11
  4537  0710' 1800'              	xorwf	_NovaTecla^0,w,c
  4538  0712' B4D8               	btfsc	status,2,c
  4539  0714' D73E               	goto	u7110
  4540                           
  4541                           ; BSR set to: 0
  4542  0716' 5000'              	movf	_timerMenu^0,w,c
  4543  0718' EC00' F000'        	call	_TiGetTics
  4544  071C' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  4545  071E' 0012               	return	
  4546  0720' 0EB6               	movlw	182
  4547  0722' 5C00'              	subwf	?_TiGetTics^0,w,c
  4548  0724' 0E04               	movlw	4
  4549  0726' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  4550  0728' A0D8               	btfss	status,0,c
  4551  072A' 0012               	return	
  4552  072C' D5F8               	goto	l6613
  4553  072E'                    l6879:
  4554  072E' 5000'              	movf	menu@state^0,w,c
  4555  0730' 0100               	movlb	0	; () banked
  4556  0732' 6F00'              	movwf	??_menu& (0+255),b
  4557  0734' 6B00'              	clrf	(??_menu+1)& (0+255),b
  4558                           
  4559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4560                           ; Switch size 1, requested type "simple"
  4561                           ; Number of cases is 1, Range of values is 0 to 0
  4562                           ; switch strategies available:
  4563                           ; Name         Instructions Cycles
  4564                           ; simple_byte            4     3 (average)
  4565                           ;	Chosen strategy is simple_byte
  4566  0736' 5100'              	movf	(??_menu+1)& (0+255),w,b
  4567  0738' 0A00               	xorlw	0	; case 0
  4568  073A' A4D8               	btfss	status,2,c
  4569  073C' 0012               	return	
  4570                           
  4571                           ; BSR set to: 0
  4572                           ; Switch size 1, requested type "simple"
  4573                           ; Number of cases is 36, Range of values is 0 to 37
  4574                           ; switch strategies available:
  4575                           ; Name         Instructions Cycles
  4576                           ; simple_byte          109    55 (average)
  4577                           ;	Chosen strategy is simple_byte
  4578  073E' 5100'              	movf	??_menu& (0+255),w,b
  4579  0740' 0A00               	xorlw	0	; case 0
  4580  0742' B4D8               	btfsc	status,2,c
  4581  0744' D45E               	goto	l6353
  4582  0746' 0A01               	xorlw	1	; case 1
  4583  0748' B4D8               	btfsc	status,2,c
  4584  074A' D468               	goto	l6359
  4585  074C' 0A03               	xorlw	3	; case 2
  4586  074E' B4D8               	btfsc	status,2,c
  4587  0750' D47A               	goto	l6369
  4588  0752' 0A01               	xorlw	1	; case 3
  4589  0754' B4D8               	btfsc	status,2,c
  4590  0756' D489               	goto	l513
  4591  0758' 0A07               	xorlw	7	; case 4
  4592  075A' B4D8               	btfsc	status,2,c
  4593  075C' D495               	goto	l6389
  4594  075E' 0A01               	xorlw	1	; case 5
  4595  0760' B4D8               	btfsc	status,2,c
  4596  0762' D4A6               	goto	l6397
  4597  0764' 0A03               	xorlw	3	; case 6
  4598  0766' B4D8               	btfsc	status,2,c
  4599  0768' D4B3               	goto	l6407
  4600  076A' 0A01               	xorlw	1	; case 7
  4601  076C' B4D8               	btfsc	status,2,c
  4602  076E' D4C9               	goto	l6421
  4603  0770' 0A0F               	xorlw	15	; case 8
  4604  0772' B4D8               	btfsc	status,2,c
  4605  0774' D4EB               	goto	l6449
  4606  0776' 0A01               	xorlw	1	; case 9
  4607  0778' B4D8               	btfsc	status,2,c
  4608  077A' D501               	goto	l6463
  4609  077C' 0A03               	xorlw	3	; case 10
  4610  077E' B4D8               	btfsc	status,2,c
  4611  0780' D522               	goto	l6493
  4612  0782' 0A01               	xorlw	1	; case 11
  4613  0784' B4D8               	btfsc	status,2,c
  4614  0786' D529               	goto	l540
  4615  0788' 0A07               	xorlw	7	; case 12
  4616  078A' B4D8               	btfsc	status,2,c
  4617  078C' D540               	goto	l6517
  4618  078E' 0A01               	xorlw	1	; case 13
  4619  0790' B4D8               	btfsc	status,2,c
  4620  0792' D549               	goto	l6529
  4621  0794' 0A03               	xorlw	3	; case 14
  4622  0796' B4D8               	btfsc	status,2,c
  4623  0798' D5C5               	goto	l6615
  4624  079A' 0A01               	xorlw	1	; case 15
  4625  079C' B4D8               	btfsc	status,2,c
  4626  079E' D5D5               	goto	l6623
  4627  07A0' 0A1F               	xorlw	31	; case 16
  4628  07A2' B4D8               	btfsc	status,2,c
  4629  07A4' D5DE               	goto	l6627
  4630  07A6' 0A01               	xorlw	1	; case 17
  4631  07A8' B4D8               	btfsc	status,2,c
  4632  07AA' D5F8               	goto	l6647
  4633  07AC' 0A03               	xorlw	3	; case 18
  4634  07AE' B4D8               	btfsc	status,2,c
  4635  07B0' D608               	goto	l6665
  4636  07B2' 0A01               	xorlw	1	; case 19
  4637  07B4' B4D8               	btfsc	status,2,c
  4638  07B6' D615               	goto	l6681
  4639  07B8' 0A07               	xorlw	7	; case 20
  4640  07BA' B4D8               	btfsc	status,2,c
  4641  07BC' D624               	goto	l6697
  4642  07BE' 0A01               	xorlw	1	; case 21
  4643  07C0' B4D8               	btfsc	status,2,c
  4644  07C2' D62B               	goto	l6709
  4645  07C4' 0A03               	xorlw	3	; case 22
  4646  07C6' B4D8               	btfsc	status,2,c
  4647  07C8' D651               	goto	l6739
  4648  07CA' 0A01               	xorlw	1	; case 23
  4649  07CC' B4D8               	btfsc	status,2,c
  4650  07CE' D655               	goto	l6745
  4651  07D0' 0A0F               	xorlw	15	; case 24
  4652  07D2' B4D8               	btfsc	status,2,c
  4653  07D4' D668               	goto	l6753
  4654  07D6' 0A01               	xorlw	1	; case 25
  4655  07D8' B4D8               	btfsc	status,2,c
  4656  07DA' D682               	goto	l6763
  4657  07DC' 0A03               	xorlw	3	; case 26
  4658  07DE' B4D8               	btfsc	status,2,c
  4659  07E0' D69B               	goto	l6773
  4660  07E2' 0A01               	xorlw	1	; case 27
  4661  07E4' B4D8               	btfsc	status,2,c
  4662  07E6' D6EE               	goto	l6805
  4663  07E8' 0A07               	xorlw	7	; case 28
  4664  07EA' B4D8               	btfsc	status,2,c
  4665  07EC' D6C0               	goto	l6781
  4666  07EE' 0A01               	xorlw	1	; case 29
  4667  07F0' B4D8               	btfsc	status,2,c
  4668  07F2' D6D4               	goto	l6789
  4669  07F4' 0A03               	xorlw	3	; case 30
  4670  07F6' B4D8               	btfsc	status,2,c
  4671  07F8' D6EF               	goto	l6813
  4672  07FA' 0A01               	xorlw	1	; case 31
  4673  07FC' B4D8               	btfsc	status,2,c
  4674  07FE' D6F1               	goto	l6817
  4675  0800' 0A3F               	xorlw	63	; case 32
  4676  0802' B4D8               	btfsc	status,2,c
  4677  0804' D70C               	goto	l6823
  4678  0806' 0A02               	xorlw	2	; case 34
  4679  0808' B4D8               	btfsc	status,2,c
  4680  080A' D727               	goto	l6835
  4681  080C' 0A01               	xorlw	1	; case 35
  4682  080E' B4D8               	btfsc	status,2,c
  4683  0810' D75E               	goto	l6855
  4684  0812' 0A06               	xorlw	6	; case 37
  4685  0814' A4D8               	btfss	status,2,c
  4686  0816' 0012               	return	
  4687  0818' D77A               	goto	l6869
  4688  081A'                    __end_of_menu:
  4689                           	callstack 0
  4690                           
  4691 ;; *************** function _getArrayShowUsers *****************
  4692 ;; Defined at:
  4693 ;;		line 85 in file "Usuaris.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  quin            1    wreg     unsigned char 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  quin            1    8[COMRAM] unsigned char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  2    5[COMRAM] PTR unsigned char 
  4700 ;; Registers used:
  4701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1
  4707 ;;      Params:         2       0       0
  4708 ;;      Locals:         1       0       0
  4709 ;;      Temps:          1       0       0
  4710 ;;      Totals:         4       0       0
  4711 ;;Total ram usage:        4 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; Hardware stack levels required when called: 2
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_menu
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text19
  4722  0000'                    __ptext19:
  4723                           	callstack 0
  4724  0000'                    _getArrayShowUsers:
  4725                           	callstack 27
  4726                           
  4727                           ;incstack = 0
  4728                           ;getArrayShowUsers@quin stored from wreg
  4729  0000' 6E00'              	movwf	getArrayShowUsers@quin^0,c
  4730                           
  4731                           ;Usuaris.c: 87:     return usuaris[arrayShowUsers[quin]].username;
  4732  0002' 5000'              	movf	getArrayShowUsers@quin^0,w,c
  4733  0004' 0F00'              	addlw	low _arrayShowUsers
  4734  0006' 6ED9               	movwf	fsr2l,c
  4735  0008' 6ADA               	clrf	fsr2h,c
  4736  000A' 50DF               	movf	indf2,w,c
  4737  000C' 6E00'              	movwf	??_getArrayShowUsers^0,c
  4738  000E' 5000'              	movf	??_getArrayShowUsers^0,w,c
  4739  0010' 0D17               	mullw	23
  4740  0012' 0E00'              	movlw	low _usuaris
  4741  0014' 24F3               	addwf	243,w,c
  4742  0016' 6E00'              	movwf	?_getArrayShowUsers^0,c
  4743  0018' 0E00'              	movlw	high _usuaris
  4744  001A' 20F4               	addwfc	prodh,w,c
  4745  001C' 6E00'              	movwf	(?_getArrayShowUsers+1)^0,c
  4746  001E' 0012               	return		;funcret
  4747  0020'                    __end_of_getArrayShowUsers:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function _checkHoraAcabat *****************
  4751 ;; Defined at:
  4752 ;;		line 41 in file "Hora.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;		None               void
  4759 ;; Registers used:
  4760 ;;		status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1
  4766 ;;      Params:         0       0       0
  4767 ;;      Locals:         0       0       0
  4768 ;;      Temps:          0       0       0
  4769 ;;      Totals:         0       0       0
  4770 ;;Total ram usage:        0 bytes
  4771 ;; Hardware stack levels used: 1
  4772 ;; Hardware stack levels required when called: 2
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_menu
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text20
  4781  0000'                    __ptext20:
  4782                           	callstack 0
  4783  0000'                    _checkHoraAcabat:
  4784                           	callstack 27
  4785                           
  4786                           ;Hora.c: 42:     return tempsAcabat;
  4787                           
  4788                           ;incstack = 0
  4789  0000' B000'              	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4790  0002' D002               	goto	l2249
  4791  0004' 90D8               	bcf	status,0,c
  4792  0006' 0012               	return	
  4793  0008'                    l2249:
  4794  0008' 80D8               	bsf	status,0,c
  4795  000A' 0012               	return		;funcret
  4796  000C'                    __end_of_checkHoraAcabat:
  4797                           	callstack 0
  4798                           
  4799 ;; *************** function _calculateShowUsers *****************
  4800 ;; Defined at:
  4801 ;;		line 188 in file "Usuaris.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;		None
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;		None
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      void 
  4808 ;; Registers used:
  4809 ;;		None
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1
  4815 ;;      Params:         0       0       0
  4816 ;;      Locals:         0       0       0
  4817 ;;      Temps:          0       0       0
  4818 ;;      Totals:         0       0       0
  4819 ;;Total ram usage:        0 bytes
  4820 ;; Hardware stack levels used: 1
  4821 ;; Hardware stack levels required when called: 2
  4822 ;; This function calls:
  4823 ;;		Nothing
  4824 ;; This function is called by:
  4825 ;;		_menu
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text21
  4830  0000'                    __ptext21:
  4831                           	callstack 0
  4832  0000'                    _calculateShowUsers:
  4833                           	callstack 27
  4834                           
  4835                           ;Usuaris.c: 189:     do_showUsers = 1;
  4836                           
  4837                           ;incstack = 0
  4838  0000' 8000'              	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4839  0002' 0012               	return		;funcret
  4840  0004'                    __end_of_calculateShowUsers:
  4841                           	callstack 0
  4842                           
  4843 ;; *************** function _UshowUsersCalculat *****************
  4844 ;; Defined at:
  4845 ;;		line 191 in file "Usuaris.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;		None               void
  4852 ;; Registers used:
  4853 ;;		status,0
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1
  4859 ;;      Params:         0       0       0
  4860 ;;      Locals:         0       0       0
  4861 ;;      Temps:          0       0       0
  4862 ;;      Totals:         0       0       0
  4863 ;;Total ram usage:        0 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; Hardware stack levels required when called: 2
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_menu
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text22
  4874  0000'                    __ptext22:
  4875                           	callstack 0
  4876  0000'                    _UshowUsersCalculat:
  4877                           	callstack 27
  4878                           
  4879                           ;Usuaris.c: 192:     return !do_showUsers;
  4880                           
  4881                           ;incstack = 0
  4882  0000' A000'              	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4883  0002' D002               	goto	l2271
  4884  0004' 90D8               	bcf	status,0,c
  4885  0006' 0012               	return	
  4886  0008'                    l2271:
  4887  0008' 80D8               	bsf	status,0,c
  4888  000A' 0012               	return		;funcret
  4889  000C'                    __end_of_UshowUsersCalculat:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function _UgetUserName *****************
  4893 ;; Defined at:
  4894 ;;		line 81 in file "Usuaris.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  quin            1    wreg     unsigned char 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  quin            1    7[COMRAM] unsigned char 
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  2    5[COMRAM] PTR unsigned char 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0, prodl, prodh
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/1
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1
  4908 ;;      Params:         2       0       0
  4909 ;;      Locals:         1       0       0
  4910 ;;      Temps:          0       0       0
  4911 ;;      Totals:         3       0       0
  4912 ;;Total ram usage:        3 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 2
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_menu
  4919 ;;		_motorSIO
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text23
  4924  0000'                    __ptext23:
  4925                           	callstack 0
  4926  0000'                    _UgetUserName:
  4927                           	callstack 27
  4928                           
  4929                           ;incstack = 0
  4930                           ;UgetUserName@quin stored from wreg
  4931  0000' 6E00'              	movwf	UgetUserName@quin^0,c
  4932                           
  4933                           ;Usuaris.c: 82:     return usuaris[quin].username;
  4934  0002' 5000'              	movf	UgetUserName@quin^0,w,c
  4935  0004' 0D17               	mullw	23
  4936  0006' 0E00'              	movlw	low _usuaris
  4937  0008' 24F3               	addwf	243,w,c
  4938  000A' 6E00'              	movwf	?_UgetUserName^0,c
  4939  000C' 0E00'              	movlw	high _usuaris
  4940  000E' 20F4               	addwfc	prodh,w,c
  4941  0010' 6E00'              	movwf	(?_UgetUserName+1)^0,c
  4942  0012' 0012               	return		;funcret
  4943  0014'                    __end_of_UgetUserName:
  4944                           	callstack 0
  4945                           
  4946 ;; *************** function _UgetTop5 *****************
  4947 ;; Defined at:
  4948 ;;		line 304 in file "Usuaris.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  quin            1    wreg     unsigned char 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  quin            1    5[COMRAM] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      char 
  4955 ;; Registers used:
  4956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1
  4962 ;;      Params:         0       0       0
  4963 ;;      Locals:         1       0       0
  4964 ;;      Temps:          0       0       0
  4965 ;;      Totals:         1       0       0
  4966 ;;Total ram usage:        1 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 2
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_menu
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text24
  4977  0000'                    __ptext24:
  4978                           	callstack 0
  4979  0000'                    _UgetTop5:
  4980                           	callstack 27
  4981                           
  4982                           ;incstack = 0
  4983                           ;UgetTop5@quin stored from wreg
  4984  0000' 6E00'              	movwf	UgetTop5@quin^0,c
  4985                           
  4986                           ;Usuaris.c: 305:     return puntuacions[quin].indexStruct;
  4987  0002' 5000'              	movf	UgetTop5@quin^0,w,c
  4988  0004' 0D02               	mullw	2
  4989  0006' 50F3               	movf	243,w,c
  4990  0008' 0F00'              	addlw	low _puntuacions
  4991  000A' 6ED9               	movwf	fsr2l,c
  4992  000C' 6ADA               	clrf	fsr2h,c
  4993  000E' 50DF               	movf	indf2,w,c
  4994  0010' 0012               	return		;funcret
  4995  0012'                    __end_of_UgetTop5:
  4996                           	callstack 0
  4997                           
  4998 ;; *************** function _UgetScore *****************
  4999 ;; Defined at:
  5000 ;;		line 301 in file "Usuaris.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  quin            1    wreg     unsigned char 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  quin            1    5[COMRAM] unsigned char 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      unsigned char 
  5007 ;; Registers used:
  5008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMRAM   BANK0   BANK1
  5014 ;;      Params:         0       0       0
  5015 ;;      Locals:         1       0       0
  5016 ;;      Temps:          0       0       0
  5017 ;;      Totals:         1       0       0
  5018 ;;Total ram usage:        1 bytes
  5019 ;; Hardware stack levels used: 1
  5020 ;; Hardware stack levels required when called: 2
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_menu
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text25
  5029  0000'                    __ptext25:
  5030                           	callstack 0
  5031  0000'                    _UgetScore:
  5032                           	callstack 27
  5033                           
  5034                           ;incstack = 0
  5035                           ;UgetScore@quin stored from wreg
  5036  0000' 6E00'              	movwf	UgetScore@quin^0,c
  5037                           
  5038                           ;Usuaris.c: 302:     return puntuacions[quin].score;
  5039  0002' 5000'              	movf	UgetScore@quin^0,w,c
  5040  0004' 0D02               	mullw	2
  5041  0006' 50F3               	movf	243,w,c
  5042  0008' 0F00'              	addlw	low (_puntuacions+1)
  5043  000A' 6ED9               	movwf	fsr2l,c
  5044  000C' 6ADA               	clrf	fsr2h,c
  5045  000E' 50DF               	movf	indf2,w,c
  5046  0010' 0012               	return		;funcret
  5047  0012'                    __end_of_UgetScore:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _UgetNumUsuaris *****************
  5051 ;; Defined at:
  5052 ;;		line 57 in file "Usuaris.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      unsigned char 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1
  5066 ;;      Params:         0       0       0
  5067 ;;      Locals:         0       0       0
  5068 ;;      Temps:          0       0       0
  5069 ;;      Totals:         0       0       0
  5070 ;;Total ram usage:        0 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 2
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_menu
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text26
  5081  0000'                    __ptext26:
  5082                           	callstack 0
  5083  0000'                    _UgetNumUsuaris:
  5084                           	callstack 27
  5085                           
  5086                           ;Usuaris.c: 58:     return numUsuaris;
  5087                           
  5088                           ;incstack = 0
  5089  0000' 5000'              	movf	_numUsuaris^0,w,c
  5090  0002' 0012               	return		;funcret
  5091  0004'                    __end_of_UgetNumUsuaris:
  5092                           	callstack 0
  5093                           
  5094 ;; *************** function _UenviaPas *****************
  5095 ;; Defined at:
  5096 ;;		line 73 in file "Usuaris.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  c               1    wreg     unsigned char 
  5099 ;;  pos             1    5[COMRAM] unsigned char 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  c               1    6[COMRAM] unsigned char 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  1    wreg      void 
  5104 ;; Registers used:
  5105 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1
  5111 ;;      Params:         1       0       0
  5112 ;;      Locals:         1       0       0
  5113 ;;      Temps:          0       0       0
  5114 ;;      Totals:         2       0       0
  5115 ;;Total ram usage:        2 bytes
  5116 ;; Hardware stack levels used: 1
  5117 ;; Hardware stack levels required when called: 2
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_menu
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text27
  5126  0000'                    __ptext27:
  5127                           	callstack 0
  5128  0000'                    _UenviaPas:
  5129                           	callstack 27
  5130                           
  5131                           ;incstack = 0
  5132                           ;UenviaPas@c stored from wreg
  5133  0000' 6E00'              	movwf	UenviaPas@c^0,c
  5134                           
  5135                           ;Usuaris.c: 74:     tmpPassword[pos] = c;
  5136  0002' 5000'              	movf	UenviaPas@pos^0,w,c
  5137  0004' 0F00'              	addlw	low _tmpPassword
  5138  0006' 6ED9               	movwf	fsr2l,c
  5139  0008' 6ADA               	clrf	fsr2h,c
  5140  000A' C006' FFDF         	movff	UenviaPas@c,indf2
  5141  000E' 0012               	return		;funcret
  5142  0010'                    __end_of_UenviaPas:
  5143                           	callstack 0
  5144                           
  5145 ;; *************** function _UenviaChar *****************
  5146 ;; Defined at:
  5147 ;;		line 70 in file "Usuaris.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;  c               1    wreg     unsigned char 
  5150 ;;  pos             1    5[COMRAM] unsigned char 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  c               1    6[COMRAM] unsigned char 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1
  5162 ;;      Params:         1       0       0
  5163 ;;      Locals:         1       0       0
  5164 ;;      Temps:          0       0       0
  5165 ;;      Totals:         2       0       0
  5166 ;;Total ram usage:        2 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 2
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_menu
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text28
  5177  0000'                    __ptext28:
  5178                           	callstack 0
  5179  0000'                    _UenviaChar:
  5180                           	callstack 27
  5181                           
  5182                           ;incstack = 0
  5183                           ;UenviaChar@c stored from wreg
  5184  0000' 6E00'              	movwf	UenviaChar@c^0,c
  5185                           
  5186                           ;Usuaris.c: 71:     tmpUsername[pos] = c;
  5187  0002' 5000'              	movf	UenviaChar@pos^0,w,c
  5188  0004' 0F00'              	addlw	low _tmpUsername
  5189  0006' 6ED9               	movwf	fsr2l,c
  5190  0008' 6ADA               	clrf	fsr2h,c
  5191  000A' C006' FFDF         	movff	UenviaChar@c,indf2
  5192  000E' 0012               	return		;funcret
  5193  0010'                    __end_of_UenviaChar:
  5194                           	callstack 0
  5195                           
  5196 ;; *************** function _UcheckExistsNotFinished *****************
  5197 ;; Defined at:
  5198 ;;		line 64 in file "Usuaris.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;		None
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;		None
  5203 ;; Return value:  Size  Location     Type
  5204 ;;		None               void
  5205 ;; Registers used:
  5206 ;;		status,0
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1
  5212 ;;      Params:         0       0       0
  5213 ;;      Locals:         0       0       0
  5214 ;;      Temps:          0       0       0
  5215 ;;      Totals:         0       0       0
  5216 ;;Total ram usage:        0 bytes
  5217 ;; Hardware stack levels used: 1
  5218 ;; Hardware stack levels required when called: 2
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_menu
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text29
  5227  0000'                    __ptext29:
  5228                           	callstack 0
  5229  0000'                    _UcheckExistsNotFinished:
  5230                           	callstack 27
  5231                           
  5232                           ;Usuaris.c: 65:     return do_check_exists;
  5233                           
  5234                           ;incstack = 0
  5235  0000' B000'              	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5236  0002' D002               	goto	l2209
  5237  0004' 90D8               	bcf	status,0,c
  5238  0006' 0012               	return	
  5239  0008'                    l2209:
  5240  0008' 80D8               	bsf	status,0,c
  5241  000A' 0012               	return		;funcret
  5242  000C'                    __end_of_UcheckExistsNotFinished:
  5243                           	callstack 0
  5244                           
  5245 ;; *************** function _UcheckExistsGetError *****************
  5246 ;; Defined at:
  5247 ;;		line 67 in file "Usuaris.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      char 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1
  5261 ;;      Params:         0       0       0
  5262 ;;      Locals:         0       0       0
  5263 ;;      Temps:          0       0       0
  5264 ;;      Totals:         0       0       0
  5265 ;;Total ram usage:        0 bytes
  5266 ;; Hardware stack levels used: 1
  5267 ;; Hardware stack levels required when called: 2
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_menu
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text30
  5276  0000'                    __ptext30:
  5277                           	callstack 0
  5278  0000'                    _UcheckExistsGetError:
  5279                           	callstack 27
  5280                           
  5281                           ;Usuaris.c: 68:     return usuariLoguejat;
  5282                           
  5283                           ;incstack = 0
  5284  0000' 5000'              	movf	_usuariLoguejat^0,w,c
  5285  0002' 0012               	return		;funcret
  5286  0004'                    __end_of_UcheckExistsGetError:
  5287                           	callstack 0
  5288                           
  5289 ;; *************** function _UcheckExists *****************
  5290 ;; Defined at:
  5291 ;;		line 61 in file "Usuaris.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		None
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1
  5305 ;;      Params:         0       0       0
  5306 ;;      Locals:         0       0       0
  5307 ;;      Temps:          0       0       0
  5308 ;;      Totals:         0       0       0
  5309 ;;Total ram usage:        0 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; Hardware stack levels required when called: 2
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_menu
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           	psect	text31
  5320  0000'                    __ptext31:
  5321                           	callstack 0
  5322  0000'                    _UcheckExists:
  5323                           	callstack 27
  5324                           
  5325                           ;Usuaris.c: 62:     do_check_exists = 1;
  5326                           
  5327                           ;incstack = 0
  5328  0000' 8000'              	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5329  0002' 0012               	return		;funcret
  5330  0004'                    __end_of_UcheckExists:
  5331                           	callstack 0
  5332                           
  5333 ;; *************** function _URegister *****************
  5334 ;; Defined at:
  5335 ;;		line 77 in file "Usuaris.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;		None
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      void 
  5342 ;; Registers used:
  5343 ;;		None
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1
  5349 ;;      Params:         0       0       0
  5350 ;;      Locals:         0       0       0
  5351 ;;      Temps:          0       0       0
  5352 ;;      Totals:         0       0       0
  5353 ;;Total ram usage:        0 bytes
  5354 ;; Hardware stack levels used: 1
  5355 ;; Hardware stack levels required when called: 2
  5356 ;; This function calls:
  5357 ;;		Nothing
  5358 ;; This function is called by:
  5359 ;;		_menu
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	text32
  5364  0000'                    __ptext32:
  5365                           	callstack 0
  5366  0000'                    _URegister:
  5367                           	callstack 27
  5368                           
  5369                           ;Usuaris.c: 78:     do_register = 1;
  5370                           
  5371                           ;incstack = 0
  5372  0000' 8000'              	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5373  0002' 0012               	return		;funcret
  5374  0004'                    __end_of_URegister:
  5375                           	callstack 0
  5376                           
  5377 ;; *************** function _SiFerMenu *****************
  5378 ;; Defined at:
  5379 ;;		line 19 in file "GestioLCD.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		None
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1
  5393 ;;      Params:         0       0       0
  5394 ;;      Locals:         0       0       0
  5395 ;;      Temps:          0       0       0
  5396 ;;      Totals:         0       0       0
  5397 ;;Total ram usage:        0 bytes
  5398 ;; Hardware stack levels used: 1
  5399 ;; Hardware stack levels required when called: 2
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		_menu
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text33
  5408  0000'                    __ptext33:
  5409                           	callstack 0
  5410  0000'                    _SiFerMenu:
  5411                           	callstack 27
  5412                           
  5413                           ;GestioLCD.c: 20:     ferMenu = 1;
  5414                           
  5415                           ;incstack = 0
  5416  0000' 8000'              	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5417  0002' 0012               	return		;funcret
  5418  0004'                    __end_of_SiFerMenu:
  5419                           	callstack 0
  5420                           
  5421 ;; *************** function _SMSon *****************
  5422 ;; Defined at:
  5423 ;;		line 129 in file "Ssms.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		None
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1
  5437 ;;      Params:         0       0       0
  5438 ;;      Locals:         0       0       0
  5439 ;;      Temps:          0       0       0
  5440 ;;      Totals:         0       0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used: 1
  5443 ;; Hardware stack levels required when called: 2
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_menu
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text34
  5452  0000'                    __ptext34:
  5453                           	callstack 0
  5454  0000'                    _SMSon:
  5455                           	callstack 27
  5456                           
  5457                           ;Ssms.c: 130:     setSMSon = 1;
  5458                           
  5459                           ;incstack = 0
  5460  0000' 8000'              	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5461                           
  5462                           ;Ssms.c: 131:     novaTecla = -1;
  5463  0002' 6800'              	setf	_novaTecla^0,c
  5464  0004' 0012               	return		;funcret
  5465  0006'                    __end_of_SMSon:
  5466                           	callstack 0
  5467                           
  5468 ;; *************** function _SMSoff *****************
  5469 ;; Defined at:
  5470 ;;		line 134 in file "Ssms.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		None
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1
  5484 ;;      Params:         0       0       0
  5485 ;;      Locals:         0       0       0
  5486 ;;      Temps:          0       0       0
  5487 ;;      Totals:         0       0       0
  5488 ;;Total ram usage:        0 bytes
  5489 ;; Hardware stack levels used: 1
  5490 ;; Hardware stack levels required when called: 2
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_menu
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text35
  5499  0000'                    __ptext35:
  5500                           	callstack 0
  5501  0000'                    _SMSoff:
  5502                           	callstack 27
  5503                           
  5504                           ;Ssms.c: 135:     setSMSon = 0;
  5505                           
  5506                           ;incstack = 0
  5507  0000' 9000'              	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5508                           
  5509                           ;Ssms.c: 136:     novaTecla = -1;
  5510  0002' 6800'              	setf	_novaTecla^0,c
  5511  0004' 0012               	return		;funcret
  5512  0006'                    __end_of_SMSoff:
  5513                           	callstack 0
  5514                           
  5515 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5516 ;; Defined at:
  5517 ;;		line 36 in file "SIO.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;		None
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      char 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1
  5531 ;;      Params:         0       0       0
  5532 ;;      Locals:         0       0       0
  5533 ;;      Temps:          0       0       0
  5534 ;;      Totals:         0       0       0
  5535 ;;Total ram usage:        0 bytes
  5536 ;; Hardware stack levels used: 1
  5537 ;; Hardware stack levels required when called: 2
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_menu
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text36
  5546  0000'                    __ptext36:
  5547                           	callstack 0
  5548  0000'                    _SIOHaAcabatPuntuacions:
  5549                           	callstack 27
  5550                           
  5551                           ;SIO.c: 37:     return usuariActualSIO;
  5552                           
  5553                           ;incstack = 0
  5554  0000' 5000'              	movf	_usuariActualSIO^0,w,c
  5555  0002' 0012               	return		;funcret
  5556  0004'                    __end_of_SIOHaAcabatPuntuacions:
  5557                           	callstack 0
  5558                           
  5559 ;; *************** function _NoFerMenu *****************
  5560 ;; Defined at:
  5561 ;;		line 22 in file "GestioLCD.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;		None
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      void 
  5568 ;; Registers used:
  5569 ;;		None
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1
  5575 ;;      Params:         0       0       0
  5576 ;;      Locals:         0       0       0
  5577 ;;      Temps:          0       0       0
  5578 ;;      Totals:         0       0       0
  5579 ;;Total ram usage:        0 bytes
  5580 ;; Hardware stack levels used: 1
  5581 ;; Hardware stack levels required when called: 2
  5582 ;; This function calls:
  5583 ;;		Nothing
  5584 ;; This function is called by:
  5585 ;;		_menu
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text37
  5590  0000'                    __ptext37:
  5591                           	callstack 0
  5592  0000'                    _NoFerMenu:
  5593                           	callstack 27
  5594                           
  5595                           ;GestioLCD.c: 23:     ferMenu = 0;
  5596                           
  5597                           ;incstack = 0
  5598  0000' 9000'              	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5599  0002' 0012               	return		;funcret
  5600  0004'                    __end_of_NoFerMenu:
  5601                           	callstack 0
  5602                           
  5603 ;; *************** function _LcScroll *****************
  5604 ;; Defined at:
  5605 ;;		line 37 in file "LcTLCD.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;		None
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, status,2, status,0, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1
  5619 ;;      Params:         0       0       0
  5620 ;;      Locals:         0       0       0
  5621 ;;      Temps:          0       0       0
  5622 ;;      Totals:         0       0       0
  5623 ;;Total ram usage:        0 bytes
  5624 ;; Hardware stack levels used: 1
  5625 ;; Hardware stack levels required when called: 4
  5626 ;; This function calls:
  5627 ;;		_CantaIR
  5628 ;; This function is called by:
  5629 ;;		_menu
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text38
  5634  0000'                    __ptext38:
  5635                           	callstack 0
  5636  0000'                    _LcScroll:
  5637                           	callstack 25
  5638                           
  5639                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5640                           
  5641                           ;incstack = 0
  5642  0000' 0E18               	movlw	24
  5643  0002' EC00' F000'        	call	_CantaIR
  5644  0006' 0012               	return		;funcret
  5645  0008'                    __end_of_LcScroll:
  5646                           	callstack 0
  5647                           
  5648 ;; *************** function _JnovaTecla *****************
  5649 ;; Defined at:
  5650 ;;		line 16 in file "Joc.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  tecla           1    wreg     char 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  tecla           1    5[COMRAM] char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		wreg
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1
  5664 ;;      Params:         0       0       0
  5665 ;;      Locals:         1       0       0
  5666 ;;      Temps:          0       0       0
  5667 ;;      Totals:         1       0       0
  5668 ;;Total ram usage:        1 bytes
  5669 ;; Hardware stack levels used: 1
  5670 ;; Hardware stack levels required when called: 2
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_menu
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text39
  5679  0000'                    __ptext39:
  5680                           	callstack 0
  5681  0000'                    _JnovaTecla:
  5682                           	callstack 27
  5683                           
  5684                           ;incstack = 0
  5685                           ;JnovaTecla@tecla stored from wreg
  5686  0000' 6E00'              	movwf	JnovaTecla@tecla^0,c
  5687                           
  5688                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5689  0002' C005' F004'        	movff	JnovaTecla@tecla,_novaTeclaJOC
  5690  0006' 0012               	return		;funcret
  5691  0008'                    __end_of_JnovaTecla:
  5692                           	callstack 0
  5693                           
  5694 ;; *************** function _JnovaDireccio *****************
  5695 ;; Defined at:
  5696 ;;		line 19 in file "Joc.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  dir             1    wreg     unsigned char 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  dir             1    5[COMRAM] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1
  5710 ;;      Params:         0       0       0
  5711 ;;      Locals:         1       0       0
  5712 ;;      Temps:          0       0       0
  5713 ;;      Totals:         1       0       0
  5714 ;;Total ram usage:        1 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 2
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_menu
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text40
  5725  0000'                    __ptext40:
  5726                           	callstack 0
  5727  0000'                    _JnovaDireccio:
  5728                           	callstack 27
  5729                           
  5730                           ;incstack = 0
  5731                           ;JnovaDireccio@dir stored from wreg
  5732  0000' 6E00'              	movwf	JnovaDireccio@dir^0,c
  5733                           
  5734                           ;Joc.c: 20:     direccioJoc = dir;
  5735  0002' C005' F014'        	movff	JnovaDireccio@dir,_direccioJoc
  5736  0006' 0012               	return		;funcret
  5737  0008'                    __end_of_JnovaDireccio:
  5738                           	callstack 0
  5739                           
  5740 ;; *************** function _JendGame *****************
  5741 ;; Defined at:
  5742 ;;		line 27 in file "Joc.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;		None
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;		None
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      void 
  5749 ;; Registers used:
  5750 ;;		None
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1
  5756 ;;      Params:         0       0       0
  5757 ;;      Locals:         0       0       0
  5758 ;;      Temps:          0       0       0
  5759 ;;      Totals:         0       0       0
  5760 ;;Total ram usage:        0 bytes
  5761 ;; Hardware stack levels used: 1
  5762 ;; Hardware stack levels required when called: 2
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_menu
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text41
  5771  0000'                    __ptext41:
  5772                           	callstack 0
  5773  0000'                    _JendGame:
  5774                           	callstack 27
  5775                           
  5776                           ;Joc.c: 28:     jugantJoc = 0;
  5777                           
  5778                           ;incstack = 0
  5779  0000' 9000'              	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5780  0002' 0012               	return		;funcret
  5781  0004'                    __end_of_JendGame:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _JJuguem *****************
  5785 ;; Defined at:
  5786 ;;		line 13 in file "Joc.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  usuari          1    wreg     unsigned char 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  usuari          1    5[COMRAM] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		wreg
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1
  5800 ;;      Params:         0       0       0
  5801 ;;      Locals:         1       0       0
  5802 ;;      Temps:          0       0       0
  5803 ;;      Totals:         1       0       0
  5804 ;;Total ram usage:        1 bytes
  5805 ;; Hardware stack levels used: 1
  5806 ;; Hardware stack levels required when called: 2
  5807 ;; This function calls:
  5808 ;;		Nothing
  5809 ;; This function is called by:
  5810 ;;		_menu
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text42
  5815  0000'                    __ptext42:
  5816                           	callstack 0
  5817  0000'                    _JJuguem:
  5818                           	callstack 27
  5819                           
  5820                           ;incstack = 0
  5821                           ;JJuguem@usuari stored from wreg
  5822  0000' 6E00'              	movwf	JJuguem@usuari^0,c
  5823                           
  5824                           ;Joc.c: 14:     usuariJoc = usuari;
  5825  0002' C005' F005'        	movff	JJuguem@usuari,_usuariJoc
  5826  0006' 0012               	return		;funcret
  5827  0008'                    __end_of_JJuguem:
  5828                           	callstack 0
  5829                           
  5830 ;; *************** function _HActualitzaHora *****************
  5831 ;; Defined at:
  5832 ;;		line 15 in file "Hora.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5835 ;;		 -> horaTmp(4), 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;		None
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1    wreg      void 
  5840 ;; Registers used:
  5841 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1
  5847 ;;      Params:         1       0       0
  5848 ;;      Locals:         0       0       0
  5849 ;;      Temps:          0       0       0
  5850 ;;      Totals:         1       0       0
  5851 ;;Total ram usage:        1 bytes
  5852 ;; Hardware stack levels used: 1
  5853 ;; Hardware stack levels required when called: 2
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_menu
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text43
  5862  0000'                    __ptext43:
  5863                           	callstack 0
  5864  0000'                    _HActualitzaHora:
  5865                           	callstack 27
  5866                           
  5867                           ;Hora.c: 16:     hora[0] = nova[0];
  5868                           
  5869                           ;incstack = 0
  5870  0000' 5000'              	movf	HActualitzaHora@nova^0,w,c
  5871  0002' 6ED9               	movwf	fsr2l,c
  5872  0004' 6ADA               	clrf	fsr2h,c
  5873  0006' 50DF               	movf	indf2,w,c
  5874  0008' 6E00'              	movwf	_hora^0,c
  5875                           
  5876                           ;Hora.c: 17:     hora[1] = nova[1];
  5877  000A' 5000'              	movf	HActualitzaHora@nova^0,w,c
  5878  000C' 6ED9               	movwf	fsr2l,c
  5879  000E' 6ADA               	clrf	fsr2h,c
  5880  0010' 0E01               	movlw	1
  5881  0012' 26D9               	addwf	fsr2l,f,c
  5882  0014' 50DF               	movf	indf2,w,c
  5883  0016' 6E00'              	movwf	(_hora+1)^0,c
  5884                           
  5885                           ;Hora.c: 18:     hora[3] = nova[2];
  5886  0018' 5000'              	movf	HActualitzaHora@nova^0,w,c
  5887  001A' 6ED9               	movwf	fsr2l,c
  5888  001C' 6ADA               	clrf	fsr2h,c
  5889  001E' 0E02               	movlw	2
  5890  0020' 26D9               	addwf	fsr2l,f,c
  5891  0022' 50DF               	movf	indf2,w,c
  5892  0024' 6E00'              	movwf	(_hora+3)^0,c
  5893                           
  5894                           ;Hora.c: 19:     hora[4] = nova[3];
  5895  0026' 5000'              	movf	HActualitzaHora@nova^0,w,c
  5896  0028' 6ED9               	movwf	fsr2l,c
  5897  002A' 6ADA               	clrf	fsr2h,c
  5898  002C' 0E03               	movlw	3
  5899  002E' 26D9               	addwf	fsr2l,f,c
  5900  0030' 50DF               	movf	indf2,w,c
  5901  0032' 6E00'              	movwf	(_hora+4)^0,c
  5902  0034' 0012               	return		;funcret
  5903  0036'                    __end_of_HActualitzaHora:
  5904                           	callstack 0
  5905                           
  5906 ;; *************** function _GLCDMostraMenu *****************
  5907 ;; Defined at:
  5908 ;;		line 30 in file "GestioLCD.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  num             1    wreg     unsigned char 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  num             1    5[COMRAM] unsigned char 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      void 
  5915 ;; Registers used:
  5916 ;;		wreg
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1
  5922 ;;      Params:         0       0       0
  5923 ;;      Locals:         1       0       0
  5924 ;;      Temps:          0       0       0
  5925 ;;      Totals:         1       0       0
  5926 ;;Total ram usage:        1 bytes
  5927 ;; Hardware stack levels used: 1
  5928 ;; Hardware stack levels required when called: 2
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_menu
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text44
  5937  0000'                    __ptext44:
  5938                           	callstack 0
  5939  0000'                    _GLCDMostraMenu:
  5940                           	callstack 27
  5941                           
  5942                           ;incstack = 0
  5943                           ;GLCDMostraMenu@num stored from wreg
  5944  0000' 6E00'              	movwf	GLCDMostraMenu@num^0,c
  5945                           
  5946                           ;GestioLCD.c: 31:     newString = 1;
  5947  0002' 8000'              	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5948                           
  5949                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5950  0004' C005' F022'        	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5951                           
  5952                           ;GestioLCD.c: 33:     ferMenu = 1;
  5953  0008' 8000'              	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5954  000A' 0012               	return		;funcret
  5955  000C'                    __end_of_GLCDMostraMenu:
  5956                           	callstack 0
  5957                           
  5958 ;; *************** function _CToAobtenir *****************
  5959 ;; Defined at:
  5960 ;;		line 7 in file "CtoA.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;		None
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;		None
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1    wreg      PTR unsigned char 
  5967 ;; Registers used:
  5968 ;;		wreg
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/1
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1
  5974 ;;      Params:         2       0       0
  5975 ;;      Locals:         0       0       0
  5976 ;;      Temps:          0       0       0
  5977 ;;      Totals:         2       0       0
  5978 ;;Total ram usage:        2 bytes
  5979 ;; Hardware stack levels used: 1
  5980 ;; Hardware stack levels required when called: 2
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_menu
  5985 ;;		_motorSIO
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text45
  5990  0000'                    __ptext45:
  5991                           	callstack 0
  5992  0000'                    _CToAobtenir:
  5993                           	callstack 27
  5994                           
  5995                           ;CtoA.c: 8:     return stringScore;
  5996                           
  5997                           ;incstack = 0
  5998  0000' 0E00'              	movlw	_stringScore& (0+255)
  5999  0002' 0012               	return		;funcret
  6000  0004'                    __end_of_CToAobtenir:
  6001                           	callstack 0
  6002                           
  6003 ;; *************** function _CToAHaAcabat *****************
  6004 ;; Defined at:
  6005 ;;		line 10 in file "CtoA.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;		None
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;		None
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      unsigned char 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/1
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1
  6019 ;;      Params:         0       0       0
  6020 ;;      Locals:         0       0       0
  6021 ;;      Temps:          0       0       0
  6022 ;;      Totals:         0       0       0
  6023 ;;Total ram usage:        0 bytes
  6024 ;; Hardware stack levels used: 1
  6025 ;; Hardware stack levels required when called: 2
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_menu
  6030 ;;		_motorSIO
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           	psect	text46
  6035  0000'                    __ptext46:
  6036                           	callstack 0
  6037  0000'                    _CToAHaAcabat:
  6038                           	callstack 27
  6039                           
  6040                           ;CtoA.c: 11:     return convertir;
  6041                           
  6042                           ;incstack = 0
  6043  0000' 5000'              	movf	_convertir^0,w,c
  6044  0002' 0012               	return		;funcret
  6045  0004'                    __end_of_CToAHaAcabat:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function _CToAConverteix *****************
  6049 ;; Defined at:
  6050 ;;		line 14 in file "CtoA.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  numero          1    wreg     unsigned char 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  numero          1    5[COMRAM] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/1
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1
  6064 ;;      Params:         0       0       0
  6065 ;;      Locals:         1       0       0
  6066 ;;      Temps:          0       0       0
  6067 ;;      Totals:         1       0       0
  6068 ;;Total ram usage:        1 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 3
  6071 ;; This function calls:
  6072 ;;		_CToAReset
  6073 ;; This function is called by:
  6074 ;;		_menu
  6075 ;;		_motorSIO
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text47
  6080  0000'                    __ptext47:
  6081                           	callstack 0
  6082  0000'                    _CToAConverteix:
  6083                           	callstack 26
  6084                           
  6085                           ;incstack = 0
  6086                           ;CToAConverteix@numero stored from wreg
  6087  0000' 6E00'              	movwf	CToAConverteix@numero^0,c
  6088                           
  6089                           ;CtoA.c: 15:     CToAReset();
  6090  0002' EC00' F000'        	call	_CToAReset	;wreg free
  6091                           
  6092                           ;CtoA.c: 16:     convertir = numero;
  6093  0006' C005' F000'        	movff	CToAConverteix@numero,_convertir
  6094  000A' 0012               	return		;funcret
  6095  000C'                    __end_of_CToAConverteix:
  6096                           	callstack 0
  6097                           
  6098 ;; *************** function _CToAReset *****************
  6099 ;; Defined at:
  6100 ;;		line 18 in file "CtoA.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		wreg, status,2
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/1
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1
  6114 ;;      Params:         0       0       0
  6115 ;;      Locals:         0       0       0
  6116 ;;      Temps:          0       0       0
  6117 ;;      Totals:         0       0       0
  6118 ;;Total ram usage:        0 bytes
  6119 ;; Hardware stack levels used: 1
  6120 ;; Hardware stack levels required when called: 2
  6121 ;; This function calls:
  6122 ;;		Nothing
  6123 ;; This function is called by:
  6124 ;;		_CToAConverteix
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text48
  6129  0000'                    __ptext48:
  6130                           	callstack 0
  6131  0000'                    _CToAReset:
  6132                           	callstack 26
  6133                           
  6134                           ;CtoA.c: 19:     stringScore[0] = '0';
  6135                           
  6136                           ;incstack = 0
  6137  0000' 0E30               	movlw	48
  6138  0002' 6E00'              	movwf	_stringScore^0,c
  6139                           
  6140                           ;CtoA.c: 20:     stringScore[1] = '0';
  6141  0004' 0E30               	movlw	48
  6142  0006' 6E00'              	movwf	(_stringScore+1)^0,c
  6143  0008' 0012               	return		;funcret
  6144  000A'                    __end_of_CToAReset:
  6145                           	callstack 0
  6146                           
  6147 ;; *************** function _init_ports *****************
  6148 ;; Defined at:
  6149 ;;		line 26 in file "main.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;		None
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, status,2
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1
  6163 ;;      Params:         0       0       0
  6164 ;;      Locals:         0       0       0
  6165 ;;      Temps:          0       0       0
  6166 ;;      Totals:         0       0       0
  6167 ;;Total ram usage:        0 bytes
  6168 ;; Hardware stack levels used: 1
  6169 ;; Hardware stack levels required when called: 2
  6170 ;; This function calls:
  6171 ;;		Nothing
  6172 ;; This function is called by:
  6173 ;;		_main
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text49
  6178  0000'                    __ptext49:
  6179                           	callstack 0
  6180  0000'                    _init_ports:
  6181                           	callstack 28
  6182                           
  6183                           ;incstack = 0
  6184  0000' 0E03               	movlw	3
  6185  0002' 6E92               	movwf	146,c	;volatile
  6186  0004' 0EE0               	movlw	224
  6187  0006' 6E93               	movwf	147,c	;volatile
  6188  0008' 968A               	bcf	138,3,c	;volatile
  6189  000A' 908A               	bcf	138,0,c	;volatile
  6190  000C' 928A               	bcf	138,1,c	;volatile
  6191                           
  6192                           ;main.c: 50:     TRISC = 0xC0;
  6193  000E' 0EC0               	movlw	192
  6194  0010' 6E94               	movwf	148,c	;volatile
  6195                           
  6196                           ;main.c: 60:     TRISD = 0x8F;
  6197  0012' 0E8F               	movlw	143
  6198  0014' 6E95               	movwf	149,c	;volatile
  6199                           
  6200                           ;main.c: 61:     LATD = 0x00;
  6201  0016' 0E00               	movlw	0
  6202  0018' 6E8C               	movwf	140,c	;volatile
  6203                           
  6204                           ;main.c: 64:     EECON1bits.EEPGD = 1;
  6205  001A' 8EA6               	bsf	166,7,c	;volsfr
  6206                           
  6207                           ;main.c: 65:     EECON1bits.CFGS = 0;
  6208  001C' 9CA6               	bcf	166,6,c	;volsfr
  6209  001E' 0012               	return		;funcret
  6210  0020'                    __end_of_init_ports:
  6211                           	callstack 0
  6212                           
  6213 ;; *************** function _init_eusart *****************
  6214 ;; Defined at:
  6215 ;;		line 68 in file "main.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;		None
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  1    wreg      void 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1
  6229 ;;      Params:         0       0       0
  6230 ;;      Locals:         0       0       0
  6231 ;;      Temps:          0       0       0
  6232 ;;      Totals:         0       0       0
  6233 ;;Total ram usage:        0 bytes
  6234 ;; Hardware stack levels used: 1
  6235 ;; Hardware stack levels required when called: 2
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_main
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text50
  6244  0000'                    __ptext50:
  6245                           	callstack 0
  6246  0000'                    _init_eusart:
  6247                           	callstack 28
  6248                           
  6249                           ;main.c: 69:     TXSTA = 0x24;
  6250                           
  6251                           ;incstack = 0
  6252  0000' 0E24               	movlw	36
  6253  0002' 6EAC               	movwf	172,c	;volatile
  6254                           
  6255                           ;main.c: 70:     RCSTA = 0x90;
  6256  0004' 0E90               	movlw	144
  6257  0006' 6EAB               	movwf	171,c	;volatile
  6258                           
  6259                           ;main.c: 71:     BAUDCON = 0x08;
  6260  0008' 0E08               	movlw	8
  6261  000A' 6EB8               	movwf	184,c	;volatile
  6262                           
  6263                           ;main.c: 72:     SPBRGH = 0x04;
  6264  000C' 0E04               	movlw	4
  6265  000E' 6EB0               	movwf	176,c	;volatile
  6266                           
  6267                           ;main.c: 73:     SPBRG = 0x10;
  6268  0010' 0E10               	movlw	16
  6269  0012' 6EAF               	movwf	175,c	;volatile
  6270  0014' 0012               	return		;funcret
  6271  0016'                    __end_of_init_eusart:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function _initSIO *****************
  6275 ;; Defined at:
  6276 ;;		line 18 in file "SIO.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;		None
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;		None
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      void 
  6283 ;; Registers used:
  6284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1
  6290 ;;      Params:         0       0       0
  6291 ;;      Locals:         0       0       0
  6292 ;;      Temps:          0       0       0
  6293 ;;      Totals:         0       0       0
  6294 ;;Total ram usage:        0 bytes
  6295 ;; Hardware stack levels used: 1
  6296 ;; Hardware stack levels required when called: 3
  6297 ;; This function calls:
  6298 ;;		_TiGetTimer
  6299 ;; This function is called by:
  6300 ;;		_main
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           	psect	text51
  6305  0000'                    __ptext51:
  6306                           	callstack 0
  6307  0000'                    _initSIO:
  6308                           	callstack 27
  6309                           
  6310                           ;SIO.c: 19:     timerSIO = TiGetTimer();
  6311                           
  6312                           ;incstack = 0
  6313  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  6314  0004' 6E00'              	movwf	_timerSIO^0,c
  6315  0006' 0012               	return		;funcret
  6316  0008'                    __end_of_initSIO:
  6317                           	callstack 0
  6318                           
  6319 ;; *************** function _initHora *****************
  6320 ;; Defined at:
  6321 ;;		line 11 in file "Hora.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      void 
  6328 ;; Registers used:
  6329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1
  6335 ;;      Params:         0       0       0
  6336 ;;      Locals:         0       0       0
  6337 ;;      Temps:          0       0       0
  6338 ;;      Totals:         0       0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used: 1
  6341 ;; Hardware stack levels required when called: 3
  6342 ;; This function calls:
  6343 ;;		_TiGetTimer
  6344 ;; This function is called by:
  6345 ;;		_main
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text52
  6350  0000'                    __ptext52:
  6351                           	callstack 0
  6352  0000'                    _initHora:
  6353                           	callstack 27
  6354                           
  6355                           ;Hora.c: 12:     timerHora = TiGetTimer();
  6356                           
  6357                           ;incstack = 0
  6358  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  6359  0004' 6E00'              	movwf	_timerHora^0,c
  6360  0006' 0012               	return		;funcret
  6361  0008'                    __end_of_initHora:
  6362                           	callstack 0
  6363                           
  6364 ;; *************** function _initAltaveu *****************
  6365 ;; Defined at:
  6366 ;;		line 10 in file "Altaveu.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;		None
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;		None
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  1    wreg      void 
  6373 ;; Registers used:
  6374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1
  6380 ;;      Params:         0       0       0
  6381 ;;      Locals:         0       0       0
  6382 ;;      Temps:          0       0       0
  6383 ;;      Totals:         0       0       0
  6384 ;;Total ram usage:        0 bytes
  6385 ;; Hardware stack levels used: 1
  6386 ;; Hardware stack levels required when called: 3
  6387 ;; This function calls:
  6388 ;;		_TiGetTimer
  6389 ;; This function is called by:
  6390 ;;		_main
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text53
  6395  0000'                    __ptext53:
  6396                           	callstack 0
  6397  0000'                    _initAltaveu:
  6398                           	callstack 27
  6399                           
  6400                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  6401                           
  6402                           ;incstack = 0
  6403  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  6404  0004' 6E00'              	movwf	_timerAltaveu^0,c
  6405  0006' 0012               	return		;funcret
  6406  0008'                    __end_of_initAltaveu:
  6407                           	callstack 0
  6408                           
  6409 ;; *************** function _escriureEEPROM *****************
  6410 ;; Defined at:
  6411 ;;		line 336 in file "Usuaris.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;		None
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  caca            1    5[COMRAM] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1
  6425 ;;      Params:         0       0       0
  6426 ;;      Locals:         1       0       0
  6427 ;;      Temps:          0       0       0
  6428 ;;      Totals:         1       0       0
  6429 ;;Total ram usage:        1 bytes
  6430 ;; Hardware stack levels used: 1
  6431 ;; Hardware stack levels required when called: 2
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_main
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text54
  6440  0000'                    __ptext54:
  6441                           	callstack 0
  6442  0000'                    _escriureEEPROM:
  6443                           	callstack 28
  6444                           
  6445                           ;Usuaris.c: 337:     for(unsigned char caca = 0; caca < 160; caca++){
  6446                           
  6447                           ;incstack = 0
  6448  0000' 0E00               	movlw	0
  6449  0002' 6E00'              	movwf	escriureEEPROM@caca^0,c
  6450  0004'                    l2519:
  6451                           
  6452                           ;Usuaris.c: 338:         EEADR = 0;
  6453  0004' 0E00               	movlw	0
  6454  0006' 6EA9               	movwf	169,c	;volatile
  6455                           
  6456                           ;Usuaris.c: 339:         EEDATA = 0;
  6457  0008' 0E00               	movlw	0
  6458  000A' 6EA8               	movwf	168,c	;volatile
  6459                           
  6460                           ;Usuaris.c: 340:         EECON1bits.EEPGD = 0;
  6461  000C' 9EA6               	bcf	166,7,c	;volsfr
  6462                           
  6463                           ;Usuaris.c: 341:         EECON1bits.CFGS = 0;
  6464  000E' 9CA6               	bcf	166,6,c	;volsfr
  6465                           
  6466                           ;Usuaris.c: 342:         EECON1bits.WREN = 1;
  6467  0010' 84A6               	bsf	166,2,c	;volsfr
  6468                           
  6469                           ;Usuaris.c: 343:         INTCONbits.GIE = 0;
  6470  0012' 9EF2               	bcf	242,7,c	;volatile
  6471                           
  6472                           ;Usuaris.c: 344:         EECON2 = 85;
  6473  0014' 0E55               	movlw	85
  6474  0016' 6EA7               	movwf	167,c	;volsfr
  6475                           
  6476                           ;Usuaris.c: 345:         EECON2 = 170;
  6477  0018' 0EAA               	movlw	170
  6478  001A' 6EA7               	movwf	167,c	;volsfr
  6479                           
  6480                           ;Usuaris.c: 346:          EECON1bits.WR = 1;
  6481  001C' 82A6               	bsf	166,1,c	;volsfr
  6482  001E'                    l851:
  6483                           
  6484                           ;Usuaris.c: 347:         while(EECON1bits.WR){
  6485  001E' B2A6               	btfsc	166,1,c	;volsfr
  6486  0020' D7FE               	goto	l851
  6487                           
  6488                           ;Usuaris.c: 352:     }
  6489  0022' 2A00'              	incf	escriureEEPROM@caca^0,f,c
  6490  0024' 0E9F               	movlw	159
  6491  0026' 6400'              	cpfsgt	escriureEEPROM@caca^0,c
  6492  0028' D7ED               	goto	l2519
  6493                           
  6494                           ;Usuaris.c: 353:    INTCONbits.GIE = 1;
  6495  002A' 8EF2               	bsf	242,7,c	;volatile
  6496  002C' 0012               	return		;funcret
  6497  002E'                    __end_of_escriureEEPROM:
  6498                           	callstack 0
  6499                           
  6500 ;; *************** function _escriure2usuarisStruct *****************
  6501 ;; Defined at:
  6502 ;;		line 147 in file "Usuaris.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;		None
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 3F/1
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1
  6516 ;;      Params:         0       0       0
  6517 ;;      Locals:         0       0       0
  6518 ;;      Temps:          0       0       0
  6519 ;;      Totals:         0       0       0
  6520 ;;Total ram usage:        0 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 2
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_main
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text55
  6531  0000'                    __ptext55:
  6532                           	callstack 0
  6533  0000'                    _escriure2usuarisStruct:
  6534                           	callstack 28
  6535                           
  6536                           ;Usuaris.c: 149:     usuaris[0].username[0] = '1';
  6537                           
  6538                           ;incstack = 0
  6539  0000' 0E31               	movlw	49
  6540  0002' 0101               	movlb	1	; () banked
  6541  0004' 6F00'              	movwf	_usuaris& (0+255),b
  6542                           
  6543                           ;Usuaris.c: 150:     usuaris[0].username[1] = '\0';
  6544  0006' 0E00               	movlw	0
  6545  0008' 6F00'              	movwf	(_usuaris+1)& (0+255),b
  6546                           
  6547                           ;Usuaris.c: 152:     usuaris[1].username[0] = 'A';
  6548  000A' 0E41               	movlw	65
  6549  000C' 6F00'              	movwf	(_usuaris+23)& (0+255),b
  6550                           
  6551                           ;Usuaris.c: 153:     usuaris[1].username[1] = '\0';
  6552  000E' 0E00               	movlw	0
  6553  0010' 6F00'              	movwf	(_usuaris+24)& (0+255),b
  6554                           
  6555                           ;Usuaris.c: 155:     usuaris[2].username[0] = 'D';
  6556  0012' 0E44               	movlw	68
  6557  0014' 6F00'              	movwf	(_usuaris+46)& (0+255),b
  6558                           
  6559                           ;Usuaris.c: 156:     usuaris[2].username[1] = '\0';
  6560  0016' 0E00               	movlw	0
  6561  0018' 6F00'              	movwf	(_usuaris+47)& (0+255),b
  6562                           
  6563                           ;Usuaris.c: 158:     usuaris[3].username[0] = 'G';
  6564  001A' 0E47               	movlw	71
  6565  001C' 6F00'              	movwf	(_usuaris+69)& (0+255),b
  6566                           
  6567                           ;Usuaris.c: 159:     usuaris[3].username[1] = '\0';
  6568  001E' 0E00               	movlw	0
  6569  0020' 6F00'              	movwf	(_usuaris+70)& (0+255),b
  6570                           
  6571                           ;Usuaris.c: 161:     usuaris[4].username[0] = 'J';
  6572  0022' 0E4A               	movlw	74
  6573  0024' 6F00'              	movwf	(_usuaris+92)& (0+255),b
  6574                           
  6575                           ;Usuaris.c: 162:     usuaris[4].username[1] = '\0';
  6576  0026' 0E00               	movlw	0
  6577  0028' 6F00'              	movwf	(_usuaris+93)& (0+255),b
  6578                           
  6579                           ;Usuaris.c: 164:     puntuacions[0].indexStruct = 0;
  6580  002A' 0E00               	movlw	0
  6581  002C' 6E00'              	movwf	_puntuacions^0,c
  6582                           
  6583                           ;Usuaris.c: 165:     puntuacions[1].indexStruct = 1;
  6584  002E' 0E01               	movlw	1
  6585  0030' 6E00'              	movwf	(_puntuacions+2)^0,c
  6586                           
  6587                           ;Usuaris.c: 166:     puntuacions[2].indexStruct = 2;
  6588  0032' 0E02               	movlw	2
  6589  0034' 6E00'              	movwf	(_puntuacions+4)^0,c
  6590                           
  6591                           ;Usuaris.c: 167:     puntuacions[3].indexStruct = 3;
  6592  0036' 0E03               	movlw	3
  6593  0038' 6E00'              	movwf	(_puntuacions+6)^0,c
  6594                           
  6595                           ;Usuaris.c: 168:     puntuacions[4].indexStruct = 4;
  6596  003A' 0E04               	movlw	4
  6597  003C' 6E00'              	movwf	(_puntuacions+8)^0,c
  6598                           
  6599                           ;Usuaris.c: 169:     puntuacions[0].score = 10;
  6600  003E' 0E0A               	movlw	10
  6601  0040' 6E00'              	movwf	(_puntuacions+1)^0,c
  6602                           
  6603                           ;Usuaris.c: 170:     puntuacions[1].score = 11;
  6604  0042' 0E0B               	movlw	11
  6605  0044' 6E00'              	movwf	(_puntuacions+3)^0,c
  6606                           
  6607                           ;Usuaris.c: 171:     puntuacions[2].score = 12;
  6608  0046' 0E0C               	movlw	12
  6609  0048' 6E00'              	movwf	(_puntuacions+5)^0,c
  6610                           
  6611                           ;Usuaris.c: 172:     puntuacions[3].score = 13;
  6612  004A' 0E0D               	movlw	13
  6613  004C' 6E00'              	movwf	(_puntuacions+7)^0,c
  6614                           
  6615                           ;Usuaris.c: 173:     puntuacions[4].score = 14;
  6616  004E' 0E0E               	movlw	14
  6617  0050' 6E00'              	movwf	(_puntuacions+9)^0,c
  6618                           
  6619                           ;Usuaris.c: 175:     numUsuaris = 8;
  6620  0052' 0E08               	movlw	8
  6621  0054' 6E00'              	movwf	_numUsuaris^0,c
  6622                           
  6623                           ;Usuaris.c: 176:     indexNextUserStruct = 3;
  6624  0056' 0E03               	movlw	3
  6625  0058' 6E00'              	movwf	_indexNextUserStruct^0,c
  6626                           
  6627                           ; BSR set to: 1
  6628  005A' 0012               	return		;funcret
  6629  005C'                    __end_of_escriure2usuarisStruct:
  6630                           	callstack 0
  6631                           
  6632 ;; *************** function _UmotorUsers *****************
  6633 ;; Defined at:
  6634 ;;		line 195 in file "Usuaris.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/1
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMRAM   BANK0   BANK1
  6648 ;;      Params:         0       0       0
  6649 ;;      Locals:         0       0       0
  6650 ;;      Temps:          4       0       0
  6651 ;;      Totals:         4       0       0
  6652 ;;Total ram usage:        4 bytes
  6653 ;; Hardware stack levels used: 1
  6654 ;; Hardware stack levels required when called: 3
  6655 ;; This function calls:
  6656 ;;		_compareStrings
  6657 ;;		_escriureCharEEPROM
  6658 ;; This function is called by:
  6659 ;;		_main
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text56
  6664  0000'                    __ptext56:
  6665                           	callstack 0
  6666  0000'                    _UmotorUsers:
  6667                           	callstack 27
  6668                           
  6669                           ;Usuaris.c: 196:     static char state = 0;;Usuaris.c: 198:  switch(state) {
  6670                           
  6671                           ; BSR set to: 1
  6672                           ;incstack = 0
  6673  0000' D0E6               	goto	l5817
  6674  0002'                    l784:
  6675                           
  6676                           ;Usuaris.c: 200:    if (!do_check_exists && !do_register && !do_updateScores && !do_show
      +                          Users) {
  6677  0002' A000'              	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6678  0004' B000'              	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6679  0006' D008               	goto	l785
  6680  0008' A000'              	btfss	(_do_updateScores/(0+8))^0,_do_updateScores& (0+7),c
  6681  000A' B000'              	btfsc	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6682  000C' D005               	goto	l785
  6683                           
  6684                           ;Usuaris.c: 201:     i = 0;
  6685  000E' 0E00               	movlw	0
  6686  0010' 6E00'              	movwf	_i^0,c
  6687                           
  6688                           ;Usuaris.c: 202:     j = 0;
  6689  0012' 0E00               	movlw	0
  6690  0014' 6E00'              	movwf	_j^0,c
  6691                           
  6692                           ;Usuaris.c: 203:    }
  6693  0016' 0012               	return	
  6694  0018'                    l785:
  6695  0018' A000'              	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6696  001A' D004               	goto	l787
  6697                           
  6698                           ;Usuaris.c: 205:     usuariLoguejat = -1;
  6699  001C' 6800'              	setf	_usuariLoguejat^0,c
  6700  001E'                    l5711:
  6701                           
  6702                           ;Usuaris.c: 206:     state = 1;
  6703  001E' 0E01               	movlw	1
  6704  0020' 6E00'              	movwf	UmotorUsers@state^0,c
  6705                           
  6706                           ;Usuaris.c: 207:    }
  6707  0022' 0012               	return	
  6708  0024'                    l787:
  6709  0024' A000'              	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6710  0026' D003               	goto	l791
  6711  0028'                    u5620:
  6712                           
  6713                           ;Usuaris.c: 209:     state = 2;
  6714  0028' 0E02               	movlw	2
  6715  002A' 6E00'              	movwf	UmotorUsers@state^0,c
  6716                           
  6717                           ;Usuaris.c: 210:    }
  6718  002C' 0012               	return	
  6719  002E'                    l791:
  6720  002E' A000'              	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6721  0030' 0012               	return	
  6722                           
  6723                           ;Usuaris.c: 215:     arrayShowUsers[0] = usuariLoguejat;
  6724  0032' C00A' F021'        	movff	_usuariLoguejat,_arrayShowUsers
  6725                           
  6726                           ;Usuaris.c: 216:     arrayShowUsers[1] = -1;
  6727  0036' 0100               	movlb	0	; () banked
  6728  0038' 6900'              	setf	(_arrayShowUsers+1)& (0+255),b
  6729                           
  6730                           ;Usuaris.c: 217:     arrayShowUsers[2] = -1;
  6731  003A' 6900'              	setf	(_arrayShowUsers+2)& (0+255),b
  6732                           
  6733                           ;Usuaris.c: 218:     arrayShowUsers[3] = -1;
  6734  003C' 6900'              	setf	(_arrayShowUsers+3)& (0+255),b
  6735                           
  6736                           ;Usuaris.c: 219:     arrayShowUsers[4] = -1;
  6737  003E' 6900'              	setf	(_arrayShowUsers+4)& (0+255),b
  6738                           
  6739                           ;Usuaris.c: 220:     arrayShowUsers[5] = -1;
  6740  0040' 6900'              	setf	(_arrayShowUsers+5)& (0+255),b
  6741                           
  6742                           ;Usuaris.c: 221:     arrayShowUsers[6] = -1;
  6743  0042' 6900'              	setf	(_arrayShowUsers+6)& (0+255),b
  6744                           
  6745                           ;Usuaris.c: 222:     arrayShowUsers[7] = -1;
  6746  0044' 6900'              	setf	(_arrayShowUsers+7)& (0+255),b
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;Usuaris.c: 223:     i = 1;
  6750  0046' 0E01               	movlw	1
  6751  0048' 6E00'              	movwf	_i^0,c
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;Usuaris.c: 224:     if(numUsuaris < 7) {
  6755  004A' 0E07               	movlw	7
  6756  004C' 6000'              	cpfslt	_numUsuaris^0,c
  6757  004E' D003               	goto	l794
  6758  0050'                    u5640:
  6759                           
  6760                           ;Usuaris.c: 225:       j = 0;
  6761  0050' 0E00               	movlw	0
  6762  0052' 6E00'              	movwf	_j^0,c
  6763                           
  6764                           ;Usuaris.c: 226:     }
  6765  0054' D002               	goto	l5725
  6766  0056'                    l794:
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;Usuaris.c: 228:       j = indexNextUserStruct;
  6770  0056' C02B' F029'        	movff	_indexNextUserStruct,_j
  6771  005A'                    l5725:
  6772                           
  6773                           ;Usuaris.c: 230:     state = 5;
  6774  005A' 0E05               	movlw	5
  6775  005C' 6E00'              	movwf	UmotorUsers@state^0,c
  6776  005E' 0012               	return	
  6777  0060'                    l5727:
  6778                           
  6779                           ;Usuaris.c: 234:    if (i < numUsuaris) {
  6780  0060' 5000'              	movf	_numUsuaris^0,w,c
  6781  0062' 5C00'              	subwf	_i^0,w,c
  6782  0064' B0D8               	btfsc	status,0,c
  6783  0066' D012               	goto	l5737
  6784                           
  6785                           ;Usuaris.c: 235:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6786  0068' 0E00'              	movlw	low _tmpUsername
  6787  006A' 6E00'              	movwf	compareStrings@a^0,c
  6788  006C' 5000'              	movf	_i^0,w,c
  6789  006E' 0D17               	mullw	23
  6790  0070' 0E00'              	movlw	low _usuaris
  6791  0072' 24F3               	addwf	243,w,c
  6792  0074' 6E00'              	movwf	compareStrings@b^0,c
  6793  0076' 0E00'              	movlw	high _usuaris
  6794  0078' 20F4               	addwfc	prodh,w,c
  6795  007A' 6E00'              	movwf	(compareStrings@b+1)^0,c
  6796  007C' EC00' F000'        	call	_compareStrings	;wreg free
  6797  0080' 0900               	iorlw	0
  6798  0082' B4D8               	btfsc	status,2,c
  6799                           
  6800                           ;Usuaris.c: 236:      usuariLoguejat = i;
  6801  0084' C02A' F00A'        	movff	_i,_usuariLoguejat
  6802                           
  6803                           ;Usuaris.c: 239:     i++;
  6804  0088' 2A00'              	incf	_i^0,f,c
  6805  008A' D7C9               	goto	l5711
  6806  008C'                    l5737:
  6807  008C' 5000'              	movf	_numUsuaris^0,w,c
  6808  008E' 1800'              	xorwf	_i^0,w,c
  6809  0090' A4D8               	btfss	status,2,c
  6810  0092' 0012               	return	
  6811                           
  6812                           ;Usuaris.c: 243:     do_check_exists = 0;
  6813  0094' 9000'              	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6814  0096'                    l5741:
  6815                           
  6816                           ;Usuaris.c: 244:     state = 0;
  6817  0096' 0E00               	movlw	0
  6818  0098' 6E00'              	movwf	UmotorUsers@state^0,c
  6819  009A' 0012               	return	
  6820  009C'                    l5743:
  6821                           
  6822                           ;Usuaris.c: 248:    if (i != 8) {
  6823  009C' 0E08               	movlw	8
  6824  009E' 1800'              	xorwf	_i^0,w,c
  6825  00A0' B4D8               	btfsc	status,2,c
  6826  00A2' D022               	goto	l5755
  6827                           
  6828                           ;Usuaris.c: 249:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  6829  00A4' C02C' F005'        	movff	_indexNextUser,escriureCharEEPROM@pos
  6830  00A8' 5000'              	movf	_i^0,w,c
  6831  00AA' 0F00'              	addlw	low _tmpUsername
  6832  00AC' 6ED9               	movwf	fsr2l,c
  6833  00AE' 6ADA               	clrf	fsr2h,c
  6834  00B0' 50DF               	movf	indf2,w,c
  6835  00B2' EC00' F000'        	call	_escriureCharEEPROM
  6836  00B6' 2A00'              	incf	_indexNextUser^0,f,c
  6837                           
  6838                           ;Usuaris.c: 250:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6839  00B8' 5000'              	movf	_i^0,w,c
  6840  00BA' 0F00'              	addlw	low _tmpUsername
  6841  00BC' 6ED9               	movwf	fsr2l,c
  6842  00BE' 6ADA               	clrf	fsr2h,c
  6843  00C0' 5000'              	movf	_indexNextUserStruct^0,w,c
  6844  00C2' 0D17               	mullw	23
  6845  00C4' 0E00'              	movlw	low _usuaris
  6846  00C6' 6E00'              	movwf	??_UmotorUsers^0,c
  6847  00C8' 0E00'              	movlw	high _usuaris
  6848  00CA' 6E00'              	movwf	(??_UmotorUsers+1)^0,c
  6849  00CC' 50F3               	movf	243,w,c
  6850  00CE' 2600'              	addwf	??_UmotorUsers^0,f,c
  6851  00D0' 50F4               	movf	244,w,c
  6852  00D2' 2200'              	addwfc	(??_UmotorUsers+1)^0,f,c
  6853  00D4' 5000'              	movf	_i^0,w,c
  6854  00D6' 2400'              	addwf	??_UmotorUsers^0,w,c
  6855  00D8' 6EE1               	movwf	fsr1l,c
  6856  00DA' 0E00               	movlw	0
  6857  00DC' 2000'              	addwfc	(??_UmotorUsers+1)^0,w,c
  6858  00DE' 6EE2               	movwf	fsr1h,c
  6859  00E0' CFDF FFE7          	movff	indf2,indf1
  6860                           
  6861                           ;Usuaris.c: 251:     i++;
  6862  00E4' 2A00'              	incf	_i^0,f,c
  6863  00E6' D7A0               	goto	u5620
  6864  00E8'                    l5755:
  6865  00E8' 0E08               	movlw	8
  6866  00EA' 1800'              	xorwf	_i^0,w,c
  6867  00EC' A4D8               	btfss	status,2,c
  6868  00EE' 0012               	return	
  6869                           
  6870                           ;Usuaris.c: 255:     i = 0;
  6871  00F0' 0E00               	movlw	0
  6872  00F2' 6E00'              	movwf	_i^0,c
  6873                           
  6874                           ;Usuaris.c: 256:     state = 3;
  6875  00F4' 0E03               	movlw	3
  6876  00F6' 6E00'              	movwf	UmotorUsers@state^0,c
  6877  00F8' 0012               	return	
  6878  00FA'                    l5759:
  6879                           
  6880                           ;Usuaris.c: 260:    if (i != 8) {
  6881  00FA' 0E08               	movlw	8
  6882  00FC' 1800'              	xorwf	_i^0,w,c
  6883  00FE' B4D8               	btfsc	status,2,c
  6884  0100' D028               	goto	l5771
  6885                           
  6886                           ;Usuaris.c: 261:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  6887  0102' C02C' F005'        	movff	_indexNextUser,escriureCharEEPROM@pos
  6888  0106' 5000'              	movf	_i^0,w,c
  6889  0108' 0F00'              	addlw	low _tmpPassword
  6890  010A' 6ED9               	movwf	fsr2l,c
  6891  010C' 6ADA               	clrf	fsr2h,c
  6892  010E' 50DF               	movf	indf2,w,c
  6893  0110' EC00' F000'        	call	_escriureCharEEPROM
  6894  0114' 2A00'              	incf	_indexNextUser^0,f,c
  6895                           
  6896                           ;Usuaris.c: 262:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6897  0116' 5000'              	movf	_i^0,w,c
  6898  0118' 0F00'              	addlw	low _tmpPassword
  6899  011A' 6ED9               	movwf	fsr2l,c
  6900  011C' 6ADA               	clrf	fsr2h,c
  6901  011E' 5000'              	movf	_indexNextUserStruct^0,w,c
  6902  0120' 0D17               	mullw	23
  6903  0122' 0E00'              	movlw	low _usuaris
  6904  0124' 6E00'              	movwf	??_UmotorUsers^0,c
  6905  0126' 0E00'              	movlw	high _usuaris
  6906  0128' 6E00'              	movwf	(??_UmotorUsers+1)^0,c
  6907  012A' 0E09               	movlw	9
  6908  012C' 2600'              	addwf	??_UmotorUsers^0,f,c
  6909  012E' 0E00               	movlw	0
  6910  0130' 2200'              	addwfc	(??_UmotorUsers+1)^0,f,c
  6911  0132' 50F3               	movf	243,w,c
  6912  0134' 2600'              	addwf	??_UmotorUsers^0,f,c
  6913  0136' 50F4               	movf	244,w,c
  6914  0138' 2200'              	addwfc	(??_UmotorUsers+1)^0,f,c
  6915  013A' 5000'              	movf	_i^0,w,c
  6916  013C' 2400'              	addwf	??_UmotorUsers^0,w,c
  6917  013E' 6EE1               	movwf	fsr1l,c
  6918  0140' 0E00               	movlw	0
  6919  0142' 2000'              	addwfc	(??_UmotorUsers+1)^0,w,c
  6920  0144' 6EE2               	movwf	fsr1h,c
  6921  0146' CFDF FFE7          	movff	indf2,indf1
  6922                           
  6923                           ;Usuaris.c: 263:     i++;
  6924  014A' 2A00'              	incf	_i^0,f,c
  6925                           
  6926                           ;Usuaris.c: 264:     state = 3;
  6927  014C' 0E03               	movlw	3
  6928  014E' 6E00'              	movwf	UmotorUsers@state^0,c
  6929                           
  6930                           ;Usuaris.c: 265:    }
  6931  0150' 0012               	return	
  6932  0152'                    l5771:
  6933  0152' 0E08               	movlw	8
  6934  0154' 1800'              	xorwf	_i^0,w,c
  6935  0156' A4D8               	btfss	status,2,c
  6936  0158' 0012               	return	
  6937                           
  6938                           ;Usuaris.c: 267:     do_register = 0;
  6939  015A' 9000'              	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6940                           
  6941                           ;Usuaris.c: 268:     indexNextUser++;
  6942  015C' 2A00'              	incf	_indexNextUser^0,f,c
  6943                           
  6944                           ;Usuaris.c: 269:     if(indexNextUser == 159) indexNextUser = 16;
  6945  015E' 0E9F               	movlw	159
  6946  0160' 1800'              	xorwf	_indexNextUser^0,w,c
  6947  0162' A4D8               	btfss	status,2,c
  6948  0164' D002               	goto	l5781
  6949  0166' 0E10               	movlw	16
  6950  0168' 6E00'              	movwf	_indexNextUser^0,c
  6951  016A'                    l5781:
  6952                           
  6953                           ;Usuaris.c: 270:     indexNextUserStruct++;
  6954  016A' 2A00'              	incf	_indexNextUserStruct^0,f,c
  6955                           
  6956                           ;Usuaris.c: 271:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6957  016C' 0E08               	movlw	8
  6958  016E' 1800'              	xorwf	_indexNextUserStruct^0,w,c
  6959  0170' A4D8               	btfss	status,2,c
  6960  0172' D002               	goto	l5787
  6961  0174' 0E00               	movlw	0
  6962  0176' 6E00'              	movwf	_indexNextUserStruct^0,c
  6963  0178'                    l5787:
  6964                           
  6965                           ;Usuaris.c: 272:     if(numUsuaris != 8) numUsuaris++;
  6966  0178' 0E08               	movlw	8
  6967  017A' 1800'              	xorwf	_numUsuaris^0,w,c
  6968  017C' B4D8               	btfsc	status,2,c
  6969  017E' D78B               	goto	l5741
  6970  0180' 2A00'              	incf	_numUsuaris^0,f,c
  6971  0182' D789               	goto	l5741
  6972  0184'                    l5793:
  6973                           
  6974                           ;Usuaris.c: 280:    if (i < numUsuaris) {
  6975  0184' 5000'              	movf	_numUsuaris^0,w,c
  6976  0186' 5C00'              	subwf	_i^0,w,c
  6977  0188' B0D8               	btfsc	status,0,c
  6978  018A' D01B               	goto	l5809
  6979                           
  6980                           ;Usuaris.c: 281:     if(j != usuariLoguejat){
  6981  018C' C00A' F00A'        	movff	_usuariLoguejat,??_UmotorUsers
  6982  0190' 6A00'              	clrf	(??_UmotorUsers+1)^0,c
  6983  0192' BE00'              	btfsc	??_UmotorUsers^0,7,c
  6984  0194' 0600'              	decf	(??_UmotorUsers+1)^0,f,c
  6985  0196' 5000'              	movf	_j^0,w,c
  6986  0198' 6E00'              	movwf	(??_UmotorUsers+2)^0,c
  6987  019A' 6A00'              	clrf	(??_UmotorUsers+3)^0,c
  6988  019C' 5000'              	movf	??_UmotorUsers^0,w,c
  6989  019E' 1800'              	xorwf	(??_UmotorUsers+2)^0,w,c
  6990  01A0' E104               	bnz	u5760
  6991  01A2' 5000'              	movf	(??_UmotorUsers+1)^0,w,c
  6992  01A4' 1800'              	xorwf	(??_UmotorUsers+3)^0,w,c
  6993  01A6' B4D8               	btfsc	status,2,c
  6994  01A8' D007               	goto	l5801
  6995  01AA'                    u5760:
  6996                           
  6997                           ;Usuaris.c: 282:       arrayShowUsers[i] = j;
  6998  01AA' 5000'              	movf	_i^0,w,c
  6999  01AC' 0F00'              	addlw	low _arrayShowUsers
  7000  01AE' 6ED9               	movwf	fsr2l,c
  7001  01B0' 6ADA               	clrf	fsr2h,c
  7002  01B2' C029' FFDF         	movff	_j,indf2
  7003                           
  7004                           ;Usuaris.c: 283:      i++;
  7005  01B6' 2A00'              	incf	_i^0,f,c
  7006  01B8'                    l5801:
  7007                           
  7008                           ;Usuaris.c: 284:                     j++;
  7009  01B8' 2A00'              	incf	_j^0,f,c
  7010                           
  7011                           ;Usuaris.c: 289:     if(j > 7) j=0;
  7012                           
  7013                           ;Usuaris.c: 285:     }else{
  7014  01BA' 0E07               	movlw	7
  7015  01BC' 6400'              	cpfsgt	_j^0,c
  7016  01BE' D74D               	goto	l5725
  7017  01C0' D747               	goto	u5640
  7018  01C2'                    l5809:
  7019  01C2' 5000'              	movf	_numUsuaris^0,w,c
  7020  01C4' 1800'              	xorwf	_i^0,w,c
  7021  01C6' A4D8               	btfss	status,2,c
  7022  01C8' 0012               	return	
  7023                           
  7024                           ;Usuaris.c: 293:     do_showUsers = 0;
  7025  01CA' 9000'              	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  7026  01CC' D764               	goto	l5741
  7027  01CE'                    l5817:
  7028  01CE' 5000'              	movf	UmotorUsers@state^0,w,c
  7029  01D0' 6E00'              	movwf	??_UmotorUsers^0,c
  7030  01D2' 6A00'              	clrf	(??_UmotorUsers+1)^0,c
  7031                           
  7032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7033                           ; Switch size 1, requested type "simple"
  7034                           ; Number of cases is 1, Range of values is 0 to 0
  7035                           ; switch strategies available:
  7036                           ; Name         Instructions Cycles
  7037                           ; simple_byte            4     3 (average)
  7038                           ;	Chosen strategy is simple_byte
  7039  01D4' 5000'              	movf	(??_UmotorUsers+1)^0,w,c
  7040  01D6' 0A00               	xorlw	0	; case 0
  7041  01D8' A4D8               	btfss	status,2,c
  7042  01DA' 0012               	return	
  7043                           
  7044                           ; Switch size 1, requested type "simple"
  7045                           ; Number of cases is 6, Range of values is 0 to 5
  7046                           ; switch strategies available:
  7047                           ; Name         Instructions Cycles
  7048                           ; simple_byte           19    10 (average)
  7049                           ;	Chosen strategy is simple_byte
  7050  01DC' 5000'              	movf	??_UmotorUsers^0,w,c
  7051  01DE' 0A00               	xorlw	0	; case 0
  7052  01E0' B4D8               	btfsc	status,2,c
  7053  01E2' D70F               	goto	l784
  7054  01E4' 0A01               	xorlw	1	; case 1
  7055  01E6' B4D8               	btfsc	status,2,c
  7056  01E8' D73B               	goto	l5727
  7057  01EA' 0A03               	xorlw	3	; case 2
  7058  01EC' B4D8               	btfsc	status,2,c
  7059  01EE' D756               	goto	l5743
  7060  01F0' 0A01               	xorlw	1	; case 3
  7061  01F2' B4D8               	btfsc	status,2,c
  7062  01F4' D782               	goto	l5759
  7063  01F6' 0A07               	xorlw	7	; case 4
  7064  01F8' B4D8               	btfsc	status,2,c
  7065  01FA' 0012               	return	
  7066  01FC' 0A01               	xorlw	1	; case 5
  7067  01FE' A4D8               	btfss	status,2,c
  7068  0200' 0012               	return	
  7069  0202' D7C0               	goto	l5793
  7070  0204'                    __end_of_UmotorUsers:
  7071                           	callstack 0
  7072                           
  7073 ;; *************** function _escriureCharEEPROM *****************
  7074 ;; Defined at:
  7075 ;;		line 89 in file "Usuaris.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  c               1    wreg     unsigned char 
  7078 ;;  pos             1    5[COMRAM] unsigned char 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  c               1    6[COMRAM] unsigned char 
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      void 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/1
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1
  7090 ;;      Params:         1       0       0
  7091 ;;      Locals:         1       0       0
  7092 ;;      Temps:          0       0       0
  7093 ;;      Totals:         2       0       0
  7094 ;;Total ram usage:        2 bytes
  7095 ;; Hardware stack levels used: 1
  7096 ;; Hardware stack levels required when called: 2
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_UmotorUsers
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           	psect	text57
  7105  0000'                    __ptext57:
  7106                           	callstack 0
  7107  0000'                    _escriureCharEEPROM:
  7108                           	callstack 27
  7109                           
  7110                           ;incstack = 0
  7111                           ;escriureCharEEPROM@c stored from wreg
  7112  0000' 6E00'              	movwf	escriureCharEEPROM@c^0,c
  7113                           
  7114                           ;Usuaris.c: 90:     EEADR = pos;
  7115  0002' C005' FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  7116                           
  7117                           ;Usuaris.c: 91:     EEDATA = c;
  7118  0006' C006' FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  7119                           
  7120                           ;Usuaris.c: 92:     EECON1bits.EEPGD = 0;
  7121  000A' 9EA6               	bcf	166,7,c	;volsfr
  7122                           
  7123                           ;Usuaris.c: 93:     EECON1bits.CFGS = 0;
  7124  000C' 9CA6               	bcf	166,6,c	;volsfr
  7125                           
  7126                           ;Usuaris.c: 94:     EECON1bits.WREN = 1;
  7127  000E' 84A6               	bsf	166,2,c	;volsfr
  7128                           
  7129                           ;Usuaris.c: 95:     INTCONbits.GIE = 0;
  7130  0010' 9EF2               	bcf	242,7,c	;volatile
  7131                           
  7132                           ;Usuaris.c: 96:     EECON2 = 85;
  7133  0012' 0E55               	movlw	85
  7134  0014' 6EA7               	movwf	167,c	;volsfr
  7135                           
  7136                           ;Usuaris.c: 97:     EECON2 = 170;
  7137  0016' 0EAA               	movlw	170
  7138  0018' 6EA7               	movwf	167,c	;volsfr
  7139                           
  7140                           ;Usuaris.c: 98:     EECON1bits.WR = 1;
  7141  001A' 82A6               	bsf	166,1,c	;volsfr
  7142  001C'                    l733:
  7143  001C' B2A6               	btfsc	166,1,c	;volsfr
  7144  001E' D7FE               	goto	l733
  7145                           
  7146                           ;Usuaris.c: 100:     INTCONbits.GIE = 1;
  7147  0020' 8EF2               	bsf	242,7,c	;volatile
  7148  0022' 0012               	return		;funcret
  7149  0024'                    __end_of_escriureCharEEPROM:
  7150                           	callstack 0
  7151                           
  7152 ;; *************** function _compareStrings *****************
  7153 ;; Defined at:
  7154 ;;		line 179 in file "Usuaris.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  a               1    5[COMRAM] PTR const unsigned char 
  7157 ;;		 -> tmpUsername(9), 
  7158 ;;  b               2    6[COMRAM] PTR const unsigned char 
  7159 ;;		 -> usuaris.username(9), usuaris(184), 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;		None
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  1    wreg      unsigned char 
  7164 ;; Registers used:
  7165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/1
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMRAM   BANK0   BANK1
  7171 ;;      Params:         3       0       0
  7172 ;;      Locals:         0       0       0
  7173 ;;      Temps:          2       0       0
  7174 ;;      Totals:         5       0       0
  7175 ;;Total ram usage:        5 bytes
  7176 ;; Hardware stack levels used: 1
  7177 ;; Hardware stack levels required when called: 2
  7178 ;; This function calls:
  7179 ;;		Nothing
  7180 ;; This function is called by:
  7181 ;;		_UmotorUsers
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text58
  7186  0000'                    __ptext58:
  7187                           	callstack 0
  7188  0000'                    _compareStrings:
  7189                           	callstack 27
  7190                           
  7191                           ;Usuaris.c: 180:     while (*a){
  7192                           
  7193                           ;incstack = 0
  7194  0000' D00E               	goto	l4581
  7195  0002'                    l4575:
  7196                           
  7197                           ;Usuaris.c: 181:         if (*a != *b)break;
  7198  0002' C006' FFD9         	movff	compareStrings@b,fsr2l
  7199  0006' C007' FFDA         	movff	compareStrings@b+1,fsr2h
  7200  000A' 5000'              	movf	compareStrings@a^0,w,c
  7201  000C' 6EE1               	movwf	fsr1l,c
  7202  000E' 6AE2               	clrf	fsr1h,c
  7203  0010' 50DE               	movf	postinc2,w,c
  7204  0012' 18E6               	xorwf	postinc1,w,c
  7205  0014' A4D8               	btfss	status,2,c
  7206  0016' D009               	goto	u3750
  7207                           
  7208                           ;Usuaris.c: 182:         a++;
  7209  0018' 2A00'              	incf	compareStrings@a^0,f,c
  7210                           
  7211                           ;Usuaris.c: 183:         b++;
  7212  001A' 4A00'              	infsnz	compareStrings@b^0,f,c
  7213  001C' 2A00'              	incf	(compareStrings@b+1)^0,f,c
  7214  001E'                    l4581:
  7215                           
  7216                           ;Usuaris.c: 180:     while (*a){
  7217  001E' 5000'              	movf	compareStrings@a^0,w,c
  7218  0020' 6ED9               	movwf	fsr2l,c
  7219  0022' 6ADA               	clrf	fsr2h,c
  7220  0024' 50DF               	movf	indf2,w,c
  7221  0026' A4D8               	btfss	status,2,c
  7222  0028' D7EC               	goto	l4575
  7223  002A'                    u3750:
  7224                           
  7225                           ;Usuaris.c: 185:     return *(const unsigned char*)a - *(const unsigned char*)b;
  7226  002A' C006' FFD9         	movff	compareStrings@b,fsr2l
  7227  002E' C007' FFDA         	movff	compareStrings@b+1,fsr2h
  7228  0032' 50DF               	movf	indf2,w,c
  7229  0034' 6E00'              	movwf	??_compareStrings^0,c
  7230  0036' 5000'              	movf	compareStrings@a^0,w,c
  7231  0038' 6ED9               	movwf	fsr2l,c
  7232  003A' 6ADA               	clrf	fsr2h,c
  7233  003C' 50DF               	movf	indf2,w,c
  7234  003E' 6E00'              	movwf	(??_compareStrings+1)^0,c
  7235  0040' 5000'              	movf	??_compareStrings^0,w,c
  7236  0042' 5C00'              	subwf	(??_compareStrings+1)^0,w,c
  7237  0044' 0012               	return		;funcret
  7238  0046'                    __end_of_compareStrings:
  7239                           	callstack 0
  7240                           
  7241 ;; *************** function _Uinit *****************
  7242 ;; Defined at:
  7243 ;;		line 102 in file "Usuaris.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;		None
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  j               1    9[COMRAM] unsigned char 
  7248 ;;  j               1    8[COMRAM] unsigned char 
  7249 ;;  i               1    7[COMRAM] unsigned char 
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  1    wreg      void 
  7252 ;; Registers used:
  7253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMRAM   BANK0   BANK1
  7259 ;;      Params:         0       0       0
  7260 ;;      Locals:         3       0       0
  7261 ;;      Temps:          2       0       0
  7262 ;;      Totals:         5       0       0
  7263 ;;Total ram usage:        5 bytes
  7264 ;; Hardware stack levels used: 1
  7265 ;; Hardware stack levels required when called: 2
  7266 ;; This function calls:
  7267 ;;		Nothing
  7268 ;; This function is called by:
  7269 ;;		_main
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text59
  7274  0000'                    __ptext59:
  7275                           	callstack 0
  7276  0000'                    _Uinit:
  7277                           	callstack 28
  7278                           
  7279                           ;Usuaris.c: 107:     EEADR = 0;
  7280                           
  7281                           ;incstack = 0
  7282  0000' 0E00               	movlw	0
  7283  0002' 6EA9               	movwf	169,c	;volatile
  7284                           
  7285                           ;Usuaris.c: 108:     EECON1bits.EEPGD = 0;
  7286  0004' 9EA6               	bcf	166,7,c	;volsfr
  7287                           
  7288                           ;Usuaris.c: 109:     EECON1bits.CFGS = 0;
  7289  0006' 9CA6               	bcf	166,6,c	;volsfr
  7290                           
  7291                           ;Usuaris.c: 110:     EECON1bits.RD = 1;
  7292  0008' 80A6               	bsf	166,0,c	;volsfr
  7293  000A'                    l739:
  7294  000A' B0A6               	btfsc	166,0,c	;volsfr
  7295  000C' D7FE               	goto	l739
  7296                           
  7297                           ;Usuaris.c: 112:     numUsuaris = EEDATA;
  7298  000E' CFA8 F02D'         	movff	4008,_numUsuaris	;volatile
  7299                           
  7300                           ;Usuaris.c: 115:     EEADR++;
  7301  0012' 2AA9               	incf	169,f,c	;volatile
  7302                           
  7303                           ;Usuaris.c: 116:     EECON1bits.EEPGD = 0;
  7304  0014' 9EA6               	bcf	166,7,c	;volsfr
  7305                           
  7306                           ;Usuaris.c: 117:     EECON1bits.CFGS = 0;
  7307  0016' 9CA6               	bcf	166,6,c	;volsfr
  7308  0018'                    l742:
  7309  0018' B0A6               	btfsc	166,0,c	;volsfr
  7310  001A' D7FE               	goto	l742
  7311                           
  7312                           ;Usuaris.c: 120:     indexNextUser = EEDATA;
  7313  001C' CFA8 F02C'         	movff	4008,_indexNextUser	;volatile
  7314                           
  7315                           ;Usuaris.c: 122:     EEADR++;
  7316  0020' 2AA9               	incf	169,f,c	;volatile
  7317                           
  7318                           ;Usuaris.c: 124:     for(char i = 0; i< numUsuaris; i++){
  7319  0022' 0E00               	movlw	0
  7320  0024' 6E00'              	movwf	Uinit@i^0,c
  7321  0026' D041               	goto	l2765
  7322  0028'                    l2735:
  7323                           
  7324                           ;Usuaris.c: 125:         for(char j = 0; j<9; j++){
  7325  0028' 0E00               	movlw	0
  7326  002A' 6E00'              	movwf	Uinit@j^0,c
  7327  002C'                    l747:
  7328                           
  7329                           ;Usuaris.c: 126:             EECON1bits.EEPGD = 0;
  7330  002C' 9EA6               	bcf	166,7,c	;volsfr
  7331                           
  7332                           ;Usuaris.c: 127:             EECON1bits.CFGS = 0;
  7333  002E' 9CA6               	bcf	166,6,c	;volsfr
  7334                           
  7335                           ;Usuaris.c: 128:             EECON1bits.RD = 1;
  7336  0030' 80A6               	bsf	166,0,c	;volsfr
  7337  0032'                    l749:
  7338  0032' B0A6               	btfsc	166,0,c	;volsfr
  7339  0034' D7FE               	goto	l749
  7340                           
  7341                           ;Usuaris.c: 130:             usuaris[i].username[j] = EEDATA;
  7342  0036' 5000'              	movf	Uinit@i^0,w,c
  7343  0038' 0D17               	mullw	23
  7344  003A' 0E00'              	movlw	low _usuaris
  7345  003C' 6E00'              	movwf	??_Uinit^0,c
  7346  003E' 0E00'              	movlw	high _usuaris
  7347  0040' 6E00'              	movwf	(??_Uinit+1)^0,c
  7348  0042' 50F3               	movf	243,w,c
  7349  0044' 2600'              	addwf	??_Uinit^0,f,c
  7350  0046' 50F4               	movf	244,w,c
  7351  0048' 2200'              	addwfc	(??_Uinit+1)^0,f,c
  7352  004A' 5000'              	movf	Uinit@j^0,w,c
  7353  004C' 2400'              	addwf	??_Uinit^0,w,c
  7354  004E' 6ED9               	movwf	fsr2l,c
  7355  0050' 0E00               	movlw	0
  7356  0052' 2000'              	addwfc	(??_Uinit+1)^0,w,c
  7357  0054' 6EDA               	movwf	fsr2h,c
  7358  0056' CFA8 FFDF          	movff	4008,indf2	;volatile
  7359                           
  7360                           ;Usuaris.c: 131:             EEADR++;
  7361  005A' 2AA9               	incf	169,f,c	;volatile
  7362                           
  7363                           ;Usuaris.c: 132:         }
  7364  005C' 2A00'              	incf	Uinit@j^0,f,c
  7365  005E' 0E08               	movlw	8
  7366  0060' 6400'              	cpfsgt	Uinit@j^0,c
  7367  0062' D7E4               	goto	l747
  7368                           
  7369                           ;Usuaris.c: 133:         for(char j = 0; j<9; j++){
  7370  0064' 0E00               	movlw	0
  7371  0066' 6E00'              	movwf	Uinit@j_1190^0,c
  7372  0068'                    l752:
  7373                           
  7374                           ;Usuaris.c: 134:             EECON1bits.EEPGD = 0;
  7375  0068' 9EA6               	bcf	166,7,c	;volsfr
  7376                           
  7377                           ;Usuaris.c: 135:             EECON1bits.CFGS = 0;
  7378  006A' 9CA6               	bcf	166,6,c	;volsfr
  7379                           
  7380                           ;Usuaris.c: 136:             EECON1bits.RD = 1;
  7381  006C' 80A6               	bsf	166,0,c	;volsfr
  7382  006E'                    l754:
  7383  006E' B0A6               	btfsc	166,0,c	;volsfr
  7384  0070' D7FE               	goto	l754
  7385                           
  7386                           ;Usuaris.c: 138:             usuaris[i].password[j] = EEDATA;
  7387  0072' 5000'              	movf	Uinit@i^0,w,c
  7388  0074' 0D17               	mullw	23
  7389  0076' 0E00'              	movlw	low _usuaris
  7390  0078' 6E00'              	movwf	??_Uinit^0,c
  7391  007A' 0E00'              	movlw	high _usuaris
  7392  007C' 6E00'              	movwf	(??_Uinit+1)^0,c
  7393  007E' 0E09               	movlw	9
  7394  0080' 2600'              	addwf	??_Uinit^0,f,c
  7395  0082' 0E00               	movlw	0
  7396  0084' 2200'              	addwfc	(??_Uinit+1)^0,f,c
  7397  0086' 50F3               	movf	243,w,c
  7398  0088' 2600'              	addwf	??_Uinit^0,f,c
  7399  008A' 50F4               	movf	244,w,c
  7400  008C' 2200'              	addwfc	(??_Uinit+1)^0,f,c
  7401  008E' 5000'              	movf	Uinit@j_1190^0,w,c
  7402  0090' 2400'              	addwf	??_Uinit^0,w,c
  7403  0092' 6ED9               	movwf	fsr2l,c
  7404  0094' 0E00               	movlw	0
  7405  0096' 2000'              	addwfc	(??_Uinit+1)^0,w,c
  7406  0098' 6EDA               	movwf	fsr2h,c
  7407  009A' CFA8 FFDF          	movff	4008,indf2	;volatile
  7408                           
  7409                           ;Usuaris.c: 139:             EEADR++;
  7410  009E' 2AA9               	incf	169,f,c	;volatile
  7411                           
  7412                           ;Usuaris.c: 140:         }
  7413  00A0' 2A00'              	incf	Uinit@j_1190^0,f,c
  7414  00A2' 0E08               	movlw	8
  7415  00A4' 6400'              	cpfsgt	Uinit@j_1190^0,c
  7416  00A6' D7E0               	goto	l752
  7417                           
  7418                           ;Usuaris.c: 141:     }
  7419  00A8' 2A00'              	incf	Uinit@i^0,f,c
  7420  00AA'                    l2765:
  7421  00AA' 5000'              	movf	_numUsuaris^0,w,c
  7422  00AC' 5C00'              	subwf	Uinit@i^0,w,c
  7423  00AE' B0D8               	btfsc	status,0,c
  7424  00B0' 0012               	return	
  7425  00B2' D7BA               	goto	l2735
  7426  00B4'                    __end_of_Uinit:
  7427                           	callstack 0
  7428                           
  7429 ;; *************** function _TiInitTimer *****************
  7430 ;; Defined at:
  7431 ;;		line 18 in file "TiTTimer.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;		None
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  1    wreg      void 
  7438 ;; Registers used:
  7439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1
  7445 ;;      Params:         0       0       0
  7446 ;;      Locals:         0       0       0
  7447 ;;      Temps:          0       0       0
  7448 ;;      Totals:         0       0       0
  7449 ;;Total ram usage:        0 bytes
  7450 ;; Hardware stack levels used: 1
  7451 ;; Hardware stack levels required when called: 2
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_main
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text60
  7460  0000'                    __ptext60:
  7461                           	callstack 0
  7462  0000'                    _TiInitTimer:
  7463                           	callstack 28
  7464                           
  7465                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7466                           
  7467                           ;incstack = 0
  7468  0000' 9ED0               	bcf	208,7,c	;volatile
  7469                           
  7470                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7471  0002' 8EF2               	bsf	242,7,c	;volatile
  7472                           
  7473                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7474  0004' 8CF2               	bsf	242,6,c	;volatile
  7475                           
  7476                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7477  0006' 8AF2               	bsf	242,5,c	;volatile
  7478                           
  7479                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7480  0008' 94F2               	bcf	242,2,c	;volatile
  7481                           
  7482                           ;TiTTimer.c: 25:     T0CON = 136;
  7483  000A' 0E88               	movlw	136
  7484  000C' 6ED5               	movwf	213,c	;volatile
  7485                           
  7486                           ;TiTTimer.c: 27:     TMR0H = 223;
  7487  000E' 0EDF               	movlw	223
  7488  0010' 6ED7               	movwf	215,c	;volatile
  7489                           
  7490                           ;TiTTimer.c: 28:     TMR0L = 148;
  7491  0012' 0E94               	movlw	148
  7492  0014' 6ED6               	movwf	214,c	;volatile
  7493                           
  7494                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7495  0016' 8ED5               	bsf	213,7,c	;volatile
  7496                           
  7497                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  7498  0018' 0E00               	movlw	0
  7499  001A' 6E00'              	movwf	_counter^0,c
  7500  001C'                    l4685:
  7501  001C' 0E07               	movlw	7
  7502  001E' 6400'              	cpfsgt	_counter^0,c
  7503  0020' D001               	goto	l4689
  7504  0022' 0012               	return	
  7505  0024'                    l4689:
  7506                           
  7507                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7508  0024' 5000'              	movf	_counter^0,w,c
  7509  0026' 0D03               	mullw	3
  7510  0028' 50F3               	movf	243,w,c
  7511  002A' 0F00'              	addlw	low (_s_Timers+2)
  7512  002C' 6ED9               	movwf	fsr2l,c
  7513  002E' 6ADA               	clrf	fsr2h,c
  7514  0030' 0E00               	movlw	0
  7515  0032' 6EDF               	movwf	indf2,c
  7516                           
  7517                           ;TiTTimer.c: 33:     }
  7518  0034' 2A00'              	incf	_counter^0,f,c
  7519  0036' D7F2               	goto	l4685
  7520  0038'                    __end_of_TiInitTimer:
  7521                           	callstack 0
  7522                           
  7523 ;; *************** function _TeTeclat *****************
  7524 ;; Defined at:
  7525 ;;		line 22 in file "TeTeclat.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;		None
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;		None
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/1
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1
  7539 ;;      Params:         0       0       0
  7540 ;;      Locals:         0       0       0
  7541 ;;      Temps:          3       0       0
  7542 ;;      Totals:         3       0       0
  7543 ;;Total ram usage:        3 bytes
  7544 ;; Hardware stack levels used: 1
  7545 ;; Hardware stack levels required when called: 3
  7546 ;; This function calls:
  7547 ;;		_MsetNovaTecla
  7548 ;;		_SsetNovaTecla
  7549 ;;		_TiGetTics
  7550 ;;		_TiResetTics
  7551 ;; This function is called by:
  7552 ;;		_main
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           	psect	text61
  7557  0000'                    __ptext61:
  7558                           	callstack 0
  7559  0000'                    _TeTeclat:
  7560                           	callstack 27
  7561                           
  7562                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7563                           
  7564                           ;incstack = 0
  7565  0000' A083               	btfss	131,0,c	;volatile
  7566  0002' D003               	goto	u6180
  7567  0004' 6A00'              	clrf	??_TeTeclat^0,c
  7568  0006' 2A00'              	incf	??_TeTeclat^0,f,c
  7569  0008' D001               	goto	u6188
  7570  000A'                    u6180:
  7571  000A' 6A00'              	clrf	??_TeTeclat^0,c
  7572  000C'                    u6188:
  7573  000C' A283               	btfss	131,1,c	;volatile
  7574  000E' D002               	goto	u6190
  7575  0010' 0E01               	movlw	1
  7576  0012' D001               	goto	u6196
  7577  0014'                    u6190:
  7578  0014' 0E00               	movlw	0
  7579  0016'                    u6196:
  7580  0016' 0D02               	mullw	2
  7581  0018' CFF3 F00D'         	movff	prodl,??_TeTeclat+1
  7582  001C' A483               	btfss	131,2,c	;volatile
  7583  001E' D002               	goto	u6200
  7584  0020' 0E01               	movlw	1
  7585  0022' D001               	goto	u6206
  7586  0024'                    u6200:
  7587  0024' 0E00               	movlw	0
  7588  0026'                    u6206:
  7589  0026' 0D03               	mullw	3
  7590  0028' CFF3 F00E'         	movff	prodl,??_TeTeclat+2
  7591  002C' A683               	btfss	131,3,c	;volatile
  7592  002E' D002               	goto	u6210
  7593  0030' 0E01               	movlw	1
  7594  0032' D001               	goto	u6216
  7595  0034'                    u6210:
  7596  0034' 0E00               	movlw	0
  7597  0036'                    u6216:
  7598  0036' 0D04               	mullw	4
  7599  0038' 50F3               	movf	243,w,c
  7600  003A' 2400'              	addwf	(??_TeTeclat+2)^0,w,c
  7601  003C' 2400'              	addwf	(??_TeTeclat+1)^0,w,c
  7602  003E' 2400'              	addwf	??_TeTeclat^0,w,c
  7603  0040' 6E00'              	movwf	TeTeclat@files^0,c
  7604                           
  7605                           ;TeTeclat.c: 27:  switch(state) {
  7606  0042' D06F               	goto	l6093
  7607  0044'                    l6019:
  7608                           
  7609                           ;TeTeclat.c: 29:    if (files==0) {
  7610  0044' 5000'              	movf	TeTeclat@files^0,w,c
  7611  0046' A4D8               	btfss	status,2,c
  7612  0048' D007               	goto	l6027
  7613                           
  7614                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  7615  004A' 888C               	bsf	140,4,c	;volatile
  7616                           
  7617                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  7618  004C' 9A8C               	bcf	140,5,c	;volatile
  7619                           
  7620                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  7621  004E' 9C8C               	bcf	140,6,c	;volatile
  7622                           
  7623                           ;TeTeclat.c: 33:     cols=0;
  7624  0050' 0E00               	movlw	0
  7625  0052' 6E00'              	movwf	TeTeclat@cols^0,c
  7626  0054'                    l6025:
  7627                           
  7628                           ;TeTeclat.c: 34:     state++;
  7629  0054' 2A00'              	incf	TeTeclat@state^0,f,c
  7630                           
  7631                           ;TeTeclat.c: 35:    }
  7632  0056' 0012               	return	
  7633  0058'                    l6027:
  7634  0058' 5000'              	movf	TeTeclat@files^0,w,c
  7635  005A' B4D8               	btfsc	status,2,c
  7636  005C' 0012               	return	
  7637                           
  7638                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  7639  005E' 5000'              	movf	_tiTeclat^0,w,c
  7640  0060' EC00' F000'        	call	_TiResetTics
  7641  0064'                    l6031:
  7642                           
  7643                           ;TeTeclat.c: 38:     state = 3;
  7644  0064' 0E03               	movlw	3
  7645  0066' 6E00'              	movwf	TeTeclat@state^0,c
  7646  0068' 0012               	return	
  7647  006A'                    l6033:
  7648                           
  7649                           ;TeTeclat.c: 42:    if (files==0) {
  7650  006A' 5000'              	movf	TeTeclat@files^0,w,c
  7651  006C' A4D8               	btfss	status,2,c
  7652  006E' D005               	goto	l6041
  7653                           
  7654                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  7655  0070' 988C               	bcf	140,4,c	;volatile
  7656                           
  7657                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  7658  0072' 8A8C               	bsf	140,5,c	;volatile
  7659                           
  7660                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  7661  0074' 9C8C               	bcf	140,6,c	;volatile
  7662                           
  7663                           ;TeTeclat.c: 46:     cols=1;
  7664  0076' 0E01               	movlw	1
  7665  0078' D7EC               	goto	L3
  7666  007A'                    l6041:
  7667  007A' 5000'              	movf	TeTeclat@files^0,w,c
  7668  007C' B4D8               	btfsc	status,2,c
  7669  007E' 0012               	return	
  7670                           
  7671                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  7672  0080' 5000'              	movf	_tiTeclat^0,w,c
  7673  0082' EC00' F000'        	call	_TiResetTics
  7674  0086' D7EE               	goto	l6031
  7675  0088'                    l6047:
  7676                           
  7677                           ;TeTeclat.c: 55:    if (files==0) {
  7678  0088' 5000'              	movf	TeTeclat@files^0,w,c
  7679  008A' A4D8               	btfss	status,2,c
  7680  008C' D008               	goto	l6053
  7681                           
  7682                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  7683  008E' 988C               	bcf	140,4,c	;volatile
  7684                           
  7685                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  7686  0090' 9A8C               	bcf	140,5,c	;volatile
  7687                           
  7688                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  7689  0092' 8C8C               	bsf	140,6,c	;volatile
  7690                           
  7691                           ;TeTeclat.c: 59:     cols=2;
  7692  0094' 0E02               	movlw	2
  7693  0096' 6E00'              	movwf	TeTeclat@cols^0,c
  7694                           
  7695                           ;TeTeclat.c: 60:     state = 0;
  7696  0098' 0E00               	movlw	0
  7697  009A' 6E00'              	movwf	TeTeclat@state^0,c
  7698                           
  7699                           ;TeTeclat.c: 61:    }
  7700  009C' 0012               	return	
  7701  009E'                    l6053:
  7702  009E' 5000'              	movf	TeTeclat@files^0,w,c
  7703  00A0' B4D8               	btfsc	status,2,c
  7704  00A2' 0012               	return	
  7705                           
  7706                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  7707  00A4' 5000'              	movf	_tiTeclat^0,w,c
  7708  00A6' EC00' F000'        	call	_TiResetTics
  7709  00AA' D7D4               	goto	l6025
  7710  00AC'                    l6059:
  7711                           
  7712                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  7713  00AC' 5000'              	movf	_tiTeclat^0,w,c
  7714  00AE' EC00' F000'        	call	_TiGetTics
  7715  00B2' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  7716  00B4' 0012               	return	
  7717  00B6' D7CE               	goto	l6025
  7718  00B8'                    l6063:
  7719                           
  7720                           ;TeTeclat.c: 73:    if (files==0) {
  7721  00B8' 5000'              	movf	TeTeclat@files^0,w,c
  7722  00BA' A4D8               	btfss	status,2,c
  7723  00BC' D003               	goto	l6067
  7724                           
  7725                           ;TeTeclat.c: 74:     state = 1;
  7726  00BE' 0E01               	movlw	1
  7727  00C0' 6E00'              	movwf	TeTeclat@state^0,c
  7728                           
  7729                           ;TeTeclat.c: 75:    }
  7730  00C2' 0012               	return	
  7731  00C4'                    l6067:
  7732  00C4' 5000'              	movf	TeTeclat@files^0,w,c
  7733  00C6' B4D8               	btfsc	status,2,c
  7734  00C8' 0012               	return	
  7735                           
  7736                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7737  00CA' 5000'              	movf	TeTeclat@files^0,w,c
  7738  00CC' 0D03               	mullw	3
  7739  00CE' 50F3               	movf	243,w,c
  7740  00D0' 0F00'              	addlw	low (_teclaPremuda+253)
  7741  00D2' 2400'              	addwf	TeTeclat@cols^0,w,c
  7742  00D4' 6ED9               	movwf	fsr2l,c
  7743  00D6' 6ADA               	clrf	fsr2h,c
  7744  00D8' 50DF               	movf	indf2,w,c
  7745  00DA' EC00' F000'        	call	_MsetNovaTecla
  7746                           
  7747                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7748  00DE' 5000'              	movf	TeTeclat@files^0,w,c
  7749  00E0' 0D03               	mullw	3
  7750  00E2' 50F3               	movf	243,w,c
  7751  00E4' 0F00'              	addlw	low (_teclaPremuda+253)
  7752  00E6' 2400'              	addwf	TeTeclat@cols^0,w,c
  7753  00E8' 6ED9               	movwf	fsr2l,c
  7754  00EA' 6ADA               	clrf	fsr2h,c
  7755  00EC' 50DF               	movf	indf2,w,c
  7756  00EE' EC00' F000'        	call	_SsetNovaTecla
  7757  00F2' D7B0               	goto	l6025
  7758  00F4'                    l6073:
  7759                           
  7760                           ;TeTeclat.c: 84:    if (files==0) {
  7761  00F4' 5000'              	movf	TeTeclat@files^0,w,c
  7762  00F6' A4D8               	btfss	status,2,c
  7763  00F8' 0012               	return	
  7764                           
  7765                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  7766  00FA' 5000'              	movf	_tiTeclat^0,w,c
  7767  00FC' EC00' F000'        	call	_TiResetTics
  7768  0100' D7A9               	goto	l6025
  7769  0102'                    l6079:
  7770                           
  7771                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  7772  0102' 5000'              	movf	_tiTeclat^0,w,c
  7773  0104' EC00' F000'        	call	_TiGetTics
  7774  0108' D7D4               	goto	L4
  7775  010A'                    l6083:
  7776                           
  7777                           ;TeTeclat.c: 95:    if (files!=0) {
  7778  010A' 5000'              	movf	TeTeclat@files^0,w,c
  7779  010C' B4D8               	btfsc	status,2,c
  7780  010E' D003               	goto	l6087
  7781                           
  7782                           ;TeTeclat.c: 96:     state = 5;
  7783  0110' 0E05               	movlw	5
  7784  0112' 6E00'              	movwf	TeTeclat@state^0,c
  7785                           
  7786                           ;TeTeclat.c: 97:    }
  7787  0114' 0012               	return	
  7788  0116'                    l6087:
  7789  0116' 5000'              	movf	TeTeclat@files^0,w,c
  7790  0118' A4D8               	btfss	status,2,c
  7791  011A' 0012               	return	
  7792                           
  7793                           ;TeTeclat.c: 99:     state = 0;
  7794  011C' 0E00               	movlw	0
  7795  011E' 6E00'              	movwf	TeTeclat@state^0,c
  7796  0120' 0012               	return	
  7797  0122'                    l6093:
  7798  0122' 5000'              	movf	TeTeclat@state^0,w,c
  7799  0124' 6E00'              	movwf	??_TeTeclat^0,c
  7800  0126' 6A00'              	clrf	(??_TeTeclat+1)^0,c
  7801                           
  7802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7803                           ; Switch size 1, requested type "simple"
  7804                           ; Number of cases is 1, Range of values is 0 to 0
  7805                           ; switch strategies available:
  7806                           ; Name         Instructions Cycles
  7807                           ; simple_byte            4     3 (average)
  7808                           ;	Chosen strategy is simple_byte
  7809  0128' 5000'              	movf	(??_TeTeclat+1)^0,w,c
  7810  012A' 0A00               	xorlw	0	; case 0
  7811  012C' A4D8               	btfss	status,2,c
  7812  012E' 0012               	return	
  7813                           
  7814                           ; Switch size 1, requested type "simple"
  7815                           ; Number of cases is 8, Range of values is 0 to 7
  7816                           ; switch strategies available:
  7817                           ; Name         Instructions Cycles
  7818                           ; simple_byte           25    13 (average)
  7819                           ;	Chosen strategy is simple_byte
  7820  0130' 5000'              	movf	??_TeTeclat^0,w,c
  7821  0132' 0A00               	xorlw	0	; case 0
  7822  0134' B4D8               	btfsc	status,2,c
  7823  0136' D786               	goto	l6019
  7824  0138' 0A01               	xorlw	1	; case 1
  7825  013A' B4D8               	btfsc	status,2,c
  7826  013C' D796               	goto	l6033
  7827  013E' 0A03               	xorlw	3	; case 2
  7828  0140' B4D8               	btfsc	status,2,c
  7829  0142' D7A2               	goto	l6047
  7830  0144' 0A01               	xorlw	1	; case 3
  7831  0146' B4D8               	btfsc	status,2,c
  7832  0148' D7B1               	goto	l6059
  7833  014A' 0A07               	xorlw	7	; case 4
  7834  014C' B4D8               	btfsc	status,2,c
  7835  014E' D7B4               	goto	l6063
  7836  0150' 0A01               	xorlw	1	; case 5
  7837  0152' B4D8               	btfsc	status,2,c
  7838  0154' D7CF               	goto	l6073
  7839  0156' 0A03               	xorlw	3	; case 6
  7840  0158' B4D8               	btfsc	status,2,c
  7841  015A' D7D3               	goto	l6079
  7842  015C' 0A01               	xorlw	1	; case 7
  7843  015E' A4D8               	btfss	status,2,c
  7844  0160' 0012               	return	
  7845  0162' D7D3               	goto	l6083
  7846  0164'                    __end_of_TeTeclat:
  7847                           	callstack 0
  7848                           
  7849 ;; *************** function _SsetNovaTecla *****************
  7850 ;; Defined at:
  7851 ;;		line 125 in file "Ssms.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;  tecla           1    wreg     unsigned char 
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;  tecla           1    5[COMRAM] unsigned char 
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  1    wreg      void 
  7858 ;; Registers used:
  7859 ;;		wreg
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/1
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMRAM   BANK0   BANK1
  7865 ;;      Params:         0       0       0
  7866 ;;      Locals:         1       0       0
  7867 ;;      Temps:          0       0       0
  7868 ;;      Totals:         1       0       0
  7869 ;;Total ram usage:        1 bytes
  7870 ;; Hardware stack levels used: 1
  7871 ;; Hardware stack levels required when called: 2
  7872 ;; This function calls:
  7873 ;;		Nothing
  7874 ;; This function is called by:
  7875 ;;		_TeTeclat
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           	psect	text62
  7880  0000'                    __ptext62:
  7881                           	callstack 0
  7882  0000'                    _SsetNovaTecla:
  7883                           	callstack 27
  7884                           
  7885                           ;incstack = 0
  7886                           ;SsetNovaTecla@tecla stored from wreg
  7887  0000' 6E00'              	movwf	SsetNovaTecla@tecla^0,c
  7888                           
  7889                           ;Ssms.c: 126:     novaTecla = tecla;
  7890  0002' C005' F010'        	movff	SsetNovaTecla@tecla,_novaTecla
  7891  0006' 0012               	return		;funcret
  7892  0008'                    __end_of_SsetNovaTecla:
  7893                           	callstack 0
  7894                           
  7895 ;; *************** function _MsetNovaTecla *****************
  7896 ;; Defined at:
  7897 ;;		line 29 in file "Menu.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  tecla           1    wreg     unsigned char 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;  tecla           1    5[COMRAM] unsigned char 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  1    wreg      void 
  7904 ;; Registers used:
  7905 ;;		wreg
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/1
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1
  7911 ;;      Params:         0       0       0
  7912 ;;      Locals:         1       0       0
  7913 ;;      Temps:          0       0       0
  7914 ;;      Totals:         1       0       0
  7915 ;;Total ram usage:        1 bytes
  7916 ;; Hardware stack levels used: 1
  7917 ;; Hardware stack levels required when called: 2
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_TeTeclat
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text63
  7926  0000'                    __ptext63:
  7927                           	callstack 0
  7928  0000'                    _MsetNovaTecla:
  7929                           	callstack 27
  7930                           
  7931                           ;incstack = 0
  7932                           ;MsetNovaTecla@tecla stored from wreg
  7933  0000' 6E00'              	movwf	MsetNovaTecla@tecla^0,c
  7934                           
  7935                           ;Menu.c: 30:     NovaTecla = tecla;
  7936  0002' C005' F00D'        	movff	MsetNovaTecla@tecla,_NovaTecla
  7937  0006' 0012               	return		;funcret
  7938  0008'                    __end_of_MsetNovaTecla:
  7939                           	callstack 0
  7940                           
  7941 ;; *************** function _TeInit *****************
  7942 ;; Defined at:
  7943 ;;		line 18 in file "TeTeclat.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;		None
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;		None
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  1    wreg      void 
  7950 ;; Registers used:
  7951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMRAM   BANK0   BANK1
  7957 ;;      Params:         0       0       0
  7958 ;;      Locals:         0       0       0
  7959 ;;      Temps:          0       0       0
  7960 ;;      Totals:         0       0       0
  7961 ;;Total ram usage:        0 bytes
  7962 ;; Hardware stack levels used: 1
  7963 ;; Hardware stack levels required when called: 3
  7964 ;; This function calls:
  7965 ;;		_TiGetTimer
  7966 ;; This function is called by:
  7967 ;;		_main
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text64
  7972  0000'                    __ptext64:
  7973                           	callstack 0
  7974  0000'                    _TeInit:
  7975                           	callstack 27
  7976                           
  7977                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  7978                           
  7979                           ;incstack = 0
  7980  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  7981  0004' 6E00'              	movwf	_tiTeclat^0,c
  7982  0006' 0012               	return		;funcret
  7983  0008'                    __end_of_TeInit:
  7984                           	callstack 0
  7985                           
  7986 ;; *************** function _Sinit *****************
  7987 ;; Defined at:
  7988 ;;		line 18 in file "Ssms.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;		None
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;		None
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1
  8002 ;;      Params:         0       0       0
  8003 ;;      Locals:         0       0       0
  8004 ;;      Temps:          0       0       0
  8005 ;;      Totals:         0       0       0
  8006 ;;Total ram usage:        0 bytes
  8007 ;; Hardware stack levels used: 1
  8008 ;; Hardware stack levels required when called: 3
  8009 ;; This function calls:
  8010 ;;		_TiGetTimer
  8011 ;; This function is called by:
  8012 ;;		_main
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text65
  8017  0000'                    __ptext65:
  8018                           	callstack 0
  8019  0000'                    _Sinit:
  8020                           	callstack 27
  8021                           
  8022                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  8023                           
  8024                           ;incstack = 0
  8025  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  8026  0004' 6E00'              	movwf	_timerSMS^0,c
  8027  0006' 0012               	return		;funcret
  8028  0008'                    __end_of_Sinit:
  8029                           	callstack 0
  8030                           
  8031 ;; *************** function _SMotor *****************
  8032 ;; Defined at:
  8033 ;;		line 22 in file "Ssms.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1
  8047 ;;      Params:         0       0       0
  8048 ;;      Locals:         0       0       0
  8049 ;;      Temps:          2       0       0
  8050 ;;      Totals:         2       0       0
  8051 ;;Total ram usage:        2 bytes
  8052 ;; Hardware stack levels used: 1
  8053 ;; Hardware stack levels required when called: 3
  8054 ;; This function calls:
  8055 ;;		_MNovaLletra
  8056 ;;		_TiGetTics
  8057 ;;		_TiResetTics
  8058 ;; This function is called by:
  8059 ;;		_main
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text66
  8064  0000'                    __ptext66:
  8065                           	callstack 0
  8066  0000'                    _SMotor:
  8067                           	callstack 27
  8068                           
  8069                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  8070                           
  8071                           ;incstack = 0
  8072  0000' D0DF               	goto	l4855
  8073  0002'                    l4701:
  8074                           
  8075                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  8076  0002' 2800'              	incf	_novaTecla^0,w,c
  8077  0004' A4D8               	btfss	status,2,c
  8078  0006' A000'              	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8079  0008' D006               	goto	l4709
  8080                           
  8081                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  8082  000A' 5000'              	movf	_timerSMS^0,w,c
  8083  000C' EC00' F000'        	call	_TiResetTics
  8084                           
  8085                           ;Ssms.c: 29:     state = 3;
  8086  0010' 0E03               	movlw	3
  8087  0012' 6E00'              	movwf	SMotor@state^0,c
  8088                           
  8089                           ;Ssms.c: 30:    }
  8090  0014' 0012               	return	
  8091  0016'                    l4709:
  8092  0016' 2800'              	incf	_novaTecla^0,w,c
  8093  0018' A4D8               	btfss	status,2,c
  8094  001A' 0012               	return	
  8095  001C' 5000'              	movf	_timerSMS^0,w,c
  8096  001E' EC00' F000'        	call	_TiGetTics
  8097  0022' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  8098  0024' 0012               	return	
  8099  0026' 0E5A               	movlw	90
  8100  0028' 5C00'              	subwf	?_TiGetTics^0,w,c
  8101  002A' 0E02               	movlw	2
  8102  002C' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  8103  002E' A0D8               	btfss	status,0,c
  8104  0030' 0012               	return	
  8105  0032' 2800'              	incf	_lletraASCII^0,w,c
  8106  0034' B4D8               	btfsc	status,2,c
  8107  0036' 0012               	return	
  8108  0038' A000'              	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  8109  003A' 0012               	return	
  8110                           
  8111                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  8112  003C' 5000'              	movf	_lletraASCII^0,w,c
  8113  003E' EC00' F000'        	call	_MNovaLletra
  8114                           
  8115                           ;Ssms.c: 33:     lletraASCII = -1;
  8116  0042' 6800'              	setf	_lletraASCII^0,c
  8117                           
  8118                           ;Ssms.c: 34:     ultimaTecla = -1;
  8119  0044' 6800'              	setf	_ultimaTecla^0,c
  8120                           
  8121                           ;Ssms.c: 35:     zeroTecla = 0;
  8122  0046' 0E00               	movlw	0
  8123  0048' 6E00'              	movwf	_zeroTecla^0,c
  8124  004A'                    l4725:
  8125                           
  8126                           ;Ssms.c: 36:     state = 0;
  8127  004A' 0E00               	movlw	0
  8128  004C' 6E00'              	movwf	SMotor@state^0,c
  8129  004E' 0012               	return	
  8130  0050'                    l4727:
  8131                           
  8132                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  8133  0050' 5000'              	movf	_ultimaTecla^0,w,c
  8134  0052' 1800'              	xorwf	_novaTecla^0,w,c
  8135  0054' A4D8               	btfss	status,2,c
  8136  0056' D011               	goto	l4737
  8137  0058' 5000'              	movf	_timerSMS^0,w,c
  8138  005A' EC00' F000'        	call	_TiGetTics
  8139  005E' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  8140  0060' D006               	goto	u3920
  8141  0062' 0E5A               	movlw	90
  8142  0064' 5C00'              	subwf	?_TiGetTics^0,w,c
  8143  0066' 0E02               	movlw	2
  8144  0068' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  8145  006A' B0D8               	btfsc	status,0,c
  8146  006C' D006               	goto	l4737
  8147  006E'                    u3920:
  8148                           
  8149                           ;Ssms.c: 41:     novaTecla = -1;
  8150  006E' 6800'              	setf	_novaTecla^0,c
  8151                           
  8152                           ;Ssms.c: 42:     sumaPulsacions++;
  8153  0070' 2A00'              	incf	_sumaPulsacions^0,f,c
  8154                           
  8155                           ;Ssms.c: 43:     lletraASCII++;
  8156  0072' 2A00'              	incf	_lletraASCII^0,f,c
  8157                           
  8158                           ;Ssms.c: 44:     state = 2;
  8159  0074' 0E02               	movlw	2
  8160  0076' 6E00'              	movwf	SMotor@state^0,c
  8161                           
  8162                           ;Ssms.c: 45:    }
  8163  0078' 0012               	return	
  8164  007A'                    l4737:
  8165  007A' 2800'              	incf	_novaTecla^0,w,c
  8166  007C' B4D8               	btfsc	status,2,c
  8167  007E' 0012               	return	
  8168  0080' 5000'              	movf	_ultimaTecla^0,w,c
  8169  0082' 1800'              	xorwf	_novaTecla^0,w,c
  8170  0084' B4D8               	btfsc	status,2,c
  8171  0086' 0012               	return	
  8172                           
  8173                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  8174  0088' 5000'              	movf	_lletraASCII^0,w,c
  8175  008A' EC00' F000'        	call	_MNovaLletra
  8176                           
  8177                           ;Ssms.c: 48:     if(novaTecla != 0){
  8178  008E' 5000'              	movf	_novaTecla^0,w,c
  8179  0090' B4D8               	btfsc	status,2,c
  8180  0092' D006               	goto	l4747
  8181                           
  8182                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  8183  0094' 5000'              	movf	_novaTecla^0,w,c
  8184  0096' 0F00'              	addlw	low (_lletraInici+254)
  8185  0098' 6ED9               	movwf	fsr2l,c
  8186  009A' 6ADA               	clrf	fsr2h,c
  8187  009C' 50DF               	movf	indf2,w,c
  8188  009E' D001               	goto	L5
  8189  00A0'                    l4747:
  8190                           
  8191                           ;Ssms.c: 51:       lletraASCII = '0';
  8192  00A0' 0E30               	movlw	48
  8193  00A2'                    L5:
  8194  00A2' 6E00'              	movwf	_lletraASCII^0,c
  8195                           
  8196                           ;Ssms.c: 53:     zeroTecla=0;
  8197                           
  8198                           ;Ssms.c: 52:     }
  8199  00A4' 0E00               	movlw	0
  8200  00A6' 6E00'              	movwf	_zeroTecla^0,c
  8201                           
  8202                           ;Ssms.c: 54:     ultimaTecla = novaTecla;
  8203  00A8' C010' F00E'        	movff	_novaTecla,_ultimaTecla
  8204                           
  8205                           ;Ssms.c: 55:     sumaPulsacions = 0;
  8206  00AC' 0E00               	movlw	0
  8207  00AE' 6E00'              	movwf	_sumaPulsacions^0,c
  8208                           
  8209                           ;Ssms.c: 56:     novaTecla = -1;
  8210  00B0' 6800'              	setf	_novaTecla^0,c
  8211                           
  8212                           ;Ssms.c: 57:     state = 0;
  8213  00B2' 0E00               	movlw	0
  8214  00B4' 6E00'              	movwf	SMotor@state^0,c
  8215  00B6' 0012               	return	
  8216  00B8'                    l4753:
  8217                           
  8218                           ;Ssms.c: 61:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  8219  00B8' 0E07               	movlw	7
  8220  00BA' 1800'              	xorwf	_ultimaTecla^0,w,c
  8221  00BC' B4D8               	btfsc	status,2,c
  8222  00BE' D00A               	goto	l4761
  8223  00C0' 0E09               	movlw	9
  8224  00C2' 1800'              	xorwf	_ultimaTecla^0,w,c
  8225  00C4' B4D8               	btfsc	status,2,c
  8226  00C6' D006               	goto	l4761
  8227  00C8' 5000'              	movf	_ultimaTecla^0,w,c
  8228  00CA' B4D8               	btfsc	status,2,c
  8229  00CC' D003               	goto	l4761
  8230                           
  8231                           ;Ssms.c: 62:     state = 5;
  8232  00CE' 0E05               	movlw	5
  8233  00D0' 6E00'              	movwf	SMotor@state^0,c
  8234                           
  8235                           ;Ssms.c: 63:    }
  8236  00D2' 0012               	return	
  8237  00D4'                    l4761:
  8238  00D4' 0E07               	movlw	7
  8239  00D6' 1800'              	xorwf	_ultimaTecla^0,w,c
  8240  00D8' B4D8               	btfsc	status,2,c
  8241  00DA' D004               	goto	u4000
  8242  00DC' 0E09               	movlw	9
  8243  00DE' 1800'              	xorwf	_ultimaTecla^0,w,c
  8244  00E0' A4D8               	btfss	status,2,c
  8245  00E2' D003               	goto	l4767
  8246  00E4'                    u4000:
  8247                           
  8248                           ;Ssms.c: 65:     state = 6;
  8249  00E4' 0E06               	movlw	6
  8250  00E6' 6E00'              	movwf	SMotor@state^0,c
  8251                           
  8252                           ;Ssms.c: 66:    }
  8253  00E8' 0012               	return	
  8254  00EA'                    l4767:
  8255  00EA' 5000'              	movf	_ultimaTecla^0,w,c
  8256  00EC' A4D8               	btfss	status,2,c
  8257  00EE' 0012               	return	
  8258                           
  8259                           ;Ssms.c: 68:     zeroTecla++;
  8260  00F0' 2A00'              	incf	_zeroTecla^0,f,c
  8261                           
  8262                           ;Ssms.c: 69:     if(zeroTecla == 2) zeroTecla = 0;
  8263  00F2' 0E02               	movlw	2
  8264  00F4' 1800'              	xorwf	_zeroTecla^0,w,c
  8265  00F6' A4D8               	btfss	status,2,c
  8266  00F8' D002               	goto	l4775
  8267  00FA' 0E00               	movlw	0
  8268  00FC' 6E00'              	movwf	_zeroTecla^0,c
  8269  00FE'                    l4775:
  8270                           
  8271                           ;Ssms.c: 70:     lletraASCII = arrayZero[zeroTecla];
  8272  00FE' 5000'              	movf	_zeroTecla^0,w,c
  8273  0100' 0F00'              	addlw	low _arrayZero
  8274  0102' 6ED9               	movwf	fsr2l,c
  8275  0104' 6ADA               	clrf	fsr2h,c
  8276  0106' 50DF               	movf	indf2,w,c
  8277  0108' D04B               	goto	L6
  8278  010A'                    l4779:
  8279                           
  8280                           ;Ssms.c: 75:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  8281  010A' 5000'              	movf	_novaTecla^0,w,c
  8282  010C' 0A80               	xorlw	128
  8283  010E' 0F7E               	addlw	-130
  8284  0110' B0D8               	btfsc	status,0,c
  8285  0112' D003               	goto	u4040
  8286  0114' 5000'              	movf	_novaTecla^0,w,c
  8287  0116' A4D8               	btfss	status,2,c
  8288  0118' D008               	goto	l4787
  8289  011A'                    u4040:
  8290  011A' 5000'              	movf	_novaTecla^0,w,c
  8291  011C' 0A80               	xorlw	128
  8292  011E' 0F76               	addlw	-138
  8293  0120' B0D8               	btfsc	status,0,c
  8294  0122' D003               	goto	l4787
  8295                           
  8296                           ;Ssms.c: 76:     state = 1;
  8297  0124' 0E01               	movlw	1
  8298  0126' 6E00'              	movwf	SMotor@state^0,c
  8299                           
  8300                           ;Ssms.c: 77:    }
  8301  0128' 0012               	return	
  8302  012A'                    l4787:
  8303  012A' 5000'              	movf	_novaTecla^0,w,c
  8304  012C' B4D8               	btfsc	status,2,c
  8305  012E' D00E               	goto	l4799
  8306  0130' 5000'              	movf	_novaTecla^0,w,c
  8307  0132' 0A80               	xorlw	128
  8308  0134' 0F7E               	addlw	-130
  8309  0136' B0D8               	btfsc	status,0,c
  8310  0138' D009               	goto	l4799
  8311  013A' 2800'              	incf	_lletraASCII^0,w,c
  8312  013C' A4D8               	btfss	status,2,c
  8313  013E' D006               	goto	l4799
  8314                           
  8315                           ;Ssms.c: 79:     MNovaLletra(novaTecla+48);
  8316  0140' 5000'              	movf	_novaTecla^0,w,c
  8317  0142' 0F30               	addlw	48
  8318  0144' EC00' F000'        	call	_MNovaLletra
  8319  0148'                    l4795:
  8320                           
  8321                           ;Ssms.c: 80:     novaTecla = -1;
  8322  0148' 6800'              	setf	_novaTecla^0,c
  8323  014A' D77F               	goto	l4725
  8324  014C'                    l4799:
  8325  014C' 5000'              	movf	_novaTecla^0,w,c
  8326  014E' B4D8               	btfsc	status,2,c
  8327  0150' 0012               	return	
  8328  0152' 5000'              	movf	_novaTecla^0,w,c
  8329  0154' 0A80               	xorlw	128
  8330  0156' 0F7E               	addlw	-130
  8331  0158' B0D8               	btfsc	status,0,c
  8332  015A' 0012               	return	
  8333  015C' 2800'              	incf	_lletraASCII^0,w,c
  8334  015E' B4D8               	btfsc	status,2,c
  8335  0160' 0012               	return	
  8336                           
  8337                           ;Ssms.c: 84:     MNovaLletra(lletraASCII);
  8338  0162' 5000'              	movf	_lletraASCII^0,w,c
  8339  0164' EC00' F000'        	call	_MNovaLletra
  8340                           
  8341                           ;Ssms.c: 85:     lletraASCII = -1;
  8342  0168' 6800'              	setf	_lletraASCII^0,c
  8343                           
  8344                           ;Ssms.c: 86:     state = 4;
  8345  016A' 0E04               	movlw	4
  8346  016C' 6E00'              	movwf	SMotor@state^0,c
  8347  016E' 0012               	return	
  8348  0170'                    l4811:
  8349                           
  8350                           ;Ssms.c: 90:    MNovaLletra(novaTecla+48);
  8351  0170' 5000'              	movf	_novaTecla^0,w,c
  8352  0172' 0F30               	addlw	48
  8353  0174' EC00' F000'        	call	_MNovaLletra
  8354  0178' D7E7               	goto	l4795
  8355  017A'                    l4817:
  8356                           
  8357                           ;Ssms.c: 95:    if (sumaPulsacions == 4) {
  8358  017A' 0E04               	movlw	4
  8359  017C' 1800'              	xorwf	_sumaPulsacions^0,w,c
  8360  017E' A4D8               	btfss	status,2,c
  8361  0180' D009               	goto	l4825
  8362  0182'                    u4120:
  8363                           
  8364                           ;Ssms.c: 96:     lletraASCII = lletraInici[ultimaTecla-2];
  8365  0182' 5000'              	movf	_ultimaTecla^0,w,c
  8366  0184' 0F00'              	addlw	low (_lletraInici+254)
  8367  0186' 6ED9               	movwf	fsr2l,c
  8368  0188' 6ADA               	clrf	fsr2h,c
  8369  018A' 50DF               	movf	indf2,w,c
  8370  018C' 6E00'              	movwf	_lletraASCII^0,c
  8371                           
  8372                           ;Ssms.c: 97:     sumaPulsacions = 0;
  8373  018E' 0E00               	movlw	0
  8374  0190' 6E00'              	movwf	_sumaPulsacions^0,c
  8375  0192' D75B               	goto	l4725
  8376  0194'                    l4825:
  8377  0194' 0E03               	movlw	3
  8378  0196' 1800'              	xorwf	_sumaPulsacions^0,w,c
  8379  0198' A4D8               	btfss	status,2,c
  8380  019A' D004               	goto	l4831
  8381  019C'                    u4130:
  8382                           
  8383                           ;Ssms.c: 101:     lletraASCII = ultimaTecla+48;
  8384  019C' 5000'              	movf	_ultimaTecla^0,w,c
  8385  019E' 0F30               	addlw	48
  8386  01A0'                    L6:
  8387  01A0' 6E00'              	movwf	_lletraASCII^0,c
  8388  01A2' D753               	goto	l4725
  8389  01A4'                    l4831:
  8390  01A4' 0E03               	movlw	3
  8391  01A6' 6000'              	cpfslt	_sumaPulsacions^0,c
  8392  01A8' 0012               	return	
  8393  01AA' D74F               	goto	l4725
  8394  01AC'                    l4835:
  8395                           
  8396                           ;Ssms.c: 109:    if (sumaPulsacions == 4) {
  8397  01AC' 0E04               	movlw	4
  8398  01AE' 1800'              	xorwf	_sumaPulsacions^0,w,c
  8399  01B0' B4D8               	btfsc	status,2,c
  8400  01B2' D7F4               	goto	u4130
  8401  01B4' 0E05               	movlw	5
  8402  01B6' 1800'              	xorwf	_sumaPulsacions^0,w,c
  8403  01B8' B4D8               	btfsc	status,2,c
  8404  01BA' D7E3               	goto	u4120
  8405  01BC' 0E04               	movlw	4
  8406  01BE' D7F3               	goto	L7
  8407  01C0'                    l4855:
  8408  01C0' 5000'              	movf	SMotor@state^0,w,c
  8409  01C2' 6E00'              	movwf	??_SMotor^0,c
  8410  01C4' 6A00'              	clrf	(??_SMotor+1)^0,c
  8411                           
  8412                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8413                           ; Switch size 1, requested type "simple"
  8414                           ; Number of cases is 1, Range of values is 0 to 0
  8415                           ; switch strategies available:
  8416                           ; Name         Instructions Cycles
  8417                           ; simple_byte            4     3 (average)
  8418                           ;	Chosen strategy is simple_byte
  8419  01C6' 5000'              	movf	(??_SMotor+1)^0,w,c
  8420  01C8' 0A00               	xorlw	0	; case 0
  8421  01CA' A4D8               	btfss	status,2,c
  8422  01CC' 0012               	return	
  8423                           
  8424                           ; Switch size 1, requested type "simple"
  8425                           ; Number of cases is 7, Range of values is 0 to 6
  8426                           ; switch strategies available:
  8427                           ; Name         Instructions Cycles
  8428                           ; simple_byte           22    12 (average)
  8429                           ;	Chosen strategy is simple_byte
  8430  01CE' 5000'              	movf	??_SMotor^0,w,c
  8431  01D0' 0A00               	xorlw	0	; case 0
  8432  01D2' B4D8               	btfsc	status,2,c
  8433  01D4' D716               	goto	l4701
  8434  01D6' 0A01               	xorlw	1	; case 1
  8435  01D8' B4D8               	btfsc	status,2,c
  8436  01DA' D73A               	goto	l4727
  8437  01DC' 0A03               	xorlw	3	; case 2
  8438  01DE' B4D8               	btfsc	status,2,c
  8439  01E0' D76B               	goto	l4753
  8440  01E2' 0A01               	xorlw	1	; case 3
  8441  01E4' B4D8               	btfsc	status,2,c
  8442  01E6' D791               	goto	l4779
  8443  01E8' 0A07               	xorlw	7	; case 4
  8444  01EA' B4D8               	btfsc	status,2,c
  8445  01EC' D7C1               	goto	l4811
  8446  01EE' 0A01               	xorlw	1	; case 5
  8447  01F0' B4D8               	btfsc	status,2,c
  8448  01F2' D7C3               	goto	l4817
  8449  01F4' 0A03               	xorlw	3	; case 6
  8450  01F6' A4D8               	btfss	status,2,c
  8451  01F8' 0012               	return	
  8452  01FA' D7D8               	goto	l4835
  8453  01FC'                    __end_of_SMotor:
  8454                           	callstack 0
  8455                           
  8456 ;; *************** function _MNovaLletra *****************
  8457 ;; Defined at:
  8458 ;;		line 33 in file "Menu.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  lletra          1    wreg     unsigned char 
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;  lletra          1    5[COMRAM] unsigned char 
  8463 ;; Return value:  Size  Location     Type
  8464 ;;                  1    wreg      void 
  8465 ;; Registers used:
  8466 ;;		wreg
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMRAM   BANK0   BANK1
  8472 ;;      Params:         0       0       0
  8473 ;;      Locals:         1       0       0
  8474 ;;      Temps:          0       0       0
  8475 ;;      Totals:         1       0       0
  8476 ;;Total ram usage:        1 bytes
  8477 ;; Hardware stack levels used: 1
  8478 ;; Hardware stack levels required when called: 2
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		_SMotor
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           	psect	text67
  8487  0000'                    __ptext67:
  8488                           	callstack 0
  8489  0000'                    _MNovaLletra:
  8490                           	callstack 27
  8491                           
  8492                           ;incstack = 0
  8493                           ;MNovaLletra@lletra stored from wreg
  8494  0000' 6E00'              	movwf	MNovaLletra@lletra^0,c
  8495                           
  8496                           ;Menu.c: 34:     novaLletra = lletra;
  8497  0002' C005' F00C'        	movff	MNovaLletra@lletra,_novaLletra
  8498  0006' 0012               	return		;funcret
  8499  0008'                    __end_of_MNovaLletra:
  8500                           	callstack 0
  8501                           
  8502 ;; *************** function _Minit *****************
  8503 ;; Defined at:
  8504 ;;		line 26 in file "Menu.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;		None
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      void 
  8511 ;; Registers used:
  8512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1
  8518 ;;      Params:         0       0       0
  8519 ;;      Locals:         0       0       0
  8520 ;;      Temps:          0       0       0
  8521 ;;      Totals:         0       0       0
  8522 ;;Total ram usage:        0 bytes
  8523 ;; Hardware stack levels used: 1
  8524 ;; Hardware stack levels required when called: 3
  8525 ;; This function calls:
  8526 ;;		_TiGetTimer
  8527 ;; This function is called by:
  8528 ;;		_main
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           	psect	text68
  8533  0000'                    __ptext68:
  8534                           	callstack 0
  8535  0000'                    _Minit:
  8536                           	callstack 27
  8537                           
  8538                           ;Menu.c: 27:     timerMenu = TiGetTimer();
  8539                           
  8540                           ;incstack = 0
  8541  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  8542  0004' 6E00'              	movwf	_timerMenu^0,c
  8543  0006' 0012               	return		;funcret
  8544  0008'                    __end_of_Minit:
  8545                           	callstack 0
  8546                           
  8547 ;; *************** function _LcLCD *****************
  8548 ;; Defined at:
  8549 ;;		line 246 in file "LcTLCD.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;		None
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;		None
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  1    wreg      void 
  8556 ;; Registers used:
  8557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/1
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMRAM   BANK0   BANK1
  8563 ;;      Params:         0       0       0
  8564 ;;      Locals:         0       0       0
  8565 ;;      Temps:          0       0       0
  8566 ;;      Totals:         0       0       0
  8567 ;;Total ram usage:        0 bytes
  8568 ;; Hardware stack levels used: 1
  8569 ;; Hardware stack levels required when called: 6
  8570 ;; This function calls:
  8571 ;;		_LcPutChar
  8572 ;; This function is called by:
  8573 ;;		_main
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           	psect	text69
  8578  0000'                    __ptext69:
  8579                           	callstack 0
  8580  0000'                    _LcLCD:
  8581                           	callstack 24
  8582                           
  8583                           ;LcTLCD.c: 247:     if(nou_s == 1){
  8584                           
  8585                           ;incstack = 0
  8586  0000' A000'              	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8587  0002' 0012               	return	
  8588                           
  8589                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  8590  0004' C00E' FFF6         	movff	_s_ptr,tblptrl
  8591  0008' C00F' FFF7         	movff	_s_ptr+1,tblptrh
  8592  000C' 6AF8               	clrf	tblptru,c
  8593  000E' 0EFF'              	movlw	(high __ramtop+-1)
  8594  0010' 64F7               	cpfsgt	tblptrh,c
  8595  0012' D003               	bra	u3787
  8596  0014' 0008               	tblrd		*
  8597  0016' 50F5               	movf	tablat,w,c
  8598  0018' D005               	bra	u3780
  8599  001A'                    u3787:
  8600  001A' CFF6 FFE1          	movff	tblptrl,fsr1l
  8601  001E' CFF7 FFE2          	movff	tblptrh,fsr1h
  8602  0022' 50E7               	movf	indf1,w,c
  8603  0024'                    u3780:
  8604  0024' EC00' F000'        	call	_LcPutChar
  8605                           
  8606                           ;LcTLCD.c: 249:         s_ptr++;
  8607  0028' 4A00'              	infsnz	_s_ptr^0,f,c
  8608  002A' 2A00'              	incf	(_s_ptr+1)^0,f,c
  8609                           
  8610                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  8611  002C' C00E' FFF6         	movff	_s_ptr,tblptrl
  8612  0030' C00F' FFF7         	movff	_s_ptr+1,tblptrh
  8613  0034' 6AF8               	clrf	tblptru,c
  8614  0036' 0EFF'              	movlw	(high __ramtop+-1)
  8615  0038' 64F7               	cpfsgt	tblptrh,c
  8616  003A' D003               	bra	u3797
  8617  003C' 0008               	tblrd		*
  8618  003E' 50F5               	movf	tablat,w,c
  8619  0040' D005               	bra	u3790
  8620  0042'                    u3797:
  8621  0042' CFF6 FFE1          	movff	tblptrl,fsr1l
  8622  0046' CFF7 FFE2          	movff	tblptrh,fsr1h
  8623  004A' 50E7               	movf	indf1,w,c
  8624  004C'                    u3790:
  8625  004C' 0900               	iorlw	0
  8626  004E' A4D8               	btfss	status,2,c
  8627  0050' 0012               	return	
  8628                           
  8629                           ;LcTLCD.c: 251:             nou_s = 0;
  8630  0052' 9000'              	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8631                           
  8632                           ;LcTLCD.c: 252:             s_ptr=0;
  8633  0054' 0E00               	movlw	0
  8634  0056' 6E00'              	movwf	_s_ptr^0,c
  8635  0058' 0E00               	movlw	0
  8636  005A' 6E00'              	movwf	(_s_ptr+1)^0,c
  8637  005C' 0012               	return		;funcret
  8638  005E'                    __end_of_LcLCD:
  8639                           	callstack 0
  8640                           
  8641 ;; *************** function _LcInit *****************
  8642 ;; Defined at:
  8643 ;;		line 41 in file "LcTLCD.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  rows            1    wreg     unsigned char 
  8646 ;;  columns         1   16[COMRAM] unsigned char 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  rows            1   17[COMRAM] unsigned char 
  8649 ;;  i               2   18[COMRAM] int 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  1    wreg      void 
  8652 ;; Registers used:
  8653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1
  8659 ;;      Params:         1       0       0
  8660 ;;      Locals:         3       0       0
  8661 ;;      Temps:          0       0       0
  8662 ;;      Totals:         4       0       0
  8663 ;;Total ram usage:        4 bytes
  8664 ;; Hardware stack levels used: 1
  8665 ;; Hardware stack levels required when called: 4
  8666 ;; This function calls:
  8667 ;;		_CantaIR
  8668 ;;		_EscriuPrimeraOrdre
  8669 ;;		_Espera
  8670 ;;		_TiGetTimer
  8671 ;;		_WaitForBusy
  8672 ;; This function is called by:
  8673 ;;		_main
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text70
  8678  0000'                    __ptext70:
  8679                           	callstack 0
  8680  0000'                    _LcInit:
  8681                           	callstack 26
  8682                           
  8683                           ;incstack = 0
  8684                           ;LcInit@rows stored from wreg
  8685  0000' 6E00'              	movwf	LcInit@rows^0,c
  8686                           
  8687                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  8688  0002' EC00' F000'        	call	_TiGetTimer	;wreg free
  8689  0006' 6E00'              	movwf	_Timer^0,c
  8690                           
  8691                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  8692  0008' C011' F040'        	movff	LcInit@rows,_Rows
  8693  000C' C010' F03F'        	movff	LcInit@columns,_Columns
  8694                           
  8695                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  8696  0010' 0E00               	movlw	0
  8697  0012' 6E00'              	movwf	_ColumnAct^0,c
  8698  0014' C03D' F03E'        	movff	_ColumnAct,_RowAct
  8699                           
  8700                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8701  0018' 9894               	bcf	148,4,c	;volatile
  8702  001A' 9E95               	bcf	149,7,c	;volatile
  8703  001C' 9A94               	bcf	148,5,c	;volatile
  8704                           
  8705                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  8706  001E' 0E00               	movlw	0
  8707  0020' 6E00'              	movwf	(LcInit@i+1)^0,c
  8708  0022' 0E00               	movlw	0
  8709  0024' 6E00'              	movwf	LcInit@i^0,c
  8710  0026'                    l4607:
  8711                           
  8712                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  8713  0026' 0E00               	movlw	0
  8714  0028' 6E00'              	movwf	(Espera@ms+1)^0,c
  8715  002A' 0E64               	movlw	100
  8716  002C' 6E00'              	movwf	Espera@ms^0,c
  8717  002E' 5000'              	movf	_Timer^0,w,c
  8718  0030' EC00' F000'        	call	_Espera
  8719                           
  8720                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  8721  0034' 0E03               	movlw	3
  8722  0036' EC00' F000'        	call	_EscriuPrimeraOrdre
  8723                           
  8724                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  8725  003A' 0E00               	movlw	0
  8726  003C' 6E00'              	movwf	(Espera@ms+1)^0,c
  8727  003E' 0E05               	movlw	5
  8728  0040' 6E00'              	movwf	Espera@ms^0,c
  8729  0042' 5000'              	movf	_Timer^0,w,c
  8730  0044' EC00' F000'        	call	_Espera
  8731                           
  8732                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  8733  0048' 0E03               	movlw	3
  8734  004A' EC00' F000'        	call	_EscriuPrimeraOrdre
  8735                           
  8736                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8737  004E' 0E00               	movlw	0
  8738  0050' 6E00'              	movwf	(Espera@ms+1)^0,c
  8739  0052' 0E01               	movlw	1
  8740  0054' 6E00'              	movwf	Espera@ms^0,c
  8741  0056' 5000'              	movf	_Timer^0,w,c
  8742  0058' EC00' F000'        	call	_Espera
  8743                           
  8744                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  8745  005C' 0E03               	movlw	3
  8746  005E' EC00' F000'        	call	_EscriuPrimeraOrdre
  8747                           
  8748                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  8749  0062' 0E00               	movlw	0
  8750  0064' 6E00'              	movwf	(Espera@ms+1)^0,c
  8751  0066' 0E01               	movlw	1
  8752  0068' 6E00'              	movwf	Espera@ms^0,c
  8753  006A' 5000'              	movf	_Timer^0,w,c
  8754  006C' EC00' F000'        	call	_Espera
  8755                           
  8756                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  8757  0070' 0E02               	movlw	2
  8758  0072' EC00' F000'        	call	_EscriuPrimeraOrdre
  8759                           
  8760                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  8761  0076' 0E00               	movlw	0
  8762  0078' 6E00'              	movwf	(Espera@ms+1)^0,c
  8763  007A' 0E04               	movlw	4
  8764  007C' 6E00'              	movwf	Espera@ms^0,c
  8765  007E' 5000'              	movf	_Timer^0,w,c
  8766  0080' EC00' F000'        	call	_Espera
  8767                           
  8768                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  8769  0084' 0E28               	movlw	40
  8770  0086' EC00' F000'        	call	_CantaIR
  8771                           
  8772                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  8773  008A' EC00' F000'        	call	_WaitForBusy	;wreg free
  8774  008E' 0E08               	movlw	8
  8775  0090' EC00' F000'        	call	_CantaIR
  8776                           
  8777                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  8778  0094' EC00' F000'        	call	_WaitForBusy	;wreg free
  8779  0098' 0E01               	movlw	1
  8780  009A' EC00' F000'        	call	_CantaIR
  8781                           
  8782                           ;LcTLCD.c: 71:   Espera(Timer,3);
  8783  009E' 0E00               	movlw	0
  8784  00A0' 6E00'              	movwf	(Espera@ms+1)^0,c
  8785  00A2' 0E03               	movlw	3
  8786  00A4' 6E00'              	movwf	Espera@ms^0,c
  8787  00A6' 5000'              	movf	_Timer^0,w,c
  8788  00A8' EC00' F000'        	call	_Espera
  8789                           
  8790                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  8791  00AC' EC00' F000'        	call	_WaitForBusy	;wreg free
  8792  00B0' 0E06               	movlw	6
  8793  00B2' EC00' F000'        	call	_CantaIR
  8794                           
  8795                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  8796  00B6' EC00' F000'        	call	_WaitForBusy	;wreg free
  8797  00BA' 0E0F               	movlw	15
  8798  00BC' EC00' F000'        	call	_CantaIR
  8799                           
  8800                           ;LcTLCD.c: 74:  }
  8801  00C0' 4A00'              	infsnz	LcInit@i^0,f,c
  8802  00C2' 2A00'              	incf	(LcInit@i+1)^0,f,c
  8803  00C4' BE00'              	btfsc	(LcInit@i+1)^0,7,c
  8804  00C6' D7AF               	goto	l4607
  8805  00C8' 5000'              	movf	(LcInit@i+1)^0,w,c
  8806  00CA' E104               	bnz	u3760
  8807  00CC' 0E02               	movlw	2
  8808  00CE' 5C00'              	subwf	LcInit@i^0,w,c
  8809  00D0' A0D8               	btfss	status,0,c
  8810  00D2' D7A9               	goto	l4607
  8811  00D4'                    u3760:
  8812                           
  8813                           ;LcTLCD.c: 80:     WaitForBusy();
  8814  00D4' EC00' F000'        	call	_WaitForBusy	;wreg free
  8815                           
  8816                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  8817  00D8' 0E0C               	movlw	12
  8818  00DA' EC00' F000'        	call	_CantaIR
  8819  00DE' 0012               	return		;funcret
  8820  00E0'                    __end_of_LcInit:
  8821                           	callstack 0
  8822                           
  8823 ;; *************** function _EscriuPrimeraOrdre *****************
  8824 ;; Defined at:
  8825 ;;		line 230 in file "LcTLCD.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;  ordre           1    wreg     unsigned char 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  ordre           1    6[COMRAM] unsigned char 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		wreg, status,2, status,0
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1
  8839 ;;      Params:         0       0       0
  8840 ;;      Locals:         1       0       0
  8841 ;;      Temps:          1       0       0
  8842 ;;      Totals:         2       0       0
  8843 ;;Total ram usage:        2 bytes
  8844 ;; Hardware stack levels used: 1
  8845 ;; Hardware stack levels required when called: 2
  8846 ;; This function calls:
  8847 ;;		Nothing
  8848 ;; This function is called by:
  8849 ;;		_LcInit
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           	psect	text71
  8854  0000'                    __ptext71:
  8855                           	callstack 0
  8856  0000'                    _EscriuPrimeraOrdre:
  8857                           	callstack 27
  8858                           
  8859                           ;incstack = 0
  8860                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8861  0000' 6E00'              	movwf	EscriuPrimeraOrdre@ordre^0,c
  8862                           
  8863                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8864  0002' 9694               	bcf	148,3,c	;volatile
  8865  0004' 9494               	bcf	148,2,c	;volatile
  8866  0006' 9294               	bcf	148,1,c	;volatile
  8867  0008' 9094               	bcf	148,0,c	;volatile
  8868  000A' 9A8B               	bcf	139,5,c	;volatile
  8869  000C' 9E8C               	bcf	140,7,c	;volatile
  8870                           
  8871                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8872  000E' 888B               	bsf	139,4,c	;volatile
  8873  0010' 888B               	bsf	139,4,c	;volatile
  8874                           
  8875                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8876  0012' A600'              	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8877  0014' D003               	goto	u230
  8878  0016' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  8879  0018' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  8880  001A' D001               	goto	u248
  8881  001C'                    u230:
  8882  001C' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  8883  001E'                    u248:
  8884  001E' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8885  0020' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8886  0022' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8887  0024' 508B               	movf	139,w,c	;volatile
  8888  0026' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8889  0028' 0BF7               	andlw	-9
  8890  002A' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8891  002C' 6E8B               	movwf	139,c	;volatile
  8892                           
  8893                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8894  002E' A400'              	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8895  0030' D003               	goto	u250
  8896  0032' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  8897  0034' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  8898  0036' D001               	goto	u268
  8899  0038'                    u250:
  8900  0038' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  8901  003A'                    u268:
  8902  003A' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8903  003C' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8904  003E' 508B               	movf	139,w,c	;volatile
  8905  0040' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8906  0042' 0BFB               	andlw	-5
  8907  0044' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8908  0046' 6E8B               	movwf	139,c	;volatile
  8909                           
  8910                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8911  0048' A200'              	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8912  004A' D003               	goto	u270
  8913  004C' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  8914  004E' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  8915  0050' D001               	goto	u288
  8916  0052'                    u270:
  8917  0052' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  8918  0054'                    u288:
  8919  0054' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8920  0056' 508B               	movf	139,w,c	;volatile
  8921  0058' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8922  005A' 0BFD               	andlw	-3
  8923  005C' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8924  005E' 6E8B               	movwf	139,c	;volatile
  8925                           
  8926                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8927  0060' A000'              	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8928  0062' D003               	goto	u290
  8929  0064' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  8930  0066' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
  8931  0068' D001               	goto	u308
  8932  006A'                    u290:
  8933  006A' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
  8934  006C'                    u308:
  8935  006C' 508B               	movf	139,w,c	;volatile
  8936  006E' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8937  0070' 0BFE               	andlw	-2
  8938  0072' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8939  0074' 6E8B               	movwf	139,c	;volatile
  8940                           
  8941                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  8942  0076' 988B               	bcf	139,4,c	;volatile
  8943  0078' 0012               	return		;funcret
  8944  007A'                    __end_of_EscriuPrimeraOrdre:
  8945                           	callstack 0
  8946                           
  8947 ;; *************** function _JoystickMotor *****************
  8948 ;; Defined at:
  8949 ;;		line 18 in file "Joystick.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;		None
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;		None
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  1    wreg      void 
  8956 ;; Registers used:
  8957 ;;		wreg, status,2, status,0, cstack
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/1
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMRAM   BANK0   BANK1
  8963 ;;      Params:         0       0       0
  8964 ;;      Locals:         0       0       0
  8965 ;;      Temps:          2       0       0
  8966 ;;      Totals:         2       0       0
  8967 ;;Total ram usage:        2 bytes
  8968 ;; Hardware stack levels used: 1
  8969 ;; Hardware stack levels required when called: 3
  8970 ;; This function calls:
  8971 ;;		_MNouJoystick
  8972 ;; This function is called by:
  8973 ;;		_main
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           	psect	text72
  8978  0000'                    __ptext72:
  8979                           	callstack 0
  8980  0000'                    _JoystickMotor:
  8981                           	callstack 27
  8982                           
  8983                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  8984                           
  8985                           ;incstack = 0
  8986  0000' D05A               	goto	l3107
  8987  0002'                    l1032:
  8988                           
  8989                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8990  0002' B2C2               	btfsc	194,1,c	;volatile
  8991  0004' D00B               	goto	l1033
  8992  0006' 0EC8               	movlw	200
  8993  0008' 60C4               	cpfslt	196,c	;volatile
  8994  000A' D008               	goto	l1033
  8995  000C' 0E32               	movlw	50
  8996  000E' 64C4               	cpfsgt	196,c	;volatile
  8997  0010' D005               	goto	l1033
  8998                           
  8999                           ;Joystick.c: 23:     ADCON0 = 0x07;
  9000  0012' 0E07               	movlw	7
  9001  0014' 6EC2               	movwf	194,c	;volatile
  9002                           
  9003                           ;Joystick.c: 24:                 cap1 = 1;
  9004  0016' 8000'              	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  9005  0018'                    l3037:
  9006                           
  9007                           ;Joystick.c: 25:     state++;
  9008  0018' 2A00'              	incf	JoystickMotor@state^0,f,c
  9009                           
  9010                           ;Joystick.c: 26:    }
  9011  001A' D05B               	goto	l1040
  9012  001C'                    l1033:
  9013  001C' B2C2               	btfsc	194,1,c	;volatile
  9014  001E' D010               	goto	l1035
  9015  0020' 0EC7               	movlw	199
  9016  0022' 64C4               	cpfsgt	196,c	;volatile
  9017  0024' D00D               	goto	l1035
  9018                           
  9019                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  9020  0026' 0E02               	movlw	2
  9021  0028' 1800'              	xorwf	_ultimaTeclaAD^0,w,c
  9022  002A' B4D8               	btfsc	status,2,c
  9023  002C' D003               	goto	l3045
  9024  002E' 0E02               	movlw	2
  9025  0030' EC00' F000'        	call	_MNouJoystick
  9026  0034'                    l3045:
  9027                           
  9028                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  9029  0034' 0E02               	movlw	2
  9030  0036' 6E00'              	movwf	_ultimaTeclaAD^0,c
  9031                           
  9032                           ;Joystick.c: 30:     ADCON0 = 0x07;
  9033  0038' 0E07               	movlw	7
  9034  003A' 6EC2               	movwf	194,c	;volatile
  9035                           
  9036                           ;Joystick.c: 31:                 cap1 = 0;
  9037  003C' 9000'              	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  9038  003E' D7EC               	goto	l3037
  9039  0040'                    l1035:
  9040  0040' B2C2               	btfsc	194,1,c	;volatile
  9041  0042' D047               	goto	l1040
  9042  0044' 0E33               	movlw	51
  9043  0046' 60C4               	cpfslt	196,c	;volatile
  9044  0048' D044               	goto	l1040
  9045                           
  9046                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  9047  004A' 0E08               	movlw	8
  9048  004C' 1800'              	xorwf	_ultimaTeclaAD^0,w,c
  9049  004E' B4D8               	btfsc	status,2,c
  9050  0050' D003               	goto	l3059
  9051  0052' 0E08               	movlw	8
  9052  0054' EC00' F000'        	call	_MNouJoystick
  9053  0058'                    l3059:
  9054                           
  9055                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  9056  0058' 0E08               	movlw	8
  9057  005A' D7ED               	goto	L8
  9058  005C'                    l1041:
  9059                           
  9060                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9061  005C' B2C2               	btfsc	194,1,c	;volatile
  9062  005E' D00B               	goto	l1042
  9063  0060' 0EC8               	movlw	200
  9064  0062' 60C4               	cpfslt	196,c	;volatile
  9065  0064' D008               	goto	l1042
  9066  0066' 0E32               	movlw	50
  9067  0068' 64C4               	cpfsgt	196,c	;volatile
  9068  006A' D005               	goto	l1042
  9069                           
  9070                           ;Joystick.c: 44:     ADCON0 = 0x03;
  9071  006C' 0E03               	movlw	3
  9072  006E' 6EC2               	movwf	194,c	;volatile
  9073                           
  9074                           ;Joystick.c: 45:                 cap2 = 1;
  9075  0070' 8000'              	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  9076  0072'                    l3075:
  9077                           
  9078                           ;Joystick.c: 46:     state--;
  9079  0072' 0600'              	decf	JoystickMotor@state^0,f,c
  9080                           
  9081                           ;Joystick.c: 47:    }
  9082  0074' D02E               	goto	l1040
  9083  0076'                    l1042:
  9084  0076' B2C2               	btfsc	194,1,c	;volatile
  9085  0078' D010               	goto	l1044
  9086  007A' 0EC7               	movlw	199
  9087  007C' 64C4               	cpfsgt	196,c	;volatile
  9088  007E' D00D               	goto	l1044
  9089                           
  9090                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  9091  0080' 0E06               	movlw	6
  9092  0082' 1800'              	xorwf	_ultimaTeclaAD^0,w,c
  9093  0084' B4D8               	btfsc	status,2,c
  9094  0086' D003               	goto	l3083
  9095  0088' 0E06               	movlw	6
  9096  008A' EC00' F000'        	call	_MNouJoystick
  9097  008E'                    l3083:
  9098                           
  9099                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  9100  008E' 0E06               	movlw	6
  9101  0090' 6E00'              	movwf	_ultimaTeclaAD^0,c
  9102                           
  9103                           ;Joystick.c: 51:     ADCON0 = 0x03;
  9104  0092' 0E03               	movlw	3
  9105  0094' 6EC2               	movwf	194,c	;volatile
  9106                           
  9107                           ;Joystick.c: 52:                 cap2 = 0;
  9108  0096' 9000'              	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  9109  0098' D7EC               	goto	l3075
  9110  009A'                    l1044:
  9111  009A' B2C2               	btfsc	194,1,c	;volatile
  9112  009C' D01A               	goto	l1040
  9113  009E' 0E33               	movlw	51
  9114  00A0' 60C4               	cpfslt	196,c	;volatile
  9115  00A2' D017               	goto	l1040
  9116                           
  9117                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  9118  00A4' 0E04               	movlw	4
  9119  00A6' 1800'              	xorwf	_ultimaTeclaAD^0,w,c
  9120  00A8' B4D8               	btfsc	status,2,c
  9121  00AA' D003               	goto	l3097
  9122  00AC' 0E04               	movlw	4
  9123  00AE' EC00' F000'        	call	_MNouJoystick
  9124  00B2'                    l3097:
  9125                           
  9126                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  9127  00B2' 0E04               	movlw	4
  9128  00B4' D7ED               	goto	L9
  9129  00B6'                    l3107:
  9130  00B6' 5000'              	movf	JoystickMotor@state^0,w,c
  9131  00B8' 6E00'              	movwf	??_JoystickMotor^0,c
  9132  00BA' 6A00'              	clrf	(??_JoystickMotor+1)^0,c
  9133                           
  9134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9135                           ; Switch size 1, requested type "simple"
  9136                           ; Number of cases is 1, Range of values is 0 to 0
  9137                           ; switch strategies available:
  9138                           ; Name         Instructions Cycles
  9139                           ; simple_byte            4     3 (average)
  9140                           ;	Chosen strategy is simple_byte
  9141  00BC' 5000'              	movf	(??_JoystickMotor+1)^0,w,c
  9142  00BE' 0A00               	xorlw	0	; case 0
  9143  00C0' A4D8               	btfss	status,2,c
  9144  00C2' D007               	goto	l1040
  9145                           
  9146                           ; Switch size 1, requested type "simple"
  9147                           ; Number of cases is 2, Range of values is 0 to 1
  9148                           ; switch strategies available:
  9149                           ; Name         Instructions Cycles
  9150                           ; simple_byte            7     4 (average)
  9151                           ;	Chosen strategy is simple_byte
  9152  00C4' 5000'              	movf	??_JoystickMotor^0,w,c
  9153  00C6' 0A00               	xorlw	0	; case 0
  9154  00C8' B4D8               	btfsc	status,2,c
  9155  00CA' D79B               	goto	l1032
  9156  00CC' 0A01               	xorlw	1	; case 1
  9157  00CE' B4D8               	btfsc	status,2,c
  9158  00D0' D7C5               	goto	l1041
  9159  00D2'                    l1040:
  9160                           
  9161                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  9162  00D2' A000'              	btfss	(_cap1/(0+8))^0,_cap1& (0+7),c
  9163  00D4' 0012               	return	
  9164  00D6' A000'              	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  9165  00D8' 0012               	return	
  9166  00DA' 5000'              	movf	_ultimaTeclaAD^0,w,c
  9167  00DC' B4D8               	btfsc	status,2,c
  9168  00DE' 0012               	return	
  9169                           
  9170                           ;Joystick.c: 66:         MNouJoystick(-1);
  9171  00E0' 0EFF               	movlw	255
  9172  00E2' EC00' F000'        	call	_MNouJoystick
  9173                           
  9174                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  9175  00E6' 6800'              	setf	_ultimaTeclaAD^0,c
  9176  00E8' 0012               	return		;funcret
  9177  00EA'                    __end_of_JoystickMotor:
  9178                           	callstack 0
  9179                           
  9180 ;; *************** function _MNouJoystick *****************
  9181 ;; Defined at:
  9182 ;;		line 36 in file "Menu.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  posicio         1    wreg     char 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  posicio         1    5[COMRAM] char 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/1
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1
  9196 ;;      Params:         0       0       0
  9197 ;;      Locals:         1       0       0
  9198 ;;      Temps:          0       0       0
  9199 ;;      Totals:         1       0       0
  9200 ;;Total ram usage:        1 bytes
  9201 ;; Hardware stack levels used: 1
  9202 ;; Hardware stack levels required when called: 2
  9203 ;; This function calls:
  9204 ;;		Nothing
  9205 ;; This function is called by:
  9206 ;;		_JoystickMotor
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text73
  9211  0000'                    __ptext73:
  9212                           	callstack 0
  9213  0000'                    _MNouJoystick:
  9214                           	callstack 27
  9215                           
  9216                           ;incstack = 0
  9217                           ;MNouJoystick@posicio stored from wreg
  9218  0000' 6E00'              	movwf	MNouJoystick@posicio^0,c
  9219                           
  9220                           ;Menu.c: 37:     novaDireccio = posicio;
  9221  0002' C005' F00B'        	movff	MNouJoystick@posicio,_novaDireccio
  9222  0006' 0012               	return		;funcret
  9223  0008'                    __end_of_MNouJoystick:
  9224                           	callstack 0
  9225                           
  9226 ;; *************** function _JoystickInit *****************
  9227 ;; Defined at:
  9228 ;;		line 12 in file "Joystick.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;		None
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;		None
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      void 
  9235 ;; Registers used:
  9236 ;;		wreg, status,2
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK0   BANK1
  9242 ;;      Params:         0       0       0
  9243 ;;      Locals:         0       0       0
  9244 ;;      Temps:          0       0       0
  9245 ;;      Totals:         0       0       0
  9246 ;;Total ram usage:        0 bytes
  9247 ;; Hardware stack levels used: 1
  9248 ;; Hardware stack levels required when called: 2
  9249 ;; This function calls:
  9250 ;;		Nothing
  9251 ;; This function is called by:
  9252 ;;		_main
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text74
  9257  0000'                    __ptext74:
  9258                           	callstack 0
  9259  0000'                    _JoystickInit:
  9260                           	callstack 28
  9261                           
  9262                           ;Joystick.c: 13:     ADCON0 = 0x01;
  9263                           
  9264                           ;incstack = 0
  9265  0000' 0E01               	movlw	1
  9266  0002' 6EC2               	movwf	194,c	;volatile
  9267                           
  9268                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  9269  0004' 0E0D               	movlw	13
  9270  0006' 6EC1               	movwf	193,c	;volatile
  9271                           
  9272                           ;Joystick.c: 15:     ADCON2 = 0x09;
  9273  0008' 0E09               	movlw	9
  9274  000A' 6EC0               	movwf	192,c	;volatile
  9275                           
  9276                           ;Joystick.c: 16:     ADRESH = 127;
  9277  000C' 0E7F               	movlw	127
  9278  000E' 6EC4               	movwf	196,c	;volatile
  9279  0010' 0012               	return		;funcret
  9280  0012'                    __end_of_JoystickInit:
  9281                           	callstack 0
  9282                           
  9283 ;; *************** function _GLCDMotor *****************
  9284 ;; Defined at:
  9285 ;;		line 36 in file "GestioLCD.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;		None
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;		None
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  1    wreg      void 
  9292 ;; Registers used:
  9293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/1
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMRAM   BANK0   BANK1
  9299 ;;      Params:         0       0       0
  9300 ;;      Locals:         0       0       0
  9301 ;;      Temps:          2       0       0
  9302 ;;      Totals:         2       0       0
  9303 ;;Total ram usage:        2 bytes
  9304 ;; Hardware stack levels used: 1
  9305 ;; Hardware stack levels required when called: 6
  9306 ;; This function calls:
  9307 ;;		_LcClear
  9308 ;;		_LcGotoXY
  9309 ;;		_LcLliure
  9310 ;;		_LcNewString
  9311 ;;		_LcPutChar
  9312 ;;		_TiGetTics
  9313 ;;		_TiResetTics
  9314 ;; This function is called by:
  9315 ;;		_main
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text75
  9320  0000'                    __ptext75:
  9321                           	callstack 0
  9322  0000'                    _GLCDMotor:
  9323                           	callstack 24
  9324                           
  9325                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  9326                           
  9327                           ;incstack = 0
  9328  0000' D1B7               	goto	l6011
  9329  0002'                    l5825:
  9330                           
  9331                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  9332  0002' 0E11               	movlw	17
  9333  0004' 6000'              	cpfslt	GLCDMotor@length1^0,c
  9334  0006' D017               	goto	l5835
  9335  0008' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9336  000A' D015               	goto	l5835
  9337                           
  9338                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  9339  000C' 0E00               	movlw	0
  9340  000E' 6E00'              	movwf	LcGotoXY@Row^0,c
  9341  0010' 0E00               	movlw	0
  9342  0012' EC00' F000'        	call	_LcGotoXY
  9343                           
  9344                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  9345  0016' 5000'              	movf	_menuDaltGLCD^0,w,c
  9346  0018' 0D1D               	mullw	29
  9347  001A' 50F3               	movf	243,w,c
  9348  001C' 0F00'              	addlw	low _menuList
  9349  001E' 6E00'              	movwf	??_GLCDMotor^0,c
  9350  0020' C014' F009'        	movff	??_GLCDMotor,LcNewString@new_s
  9351  0024' 5000'              	movf	LcNewString@new_s^0,w,c
  9352  0026' A4D8               	btfss	status,2,c
  9353  0028' 0E00'              	movlw	high __smallconst
  9354  002A' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  9355  002C' EC00' F000'        	call	_LcNewString	;wreg free
  9356                           
  9357                           ;GestioLCD.c: 53:     state = 5;
  9358  0030' 0E05               	movlw	5
  9359  0032' 6E00'              	movwf	GLCDMotor@state^0,c
  9360                           
  9361                           ;GestioLCD.c: 54:    }
  9362  0034' 0012               	return	
  9363  0036'                    l5835:
  9364  0036' 0E10               	movlw	16
  9365  0038' 6400'              	cpfsgt	GLCDMotor@length1^0,c
  9366  003A' 0012               	return	
  9367  003C' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9368  003E' 0012               	return	
  9369  0040'                    u5820:
  9370                           
  9371                           ;GestioLCD.c: 56:     state++;
  9372  0040' 2A00'              	incf	GLCDMotor@state^0,f,c
  9373  0042' 0012               	return	
  9374  0044'                    l5841:
  9375                           
  9376                           ;GestioLCD.c: 60:    if (j>=16) {
  9377  0044' 0E0F               	movlw	15
  9378  0046' 6400'              	cpfsgt	GLCDMotor@j^0,c
  9379  0048' D02B               	goto	l5855
  9380                           
  9381                           ;GestioLCD.c: 61:     min1++;
  9382  004A' 2A00'              	incf	GLCDMotor@min1^0,f,c
  9383                           
  9384                           ;GestioLCD.c: 62:     max1++;
  9385  004C' 2A00'              	incf	GLCDMotor@max1^0,f,c
  9386                           
  9387                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  9388  004E' 5000'              	movf	_menuDaltGLCD^0,w,c
  9389  0050' 0D1D               	mullw	29
  9390  0052' 50F3               	movf	243,w,c
  9391  0054' 0F00'              	addlw	low _menuList
  9392  0056' 2400'              	addwf	GLCDMotor@max1^0,w,c
  9393  0058' 6E00'              	movwf	??_GLCDMotor^0,c
  9394  005A' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9395  005E'                    	if	1	;There is more than 1 active tblptr byte
  9396  005E' 0E00'              	movlw	high __smallconst
  9397  0060' 6EF7               	movwf	tblptrh,c
  9398  0062'                    	endif
  9399  0062'                    	if	0	;tblptru may be non-zero
  9400  0062'                    	endif
  9401  0062'                    	if	0	;tblptru may be non-zero
  9402  0062'                    	endif
  9403  0062' 0008               	tblrd		*
  9404  0064' 50F5               	movf	tablat,w,c
  9405  0066' 0900               	iorlw	0
  9406  0068' A4D8               	btfss	status,2,c
  9407  006A' D002               	goto	l5849
  9408  006C' 0E00               	movlw	0
  9409  006E' 6E00'              	movwf	GLCDMotor@max1^0,c
  9410  0070'                    l5849:
  9411                           
  9412                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  9413  0070' 5000'              	movf	_menuDaltGLCD^0,w,c
  9414  0072' 0D1D               	mullw	29
  9415  0074' 50F3               	movf	243,w,c
  9416  0076' 0F00'              	addlw	low _menuList
  9417  0078' 2400'              	addwf	GLCDMotor@min1^0,w,c
  9418  007A' 6E00'              	movwf	??_GLCDMotor^0,c
  9419  007C' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9420  0080'                    	if	1	;There is more than 1 active tblptr byte
  9421  0080' 0E00'              	movlw	high __smallconst
  9422  0082' 6EF7               	movwf	tblptrh,c
  9423  0084'                    	endif
  9424  0084'                    	if	0	;tblptru may be non-zero
  9425  0084'                    	endif
  9426  0084'                    	if	0	;tblptru may be non-zero
  9427  0084'                    	endif
  9428  0084' 0008               	tblrd		*
  9429  0086' 50F5               	movf	tablat,w,c
  9430  0088' 0900               	iorlw	0
  9431  008A' A4D8               	btfss	status,2,c
  9432  008C' D002               	goto	l963
  9433  008E' 0E00               	movlw	0
  9434  0090' 6E00'              	movwf	GLCDMotor@min1^0,c
  9435  0092'                    l963:
  9436                           
  9437                           ;GestioLCD.c: 65:     j=0;
  9438  0092' 0E00               	movlw	0
  9439  0094' 6E00'              	movwf	GLCDMotor@j^0,c
  9440                           
  9441                           ;GestioLCD.c: 66:     k1=min1;
  9442  0096' C01F' F01D'        	movff	GLCDMotor@min1,GLCDMotor@k1
  9443                           
  9444                           ;GestioLCD.c: 67:     state = 6;
  9445  009A' 0E06               	movlw	6
  9446  009C' 6E00'              	movwf	GLCDMotor@state^0,c
  9447                           
  9448                           ;GestioLCD.c: 68:    }
  9449  009E' 0012               	return	
  9450  00A0'                    l5855:
  9451  00A0' 0E10               	movlw	16
  9452  00A2' 6000'              	cpfslt	GLCDMotor@j^0,c
  9453  00A4' 0012               	return	
  9454                           
  9455                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  9456  00A6' 0E00               	movlw	0
  9457  00A8' 6E00'              	movwf	LcGotoXY@Row^0,c
  9458  00AA' 5000'              	movf	GLCDMotor@j^0,w,c
  9459  00AC' EC00' F000'        	call	_LcGotoXY
  9460                           
  9461                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  9462  00B0' 5000'              	movf	_menuDaltGLCD^0,w,c
  9463  00B2' 0D1D               	mullw	29
  9464  00B4' 50F3               	movf	243,w,c
  9465  00B6' 0F00'              	addlw	low _menuList
  9466  00B8' 2400'              	addwf	GLCDMotor@k1^0,w,c
  9467  00BA' 6E00'              	movwf	??_GLCDMotor^0,c
  9468  00BC' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9469  00C0'                    	if	1	;There is more than 1 active tblptr byte
  9470  00C0' 0E00'              	movlw	high __smallconst
  9471  00C2' 6EF7               	movwf	tblptrh,c
  9472  00C4'                    	endif
  9473  00C4'                    	if	0	;tblptru may be non-zero
  9474  00C4'                    	endif
  9475  00C4'                    	if	0	;tblptru may be non-zero
  9476  00C4'                    	endif
  9477  00C4' 0008               	tblrd		*
  9478  00C6' 50F5               	movf	tablat,w,c
  9479  00C8' EC00' F000'        	call	_LcPutChar
  9480                           
  9481                           ;GestioLCD.c: 72:     j++;
  9482  00CC' 2A00'              	incf	GLCDMotor@j^0,f,c
  9483                           
  9484                           ;GestioLCD.c: 73:     k1++;
  9485  00CE' 2A00'              	incf	GLCDMotor@k1^0,f,c
  9486                           
  9487                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  9488  00D0' 5000'              	movf	_menuDaltGLCD^0,w,c
  9489  00D2' 0D1D               	mullw	29
  9490  00D4' 50F3               	movf	243,w,c
  9491  00D6' 0F00'              	addlw	low _menuList
  9492  00D8' 2400'              	addwf	GLCDMotor@k1^0,w,c
  9493  00DA' 6E00'              	movwf	??_GLCDMotor^0,c
  9494  00DC' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9495  00E0'                    	if	1	;There is more than 1 active tblptr byte
  9496  00E0' 0E00'              	movlw	high __smallconst
  9497  00E2' 6EF7               	movwf	tblptrh,c
  9498  00E4'                    	endif
  9499  00E4'                    	if	0	;tblptru may be non-zero
  9500  00E4'                    	endif
  9501  00E4'                    	if	0	;tblptru may be non-zero
  9502  00E4'                    	endif
  9503  00E4' 0008               	tblrd		*
  9504  00E6' 50F5               	movf	tablat,w,c
  9505  00E8' 0900               	iorlw	0
  9506  00EA' A4D8               	btfss	status,2,c
  9507  00EC' 0012               	return	
  9508  00EE' 0E00               	movlw	0
  9509  00F0' 6E00'              	movwf	GLCDMotor@k1^0,c
  9510  00F2' 0012               	return	
  9511  00F4'                    l5869:
  9512                           
  9513                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  9514  00F4' 0E04               	movlw	4
  9515  00F6' 6000'              	cpfslt	_menuDaltGLCD^0,c
  9516  00F8' D012               	goto	u5920
  9517  00FA' D7A2               	goto	u5820
  9518  00FC'                    u5890:
  9519                           
  9520                           ;GestioLCD.c: 82:     state = 0;
  9521  00FC' 0E00               	movlw	0
  9522  00FE' 6E00'              	movwf	GLCDMotor@state^0,c
  9523  0100' 0012               	return	
  9524  0102'                    l5877:
  9525                           
  9526                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  9527  0102' EC00' F000'        	call	_LcLliure	;wreg free
  9528  0106' A0D8               	btfss	status,0,c
  9529  0108' D006               	goto	l5883
  9530  010A' 0E04               	movlw	4
  9531  010C' 6000'              	cpfslt	_menuDaltGLCD^0,c
  9532  010E' D003               	goto	l5883
  9533                           
  9534                           ;GestioLCD.c: 87:     state = 7;
  9535  0110' 0E07               	movlw	7
  9536  0112' 6E00'              	movwf	GLCDMotor@state^0,c
  9537                           
  9538                           ;GestioLCD.c: 88:    }
  9539  0114' 0012               	return	
  9540  0116'                    l5883:
  9541  0116' EC00' F000'        	call	_LcLliure	;wreg free
  9542  011A' A0D8               	btfss	status,0,c
  9543  011C' 0012               	return	
  9544  011E'                    u5920:
  9545  011E' 0E03               	movlw	3
  9546  0120' 6400'              	cpfsgt	_menuDaltGLCD^0,c
  9547  0122' 0012               	return	
  9548  0124' D7EB               	goto	u5890
  9549  0126'                    l975:
  9550                           
  9551                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  9552  0126' A000'              	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9553  0128' 0012               	return	
  9554  012A' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9555  012C' 0012               	return	
  9556                           
  9557                           ;GestioLCD.c: 95:     length1 = 0;
  9558  012E' 0E00               	movlw	0
  9559  0130' 6E00'              	movwf	GLCDMotor@length1^0,c
  9560                           
  9561                           ;GestioLCD.c: 96:     length2 = 0;
  9562  0132' 0E00               	movlw	0
  9563  0134' 6E00'              	movwf	GLCDMotor@length2^0,c
  9564                           
  9565                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  9566  0136' 0E00               	movlw	0
  9567  0138' 6E00'              	movwf	LcGotoXY@Row^0,c
  9568  013A' 0E00               	movlw	0
  9569  013C' EC00' F000'        	call	_LcGotoXY
  9570                           
  9571                           ;GestioLCD.c: 98:     min1 = 0;
  9572  0140' 0E00               	movlw	0
  9573  0142' 6E00'              	movwf	GLCDMotor@min1^0,c
  9574                           
  9575                           ;GestioLCD.c: 99:     max1 = 15;
  9576  0144' 0E0F               	movlw	15
  9577  0146' 6E00'              	movwf	GLCDMotor@max1^0,c
  9578                           
  9579                           ;GestioLCD.c: 100:     min2 = 0;
  9580  0148' 0E00               	movlw	0
  9581  014A' 6E00'              	movwf	GLCDMotor@min2^0,c
  9582                           
  9583                           ;GestioLCD.c: 101:     max2 = 15;
  9584  014C' 0E0F               	movlw	15
  9585  014E' 6E00'              	movwf	GLCDMotor@max2^0,c
  9586                           
  9587                           ;GestioLCD.c: 102:     j = 0;
  9588  0150' 0E00               	movlw	0
  9589  0152' 6E00'              	movwf	GLCDMotor@j^0,c
  9590                           
  9591                           ;GestioLCD.c: 103:     k1 = 0;
  9592  0154' 0E00               	movlw	0
  9593  0156' 6E00'              	movwf	GLCDMotor@k1^0,c
  9594                           
  9595                           ;GestioLCD.c: 104:     k2 = 0;
  9596  0158' 0E00               	movlw	0
  9597  015A' 6E00'              	movwf	GLCDMotor@k2^0,c
  9598                           
  9599                           ;GestioLCD.c: 105:     newString = 0;
  9600  015C' 9000'              	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  9601  015E' D770               	goto	u5820
  9602  0160'                    l5913:
  9603                           
  9604                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  9605  0160' 5000'              	movf	_menuDaltGLCD^0,w,c
  9606  0162' 0D1D               	mullw	29
  9607  0164' 50F3               	movf	243,w,c
  9608  0166' 0F00'              	addlw	low _menuList
  9609  0168' 2400'              	addwf	GLCDMotor@length1^0,w,c
  9610  016A' 6E00'              	movwf	??_GLCDMotor^0,c
  9611  016C' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9612  0170'                    	if	1	;There is more than 1 active tblptr byte
  9613  0170' 0E00'              	movlw	high __smallconst
  9614  0172' 6EF7               	movwf	tblptrh,c
  9615  0174'                    	endif
  9616  0174'                    	if	0	;tblptru may be non-zero
  9617  0174'                    	endif
  9618  0174'                    	if	0	;tblptru may be non-zero
  9619  0174'                    	endif
  9620  0174' 0008               	tblrd		*
  9621  0176' 50F5               	movf	tablat,w,c
  9622  0178' 0900               	iorlw	0
  9623  017A' A4D8               	btfss	status,2,c
  9624  017C' D004               	goto	l5919
  9625  017E' 0E03               	movlw	3
  9626  0180' 6400'              	cpfsgt	_menuDaltGLCD^0,c
  9627  0182' D001               	goto	l5919
  9628  0184' D75D               	goto	u5820
  9629  0186'                    l5919:
  9630  0186' 5000'              	movf	_menuDaltGLCD^0,w,c
  9631  0188' 0D1D               	mullw	29
  9632  018A' 50F3               	movf	243,w,c
  9633  018C' 0F00'              	addlw	low _menuList
  9634  018E' 2400'              	addwf	GLCDMotor@length1^0,w,c
  9635  0190' 6E00'              	movwf	??_GLCDMotor^0,c
  9636  0192' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9637  0196'                    	if	1	;There is more than 1 active tblptr byte
  9638  0196' 0E00'              	movlw	high __smallconst
  9639  0198' 6EF7               	movwf	tblptrh,c
  9640  019A'                    	endif
  9641  019A'                    	if	0	;tblptru may be non-zero
  9642  019A'                    	endif
  9643  019A'                    	if	0	;tblptru may be non-zero
  9644  019A'                    	endif
  9645  019A' 0008               	tblrd		*
  9646  019C' 50F5               	movf	tablat,w,c
  9647  019E' 0900               	iorlw	0
  9648  01A0' B4D8               	btfsc	status,2,c
  9649  01A2' D002               	goto	l5923
  9650                           
  9651                           ;GestioLCD.c: 114:     length1++;
  9652  01A4' 2A00'              	incf	GLCDMotor@length1^0,f,c
  9653                           
  9654                           ;GestioLCD.c: 115:    }
  9655  01A6' 0012               	return	
  9656  01A8'                    l5923:
  9657  01A8' 0E04               	movlw	4
  9658  01AA' 6000'              	cpfslt	_menuDaltGLCD^0,c
  9659  01AC' 0012               	return	
  9660  01AE' 5000'              	movf	_menuDaltGLCD^0,w,c
  9661  01B0' 0D1D               	mullw	29
  9662  01B2' 50F3               	movf	243,w,c
  9663  01B4' 0F00'              	addlw	low _menuList
  9664  01B6' 2400'              	addwf	GLCDMotor@length1^0,w,c
  9665  01B8' 6E00'              	movwf	??_GLCDMotor^0,c
  9666  01BA' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9667  01BE'                    	if	1	;There is more than 1 active tblptr byte
  9668  01BE' 0E00'              	movlw	high __smallconst
  9669  01C0' 6EF7               	movwf	tblptrh,c
  9670  01C2'                    	endif
  9671  01C2'                    	if	0	;tblptru may be non-zero
  9672  01C2'                    	endif
  9673  01C2'                    	if	0	;tblptru may be non-zero
  9674  01C2'                    	endif
  9675  01C2' 0008               	tblrd		*
  9676  01C4' 50F5               	movf	tablat,w,c
  9677  01C6' 0900               	iorlw	0
  9678  01C8' A4D8               	btfss	status,2,c
  9679  01CA' 0012               	return	
  9680                           
  9681                           ;GestioLCD.c: 117:     state = 13;
  9682  01CC' 0E0D               	movlw	13
  9683  01CE' 6E00'              	movwf	GLCDMotor@state^0,c
  9684  01D0' 0012               	return	
  9685  01D2'                    l5929:
  9686                           
  9687                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  9688  01D2' 0E11               	movlw	17
  9689  01D4' 6000'              	cpfslt	GLCDMotor@length2^0,c
  9690  01D6' D019               	goto	l5939
  9691  01D8' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9692  01DA' D017               	goto	l5939
  9693                           
  9694                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  9695  01DC' 0E01               	movlw	1
  9696  01DE' 6E00'              	movwf	LcGotoXY@Row^0,c
  9697  01E0' 0E00               	movlw	0
  9698  01E2' EC00' F000'        	call	_LcGotoXY
  9699                           
  9700                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  9701  01E6' 5000'              	movf	_menuDaltGLCD^0,w,c
  9702  01E8' 0D1D               	mullw	29
  9703  01EA' CFF3 F014'         	movff	prodl,??_GLCDMotor
  9704  01EE' 0E1D               	movlw	29
  9705  01F0' 2600'              	addwf	??_GLCDMotor^0,f,c
  9706  01F2' 5000'              	movf	??_GLCDMotor^0,w,c
  9707  01F4' 0F00'              	addlw	low _menuList
  9708  01F6' 6E00'              	movwf	(??_GLCDMotor+1)^0,c
  9709  01F8' C015' F009'        	movff	??_GLCDMotor+1,LcNewString@new_s
  9710  01FC' 5000'              	movf	LcNewString@new_s^0,w,c
  9711  01FE' A4D8               	btfss	status,2,c
  9712  0200' 0E00'              	movlw	high __smallconst
  9713  0202' 6E00'              	movwf	(LcNewString@new_s+1)^0,c
  9714  0204' EC00' F000'        	call	_LcNewString	;wreg free
  9715  0208' D71B               	goto	u5820
  9716  020A'                    l5939:
  9717  020A' 0E10               	movlw	16
  9718  020C' 6400'              	cpfsgt	GLCDMotor@length2^0,c
  9719  020E' 0012               	return	
  9720  0210' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9721  0212' 0012               	return	
  9722                           
  9723                           ;GestioLCD.c: 127:     state = 9;
  9724  0214' 0E09               	movlw	9
  9725  0216' 6E00'              	movwf	GLCDMotor@state^0,c
  9726  0218' 0012               	return	
  9727  021A'                    l5945:
  9728                           
  9729                           ;GestioLCD.c: 131:    if (j<16) {
  9730  021A' 0E10               	movlw	16
  9731  021C' 6000'              	cpfslt	GLCDMotor@j^0,c
  9732  021E' D02B               	goto	l5959
  9733                           
  9734                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  9735  0220' 0E01               	movlw	1
  9736  0222' 6E00'              	movwf	LcGotoXY@Row^0,c
  9737  0224' 5000'              	movf	GLCDMotor@j^0,w,c
  9738  0226' EC00' F000'        	call	_LcGotoXY
  9739                           
  9740                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  9741  022A' 5000'              	movf	_menuDaltGLCD^0,w,c
  9742  022C' 0D1D               	mullw	29
  9743  022E' 50F3               	movf	243,w,c
  9744  0230' 0F00'              	addlw	low _menuList
  9745  0232' 2400'              	addwf	GLCDMotor@k2^0,w,c
  9746  0234' 6E00'              	movwf	??_GLCDMotor^0,c
  9747  0236' 0E1D               	movlw	29
  9748  0238' 2600'              	addwf	??_GLCDMotor^0,f,c
  9749  023A' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9750  023E'                    	if	1	;There is more than 1 active tblptr byte
  9751  023E' 0E00'              	movlw	high __smallconst
  9752  0240' 6EF7               	movwf	tblptrh,c
  9753  0242'                    	endif
  9754  0242'                    	if	0	;tblptru may be non-zero
  9755  0242'                    	endif
  9756  0242'                    	if	0	;tblptru may be non-zero
  9757  0242'                    	endif
  9758  0242' 0008               	tblrd		*
  9759  0244' 50F5               	movf	tablat,w,c
  9760  0246' EC00' F000'        	call	_LcPutChar
  9761                           
  9762                           ;GestioLCD.c: 134:     j++;
  9763  024A' 2A00'              	incf	GLCDMotor@j^0,f,c
  9764                           
  9765                           ;GestioLCD.c: 135:     k2++;
  9766  024C' 2A00'              	incf	GLCDMotor@k2^0,f,c
  9767                           
  9768                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  9769  024E' 5000'              	movf	_menuDaltGLCD^0,w,c
  9770  0250' 0D1D               	mullw	29
  9771  0252' 50F3               	movf	243,w,c
  9772  0254' 0F00'              	addlw	low _menuList
  9773  0256' 2400'              	addwf	GLCDMotor@k2^0,w,c
  9774  0258' 6E00'              	movwf	??_GLCDMotor^0,c
  9775  025A' 0E1D               	movlw	29
  9776  025C' 2600'              	addwf	??_GLCDMotor^0,f,c
  9777  025E' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9778  0262'                    	if	1	;There is more than 1 active tblptr byte
  9779  0262' 0E00'              	movlw	high __smallconst
  9780  0264' 6EF7               	movwf	tblptrh,c
  9781  0266'                    	endif
  9782  0266'                    	if	0	;tblptru may be non-zero
  9783  0266'                    	endif
  9784  0266'                    	if	0	;tblptru may be non-zero
  9785  0266'                    	endif
  9786  0266' 0008               	tblrd		*
  9787  0268' 50F5               	movf	tablat,w,c
  9788  026A' 0900               	iorlw	0
  9789  026C' A4D8               	btfss	status,2,c
  9790  026E' 0012               	return	
  9791  0270' 0E00               	movlw	0
  9792  0272' 6E00'              	movwf	GLCDMotor@k2^0,c
  9793  0274' 0012               	return	
  9794  0276'                    l5959:
  9795  0276' 0E0F               	movlw	15
  9796  0278' 6400'              	cpfsgt	GLCDMotor@j^0,c
  9797  027A' 0012               	return	
  9798                           
  9799                           ;GestioLCD.c: 139:     min2++;
  9800  027C' 2A00'              	incf	GLCDMotor@min2^0,f,c
  9801                           
  9802                           ;GestioLCD.c: 140:     max2++;
  9803  027E' 2A00'              	incf	GLCDMotor@max2^0,f,c
  9804                           
  9805                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  9806  0280' 5000'              	movf	_menuDaltGLCD^0,w,c
  9807  0282' 0D1D               	mullw	29
  9808  0284' 50F3               	movf	243,w,c
  9809  0286' 0F00'              	addlw	low _menuList
  9810  0288' 2400'              	addwf	GLCDMotor@max2^0,w,c
  9811  028A' 6E00'              	movwf	??_GLCDMotor^0,c
  9812  028C' 0E1D               	movlw	29
  9813  028E' 2600'              	addwf	??_GLCDMotor^0,f,c
  9814  0290' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9815  0294'                    	if	1	;There is more than 1 active tblptr byte
  9816  0294' 0E00'              	movlw	high __smallconst
  9817  0296' 6EF7               	movwf	tblptrh,c
  9818  0298'                    	endif
  9819  0298'                    	if	0	;tblptru may be non-zero
  9820  0298'                    	endif
  9821  0298'                    	if	0	;tblptru may be non-zero
  9822  0298'                    	endif
  9823  0298' 0008               	tblrd		*
  9824  029A' 50F5               	movf	tablat,w,c
  9825  029C' 0900               	iorlw	0
  9826  029E' A4D8               	btfss	status,2,c
  9827  02A0' D002               	goto	l5967
  9828  02A2' 0E00               	movlw	0
  9829  02A4' 6E00'              	movwf	GLCDMotor@max2^0,c
  9830  02A6'                    l5967:
  9831                           
  9832                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  9833  02A6' 5000'              	movf	_menuDaltGLCD^0,w,c
  9834  02A8' 0D1D               	mullw	29
  9835  02AA' 50F3               	movf	243,w,c
  9836  02AC' 0F00'              	addlw	low _menuList
  9837  02AE' 2400'              	addwf	GLCDMotor@min2^0,w,c
  9838  02B0' 6E00'              	movwf	??_GLCDMotor^0,c
  9839  02B2' 0E1D               	movlw	29
  9840  02B4' 2600'              	addwf	??_GLCDMotor^0,f,c
  9841  02B6' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9842  02BA'                    	if	1	;There is more than 1 active tblptr byte
  9843  02BA' 0E00'              	movlw	high __smallconst
  9844  02BC' 6EF7               	movwf	tblptrh,c
  9845  02BE'                    	endif
  9846  02BE'                    	if	0	;tblptru may be non-zero
  9847  02BE'                    	endif
  9848  02BE'                    	if	0	;tblptru may be non-zero
  9849  02BE'                    	endif
  9850  02BE' 0008               	tblrd		*
  9851  02C0' 50F5               	movf	tablat,w,c
  9852  02C2' 0900               	iorlw	0
  9853  02C4' A4D8               	btfss	status,2,c
  9854  02C6' D002               	goto	l993
  9855  02C8' 0E00               	movlw	0
  9856  02CA' 6E00'              	movwf	GLCDMotor@min2^0,c
  9857  02CC'                    l993:
  9858                           
  9859                           ;GestioLCD.c: 143:     j=0;
  9860  02CC' 0E00               	movlw	0
  9861  02CE' 6E00'              	movwf	GLCDMotor@j^0,c
  9862                           
  9863                           ;GestioLCD.c: 144:     k2=min2;
  9864  02D0' C01E' F01C'        	movff	GLCDMotor@min2,GLCDMotor@k2
  9865  02D4' D6B5               	goto	u5820
  9866  02D6'                    l5975:
  9867                           
  9868                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  9869  02D6' 5000'              	movf	_timerGLCD^0,w,c
  9870  02D8' EC00' F000'        	call	_TiGetTics
  9871  02DC' BE00'              	btfsc	(?_TiGetTics+1)^0,7,c
  9872  02DE' D00E               	goto	l995
  9873  02E0' 0EB5               	movlw	181
  9874  02E2' 5C00'              	subwf	?_TiGetTics^0,w,c
  9875  02E4' 0E04               	movlw	4
  9876  02E6' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  9877  02E8' B0D8               	btfsc	status,0,c
  9878  02EA' B000'              	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9879  02EC' D007               	goto	l995
  9880  02EE' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9881  02F0' D005               	goto	l995
  9882                           
  9883                           ;GestioLCD.c: 150:     LcClear();
  9884  02F2' EC00' F000'        	call	_LcClear	;wreg free
  9885  02F6'                    l5983:
  9886                           
  9887                           ;GestioLCD.c: 151:     state = 2;
  9888  02F6' 0E02               	movlw	2
  9889  02F8' 6E00'              	movwf	GLCDMotor@state^0,c
  9890                           
  9891                           ;GestioLCD.c: 152:    }
  9892  02FA' 0012               	return	
  9893  02FC'                    l995:
  9894  02FC' A000'              	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9895  02FE' 0012               	return	
  9896  0300' A000'              	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9897  0302' 0012               	return	
  9898                           
  9899                           ;GestioLCD.c: 154:     LcClear();
  9900  0304' EC00' F000'        	call	_LcClear	;wreg free
  9901  0308' D6F9               	goto	u5890
  9902  030A'                    l5991:
  9903                           
  9904                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9905  030A' 5000'              	movf	_timerGLCD^0,w,c
  9906  030C' EC00' F000'        	call	_TiResetTics
  9907  0310' D697               	goto	u5820
  9908  0312'                    l5995:
  9909                           
  9910                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9911  0312' EC00' F000'        	call	_LcLliure	;wreg free
  9912  0316' A0D8               	btfss	status,0,c
  9913  0318' 0012               	return	
  9914                           
  9915                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9916  031A' 5000'              	movf	_timerGLCD^0,w,c
  9917  031C' EC00' F000'        	call	_TiResetTics
  9918                           
  9919                           ;GestioLCD.c: 165:     state = 11;
  9920  0320' 0E0B               	movlw	11
  9921  0322' 6E00'              	movwf	GLCDMotor@state^0,c
  9922  0324' 0012               	return	
  9923  0326'                    l6001:
  9924                           
  9925                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  9926  0326' 5000'              	movf	_menuDaltGLCD^0,w,c
  9927  0328' 0D1D               	mullw	29
  9928  032A' 50F3               	movf	243,w,c
  9929  032C' 0F00'              	addlw	low _menuList
  9930  032E' 2400'              	addwf	GLCDMotor@length2^0,w,c
  9931  0330' 6E00'              	movwf	??_GLCDMotor^0,c
  9932  0332' 0E1D               	movlw	29
  9933  0334' 2600'              	addwf	??_GLCDMotor^0,f,c
  9934  0336' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9935  033A'                    	if	1	;There is more than 1 active tblptr byte
  9936  033A' 0E00'              	movlw	high __smallconst
  9937  033C' 6EF7               	movwf	tblptrh,c
  9938  033E'                    	endif
  9939  033E'                    	if	0	;tblptru may be non-zero
  9940  033E'                    	endif
  9941  033E'                    	if	0	;tblptru may be non-zero
  9942  033E'                    	endif
  9943  033E' 0008               	tblrd		*
  9944  0340' 50F5               	movf	tablat,w,c
  9945  0342' 0900               	iorlw	0
  9946  0344' B4D8               	btfsc	status,2,c
  9947  0346' D002               	goto	l6005
  9948                           
  9949                           ;GestioLCD.c: 170:     length2++;
  9950  0348' 2A00'              	incf	GLCDMotor@length2^0,f,c
  9951                           
  9952                           ;GestioLCD.c: 171:    }
  9953  034A' 0012               	return	
  9954  034C'                    l6005:
  9955  034C' 5000'              	movf	_menuDaltGLCD^0,w,c
  9956  034E' 0D1D               	mullw	29
  9957  0350' 50F3               	movf	243,w,c
  9958  0352' 0F00'              	addlw	low _menuList
  9959  0354' 2400'              	addwf	GLCDMotor@length2^0,w,c
  9960  0356' 6E00'              	movwf	??_GLCDMotor^0,c
  9961  0358' 0E1D               	movlw	29
  9962  035A' 2600'              	addwf	??_GLCDMotor^0,f,c
  9963  035C' C014' FFF6         	movff	??_GLCDMotor,tblptrl
  9964  0360'                    	if	1	;There is more than 1 active tblptr byte
  9965  0360' 0E00'              	movlw	high __smallconst
  9966  0362' 6EF7               	movwf	tblptrh,c
  9967  0364'                    	endif
  9968  0364'                    	if	0	;tblptru may be non-zero
  9969  0364'                    	endif
  9970  0364'                    	if	0	;tblptru may be non-zero
  9971  0364'                    	endif
  9972  0364' 0008               	tblrd		*
  9973  0366' 50F5               	movf	tablat,w,c
  9974  0368' 0900               	iorlw	0
  9975  036A' A4D8               	btfss	status,2,c
  9976  036C' 0012               	return	
  9977  036E' D7C3               	goto	l5983
  9978  0370'                    l6011:
  9979  0370' 5000'              	movf	GLCDMotor@state^0,w,c
  9980  0372' 6E00'              	movwf	??_GLCDMotor^0,c
  9981  0374' 6A00'              	clrf	(??_GLCDMotor+1)^0,c
  9982                           
  9983                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9984                           ; Switch size 1, requested type "simple"
  9985                           ; Number of cases is 1, Range of values is 0 to 0
  9986                           ; switch strategies available:
  9987                           ; Name         Instructions Cycles
  9988                           ; simple_byte            4     3 (average)
  9989                           ;	Chosen strategy is simple_byte
  9990  0376' 5000'              	movf	(??_GLCDMotor+1)^0,w,c
  9991  0378' 0A00               	xorlw	0	; case 0
  9992  037A' A4D8               	btfss	status,2,c
  9993  037C' 0012               	return	
  9994                           
  9995                           ; Switch size 1, requested type "simple"
  9996                           ; Number of cases is 12, Range of values is 0 to 13
  9997                           ; switch strategies available:
  9998                           ; Name         Instructions Cycles
  9999                           ; simple_byte           37    19 (average)
 10000                           ;	Chosen strategy is simple_byte
 10001  037E' 5000'              	movf	??_GLCDMotor^0,w,c
 10002  0380' 0A00               	xorlw	0	; case 0
 10003  0382' B4D8               	btfsc	status,2,c
 10004  0384' D6D0               	goto	l975
 10005  0386' 0A01               	xorlw	1	; case 1
 10006  0388' B4D8               	btfsc	status,2,c
 10007  038A' D6EA               	goto	l5913
 10008  038C' 0A03               	xorlw	3	; case 2
 10009  038E' B4D8               	btfsc	status,2,c
 10010  0390' D638               	goto	l5825
 10011  0392' 0A01               	xorlw	1	; case 3
 10012  0394' B4D8               	btfsc	status,2,c
 10013  0396' D656               	goto	l5841
 10014  0398' 0A06               	xorlw	6	; case 5
 10015  039A' B4D8               	btfsc	status,2,c
 10016  039C' D6B2               	goto	l5877
 10017  039E' 0A03               	xorlw	3	; case 6
 10018  03A0' B4D8               	btfsc	status,2,c
 10019  03A2' D6A8               	goto	l5869
 10020  03A4' 0A01               	xorlw	1	; case 7
 10021  03A6' B4D8               	btfsc	status,2,c
 10022  03A8' D714               	goto	l5929
 10023  03AA' 0A0F               	xorlw	15	; case 8
 10024  03AC' B4D8               	btfsc	status,2,c
 10025  03AE' D7B1               	goto	l5995
 10026  03B0' 0A01               	xorlw	1	; case 9
 10027  03B2' B4D8               	btfsc	status,2,c
 10028  03B4' D732               	goto	l5945
 10029  03B6' 0A03               	xorlw	3	; case 10
 10030  03B8' B4D8               	btfsc	status,2,c
 10031  03BA' D7A7               	goto	l5991
 10032  03BC' 0A01               	xorlw	1	; case 11
 10033  03BE' B4D8               	btfsc	status,2,c
 10034  03C0' D78A               	goto	l5975
 10035  03C2' 0A06               	xorlw	6	; case 13
 10036  03C4' A4D8               	btfss	status,2,c
 10037  03C6' 0012               	return	
 10038  03C8' D7AE               	goto	l6001
 10039  03CA'                    __end_of_GLCDMotor:
 10040                           	callstack 0
 10041                           
 10042 ;; *************** function _LcPutChar *****************
 10043 ;; Defined at:
 10044 ;;		line 134 in file "LcTLCD.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;  c               1    wreg     unsigned char 
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;  c               1   19[COMRAM] unsigned char 
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      void 
 10051 ;; Registers used:
 10052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/1
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1
 10058 ;;      Params:         0       0       0
 10059 ;;      Locals:         1       0       0
 10060 ;;      Temps:          0       0       0
 10061 ;;      Totals:         1       0       0
 10062 ;;Total ram usage:        1 bytes
 10063 ;; Hardware stack levels used: 1
 10064 ;; Hardware stack levels required when called: 5
 10065 ;; This function calls:
 10066 ;;		_CantaData
 10067 ;;		_LcGotoXY
 10068 ;;		_WaitForBusy
 10069 ;; This function is called by:
 10070 ;;		_LcLCD
 10071 ;;		_menu
 10072 ;;		_GLCDMotor
 10073 ;;		_motorSIO
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077                           	psect	text76
 10078  0000'                    __ptext76:
 10079                           	callstack 0
 10080  0000'                    _LcPutChar:
 10081                           	callstack 24
 10082                           
 10083                           ;incstack = 0
 10084                           ;LcPutChar@c stored from wreg
 10085  0000' 6E00'              	movwf	LcPutChar@c^0,c
 10086                           
 10087                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
 10088  0002' EC00' F000'        	call	_WaitForBusy	;wreg free
 10089  0006' 5000'              	movf	LcPutChar@c^0,w,c
 10090  0008' EC00' F000'        	call	_CantaData
 10091                           
 10092                           ;LcTLCD.c: 138:  ++ColumnAct;
 10093  000C' 2A00'              	incf	_ColumnAct^0,f,c
 10094                           
 10095                           ;LcTLCD.c: 140:  if (Rows == 2) {
 10096  000E' 0E02               	movlw	2
 10097  0010' 1800'              	xorwf	_Rows^0,w,c
 10098  0012' A4D8               	btfss	status,2,c
 10099  0014' D010               	goto	l4513
 10100                           
 10101                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
 10102  0016' 0E27               	movlw	39
 10103  0018' 6400'              	cpfsgt	_ColumnAct^0,c
 10104  001A' D00D               	goto	l4513
 10105                           
 10106                           ;LcTLCD.c: 142:    ColumnAct = 0;
 10107  001C' 0E00               	movlw	0
 10108  001E' 6E00'              	movwf	_ColumnAct^0,c
 10109                           
 10110                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
 10111  0020' 2A00'              	incf	_RowAct^0,f,c
 10112  0022' 0E01               	movlw	1
 10113  0024' 6400'              	cpfsgt	_RowAct^0,c
 10114  0026' D002               	goto	l4511
 10115  0028' 0E00               	movlw	0
 10116  002A' 6E00'              	movwf	_RowAct^0,c
 10117  002C'                    l4511:
 10118                           
 10119                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
 10120  002C' C03E' F00D'        	movff	_RowAct,LcGotoXY@Row
 10121  0030' 5000'              	movf	_ColumnAct^0,w,c
 10122  0032' EC00' F000'        	call	_LcGotoXY
 10123  0036'                    l4513:
 10124                           
 10125                           ;LcTLCD.c: 155:  if (RowAct == 1) {
 10126  0036' 0400'              	decf	_RowAct^0,w,c
 10127  0038' A4D8               	btfss	status,2,c
 10128  003A' 0012               	return	
 10129                           
 10130                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
 10131  003C' 0E27               	movlw	39
 10132  003E' 6400'              	cpfsgt	_ColumnAct^0,c
 10133  0040' D002               	goto	l4519
 10134  0042' 0E00               	movlw	0
 10135  0044' 6E00'              	movwf	_ColumnAct^0,c
 10136  0046'                    l4519:
 10137                           
 10138                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
 10139  0046' C03E' F00D'        	movff	_RowAct,LcGotoXY@Row
 10140  004A' 5000'              	movf	_ColumnAct^0,w,c
 10141  004C' EC00' F000'        	call	_LcGotoXY
 10142  0050' 0012               	return		;funcret
 10143  0052'                    __end_of_LcPutChar:
 10144                           	callstack 0
 10145                           
 10146 ;; *************** function _CantaData *****************
 10147 ;; Defined at:
 10148 ;;		line 196 in file "LcTLCD.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  Data            1    wreg     unsigned char 
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;  Data            1    7[COMRAM] unsigned char 
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  1    wreg      void 
 10155 ;; Registers used:
 10156 ;;		wreg, status,2, status,0, cstack
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/1
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1
 10162 ;;      Params:         0       0       0
 10163 ;;      Locals:         1       0       0
 10164 ;;      Temps:          0       0       0
 10165 ;;      Totals:         1       0       0
 10166 ;;Total ram usage:        1 bytes
 10167 ;; Hardware stack levels used: 1
 10168 ;; Hardware stack levels required when called: 3
 10169 ;; This function calls:
 10170 ;;		_CantaPartAlta
 10171 ;;		_CantaPartBaixa
 10172 ;; This function is called by:
 10173 ;;		_LcPutChar
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           	psect	text77
 10178  0000'                    __ptext77:
 10179                           	callstack 0
 10180  0000'                    _CantaData:
 10181                           	callstack 25
 10182                           
 10183                           ;incstack = 0
 10184                           ;CantaData@Data stored from wreg
 10185  0000' 6E00'              	movwf	CantaData@Data^0,c
 10186                           
 10187                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10188  0002' 9694               	bcf	148,3,c	;volatile
 10189  0004' 9494               	bcf	148,2,c	;volatile
 10190  0006' 9294               	bcf	148,1,c	;volatile
 10191  0008' 9094               	bcf	148,0,c	;volatile
 10192                           
 10193                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
 10194  000A' 8A8B               	bsf	139,5,c	;volatile
 10195                           
 10196                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
 10197  000C' 9E8C               	bcf	140,7,c	;volatile
 10198                           
 10199                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
 10200  000E' 888B               	bsf	139,4,c	;volatile
 10201                           
 10202                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
 10203  0010' 5000'              	movf	CantaData@Data^0,w,c
 10204  0012' EC00' F000'        	call	_CantaPartAlta
 10205                           
 10206                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
 10207  0016' 888B               	bsf	139,4,c	;volatile
 10208                           
 10209                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
 10210  0018' 988B               	bcf	139,4,c	;volatile
 10211                           
 10212                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
 10213  001A' 988B               	bcf	139,4,c	;volatile
 10214                           
 10215                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
 10216  001C' 888B               	bsf	139,4,c	;volatile
 10217                           
 10218                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
 10219  001E' 5000'              	movf	CantaData@Data^0,w,c
 10220  0020' EC00' F000'        	call	_CantaPartBaixa
 10221                           
 10222                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
 10223  0024' 888B               	bsf	139,4,c	;volatile
 10224                           
 10225                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
 10226  0026' 988B               	bcf	139,4,c	;volatile
 10227                           
 10228                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10229  0028' 8694               	bsf	148,3,c	;volatile
 10230  002A' 8494               	bsf	148,2,c	;volatile
 10231  002C' 8294               	bsf	148,1,c	;volatile
 10232  002E' 8094               	bsf	148,0,c	;volatile
 10233  0030' 0012               	return		;funcret
 10234  0032'                    __end_of_CantaData:
 10235                           	callstack 0
 10236                           
 10237 ;; *************** function _LcNewString *****************
 10238 ;; Defined at:
 10239 ;;		line 241 in file "LcTLCD.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;  new_s           2    9[COMRAM] PTR unsigned char 
 10242 ;;		 -> stringScore(3), STR_10(8), STR_9(12), STR_8(8), 
 10243 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
 10244 ;;		 -> STR_7(16), STR_6(13), STR_5(9), STR_4(7), 
 10245 ;;		 -> STR_3(7), STR_2(11), STR_1(8), 
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;		None
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  1    wreg      void 
 10250 ;; Registers used:
 10251 ;;		wreg, status,2, status,0
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/1
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1
 10257 ;;      Params:         2       0       0
 10258 ;;      Locals:         0       0       0
 10259 ;;      Temps:          0       0       0
 10260 ;;      Totals:         2       0       0
 10261 ;;Total ram usage:        2 bytes
 10262 ;; Hardware stack levels used: 1
 10263 ;; Hardware stack levels required when called: 2
 10264 ;; This function calls:
 10265 ;;		Nothing
 10266 ;; This function is called by:
 10267 ;;		_menu
 10268 ;;		_GLCDMotor
 10269 ;;		_motorJoc
 10270 ;;		_motorSIO
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           	psect	text78
 10275  0000'                    __ptext78:
 10276                           	callstack 0
 10277  0000'                    _LcNewString:
 10278                           	callstack 27
 10279                           
 10280                           ;LcTLCD.c: 242:     s_ptr = new_s;
 10281                           
 10282                           ;incstack = 0
 10283  0000' C009' F00E'        	movff	LcNewString@new_s,_s_ptr
 10284  0004' C00A' F00F'        	movff	LcNewString@new_s+1,_s_ptr+1
 10285                           
 10286                           ;LcTLCD.c: 243:     nou_s = 1;
 10287  0008' 8000'              	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10288  000A' 0012               	return		;funcret
 10289  000C'                    __end_of_LcNewString:
 10290                           	callstack 0
 10291                           
 10292 ;; *************** function _LcLliure *****************
 10293 ;; Defined at:
 10294 ;;		line 257 in file "LcTLCD.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;		None
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;		None
 10299 ;; Return value:  Size  Location     Type
 10300 ;;		None               void
 10301 ;; Registers used:
 10302 ;;		status,0
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/1
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMRAM   BANK0   BANK1
 10308 ;;      Params:         0       0       0
 10309 ;;      Locals:         0       0       0
 10310 ;;      Temps:          0       0       0
 10311 ;;      Totals:         0       0       0
 10312 ;;Total ram usage:        0 bytes
 10313 ;; Hardware stack levels used: 1
 10314 ;; Hardware stack levels required when called: 2
 10315 ;; This function calls:
 10316 ;;		Nothing
 10317 ;; This function is called by:
 10318 ;;		_menu
 10319 ;;		_GLCDMotor
 10320 ;;		_motorJoc
 10321 ;;		_motorSIO
 10322 ;; This function uses a non-reentrant model
 10323 ;;
 10324                           
 10325                           	psect	text79
 10326  0000'                    __ptext79:
 10327                           	callstack 0
 10328  0000'                    _LcLliure:
 10329                           	callstack 27
 10330                           
 10331                           ;LcTLCD.c: 258:     return !nou_s;
 10332                           
 10333                           ;incstack = 0
 10334  0000' A000'              	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
 10335  0002' D002               	goto	l2179
 10336  0004' 90D8               	bcf	status,0,c
 10337  0006' 0012               	return	
 10338  0008'                    l2179:
 10339  0008' 80D8               	bsf	status,0,c
 10340  000A' 0012               	return		;funcret
 10341  000C'                    __end_of_LcLliure:
 10342                           	callstack 0
 10343                           
 10344 ;; *************** function _LcClear *****************
 10345 ;; Defined at:
 10346 ;;		line 84 in file "LcTLCD.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;		None
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;		None
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/1
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMRAM   BANK0   BANK1
 10360 ;;      Params:         0       0       0
 10361 ;;      Locals:         0       0       0
 10362 ;;      Temps:          0       0       0
 10363 ;;      Totals:         0       0       0
 10364 ;;Total ram usage:        0 bytes
 10365 ;; Hardware stack levels used: 1
 10366 ;; Hardware stack levels required when called: 5
 10367 ;; This function calls:
 10368 ;;		_CantaIR
 10369 ;;		_Espera
 10370 ;;		_LcGotoXY
 10371 ;;		_WaitForBusy
 10372 ;; This function is called by:
 10373 ;;		_menu
 10374 ;;		_GLCDMotor
 10375 ;;		_motorSIO
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           	psect	text80
 10380  0000'                    __ptext80:
 10381                           	callstack 0
 10382  0000'                    _LcClear:
 10383                           	callstack 24
 10384                           
 10385                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
 10386                           
 10387                           ;incstack = 0
 10388  0000' EC00' F000'        	call	_WaitForBusy	;wreg free
 10389  0004' 0E01               	movlw	1
 10390  0006' EC00' F000'        	call	_CantaIR
 10391                           
 10392                           ;LcTLCD.c: 88:  Espera(Timer, 3);
 10393  000A' 0E00               	movlw	0
 10394  000C' 6E00'              	movwf	(Espera@ms+1)^0,c
 10395  000E' 0E03               	movlw	3
 10396  0010' 6E00'              	movwf	Espera@ms^0,c
 10397  0012' 5000'              	movf	_Timer^0,w,c
 10398  0014' EC00' F000'        	call	_Espera
 10399                           
 10400                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
 10401  0018' 0E00               	movlw	0
 10402  001A' 6E00'              	movwf	LcGotoXY@Row^0,c
 10403  001C' 0E00               	movlw	0
 10404  001E' EC00' F000'        	call	_LcGotoXY
 10405  0022' 0012               	return		;funcret
 10406  0024'                    __end_of_LcClear:
 10407                           	callstack 0
 10408                           
 10409 ;; *************** function _LcGotoXY *****************
 10410 ;; Defined at:
 10411 ;;		line 106 in file "LcTLCD.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  Column          1    wreg     unsigned char 
 10414 ;;  Row             1   13[COMRAM] unsigned char 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;  Column          1   18[COMRAM] unsigned char 
 10417 ;;  Fisics          2   14[COMRAM] int 
 10418 ;; Return value:  Size  Location     Type
 10419 ;;                  1    wreg      void 
 10420 ;; Registers used:
 10421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10422 ;; Tracked objects:
 10423 ;;		On entry : 0/1
 10424 ;;		On exit  : 0/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMRAM   BANK0   BANK1
 10427 ;;      Params:         1       0       0
 10428 ;;      Locals:         5       0       0
 10429 ;;      Temps:          0       0       0
 10430 ;;      Totals:         6       0       0
 10431 ;;Total ram usage:        6 bytes
 10432 ;; Hardware stack levels used: 1
 10433 ;; Hardware stack levels required when called: 4
 10434 ;; This function calls:
 10435 ;;		_CantaIR
 10436 ;;		_WaitForBusy
 10437 ;; This function is called by:
 10438 ;;		_LcClear
 10439 ;;		_LcPutChar
 10440 ;;		_menu
 10441 ;;		_GLCDMotor
 10442 ;;		_motorJoc
 10443 ;;		_motorSIO
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           	psect	text81
 10448  0000'                    __ptext81:
 10449                           	callstack 0
 10450  0000'                    _LcGotoXY:
 10451                           	callstack 24
 10452                           
 10453                           ;incstack = 0
 10454                           ;LcGotoXY@Column stored from wreg
 10455  0000' 6E00'              	movwf	LcGotoXY@Column^0,c
 10456                           
 10457                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
 10458  0002' 5000'              	movf	LcGotoXY@Row^0,w,c
 10459  0004' B4D8               	btfsc	status,2,c
 10460  0006' D004               	goto	l4437
 10461  0008' 0E00               	movlw	0
 10462  000A' 6E00'              	movwf	(_LcGotoXY$336+1)^0,c
 10463  000C' 0E40               	movlw	64
 10464  000E' D003               	goto	L10
 10465  0010'                    l4437:
 10466  0010' 0E00               	movlw	0
 10467  0012' 6E00'              	movwf	(_LcGotoXY$336+1)^0,c
 10468  0014' 0E00               	movlw	0
 10469  0016'                    L10:
 10470  0016' 6E00'              	movwf	_LcGotoXY$336^0,c
 10471  0018' 5000'              	movf	LcGotoXY@Column^0,w,c
 10472  001A' 2400'              	addwf	_LcGotoXY$336^0,w,c
 10473  001C' 6E00'              	movwf	LcGotoXY@Fisics^0,c
 10474  001E' 0E00               	movlw	0
 10475  0020' 2000'              	addwfc	(_LcGotoXY$336+1)^0,w,c
 10476  0022' 6E00'              	movwf	(LcGotoXY@Fisics+1)^0,c
 10477                           
 10478                           ;LcTLCD.c: 127:  WaitForBusy();
 10479  0024' EC00' F000'        	call	_WaitForBusy	;wreg free
 10480                           
 10481                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
 10482  0028' 5000'              	movf	LcGotoXY@Fisics^0,w,c
 10483  002A' 0980               	iorlw	128
 10484  002C' EC00' F000'        	call	_CantaIR
 10485                           
 10486                           ;LcTLCD.c: 130:  RowAct = Row;
 10487  0030' C00D' F03E'        	movff	LcGotoXY@Row,_RowAct
 10488                           
 10489                           ;LcTLCD.c: 131:  ColumnAct = Column;
 10490  0034' C012' F03D'        	movff	LcGotoXY@Column,_ColumnAct
 10491  0038' 0012               	return		;funcret
 10492  003A'                    __end_of_LcGotoXY:
 10493                           	callstack 0
 10494                           
 10495 ;; *************** function _WaitForBusy *****************
 10496 ;; Defined at:
 10497 ;;		line 212 in file "LcTLCD.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;		None
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;  Busy            1   12[COMRAM] unsigned char 
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  1    wreg      void 
 10504 ;; Registers used:
 10505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10506 ;; Tracked objects:
 10507 ;;		On entry : 0/0
 10508 ;;		On exit  : 0/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMRAM   BANK0   BANK1
 10511 ;;      Params:         0       0       0
 10512 ;;      Locals:         1       0       0
 10513 ;;      Temps:          0       0       0
 10514 ;;      Totals:         1       0       0
 10515 ;;Total ram usage:        1 bytes
 10516 ;; Hardware stack levels used: 1
 10517 ;; Hardware stack levels required when called: 3
 10518 ;; This function calls:
 10519 ;;		_TiGetTics
 10520 ;;		_TiResetTics
 10521 ;; This function is called by:
 10522 ;;		_LcInit
 10523 ;;		_LcClear
 10524 ;;		_LcGotoXY
 10525 ;;		_LcPutChar
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text82
 10530  0000'                    __ptext82:
 10531                           	callstack 0
 10532  0000'                    _WaitForBusy:
 10533                           	callstack 25
 10534                           
 10535                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10536                           
 10537                           ;incstack = 0
 10538  0000' 8694               	bsf	148,3,c	;volatile
 10539  0002' 8494               	bsf	148,2,c	;volatile
 10540  0004' 8294               	bsf	148,1,c	;volatile
 10541  0006' 8094               	bsf	148,0,c	;volatile
 10542                           
 10543                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
 10544  0008' 9A8B               	bcf	139,5,c	;volatile
 10545                           
 10546                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
 10547  000A' 8E8C               	bsf	140,7,c	;volatile
 10548                           
 10549                           ;LcTLCD.c: 216:  TiResetTics(Timer);
 10550  000C' 5000'              	movf	_Timer^0,w,c
 10551  000E' EC00' F000'        	call	_TiResetTics
 10552  0012'                    l4405:
 10553                           
 10554                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10555  0012' 888B               	bsf	139,4,c	;volatile
 10556  0014' 888B               	bsf	139,4,c	;volatile
 10557                           
 10558                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
 10559  0016' 0E00               	movlw	0
 10560  0018' B682               	btfsc	130,3,c	;volatile
 10561  001A' 0E01               	movlw	1
 10562  001C' 6E00'              	movwf	WaitForBusy@Busy^0,c
 10563                           
 10564                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
 10565  001E' 988B               	bcf	139,4,c	;volatile
 10566                           
 10567                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
 10568  0020' 988B               	bcf	139,4,c	;volatile
 10569                           
 10570                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
 10571  0022' 888B               	bsf	139,4,c	;volatile
 10572  0024' 888B               	bsf	139,4,c	;volatile
 10573                           
 10574                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
 10575  0026' 988B               	bcf	139,4,c	;volatile
 10576                           
 10577                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
 10578  0028' 988B               	bcf	139,4,c	;volatile
 10579                           
 10580                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
 10581  002A' 5000'              	movf	_Timer^0,w,c
 10582  002C' EC00' F000'        	call	_TiGetTics
 10583  0030' 5000'              	movf	?_TiGetTics^0,w,c
 10584  0032' 1000'              	iorwf	(?_TiGetTics+1)^0,w,c
 10585  0034' A4D8               	btfss	status,2,c
 10586  0036' 0012               	return	
 10587                           
 10588                           ;LcTLCD.c: 227:  } while(Busy);
 10589  0038' 5000'              	movf	WaitForBusy@Busy^0,w,c
 10590  003A' B4D8               	btfsc	status,2,c
 10591  003C' 0012               	return	
 10592  003E' D7E9               	goto	l4405
 10593  0040'                    __end_of_WaitForBusy:
 10594                           	callstack 0
 10595                           
 10596 ;; *************** function _CantaIR *****************
 10597 ;; Defined at:
 10598 ;;		line 180 in file "LcTLCD.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;  IR              1    wreg     unsigned char 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;  IR              1    7[COMRAM] unsigned char 
 10603 ;; Return value:  Size  Location     Type
 10604 ;;                  1    wreg      void 
 10605 ;; Registers used:
 10606 ;;		wreg, status,2, status,0, cstack
 10607 ;; Tracked objects:
 10608 ;;		On entry : 0/0
 10609 ;;		On exit  : 0/0
 10610 ;;		Unchanged: 0/0
 10611 ;; Data sizes:     COMRAM   BANK0   BANK1
 10612 ;;      Params:         0       0       0
 10613 ;;      Locals:         1       0       0
 10614 ;;      Temps:          0       0       0
 10615 ;;      Totals:         1       0       0
 10616 ;;Total ram usage:        1 bytes
 10617 ;; Hardware stack levels used: 1
 10618 ;; Hardware stack levels required when called: 3
 10619 ;; This function calls:
 10620 ;;		_CantaPartAlta
 10621 ;;		_CantaPartBaixa
 10622 ;; This function is called by:
 10623 ;;		_LcScroll
 10624 ;;		_LcInit
 10625 ;;		_LcClear
 10626 ;;		_LcGotoXY
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           
 10630                           	psect	text83
 10631  0000'                    __ptext83:
 10632                           	callstack 0
 10633  0000'                    _CantaIR:
 10634                           	callstack 24
 10635                           
 10636                           ;incstack = 0
 10637                           ;CantaIR@IR stored from wreg
 10638  0000' 6E00'              	movwf	CantaIR@IR^0,c
 10639                           
 10640                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
 10641  0002' 9694               	bcf	148,3,c	;volatile
 10642  0004' 9494               	bcf	148,2,c	;volatile
 10643  0006' 9294               	bcf	148,1,c	;volatile
 10644  0008' 9094               	bcf	148,0,c	;volatile
 10645                           
 10646                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
 10647  000A' 9A8B               	bcf	139,5,c	;volatile
 10648                           
 10649                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
 10650  000C' 9E8C               	bcf	140,7,c	;volatile
 10651                           
 10652                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
 10653  000E' 888B               	bsf	139,4,c	;volatile
 10654                           
 10655                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
 10656  0010' 5000'              	movf	CantaIR@IR^0,w,c
 10657  0012' EC00' F000'        	call	_CantaPartAlta
 10658                           
 10659                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
 10660  0016' 888B               	bsf	139,4,c	;volatile
 10661                           
 10662                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
 10663  0018' 988B               	bcf	139,4,c	;volatile
 10664                           
 10665                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
 10666  001A' 988B               	bcf	139,4,c	;volatile
 10667                           
 10668                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
 10669  001C' 888B               	bsf	139,4,c	;volatile
 10670                           
 10671                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
 10672  001E' 5000'              	movf	CantaIR@IR^0,w,c
 10673  0020' EC00' F000'        	call	_CantaPartBaixa
 10674                           
 10675                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
 10676  0024' 888B               	bsf	139,4,c	;volatile
 10677                           
 10678                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
 10679  0026' 988B               	bcf	139,4,c	;volatile
 10680                           
 10681                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
 10682  0028' 8694               	bsf	148,3,c	;volatile
 10683  002A' 8494               	bsf	148,2,c	;volatile
 10684  002C' 8294               	bsf	148,1,c	;volatile
 10685  002E' 8094               	bsf	148,0,c	;volatile
 10686  0030' 0012               	return		;funcret
 10687  0032'                    __end_of_CantaIR:
 10688                           	callstack 0
 10689                           
 10690 ;; *************** function _CantaPartBaixa *****************
 10691 ;; Defined at:
 10692 ;;		line 173 in file "LcTLCD.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;  c               1    wreg     unsigned char 
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;  c               1    6[COMRAM] unsigned char 
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  1    wreg      void 
 10699 ;; Registers used:
 10700 ;;		wreg, status,2, status,0
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/1
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMRAM   BANK0   BANK1
 10706 ;;      Params:         0       0       0
 10707 ;;      Locals:         1       0       0
 10708 ;;      Temps:          1       0       0
 10709 ;;      Totals:         2       0       0
 10710 ;;Total ram usage:        2 bytes
 10711 ;; Hardware stack levels used: 1
 10712 ;; Hardware stack levels required when called: 2
 10713 ;; This function calls:
 10714 ;;		Nothing
 10715 ;; This function is called by:
 10716 ;;		_CantaIR
 10717 ;;		_CantaData
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           	psect	text84
 10722  0000'                    __ptext84:
 10723                           	callstack 0
 10724  0000'                    _CantaPartBaixa:
 10725                           	callstack 24
 10726                           
 10727                           ;incstack = 0
 10728                           ;CantaPartBaixa@c stored from wreg
 10729  0000' 6E00'              	movwf	CantaPartBaixa@c^0,c
 10730                           
 10731                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
 10732  0002' A600'              	btfss	CantaPartBaixa@c^0,3,c
 10733  0004' D003               	goto	u3540
 10734  0006' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10735  0008' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 10736  000A' D001               	goto	u3558
 10737  000C'                    u3540:
 10738  000C' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10739  000E'                    u3558:
 10740  000E' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10741  0010' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10742  0012' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10743  0014' 508B               	movf	139,w,c	;volatile
 10744  0016' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10745  0018' 0BF7               	andlw	-9
 10746  001A' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10747  001C' 6E8B               	movwf	139,c	;volatile
 10748                           
 10749                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
 10750  001E' A400'              	btfss	CantaPartBaixa@c^0,2,c
 10751  0020' D003               	goto	u3560
 10752  0022' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10753  0024' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 10754  0026' D001               	goto	u3578
 10755  0028'                    u3560:
 10756  0028' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10757  002A'                    u3578:
 10758  002A' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10759  002C' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10760  002E' 508B               	movf	139,w,c	;volatile
 10761  0030' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10762  0032' 0BFB               	andlw	-5
 10763  0034' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10764  0036' 6E8B               	movwf	139,c	;volatile
 10765                           
 10766                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
 10767  0038' A200'              	btfss	CantaPartBaixa@c^0,1,c
 10768  003A' D003               	goto	u3580
 10769  003C' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10770  003E' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 10771  0040' D001               	goto	u3598
 10772  0042'                    u3580:
 10773  0042' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10774  0044'                    u3598:
 10775  0044' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10776  0046' 508B               	movf	139,w,c	;volatile
 10777  0048' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10778  004A' 0BFD               	andlw	-3
 10779  004C' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10780  004E' 6E8B               	movwf	139,c	;volatile
 10781                           
 10782                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
 10783  0050' A000'              	btfss	CantaPartBaixa@c^0,0,c
 10784  0052' D003               	goto	u3600
 10785  0054' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10786  0056' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 10787  0058' D001               	goto	u3618
 10788  005A'                    u3600:
 10789  005A' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10790  005C'                    u3618:
 10791  005C' 508B               	movf	139,w,c	;volatile
 10792  005E' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10793  0060' 0BFE               	andlw	-2
 10794  0062' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10795  0064' 6E8B               	movwf	139,c	;volatile
 10796  0066' 0012               	return		;funcret
 10797  0068'                    __end_of_CantaPartBaixa:
 10798                           	callstack 0
 10799                           
 10800 ;; *************** function _CantaPartAlta *****************
 10801 ;; Defined at:
 10802 ;;		line 166 in file "LcTLCD.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;  c               1    wreg     unsigned char 
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;  c               1    6[COMRAM] unsigned char 
 10807 ;; Return value:  Size  Location     Type
 10808 ;;                  1    wreg      void 
 10809 ;; Registers used:
 10810 ;;		wreg, status,2, status,0
 10811 ;; Tracked objects:
 10812 ;;		On entry : 0/1
 10813 ;;		On exit  : 0/0
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMRAM   BANK0   BANK1
 10816 ;;      Params:         0       0       0
 10817 ;;      Locals:         1       0       0
 10818 ;;      Temps:          1       0       0
 10819 ;;      Totals:         2       0       0
 10820 ;;Total ram usage:        2 bytes
 10821 ;; Hardware stack levels used: 1
 10822 ;; Hardware stack levels required when called: 2
 10823 ;; This function calls:
 10824 ;;		Nothing
 10825 ;; This function is called by:
 10826 ;;		_CantaIR
 10827 ;;		_CantaData
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831                           	psect	text85
 10832  0000'                    __ptext85:
 10833                           	callstack 0
 10834  0000'                    _CantaPartAlta:
 10835                           	callstack 24
 10836                           
 10837                           ;incstack = 0
 10838                           ;CantaPartAlta@c stored from wreg
 10839  0000' 6E00'              	movwf	CantaPartAlta@c^0,c
 10840                           
 10841                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10842  0002' AE00'              	btfss	CantaPartAlta@c^0,7,c
 10843  0004' D003               	goto	u3460
 10844  0006' 6A00'              	clrf	??_CantaPartAlta^0,c
 10845  0008' 2A00'              	incf	??_CantaPartAlta^0,f,c
 10846  000A' D001               	goto	u3478
 10847  000C'                    u3460:
 10848  000C' 6A00'              	clrf	??_CantaPartAlta^0,c
 10849  000E'                    u3478:
 10850  000E' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10851  0010' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10852  0012' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10853  0014' 508B               	movf	139,w,c	;volatile
 10854  0016' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10855  0018' 0BF7               	andlw	-9
 10856  001A' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10857  001C' 6E8B               	movwf	139,c	;volatile
 10858                           
 10859                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10860  001E' AC00'              	btfss	CantaPartAlta@c^0,6,c
 10861  0020' D003               	goto	u3480
 10862  0022' 6A00'              	clrf	??_CantaPartAlta^0,c
 10863  0024' 2A00'              	incf	??_CantaPartAlta^0,f,c
 10864  0026' D001               	goto	u3498
 10865  0028'                    u3480:
 10866  0028' 6A00'              	clrf	??_CantaPartAlta^0,c
 10867  002A'                    u3498:
 10868  002A' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10869  002C' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10870  002E' 508B               	movf	139,w,c	;volatile
 10871  0030' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10872  0032' 0BFB               	andlw	-5
 10873  0034' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10874  0036' 6E8B               	movwf	139,c	;volatile
 10875                           
 10876                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10877  0038' AA00'              	btfss	CantaPartAlta@c^0,5,c
 10878  003A' D003               	goto	u3500
 10879  003C' 6A00'              	clrf	??_CantaPartAlta^0,c
 10880  003E' 2A00'              	incf	??_CantaPartAlta^0,f,c
 10881  0040' D001               	goto	u3518
 10882  0042'                    u3500:
 10883  0042' 6A00'              	clrf	??_CantaPartAlta^0,c
 10884  0044'                    u3518:
 10885  0044' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10886  0046' 508B               	movf	139,w,c	;volatile
 10887  0048' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10888  004A' 0BFD               	andlw	-3
 10889  004C' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10890  004E' 6E8B               	movwf	139,c	;volatile
 10891                           
 10892                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10893  0050' A800'              	btfss	CantaPartAlta@c^0,4,c
 10894  0052' D003               	goto	u3520
 10895  0054' 6A00'              	clrf	??_CantaPartAlta^0,c
 10896  0056' 2A00'              	incf	??_CantaPartAlta^0,f,c
 10897  0058' D001               	goto	u3538
 10898  005A'                    u3520:
 10899  005A' 6A00'              	clrf	??_CantaPartAlta^0,c
 10900  005C'                    u3538:
 10901  005C' 508B               	movf	139,w,c	;volatile
 10902  005E' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10903  0060' 0BFE               	andlw	-2
 10904  0062' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10905  0064' 6E8B               	movwf	139,c	;volatile
 10906  0066' 0012               	return		;funcret
 10907  0068'                    __end_of_CantaPartAlta:
 10908                           	callstack 0
 10909                           
 10910 ;; *************** function _Espera *****************
 10911 ;; Defined at:
 10912 ;;		line 161 in file "LcTLCD.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  Timer           1    wreg     unsigned char 
 10915 ;;  ms              2   12[COMRAM] int 
 10916 ;; Auto vars:     Size  Location     Type
 10917 ;;  Timer           1   15[COMRAM] unsigned char 
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  1    wreg      void 
 10920 ;; Registers used:
 10921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMRAM   BANK0   BANK1
 10927 ;;      Params:         2       0       0
 10928 ;;      Locals:         1       0       0
 10929 ;;      Temps:          1       0       0
 10930 ;;      Totals:         4       0       0
 10931 ;;Total ram usage:        4 bytes
 10932 ;; Hardware stack levels used: 1
 10933 ;; Hardware stack levels required when called: 3
 10934 ;; This function calls:
 10935 ;;		_TiGetTics
 10936 ;;		_TiResetTics
 10937 ;; This function is called by:
 10938 ;;		_LcInit
 10939 ;;		_LcClear
 10940 ;; This function uses a non-reentrant model
 10941 ;;
 10942                           
 10943                           	psect	text86
 10944  0000'                    __ptext86:
 10945                           	callstack 0
 10946  0000'                    _Espera:
 10947                           	callstack 25
 10948                           
 10949                           ;incstack = 0
 10950                           ;Espera@Timer stored from wreg
 10951  0000' 6E00'              	movwf	Espera@Timer^0,c
 10952                           
 10953                           ;LcTLCD.c: 162:  TiResetTics(Timer);
 10954  0002' 5000'              	movf	Espera@Timer^0,w,c
 10955  0004' EC00' F000'        	call	_TiResetTics
 10956  0008'                    l4431:
 10957  0008' 5000'              	movf	Espera@Timer^0,w,c
 10958  000A' EC00' F000'        	call	_TiGetTics
 10959  000E' 5000'              	movf	Espera@ms^0,w,c
 10960  0010' 5C00'              	subwf	?_TiGetTics^0,w,c
 10961  0012' 5000'              	movf	(?_TiGetTics+1)^0,w,c
 10962  0014' 0A80               	xorlw	128
 10963  0016' 6E00'              	movwf	??_Espera^0,c
 10964  0018' 5000'              	movf	(Espera@ms+1)^0,w,c
 10965  001A' 0A80               	xorlw	128
 10966  001C' 5800'              	subwfb	??_Espera^0,w,c
 10967  001E' B0D8               	btfsc	status,0,c
 10968  0020' 0012               	return	
 10969  0022' D7F2               	goto	l4431
 10970  0024'                    __end_of_Espera:
 10971                           	callstack 0
 10972                           
 10973 ;; *************** function _TiResetTics *****************
 10974 ;; Defined at:
 10975 ;;		line 55 in file "TiTTimer.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  Handle          1    wreg     unsigned char 
 10978 ;; Auto vars:     Size  Location     Type
 10979 ;;  Handle          1    5[COMRAM] unsigned char 
 10980 ;; Return value:  Size  Location     Type
 10981 ;;                  1    wreg      void 
 10982 ;; Registers used:
 10983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10984 ;; Tracked objects:
 10985 ;;		On entry : 0/1
 10986 ;;		On exit  : 0/0
 10987 ;;		Unchanged: 0/0
 10988 ;; Data sizes:     COMRAM   BANK0   BANK1
 10989 ;;      Params:         0       0       0
 10990 ;;      Locals:         1       0       0
 10991 ;;      Temps:          0       0       0
 10992 ;;      Totals:         1       0       0
 10993 ;;Total ram usage:        1 bytes
 10994 ;; Hardware stack levels used: 1
 10995 ;; Hardware stack levels required when called: 2
 10996 ;; This function calls:
 10997 ;;		Nothing
 10998 ;; This function is called by:
 10999 ;;		_Espera
 11000 ;;		_WaitForBusy
 11001 ;;		_SMotor
 11002 ;;		_TeTeclat
 11003 ;;		_menu
 11004 ;;		_motorAltaveu
 11005 ;;		_GLCDMotor
 11006 ;;		_motorHora
 11007 ;;		_motorSIO
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           	psect	text87
 11012  0000'                    __ptext87:
 11013                           	callstack 0
 11014  0000'                    _TiResetTics:
 11015                           	callstack 27
 11016                           
 11017                           ;incstack = 0
 11018                           ;TiResetTics@Handle stored from wreg
 11019  0000' 6E00'              	movwf	TiResetTics@Handle^0,c
 11020                           
 11021                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 11022  0002' 5000'              	movf	TiResetTics@Handle^0,w,c
 11023  0004' 0D03               	mullw	3
 11024  0006' 50F3               	movf	243,w,c
 11025  0008' 0F00'              	addlw	low _s_Timers
 11026  000A' 6ED9               	movwf	fsr2l,c
 11027  000C' 6ADA               	clrf	fsr2h,c
 11028  000E' C00C' FFDE         	movff	_h_Tics,postinc2
 11029  0012' C00D' FFDD         	movff	_h_Tics+1,postdec2
 11030  0016' 0012               	return		;funcret
 11031  0018'                    __end_of_TiResetTics:
 11032                           	callstack 0
 11033                           
 11034 ;; *************** function _TiGetTics *****************
 11035 ;; Defined at:
 11036 ;;		line 61 in file "TiTTimer.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;  Handle          1    wreg     unsigned char 
 11039 ;; Auto vars:     Size  Location     Type
 11040 ;;  Handle          1    9[COMRAM] unsigned char 
 11041 ;;  actual          2   10[COMRAM] volatile unsigned int 
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  2    5[COMRAM] int 
 11044 ;; Registers used:
 11045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11046 ;; Tracked objects:
 11047 ;;		On entry : 0/1
 11048 ;;		On exit  : 0/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMRAM   BANK0   BANK1
 11051 ;;      Params:         2       0       0
 11052 ;;      Locals:         3       0       0
 11053 ;;      Temps:          2       0       0
 11054 ;;      Totals:         7       0       0
 11055 ;;Total ram usage:        7 bytes
 11056 ;; Hardware stack levels used: 1
 11057 ;; Hardware stack levels required when called: 2
 11058 ;; This function calls:
 11059 ;;		Nothing
 11060 ;; This function is called by:
 11061 ;;		_Espera
 11062 ;;		_WaitForBusy
 11063 ;;		_SMotor
 11064 ;;		_TeTeclat
 11065 ;;		_menu
 11066 ;;		_motorAltaveu
 11067 ;;		_GLCDMotor
 11068 ;;		_motorHora
 11069 ;;		_motorSIO
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           	psect	text88
 11074  0000'                    __ptext88:
 11075                           	callstack 0
 11076  0000'                    _TiGetTics:
 11077                           	callstack 27
 11078                           
 11079                           ;incstack = 0
 11080                           ;TiGetTics@Handle stored from wreg
 11081  0000' 6E00'              	movwf	TiGetTics@Handle^0,c
 11082                           
 11083                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 11084  0002' C00C' F00A'        	movff	_h_Tics,TiGetTics@actual	;volatile
 11085  0006' C00D' F00B'        	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 11086                           
 11087                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 11088  000A' 5000'              	movf	TiGetTics@Handle^0,w,c
 11089  000C' 0D03               	mullw	3
 11090  000E' 50F3               	movf	243,w,c
 11091  0010' 0F00'              	addlw	low _s_Timers
 11092  0012' 6ED9               	movwf	fsr2l,c
 11093  0014' 6ADA               	clrf	fsr2h,c
 11094  0016' CFDE F007'         	movff	postinc2,??_TiGetTics
 11095  001A' CFDD F008'         	movff	postdec2,??_TiGetTics+1
 11096  001E' 5000'              	movf	??_TiGetTics^0,w,c
 11097  0020' 5C00'              	subwf	TiGetTics@actual^0,w,c	;volatile
 11098  0022' 6E00'              	movwf	?_TiGetTics^0,c
 11099  0024' 5000'              	movf	(??_TiGetTics+1)^0,w,c
 11100  0026' 5800'              	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 11101  0028' 6E00'              	movwf	(?_TiGetTics+1)^0,c
 11102  002A' 0012               	return		;funcret
 11103  002C'                    __end_of_TiGetTics:
 11104                           	callstack 0
 11105                           
 11106 ;; *************** function _GLCDInit *****************
 11107 ;; Defined at:
 11108 ;;		line 26 in file "GestioLCD.c"
 11109 ;; Parameters:    Size  Location     Type
 11110 ;;		None
 11111 ;; Auto vars:     Size  Location     Type
 11112 ;;		None
 11113 ;; Return value:  Size  Location     Type
 11114 ;;                  1    wreg      void 
 11115 ;; Registers used:
 11116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11117 ;; Tracked objects:
 11118 ;;		On entry : 0/0
 11119 ;;		On exit  : 0/0
 11120 ;;		Unchanged: 0/0
 11121 ;; Data sizes:     COMRAM   BANK0   BANK1
 11122 ;;      Params:         0       0       0
 11123 ;;      Locals:         0       0       0
 11124 ;;      Temps:          0       0       0
 11125 ;;      Totals:         0       0       0
 11126 ;;Total ram usage:        0 bytes
 11127 ;; Hardware stack levels used: 1
 11128 ;; Hardware stack levels required when called: 3
 11129 ;; This function calls:
 11130 ;;		_TiGetTimer
 11131 ;; This function is called by:
 11132 ;;		_main
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           	psect	text89
 11137  0000'                    __ptext89:
 11138                           	callstack 0
 11139  0000'                    _GLCDInit:
 11140                           	callstack 27
 11141                           
 11142                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 11143                           
 11144                           ;incstack = 0
 11145  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
 11146  0004' 6E00'              	movwf	_timerGLCD^0,c
 11147  0006' 0012               	return		;funcret
 11148  0008'                    __end_of_GLCDInit:
 11149                           	callstack 0
 11150                           
 11151 ;; *************** function _TiGetTimer *****************
 11152 ;; Defined at:
 11153 ;;		line 70 in file "TiTTimer.c"
 11154 ;; Parameters:    Size  Location     Type
 11155 ;;		None
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;		None
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      unsigned char 
 11160 ;; Registers used:
 11161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/0
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1
 11167 ;;      Params:         0       0       0
 11168 ;;      Locals:         0       0       0
 11169 ;;      Temps:          1       0       0
 11170 ;;      Totals:         1       0       0
 11171 ;;Total ram usage:        1 bytes
 11172 ;; Hardware stack levels used: 1
 11173 ;; Hardware stack levels required when called: 2
 11174 ;; This function calls:
 11175 ;;		Nothing
 11176 ;; This function is called by:
 11177 ;;		_LcInit
 11178 ;;		_Sinit
 11179 ;;		_TeInit
 11180 ;;		_Minit
 11181 ;;		_initAltaveu
 11182 ;;		_GLCDInit
 11183 ;;		_initHora
 11184 ;;		_initSIO
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text90
 11189  0000'                    __ptext90:
 11190                           	callstack 0
 11191  0000'                    _TiGetTimer:
 11192                           	callstack 27
 11193                           
 11194                           ;TiTTimer.c: 74:     counter=0;
 11195                           
 11196                           ;incstack = 0
 11197  0000' 0E00               	movlw	0
 11198  0002' 6E00'              	movwf	_counter^0,c
 11199                           
 11200                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 11201  0004' D007               	goto	l4479
 11202  0006'                    l4471:
 11203                           
 11204                           ;TiTTimer.c: 76:         counter++;
 11205  0006' 2A00'              	incf	_counter^0,f,c
 11206                           
 11207                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 11208  0008' 0E08               	movlw	8
 11209  000A' 1800'              	xorwf	_counter^0,w,c
 11210  000C' A4D8               	btfss	status,2,c
 11211  000E' D002               	goto	l4479
 11212  0010' 0EFF               	movlw	255
 11213  0012' 0012               	return	
 11214  0014'                    l4479:
 11215                           
 11216                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 11217  0014' 5000'              	movf	_counter^0,w,c
 11218  0016' 0D03               	mullw	3
 11219  0018' 50F3               	movf	243,w,c
 11220  001A' 0F00'              	addlw	low (_s_Timers+2)
 11221  001C' 6ED9               	movwf	fsr2l,c
 11222  001E' 6ADA               	clrf	fsr2h,c
 11223  0020' 04DE               	decf	postinc2,w,c
 11224  0022' B4D8               	btfsc	status,2,c
 11225  0024' D7F0               	goto	l4471
 11226                           
 11227                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 11228  0026' 5000'              	movf	_counter^0,w,c
 11229  0028' 0D03               	mullw	3
 11230  002A' 50F3               	movf	243,w,c
 11231  002C' 0F00'              	addlw	low (_s_Timers+2)
 11232  002E' 6ED9               	movwf	fsr2l,c
 11233  0030' 6ADA               	clrf	fsr2h,c
 11234  0032' 0E01               	movlw	1
 11235  0034' 6EDF               	movwf	indf2,c
 11236                           
 11237                           ;TiTTimer.c: 80:     return (counter);
 11238  0036' 5000'              	movf	_counter^0,w,c
 11239  0038' 0012               	return		;funcret
 11240  003A'                    __end_of_TiGetTimer:
 11241                           	callstack 0
 11242                           
 11243 ;; *************** function _CtoA *****************
 11244 ;; Defined at:
 11245 ;;		line 22 in file "CtoA.c"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;		None
 11248 ;; Auto vars:     Size  Location     Type
 11249 ;;		None
 11250 ;; Return value:  Size  Location     Type
 11251 ;;                  1    wreg      void 
 11252 ;; Registers used:
 11253 ;;		wreg, status,2, status,0
 11254 ;; Tracked objects:
 11255 ;;		On entry : 0/1
 11256 ;;		On exit  : 0/0
 11257 ;;		Unchanged: 0/0
 11258 ;; Data sizes:     COMRAM   BANK0   BANK1
 11259 ;;      Params:         0       0       0
 11260 ;;      Locals:         0       0       0
 11261 ;;      Temps:          0       0       0
 11262 ;;      Totals:         0       0       0
 11263 ;;Total ram usage:        0 bytes
 11264 ;; Hardware stack levels used: 1
 11265 ;; Hardware stack levels required when called: 2
 11266 ;; This function calls:
 11267 ;;		Nothing
 11268 ;; This function is called by:
 11269 ;;		_main
 11270 ;; This function uses a non-reentrant model
 11271 ;;
 11272                           
 11273                           	psect	text91
 11274  0000'                    __ptext91:
 11275                           	callstack 0
 11276  0000'                    _CtoA:
 11277                           	callstack 28
 11278                           
 11279                           ;CtoA.c: 23:     if (convertir != 250) {
 11280                           
 11281                           ;incstack = 0
 11282  0000' 0EFA               	movlw	250
 11283  0002' 1800'              	xorwf	_convertir^0,w,c
 11284  0004' B4D8               	btfsc	status,2,c
 11285  0006' 0012               	return	
 11286                           
 11287                           ;CtoA.c: 24:         if (convertir != 0){
 11288  0008' 5000'              	movf	_convertir^0,w,c
 11289  000A' B4D8               	btfsc	status,2,c
 11290  000C' D00A               	goto	l3669
 11291                           
 11292                           ;CtoA.c: 25:             stringScore[1]++;
 11293  000E' 2A00'              	incf	(_stringScore+1)^0,f,c
 11294                           
 11295                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 11296  0010' 0E3A               	movlw	58
 11297  0012' 1800'              	xorwf	(_stringScore+1)^0,w,c
 11298  0014' A4D8               	btfss	status,2,c
 11299  0016' D003               	goto	l3667
 11300                           
 11301                           ;CtoA.c: 27:                 stringScore[1] = '0';
 11302  0018' 0E30               	movlw	48
 11303  001A' 6E00'              	movwf	(_stringScore+1)^0,c
 11304                           
 11305                           ;CtoA.c: 28:                 stringScore[0]++;
 11306  001C' 2A00'              	incf	_stringScore^0,f,c
 11307  001E'                    l3667:
 11308                           
 11309                           ;CtoA.c: 30:             convertir--;
 11310  001E' 0600'              	decf	_convertir^0,f,c
 11311                           
 11312                           ;CtoA.c: 31:         } else {
 11313  0020' 0012               	return	
 11314  0022'                    l3669:
 11315                           
 11316                           ;CtoA.c: 32:             convertir = 250;
 11317  0022' 0EFA               	movlw	250
 11318  0024' 6E00'              	movwf	_convertir^0,c
 11319  0026' 0012               	return		;funcret
 11320  0028'                    __end_of_CtoA:
 11321                           	callstack 0
 11322                           
 11323 ;; *************** function _high_rsi *****************
 11324 ;; Defined at:
 11325 ;;		line 22 in file "main.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;		None
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;		None
 11330 ;; Return value:  Size  Location     Type
 11331 ;;                  1    wreg      void 
 11332 ;; Registers used:
 11333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMRAM   BANK0   BANK1
 11339 ;;      Params:         0       0       0
 11340 ;;      Locals:         0       0       0
 11341 ;;      Temps:          4       0       0
 11342 ;;      Totals:         4       0       0
 11343 ;;Total ram usage:        4 bytes
 11344 ;; Hardware stack levels used: 1
 11345 ;; Hardware stack levels required when called: 1
 11346 ;; This function calls:
 11347 ;;		__TiRSITimer
 11348 ;; This function is called by:
 11349 ;;		Interrupt level 2
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	intcode
 11354  0000'                    __pintcode:
 11355                           	callstack 0
 11356  0000'                    _high_rsi:
 11357                           	callstack 24
 11358                           
 11359                           ;incstack = 0
 11360  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11361  0002' CFD9 F001'         	movff	fsr2l,??_high_rsi
 11362  0006' CFDA F002'         	movff	fsr2h,??_high_rsi+1
 11363  000A' CFF3 F003'         	movff	prodl,??_high_rsi+2
 11364  000E' CFF4 F004'         	movff	prodh,??_high_rsi+3
 11365  0012' EC00' F000'        	call	__TiRSITimer	;wreg free
 11366  0016' C004' FFF4         	movff	??_high_rsi+3,prodh
 11367  001A' C003' FFF3         	movff	??_high_rsi+2,prodl
 11368  001E' C002' FFDA         	movff	??_high_rsi+1,fsr2h
 11369  0022' C001' FFD9         	movff	??_high_rsi,fsr2l
 11370  0026' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11371  0028' 0011               	retfie		f
 11372  002A'                    __end_of_high_rsi:
 11373                           	callstack 0
 11374                           
 11375 ;; *************** function __TiRSITimer *****************
 11376 ;; Defined at:
 11377 ;;		line 37 in file "TiTTimer.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;		None
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;		None
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      void 
 11384 ;; Registers used:
 11385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMRAM   BANK0   BANK1
 11391 ;;      Params:         0       0       0
 11392 ;;      Locals:         0       0       0
 11393 ;;      Temps:          1       0       0
 11394 ;;      Totals:         1       0       0
 11395 ;;Total ram usage:        1 bytes
 11396 ;; Hardware stack levels used: 1
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		_high_rsi
 11401 ;; This function uses a non-reentrant model
 11402 ;;
 11403                           
 11404                           	psect	text93
 11405  0000'                    __ptext93:
 11406                           	callstack 0
 11407  0000'                    __TiRSITimer:
 11408                           	callstack 24
 11409                           
 11410                           ;TiTTimer.c: 39:     TMR0H = 223;
 11411                           
 11412                           ;incstack = 0
 11413  0000' 0EDF               	movlw	223
 11414  0002' 6ED7               	movwf	215,c	;volatile
 11415                           
 11416                           ;TiTTimer.c: 40:     TMR0L = 148;
 11417  0004' 0E94               	movlw	148
 11418  0006' 6ED6               	movwf	214,c	;volatile
 11419                           
 11420                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 11421  0008' 94F2               	bcf	242,2,c	;volatile
 11422                           
 11423                           ;TiTTimer.c: 42:     h_Tics++;
 11424  000A' 4A00'              	infsnz	_h_Tics^0,f,c
 11425  000C' 2A00'              	incf	(_h_Tics+1)^0,f,c
 11426                           
 11427                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 11428  000E' 0E48               	movlw	72
 11429  0010' 5C00'              	subwf	_h_Tics^0,w,c
 11430  0012' 0EEE               	movlw	238
 11431  0014' 5800'              	subwfb	(_h_Tics+1)^0,w,c
 11432  0016' A0D8               	btfss	status,0,c
 11433  0018' 0012               	return	
 11434                           
 11435                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 11436  001A' 0E00               	movlw	0
 11437  001C' 6E00'              	movwf	_counter^0,c
 11438  001E'                    i2l4665:
 11439  001E' 0E07               	movlw	7
 11440  0020' 6400'              	cpfsgt	_counter^0,c
 11441  0022' D001               	goto	i2l4669
 11442  0024' D015               	goto	i2l4677
 11443  0026'                    i2l4669:
 11444                           
 11445                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 11446  0026' 5000'              	movf	_counter^0,w,c
 11447  0028' 0D03               	mullw	3
 11448  002A' 50F3               	movf	243,w,c
 11449  002C' 0F00'              	addlw	low (_s_Timers+2)
 11450  002E' 6ED9               	movwf	fsr2l,c
 11451  0030' 6ADA               	clrf	fsr2h,c
 11452  0032' 04DE               	decf	postinc2,w,c
 11453  0034' A4D8               	btfss	status,2,c
 11454  0036' D00A               	goto	i2l4673
 11455                           
 11456                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 11457  0038' 5000'              	movf	_counter^0,w,c
 11458  003A' 0D03               	mullw	3
 11459  003C' 50F3               	movf	243,w,c
 11460  003E' 0F00'              	addlw	low _s_Timers
 11461  0040' 6ED9               	movwf	fsr2l,c
 11462  0042' 6ADA               	clrf	fsr2h,c
 11463  0044' 5000'              	movf	_h_Tics^0,w,c
 11464  0046' 5EDE               	subwf	postinc2,f,c
 11465  0048' 5000'              	movf	(_h_Tics+1)^0,w,c
 11466  004A' 5ADD               	subwfb	postdec2,f,c
 11467  004C'                    i2l4673:
 11468                           
 11469                           ;TiTTimer.c: 50:         }
 11470  004C' 2A00'              	incf	_counter^0,f,c
 11471  004E' D7E7               	goto	i2l4665
 11472  0050'                    i2l4677:
 11473                           
 11474                           ;TiTTimer.c: 51:         h_Tics=0;
 11475  0050' 0E00               	movlw	0
 11476  0052' 6E00'              	movwf	(_h_Tics+1)^0,c
 11477  0054' 0E00               	movlw	0
 11478  0056' 6E00'              	movwf	_h_Tics^0,c
 11479  0058' 0012               	return		;funcret
 11480  005A'                    __end_of__TiRSITimer:
 11481                           	callstack 0
 11482                           
 11483                           	psect	rparam
 11484  0000                     
 11485                           	psect	temp
 11486  0000'                    btemp:
 11487                           	callstack 0
 11488  0000'                    	ds	1
 11489  0000                     int$flags	set	btemp
 11490  0000                     wtemp8	set	btemp+1
 11491  0000                     ttemp5	set	btemp+1
 11492  0000                     ttemp6	set	btemp+4
 11493  0000                     ttemp7	set	btemp+8
 11494                           
 11495                           	psect	idloc
 11496                           
 11497                           ;Config register IDLOC0 @ 0x200000
 11498                           ;	unspecified, using default values
 11499  200000                     	org	2097152
 11500  200000  FF                 	db	255
 11501                           
 11502                           ;Config register IDLOC1 @ 0x200001
 11503                           ;	unspecified, using default values
 11504  200001                     	org	2097153
 11505  200001  FF                 	db	255
 11506                           
 11507                           ;Config register IDLOC2 @ 0x200002
 11508                           ;	unspecified, using default values
 11509  200002                     	org	2097154
 11510  200002  FF                 	db	255
 11511                           
 11512                           ;Config register IDLOC3 @ 0x200003
 11513                           ;	unspecified, using default values
 11514  200003                     	org	2097155
 11515  200003  FF                 	db	255
 11516                           
 11517                           ;Config register IDLOC4 @ 0x200004
 11518                           ;	unspecified, using default values
 11519  200004                     	org	2097156
 11520  200004  FF                 	db	255
 11521                           
 11522                           ;Config register IDLOC5 @ 0x200005
 11523                           ;	unspecified, using default values
 11524  200005                     	org	2097157
 11525  200005  FF                 	db	255
 11526                           
 11527                           ;Config register IDLOC6 @ 0x200006
 11528                           ;	unspecified, using default values
 11529  200006                     	org	2097158
 11530  200006  FF                 	db	255
 11531                           
 11532                           ;Config register IDLOC7 @ 0x200007
 11533                           ;	unspecified, using default values
 11534  200007                     	org	2097159
 11535  200007  FF                 	db	255
 11536                           
 11537                           	psect	config
 11538                           
 11539                           ; Padding undefined space
 11540  300000                     	org	3145728
 11541  300000  FF                 	db	255
 11542                           
 11543                           ;Config register CONFIG1H @ 0x300001
 11544                           ;	Oscillator
 11545                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 11546                           ;	Fail-Safe Clock Monitor Enable bit
 11547                           ;	FCMEN = 0x0, unprogrammed default
 11548                           ;	Internal/External Oscillator Switchover bit
 11549                           ;	IESO = 0x0, unprogrammed default
 11550  300001                     	org	3145729
 11551  300001  06                 	db	6
 11552                           
 11553                           ;Config register CONFIG2L @ 0x300002
 11554                           ;	unspecified, using default values
 11555                           ;	Power-up Timer Enable bit
 11556                           ;	PWRT = 0x1, unprogrammed default
 11557                           ;	Brown-out Reset Enable bits
 11558                           ;	BOR = 0x3, unprogrammed default
 11559                           ;	Brown-out Reset Voltage bits
 11560                           ;	BORV = 0x3, unprogrammed default
 11561  300002                     	org	3145730
 11562  300002  1F                 	db	31
 11563                           
 11564                           ;Config register CONFIG2H @ 0x300003
 11565                           ;	Watchdog Timer Enable bit
 11566                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11567                           ;	Watchdog Timer Postscale Select bits
 11568                           ;	WDTPS = 0xF, unprogrammed default
 11569  300003                     	org	3145731
 11570  300003  1E                 	db	30
 11571                           
 11572                           ; Padding undefined space
 11573  300004                     	org	3145732
 11574  300004  FF                 	db	255
 11575                           
 11576                           ;Config register CONFIG3H @ 0x300005
 11577                           ;	CCP2 MUX bit
 11578                           ;	CCP2MX = 0x1, unprogrammed default
 11579                           ;	PORTB A/D Enable bit
 11580                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 11581                           ;	Low-Power Timer1 Oscillator Enable bit
 11582                           ;	LPT1OSC = 0x0, unprogrammed default
 11583                           ;	MCLR Pin Enable bit
 11584                           ;	MCLRE = 0x1, unprogrammed default
 11585  300005                     	org	3145733
 11586  300005  81                 	db	129
 11587                           
 11588                           ;Config register CONFIG4L @ 0x300006
 11589                           ;	Stack Full/Underflow Reset Enable bit
 11590                           ;	STVREN = 0x1, unprogrammed default
 11591                           ;	Single-Supply ICSP Enable bit
 11592                           ;	LVP = OFF, Single-Supply ICSP disabled
 11593                           ;	Boot Block Size Select bits
 11594                           ;	BBSIZ = 0x0, unprogrammed default
 11595                           ;	Extended Instruction Set Enable bit
 11596                           ;	XINST = 0x0, unprogrammed default
 11597                           ;	Background Debugger Enable bit
 11598                           ;	DEBUG = 0x1, unprogrammed default
 11599  300006                     	org	3145734
 11600  300006  81                 	db	129
 11601                           
 11602                           ; Padding undefined space
 11603  300007                     	org	3145735
 11604  300007  FF                 	db	255
 11605                           
 11606                           ;Config register CONFIG5L @ 0x300008
 11607                           ;	unspecified, using default values
 11608                           ;	Code Protection bit
 11609                           ;	CP0 = 0x1, unprogrammed default
 11610                           ;	Code Protection bit
 11611                           ;	CP1 = 0x1, unprogrammed default
 11612  300008                     	org	3145736
 11613  300008  03                 	db	3
 11614                           
 11615                           ;Config register CONFIG5H @ 0x300009
 11616                           ;	unspecified, using default values
 11617                           ;	Boot Block Code Protection bitProtect Boot
 11618                           ;	CPB = 0x1, unprogrammed default
 11619                           ;	Data EEPROM Code Protection bit
 11620                           ;	CPD = 0x1, unprogrammed default
 11621  300009                     	org	3145737
 11622  300009  C0                 	db	192
 11623                           
 11624                           ;Config register CONFIG6L @ 0x30000A
 11625                           ;	unspecified, using default values
 11626                           ;	Write Protection bit
 11627                           ;	WRT0 = 0x1, unprogrammed default
 11628                           ;	Write Protection bit
 11629                           ;	WRT1 = 0x1, unprogrammed default
 11630  30000A                     	org	3145738
 11631  30000A  03                 	db	3
 11632                           
 11633                           ;Config register CONFIG6H @ 0x30000B
 11634                           ;	unspecified, using default values
 11635                           ;	Configuration Register Write Protection bit
 11636                           ;	WRTC = 0x1, unprogrammed default
 11637                           ;	Boot Block Write Protection bit
 11638                           ;	WRTB = 0x1, unprogrammed default
 11639                           ;	Data EEPROM Write Protection bit
 11640                           ;	WRTD = 0x1, unprogrammed default
 11641  30000B                     	org	3145739
 11642  30000B  E0                 	db	224
 11643                           
 11644                           ;Config register CONFIG7L @ 0x30000C
 11645                           ;	unspecified, using default values
 11646                           ;	Table Read Protection bit
 11647                           ;	EBTR0 = 0x1, unprogrammed default
 11648                           ;	Table Read Protection bit
 11649                           ;	EBTR1 = 0x1, unprogrammed default
 11650  30000C                     	org	3145740
 11651  30000C  03                 	db	3
 11652                           
 11653                           ;Config register CONFIG7H @ 0x30000D
 11654                           ;	unspecified, using default values
 11655                           ;	Boot Block Table Read Protection bit
 11656                           ;	EBTRB = 0x1, unprogrammed default
 11657  30000D                     	org	3145741
 11658  30000D  40                 	db	64
 11659                           tosu	equ	0xFFF
 11660                           tosh	equ	0xFFE
 11661                           tosl	equ	0xFFD
 11662                           stkptr	equ	0xFFC
 11663                           pclatu	equ	0xFFB
 11664                           pclath	equ	0xFFA
 11665                           pcl	equ	0xFF9
 11666                           tblptru	equ	0xFF8
 11667                           tblptrh	equ	0xFF7
 11668                           tblptrl	equ	0xFF6
 11669                           tablat	equ	0xFF5
 11670                           prodh	equ	0xFF4
 11671                           prodl	equ	0xFF3
 11672                           indf0	equ	0xFEF
 11673                           postinc0	equ	0xFEE
 11674                           postdec0	equ	0xFED
 11675                           preinc0	equ	0xFEC
 11676                           plusw0	equ	0xFEB
 11677                           fsr0h	equ	0xFEA
 11678                           fsr0l	equ	0xFE9
 11679                           wreg	equ	0xFE8
 11680                           indf1	equ	0xFE7
 11681                           postinc1	equ	0xFE6
 11682                           postdec1	equ	0xFE5
 11683                           preinc1	equ	0xFE4
 11684                           plusw1	equ	0xFE3
 11685                           fsr1h	equ	0xFE2
 11686                           fsr1l	equ	0xFE1
 11687                           bsr	equ	0xFE0
 11688                           indf2	equ	0xFDF
 11689                           postinc2	equ	0xFDE
 11690                           postdec2	equ	0xFDD
 11691                           preinc2	equ	0xFDC
 11692                           plusw2	equ	0xFDB
 11693                           fsr2h	equ	0xFDA
 11694                           fsr2l	equ	0xFD9
 11695                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    145
    Data        59
    BSS         303
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     121
    BANK0           128      5      87
    BANK1           256      0     184

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_motorSIO
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40114
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0   10139
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      75
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4220
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   10952
                                              0 BANK0      5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    4     2      2      22
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          4     4      0     460
                                             10 COMRAM     4     4      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2601
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1201
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0   10027
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2601
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              9 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3244
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2269
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      57       4       68.0%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     16      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     188       7        0.0%
DATA                 0      0     188       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri May 06 17:20:42 2022

               TiResetTics@Handle 000005                  _loginNOTRegister 000010  
                               _i 00002A                                 _j 000029  
                UgetUserName@quin 000007         ??_UcheckExistsNotFinished 000005  
          __end_of_compareStrings 000046                               l513 00006A  
                             l610 0004DA                               l540 0001DA  
                             l541 0001EE                               l543 0001FA  
                             l733 00001C                               l742 000018  
                             l752 000068                               l754 00006E  
                             l747 00002C                               l739 00000A  
                             l851 00001E                               l749 000032  
                             l791 00002E                               l784 000002  
                             l785 000018                               l794 000056  
                             l882 000002                               l963 000092  
                             l787 000024                               l975 000126  
                             l993 0002CC                               l995 0002FC  
                             u230 00001C                               u250 000038  
                             u308 00006C                               u270 000052  
                             u248 00001E                               u290 00006A  
                             u268 00003A                               u288 000054  
                             _pos 00002F                               _tmp 000033  
                ??_CantaPartBaixa 000005                               prod 000FF3  
                             wreg 000FE8       __size_of_calculateShowUsers 000000  
                     _ultimaTecla 00000E                __size_of_GLCDMotor 000000  
                            l1040 0000D2                              l1032 000002  
                            l1041 00005C                              l1033 00001C  
                            l1042 000076                              l1035 000040  
                            l1044 00009A                              l1306 000174  
                            l1184 000016                              l2209 000008  
                            l3107 0000B6                              l2331 000010  
                            l1291 0000A0                              l3045 000034  
                            l3037 000018                              l2271 000008  
                            l2407 000008                              l2343 00003A  
                            l2335 00001E                              l2249 000008  
                            l2353 000008                              l1298 0000CE  
                            l2179 000008                              l3083 00008E  
                            l3075 000072                              l3059 000058  
                            l2339 00002C                              l5003 0000E8  
                            l2373 00000E                              l5013 00011E  
                            l5005 0000EE                              l2519 000004  
                            l5111 000086                              l2391 000032  
                            l5023 000156                              l6001 000326  
                            l3097 0000B2                              l2385 000026  
                            l5041 0001AE                              l5033 000186  
                            l6011 000370                              l5107 000080  
                            l2379 00001A                              l4405 000012  
                            l6005 00034C                              l5061 000002  
                            l5053 0001D8                              l4431 000008  
                            l4511 00002C                              l6031 000064  
                            l2735 000028                       _puntuacions 000000  
                            l4513 000036                              l6041 00007A  
                            l6033 00006A                              l6025 000054  
                            l6027 000058                              l6019 000044  
                            l5083 000042                              l4437 000010  
                            l4701 000002                              l6053 00009E  
                            l2765 0000AA                              l5077 000034  
                            l4471 000006                              l4519 000046  
                            l4607 000026                              l6063 0000B8  
                            l6047 000088                              l6073 0000F4  
                            l5089 000050                              l3667 00001E  
                            l4811 000170                              l6083 00010A  
                            l6067 0000C4                              l6059 0000AC  
                            l5099 000070                              l3669 000022  
                            l4725 00004A                              l4709 000016  
                            l6093 000122                              l4581 00001E  
                            l6421 000102                              l6405 0000CA  
                            l4479 000014                              l4831 0001A4  
                            l4727 000050                              l6087 000116  
                            l6079 000102                              l4575 000002  
                            l5711 00001E                              l6503 0001E8  
                            l6415 0000F2                              l6407 0000D0  
                            l4825 000194                              l4817 00017A  
                            l4761 0000D4                              l4753 0000B8  
                            l4737 00007A                              l5801 0001B8  
                            l6433 00011A                              l6417 0000F8  
                            l6353 000002                              l4835 0001AC  
                            l4747 0000A0                              l6603 000302  
                            l4685 00001C                              l5741 000096  
                            l5725 00005A                              l6613 00031E  
                            l6517 00020E                              l4917 000088  
                            l4909 000072                              l4925 000096  
                            l4933 000002                              l4775 0000FE  
                            l4767 0000EA                              l4855 0001C0  
                            l5743 00009C                              l5727 000060  
                            l6623 00034A                              l6615 000324  
                            l6463 00017E                              l6447 000146  
                            l6375 000058                              l6359 00001C  
                            l4951 00003E                              l4943 00001E  
                            l5913 000160                              l5841 000044  
                            l5825 000002                              l4689 000024  
                            l5809 0001C2                              l5737 00008C  
                            l5817 0001CE                              l6721 000440  
                            l6545 00024A                              l6537 000238  
                            l6529 000226                              l6457 00016E  
                            l6449 00014C                              l6377 00005E  
                            l6369 000046                              l5681 000066  
                            l5673 000038                              l5665 000028  
                            l5657 000014                              l4873 000002  
                            l5923 0001A8                              l5835 000036  
                            l4795 000148                              l4787 00012A  
                            l4779 00010A                              l5771 000152  
                            l5755 0000E8                              l6803 0005BE  
                            l6731 00045E                              l6627 000362  
                            l6571 0002A6                              l6475 000196  
                            l6459 000174                              l5659 00001A  
                            l4963 00006C                              l5781 00016A  
                            l6813 0005D8                              l6805 0005C4  
                            l6709 00041A                              l6557 000278  
                            l6493 0001C6                              l6397 0000B0  
                            l6389 000088                              l5693 000092  
                            l4973 000082                              l4965 000072  
                            l5919 000186                              l5855 0000A0  
                            l4799 00014C                              l5759 0000FA  
                            l6823 00061E                              l6647 00039C  
                            l4895 00003C                              l4959 000062  
                            l5945 00021A                              l5929 0001D2  
                            l5849 000070                              l5793 000184  
                            l6817 0005E2                              l6761 0004D6  
                            l6753 0004A6                              l6745 00047A  
                            l6681 0003E2                              l6665 0003C2  
                            l6585 0002D4                              l4897 000042  
                            l4889 00002C                              l6921 000046  
                            l5939 00020A                              l5883 000116  
                            l5787 000178                              l6843 000678  
                            l6835 00065A                              l6763 0004E0  
                            l6739 00046C                              l6587 0002DA  
                            l5877 000102                              l5869 0000F4  
                            l6845 00067E                              l6781 00056E  
                            l6773 000518                              l6693 000402  
                            l5991 00030A                              l5983 0002F6  
                            l5975 0002D6                              l5967 0002A6  
                            l5959 000276                              l6855 0006CE  
                            l6793 0005A6                              l6785 00058A  
                            l6769 0004F6                              l6697 000406  
                            l5995 000312                              l6795 0005AC  
                            l6779 000568                              l6869 00070E  
                            l6789 00059C                              l6879 00072E  
                            STR_1 0000DF                              STR_2 0000BB  
                            STR_3 0000EE                              STR_4 0000E7  
                            STR_5 0000C6                              STR_6 0000A2  
                            STR_7 000092                              STR_8 0000D7  
                            STR_9 0000AF                              u4000 0000E4  
                            _LATD 000F8C                              u4120 000182  
                            u4040 00011A                              u4130 00019C  
                            u3500 000042                              u3520 00005A  
                            u3600 00005A                              u4410 000134  
                            u3460 00000C                              u3540 00000C  
                            u3518 000044                              u3480 000028  
                            u3560 000028                              u6200 000024  
                            u3538 00005C                              u3618 00005C  
                            u6210 000034                              u4370 0000A8  
                            u3580 000042                              u4380 0000AC  
                            u3478 00000E                              u3558 00000E  
                            u6206 000026                              u3750 00002A  
                            u7110 000592                              u3760 0000D4  
                            u3920 00006E                              u6216 000036  
                            u7200 00066E                              u3498 00002A  
                            u3578 00002A                              u3780 000024  
                            u6180 00000A                              u5620 000028  
                            u7220 000692                              u3598 000044  
                            u3790 00004C                              u6190 000014  
                            u5640 000050                              u6610 000204  
                            u3787 00001A                              u5820 000040  
                            u6196 000016                              u6188 00000C  
                            u6540 0001A6                              u3797 000042  
                            u6470 00012A                              u5920 00011E  
                            u5760 0001AA                              u6590 0001F4  
                            u5890 0000FC                              u6960 00042A  
                            u6970 000432                              _CtoA 000000  
                 ??_SsetNovaTecla 000005            __end_of_SIOcheckKrebut 00000C  
                            _cap1 000007                              _Rows 000040  
                            _cap2 000006                              _main 000000  
                            _hora 000012                              _menu 000000  
                            _nota 000027             getArrayShowUsers@quin 000008  
                 __end_of_HJugant 000006                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 000000  
                 __end_of_JJuguem 000008                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 000024  
                            start 000000*                  __end_of_CantaIR 000032  
                    ?_initAltaveu 000000                     LcInit@columns 000010  
                    ___param_bank 000000                       _stringScore 000018  
                __end_of_GLCDInit 000008          __size_of_SIONovaDireccio 000000  
                  _HClearNouSegon 000000                             ?_CtoA 000000  
              __size_of_CToAReset 000000                       Espera@Timer 00000F  
                           ?_main 000000           __size_of_escriureEEPROM 000000  
                           ?_menu 000000                             _EEADR 000FA9  
                           STR_10 0000CF                     ??_TiInitTimer 000005  
                           _T0CON 000FD5                   ?_compareStrings 000005  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 000000  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 000000                             _TXREG 000FAD  
                           _SMSon 000000                             _TXSTA 000FAC  
                     _MNovaLletra 000000                             _Minit 000000  
                __end_of_HGetTime 000004                             _Sinit 000000  
                           _Timer 00003C                             _Uinit 000000  
                 __end_of_initSIO 000008                             _s_ptr 00000E  
                           _score 000011                             _nou_s 000012  
           __end_of_JoystickMotor 0000EA                   _HActualitzaHora 000000  
     __size_of_escriureCharEEPROM 000000                    __pbitbssCOMRAM 000000  
                           tablat 000FF5                       _LcNewString 000000  
                   ??_TiResetTics 000005                   ?_SIOcheckKrebut 000000  
              _UshowUsersCalculat 000000                             ttemp5 000001  
                           ttemp6 000004                             ttemp7 000008  
                           status 000FD8                  ?_checkHoraAcabat 000000  
                           wtemp8 000001     __size_of_UcheckExistsGetError 000000  
              __size_of_HNouSegon 000000                  __end_of_LcGotoXY 00003A  
            CToAConverteix@numero 000005                  __end_of_LcLliure 00000C  
                   ??__TiRSITimer 000000                  __end_of_LcScroll 000008  
                      _TiGetTimer 000000           EscriuPrimeraOrdre@ordre 000006  
                    __end_of_CtoA 000028                  __end_of_JendGame 000004  
                     ?_SIOendGame 000000                   __initialization 000000  
             ?_UshowUsersCalculat 000000                __size_of_CantaData 000000  
                    __end_of_main 000078            __end_of_HClearNouSegon 000004  
                    __end_of_menu 00081A           ?_SIOHaAcabatPuntuacions 000000  
           __size_of_MNouJoystick 000000                      ?_playAltaveu 000000  
               __end_of_GLCDMotor 0003CA                  __end_of_TeTeclat 000164  
                   _indexNextUser 00002C                            ??_CtoA 000005  
                          ??_main 000016                            ??_menu 000000  
              __size_of_LcPutChar 000000               _arrayMostrarUsuaris 000009  
                   __activetblptr 000002                     _ultimaTeclaAD 000019  
          __size_of_JnovaDireccio 000000                  GLCDMotor@length1 00001B  
                GLCDMotor@length2 00001A                        _JnovaTecla 000000  
                __end_of_UgetTop5 000012                            ?_LcLCD 000000  
                          ?_SMSon 000000                      ?_CToAobtenir 000005  
                          ?_Minit 000000              ??_UshowUsersCalculat 000005  
                          ?_Sinit 000000                            ?_Uinit 000000  
              __size_of_NoFerMenu 000000                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
             __end_of_TiInitTimer 000038                            _ADRESH 000FC4  
                          _EEDATA 000FA8                         ??_HJugant 000005  
                          _EECON2 000FA7                __size_of_URegister 000000  
              __size_of_HnoJugant 000000                         ??_JJuguem 000005  
              __size_of_SiFerMenu 000000          ??_escriure2usuarisStruct 000005  
                       ??_LcClear 000013                         ??_CantaIR 000007  
                          i2l4673 00004C                            i2l4665 00001E  
                          i2l4677 000050                            i2l4669 000026  
                  LcGotoXY@Fisics 00000E                    LcGotoXY@Column 000012  
                   ??_WaitForBusy 00000C                __size_of_TiGetTics 000000  
                          _SPBRGH 000FB0                    _sumaPulsacions 00003B  
               __end_of_CToAReset 00000A                            _SMSoff 000000  
              SIONovaDireccio@num 000005                            _LcInit 000000  
                    _MNouJoystick 000000                    _UgetNumUsuaris 000000  
                          _SMotor 000000               escriureCharEEPROM@c 000006  
                          _TeInit 000000                            _Espera 000000  
                    _LcGotoXY$336 000010                            _Krebut 000000  
  __end_of_SIOHaAcabatPuntuacions 000004                            _RowAct 00003E  
             __end_of_TiResetTics 000018                            Uinit@i 000007  
                          Uinit@j 000008                  __end_of_high_rsi 00002A  
                          _h_Tics 00000C                   ?_HClearNouSegon 000000  
                   ?_CToAHaAcabat 000000                  __end_of_initHora 000008  
                          _borram 00000D               __end_of__TiRSITimer 00005A  
                __end_of_menuList 000092                            clear_0 000046  
                          clear_1 000052                            clear_2 000064  
                          _jugant 000005                            _segons 000016  
                      _UenviaChar 000000                            isa$std 000001  
              __size_of_UgetScore 000000                        UenviaPas@c 000006  
     __size_of_EscriuPrimeraOrdre 000000                 __end_of_HNouSegon 00000C  
                       ??_initSIO 000006                      __pdataCOMRAM 000000  
          __size_of_CantaPartAlta 000000                  __end_of_motorSIO 000226  
              __size_of_UenviaPas 000000           __end_of_HActualitzaHora 000036  
               ??_SIONovaDireccio 000005                  __end_of_motorJoc 0000BA  
                    __mediumconst 000000*                           tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                ??_CToAConverteix 000005                __size_of_UnewScore 000000  
             __size_of_SIOendGame 000000                 __end_of_CantaData 000032  
                    TeTeclat@cols 000036                         ?_GLCDInit 000000  
                   ?_UcheckExists 000000                        __accesstop 000000* 
         __end_of__initialization 00006A            __end_of_UgetNumUsuaris 000004  
               __end_of_LcPutChar 000052                     _JnovaDireccio 000000  
                JnovaDireccio@dir 000005                     ___rparam_used 000001  
                   __end_of_LcLCD 00005E                       ?_TiGetTimer 000000  
                   __end_of_SMSon 000006                 SIONovaTecla@tecla 000005  
                  __pcstackCOMRAM 000000                     __end_of_Minit 000008  
             __end_of_WaitForBusy 000040                     __end_of_Sinit 000008  
                   __end_of_Uinit 0000B4                 __end_of_NoFerMenu 000004  
                       ?_HGetTime 000005                      __pidataBANK0 000000  
                  ??_CToAHaAcabat 000005              __size_of_initAltaveu 000000  
               __end_of_URegister 000004                 __end_of_HnoJugant 000004  
               __end_of_SiFerMenu 000004                    _escriureEEPROM 000000  
               __end_of_TiGetTics 00002C                       _TiInitTimer 000000  
                     ?_JnovaTecla 000000                           ??_LcLCD 000014  
                         ??_SMSon 000005                         ?_LcGotoXY 00000D  
                       ?_LcLliure 000000                           ??_Minit 000006  
                       ?_LcScroll 000000                           ??_Sinit 000006  
                 JnovaTecla@tecla 000005                           ??_Uinit 000005  
            __size_of_init_eusart 000000                         ?_JendGame 000000  
                  ??_UcheckExists 000005               MNouJoystick@posicio 000005  
                      ??_GLCDInit 000006           __size_of_GLCDMostraMenu 000000  
                      __pbssBANK0 000000                        __pbssBANK1 000000  
 __size_of_escriure2usuarisStruct 000000                         ?_TeTeclat 000000  
                     _TiResetTics 000000                   ?_UgetNumUsuaris 000000  
                  ?_JnovaDireccio 000000                     ??_UmotorUsers 00000A  
               __end_of_UgetScore 000012                     ?_JoystickInit 000000  
                         ?_SMSoff 000000                           ?_LcInit 000010  
                   _CantaPartAlta 000000                           ?_SMotor 000000  
                         ?_TeInit 000000                           ?_Espera 00000C  
               __end_of_UenviaPas 000010                       __TiRSITimer 000000  
             _indexNextUserStruct 00002B                         ?_UgetTop5 000000  
               __end_of_UnewScore 000048                        ??_HGetTime 000007  
                   ?_UgetUserName 000005                  ??_compareStrings 000008  
          __end_of_escriureEEPROM 00002E                           _BAUDCON 000FB8  
                     ?_UenviaChar 000005              __size_of_playAltaveu 000000  
              __size_of_motorHora 000000            __size_of_MsetNovaTecla 000000  
      __end_of_calculateShowUsers 000004                           LcInit@i 000012  
                ?_HActualitzaHora 000005                        ??_LcGotoXY 00000E  
                    ?_MNovaLletra 000000                        ??_LcLliure 000005  
                      ??_LcScroll 000008                  ??_SIOcheckKrebut 000005  
             __size_of_TiGetTimer 000000              __size_of_CToAobtenir 000000  
                      ??_JendGame 000005                           _HJugant 000000  
                       ?_high_rsi 000000                           _JJuguem 000000  
                         _LcClear 000000                           _CantaIR 000000  
                    ?_LcNewString 000009                    ??_JoystickInit 000005  
                       ?_initHora 000000                        ??_TeTeclat 00000C  
                     _WaitForBusy 000000                    ?_CantaPartAlta 000000  
                         _Columns 00003F             __end_of_SsetNovaTecla 000008  
                 __size_of_SMSoff 000000                   __size_of_LcInit 000000  
                         __Hparam 000000                   __size_of_SMotor 000000  
             __size_of_JnovaTecla 000000                   __size_of_TeInit 000000  
                 __size_of_Espera 000000                           __Lparam 000000  
                      ??_UgetTop5 000005                      ??_SIOendGame 000005  
                       ?_motorSIO 000000                         ?_motorJoc 000000  
                  ??_UgetUserName 000007                 _getArrayShowUsers 000000  
             __end_of_UmotorUsers 000204          ?_UcheckExistsNotFinished 000000  
                 ?_escriureEEPROM 000000                     ?_motorAltaveu 000000  
                    __psmallconst 000000                ?_getArrayShowUsers 000005  
          _escriure2usuarisStruct 000000                           __pcinit 000000  
    __end_of_UcheckExistsGetError 000004                           _ferMenu 000009  
                      _init_ports 000000                           __ramtop 000000* 
                         __ptext0 000000                           __ptext1 000000  
                         __ptext2 000000                           __ptext3 000000  
                         __ptext4 000000                           __ptext5 000000  
                         __ptext6 000000                           __ptext7 000000  
                         __ptext8 000000                           __ptext9 000000  
                       _T0CONbits 000FD5                         _GLCDMotor 000000  
                       CantaIR@IR 000007                           _initSIO 000000  
                         _counter 000034                           _horaTmp 000041  
          conversorJoystick@direc 000005               ??_getArrayShowUsers 000007  
                     UenviaChar@c 000006        __end_of_escriureCharEEPROM 000024  
                LcNewString@new_s 000009                   WaitForBusy@Busy 00000C  
                     Uinit@j_1190 000009                      _do_showUsers 00000C  
                         _userPtr 00000A                 GLCDMostraMenu@num 000005  
              __end_of_SIOendGame 000004                        ??_high_rsi 000001  
            __end_of_CToAHaAcabat 000004              end_of_initialization 00006A  
                         _usuaris 000000                     UgetScore@quin 000005  
                 ??_JnovaDireccio 000005                        ??_initHora 000006  
         __size_of_CantaPartBaixa 000000                     __Lmediumconst 000000* 
                 TiGetTics@Handle 000009                     _MsetNovaTecla 000000  
             __size_of_UenviaChar 000000                 _conversorJoystick 000000  
               __end_of_motorHora 00009E                  ??_HClearNouSegon 000005  
                      _novaLletra 00000C         __end_of_getArrayShowUsers 000020  
              ?_conversorJoystick 000000                   _usuariActualSIO 000003  
                      ??_motorSIO 000014                         _CToAReset 000000  
                      ??_motorJoc 000013                   TiGetTics@actual 00000A  
                   ?_SIONovaTecla 000000                        GLCDMotor@j 000020  
                         postdec1 000FE5                           postdec2 000FDD  
                 _SIONovaDireccio 000000                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 00000C          __size_of_checkHoraAcabat 000000  
                      _numUsuaris 00002D              __end_of_UcheckExists 000004  
                   TeTeclat@files 000035               ??_conversorJoystick 000005  
              SIOStartGame@usuari 000005            __size_of_JoystickMotor 000000  
                   TeTeclat@state 000037                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 000000  
                   ?_SIOStartGame 000000                         _TRISCbits 000F94  
                       _TRISDbits 000F95       __size_of_UshowUsersCalculat 000000  
                       _HNouSegon 000000                    _GLCDMostraMenu 000000  
       __end_of_conversorJoystick 000036                   ??_CantaPartAlta 000005  
                  ?_MsetNovaTecla 000000                         _CantaData 000000  
               __size_of_GLCDInit 000000                       _UmotorUsers 000000  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 00000C  
                  __end_of_SMSoff 000006                      ??_TiGetTimer 000005  
                  __end_of_LcInit 0000E0                    ??_SIONovaTecla 000005  
                      ?_CToAReset 000000                    __end_of_SMotor 0001FC  
                       _LcPutChar 000000                    __end_of_TeInit 000008  
               motorAltaveu@state 000024                    __end_of_Espera 000024  
                  GLCDMotor@state 000021        __end_of_EscriuPrimeraOrdre 00007A  
               __size_of_HGetTime 000000                     __pidataCOMRAM 000000  
                     ?_init_ports 000000                         _NoFerMenu 000000  
                       _ColumnAct 00003D              __end_of_JoystickInit 000012  
                  ??_SIOStartGame 000005                         _URegister 000000  
                       _HnoJugant 000000                      ?_TiInitTimer 000000  
                    ??_JnovaTecla 000005                         _SiFerMenu 000000  
             start_initialization 000000                         _TiGetTics 000000  
          __end_of_GLCDMostraMenu 00000C                        ?_HNouSegon 000000  
                ??_UgetNumUsuaris 000005                  UmotorUsers@state 000028  
               __size_of_LcGotoXY 000000              __end_of_UgetUserName 000014  
              __end_of_TiGetTimer 00003A                   _do_updateScores 00000B  
                   JJuguem@usuari 000005              __size_of_MNovaLletra 000000  
               __size_of_LcLliure 000000                 __size_of_LcScroll 000000  
                   _JoystickMotor 000000                 __size_of_JendGame 000000  
                    ?_TiResetTics 000000                        ?_CantaData 000000  
            _UcheckExistsGetError 000000           __end_of_SIONovaDireccio 000008  
            __size_of_LcNewString 000000                          ??_SMSoff 000005  
                        ??_LcInit 000011                         _NovaTecla 00000D  
               __size_of_TeTeclat 000000                          ??_SMotor 00000C  
      __size_of_getArrayShowUsers 000000                          ??_TeInit 000006  
                    ?__TiRSITimer 000000                     ??_initAltaveu 000006  
                        ??_Espera 00000E                         _UgetScore 000000  
              __end_of_JnovaTecla 000008                        ?_LcPutChar 000000  
                       _UenviaPas 000000                 __size_of_UgetTop5 000000  
                     __pdataBANK0 000000                    motorHora@state 000015  
                    _menuDaltGLCD 000022                      ??_UenviaChar 000006  
                       _UnewScore 000000                        ?_NoFerMenu 000000  
                     ??_GLCDMotor 000014                        ?_URegister 000000  
                      ?_HnoJugant 000000                 ??_checkHoraAcabat 000005  
                   ??_init_eusart 000005                        ?_SiFerMenu 000000  
                     __pbssCOMRAM 000000             __size_of_CToAHaAcabat 000000  
                   __pcstackBANK0 000000                        ?_TiGetTics 000005  
                 ?_GLCDMostraMenu 000000                          ?_HJugant 000000  
                  ?_JoystickMotor 000000                   ??_MsetNovaTecla 000005  
            __end_of_motorAltaveu 0000B6                          ?_JJuguem 000000  
                        ?_LcClear 000000                          ?_CantaIR 000000  
      __size_of_conversorJoystick 000000                _calculateShowUsers 000000  
                  _CantaPartBaixa 000000          ??_SIOHaAcabatPuntuacions 000005  
           ?_UcheckExistsGetError 000000                 __size_of_high_rsi 000000  
                    ?_WaitForBusy 000000               __size_of_init_ports 000000  
              MsetNovaTecla@tecla 000005                SsetNovaTecla@tecla 000005  
              __end_of_UenviaChar 000010           __size_of_CToAConverteix 000000  
               __size_of_initHora 000000                  ??_escriureEEPROM 000005  
           __size_of_UcheckExists 000000               ?_calculateShowUsers 000000  
                      ?_UgetScore 000000                       ??_CToAReset 000005  
         ?_escriure2usuarisStruct 000000                         __pintcode 000000  
                   ??_playAltaveu 000005                        ?_UenviaPas 000005  
               __size_of_motorSIO 000000                 __size_of_motorJoc 000000  
                 CantaPartBaixa@c 000006                      _CToAHaAcabat 000000  
             __end_of_initAltaveu 000008                        ?_UnewScore 000000  
                       _arrayZero 000011                          ?_initSIO 000000  
                     __smallconst 000000*                        _convertir 000000  
                   ??_CToAobtenir 000007                    __size_of_LcLCD 000000  
                  __size_of_SMSon 000000              ??_calculateShowUsers 000005  
__size_of_UcheckExistsNotFinished 000000                    __size_of_Minit 000000  
            __end_of_SIONovaTecla 000008                    __size_of_Sinit 000000  
                     ??_HNouSegon 000005                    __size_of_Uinit 000000  
                     _direccioSIO 000002                       _direccioJoc 000014  
          __end_of_CantaPartBaixa 000068                JoystickMotor@state 000018  
                        _GLCDInit 000000                escriureEEPROM@caca 000005  
                     _do_register 00000E               __end_of_init_eusart 000016  
                       _newString 000008                      _UcheckExists 000000  
                       _jugantSIO 000001          __size_of_HActualitzaHora 000000  
                       _jugantJoc 000002                      UgetTop5@quin 000005  
                     ??_CantaData 000007                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   ?_MNouJoystick 000000                  ?_SIONovaDireccio 000000  
            __end_of_SIOStartGame 000008                     UenviaChar@pos 000005  
  __end_of_escriure2usuarisStruct 00005C                _escriureCharEEPROM 000000  
                       _novaTecla 000010                         _novaScore 000008  
                   motorSIO@state 000010                          _PIR1bits 000F9E  
                     ??_LcPutChar 000013                         _timerGLCD 000023  
                       _motorHora 000000                          _RCONbits 000FD0  
                       _reproduir 00000A                          _HGetTime 000000  
           __size_of_JoystickInit 000000                         _timerHora 000017  
                       _timerMenu 000032               ?_escriureCharEEPROM 000005  
                     ??_NoFerMenu 000005                        _ADCON0bits 000FC2  
                     ??_URegister 000005                       ??_HnoJugant 000005  
                     ??_SiFerMenu 000005             __size_of_UgetUserName 000000  
             __end_of_playAltaveu 000004            __size_of_SsetNovaTecla 000000  
                        Espera@ms 00000C                         _zeroTecla 00003A  
                        _LcGotoXY 000000                    _usuariLoguejat 00000A  
                        _LcLliure 000000                       ??_TiGetTics 000007  
         __size_of_compareStrings 000000              __size_of_TiInitTimer 000000  
                        _LcScroll 000000                   ??_JoystickMotor 000006  
                   GLCDMotor@max1 000007                     GLCDMotor@max2 000006  
                   GLCDMotor@min1 00001F                     GLCDMotor@min2 00001E  
                    _teclaPremuda 000014                          _JendGame 000000  
                       _usuariJoc 000005                       LcGotoXY@Row 00000D  
                       copy_data0 000014                         copy_data1 000034  
            ??_escriureCharEEPROM 000006                   ?_CantaPartBaixa 000000  
             __end_of_CToAobtenir 000004                  __size_of_HJugant 000000  
          ??_UcheckExistsGetError 000005             escriureCharEEPROM@pos 000005  
                __size_of_JJuguem 000000                  __size_of_LcClear 000000  
                __size_of_CantaIR 000000                          _TeTeclat 000000  
           __end_of_JnovaDireccio 000008                    ??_MNouJoystick 000005  
 __size_of_SIOHaAcabatPuntuacions 000000                      ?_UmotorUsers 000000  
                    _JoystickInit 000000                        _EECON1bits 000FA6  
                     _indexUsuari 000030           __size_of_SIOcheckKrebut 000000  
            __size_of_TiResetTics 000000                     motorJoc@state 000013  
                        __Hrparam 000000*                      _initAltaveu 000000  
                     ??_UgetScore 000005                          _UgetTop5 000000  
                       menu@state 00002E                          __Lrparam 000000* 
                      ?_motorHora 000000              __size_of__TiRSITimer 000000  
                    _UgetUserName 000000                       ??_UenviaPas 000006  
                    _novaDireccio 00000B                       ??_UnewScore 000005  
                    ??_init_ports 000005               HActualitzaHora@nova 000005  
      __end_of_UshowUsersCalculat 00000C                       _init_eusart 000000  
                __size_of_initSIO 000000             __size_of_motorAltaveu 000000  
                    _novaTeclaJOC 000004                      _novaTeclaSIO 000001  
                 _do_check_exists 00000F                          __ptext10 000000  
                        __ptext11 000000                _EscriuPrimeraOrdre 000000  
                        __ptext20 000000                          __ptext12 000000  
                        __ptext21 000000                          __ptext13 000000  
                        __ptext30 000000                          __ptext22 000000  
                        __ptext14 000000                          __ptext31 000000  
                        __ptext23 000000                          __ptext15 000000  
                        __ptext40 000000                          __ptext32 000000  
                        __ptext24 000000                          __ptext16 000000  
                        __ptext41 000000                          __ptext33 000000  
                        __ptext25 000000                          __ptext17 000000  
                        __ptext50 000000                          __ptext42 000000  
                        __ptext34 000000                          __ptext26 000000  
                        __ptext18 000000                          __ptext51 000000  
                        __ptext43 000000                          __ptext35 000000  
                        __ptext27 000000                          __ptext19 000000  
                        __ptext60 000000                          __ptext52 000000  
                        __ptext44 000000                          __ptext36 000000  
                        __ptext28 000000                          __ptext61 000000  
                        __ptext53 000000                          __ptext45 000000  
                        __ptext37 000000                          __ptext29 000000  
                        __ptext70 000000                          __ptext62 000000  
                        __ptext54 000000                          __ptext46 000000  
                        __ptext38 000000                          __ptext71 000000  
                        __ptext63 000000                          __ptext55 000000  
                        __ptext47 000000                          __ptext39 000000  
                        __ptext80 000000                          __ptext72 000000  
                        __ptext64 000000                          __ptext56 000000  
                        __ptext48 000000                          __ptext81 000000  
                        __ptext73 000000                          __ptext65 000000  
                        __ptext57 000000                          __ptext49 000000  
                        __ptext90 000000                          __ptext82 000000  
                        __ptext74 000000                          __ptext66 000000  
                        __ptext58 000000                          __ptext91 000000  
                        __ptext83 000000                          __ptext75 000000  
                        __ptext67 000000                          __ptext59 000000  
                        __ptext84 000000                          __ptext76 000000  
                        __ptext68 000000                          __ptext93 000000  
                        __ptext85 000000                          __ptext77 000000  
                        __ptext69 000000                          __ptext86 000000  
                        __ptext78 000000                          __ptext87 000000  
                        __ptext79 000000                          __ptext88 000000  
                        __ptext89 000000                    CantaPartAlta@c 000006  
                     _lletraASCII 000011                          _high_rsi 000000  
                        _copsNota 000025                          _s_Timers 000000  
                   __size_of_CtoA 000000                          _initHora 000000  
                     _lletraInici 000000                          _menuDalt 000031  
                        _menuList 000001               ?_EscriuPrimeraOrdre 000000  
                   __size_of_main 000000                     __size_of_menu 000000  
           __end_of_CantaPartAlta 000068                    _CToAConverteix 000000  
                   CantaData@Data 000007                          _tiTeclat 000038  
              __end_of_init_ports 000020                          _setSMSon 000011  
                   _SsetNovaTecla 000000                          _nouIndex 000009  
            __size_of_WaitForBusy 000000                          _nouSegon 000004  
                        _motorSIO 000000                 ??_HActualitzaHora 000006  
                        _motorJoc 000000                   _checkHoraAcabat 000000  
                        _timerSIO 000012                          _timerSMS 00000F  
                        isa$xinst 000000                          int$flags 000000  
                    UenviaPas@pos 000005                       _playAltaveu 000000  
                    _motorAltaveu 000000           __size_of_HClearNouSegon 000000  
          _SIOHaAcabatPuntuacions 000000              ??_EscriuPrimeraOrdre 000005  
                      LcInit@rows 000011                  ??_GLCDMostraMenu 000005  
           __size_of_SIONovaTecla 000000           _UcheckExistsNotFinished 000000  
                      _INTCONbits 000FF2                     ??_MNovaLletra 000005  
                     _CToAobtenir 000000             __size_of_SIOStartGame 000000  
                   ??_LcNewString 00000B                          intlevel2 000000* 
                    _timerAltaveu 000026                    _arrayShowUsers 000021  
          __end_of_CToAConverteix 00000C                        LcPutChar@c 000013  
                  ?_SsetNovaTecla 000000                 MNovaLletra@lletra 000005  
                 compareStrings@a 000005                   compareStrings@b 000006  
                     ??_motorHora 00000C                      _SIONovaTecla 000000  
                  UnewScore@score 000005                       _tempsAcabat 000003  
                     GLCDMotor@k1 00001D                       GLCDMotor@k2 00001C  
            __end_of_MNouJoystick 000008                      _SIOStartGame 000000  
                  _compareStrings 000000                       _tmpPassword 000018  
             __end_of_MNovaLletra 000008                   ?_CToAConverteix 000000  
           __end_of_MsetNovaTecla 000008           __end_of_checkHoraAcabat 00000C  
                     _tmpUsername 000029                    _SIOcheckKrebut 000000  
                     SMotor@state 000039           __size_of_UgetNumUsuaris 000000  
             __end_of_LcNewString 00000C              __size_of_UmotorUsers 000000  
                      _SIOendGame 000000  
