

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri May 06 11:06:10 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82                           	psect	pa_nodes0,global,class=CODE,delta=1
    83  0000                     
    84                           ; Version 2.32
    85                           ; Generated 02/02/2021 GMT
    86                           ; 
    87                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F4321 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataCOMRAM
   121  0011C0                     __pidataCOMRAM:
   122                           	callstack 0
   123                           
   124                           ;initializer for _lletraInici
   125  0011C0  41                 	db	65
   126  0011C1  44                 	db	68
   127  0011C2  47                 	db	71
   128  0011C3  4A                 	db	74
   129  0011C4  4D                 	db	77
   130  0011C5  50                 	db	80
   131  0011C6  54                 	db	84
   132  0011C7  57                 	db	87
   133  0011C8  00                 	db	0
   134                           
   135                           ;initializer for _arrayZero
   136  0011C9  30                 	db	48
   137  0011CA  5F                 	db	95
   138  0011CB  00                 	db	0
   139                           
   140                           ;initializer for _usuariActualSIO
   141  0011CC  FF                 	db	255
   142                           
   143                           ;initializer for _usuariLoguejat
   144  0011CD  FF                 	db	255
   145                           
   146                           ;initializer for _novaDireccio
   147  0011CE  FF                 	db	255
   148                           
   149                           ;initializer for _novaLletra
   150  0011CF  FF                 	db	255
   151                           
   152                           ;initializer for _NovaTecla
   153  0011D0  FF                 	db	255
   154                           
   155                           ;initializer for _ultimaTecla
   156  0011D1  FF                 	db	255
   157                           
   158                           ;initializer for _timerSMS
   159  0011D2  FF                 	db	255
   160                           
   161                           ;initializer for _novaTecla
   162  0011D3  FF                 	db	255
   163                           
   164                           ;initializer for _lletraASCII
   165  0011D4  FF                 	db	255
   166                           
   167                           ;initializer for _hora
   168  0011D5  33                 	db	51
   169  0011D6  30                 	db	48
   170  0011D7  3A                 	db	58
   171  0011D8  30                 	db	48
   172  0011D9  30                 	db	48
   173  0011DA  00                 	db	0
   174                           
   175                           ;initializer for _stringScore
   176  0011DB  30                 	db	48
   177  0011DC  30                 	db	48
   178  0011DD  00                 	db	0
   179                           
   180                           	psect	idataBANK0
   181  001290                     __pidataBANK0:
   182                           	callstack 0
   183                           
   184                           ;initializer for _teclaPremuda
   185  001290  01                 	db	1
   186  001291  02                 	db	2
   187  001292  03                 	db	3
   188  001293  04                 	db	4
   189  001294  05                 	db	5
   190  001295  06                 	db	6
   191  001296  07                 	db	7
   192  001297  08                 	db	8
   193  001298  09                 	db	9
   194  001299  0A                 	db	10
   195  00129A  00                 	db	0
   196  00129B  0B                 	db	11
   197                           
   198                           	psect	smallconst
   199  000200                     __psmallconst:
   200                           	callstack 0
   201  000200  00                 	db	0
   202  000201                     _menuList:
   203                           	callstack 0
   204  000201  31                 	db	49
   205  000202  2E                 	db	46
   206  000203  50                 	db	80
   207  000204  6C                 	db	108
   208  000205  61                 	db	97
   209  000206  79                 	db	121
   210  000207  20                 	db	32
   211  000208  61                 	db	97
   212  000209  20                 	db	32
   213  00020A  47                 	db	71
   214  00020B  61                 	db	97
   215  00020C  6D                 	db	109
   216  00020D  65                 	db	101
   217  00020E  00                 	db	0
   218  00020F  00                 	db	0
   219  000210  00                 	db	0
   220  000211  00                 	db	0
   221  000212  00                 	db	0
   222  000213  00                 	db	0
   223  000214  00                 	db	0
   224  000215  00                 	db	0
   225  000216  00                 	db	0
   226  000217  00                 	db	0
   227  000218  00                 	db	0
   228  000219  00                 	db	0
   229  00021A  00                 	db	0
   230  00021B  00                 	db	0
   231  00021C  00                 	db	0
   232  00021D  00                 	db	0
   233  00021E  32                 	db	50
   234  00021F  2E                 	db	46
   235  000220  4D                 	db	77
   236  000221  6F                 	db	111
   237  000222  64                 	db	100
   238  000223  69                 	db	105
   239  000224  66                 	db	102
   240  000225  79                 	db	121
   241  000226  20                 	db	32
   242  000227  54                 	db	84
   243  000228  69                 	db	105
   244  000229  6D                 	db	109
   245  00022A  65                 	db	101
   246  00022B  00                 	db	0
   247  00022C  00                 	db	0
   248  00022D  00                 	db	0
   249  00022E  00                 	db	0
   250  00022F  00                 	db	0
   251  000230  00                 	db	0
   252  000231  00                 	db	0
   253  000232  00                 	db	0
   254  000233  00                 	db	0
   255  000234  00                 	db	0
   256  000235  00                 	db	0
   257  000236  00                 	db	0
   258  000237  00                 	db	0
   259  000238  00                 	db	0
   260  000239  00                 	db	0
   261  00023A  00                 	db	0
   262  00023B  33                 	db	51
   263  00023C  2E                 	db	46
   264  00023D  53                 	db	83
   265  00023E  68                 	db	104
   266  00023F  6F                 	db	111
   267  000240  77                 	db	119
   268  000241  20                 	db	32
   269  000242  47                 	db	71
   270  000243  65                 	db	101
   271  000244  6E                 	db	110
   272  000245  65                 	db	101
   273  000246  72                 	db	114
   274  000247  61                 	db	97
   275  000248  6C                 	db	108
   276  000249  20                 	db	32
   277  00024A  54                 	db	84
   278  00024B  6F                 	db	111
   279  00024C  70                 	db	112
   280  00024D  20                 	db	32
   281  00024E  35                 	db	53
   282  00024F  20                 	db	32
   283  000250  53                 	db	83
   284  000251  63                 	db	99
   285  000252  6F                 	db	111
   286  000253  72                 	db	114
   287  000254  65                 	db	101
   288  000255  73                 	db	115
   289  000256  20                 	db	32
   290  000257  00                 	db	0
   291  000258  34                 	db	52
   292  000259  2E                 	db	46
   293  00025A  4C                 	db	76
   294  00025B  6F                 	db	111
   295  00025C  67                 	db	103
   296  00025D  6F                 	db	111
   297  00025E  75                 	db	117
   298  00025F  74                 	db	116
   299  000260  00                 	db	0
   300  000261  00                 	db	0
   301  000262  00                 	db	0
   302  000263  00                 	db	0
   303  000264  00                 	db	0
   304  000265  00                 	db	0
   305  000266  00                 	db	0
   306  000267  00                 	db	0
   307  000268  00                 	db	0
   308  000269  00                 	db	0
   309  00026A  00                 	db	0
   310  00026B  00                 	db	0
   311  00026C  00                 	db	0
   312  00026D  00                 	db	0
   313  00026E  00                 	db	0
   314  00026F  00                 	db	0
   315  000270  00                 	db	0
   316  000271  00                 	db	0
   317  000272  00                 	db	0
   318  000273  00                 	db	0
   319  000274  00                 	db	0
   320  000275  35                 	db	53
   321  000276  2E                 	db	46
   322  000277  53                 	db	83
   323  000278  68                 	db	104
   324  000279  6F                 	db	111
   325  00027A  77                 	db	119
   326  00027B  20                 	db	32
   327  00027C  41                 	db	65
   328  00027D  6C                 	db	108
   329  00027E  6C                 	db	108
   330  00027F  20                 	db	32
   331  000280  55                 	db	85
   332  000281  73                 	db	115
   333  000282  65                 	db	101
   334  000283  72                 	db	114
   335  000284  73                 	db	115
   336  000285  00                 	db	0
   337  000286  00                 	db	0
   338  000287  00                 	db	0
   339  000288  00                 	db	0
   340  000289  00                 	db	0
   341  00028A  00                 	db	0
   342  00028B  00                 	db	0
   343  00028C  00                 	db	0
   344  00028D  00                 	db	0
   345  00028E  00                 	db	0
   346  00028F  00                 	db	0
   347  000290  00                 	db	0
   348  000291  00                 	db	0
   349  000292                     __end_of_menuList:
   350                           	callstack 0
   351  0000                     _PORTDbits	set	3971
   352  0000                     _LATD	set	3980
   353  0000                     _TRISD	set	3989
   354  0000                     _TRISC	set	3988
   355  0000                     _LATBbits	set	3978
   356  0000                     _TRISB	set	3987
   357  0000                     _TRISA	set	3986
   358  0000                     _PORTCbits	set	3970
   359  0000                     _LATDbits	set	3980
   360  0000                     _LATCbits	set	3979
   361  0000                     _TRISDbits	set	3989
   362  0000                     _TRISCbits	set	3988
   363  0000                     _ADRESH	set	4036
   364  0000                     _ADCON2	set	4032
   365  0000                     _ADCON1	set	4033
   366  0000                     _ADCON0	set	4034
   367  0000                     _EECON2	set	4007
   368  0000                     _EEDATA	set	4008
   369  0000                     _EEADR	set	4009
   370  0000                     _RCONbits	set	4048
   371  0000                     _SPBRG	set	4015
   372  0000                     _SPBRGH	set	4016
   373  0000                     _BAUDCON	set	4024
   374  0000                     _RCSTA	set	4011
   375  0000                     _TXSTA	set	4012
   376  0000                     _EECON1bits	set	4006
   377  0000                     _T0CONbits	set	4053
   378  0000                     _TMR0L	set	4054
   379  0000                     _TMR0H	set	4055
   380  0000                     _T0CON	set	4053
   381  0000                     _INTCONbits	set	4082
   382  000292                     STR_7:
   383  000292  54                 	db	84	;'T'
   384  000293  49                 	db	73	;'I'
   385  000294  4D                 	db	77	;'M'
   386  000295  45                 	db	69	;'E'
   387  000296  20                 	db	32
   388  000297  52                 	db	82	;'R'
   389  000298  45                 	db	69	;'E'
   390  000299  4D                 	db	77	;'M'
   391  00029A  41                 	db	65	;'A'
   392  00029B  49                 	db	73	;'I'
   393  00029C  4E                 	db	78	;'N'
   394  00029D  49                 	db	73	;'I'
   395  00029E  4E                 	db	78	;'N'
   396  00029F  47                 	db	71	;'G'
   397  0002A0  3A                 	db	58	;':'
   398  0002A1  00                 	db	0
   399  0002A2                     STR_6:
   400  0002A2  4D                 	db	77	;'M'
   401  0002A3  6F                 	db	111	;'o'
   402  0002A4  64                 	db	100	;'d'
   403  0002A5  69                 	db	105	;'i'
   404  0002A6  66                 	db	102	;'f'
   405  0002A7  79                 	db	121	;'y'
   406  0002A8  20                 	db	32
   407  0002A9  54                 	db	84	;'T'
   408  0002AA  69                 	db	105	;'i'
   409  0002AB  6D                 	db	109	;'m'
   410  0002AC  65                 	db	101	;'e'
   411  0002AD  3A                 	db	58	;':'
   412  0002AE  00                 	db	0
   413  0002AF  54                 	db	84	;'T'
   414  0002B0  49                 	db	73	;'I'
   415  0002B1  4D                 	db	77	;'M'
   416  0002B2  45                 	db	69	;'E'
   417  0002B3  20                 	db	32
   418  0002B4  4C                 	db	76	;'L'
   419  0002B5  45                 	db	69	;'E'
   420  0002B6  46                 	db	70	;'F'
   421  0002B7  54                 	db	84	;'T'
   422  0002B8  3A                 	db	58	;':'
   423  0002B9  20                 	db	32
   424  0002BA  00                 	db	0
   425  0002BB                     STR_2:
   426  0002BB  32                 	db	50	;'2'
   427  0002BC  2E                 	db	46
   428  0002BD  52                 	db	82	;'R'
   429  0002BE  45                 	db	69	;'E'
   430  0002BF  47                 	db	71	;'G'
   431  0002C0  49                 	db	73	;'I'
   432  0002C1  53                 	db	83	;'S'
   433  0002C2  54                 	db	84	;'T'
   434  0002C3  45                 	db	69	;'E'
   435  0002C4  52                 	db	82	;'R'
   436  0002C5  00                 	db	0
   437  0002C6                     STR_5:
   438  0002C6  42                 	db	66	;'B'
   439  0002C7  59                 	db	89	;'Y'
   440  0002C8  45                 	db	69	;'E'
   441  0002C9  20                 	db	32
   442  0002CA  42                 	db	66	;'B'
   443  0002CB  59                 	db	89	;'Y'
   444  0002CC  45                 	db	69	;'E'
   445  0002CD  20                 	db	32
   446  0002CE  00                 	db	0
   447  0002CF  53                 	db	83	;'S'
   448  0002D0  43                 	db	67	;'C'
   449  0002D1  4F                 	db	79	;'O'
   450  0002D2  52                 	db	82	;'R'
   451  0002D3  45                 	db	69	;'E'
   452  0002D4  3A                 	db	58	;':'
   453  0002D5  20                 	db	32
   454  0002D6  00                 	db	0
   455  0002D7  45                 	db	69	;'E'
   456  0002D8  52                 	db	82	;'R'
   457  0002D9  52                 	db	82	;'R'
   458  0002DA  4F                 	db	79	;'O'
   459  0002DB  52                 	db	82	;'R'
   460  0002DC  53                 	db	83	;'S'
   461  0002DD  3A                 	db	58	;':'
   462  0002DE  00                 	db	0
   463  0002DF                     STR_1:
   464  0002DF  31                 	db	49	;'1'
   465  0002E0  2E                 	db	46
   466  0002E1  4C                 	db	76	;'L'
   467  0002E2  4F                 	db	79	;'O'
   468  0002E3  47                 	db	71	;'G'
   469  0002E4  49                 	db	73	;'I'
   470  0002E5  4E                 	db	78	;'N'
   471  0002E6  00                 	db	0
   472  0002E7                     STR_4:
   473  0002E7  50                 	db	80	;'P'
   474  0002E8  53                 	db	83	;'S'
   475  0002E9  57                 	db	87	;'W'
   476  0002EA  44                 	db	68	;'D'
   477  0002EB  3A                 	db	58	;':'
   478  0002EC  20                 	db	32
   479  0002ED  00                 	db	0
   480  0002EE                     STR_3:
   481  0002EE  55                 	db	85	;'U'
   482  0002EF  53                 	db	83	;'S'
   483  0002F0  45                 	db	69	;'E'
   484  0002F1  52                 	db	82	;'R'
   485  0002F2  3A                 	db	58	;':'
   486  0002F3  20                 	db	32
   487  0002F4  00                 	db	0
   488  0002F5  00                 	db	0	; dummy byte at the end
   489  0000                     
   490                           ; #config settings
   491                           
   492                           	psect	cinit
   493  000D66                     __pcinit:
   494                           	callstack 0
   495  000D66                     start_initialization:
   496                           	callstack 0
   497  000D66                     __initialization:
   498                           	callstack 0
   499                           
   500                           ; Initialize objects allocated to BANK0 (12 bytes)
   501                           ; load TBLPTR registers with __pidataBANK0
   502  000D66  0E90               	movlw	low __pidataBANK0
   503  000D68  6EF6               	movwf	tblptrl,c
   504  000D6A  0E12               	movlw	high __pidataBANK0
   505  000D6C  6EF7               	movwf	tblptrh,c
   506  000D6E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   507  000D70  6EF8               	movwf	tblptru,c
   508  000D72  EE00  F080         	lfsr	0,__pdataBANK0
   509  000D76  EE10 F00C          	lfsr	1,12
   510  000D7A                     copy_data0:
   511  000D7A  0009               	tblrd		*+
   512  000D7C  CFF5 FFEE          	movff	tablat,postinc0
   513  000D80  50E5               	movf	postdec1,w,c
   514  000D82  50E1               	movf	fsr1l,w,c
   515  000D84  E1FA               	bnz	copy_data0
   516                           
   517                           ; Initialize objects allocated to COMRAM (30 bytes)
   518                           ; load TBLPTR registers with __pidataCOMRAM
   519  000D86  0EC0               	movlw	low __pidataCOMRAM
   520  000D88  6EF6               	movwf	tblptrl,c
   521  000D8A  0E11               	movlw	high __pidataCOMRAM
   522  000D8C  6EF7               	movwf	tblptrh,c
   523  000D8E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   524  000D90  6EF8               	movwf	tblptru,c
   525  000D92  EE00  F046         	lfsr	0,__pdataCOMRAM
   526  000D96  EE10 F01E          	lfsr	1,30
   527  000D9A                     copy_data1:
   528  000D9A  0009               	tblrd		*+
   529  000D9C  CFF5 FFEE          	movff	tablat,postinc0
   530  000DA0  50E5               	movf	postdec1,w,c
   531  000DA2  50E1               	movf	fsr1l,w,c
   532  000DA4  E1FA               	bnz	copy_data1
   533                           
   534                           ; Clear objects allocated to BANK1 (184 bytes)
   535  000DA6  EE01  F000         	lfsr	0,__pbssBANK1
   536  000DAA  0EB8               	movlw	184
   537  000DAC                     clear_0:
   538  000DAC  6AEE               	clrf	postinc0,c
   539  000DAE  06E8               	decf	wreg,f,c
   540  000DB0  E1FD               	bnz	clear_0
   541                           
   542                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   543  000DB2  6A78               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   544                           
   545                           ; Clear objects allocated to COMRAM (69 bytes)
   546  000DB4  EE00  F001         	lfsr	0,__pbssCOMRAM
   547  000DB8  0E45               	movlw	69
   548  000DBA                     clear_1:
   549  000DBA  6AEE               	clrf	postinc0,c
   550  000DBC  06E8               	decf	wreg,f,c
   551  000DBE  E1FD               	bnz	clear_1
   552  000DC0                     end_of_initialization:
   553                           	callstack 0
   554  000DC0                     __end_of__initialization:
   555                           	callstack 0
   556  000DC0  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   557  000DC2  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   558  000DC4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   559  000DC6  6EF8               	movwf	tblptru,c
   560  000DC8  0100               	movlb	0
   561  000DCA  EF4D  F007         	goto	_main	;jump to C main() function
   562                           
   563                           	psect	bitbssCOMRAM
   564  0003C0                     __pbitbssCOMRAM:
   565                           	callstack 0
   566  0003C0                     _tempsAcabat:
   567                           	callstack 0
   568  0003C0                     	ds	1
   569  0003C1                     _do_check_exists:
   570                           	callstack 0
   571  0003C1                     	ds	1
   572  0003C2                     _loginNOTRegister:
   573                           	callstack 0
   574  0003C2                     	ds	1
   575  0003C3                     _setSMSon:
   576                           	callstack 0
   577  0003C3                     	ds	1
   578  0003C4                     _nou_s:
   579                           	callstack 0
   580  0003C4                     	ds	1
   581                           
   582                           	psect	bssCOMRAM
   583  000001                     __pbssCOMRAM:
   584                           	callstack 0
   585  000001                     _s_Timers:
   586                           	callstack 0
   587  000001                     	ds	24
   588  000019                     _tmpPassword:
   589                           	callstack 0
   590  000019                     	ds	9
   591  000022                     _h_Tics:
   592                           	callstack 0
   593  000022                     	ds	2
   594  000024                     _s_ptr:
   595                           	callstack 0
   596  000024                     	ds	2
   597  000026                     _numUsuaris:
   598                           	callstack 0
   599  000026                     	ds	1
   600  000027                     menu@state:
   601                           	callstack 0
   602  000027                     	ds	1
   603  000028                     _pos:
   604                           	callstack 0
   605  000028                     	ds	1
   606  000029                     _indexUsuari:
   607                           	callstack 0
   608  000029                     	ds	1
   609  00002A                     _menuDalt:
   610                           	callstack 0
   611  00002A                     	ds	1
   612  00002B                     _timerMenu:
   613                           	callstack 0
   614  00002B                     	ds	1
   615  00002C                     _tmp:
   616                           	callstack 0
   617  00002C                     	ds	1
   618  00002D                     _counter:
   619                           	callstack 0
   620  00002D                     	ds	1
   621  00002E                     TeTeclat@files:
   622                           	callstack 0
   623  00002E                     	ds	1
   624  00002F                     TeTeclat@cols:
   625                           	callstack 0
   626  00002F                     	ds	1
   627  000030                     TeTeclat@state:
   628                           	callstack 0
   629  000030                     	ds	1
   630  000031                     _tiTeclat:
   631                           	callstack 0
   632  000031                     	ds	1
   633  000032                     SMotor@state:
   634                           	callstack 0
   635  000032                     	ds	1
   636  000033                     _zeroTecla:
   637                           	callstack 0
   638  000033                     	ds	1
   639  000034                     _sumaPulsacions:
   640                           	callstack 0
   641  000034                     	ds	1
   642  000035                     _Timer:
   643                           	callstack 0
   644  000035                     	ds	1
   645  000036                     _ColumnAct:
   646                           	callstack 0
   647  000036                     	ds	1
   648  000037                     _RowAct:
   649                           	callstack 0
   650  000037                     	ds	1
   651  000038                     _Rows:
   652                           	callstack 0
   653  000038                     	ds	1
   654  000039                     _tmpUsername:
   655                           	callstack 0
   656  000039                     	ds	9
   657  000042                     _horaTmp:
   658                           	callstack 0
   659  000042                     	ds	4
   660                           
   661                           	psect	dataCOMRAM
   662  000046                     __pdataCOMRAM:
   663                           	callstack 0
   664  000046                     _lletraInici:
   665                           	callstack 0
   666  000046                     	ds	9
   667  00004F                     _arrayZero:
   668                           	callstack 0
   669  00004F                     	ds	3
   670  000052                     _usuariActualSIO:
   671                           	callstack 0
   672  000052                     	ds	1
   673  000053                     _usuariLoguejat:
   674                           	callstack 0
   675  000053                     	ds	1
   676  000054                     _novaDireccio:
   677                           	callstack 0
   678  000054                     	ds	1
   679  000055                     _novaLletra:
   680                           	callstack 0
   681  000055                     	ds	1
   682  000056                     _NovaTecla:
   683                           	callstack 0
   684  000056                     	ds	1
   685  000057                     _ultimaTecla:
   686                           	callstack 0
   687  000057                     	ds	1
   688  000058                     _timerSMS:
   689                           	callstack 0
   690  000058                     	ds	1
   691  000059                     _novaTecla:
   692                           	callstack 0
   693  000059                     	ds	1
   694  00005A                     _lletraASCII:
   695                           	callstack 0
   696  00005A                     	ds	1
   697  00005B                     _hora:
   698                           	callstack 0
   699  00005B                     	ds	6
   700  000061                     _stringScore:
   701                           	callstack 0
   702  000061                     	ds	3
   703                           
   704                           	psect	dataBANK0
   705  000080                     __pdataBANK0:
   706                           	callstack 0
   707  000080                     _teclaPremuda:
   708                           	callstack 0
   709  000080                     	ds	12
   710                           
   711                           	psect	bssBANK1
   712  000100                     __pbssBANK1:
   713                           	callstack 0
   714  000100                     _usuaris:
   715                           	callstack 0
   716  000100                     	ds	184
   717                           
   718                           	psect	cstackBANK0
   719  00008C                     __pcstackBANK0:
   720                           	callstack 0
   721  00008C                     ??_menu:
   722                           
   723                           ; 1 bytes @ 0x0
   724  00008C                     	ds	5
   725                           
   726                           	psect	cstackCOMRAM
   727  000064                     __pcstackCOMRAM:
   728                           	callstack 0
   729  000064                     
   730                           ; 1 bytes @ 0x0
   731  000064                     	ds	1
   732  000065                     ??_high_rsi:
   733                           
   734                           ; 1 bytes @ 0x1
   735  000065                     	ds	4
   736  000069                     ??_EscriuPrimeraOrdre:
   737  000069                     ??_Uinit:
   738  000069                     ??_CantaPartAlta:
   739  000069                     ??_CantaPartBaixa:
   740  000069                     ?_TiGetTics:
   741                           	callstack 0
   742  000069                     ?_UgetUserName:
   743                           	callstack 0
   744  000069                     SsetNovaTecla@tecla:
   745                           	callstack 0
   746  000069                     TiResetTics@Handle:
   747                           	callstack 0
   748  000069                     MsetNovaTecla@tecla:
   749                           	callstack 0
   750  000069                     MNovaLletra@lletra:
   751                           	callstack 0
   752  000069                     UenviaChar@pos:
   753                           	callstack 0
   754  000069                     UenviaPas@pos:
   755                           	callstack 0
   756  000069                     escriureEEPROM@caca:
   757                           	callstack 0
   758  000069                     GLCDMostraMenu@num:
   759                           	callstack 0
   760  000069                     HActualitzaHora@nova:
   761                           	callstack 0
   762  000069                     JJuguem@usuari:
   763                           	callstack 0
   764  000069                     JnovaTecla@tecla:
   765                           	callstack 0
   766  000069                     JnovaDireccio@dir:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x5
   770  000069                     	ds	1
   771  00006A                     CantaPartAlta@c:
   772                           	callstack 0
   773  00006A                     CantaPartBaixa@c:
   774                           	callstack 0
   775  00006A                     EscriuPrimeraOrdre@ordre:
   776                           	callstack 0
   777  00006A                     UenviaChar@c:
   778                           	callstack 0
   779  00006A                     UenviaPas@c:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x6
   783  00006A                     	ds	1
   784  00006B                     ??_TiGetTics:
   785  00006B                     CantaIR@IR:
   786                           	callstack 0
   787  00006B                     CantaData@Data:
   788                           	callstack 0
   789  00006B                     UgetUserName@quin:
   790                           	callstack 0
   791  00006B                     Uinit@i:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x7
   795  00006B                     	ds	1
   796  00006C                     Uinit@j:
   797                           	callstack 0
   798  00006C                     LcNewString@new_s:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x8
   802  00006C                     	ds	1
   803  00006D                     TiGetTics@Handle:
   804                           	callstack 0
   805  00006D                     Uinit@j_1140:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x9
   809  00006D                     	ds	1
   810  00006E                     TiGetTics@actual:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0xA
   814  00006E                     	ds	2
   815  000070                     ??_SMotor:
   816  000070                     ??_TeTeclat:
   817  000070                     WaitForBusy@Busy:
   818                           	callstack 0
   819  000070                     Espera@ms:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0xC
   823  000070                     	ds	1
   824  000071                     LcGotoXY@Row:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0xD
   828  000071                     	ds	1
   829  000072                     ??_Espera:
   830  000072                     LcGotoXY@Fisics:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0xE
   834  000072                     	ds	1
   835  000073                     Espera@Timer:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0xF
   839  000073                     	ds	1
   840  000074                     LcInit@columns:
   841                           	callstack 0
   842  000074                     _LcGotoXY$336:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x10
   846  000074                     	ds	1
   847  000075                     LcInit@rows:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x11
   851  000075                     	ds	1
   852  000076                     LcGotoXY@Column:
   853                           	callstack 0
   854  000076                     LcInit@i:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x12
   858  000076                     	ds	1
   859  000077                     LcPutChar@c:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x13
   863  000077                     	ds	1
   864  000078                     
   865                           ; 1 bytes @ 0x14
   866 ;;
   867 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   868 ;;
   869 ;; *************** function _main *****************
   870 ;; Defined at:
   871 ;;		line 77 in file "main.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1
   885 ;;      Params:         0       0       0
   886 ;;      Locals:         0       0       0
   887 ;;      Temps:          0       0       0
   888 ;;      Totals:         0       0       0
   889 ;;Total ram usage:        0 bytes
   890 ;; Hardware stack levels required when called: 7
   891 ;; This function calls:
   892 ;;		_GLCDInit
   893 ;;		_JoystickInit
   894 ;;		_LcInit
   895 ;;		_LcLCD
   896 ;;		_Minit
   897 ;;		_SMotor
   898 ;;		_Sinit
   899 ;;		_TeInit
   900 ;;		_TeTeclat
   901 ;;		_TiInitTimer
   902 ;;		_Uinit
   903 ;;		_escriure2usuarisStruct
   904 ;;		_escriureEEPROM
   905 ;;		_initAltaveu
   906 ;;		_initHora
   907 ;;		_initSIO
   908 ;;		_init_eusart
   909 ;;		_init_ports
   910 ;;		_menu
   911 ;; This function is called by:
   912 ;;		Startup code after reset
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text0
   917  000E9A                     __ptext0:
   918                           	callstack 0
   919  000E9A                     _main:
   920                           	callstack 24
   921                           
   922                           ;main.c: 78:     init_ports();
   923                           
   924                           ;incstack = 0
   925  000E9A  ECEF  F008         	call	_init_ports	;wreg free
   926                           
   927                           ;main.c: 79:     escriureEEPROM();
   928  000E9E  EC83  F008         	call	_escriureEEPROM	;wreg free
   929                           
   930                           ;main.c: 80:     init_eusart();
   931  000EA2  EC1A  F009         	call	_init_eusart	;wreg free
   932                           
   933                           ;main.c: 81:     TiInitTimer();
   934  000EA6  EC97  F008         	call	_TiInitTimer	;wreg free
   935                           
   936                           ;main.c: 82:     TeInit();
   937  000EAA  EC6E  F009         	call	_TeInit	;wreg free
   938                           
   939                           ;main.c: 83:     Sinit();
   940  000EAE  EC72  F009         	call	_Sinit	;wreg free
   941                           
   942                           ;main.c: 84:     SMotor();
   943  000EB2  EC5E  F004         	call	_SMotor	;wreg free
   944                           
   945                           ;main.c: 85:     Uinit();
   946  000EB6  EC2A  F006         	call	_Uinit	;wreg free
   947                           
   948                           ;main.c: 86:     initAltaveu();
   949  000EBA  EC93  F009         	call	_initAltaveu	;wreg free
   950                           
   951                           ;main.c: 87:     GLCDInit();
   952  000EBE  EC95  F009         	call	_GLCDInit	;wreg free
   953                           
   954                           ;main.c: 88:     JoystickInit();
   955  000EC2  EC2F  F009         	call	_JoystickInit	;wreg free
   956                           
   957                           ;main.c: 89:     initHora();
   958  000EC6  EC91  F009         	call	_initHora	;wreg free
   959                           
   960                           ;main.c: 90:     initSIO();
   961  000ECA  EC8F  F009         	call	_initSIO	;wreg free
   962                           
   963                           ;main.c: 92:     LcInit(2,16);
   964  000ECE  0E10               	movlw	16
   965  000ED0  6E74               	movwf	LcInit@columns^0,c
   966  000ED2  0E02               	movlw	2
   967  000ED4  ECCB  F005         	call	_LcInit
   968                           
   969                           ;main.c: 93:     Minit();
   970  000ED8  EC7A  F009         	call	_Minit	;wreg free
   971                           
   972                           ;main.c: 96:     escriure2usuarisStruct();
   973  000EDC  EC6E  F008         	call	_escriure2usuarisStruct	;wreg free
   974  000EE0                     l4682:
   975                           
   976                           ;main.c: 103:         menu();
   977  000EE0  EC7B  F001         	call	_menu	;wreg free
   978                           
   979                           ;main.c: 108:         TeTeclat();
   980  000EE4  EC37  F005         	call	_TeTeclat	;wreg free
   981                           
   982                           ;main.c: 109:         SMotor();
   983  000EE8  EC5E  F004         	call	_SMotor	;wreg free
   984                           
   985                           ;main.c: 110:         LcLCD();
   986  000EEC  EC79  F007         	call	_LcLCD	;wreg free
   987  000EF0  D7F7               	goto	l4682
   988  000EF2                     __end_of_main:
   989                           	callstack 0
   990                           
   991 ;; *************** function _menu *****************
   992 ;; Defined at:
   993 ;;		line 39 in file "Menu.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/1
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1
  1007 ;;      Params:         0       0       0
  1008 ;;      Locals:         0       0       0
  1009 ;;      Temps:          0       5       0
  1010 ;;      Totals:         0       5       0
  1011 ;;Total ram usage:        5 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 6
  1014 ;; This function calls:
  1015 ;;		_GLCDMostraMenu
  1016 ;;		_HActualitzaHora
  1017 ;;		_JJuguem
  1018 ;;		_JendGame
  1019 ;;		_JnovaDireccio
  1020 ;;		_JnovaTecla
  1021 ;;		_LcClear
  1022 ;;		_LcGotoXY
  1023 ;;		_LcLliure
  1024 ;;		_LcNewString
  1025 ;;		_LcPutChar
  1026 ;;		_LcScroll
  1027 ;;		_NoFerMenu
  1028 ;;		_SIOHaAcabatPuntuacions
  1029 ;;		_SMSoff
  1030 ;;		_SMSon
  1031 ;;		_SiFerMenu
  1032 ;;		_TiGetTics
  1033 ;;		_TiResetTics
  1034 ;;		_URegister
  1035 ;;		_UcheckExists
  1036 ;;		_UcheckExistsGetError
  1037 ;;		_UcheckExistsNotFinished
  1038 ;;		_UenviaChar
  1039 ;;		_UenviaPas
  1040 ;;		_UgetNumUsuaris
  1041 ;;		_UgetUserName
  1042 ;;		_checkHoraAcabat
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text1
  1049  0002F6                     __ptext1:
  1050                           	callstack 0
  1051  0002F6                     _menu:
  1052                           	callstack 24
  1053                           
  1054                           ;Menu.c: 40:  static char state = 0;;Menu.c: 42:  switch(state) {
  1055                           
  1056                           ;incstack = 0
  1057  0002F6  D26C               	goto	l4640
  1058  0002F8                     l4180:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;Menu.c: 44:    LcClear();
  1062  0002F8  ECBE  F008         	call	_LcClear	;wreg free
  1063                           
  1064                           ;Menu.c: 45:    LcNewString("1.LOGIN");
  1065  0002FC  0EDF               	movlw	low STR_1
  1066  0002FE  DAC8               	call	PL2	;call to abstracted procedure
  1067  000300  EC5A  F009         	call	_LcNewString	;wreg free
  1068                           
  1069                           ;Menu.c: 46:    state = 1;
  1070  000304  0E01               	movlw	1
  1071  000306  6E27               	movwf	menu@state^0,c
  1072                           
  1073                           ;Menu.c: 47:   break;
  1074  000308  0C01               	retlw	1
  1075  00030A                     l4186:
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;Menu.c: 49:    if (LcLliure()) {
  1079  00030A  EC60  F009         	call	_LcLliure	;wreg free
  1080  00030E  A0D8               	btfss	status,0,c
  1081  000310  0012               	return	
  1082                           
  1083                           ;Menu.c: 50:     LcGotoXY(0,1);
  1084  000312  DAC9               	call	PL24	;call to abstracted procedure
  1085  000314  EC3E  F008         	call	_LcGotoXY
  1086                           
  1087                           ;Menu.c: 51:     LcNewString("2.REGISTER");
  1088  000318  0EBB               	movlw	low STR_2
  1089  00031A  DABA               	call	PL2	;call to abstracted procedure
  1090  00031C  EC5A  F009         	call	_LcNewString	;wreg free
  1091                           
  1092                           ;Menu.c: 52:     NovaTecla = -1;
  1093  000320  6856               	setf	_NovaTecla^0,c
  1094                           
  1095                           ;Menu.c: 53:     state = 2;
  1096  000322  0E02               	movlw	2
  1097  000324  6E27               	movwf	menu@state^0,c
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;Menu.c: 55:   break;
  1101                           
  1102                           ;Menu.c: 54:    }
  1103  000326  0C02               	retlw	2
  1104  000328                     l4196:
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;Menu.c: 57:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  1108  000328  0456               	decf	_NovaTecla^0,w,c
  1109  00032A  E108               	bnz	l4204
  1110                           
  1111                           ; BSR set to: 0
  1112  00032C  EC87  F009         	call	_UgetNumUsuaris	;wreg free
  1113  000330  0900               	iorlw	0
  1114  000332  E004               	bz	l4204
  1115                           
  1116                           ;Menu.c: 58:     loginNOTRegister = 1;
  1117  000334  8478               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1118  000336                     l4202:
  1119                           
  1120                           ;Menu.c: 59:     state = 3;
  1121  000336  0E03               	movlw	3
  1122  000338  6E27               	movwf	menu@state^0,c
  1123                           
  1124                           ;Menu.c: 60:    }
  1125  00033A  0C03               	retlw	3
  1126  00033C                     l4204:
  1127  00033C  0E02               	movlw	2
  1128  00033E  1856               	xorwf	_NovaTecla^0,w,c
  1129  000340  A4D8               	btfss	status,2,c
  1130  000342  0012               	return	
  1131                           
  1132                           ;Menu.c: 62:     loginNOTRegister = 0;
  1133  000344  9478               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1134  000346  D7F7               	goto	l4202
  1135  000348                     l481:
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;Menu.c: 67:    NovaTecla = -1;
  1139  000348  6856               	setf	_NovaTecla^0,c
  1140                           
  1141                           ;Menu.c: 68:    novaLletra = -1;
  1142  00034A  6855               	setf	_novaLletra^0,c
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;Menu.c: 69:    LcClear();
  1146  00034C  ECBE  F008         	call	_LcClear	;wreg free
  1147                           
  1148                           ;Menu.c: 70:    LcNewString("USER: ");
  1149  000350  0EEE               	movlw	low STR_3
  1150  000352  DA9E               	call	PL2	;call to abstracted procedure
  1151  000354  EC5A  F009         	call	_LcNewString	;wreg free
  1152                           
  1153                           ;Menu.c: 71:    state = 4;
  1154  000358  0E04               	movlw	4
  1155  00035A  6E27               	movwf	menu@state^0,c
  1156                           
  1157                           ;Menu.c: 72:   break;
  1158  00035C  0C04               	retlw	4
  1159  00035E                     l4216:
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;Menu.c: 74:    if (LcLliure()) {
  1163  00035E  EC60  F009         	call	_LcLliure	;wreg free
  1164  000362  A0D8               	btfss	status,0,c
  1165  000364  0012               	return	
  1166                           
  1167                           ;Menu.c: 75:     LcGotoXY(0,1);
  1168  000366  DA9F               	call	PL24	;call to abstracted procedure
  1169  000368  EC3E  F008         	call	_LcGotoXY
  1170                           
  1171                           ;Menu.c: 76:     LcNewString("PSWD: ");
  1172  00036C  0EE7               	movlw	low STR_4
  1173  00036E  DA90               	call	PL2	;call to abstracted procedure
  1174  000370  EC5A  F009         	call	_LcNewString	;wreg free
  1175                           
  1176                           ;Menu.c: 77:     state = 5;
  1177  000374  0E05               	movlw	5
  1178  000376  6E27               	movwf	menu@state^0,c
  1179  000378  0C05               	retlw	5
  1180  00037A                     l4224:
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;Menu.c: 81:    if (LcLliure()) {
  1184  00037A  EC60  F009         	call	_LcLliure	;wreg free
  1185  00037E  A0D8               	btfss	status,0,c
  1186  000380  0012               	return	
  1187                           
  1188                           ;Menu.c: 82:     LcGotoXY(6,0);
  1189  000382  0E00               	movlw	0
  1190  000384  6E71               	movwf	LcGotoXY@Row^0,c
  1191  000386  0E06               	movlw	6
  1192  000388  EC3E  F008         	call	_LcGotoXY
  1193                           
  1194                           ;Menu.c: 83:     SMSon();
  1195  00038C  EC7E  F009         	call	_SMSon	;wreg free
  1196                           
  1197                           ;Menu.c: 84:     tmp =0;
  1198  000390  6A2C               	clrf	_tmp^0,c
  1199  000392                     l4232:
  1200                           
  1201                           ;Menu.c: 85:     state = 6;
  1202  000392  0E06               	movlw	6
  1203  000394  6E27               	movwf	menu@state^0,c
  1204  000396  0C06               	retlw	6
  1205  000398                     l4234:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;Menu.c: 89:    if (novaLletra > 47 && NovaTecla != 10) {
  1209  000398  5055               	movf	_novaLletra^0,w,c
  1210  00039A  0A80               	xorlw	128
  1211  00039C  0F50               	addlw	-176
  1212  00039E  E30E               	bnc	l4244
  1213                           
  1214                           ; BSR set to: 0
  1215  0003A0  0E0A               	movlw	10
  1216  0003A2  1856               	xorwf	_NovaTecla^0,w,c
  1217  0003A4  E00B               	bz	l4244
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;Menu.c: 90:     LcPutChar(novaLletra);
  1221  0003A6  5055               	movf	_novaLletra^0,w,c
  1222  0003A8  ECA1  F007         	call	_LcPutChar
  1223                           
  1224                           ;Menu.c: 91:     UenviaChar(novaLletra,tmp);
  1225  0003AC  C02C  F069         	movff	_tmp,UenviaChar@pos
  1226  0003B0  5055               	movf	_novaLletra^0,w,c
  1227  0003B2  EC40  F009         	call	_UenviaChar
  1228  0003B6                     l4242:
  1229                           
  1230                           ;Menu.c: 92:     state = 7;
  1231  0003B6  0E07               	movlw	7
  1232  0003B8  6E27               	movwf	menu@state^0,c
  1233                           
  1234                           ;Menu.c: 93:    }
  1235  0003BA  0C07               	retlw	7
  1236  0003BC                     l4244:
  1237                           
  1238                           ; BSR set to: 0
  1239  0003BC  0E0B               	movlw	11
  1240  0003BE  1856               	xorwf	_NovaTecla^0,w,c
  1241  0003C0  E0FA               	bz	l4242
  1242  0003C2  0012               	return	
  1243  0003C4                     l4248:
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;Menu.c: 99:    if (tmp != 7 && NovaTecla != 11) {
  1247  0003C4  0E07               	movlw	7
  1248  0003C6  182C               	xorwf	_tmp^0,w,c
  1249  0003C8  E005               	bz	l4260
  1250                           
  1251                           ; BSR set to: 0
  1252  0003CA  0E0B               	movlw	11
  1253  0003CC  1856               	xorwf	_NovaTecla^0,w,c
  1254  0003CE  E002               	bz	l4260
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;Menu.c: 100:     tmp++;
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;Menu.c: 101:     NovaTecla = -1;
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;Menu.c: 102:     novaLletra = -1;
  1264  0003D0  DA71               	call	PL50	;call to abstracted procedure
  1265  0003D2  D7DF               	goto	l4232
  1266  0003D4                     l4260:
  1267                           
  1268                           ; BSR set to: 0
  1269  0003D4  0E07               	movlw	7
  1270  0003D6  182C               	xorwf	_tmp^0,w,c
  1271  0003D8  E004               	bz	u3570
  1272                           
  1273                           ; BSR set to: 0
  1274  0003DA  0E0B               	movlw	11
  1275  0003DC  1856               	xorwf	_NovaTecla^0,w,c
  1276  0003DE  A4D8               	btfss	status,2,c
  1277  0003E0  0012               	return	
  1278  0003E2                     u3570:
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;Menu.c: 106:     LcGotoXY(6,1);
  1282  0003E2  0E01               	movlw	1
  1283  0003E4  6E71               	movwf	LcGotoXY@Row^0,c
  1284  0003E6  0E06               	movlw	6
  1285  0003E8  EC3E  F008         	call	_LcGotoXY
  1286                           
  1287                           ;Menu.c: 107:     UenviaChar('\0',tmp);
  1288  0003EC  C02C  F069         	movff	_tmp,UenviaChar@pos
  1289  0003F0  0E00               	movlw	0
  1290  0003F2  EC40  F009         	call	_UenviaChar
  1291                           
  1292                           ;Menu.c: 108:     NovaTecla = -1;
  1293                           
  1294                           ;Menu.c: 109:     novaLletra = -1;
  1295                           
  1296                           ;Menu.c: 110:     tmp = 0;
  1297  0003F6  DA5A               	call	PL48	;call to abstracted procedure
  1298  0003F8                     l4274:
  1299                           
  1300                           ;Menu.c: 111:     state = 8;
  1301  0003F8  0E08               	movlw	8
  1302  0003FA  6E27               	movwf	menu@state^0,c
  1303  0003FC  0C08               	retlw	8
  1304  0003FE                     l4276:
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;Menu.c: 115:    if (novaLletra > 47 && NovaTecla != 10) {
  1308  0003FE  5055               	movf	_novaLletra^0,w,c
  1309  000400  0A80               	xorlw	128
  1310  000402  0F50               	addlw	-176
  1311  000404  E30E               	bnc	l4286
  1312                           
  1313                           ; BSR set to: 0
  1314  000406  0E0A               	movlw	10
  1315  000408  1856               	xorwf	_NovaTecla^0,w,c
  1316  00040A  E00B               	bz	l4286
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;Menu.c: 116:     LcPutChar(novaLletra);
  1320  00040C  5055               	movf	_novaLletra^0,w,c
  1321  00040E  ECA1  F007         	call	_LcPutChar
  1322                           
  1323                           ;Menu.c: 117:     UenviaPas(novaLletra,tmp);
  1324  000412  C02C  F069         	movff	_tmp,UenviaPas@pos
  1325  000416  5055               	movf	_novaLletra^0,w,c
  1326  000418  EC38  F009         	call	_UenviaPas
  1327  00041C                     l4284:
  1328                           
  1329                           ;Menu.c: 118:     state = 9;
  1330  00041C  0E09               	movlw	9
  1331  00041E  6E27               	movwf	menu@state^0,c
  1332                           
  1333                           ;Menu.c: 119:    }
  1334  000420  0C09               	retlw	9
  1335  000422                     l4286:
  1336                           
  1337                           ; BSR set to: 0
  1338  000422  0E0B               	movlw	11
  1339  000424  1856               	xorwf	_NovaTecla^0,w,c
  1340  000426  E0FA               	bz	l4284
  1341  000428  0012               	return	
  1342  00042A                     l4290:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;Menu.c: 125:    if (tmp != 7 && NovaTecla != 11) {
  1346  00042A  0E07               	movlw	7
  1347  00042C  182C               	xorwf	_tmp^0,w,c
  1348  00042E  E005               	bz	l4302
  1349                           
  1350                           ; BSR set to: 0
  1351  000430  0E0B               	movlw	11
  1352  000432  1856               	xorwf	_NovaTecla^0,w,c
  1353  000434  E002               	bz	l4302
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;Menu.c: 126:     tmp++;
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;Menu.c: 127:     NovaTecla = -1;
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;Menu.c: 128:     novaLletra = -1;
  1363  000436  DA3E               	call	PL50	;call to abstracted procedure
  1364  000438  D7DF               	goto	l4274
  1365  00043A                     l4302:
  1366                           
  1367                           ; BSR set to: 0
  1368  00043A  0E07               	movlw	7
  1369  00043C  182C               	xorwf	_tmp^0,w,c
  1370  00043E  E004               	bz	u3640
  1371                           
  1372                           ; BSR set to: 0
  1373  000440  0E0B               	movlw	11
  1374  000442  1856               	xorwf	_NovaTecla^0,w,c
  1375  000444  A4D8               	btfss	status,2,c
  1376  000446  0012               	return	
  1377  000448                     u3640:
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;Menu.c: 132:     UenviaPas('\0',tmp);
  1381  000448  C02C  F069         	movff	_tmp,UenviaPas@pos
  1382  00044C  0E00               	movlw	0
  1383  00044E  EC38  F009         	call	_UenviaPas
  1384                           
  1385                           ;Menu.c: 133:     NovaTecla = -1;
  1386                           
  1387                           ;Menu.c: 134:     novaLletra = -1;
  1388                           
  1389                           ;Menu.c: 135:     tmp = 0;
  1390  000452  DA2C               	call	PL48	;call to abstracted procedure
  1391                           
  1392                           ;Menu.c: 136:     UcheckExists();
  1393  000454  EC8B  F009         	call	_UcheckExists	;wreg free
  1394                           
  1395                           ;Menu.c: 137:     SMSoff();
  1396  000458  EC81  F009         	call	_SMSoff	;wreg free
  1397                           
  1398                           ;Menu.c: 138:     state = 10;
  1399  00045C  0E0A               	movlw	10
  1400  00045E  6E27               	movwf	menu@state^0,c
  1401  000460  0C0A               	retlw	10
  1402  000462                     l4320:
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;Menu.c: 142:    if (!UcheckExistsNotFinished()) {
  1406  000462  EC54  F009         	call	_UcheckExistsNotFinished	;wreg free
  1407  000466  B0D8               	btfsc	status,0,c
  1408  000468  0012               	return	
  1409                           
  1410                           ;Menu.c: 143:     indexUsuari = UcheckExistsGetError();
  1411  00046A  EC89  F009         	call	_UcheckExistsGetError	;wreg free
  1412  00046E  6E29               	movwf	_indexUsuari^0,c
  1413                           
  1414                           ;Menu.c: 144:     state = 11;
  1415  000470  0E0B               	movlw	11
  1416  000472  6E27               	movwf	menu@state^0,c
  1417  000474  0C0B               	retlw	11
  1418  000476                     l508:
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;Menu.c: 148:    if (!loginNOTRegister && indexUsuari == -1) {
  1422  000476  B478               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1423  000478  D006               	goto	l509
  1424                           
  1425                           ; BSR set to: 0
  1426  00047A  2829               	incf	_indexUsuari^0,w,c
  1427  00047C  E104               	bnz	l509
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;Menu.c: 149:     URegister();
  1431  00047E  EC97  F009         	call	_URegister	;wreg free
  1432  000482                     l4330:
  1433                           
  1434                           ;Menu.c: 150:     state = 0;
  1435  000482  6A27               	clrf	menu@state^0,c
  1436                           
  1437                           ;Menu.c: 151:    }
  1438  000484  0012               	return	
  1439  000486                     l509:
  1440                           
  1441                           ; BSR set to: 0
  1442  000486  B478               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1443                           
  1444                           ; BSR set to: 0
  1445  000488  BE29               	btfsc	_indexUsuari^0,7,c
  1446  00048A  D003               	goto	l511
  1447  00048C                     u3690:
  1448                           
  1449                           ;Menu.c: 153:     state = 12;
  1450  00048C  0E0C               	movlw	12
  1451  00048E  6E27               	movwf	menu@state^0,c
  1452                           
  1453                           ;Menu.c: 154:    }
  1454  000490  0C0C               	retlw	12
  1455  000492                     l511:
  1456                           
  1457                           ; BSR set to: 0
  1458  000492  A478               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1459  000494  D002               	goto	u3710
  1460                           
  1461                           ; BSR set to: 0
  1462  000496  2829               	incf	_indexUsuari^0,w,c
  1463  000498  E0F4               	bz	l4330
  1464  00049A                     u3710:
  1465                           
  1466                           ; BSR set to: 0
  1467  00049A  A478               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1468                           
  1469                           ; BSR set to: 0
  1470  00049C  BE29               	btfsc	_indexUsuari^0,7,c
  1471  00049E  D7F6               	goto	u3690
  1472  0004A0  D7F0               	goto	l4330
  1473  0004A2                     l4342:
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;Menu.c: 163:    LcClear();
  1477  0004A2  ECBE  F008         	call	_LcClear	;wreg free
  1478                           
  1479                           ;Menu.c: 164:    SiFerMenu();
  1480  0004A6  EC98  F009         	call	_SiFerMenu	;wreg free
  1481                           
  1482                           ;Menu.c: 165:    GLCDMostraMenu(menuDalt);
  1483  0004AA  502A               	movf	_menuDalt^0,w,c
  1484  0004AC  EC9E  F009         	call	_GLCDMostraMenu
  1485                           
  1486                           ;Menu.c: 166:    novaDireccio = -1;
  1487  0004B0  6854               	setf	_novaDireccio^0,c
  1488                           
  1489                           ;Menu.c: 167:    NovaTecla = -1;
  1490  0004B2  6856               	setf	_NovaTecla^0,c
  1491                           
  1492                           ;Menu.c: 168:    state = 13;
  1493  0004B4  0E0D               	movlw	13
  1494  0004B6  6E27               	movwf	menu@state^0,c
  1495                           
  1496                           ;Menu.c: 169:   break;
  1497  0004B8  0C0D               	retlw	13
  1498  0004BA                     l4354:
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;Menu.c: 171:    if (novaDireccio == 8) {
  1502  0004BA  0E08               	movlw	8
  1503  0004BC  1854               	xorwf	_novaDireccio^0,w,c
  1504  0004BE  E105               	bnz	l4362
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;Menu.c: 172:     if(menuDalt < 4) menuDalt++;
  1508  0004C0  0E04               	movlw	4
  1509  0004C2  602A               	cpfslt	_menuDalt^0,c
  1510  0004C4  D7E3               	goto	u3690
  1511                           
  1512                           ; BSR set to: 0
  1513  0004C6  2A2A               	incf	_menuDalt^0,f,c
  1514  0004C8  D7E1               	goto	u3690
  1515  0004CA                     l4362:
  1516                           
  1517                           ; BSR set to: 0
  1518  0004CA  0E02               	movlw	2
  1519  0004CC  1854               	xorwf	_novaDireccio^0,w,c
  1520  0004CE  E104               	bnz	l4370
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;Menu.c: 176:     if(menuDalt > 0) menuDalt--;
  1524  0004D0  502A               	movf	_menuDalt^0,w,c
  1525  0004D2  E0DC               	bz	u3690
  1526                           
  1527                           ; BSR set to: 0
  1528  0004D4  062A               	decf	_menuDalt^0,f,c
  1529  0004D6  D7DA               	goto	u3690
  1530  0004D8                     l4370:
  1531                           
  1532                           ; BSR set to: 0
  1533  0004D8  0E0B               	movlw	11
  1534  0004DA  1856               	xorwf	_NovaTecla^0,w,c
  1535  0004DC  E10E               	bnz	l4382
  1536                           
  1537                           ; BSR set to: 0
  1538  0004DE  0E03               	movlw	3
  1539  0004E0  182A               	xorwf	_menuDalt^0,w,c
  1540  0004E2  E10B               	bnz	l4382
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;Menu.c: 180:     NoFerMenu();
  1544  0004E4  EC99  F009         	call	_NoFerMenu	;wreg free
  1545                           
  1546                           ;Menu.c: 181:     LcClear();
  1547  0004E8  ECBE  F008         	call	_LcClear	;wreg free
  1548                           
  1549                           ;Menu.c: 182:     LcNewString("BYE BYE ");
  1550  0004EC  0EC6               	movlw	low STR_5
  1551  0004EE  D9D0               	call	PL2	;call to abstracted procedure
  1552  0004F0  EC5A  F009         	call	_LcNewString	;wreg free
  1553                           
  1554                           ;Menu.c: 183:     state = 14;
  1555  0004F4  0E0E               	movlw	14
  1556  0004F6  6E27               	movwf	menu@state^0,c
  1557                           
  1558                           ;Menu.c: 184:    }
  1559  0004F8  0C0E               	retlw	14
  1560  0004FA                     l4382:
  1561                           
  1562                           ; BSR set to: 0
  1563  0004FA  0E0B               	movlw	11
  1564  0004FC  1856               	xorwf	_NovaTecla^0,w,c
  1565  0004FE  E10E               	bnz	l4396
  1566                           
  1567                           ; BSR set to: 0
  1568  000500  042A               	decf	_menuDalt^0,w,c
  1569  000502  E10C               	bnz	l4396
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;Menu.c: 186:     LcClear();
  1573  000504  ECBE  F008         	call	_LcClear	;wreg free
  1574                           
  1575                           ;Menu.c: 187:     NoFerMenu();
  1576  000508  EC99  F009         	call	_NoFerMenu	;wreg free
  1577                           
  1578                           ;Menu.c: 188:     LcNewString("Modify Time:");
  1579  00050C  0EA2               	movlw	low STR_6
  1580  00050E  D9C0               	call	PL2	;call to abstracted procedure
  1581  000510  EC5A  F009         	call	_LcNewString	;wreg free
  1582                           
  1583                           ;Menu.c: 189:     NovaTecla = -1;
  1584  000514  6856               	setf	_NovaTecla^0,c
  1585                           
  1586                           ;Menu.c: 190:     state = 16;
  1587  000516  0E10               	movlw	16
  1588  000518  6E27               	movwf	menu@state^0,c
  1589                           
  1590                           ;Menu.c: 191:    }
  1591  00051A  0C10               	retlw	16
  1592  00051C                     l4396:
  1593                           
  1594                           ; BSR set to: 0
  1595  00051C  502A               	movf	_menuDalt^0,w,c
  1596  00051E  E112               	bnz	l4412
  1597                           
  1598                           ; BSR set to: 0
  1599  000520  0E0B               	movlw	11
  1600  000522  1856               	xorwf	_NovaTecla^0,w,c
  1601  000524  E10F               	bnz	l4412
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;Menu.c: 193:     NoFerMenu();
  1605  000526  EC99  F009         	call	_NoFerMenu	;wreg free
  1606                           
  1607                           ;Menu.c: 194:     NovaTecla = -1;
  1608  00052A  6856               	setf	_NovaTecla^0,c
  1609                           
  1610                           ;Menu.c: 195:     LcClear();
  1611  00052C  ECBE  F008         	call	_LcClear	;wreg free
  1612                           
  1613                           ;Menu.c: 196:     LcNewString("TIME REMAINING:");
  1614  000530  0E92               	movlw	low STR_7
  1615  000532  D9AE               	call	PL2	;call to abstracted procedure
  1616  000534  EC5A  F009         	call	_LcNewString	;wreg free
  1617                           
  1618                           ;Menu.c: 197:     JJuguem(indexUsuari);
  1619  000538  5029               	movf	_indexUsuari^0,w,c
  1620  00053A  EC9D  F009         	call	_JJuguem
  1621  00053E                     l4410:
  1622                           
  1623                           ;Menu.c: 198:     state = 21;
  1624  00053E  0E15               	movlw	21
  1625  000540  6E27               	movwf	menu@state^0,c
  1626                           
  1627                           ;Menu.c: 199:    }
  1628  000542  0C15               	retlw	21
  1629  000544                     l4412:
  1630                           
  1631                           ; BSR set to: 0
  1632  000544  0E0B               	movlw	11
  1633  000546  1856               	xorwf	_NovaTecla^0,w,c
  1634  000548  A4D8               	btfss	status,2,c
  1635  00054A  0012               	return	
  1636                           
  1637                           ; BSR set to: 0
  1638  00054C  0E04               	movlw	4
  1639  00054E  182A               	xorwf	_menuDalt^0,w,c
  1640  000550  A4D8               	btfss	status,2,c
  1641  000552  0012               	return	
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;Menu.c: 201:     NoFerMenu();
  1645  000554  EC99  F009         	call	_NoFerMenu	;wreg free
  1646                           
  1647                           ;Menu.c: 202:     LcClear();
  1648  000558  ECBE  F008         	call	_LcClear	;wreg free
  1649                           
  1650                           ;Menu.c: 203:     menuDalt = 0;
  1651  00055C  6A2A               	clrf	_menuDalt^0,c
  1652                           
  1653                           ;Menu.c: 204:                 NovaTecla = -1;
  1654  00055E  6856               	setf	_NovaTecla^0,c
  1655  000560                     l4424:
  1656                           
  1657                           ;Menu.c: 205:     state = 23;
  1658  000560  0E17               	movlw	23
  1659  000562  6E27               	movwf	menu@state^0,c
  1660  000564  0C17               	retlw	23
  1661  000566                     l4426:
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;Menu.c: 209:    if (LcLliure()) {
  1665  000566  EC60  F009         	call	_LcLliure	;wreg free
  1666  00056A  A0D8               	btfss	status,0,c
  1667  00056C  0012               	return	
  1668                           
  1669                           ;Menu.c: 210:     LcNewString(UgetUserName(indexUsuari));
  1670  00056E  5029               	movf	_indexUsuari^0,w,c
  1671  000570  EC25  F009         	call	_UgetUserName
  1672  000574  D993               	call	PL6	;call to abstracted procedure
  1673  000576  EC5A  F009         	call	_LcNewString	;wreg free
  1674                           
  1675                           ;Menu.c: 211:     TiResetTics(timerMenu);
  1676  00057A  502B               	movf	_timerMenu^0,w,c
  1677  00057C  ECFE  F008         	call	_TiResetTics
  1678                           
  1679                           ;Menu.c: 212:     state = 15;
  1680  000580  0E0F               	movlw	15
  1681  000582  6E27               	movwf	menu@state^0,c
  1682  000584  0C0F               	retlw	15
  1683  000586                     l4434:
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;Menu.c: 216:    if (TiGetTics(timerMenu) > 2410) {
  1687  000586  502B               	movf	_timerMenu^0,w,c
  1688  000588  ECAB  F008         	call	_TiGetTics
  1689  00058C  BE6A               	btfsc	(?_TiGetTics+1)^0,7,c
  1690  00058E  0012               	return	
  1691  000590  0E6B               	movlw	107
  1692  000592  5C69               	subwf	?_TiGetTics^0,w,c
  1693  000594  0E09               	movlw	9
  1694  000596  586A               	subwfb	(?_TiGetTics+1)^0,w,c
  1695  000598  E301 D773          	bc	l4330
  1696  00059C  0012               	return	
  1697  00059E                     l4438:
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;Menu.c: 221:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  1701  00059E  EC60  F009         	call	_LcLliure	;wreg free
  1702  0005A2  E347               	bnc	l4504
  1703  0005A4  BE56               	btfsc	_NovaTecla^0,7,c
  1704  0005A6  D045               	goto	l4504
  1705  0005A8  5056               	movf	_NovaTecla^0,w,c
  1706  0005AA  0A80               	xorlw	128
  1707  0005AC  0F76               	addlw	-138
  1708  0005AE  E241               	bc	l4504
  1709                           
  1710                           ;Menu.c: 222:     LcGotoXY(0,1);
  1711  0005B0  D97A               	call	PL24	;call to abstracted procedure
  1712  0005B2  EC3E  F008         	call	_LcGotoXY
  1713                           
  1714                           ;Menu.c: 223:     horaTmp[0] = NovaTecla+48;
  1715  0005B6  5056               	movf	_NovaTecla^0,w,c
  1716  0005B8  0F30               	addlw	48
  1717  0005BA  6E42               	movwf	_horaTmp^0,c
  1718                           
  1719                           ;Menu.c: 224:     LcPutChar(horaTmp[0]);
  1720  0005BC  5042               	movf	_horaTmp^0,w,c
  1721  0005BE  ECA1  F007         	call	_LcPutChar
  1722                           
  1723                           ;Menu.c: 225:     NovaTecla = -1;
  1724  0005C2  6856               	setf	_NovaTecla^0,c
  1725                           
  1726                           ;Menu.c: 226:     state = 17;
  1727  0005C4  0E11               	movlw	17
  1728  0005C6                     L1:
  1729  0005C6  6E27               	movwf	menu@state^0,c
  1730                           
  1731                           ;Menu.c: 227:    }
  1732  0005C8  0012               	return	
  1733  0005CA                     L2:
  1734  0005CA  1856               	xorwf	_NovaTecla^0,w,c
  1735  0005CC  E101 D75E          	bz	u3690
  1736  0005D0  0012               	return	
  1737  0005D2                     l4458:
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;Menu.c: 233:    if (NovaTecla > -1 && NovaTecla < 10) {
  1741  0005D2  BE56               	btfsc	_NovaTecla^0,7,c
  1742  0005D4  D02E               	goto	l4504
  1743                           
  1744                           ; BSR set to: 0
  1745  0005D6  5056               	movf	_NovaTecla^0,w,c
  1746  0005D8  0A80               	xorlw	128
  1747  0005DA  0F76               	addlw	-138
  1748  0005DC  E22A               	bc	l4504
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;Menu.c: 234:     horaTmp[1] = NovaTecla+48;
  1752  0005DE  5056               	movf	_NovaTecla^0,w,c
  1753  0005E0  0F30               	addlw	48
  1754  0005E2  6E43               	movwf	(_horaTmp+1)^0,c
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;Menu.c: 235:     LcPutChar(horaTmp[1]);
  1758  0005E4  5043               	movf	(_horaTmp+1)^0,w,c
  1759  0005E6  ECA1  F007         	call	_LcPutChar
  1760                           
  1761                           ;Menu.c: 236:     NovaTecla = -1;
  1762  0005EA  6856               	setf	_NovaTecla^0,c
  1763                           
  1764                           ;Menu.c: 237:     LcPutChar(':');
  1765  0005EC  0E3A               	movlw	58
  1766  0005EE  ECA1  F007         	call	_LcPutChar
  1767                           
  1768                           ;Menu.c: 238:     state = 18;
  1769  0005F2  0E12               	movlw	18
  1770  0005F4  D7E8               	goto	L1
  1771  0005F6                     l4476:
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;Menu.c: 245:    if (NovaTecla > -1 && NovaTecla < 10) {
  1775  0005F6  BE56               	btfsc	_NovaTecla^0,7,c
  1776  0005F8  D01C               	goto	l4504
  1777                           
  1778                           ; BSR set to: 0
  1779  0005FA  5056               	movf	_NovaTecla^0,w,c
  1780  0005FC  0A80               	xorlw	128
  1781  0005FE  0F76               	addlw	-138
  1782  000600  E218               	bc	l4504
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;Menu.c: 246:     horaTmp[2] = NovaTecla+48;
  1786  000602  5056               	movf	_NovaTecla^0,w,c
  1787  000604  0F30               	addlw	48
  1788  000606  6E44               	movwf	(_horaTmp+2)^0,c
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;Menu.c: 247:     LcPutChar(horaTmp[2]);
  1792  000608  5044               	movf	(_horaTmp+2)^0,w,c
  1793  00060A  ECA1  F007         	call	_LcPutChar
  1794                           
  1795                           ;Menu.c: 248:     NovaTecla = -1;
  1796  00060E  6856               	setf	_NovaTecla^0,c
  1797                           
  1798                           ;Menu.c: 249:     state = 19;
  1799  000610  0E13               	movlw	19
  1800  000612  D7D9               	goto	L1
  1801  000614                     l4492:
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;Menu.c: 256:    if (NovaTecla > -1 && NovaTecla < 10) {
  1805  000614  BE56               	btfsc	_NovaTecla^0,7,c
  1806  000616  D00D               	goto	l4504
  1807                           
  1808                           ; BSR set to: 0
  1809  000618  5056               	movf	_NovaTecla^0,w,c
  1810  00061A  0A80               	xorlw	128
  1811  00061C  0F76               	addlw	-138
  1812  00061E  E209               	bc	l4504
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;Menu.c: 257:     horaTmp[3] = NovaTecla+48;
  1816  000620  5056               	movf	_NovaTecla^0,w,c
  1817  000622  0F30               	addlw	48
  1818  000624  6E45               	movwf	(_horaTmp+3)^0,c
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;Menu.c: 258:     LcPutChar(horaTmp[3]);
  1822  000626  5045               	movf	(_horaTmp+3)^0,w,c
  1823  000628  ECA1  F007         	call	_LcPutChar
  1824                           
  1825                           ;Menu.c: 259:     NovaTecla = -1;
  1826  00062C  6856               	setf	_NovaTecla^0,c
  1827                           
  1828                           ;Menu.c: 260:     state = 20;
  1829  00062E  0E14               	movlw	20
  1830  000630  D7CA               	goto	L1
  1831  000632                     l4504:
  1832                           
  1833                           ; BSR set to: 0
  1834  000632  0E0A               	movlw	10
  1835  000634  D7CA               	goto	L2
  1836  000636                     l4508:
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;Menu.c: 267:    if (NovaTecla == 11) {
  1840  000636  0E0B               	movlw	11
  1841  000638  1856               	xorwf	_NovaTecla^0,w,c
  1842  00063A  E1FB               	bnz	l4504
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;Menu.c: 268:     HActualitzaHora(horaTmp);
  1846  00063C  0E42               	movlw	low _horaTmp
  1847  00063E  6E69               	movwf	HActualitzaHora@nova^0,c
  1848  000640  EC24  F008         	call	_HActualitzaHora	;wreg free
  1849                           
  1850                           ;Menu.c: 269:     NovaTecla = -1;
  1851  000644  6856               	setf	_NovaTecla^0,c
  1852  000646  D722               	goto	u3690
  1853  000648                     l4520:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;Menu.c: 277:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  1857  000648  0E0A               	movlw	10
  1858  00064A  1856               	xorwf	_NovaTecla^0,w,c
  1859  00064C  E103               	bnz	u4040
  1860                           
  1861                           ; BSR set to: 0
  1862  00064E  EC60  F009         	call	_LcLliure	;wreg free
  1863  000652  E203               	bc	u4050
  1864  000654                     u4040:
  1865  000654  EC4E  F009         	call	_checkHoraAcabat	;wreg free
  1866  000658  E307               	bnc	l4532
  1867  00065A                     u4050:
  1868                           
  1869                           ;Menu.c: 278:     LcClear();
  1870  00065A  ECBE  F008         	call	_LcClear	;wreg free
  1871                           
  1872                           ;Menu.c: 279:     JendGame();
  1873  00065E  EC9C  F009         	call	_JendGame	;wreg free
  1874                           
  1875                           ;Menu.c: 280:     state = 22;
  1876  000662  0E16               	movlw	22
  1877  000664  6E27               	movwf	menu@state^0,c
  1878                           
  1879                           ;Menu.c: 281:    }
  1880  000666  0C16               	retlw	22
  1881  000668                     l4532:
  1882  000668  5056               	movf	_NovaTecla^0,w,c
  1883  00066A  0A80               	xorlw	128
  1884  00066C  0F7F               	addlw	-129
  1885  00066E  E309               	bnc	l4542
  1886  000670  5056               	movf	_NovaTecla^0,w,c
  1887  000672  0A80               	xorlw	128
  1888  000674  0F76               	addlw	-138
  1889  000676  E205               	bc	l4542
  1890                           
  1891                           ;Menu.c: 283:     JnovaTecla(NovaTecla);
  1892  000678  5056               	movf	_NovaTecla^0,w,c
  1893  00067A  EC9A  F009         	call	_JnovaTecla
  1894                           
  1895                           ;Menu.c: 284:     NovaTecla = -1;
  1896  00067E  6856               	setf	_NovaTecla^0,c
  1897  000680  D75E               	goto	l4410
  1898  000682                     l4542:
  1899  000682  BE54               	btfsc	_novaDireccio^0,7,c
  1900  000684  0012               	return	
  1901                           
  1902                           ;Menu.c: 288:     JnovaDireccio(novaDireccio);
  1903  000686  5054               	movf	_novaDireccio^0,w,c
  1904  000688  EC9B  F009         	call	_JnovaDireccio
  1905                           
  1906                           ;Menu.c: 289:     novaDireccio = -1;
  1907  00068C  6854               	setf	_novaDireccio^0,c
  1908  00068E  D757               	goto	l4410
  1909  000690                     l4550:
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;Menu.c: 294:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  1913  000690  EC8D  F009         	call	_SIOHaAcabatPuntuacions	;wreg free
  1914  000694  0900               	iorlw	0
  1915  000696  B4D8               	btfsc	status,2,c
  1916  000698  0012               	return	
  1917  00069A  0E0B               	movlw	11
  1918  00069C  D796               	goto	L2
  1919  00069E                     l4556:
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;Menu.c: 299:    if (LcLliure()) {
  1923  00069E  EC60  F009         	call	_LcLliure	;wreg free
  1924  0006A2  A0D8               	btfss	status,0,c
  1925  0006A4  0012               	return	
  1926                           
  1927                           ;Menu.c: 300:     if (menuDalt == UgetNumUsuaris()){
  1928  0006A6  EC87  F009         	call	_UgetNumUsuaris	;wreg free
  1929  0006AA  182A               	xorwf	_menuDalt^0,w,c
  1930  0006AC  E101               	bnz	l4562
  1931                           
  1932                           ;Menu.c: 301:       menuDalt = 0;
  1933  0006AE  6A2A               	clrf	_menuDalt^0,c
  1934  0006B0                     l4562:
  1935                           
  1936                           ;Menu.c: 303:     LcGotoXY(0,0);
  1937  0006B0  0E00               	movlw	0
  1938  0006B2  6E71               	movwf	LcGotoXY@Row^0,c
  1939  0006B4  EC3E  F008         	call	_LcGotoXY
  1940                           
  1941                           ;Menu.c: 304:     LcNewString(UgetUserName(menuDalt));
  1942  0006B8  502A               	movf	_menuDalt^0,w,c
  1943  0006BA  EC25  F009         	call	_UgetUserName
  1944  0006BE  D8EE               	call	PL6	;call to abstracted procedure
  1945  0006C0  EC5A  F009         	call	_LcNewString	;wreg free
  1946                           
  1947                           ;Menu.c: 305:     menuDalt++;
  1948  0006C4  2A2A               	incf	_menuDalt^0,f,c
  1949                           
  1950                           ;Menu.c: 306:     state = 24;
  1951  0006C6  0E18               	movlw	24
  1952  0006C8  6E27               	movwf	menu@state^0,c
  1953  0006CA  0C18               	retlw	24
  1954  0006CC                     l4570:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;Menu.c: 310:    if (LcLliure()) {
  1958  0006CC  EC60  F009         	call	_LcLliure	;wreg free
  1959  0006D0  A0D8               	btfss	status,0,c
  1960  0006D2  0012               	return	
  1961                           
  1962                           ;Menu.c: 311:     if (menuDalt < UgetNumUsuaris()){
  1963  0006D4  EC87  F009         	call	_UgetNumUsuaris	;wreg free
  1964  0006D8  602A               	cpfslt	_menuDalt^0,c
  1965  0006DA  D00B               	goto	l576
  1966                           
  1967                           ;Menu.c: 312:       LcGotoXY(0,1);
  1968  0006DC  D8E4               	call	PL24	;call to abstracted procedure
  1969  0006DE  EC3E  F008         	call	_LcGotoXY
  1970                           
  1971                           ;Menu.c: 313:       LcNewString(UgetUserName(menuDalt));
  1972  0006E2  502A               	movf	_menuDalt^0,w,c
  1973  0006E4  EC25  F009         	call	_UgetUserName
  1974  0006E8  D8D9               	call	PL6	;call to abstracted procedure
  1975  0006EA  EC5A  F009         	call	_LcNewString	;wreg free
  1976                           
  1977                           ;Menu.c: 314:       menuDalt++;
  1978  0006EE  2A2A               	incf	_menuDalt^0,f,c
  1979                           
  1980                           ;Menu.c: 315:     } else {
  1981  0006F0  D001               	goto	l4580
  1982  0006F2                     l576:
  1983                           
  1984                           ;Menu.c: 316:       menuDalt = 0;
  1985  0006F2  6A2A               	clrf	_menuDalt^0,c
  1986  0006F4                     l4580:
  1987                           
  1988                           ;Menu.c: 318:     state = 25;
  1989  0006F4  0E19               	movlw	25
  1990  0006F6  6E27               	movwf	menu@state^0,c
  1991  0006F8  0C19               	retlw	25
  1992  0006FA                     l4582:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;Menu.c: 322:    if (LcLliure()) {
  1996  0006FA  EC60  F009         	call	_LcLliure	;wreg free
  1997  0006FE  A0D8               	btfss	status,0,c
  1998  000700  0012               	return	
  1999                           
  2000                           ;Menu.c: 323:     if (menuDalt == UgetNumUsuaris()){
  2001  000702  EC87  F009         	call	_UgetNumUsuaris	;wreg free
  2002  000706  182A               	xorwf	_menuDalt^0,w,c
  2003  000708  E101               	bnz	l4588
  2004                           
  2005                           ;Menu.c: 324:       menuDalt = 0;
  2006  00070A  6A2A               	clrf	_menuDalt^0,c
  2007  00070C                     l4588:
  2008                           
  2009                           ;Menu.c: 326:     LcGotoXY(16,0);
  2010  00070C  0E00               	movlw	0
  2011  00070E  6E71               	movwf	LcGotoXY@Row^0,c
  2012  000710  0E10               	movlw	16
  2013  000712  EC3E  F008         	call	_LcGotoXY
  2014                           
  2015                           ;Menu.c: 327:     LcNewString(UgetUserName(menuDalt));
  2016  000716  502A               	movf	_menuDalt^0,w,c
  2017  000718  EC25  F009         	call	_UgetUserName
  2018  00071C  D8BF               	call	PL6	;call to abstracted procedure
  2019  00071E  EC5A  F009         	call	_LcNewString	;wreg free
  2020                           
  2021                           ;Menu.c: 328:     state = 26;
  2022  000722  0E1A               	movlw	26
  2023  000724  6E27               	movwf	menu@state^0,c
  2024  000726  0C1A               	retlw	26
  2025  000728                     l4594:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;Menu.c: 332:    if (LcLliure()) {
  2029  000728  EC60  F009         	call	_LcLliure	;wreg free
  2030  00072C  A0D8               	btfss	status,0,c
  2031  00072E  0012               	return	
  2032                           
  2033                           ;Menu.c: 333:     if (menuDalt+1 < UgetNumUsuaris()){
  2034  000730  EC87  F009         	call	_UgetNumUsuaris	;wreg free
  2035  000734  0100               	movlb	0	; () banked
  2036  000736  6F8C               	movwf	??_menu& (0+255),b
  2037  000738  6B8D               	clrf	(??_menu+1)& (0+255),b
  2038  00073A  502A               	movf	_menuDalt^0,w,c
  2039  00073C  6F8E               	movwf	(??_menu+2)& (0+255),b
  2040  00073E  6B8F               	clrf	(??_menu+3)& (0+255),b
  2041  000740  2B8E               	incf	(??_menu+2)& (0+255),f,b
  2042  000742  0E00               	movlw	0
  2043  000744  238F               	addwfc	(??_menu+3)& (0+255),f,b
  2044  000746  518C               	movf	??_menu& (0+255),w,b
  2045  000748  5D8E               	subwf	(??_menu+2)& (0+255),w,b
  2046  00074A  518F               	movf	(??_menu+3)& (0+255),w,b
  2047  00074C  0A80               	xorlw	128
  2048  00074E  6F90               	movwf	(??_menu+4)& (0+255),b
  2049  000750  518D               	movf	(??_menu+1)& (0+255),w,b
  2050  000752  0A80               	xorlw	128
  2051  000754  5990               	subwfb	(??_menu+4)& (0+255),w,b
  2052  000756  E20B               	bc	l4602
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;Menu.c: 334:       LcGotoXY(16,1);
  2056  000758  0E01               	movlw	1
  2057  00075A  6E71               	movwf	LcGotoXY@Row^0,c
  2058  00075C  0E10               	movlw	16
  2059  00075E  EC3E  F008         	call	_LcGotoXY
  2060                           
  2061                           ;Menu.c: 335:       LcNewString(UgetUserName(menuDalt+1));
  2062  000762  282A               	incf	_menuDalt^0,w,c
  2063  000764  EC25  F009         	call	_UgetUserName
  2064  000768  D899               	call	PL6	;call to abstracted procedure
  2065  00076A  EC5A  F009         	call	_LcNewString	;wreg free
  2066  00076E                     l4602:
  2067                           
  2068                           ;Menu.c: 337:     state = 27;
  2069  00076E  0E1B               	movlw	27
  2070  000770  6E27               	movwf	menu@state^0,c
  2071  000772  0C1B               	retlw	27
  2072  000774                     l4604:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;Menu.c: 341:    if (TiGetTics(timerMenu) > 1205) {
  2076  000774  502B               	movf	_timerMenu^0,w,c
  2077  000776  ECAB  F008         	call	_TiGetTics
  2078  00077A  BE6A               	btfsc	(?_TiGetTics+1)^0,7,c
  2079  00077C  D008               	goto	l4608
  2080  00077E  0EB6               	movlw	182
  2081  000780  5C69               	subwf	?_TiGetTics^0,w,c
  2082  000782  0E04               	movlw	4
  2083  000784  586A               	subwfb	(?_TiGetTics+1)^0,w,c
  2084  000786  E303               	bnc	l4608
  2085                           
  2086                           ;Menu.c: 342:     state = 29;
  2087  000788  0E1D               	movlw	29
  2088  00078A  6E27               	movwf	menu@state^0,c
  2089                           
  2090                           ;Menu.c: 343:    }
  2091  00078C  0C1D               	retlw	29
  2092  00078E                     l4608:
  2093  00078E  0E0B               	movlw	11
  2094  000790  1856               	xorwf	_NovaTecla^0,w,c
  2095  000792  A4D8               	btfss	status,2,c
  2096  000794  0012               	return	
  2097                           
  2098                           ;Menu.c: 345:     menuDalt = 0;
  2099  000796  6A2A               	clrf	_menuDalt^0,c
  2100  000798  D679               	goto	u3690
  2101  00079A                     l4614:
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;Menu.c: 350:    if (pos > 15) {
  2105  00079A  0E0F               	movlw	15
  2106  00079C  6428               	cpfsgt	_pos^0,c
  2107  00079E  D003               	goto	l4620
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;Menu.c: 351:     LcClear();
  2111  0007A0  ECBE  F008         	call	_LcClear	;wreg free
  2112  0007A4  D6DD               	goto	l4424
  2113  0007A6                     l4620:
  2114                           
  2115                           ; BSR set to: 0
  2116  0007A6  0E10               	movlw	16
  2117  0007A8  6028               	cpfslt	_pos^0,c
  2118  0007AA  0C10               	retlw	16
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;Menu.c: 355:     TiResetTics(timerMenu);
  2122  0007AC  502B               	movf	_timerMenu^0,w,c
  2123  0007AE  ECFE  F008         	call	_TiResetTics
  2124                           
  2125                           ;Menu.c: 356:     LcScroll();
  2126  0007B2  EC84  F009         	call	_LcScroll	;wreg free
  2127                           
  2128                           ;Menu.c: 357:     pos++;
  2129  0007B6  2A28               	incf	_pos^0,f,c
  2130  0007B8                     l4628:
  2131                           
  2132                           ;Menu.c: 358:     state = 28;
  2133  0007B8  0E1C               	movlw	28
  2134  0007BA  6E27               	movwf	menu@state^0,c
  2135  0007BC  0C1C               	retlw	28
  2136  0007BE                     l4630:
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;Menu.c: 362:    if (LcLliure()) {
  2140  0007BE  EC60  F009         	call	_LcLliure	;wreg free
  2141  0007C2  A0D8               	btfss	status,0,c
  2142  0007C4  0012               	return	
  2143                           
  2144                           ;Menu.c: 363:     TiResetTics(timerMenu);
  2145  0007C6  502B               	movf	_timerMenu^0,w,c
  2146  0007C8  ECFE  F008         	call	_TiResetTics
  2147                           
  2148                           ;Menu.c: 364:     pos = 0;
  2149  0007CC  6A28               	clrf	_pos^0,c
  2150  0007CE  D7F4               	goto	l4628
  2151  0007D0                     l4640:
  2152  0007D0  5027               	movf	menu@state^0,w,c
  2153  0007D2  0100               	movlb	0	; () banked
  2154  0007D4  6F8C               	movwf	??_menu& (0+255),b
  2155  0007D6  6B8D               	clrf	(??_menu+1)& (0+255),b
  2156                           
  2157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2158                           ; Switch size 1, requested type "space"
  2159                           ; Number of cases is 1, Range of values is 0 to 0
  2160                           ; switch strategies available:
  2161                           ; Name         Instructions Cycles
  2162                           ; simple_byte            4     3 (average)
  2163                           ;	Chosen strategy is simple_byte
  2164  0007D8  518D               	movf	(??_menu+1)& (0+255),w,b
  2165  0007DA  A4D8               	btfss	status,2,c
  2166  0007DC  0012               	return	
  2167                           
  2168                           ; BSR set to: 0
  2169                           ; Switch size 1, requested type "space"
  2170                           ; Number of cases is 30, Range of values is 0 to 29
  2171                           ; switch strategies available:
  2172                           ; Name         Instructions Cycles
  2173                           ; simple_byte           91    46 (average)
  2174                           ;	Chosen strategy is simple_byte
  2175  0007DE  518C               	movf	??_menu& (0+255),w,b
  2176  0007E0  E101 D58A          	bz	l4180
  2177  0007E4  0A01               	xorlw	1	; case 1
  2178  0007E6  E101 D590          	bz	l4186
  2179  0007EA  0A03               	xorlw	3	; case 2
  2180  0007EC  E101 D59C          	bz	l4196
  2181  0007F0  0A01               	xorlw	1	; case 3
  2182  0007F2  E101 D5A9          	bz	l481
  2183  0007F6  0A07               	xorlw	7	; case 4
  2184  0007F8  E101 D5B1          	bz	l4216
  2185  0007FC  0A01               	xorlw	1	; case 5
  2186  0007FE  E101 D5BC          	bz	l4224
  2187  000802  0A03               	xorlw	3	; case 6
  2188  000804  E101 D5C8          	bz	l4234
  2189  000808  0A01               	xorlw	1	; case 7
  2190  00080A  E101 D5DB          	bz	l4248
  2191  00080E  0A0F               	xorlw	15	; case 8
  2192  000810  E101 D5F5          	bz	l4276
  2193  000814  0A01               	xorlw	1	; case 9
  2194  000816  E101 D608          	bz	l4290
  2195  00081A  0A03               	xorlw	3	; case 10
  2196  00081C  E101 D621          	bz	l4320
  2197  000820  0A01               	xorlw	1	; case 11
  2198  000822  E101 D628          	bz	l508
  2199  000826  0A07               	xorlw	7	; case 12
  2200  000828  E101 D63B          	bz	l4342
  2201  00082C  0A01               	xorlw	1	; case 13
  2202  00082E  E101 D644          	bz	l4354
  2203  000832  0A03               	xorlw	3	; case 14
  2204  000834  E101 D697          	bz	l4426
  2205  000838  0A01               	xorlw	1	; case 15
  2206  00083A  E101 D6A4          	bz	l4434
  2207  00083E  0A1F               	xorlw	31	; case 16
  2208  000840  E101 D6AD          	bz	l4438
  2209  000844  0A01               	xorlw	1	; case 17
  2210  000846  E101 D6C4          	bz	l4458
  2211  00084A  0A03               	xorlw	3	; case 18
  2212  00084C  E101 D6D3          	bz	l4476
  2213  000850  0A01               	xorlw	1	; case 19
  2214  000852  E101 D6DF          	bz	l4492
  2215  000856  0A07               	xorlw	7	; case 20
  2216  000858  E101 D6ED          	bz	l4508
  2217  00085C  0A01               	xorlw	1	; case 21
  2218  00085E  E101 D6F3          	bz	l4520
  2219  000862  0A03               	xorlw	3	; case 22
  2220  000864  E101 D714          	bz	l4550
  2221  000868  0A01               	xorlw	1	; case 23
  2222  00086A  E101 D718          	bz	l4556
  2223  00086E  0A0F               	xorlw	15	; case 24
  2224  000870  E101 D72C          	bz	l4570
  2225  000874  0A01               	xorlw	1	; case 25
  2226  000876  E101 D740          	bz	l4582
  2227  00087A  0A03               	xorlw	3	; case 26
  2228  00087C  E101 D754          	bz	l4594
  2229  000880  0A01               	xorlw	1	; case 27
  2230  000882  E09D               	bz	l4630
  2231  000884  0A07               	xorlw	7	; case 28
  2232  000886  E101 D775          	bz	l4604
  2233  00088A  0A01               	xorlw	1	; case 29
  2234  00088C  E086               	bz	l4614
  2235  00088E  0012               	return		;funcret
  2236  000890                     __end_of_menu:
  2237                           	callstack 0
  2238  000890                     PL2:
  2239                           	callstack 24
  2240  000890  6E6C               	movwf	LcNewString@new_s^0,c
  2241  000892  506C               	movf	LcNewString@new_s^0,w,c
  2242  000894  A4D8               	btfss	status,2,c
  2243  000896  0E02               	movlw	high __smallconst
  2244  000898  6E6D               	movwf	(LcNewString@new_s+1)^0,c
  2245  00089A  0012               	return	
  2246  00089C                     __end_ofPL2:
  2247                           	callstack 0
  2248  00089C                     PL6:
  2249                           	callstack 24
  2250  00089C  C069  F06C         	movff	?_UgetUserName,LcNewString@new_s
  2251  0008A0  C06A  F06D         	movff	?_UgetUserName+1,LcNewString@new_s+1
  2252  0008A4  0012               	return	
  2253  0008A6                     __end_ofPL6:
  2254                           	callstack 0
  2255  0008A6                     PL24:
  2256                           	callstack 24
  2257  0008A6  0E01               	movlw	1
  2258  0008A8  6E71               	movwf	LcGotoXY@Row^0,c
  2259  0008AA  0C00               	retlw	0
  2260  0008AC                     __end_ofPL24:
  2261                           	callstack 0
  2262  0008AC                     PL48:
  2263                           	callstack 24
  2264  0008AC  6856               	setf	_NovaTecla^0,c
  2265  0008AE  6855               	setf	_novaLletra^0,c
  2266  0008B0  6A2C               	clrf	_tmp^0,c
  2267  0008B2  0012               	return	
  2268  0008B4                     __end_ofPL48:
  2269                           	callstack 0
  2270  0008B4                     PL50:
  2271                           	callstack 24
  2272  0008B4  2A2C               	incf	_tmp^0,f,c
  2273  0008B6  6856               	setf	_NovaTecla^0,c
  2274  0008B8  6855               	setf	_novaLletra^0,c
  2275  0008BA  0012               	return	
  2276  0008BC                     __end_ofPL50:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _checkHoraAcabat *****************
  2280 ;; Defined at:
  2281 ;;		line 41 in file "Hora.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;		None               void
  2288 ;; Registers used:
  2289 ;;		status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1
  2295 ;;      Params:         0       0       0
  2296 ;;      Locals:         0       0       0
  2297 ;;      Temps:          0       0       0
  2298 ;;      Totals:         0       0       0
  2299 ;;Total ram usage:        0 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 2
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_menu
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text2
  2310  00129C                     __ptext2:
  2311                           	callstack 0
  2312  00129C                     _checkHoraAcabat:
  2313                           	callstack 27
  2314                           
  2315                           ;Hora.c: 42:     return tempsAcabat;
  2316                           
  2317                           ;incstack = 0
  2318  00129C  B078               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2319  00129E  D002               	goto	l2116
  2320  0012A0  90D8               	bcf	status,0,c
  2321  0012A2  0012               	return	
  2322  0012A4                     l2116:
  2323  0012A4  80D8               	bsf	status,0,c
  2324  0012A6  0012               	return		;funcret
  2325  0012A8                     __end_of_checkHoraAcabat:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _UgetUserName *****************
  2329 ;; Defined at:
  2330 ;;		line 50 in file "Usuaris.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  quin            1    wreg     unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  quin            1    7[COMRAM] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  2    5[COMRAM] PTR unsigned char 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, prodl, prodh
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1
  2344 ;;      Params:         2       0       0
  2345 ;;      Locals:         1       0       0
  2346 ;;      Temps:          0       0       0
  2347 ;;      Totals:         3       0       0
  2348 ;;Total ram usage:        3 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 2
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_menu
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text3
  2359  00124A                     __ptext3:
  2360                           	callstack 0
  2361  00124A                     _UgetUserName:
  2362                           	callstack 27
  2363                           
  2364                           ;incstack = 0
  2365                           ;UgetUserName@quin stored from wreg
  2366  00124A  6E6B               	movwf	UgetUserName@quin^0,c
  2367                           
  2368                           ;Usuaris.c: 51:     return usuaris[quin].username;
  2369  00124C  506B               	movf	UgetUserName@quin^0,w,c
  2370  00124E  0D17               	mullw	23
  2371  001250  0E00               	movlw	low _usuaris
  2372  001252  24F3               	addwf	243,w,c
  2373  001254  6E69               	movwf	?_UgetUserName^0,c
  2374  001256  0E01               	movlw	high _usuaris
  2375  001258  20F4               	addwfc	prodh,w,c
  2376  00125A  6E6A               	movwf	(?_UgetUserName+1)^0,c
  2377  00125C  0012               	return		;funcret
  2378  00125E                     __end_of_UgetUserName:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function _UgetNumUsuaris *****************
  2382 ;; Defined at:
  2383 ;;		line 53 in file "Usuaris.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      unsigned char 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1
  2397 ;;      Params:         0       0       0
  2398 ;;      Locals:         0       0       0
  2399 ;;      Temps:          0       0       0
  2400 ;;      Totals:         0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 2
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_menu
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text4
  2412  00130E                     __ptext4:
  2413                           	callstack 0
  2414  00130E                     _UgetNumUsuaris:
  2415                           	callstack 27
  2416                           
  2417                           ;Usuaris.c: 54:     return numUsuaris;
  2418                           
  2419                           ;incstack = 0
  2420  00130E  5026               	movf	_numUsuaris^0,w,c
  2421  001310  0012               	return		;funcret
  2422  001312                     __end_of_UgetNumUsuaris:
  2423                           	callstack 0
  2424                           
  2425 ;; *************** function _UenviaPas *****************
  2426 ;; Defined at:
  2427 ;;		line 69 in file "Usuaris.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  c               1    wreg     unsigned char 
  2430 ;;  pos             1    5[COMRAM] unsigned char 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  c               1    6[COMRAM] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1
  2442 ;;      Params:         1       0       0
  2443 ;;      Locals:         1       0       0
  2444 ;;      Temps:          0       0       0
  2445 ;;      Totals:         2       0       0
  2446 ;;Total ram usage:        2 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 2
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_menu
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text5
  2457  001270                     __ptext5:
  2458                           	callstack 0
  2459  001270                     _UenviaPas:
  2460                           	callstack 27
  2461                           
  2462                           ;incstack = 0
  2463                           ;UenviaPas@c stored from wreg
  2464  001270  6E6A               	movwf	UenviaPas@c^0,c
  2465                           
  2466                           ;Usuaris.c: 70:     tmpPassword[pos] = c;
  2467  001272  5069               	movf	UenviaPas@pos^0,w,c
  2468  001274  0F19               	addlw	low _tmpPassword
  2469  001276  6ED9               	movwf	fsr2l,c
  2470  001278  6ADA               	clrf	fsr2h,c
  2471  00127A  C06A  FFDF         	movff	UenviaPas@c,indf2
  2472  00127E  0012               	return		;funcret
  2473  001280                     __end_of_UenviaPas:
  2474                           	callstack 0
  2475                           
  2476 ;; *************** function _UenviaChar *****************
  2477 ;; Defined at:
  2478 ;;		line 66 in file "Usuaris.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  c               1    wreg     unsigned char 
  2481 ;;  pos             1    5[COMRAM] unsigned char 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  c               1    6[COMRAM] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1
  2493 ;;      Params:         1       0       0
  2494 ;;      Locals:         1       0       0
  2495 ;;      Temps:          0       0       0
  2496 ;;      Totals:         2       0       0
  2497 ;;Total ram usage:        2 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 2
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_menu
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text6
  2508  001280                     __ptext6:
  2509                           	callstack 0
  2510  001280                     _UenviaChar:
  2511                           	callstack 27
  2512                           
  2513                           ;incstack = 0
  2514                           ;UenviaChar@c stored from wreg
  2515  001280  6E6A               	movwf	UenviaChar@c^0,c
  2516                           
  2517                           ;Usuaris.c: 67:     tmpUsername[pos] = c;
  2518  001282  5069               	movf	UenviaChar@pos^0,w,c
  2519  001284  0F39               	addlw	low _tmpUsername
  2520  001286  6ED9               	movwf	fsr2l,c
  2521  001288  6ADA               	clrf	fsr2h,c
  2522  00128A  C06A  FFDF         	movff	UenviaChar@c,indf2
  2523  00128E  0012               	return		;funcret
  2524  001290                     __end_of_UenviaChar:
  2525                           	callstack 0
  2526                           
  2527 ;; *************** function _UcheckExistsNotFinished *****************
  2528 ;; Defined at:
  2529 ;;		line 60 in file "Usuaris.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;		None               void
  2536 ;; Registers used:
  2537 ;;		status,0
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1
  2543 ;;      Params:         0       0       0
  2544 ;;      Locals:         0       0       0
  2545 ;;      Temps:          0       0       0
  2546 ;;      Totals:         0       0       0
  2547 ;;Total ram usage:        0 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; Hardware stack levels required when called: 2
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_menu
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text7
  2558  0012A8                     __ptext7:
  2559                           	callstack 0
  2560  0012A8                     _UcheckExistsNotFinished:
  2561                           	callstack 27
  2562                           
  2563                           ;Usuaris.c: 61:     return do_check_exists;
  2564                           
  2565                           ;incstack = 0
  2566  0012A8  B278               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2567  0012AA  D002               	goto	l2092
  2568  0012AC  90D8               	bcf	status,0,c
  2569  0012AE  0012               	return	
  2570  0012B0                     l2092:
  2571  0012B0  80D8               	bsf	status,0,c
  2572  0012B2  0012               	return		;funcret
  2573  0012B4                     __end_of_UcheckExistsNotFinished:
  2574                           	callstack 0
  2575                           
  2576 ;; *************** function _UcheckExistsGetError *****************
  2577 ;; Defined at:
  2578 ;;		line 63 in file "Usuaris.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      char 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1
  2592 ;;      Params:         0       0       0
  2593 ;;      Locals:         0       0       0
  2594 ;;      Temps:          0       0       0
  2595 ;;      Totals:         0       0       0
  2596 ;;Total ram usage:        0 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 2
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_menu
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text8
  2607  001312                     __ptext8:
  2608                           	callstack 0
  2609  001312                     _UcheckExistsGetError:
  2610                           	callstack 27
  2611                           
  2612                           ;Usuaris.c: 64:     return usuariLoguejat;
  2613                           
  2614                           ;incstack = 0
  2615  001312  5053               	movf	_usuariLoguejat^0,w,c
  2616  001314  0012               	return		;funcret
  2617  001316                     __end_of_UcheckExistsGetError:
  2618                           	callstack 0
  2619                           
  2620 ;; *************** function _UcheckExists *****************
  2621 ;; Defined at:
  2622 ;;		line 57 in file "Usuaris.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		None
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1
  2636 ;;      Params:         0       0       0
  2637 ;;      Locals:         0       0       0
  2638 ;;      Temps:          0       0       0
  2639 ;;      Totals:         0       0       0
  2640 ;;Total ram usage:        0 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 2
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_menu
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text9
  2651  001316                     __ptext9:
  2652                           	callstack 0
  2653  001316                     _UcheckExists:
  2654                           	callstack 27
  2655                           
  2656                           ;Usuaris.c: 58:     do_check_exists = 1;
  2657                           
  2658                           ;incstack = 0
  2659  001316  8278               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2660  001318  0012               	return		;funcret
  2661  00131A                     __end_of_UcheckExists:
  2662                           	callstack 0
  2663                           
  2664 ;; *************** function _URegister *****************
  2665 ;; Defined at:
  2666 ;;		line 77 in file "Usuaris.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		None
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1
  2680 ;;      Params:         0       0       0
  2681 ;;      Locals:         0       0       0
  2682 ;;      Temps:          0       0       0
  2683 ;;      Totals:         0       0       0
  2684 ;;Total ram usage:        0 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; Hardware stack levels required when called: 2
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_menu
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text10
  2695  00132E                     __ptext10:
  2696                           	callstack 0
  2697  00132E                     _URegister:
  2698                           	callstack 27
  2699                           
  2700                           ;incstack = 0
  2701  00132E  0012               	return		;funcret
  2702  001330                     __end_of_URegister:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _SiFerMenu *****************
  2706 ;; Defined at:
  2707 ;;		line 19 in file "GestioLCD.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		None
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1
  2721 ;;      Params:         0       0       0
  2722 ;;      Locals:         0       0       0
  2723 ;;      Temps:          0       0       0
  2724 ;;      Totals:         0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used: 1
  2727 ;; Hardware stack levels required when called: 2
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_menu
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text11
  2736  001330                     __ptext11:
  2737                           	callstack 0
  2738  001330                     _SiFerMenu:
  2739                           	callstack 27
  2740                           
  2741                           ;incstack = 0
  2742  001330  0012               	return		;funcret
  2743  001332                     __end_of_SiFerMenu:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function _SMSon *****************
  2747 ;; Defined at:
  2748 ;;		line 129 in file "Ssms.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		None
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1
  2762 ;;      Params:         0       0       0
  2763 ;;      Locals:         0       0       0
  2764 ;;      Temps:          0       0       0
  2765 ;;      Totals:         0       0       0
  2766 ;;Total ram usage:        0 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 2
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_menu
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text12
  2777  0012FC                     __ptext12:
  2778                           	callstack 0
  2779  0012FC                     _SMSon:
  2780                           	callstack 27
  2781                           
  2782                           ;Ssms.c: 130:     setSMSon = 1;
  2783                           
  2784                           ;incstack = 0
  2785  0012FC  8678               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2786                           
  2787                           ;Ssms.c: 131:     novaTecla = -1;
  2788  0012FE  6859               	setf	_novaTecla^0,c
  2789  001300  0012               	return		;funcret
  2790  001302                     __end_of_SMSon:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function _SMSoff *****************
  2794 ;; Defined at:
  2795 ;;		line 134 in file "Ssms.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		None
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1
  2809 ;;      Params:         0       0       0
  2810 ;;      Locals:         0       0       0
  2811 ;;      Temps:          0       0       0
  2812 ;;      Totals:         0       0       0
  2813 ;;Total ram usage:        0 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 2
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_menu
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text13
  2824  001302                     __ptext13:
  2825                           	callstack 0
  2826  001302                     _SMSoff:
  2827                           	callstack 27
  2828                           
  2829                           ;Ssms.c: 135:     setSMSon = 0;
  2830                           
  2831                           ;incstack = 0
  2832  001302  9678               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2833                           
  2834                           ;Ssms.c: 136:     novaTecla = -1;
  2835  001304  6859               	setf	_novaTecla^0,c
  2836  001306  0012               	return		;funcret
  2837  001308                     __end_of_SMSoff:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _SIOHaAcabatPuntuacions *****************
  2841 ;; Defined at:
  2842 ;;		line 36 in file "SIO.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      char 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1
  2856 ;;      Params:         0       0       0
  2857 ;;      Locals:         0       0       0
  2858 ;;      Temps:          0       0       0
  2859 ;;      Totals:         0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 2
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_menu
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text14
  2871  00131A                     __ptext14:
  2872                           	callstack 0
  2873  00131A                     _SIOHaAcabatPuntuacions:
  2874                           	callstack 27
  2875                           
  2876                           ;SIO.c: 37:     return usuariActualSIO;
  2877                           
  2878                           ;incstack = 0
  2879  00131A  5052               	movf	_usuariActualSIO^0,w,c
  2880  00131C  0012               	return		;funcret
  2881  00131E                     __end_of_SIOHaAcabatPuntuacions:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _NoFerMenu *****************
  2885 ;; Defined at:
  2886 ;;		line 22 in file "GestioLCD.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		None
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1
  2900 ;;      Params:         0       0       0
  2901 ;;      Locals:         0       0       0
  2902 ;;      Temps:          0       0       0
  2903 ;;      Totals:         0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 2
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_menu
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text15
  2915  001332                     __ptext15:
  2916                           	callstack 0
  2917  001332                     _NoFerMenu:
  2918                           	callstack 27
  2919                           
  2920                           ;incstack = 0
  2921  001332  0012               	return		;funcret
  2922  001334                     __end_of_NoFerMenu:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function _LcScroll *****************
  2926 ;; Defined at:
  2927 ;;		line 37 in file "LcTLCD.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1
  2941 ;;      Params:         0       0       0
  2942 ;;      Locals:         0       0       0
  2943 ;;      Temps:          0       0       0
  2944 ;;      Totals:         0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 4
  2948 ;; This function calls:
  2949 ;;		_CantaIR
  2950 ;; This function is called by:
  2951 ;;		_menu
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text16
  2956  001308                     __ptext16:
  2957                           	callstack 0
  2958  001308                     _LcScroll:
  2959                           	callstack 25
  2960                           
  2961                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  2962                           
  2963                           ;incstack = 0
  2964  001308  0E18               	movlw	24
  2965  00130A  EF0C  F009         	goto	_CantaIR
  2966  00130E                     __end_of_LcScroll:
  2967                           	callstack 0
  2968                           
  2969 ;; *************** function _LcNewString *****************
  2970 ;; Defined at:
  2971 ;;		line 241 in file "LcTLCD.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  2974 ;;		 -> stringScore(3), STR_10(8), STR_9(12), STR_8(8), 
  2975 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  2976 ;;		 -> STR_7(16), STR_6(13), STR_5(9), STR_4(7), 
  2977 ;;		 -> STR_3(7), STR_2(11), STR_1(8), 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1
  2989 ;;      Params:         2       0       0
  2990 ;;      Locals:         0       0       0
  2991 ;;      Temps:          0       0       0
  2992 ;;      Totals:         2       0       0
  2993 ;;Total ram usage:        2 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 2
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_menu
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text17
  3004  0012B4                     __ptext17:
  3005                           	callstack 0
  3006  0012B4                     _LcNewString:
  3007                           	callstack 27
  3008                           
  3009                           ;LcTLCD.c: 242:     s_ptr = new_s;
  3010                           
  3011                           ;incstack = 0
  3012  0012B4  C06C  F024         	movff	LcNewString@new_s,_s_ptr
  3013  0012B8  C06D  F025         	movff	LcNewString@new_s+1,_s_ptr+1
  3014                           
  3015                           ;LcTLCD.c: 243:     nou_s = 1;
  3016  0012BC  8878               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  3017  0012BE  0012               	return		;funcret
  3018  0012C0                     __end_of_LcNewString:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _LcLliure *****************
  3022 ;; Defined at:
  3023 ;;		line 257 in file "LcTLCD.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;		None               void
  3030 ;; Registers used:
  3031 ;;		status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1
  3037 ;;      Params:         0       0       0
  3038 ;;      Locals:         0       0       0
  3039 ;;      Temps:          0       0       0
  3040 ;;      Totals:         0       0       0
  3041 ;;Total ram usage:        0 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 2
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_menu
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text18
  3052  0012C0                     __ptext18:
  3053                           	callstack 0
  3054  0012C0                     _LcLliure:
  3055                           	callstack 27
  3056                           
  3057                           ;LcTLCD.c: 258:     return !nou_s;
  3058                           
  3059                           ;incstack = 0
  3060  0012C0  A878               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  3061  0012C2  D002               	goto	l2064
  3062  0012C4  90D8               	bcf	status,0,c
  3063  0012C6  0012               	return	
  3064  0012C8                     l2064:
  3065  0012C8  80D8               	bsf	status,0,c
  3066  0012CA  0012               	return		;funcret
  3067  0012CC                     __end_of_LcLliure:
  3068                           	callstack 0
  3069                           
  3070 ;; *************** function _LcClear *****************
  3071 ;; Defined at:
  3072 ;;		line 84 in file "LcTLCD.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1
  3086 ;;      Params:         0       0       0
  3087 ;;      Locals:         0       0       0
  3088 ;;      Temps:          0       0       0
  3089 ;;      Totals:         0       0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 5
  3093 ;; This function calls:
  3094 ;;		_CantaIR
  3095 ;;		_Espera
  3096 ;;		_LcGotoXY
  3097 ;;		_WaitForBusy
  3098 ;; This function is called by:
  3099 ;;		_menu
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text19
  3104  00117C                     __ptext19:
  3105                           	callstack 0
  3106  00117C                     _LcClear:
  3107                           	callstack 24
  3108                           
  3109                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  3110                           
  3111                           ;incstack = 0
  3112  00117C  ECE9  F007         	call	_WaitForBusy	;wreg free
  3113  001180  0E01               	movlw	1
  3114  001182  EC0C  F009         	call	_CantaIR
  3115                           
  3116                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  3117  001186  D806               	call	PL34	;call to abstracted procedure
  3118  001188  ECCF  F008         	call	_Espera
  3119                           
  3120                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  3121  00118C  0E00               	movlw	0
  3122  00118E  6E71               	movwf	LcGotoXY@Row^0,c
  3123  001190  EF3E  F008         	goto	_LcGotoXY
  3124  001194                     __end_of_LcClear:
  3125                           	callstack 0
  3126  001194                     PL34:
  3127                           	callstack 26
  3128  001194  6A71               	clrf	(Espera@ms+1)^0,c
  3129  001196  0E03               	movlw	3
  3130  001198  6E70               	movwf	Espera@ms^0,c
  3131  00119A  5035               	movf	_Timer^0,w,c
  3132  00119C  0012               	return	
  3133  00119E                     __end_ofPL34:
  3134                           	callstack 0
  3135                           
  3136 ;; *************** function _JnovaTecla *****************
  3137 ;; Defined at:
  3138 ;;		line 16 in file "Joc.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  tecla           1    wreg     char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  tecla           1    5[COMRAM] char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1
  3152 ;;      Params:         0       0       0
  3153 ;;      Locals:         1       0       0
  3154 ;;      Temps:          0       0       0
  3155 ;;      Totals:         1       0       0
  3156 ;;Total ram usage:        1 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; Hardware stack levels required when called: 2
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_menu
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text20
  3167  001334                     __ptext20:
  3168                           	callstack 0
  3169  001334                     _JnovaTecla:
  3170                           	callstack 27
  3171                           
  3172                           ;incstack = 0
  3173  001334  0012               	return		;funcret
  3174  001336                     __end_of_JnovaTecla:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _JnovaDireccio *****************
  3178 ;; Defined at:
  3179 ;;		line 19 in file "Joc.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  dir             1    wreg     unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  dir             1    5[COMRAM] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1
  3193 ;;      Params:         0       0       0
  3194 ;;      Locals:         1       0       0
  3195 ;;      Temps:          0       0       0
  3196 ;;      Totals:         1       0       0
  3197 ;;Total ram usage:        1 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 2
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_menu
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text21
  3208  001336                     __ptext21:
  3209                           	callstack 0
  3210  001336                     _JnovaDireccio:
  3211                           	callstack 27
  3212                           
  3213                           ;incstack = 0
  3214  001336  0012               	return		;funcret
  3215  001338                     __end_of_JnovaDireccio:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function _JendGame *****************
  3219 ;; Defined at:
  3220 ;;		line 27 in file "Joc.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		None
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1
  3234 ;;      Params:         0       0       0
  3235 ;;      Locals:         0       0       0
  3236 ;;      Temps:          0       0       0
  3237 ;;      Totals:         0       0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; Hardware stack levels required when called: 2
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_menu
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text22
  3249  001338                     __ptext22:
  3250                           	callstack 0
  3251  001338                     _JendGame:
  3252                           	callstack 27
  3253                           
  3254                           ;incstack = 0
  3255  001338  0012               	return		;funcret
  3256  00133A                     __end_of_JendGame:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function _JJuguem *****************
  3260 ;; Defined at:
  3261 ;;		line 13 in file "Joc.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  usuari          1    wreg     unsigned char 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  usuari          1    5[COMRAM] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1
  3275 ;;      Params:         0       0       0
  3276 ;;      Locals:         1       0       0
  3277 ;;      Temps:          0       0       0
  3278 ;;      Totals:         1       0       0
  3279 ;;Total ram usage:        1 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 2
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_menu
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text23
  3290  00133A                     __ptext23:
  3291                           	callstack 0
  3292  00133A                     _JJuguem:
  3293                           	callstack 27
  3294                           
  3295                           ;incstack = 0
  3296  00133A  0012               	return		;funcret
  3297  00133C                     __end_of_JJuguem:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _HActualitzaHora *****************
  3301 ;; Defined at:
  3302 ;;		line 15 in file "Hora.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  nova            1    5[COMRAM] PTR unsigned char 
  3305 ;;		 -> horaTmp(4), 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1
  3317 ;;      Params:         1       0       0
  3318 ;;      Locals:         0       0       0
  3319 ;;      Temps:          0       0       0
  3320 ;;      Totals:         1       0       0
  3321 ;;Total ram usage:        1 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; Hardware stack levels required when called: 2
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_menu
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text24
  3332  001048                     __ptext24:
  3333                           	callstack 0
  3334  001048                     _HActualitzaHora:
  3335                           	callstack 27
  3336                           
  3337                           ;Hora.c: 16:     hora[0] = nova[0];
  3338                           
  3339                           ;incstack = 0
  3340  001048  5069               	movf	HActualitzaHora@nova^0,w,c
  3341  00104A  6ED9               	movwf	fsr2l,c
  3342  00104C  6ADA               	clrf	fsr2h,c
  3343  00104E  50DF               	movf	indf2,w,c
  3344  001050  6E5B               	movwf	_hora^0,c
  3345                           
  3346                           ;Hora.c: 17:     hora[1] = nova[1];
  3347  001052  5069               	movf	HActualitzaHora@nova^0,w,c
  3348  001054  6ED9               	movwf	fsr2l,c
  3349  001056  6ADA               	clrf	fsr2h,c
  3350  001058  2AD9               	incf	fsr2l,f,c
  3351  00105A  50DF               	movf	indf2,w,c
  3352  00105C  6E5C               	movwf	(_hora+1)^0,c
  3353                           
  3354                           ;Hora.c: 18:     hora[3] = nova[2];
  3355  00105E  5069               	movf	HActualitzaHora@nova^0,w,c
  3356  001060  6ED9               	movwf	fsr2l,c
  3357  001062  6ADA               	clrf	fsr2h,c
  3358  001064  0E02               	movlw	2
  3359  001066  26D9               	addwf	fsr2l,f,c
  3360  001068  50DF               	movf	indf2,w,c
  3361  00106A  6E5E               	movwf	(_hora+3)^0,c
  3362                           
  3363                           ;Hora.c: 19:     hora[4] = nova[3];
  3364  00106C  5069               	movf	HActualitzaHora@nova^0,w,c
  3365  00106E  6ED9               	movwf	fsr2l,c
  3366  001070  6ADA               	clrf	fsr2h,c
  3367  001072  0E03               	movlw	3
  3368  001074  26D9               	addwf	fsr2l,f,c
  3369  001076  50DF               	movf	indf2,w,c
  3370  001078  6E5F               	movwf	(_hora+4)^0,c
  3371  00107A  0012               	return		;funcret
  3372  00107C                     __end_of_HActualitzaHora:
  3373                           	callstack 0
  3374                           
  3375 ;; *************** function _GLCDMostraMenu *****************
  3376 ;; Defined at:
  3377 ;;		line 30 in file "GestioLCD.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  num             1    wreg     unsigned char 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  num             1    5[COMRAM] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1
  3391 ;;      Params:         0       0       0
  3392 ;;      Locals:         1       0       0
  3393 ;;      Temps:          0       0       0
  3394 ;;      Totals:         1       0       0
  3395 ;;Total ram usage:        1 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 2
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_menu
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text25
  3406  00133C                     __ptext25:
  3407                           	callstack 0
  3408  00133C                     _GLCDMostraMenu:
  3409                           	callstack 27
  3410                           
  3411                           ;incstack = 0
  3412  00133C  0012               	return		;funcret
  3413  00133E                     __end_of_GLCDMostraMenu:
  3414                           	callstack 0
  3415                           
  3416 ;; *************** function _init_ports *****************
  3417 ;; Defined at:
  3418 ;;		line 26 in file "main.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1
  3432 ;;      Params:         0       0       0
  3433 ;;      Locals:         0       0       0
  3434 ;;      Temps:          0       0       0
  3435 ;;      Totals:         0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 2
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text26
  3447  0011DE                     __ptext26:
  3448                           	callstack 0
  3449  0011DE                     _init_ports:
  3450                           	callstack 28
  3451                           
  3452                           ;incstack = 0
  3453  0011DE  0E03               	movlw	3
  3454  0011E0  6E92               	movwf	146,c	;volatile
  3455  0011E2  0EE0               	movlw	224
  3456  0011E4  6E93               	movwf	147,c	;volatile
  3457  0011E6  968A               	bcf	138,3,c	;volatile
  3458  0011E8  908A               	bcf	138,0,c	;volatile
  3459  0011EA  928A               	bcf	138,1,c	;volatile
  3460                           
  3461                           ;main.c: 50:     TRISC = 0xC0;
  3462  0011EC  0EC0               	movlw	192
  3463  0011EE  6E94               	movwf	148,c	;volatile
  3464                           
  3465                           ;main.c: 60:     TRISD = 0x8F;
  3466  0011F0  0E8F               	movlw	143
  3467  0011F2  6E95               	movwf	149,c	;volatile
  3468                           
  3469                           ;main.c: 61:     LATD = 0x00;
  3470  0011F4  6A8C               	clrf	140,c	;volatile
  3471                           
  3472                           ;main.c: 64:     EECON1bits.EEPGD = 1;
  3473  0011F6  8EA6               	bsf	166,7,c	;volsfr
  3474                           
  3475                           ;main.c: 65:     EECON1bits.CFGS = 0;
  3476  0011F8  9CA6               	bcf	166,6,c	;volsfr
  3477  0011FA  0012               	return		;funcret
  3478  0011FC                     __end_of_init_ports:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _init_eusart *****************
  3482 ;; Defined at:
  3483 ;;		line 68 in file "main.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1
  3497 ;;      Params:         0       0       0
  3498 ;;      Locals:         0       0       0
  3499 ;;      Temps:          0       0       0
  3500 ;;      Totals:         0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; Hardware stack levels required when called: 2
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_main
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text27
  3512  001234                     __ptext27:
  3513                           	callstack 0
  3514  001234                     _init_eusart:
  3515                           	callstack 28
  3516                           
  3517                           ;main.c: 69:     TXSTA = 0x24;
  3518                           
  3519                           ;incstack = 0
  3520  001234  0E24               	movlw	36
  3521  001236  6EAC               	movwf	172,c	;volatile
  3522                           
  3523                           ;main.c: 70:     RCSTA = 0x90;
  3524  001238  0E90               	movlw	144
  3525  00123A  6EAB               	movwf	171,c	;volatile
  3526                           
  3527                           ;main.c: 71:     BAUDCON = 0x08;
  3528  00123C  0E08               	movlw	8
  3529  00123E  6EB8               	movwf	184,c	;volatile
  3530                           
  3531                           ;main.c: 72:     SPBRGH = 0x04;
  3532  001240  0E04               	movlw	4
  3533  001242  6EB0               	movwf	176,c	;volatile
  3534                           
  3535                           ;main.c: 73:     SPBRG = 0x10;
  3536  001244  0E10               	movlw	16
  3537  001246  6EAF               	movwf	175,c	;volatile
  3538  001248  0C10               	retlw	16	;funcret
  3539  00124A                     __end_of_init_eusart:
  3540                           	callstack 0
  3541                           
  3542 ;; *************** function _initSIO *****************
  3543 ;; Defined at:
  3544 ;;		line 18 in file "SIO.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1
  3558 ;;      Params:         0       0       0
  3559 ;;      Locals:         0       0       0
  3560 ;;      Temps:          0       0       0
  3561 ;;      Totals:         0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; Hardware stack levels required when called: 3
  3565 ;; This function calls:
  3566 ;;		_TiGetTimer
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text28
  3573  00131E                     __ptext28:
  3574                           	callstack 0
  3575  00131E                     _initSIO:
  3576                           	callstack 27
  3577                           
  3578                           ;SIO.c: 19:     timerSIO = TiGetTimer();
  3579                           
  3580                           ;incstack = 0
  3581  00131E  EF58  F008         	goto	_TiGetTimer	;wreg free
  3582  001322                     __end_of_initSIO:
  3583                           	callstack 0
  3584                           
  3585 ;; *************** function _initHora *****************
  3586 ;; Defined at:
  3587 ;;		line 11 in file "Hora.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;		None
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1    wreg      void 
  3594 ;; Registers used:
  3595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1
  3601 ;;      Params:         0       0       0
  3602 ;;      Locals:         0       0       0
  3603 ;;      Temps:          0       0       0
  3604 ;;      Totals:         0       0       0
  3605 ;;Total ram usage:        0 bytes
  3606 ;; Hardware stack levels used: 1
  3607 ;; Hardware stack levels required when called: 3
  3608 ;; This function calls:
  3609 ;;		_TiGetTimer
  3610 ;; This function is called by:
  3611 ;;		_main
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text29
  3616  001322                     __ptext29:
  3617                           	callstack 0
  3618  001322                     _initHora:
  3619                           	callstack 27
  3620                           
  3621                           ;Hora.c: 12:     timerHora = TiGetTimer();
  3622                           
  3623                           ;incstack = 0
  3624  001322  EF58  F008         	goto	_TiGetTimer	;wreg free
  3625  001326                     __end_of_initHora:
  3626                           	callstack 0
  3627                           
  3628 ;; *************** function _initAltaveu *****************
  3629 ;; Defined at:
  3630 ;;		line 10 in file "Altaveu.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1
  3644 ;;      Params:         0       0       0
  3645 ;;      Locals:         0       0       0
  3646 ;;      Temps:          0       0       0
  3647 ;;      Totals:         0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 3
  3651 ;; This function calls:
  3652 ;;		_TiGetTimer
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text30
  3659  001326                     __ptext30:
  3660                           	callstack 0
  3661  001326                     _initAltaveu:
  3662                           	callstack 27
  3663                           
  3664                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  3665                           
  3666                           ;incstack = 0
  3667  001326  EF58  F008         	goto	_TiGetTimer	;wreg free
  3668  00132A                     __end_of_initAltaveu:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _escriureEEPROM *****************
  3672 ;; Defined at:
  3673 ;;		line 239 in file "Usuaris.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  caca            1    5[COMRAM] unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1
  3687 ;;      Params:         0       0       0
  3688 ;;      Locals:         1       0       0
  3689 ;;      Temps:          0       0       0
  3690 ;;      Totals:         1       0       0
  3691 ;;Total ram usage:        1 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 2
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text31
  3702  001106                     __ptext31:
  3703                           	callstack 0
  3704  001106                     _escriureEEPROM:
  3705                           	callstack 28
  3706                           
  3707                           ;Usuaris.c: 240:     for(unsigned char caca = 0; caca < 160; caca++){
  3708                           
  3709                           ;incstack = 0
  3710  001106  6A69               	clrf	escriureEEPROM@caca^0,c
  3711  001108                     l742:
  3712                           
  3713                           ;Usuaris.c: 241:         EEADR = 0;
  3714  001108  6AA9               	clrf	169,c	;volatile
  3715                           
  3716                           ;Usuaris.c: 242:         EEDATA = 0;
  3717  00110A  6AA8               	clrf	168,c	;volatile
  3718                           
  3719                           ;Usuaris.c: 243:         EECON1bits.EEPGD = 0;
  3720  00110C  9EA6               	bcf	166,7,c	;volsfr
  3721                           
  3722                           ;Usuaris.c: 244:         EECON1bits.CFGS = 0;
  3723  00110E  9CA6               	bcf	166,6,c	;volsfr
  3724                           
  3725                           ;Usuaris.c: 245:         EECON1bits.WREN = 1;
  3726  001110  84A6               	bsf	166,2,c	;volsfr
  3727                           
  3728                           ;Usuaris.c: 246:         INTCONbits.GIE = 0;
  3729  001112  9EF2               	bcf	242,7,c	;volatile
  3730                           
  3731                           ;Usuaris.c: 247:         EECON2 = 85;
  3732  001114  0E55               	movlw	85
  3733  001116  6EA7               	movwf	167,c	;volsfr
  3734                           
  3735                           ;Usuaris.c: 248:         EECON2 = 170;
  3736  001118  0EAA               	movlw	170
  3737  00111A  6EA7               	movwf	167,c	;volsfr
  3738                           
  3739                           ;Usuaris.c: 249:          EECON1bits.WR = 1;
  3740  00111C  82A6               	bsf	166,1,c	;volsfr
  3741  00111E                     l744:
  3742                           
  3743                           ;Usuaris.c: 250:         while(EECON1bits.WR){
  3744  00111E  B2A6               	btfsc	166,1,c	;volsfr
  3745  001120  D7FE               	goto	l744
  3746                           
  3747                           ;Usuaris.c: 255:     }
  3748  001122  2A69               	incf	escriureEEPROM@caca^0,f,c
  3749  001124  0E9F               	movlw	159
  3750  001126  6469               	cpfsgt	escriureEEPROM@caca^0,c
  3751  001128  D7EF               	goto	l742
  3752                           
  3753                           ;Usuaris.c: 256:    INTCONbits.GIE = 1;
  3754  00112A  8EF2               	bsf	242,7,c	;volatile
  3755  00112C  0C9F               	retlw	159	;funcret
  3756  00112E                     __end_of_escriureEEPROM:
  3757                           	callstack 0
  3758                           
  3759 ;; *************** function _escriure2usuarisStruct *****************
  3760 ;; Defined at:
  3761 ;;		line 138 in file "Usuaris.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 3F/1
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1
  3775 ;;      Params:         0       0       0
  3776 ;;      Locals:         0       0       0
  3777 ;;      Temps:          0       0       0
  3778 ;;      Totals:         0       0       0
  3779 ;;Total ram usage:        0 bytes
  3780 ;; Hardware stack levels used: 1
  3781 ;; Hardware stack levels required when called: 2
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_main
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text32
  3790  0010DC                     __ptext32:
  3791                           	callstack 0
  3792  0010DC                     _escriure2usuarisStruct:
  3793                           	callstack 28
  3794                           
  3795                           ;Usuaris.c: 140:     usuaris[0].username[0] = '1';
  3796                           
  3797                           ;incstack = 0
  3798  0010DC  0E31               	movlw	49
  3799  0010DE  0101               	movlb	1	; () banked
  3800  0010E0  6F00               	movwf	_usuaris& (0+255),b
  3801                           
  3802                           ;Usuaris.c: 141:     usuaris[0].password[0] = '1';
  3803  0010E2  6F09               	movwf	(_usuaris+9)& (0+255),b
  3804                           
  3805                           ; BSR set to: 1
  3806                           ;Usuaris.c: 142:     usuaris[0].username[1] = '\0';
  3807  0010E4  6B01               	clrf	(_usuaris+1)& (0+255),b
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;Usuaris.c: 143:     usuaris[0].password[1] = '\0';
  3811  0010E6  6B0A               	clrf	(_usuaris+10)& (0+255),b
  3812                           
  3813                           ;Usuaris.c: 145:     usuaris[1].username[0] = 'A';
  3814  0010E8  0E41               	movlw	65
  3815  0010EA  6F17               	movwf	(_usuaris+23)& (0+255),b
  3816                           
  3817                           ; BSR set to: 1
  3818                           ;Usuaris.c: 146:     usuaris[1].username[1] = '\0';
  3819  0010EC  6B18               	clrf	(_usuaris+24)& (0+255),b
  3820                           
  3821                           ;Usuaris.c: 148:     usuaris[2].username[0] = 'D';
  3822  0010EE  0E44               	movlw	68
  3823  0010F0  6F2E               	movwf	(_usuaris+46)& (0+255),b
  3824                           
  3825                           ; BSR set to: 1
  3826                           ;Usuaris.c: 149:     usuaris[2].username[1] = '\0';
  3827  0010F2  6B2F               	clrf	(_usuaris+47)& (0+255),b
  3828                           
  3829                           ;Usuaris.c: 151:     usuaris[3].username[0] = 'G';
  3830  0010F4  0E47               	movlw	71
  3831  0010F6  6F45               	movwf	(_usuaris+69)& (0+255),b
  3832                           
  3833                           ; BSR set to: 1
  3834                           ;Usuaris.c: 152:     usuaris[3].username[1] = '\0';
  3835  0010F8  6B46               	clrf	(_usuaris+70)& (0+255),b
  3836                           
  3837                           ;Usuaris.c: 154:     usuaris[4].username[0] = 'J';
  3838  0010FA  0E4A               	movlw	74
  3839  0010FC  6F5C               	movwf	(_usuaris+92)& (0+255),b
  3840                           
  3841                           ; BSR set to: 1
  3842                           ;Usuaris.c: 155:     usuaris[4].username[1] = '\0';
  3843  0010FE  6B5D               	clrf	(_usuaris+93)& (0+255),b
  3844                           
  3845                           ;Usuaris.c: 157:     indexNextUser = 5;
  3846  001100  0E05               	movlw	5
  3847  001102  6E26               	movwf	_numUsuaris^0,c
  3848                           
  3849                           ; BSR set to: 1
  3850  001104  0C05               	retlw	5	;funcret
  3851  001106                     __end_of_escriure2usuarisStruct:
  3852                           	callstack 0
  3853                           
  3854 ;; *************** function _Uinit *****************
  3855 ;; Defined at:
  3856 ;;		line 93 in file "Usuaris.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;		None
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  j               1    9[COMRAM] unsigned char 
  3861 ;;  j               1    8[COMRAM] unsigned char 
  3862 ;;  i               1    7[COMRAM] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      void 
  3865 ;; Registers used:
  3866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1
  3872 ;;      Params:         0       0       0
  3873 ;;      Locals:         3       0       0
  3874 ;;      Temps:          2       0       0
  3875 ;;      Totals:         5       0       0
  3876 ;;Total ram usage:        5 bytes
  3877 ;; Hardware stack levels used: 1
  3878 ;; Hardware stack levels required when called: 2
  3879 ;; This function calls:
  3880 ;;		Nothing
  3881 ;; This function is called by:
  3882 ;;		_main
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text33
  3887  000C54                     __ptext33:
  3888                           	callstack 0
  3889  000C54                     _Uinit:
  3890                           	callstack 28
  3891                           
  3892                           ;Usuaris.c: 98:     EEADR = 0;
  3893                           
  3894                           ; BSR set to: 1
  3895                           ;incstack = 0
  3896  000C54  6AA9               	clrf	169,c	;volatile
  3897                           
  3898                           ;Usuaris.c: 99:     EECON1bits.EEPGD = 0;
  3899  000C56  9EA6               	bcf	166,7,c	;volsfr
  3900                           
  3901                           ;Usuaris.c: 100:     EECON1bits.CFGS = 0;
  3902  000C58  9CA6               	bcf	166,6,c	;volsfr
  3903                           
  3904                           ;Usuaris.c: 101:     EECON1bits.RD = 1;
  3905  000C5A  80A6               	bsf	166,0,c	;volsfr
  3906  000C5C                     l681:
  3907  000C5C  B0A6               	btfsc	166,0,c	;volsfr
  3908  000C5E  D7FE               	goto	l681
  3909                           
  3910                           ;Usuaris.c: 103:     numUsuaris = EEDATA;
  3911  000C60  CFA8 F026          	movff	4008,_numUsuaris	;volatile
  3912                           
  3913                           ;Usuaris.c: 106:     EEADR++;
  3914  000C64  2AA9               	incf	169,f,c	;volatile
  3915                           
  3916                           ;Usuaris.c: 107:     EECON1bits.EEPGD = 0;
  3917  000C66  9EA6               	bcf	166,7,c	;volsfr
  3918                           
  3919                           ;Usuaris.c: 108:     EECON1bits.CFGS = 0;
  3920  000C68  9CA6               	bcf	166,6,c	;volsfr
  3921  000C6A                     l684:
  3922  000C6A  B0A6               	btfsc	166,0,c	;volsfr
  3923  000C6C  D7FE               	goto	l684
  3924                           
  3925                           ;Usuaris.c: 111:     indexNextUser = EEDATA;
  3926  000C6E  50A8               	movf	168,w,c	;volatile
  3927                           
  3928                           ;Usuaris.c: 113:     EEADR++;
  3929  000C70  2AA9               	incf	169,f,c	;volatile
  3930                           
  3931                           ;Usuaris.c: 115:     for(char i = 0; i< numUsuaris; i++){
  3932  000C72  6A6B               	clrf	Uinit@i^0,c
  3933  000C74  D021               	goto	l2466
  3934  000C76                     l688:
  3935                           
  3936                           ;Usuaris.c: 116:         for(char j = 0; j<9; j++){
  3937  000C76  6A6C               	clrf	Uinit@j^0,c
  3938  000C78                     l689:
  3939                           
  3940                           ;Usuaris.c: 117:             EECON1bits.EEPGD = 0;
  3941  000C78  9EA6               	bcf	166,7,c	;volsfr
  3942                           
  3943                           ;Usuaris.c: 118:             EECON1bits.CFGS = 0;
  3944  000C7A  9CA6               	bcf	166,6,c	;volsfr
  3945                           
  3946                           ;Usuaris.c: 119:             EECON1bits.RD = 1;
  3947  000C7C  80A6               	bsf	166,0,c	;volsfr
  3948  000C7E                     l691:
  3949  000C7E  B0A6               	btfsc	166,0,c	;volsfr
  3950  000C80  D7FE               	goto	l691
  3951                           
  3952                           ;Usuaris.c: 121:             usuaris[i].username[j] = EEDATA;
  3953  000C82  D827               	call	PL20	;call to abstracted procedure
  3954  000C84  D82D               	call	PL32	;call to abstracted procedure
  3955  000C86  506C               	movf	Uinit@j^0,w,c
  3956                           
  3957                           ;Usuaris.c: 122:             EEADR++;
  3958  000C88  D81B               	call	PL8	;call to abstracted procedure
  3959                           
  3960                           ;Usuaris.c: 123:         }
  3961  000C8A  2A6C               	incf	Uinit@j^0,f,c
  3962  000C8C  0E08               	movlw	8
  3963  000C8E  646C               	cpfsgt	Uinit@j^0,c
  3964  000C90  D7F3               	goto	l689
  3965                           
  3966                           ;Usuaris.c: 124:         for(char j = 0; j<9; j++){
  3967  000C92  6A6D               	clrf	Uinit@j_1140^0,c
  3968  000C94                     l694:
  3969                           
  3970                           ;Usuaris.c: 125:             EECON1bits.EEPGD = 0;
  3971  000C94  9EA6               	bcf	166,7,c	;volsfr
  3972                           
  3973                           ;Usuaris.c: 126:             EECON1bits.CFGS = 0;
  3974  000C96  9CA6               	bcf	166,6,c	;volsfr
  3975                           
  3976                           ;Usuaris.c: 127:             EECON1bits.RD = 1;
  3977  000C98  80A6               	bsf	166,0,c	;volsfr
  3978  000C9A                     l696:
  3979  000C9A  B0A6               	btfsc	166,0,c	;volsfr
  3980  000C9C  D7FE               	goto	l696
  3981                           
  3982                           ;Usuaris.c: 129:             usuaris[i].password[j] = EEDATA;
  3983  000C9E  D819               	call	PL20	;call to abstracted procedure
  3984  000CA0  0E09               	movlw	9
  3985  000CA2  2669               	addwf	??_Uinit^0,f,c
  3986  000CA4  0E00               	movlw	0
  3987  000CA6  226A               	addwfc	(??_Uinit+1)^0,f,c
  3988  000CA8  D81B               	call	PL32	;call to abstracted procedure
  3989  000CAA  506D               	movf	Uinit@j_1140^0,w,c
  3990                           
  3991                           ;Usuaris.c: 130:             EEADR++;
  3992  000CAC  D809               	call	PL8	;call to abstracted procedure
  3993                           
  3994                           ;Usuaris.c: 131:         }
  3995  000CAE  2A6D               	incf	Uinit@j_1140^0,f,c
  3996  000CB0  0E08               	movlw	8
  3997  000CB2  646D               	cpfsgt	Uinit@j_1140^0,c
  3998  000CB4  D7EF               	goto	l694
  3999                           
  4000                           ;Usuaris.c: 132:     }
  4001  000CB6  2A6B               	incf	Uinit@i^0,f,c
  4002  000CB8                     l2466:
  4003  000CB8  5026               	movf	_numUsuaris^0,w,c
  4004  000CBA  5C6B               	subwf	Uinit@i^0,w,c
  4005  000CBC  E3DC               	bnc	l688
  4006  000CBE  0012               	return		;funcret
  4007  000CC0                     __end_of_Uinit:
  4008                           	callstack 0
  4009  000CC0                     PL8:
  4010                           	callstack 28
  4011  000CC0  2469               	addwf	??_Uinit^0,w,c
  4012  000CC2  6ED9               	movwf	fsr2l,c
  4013  000CC4  0E00               	movlw	0
  4014  000CC6  206A               	addwfc	(??_Uinit+1)^0,w,c
  4015  000CC8  6EDA               	movwf	fsr2h,c
  4016  000CCA  CFA8 FFDF          	movff	4008,indf2	;volatile
  4017  000CCE  2AA9               	incf	169,f,c	;volatile
  4018  000CD0  0012               	return	
  4019  000CD2                     __end_ofPL8:
  4020                           	callstack 0
  4021  000CD2                     PL20:
  4022                           	callstack 28
  4023  000CD2  506B               	movf	Uinit@i^0,w,c
  4024  000CD4  0D17               	mullw	23
  4025  000CD6  0E00               	movlw	low _usuaris
  4026  000CD8  6E69               	movwf	??_Uinit^0,c
  4027  000CDA  0E01               	movlw	high _usuaris
  4028  000CDC  6E6A               	movwf	(??_Uinit+1)^0,c
  4029  000CDE  0012               	return	
  4030  000CE0                     __end_ofPL20:
  4031                           	callstack 0
  4032  000CE0                     PL32:
  4033                           	callstack 28
  4034  000CE0  50F3               	movf	243,w,c
  4035  000CE2  2669               	addwf	??_Uinit^0,f,c
  4036  000CE4  50F4               	movf	244,w,c
  4037  000CE6  226A               	addwfc	(??_Uinit+1)^0,f,c
  4038  000CE8  0012               	return	
  4039  000CEA                     __end_ofPL32:
  4040                           	callstack 0
  4041                           
  4042 ;; *************** function _TiInitTimer *****************
  4043 ;; Defined at:
  4044 ;;		line 18 in file "TiTTimer.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;		None
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;		None
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  1    wreg      void 
  4051 ;; Registers used:
  4052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1
  4058 ;;      Params:         0       0       0
  4059 ;;      Locals:         0       0       0
  4060 ;;      Temps:          0       0       0
  4061 ;;      Totals:         0       0       0
  4062 ;;Total ram usage:        0 bytes
  4063 ;; Hardware stack levels used: 1
  4064 ;; Hardware stack levels required when called: 2
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_main
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text34
  4073  00112E                     __ptext34:
  4074                           	callstack 0
  4075  00112E                     _TiInitTimer:
  4076                           	callstack 28
  4077                           
  4078                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  4079                           
  4080                           ;incstack = 0
  4081  00112E  9ED0               	bcf	208,7,c	;volatile
  4082                           
  4083                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  4084  001130  8EF2               	bsf	242,7,c	;volatile
  4085                           
  4086                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  4087  001132  8CF2               	bsf	242,6,c	;volatile
  4088                           
  4089                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  4090  001134  8AF2               	bsf	242,5,c	;volatile
  4091                           
  4092                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  4093  001136  94F2               	bcf	242,2,c	;volatile
  4094                           
  4095                           ;TiTTimer.c: 25:     T0CON = 136;
  4096  001138  0E88               	movlw	136
  4097  00113A  6ED5               	movwf	213,c	;volatile
  4098                           
  4099                           ;TiTTimer.c: 27:     TMR0H = 223;
  4100                           
  4101                           ;TiTTimer.c: 28:     TMR0L = 148;
  4102  00113C  ECE4  F007         	call	PL28	;call to abstracted procedure
  4103                           
  4104                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  4105  001140  8ED5               	bsf	213,7,c	;volatile
  4106                           
  4107                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  4108  001142  6A2D               	clrf	_counter^0,c
  4109  001144                     l2244:
  4110  001144  0E07               	movlw	7
  4111  001146  642D               	cpfsgt	_counter^0,c
  4112  001148  D001               	goto	l2248
  4113  00114A  0C07               	retlw	7
  4114  00114C                     l2248:
  4115                           
  4116                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  4117  00114C  EC67  F008         	call	PL4	;call to abstracted procedure
  4118  001150  6ADF               	clrf	indf2,c
  4119                           
  4120                           ;TiTTimer.c: 33:     }
  4121  001152  2A2D               	incf	_counter^0,f,c
  4122  001154  D7F7               	goto	l2244
  4123  001156                     __end_of_TiInitTimer:
  4124                           	callstack 0
  4125                           
  4126 ;; *************** function _TeTeclat *****************
  4127 ;; Defined at:
  4128 ;;		line 22 in file "TeTeclat.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/1
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1
  4142 ;;      Params:         0       0       0
  4143 ;;      Locals:         0       0       0
  4144 ;;      Temps:          3       0       0
  4145 ;;      Totals:         3       0       0
  4146 ;;Total ram usage:        3 bytes
  4147 ;; Hardware stack levels used: 1
  4148 ;; Hardware stack levels required when called: 3
  4149 ;; This function calls:
  4150 ;;		_MsetNovaTecla
  4151 ;;		_SsetNovaTecla
  4152 ;;		_TiGetTics
  4153 ;;		_TiResetTics
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text35
  4160  000A6E                     __ptext35:
  4161                           	callstack 0
  4162  000A6E                     _TeTeclat:
  4163                           	callstack 27
  4164                           
  4165                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  4166                           
  4167                           ;incstack = 0
  4168  000A6E  A083               	btfss	131,0,c	;volatile
  4169  000A70  D003               	goto	u3280
  4170  000A72  6A70               	clrf	??_TeTeclat^0,c
  4171  000A74  2A70               	incf	??_TeTeclat^0,f,c
  4172  000A76  D001               	goto	u3288
  4173  000A78                     u3280:
  4174  000A78  6A70               	clrf	??_TeTeclat^0,c
  4175  000A7A                     u3288:
  4176  000A7A  0E01               	movlw	1
  4177  000A7C  A283               	btfss	131,1,c	;volatile
  4178  000A7E  0E00               	movlw	0
  4179  000A80  0D02               	mullw	2
  4180  000A82  CFF3 F071          	movff	prodl,??_TeTeclat+1
  4181  000A86  0E01               	movlw	1
  4182  000A88  A483               	btfss	131,2,c	;volatile
  4183  000A8A  0E00               	movlw	0
  4184  000A8C  0D03               	mullw	3
  4185  000A8E  CFF3 F072          	movff	prodl,??_TeTeclat+2
  4186  000A92  0E01               	movlw	1
  4187  000A94  A683               	btfss	131,3,c	;volatile
  4188  000A96  0E00               	movlw	0
  4189  000A98  0D04               	mullw	4
  4190  000A9A  50F3               	movf	243,w,c
  4191  000A9C  2472               	addwf	(??_TeTeclat+2)^0,w,c
  4192  000A9E  2471               	addwf	(??_TeTeclat+1)^0,w,c
  4193  000AA0  2470               	addwf	??_TeTeclat^0,w,c
  4194  000AA2  6E2E               	movwf	TeTeclat@files^0,c
  4195                           
  4196                           ;TeTeclat.c: 27:  switch(state) {
  4197  000AA4  D058               	goto	l4072
  4198  000AA6                     l3998:
  4199                           
  4200                           ;TeTeclat.c: 29:    if (files==0) {
  4201  000AA6  502E               	movf	TeTeclat@files^0,w,c
  4202  000AA8  E106               	bnz	l4004
  4203                           
  4204                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  4205  000AAA  888C               	bsf	140,4,c	;volatile
  4206                           
  4207                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  4208  000AAC  9A8C               	bcf	140,5,c	;volatile
  4209                           
  4210                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  4211  000AAE  9C8C               	bcf	140,6,c	;volatile
  4212                           
  4213                           ;TeTeclat.c: 33:     cols=0;
  4214  000AB0  6A2F               	clrf	TeTeclat@cols^0,c
  4215  000AB2                     l4002:
  4216                           
  4217                           ;TeTeclat.c: 34:     state++;
  4218  000AB2  2A30               	incf	TeTeclat@state^0,f,c
  4219                           
  4220                           ;TeTeclat.c: 35:    }
  4221  000AB4  0012               	return	
  4222  000AB6                     l4004:
  4223  000AB6  502E               	movf	TeTeclat@files^0,w,c
  4224  000AB8  B4D8               	btfsc	status,2,c
  4225  000ABA  0012               	return	
  4226                           
  4227                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  4228  000ABC  5031               	movf	_tiTeclat^0,w,c
  4229  000ABE  ECFE  F008         	call	_TiResetTics
  4230  000AC2                     l4008:
  4231                           
  4232                           ;TeTeclat.c: 38:     state = 3;
  4233  000AC2  0E03               	movlw	3
  4234  000AC4  6E30               	movwf	TeTeclat@state^0,c
  4235  000AC6  0C03               	retlw	3
  4236  000AC8                     l4010:
  4237                           
  4238                           ;TeTeclat.c: 42:    if (files==0) {
  4239  000AC8  502E               	movf	TeTeclat@files^0,w,c
  4240  000ACA  E106               	bnz	l4018
  4241                           
  4242                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  4243  000ACC  988C               	bcf	140,4,c	;volatile
  4244                           
  4245                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  4246  000ACE  8A8C               	bsf	140,5,c	;volatile
  4247                           
  4248                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  4249  000AD0  9C8C               	bcf	140,6,c	;volatile
  4250                           
  4251                           ;TeTeclat.c: 46:     cols=1;
  4252  000AD2  0E01               	movlw	1
  4253  000AD4  6E2F               	movwf	TeTeclat@cols^0,c
  4254  000AD6  D7ED               	goto	l4002
  4255  000AD8                     l4018:
  4256  000AD8  502E               	movf	TeTeclat@files^0,w,c
  4257  000ADA  B4D8               	btfsc	status,2,c
  4258  000ADC  0012               	return	
  4259                           
  4260                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  4261  000ADE  5031               	movf	_tiTeclat^0,w,c
  4262  000AE0  ECFE  F008         	call	_TiResetTics
  4263  000AE4  D7EE               	goto	l4008
  4264  000AE6                     l4024:
  4265                           
  4266                           ;TeTeclat.c: 55:    if (files==0) {
  4267  000AE6  502E               	movf	TeTeclat@files^0,w,c
  4268  000AE8  E107               	bnz	l4032
  4269                           
  4270                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  4271  000AEA  988C               	bcf	140,4,c	;volatile
  4272                           
  4273                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  4274  000AEC  9A8C               	bcf	140,5,c	;volatile
  4275                           
  4276                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  4277  000AEE  8C8C               	bsf	140,6,c	;volatile
  4278                           
  4279                           ;TeTeclat.c: 59:     cols=2;
  4280  000AF0  0E02               	movlw	2
  4281  000AF2  6E2F               	movwf	TeTeclat@cols^0,c
  4282  000AF4                     l4030:
  4283                           
  4284                           ;TeTeclat.c: 60:     state = 0;
  4285  000AF4  6A30               	clrf	TeTeclat@state^0,c
  4286                           
  4287                           ;TeTeclat.c: 61:    }
  4288  000AF6  0012               	return	
  4289  000AF8                     l4032:
  4290  000AF8  502E               	movf	TeTeclat@files^0,w,c
  4291  000AFA  B4D8               	btfsc	status,2,c
  4292  000AFC  0012               	return	
  4293                           
  4294                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  4295  000AFE  5031               	movf	_tiTeclat^0,w,c
  4296  000B00  ECFE  F008         	call	_TiResetTics
  4297  000B04  D7D6               	goto	l4002
  4298  000B06                     l4038:
  4299                           
  4300                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  4301  000B06  5031               	movf	_tiTeclat^0,w,c
  4302  000B08  ECAB  F008         	call	_TiGetTics
  4303  000B0C  BE6A               	btfsc	(?_TiGetTics+1)^0,7,c
  4304  000B0E  0012               	return	
  4305  000B10  D7D0               	goto	l4002
  4306  000B12                     l4042:
  4307                           
  4308                           ;TeTeclat.c: 73:    if (files==0) {
  4309  000B12  502E               	movf	TeTeclat@files^0,w,c
  4310  000B14  E103               	bnz	l4046
  4311                           
  4312                           ;TeTeclat.c: 74:     state = 1;
  4313  000B16  0E01               	movlw	1
  4314  000B18  6E30               	movwf	TeTeclat@state^0,c
  4315                           
  4316                           ;TeTeclat.c: 75:    }
  4317  000B1A  0C01               	retlw	1
  4318  000B1C                     l4046:
  4319  000B1C  502E               	movf	TeTeclat@files^0,w,c
  4320  000B1E  B4D8               	btfsc	status,2,c
  4321  000B20  0012               	return	
  4322                           
  4323                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  4324  000B22  D830               	call	PL10	;call to abstracted procedure
  4325  000B24  EC6A  F009         	call	_MsetNovaTecla
  4326                           
  4327                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  4328  000B28  D82D               	call	PL10	;call to abstracted procedure
  4329  000B2A  EC66  F009         	call	_SsetNovaTecla
  4330  000B2E  D7C1               	goto	l4002
  4331  000B30                     l4052:
  4332                           
  4333                           ;TeTeclat.c: 84:    if (files==0) {
  4334  000B30  502E               	movf	TeTeclat@files^0,w,c
  4335  000B32  A4D8               	btfss	status,2,c
  4336  000B34  0012               	return	
  4337                           
  4338                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  4339  000B36  5031               	movf	_tiTeclat^0,w,c
  4340  000B38  ECFE  F008         	call	_TiResetTics
  4341  000B3C  D7BA               	goto	l4002
  4342  000B3E                     l4058:
  4343                           
  4344                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  4345  000B3E  5031               	movf	_tiTeclat^0,w,c
  4346  000B40  ECAB  F008         	call	_TiGetTics
  4347  000B44  D7E3               	goto	L3
  4348  000B46                     l4062:
  4349                           
  4350                           ;TeTeclat.c: 95:    if (files!=0) {
  4351  000B46  502E               	movf	TeTeclat@files^0,w,c
  4352  000B48  E003               	bz	l4066
  4353                           
  4354                           ;TeTeclat.c: 96:     state = 5;
  4355  000B4A  0E05               	movlw	5
  4356  000B4C  6E30               	movwf	TeTeclat@state^0,c
  4357                           
  4358                           ;TeTeclat.c: 97:    }
  4359  000B4E  0C05               	retlw	5
  4360  000B50                     l4066:
  4361  000B50  502E               	movf	TeTeclat@files^0,w,c
  4362  000B52  E0D0               	bz	l4030
  4363  000B54  0012               	return	
  4364  000B56                     l4072:
  4365  000B56  5030               	movf	TeTeclat@state^0,w,c
  4366  000B58  6E70               	movwf	??_TeTeclat^0,c
  4367  000B5A  6A71               	clrf	(??_TeTeclat+1)^0,c
  4368                           
  4369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4370                           ; Switch size 1, requested type "space"
  4371                           ; Number of cases is 1, Range of values is 0 to 0
  4372                           ; switch strategies available:
  4373                           ; Name         Instructions Cycles
  4374                           ; simple_byte            4     3 (average)
  4375                           ;	Chosen strategy is simple_byte
  4376  000B5C  5071               	movf	(??_TeTeclat+1)^0,w,c
  4377  000B5E  A4D8               	btfss	status,2,c
  4378  000B60  0012               	return	
  4379                           
  4380                           ; Switch size 1, requested type "space"
  4381                           ; Number of cases is 8, Range of values is 0 to 7
  4382                           ; switch strategies available:
  4383                           ; Name         Instructions Cycles
  4384                           ; simple_byte           25    13 (average)
  4385                           ;	Chosen strategy is simple_byte
  4386  000B62  5070               	movf	??_TeTeclat^0,w,c
  4387  000B64  E0A0               	bz	l3998
  4388  000B66  0A01               	xorlw	1	; case 1
  4389  000B68  E0AF               	bz	l4010
  4390  000B6A  0A03               	xorlw	3	; case 2
  4391  000B6C  E0BC               	bz	l4024
  4392  000B6E  0A01               	xorlw	1	; case 3
  4393  000B70  E0CA               	bz	l4038
  4394  000B72  0A07               	xorlw	7	; case 4
  4395  000B74  E0CE               	bz	l4042
  4396  000B76  0A01               	xorlw	1	; case 5
  4397  000B78  E0DB               	bz	l4052
  4398  000B7A  0A03               	xorlw	3	; case 6
  4399  000B7C  E0E0               	bz	l4058
  4400  000B7E  0A01               	xorlw	1	; case 7
  4401  000B80  E0E2               	bz	l4062
  4402  000B82  0012               	return		;funcret
  4403  000B84                     __end_of_TeTeclat:
  4404                           	callstack 0
  4405  000B84                     PL10:
  4406                           	callstack 27
  4407  000B84  502E               	movf	TeTeclat@files^0,w,c
  4408  000B86  0D03               	mullw	3
  4409  000B88  50F3               	movf	243,w,c
  4410  000B8A  0F7D               	addlw	low (_teclaPremuda+253)
  4411  000B8C  242F               	addwf	TeTeclat@cols^0,w,c
  4412  000B8E  6ED9               	movwf	fsr2l,c
  4413  000B90  6ADA               	clrf	fsr2h,c
  4414  000B92  50DF               	movf	indf2,w,c
  4415  000B94  0012               	return	
  4416  000B96                     __end_ofPL10:
  4417                           	callstack 0
  4418                           
  4419 ;; *************** function _SsetNovaTecla *****************
  4420 ;; Defined at:
  4421 ;;		line 125 in file "Ssms.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  tecla           1    wreg     unsigned char 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  tecla           1    5[COMRAM] unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/1
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1
  4435 ;;      Params:         0       0       0
  4436 ;;      Locals:         1       0       0
  4437 ;;      Temps:          0       0       0
  4438 ;;      Totals:         1       0       0
  4439 ;;Total ram usage:        1 bytes
  4440 ;; Hardware stack levels used: 1
  4441 ;; Hardware stack levels required when called: 2
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_TeTeclat
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text36
  4450  0012CC                     __ptext36:
  4451                           	callstack 0
  4452  0012CC                     _SsetNovaTecla:
  4453                           	callstack 27
  4454                           
  4455                           ;incstack = 0
  4456                           ;SsetNovaTecla@tecla stored from wreg
  4457  0012CC  6E69               	movwf	SsetNovaTecla@tecla^0,c
  4458                           
  4459                           ;Ssms.c: 126:     novaTecla = tecla;
  4460  0012CE  C069  F059         	movff	SsetNovaTecla@tecla,_novaTecla
  4461  0012D2  0012               	return		;funcret
  4462  0012D4                     __end_of_SsetNovaTecla:
  4463                           	callstack 0
  4464                           
  4465 ;; *************** function _MsetNovaTecla *****************
  4466 ;; Defined at:
  4467 ;;		line 28 in file "Menu.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  tecla           1    wreg     unsigned char 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  tecla           1    5[COMRAM] unsigned char 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  1    wreg      void 
  4474 ;; Registers used:
  4475 ;;		wreg
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/1
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1
  4481 ;;      Params:         0       0       0
  4482 ;;      Locals:         1       0       0
  4483 ;;      Temps:          0       0       0
  4484 ;;      Totals:         1       0       0
  4485 ;;Total ram usage:        1 bytes
  4486 ;; Hardware stack levels used: 1
  4487 ;; Hardware stack levels required when called: 2
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		_TeTeclat
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text37
  4496  0012D4                     __ptext37:
  4497                           	callstack 0
  4498  0012D4                     _MsetNovaTecla:
  4499                           	callstack 27
  4500                           
  4501                           ;incstack = 0
  4502                           ;MsetNovaTecla@tecla stored from wreg
  4503  0012D4  6E69               	movwf	MsetNovaTecla@tecla^0,c
  4504                           
  4505                           ;Menu.c: 29:     NovaTecla = tecla;
  4506  0012D6  C069  F056         	movff	MsetNovaTecla@tecla,_NovaTecla
  4507  0012DA  0012               	return		;funcret
  4508  0012DC                     __end_of_MsetNovaTecla:
  4509                           	callstack 0
  4510                           
  4511 ;; *************** function _TeInit *****************
  4512 ;; Defined at:
  4513 ;;		line 18 in file "TeTeclat.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;		None
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1
  4527 ;;      Params:         0       0       0
  4528 ;;      Locals:         0       0       0
  4529 ;;      Temps:          0       0       0
  4530 ;;      Totals:         0       0       0
  4531 ;;Total ram usage:        0 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; Hardware stack levels required when called: 3
  4534 ;; This function calls:
  4535 ;;		_TiGetTimer
  4536 ;; This function is called by:
  4537 ;;		_main
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text38
  4542  0012DC                     __ptext38:
  4543                           	callstack 0
  4544  0012DC                     _TeInit:
  4545                           	callstack 27
  4546                           
  4547                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  4548                           
  4549                           ;incstack = 0
  4550  0012DC  EC58  F008         	call	_TiGetTimer	;wreg free
  4551  0012E0  6E31               	movwf	_tiTeclat^0,c
  4552  0012E2  0012               	return		;funcret
  4553  0012E4                     __end_of_TeInit:
  4554                           	callstack 0
  4555                           
  4556 ;; *************** function _Sinit *****************
  4557 ;; Defined at:
  4558 ;;		line 18 in file "Ssms.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;		None
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1
  4572 ;;      Params:         0       0       0
  4573 ;;      Locals:         0       0       0
  4574 ;;      Temps:          0       0       0
  4575 ;;      Totals:         0       0       0
  4576 ;;Total ram usage:        0 bytes
  4577 ;; Hardware stack levels used: 1
  4578 ;; Hardware stack levels required when called: 3
  4579 ;; This function calls:
  4580 ;;		_TiGetTimer
  4581 ;; This function is called by:
  4582 ;;		_main
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text39
  4587  0012E4                     __ptext39:
  4588                           	callstack 0
  4589  0012E4                     _Sinit:
  4590                           	callstack 27
  4591                           
  4592                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  4593                           
  4594                           ;incstack = 0
  4595  0012E4  EC58  F008         	call	_TiGetTimer	;wreg free
  4596  0012E8  6E58               	movwf	_timerSMS^0,c
  4597  0012EA  0012               	return		;funcret
  4598  0012EC                     __end_of_Sinit:
  4599                           	callstack 0
  4600                           
  4601 ;; *************** function _SMotor *****************
  4602 ;; Defined at:
  4603 ;;		line 22 in file "Ssms.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;		None
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1
  4617 ;;      Params:         0       0       0
  4618 ;;      Locals:         0       0       0
  4619 ;;      Temps:          2       0       0
  4620 ;;      Totals:         2       0       0
  4621 ;;Total ram usage:        2 bytes
  4622 ;; Hardware stack levels used: 1
  4623 ;; Hardware stack levels required when called: 3
  4624 ;; This function calls:
  4625 ;;		_MNovaLletra
  4626 ;;		_TiGetTics
  4627 ;;		_TiResetTics
  4628 ;; This function is called by:
  4629 ;;		_main
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text40
  4634  0008BC                     __ptext40:
  4635                           	callstack 0
  4636  0008BC                     _SMotor:
  4637                           	callstack 27
  4638                           
  4639                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  4640                           
  4641                           ;incstack = 0
  4642  0008BC  D0B8               	goto	l3522
  4643  0008BE                     l3362:
  4644                           
  4645                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  4646  0008BE  2859               	incf	_novaTecla^0,w,c
  4647  0008C0  E008               	bz	l3370
  4648  0008C2  A678               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4649  0008C4  D006               	goto	l3370
  4650                           
  4651                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  4652  0008C6  5058               	movf	_timerSMS^0,w,c
  4653  0008C8  ECFE  F008         	call	_TiResetTics
  4654                           
  4655                           ;Ssms.c: 29:     state = 3;
  4656  0008CC  0E03               	movlw	3
  4657  0008CE  6E32               	movwf	SMotor@state^0,c
  4658                           
  4659                           ;Ssms.c: 30:    }
  4660  0008D0  0C03               	retlw	3
  4661  0008D2                     l3370:
  4662  0008D2  2859               	incf	_novaTecla^0,w,c
  4663  0008D4  A4D8               	btfss	status,2,c
  4664  0008D6  0012               	return	
  4665  0008D8  5058               	movf	_timerSMS^0,w,c
  4666  0008DA  ECAB  F008         	call	_TiGetTics
  4667  0008DE  BE6A               	btfsc	(?_TiGetTics+1)^0,7,c
  4668  0008E0  0012               	return	
  4669  0008E2  D8C0               	call	PL42	;call to abstracted procedure
  4670  0008E4  A0D8               	btfss	status,0,c
  4671  0008E6  0012               	return	
  4672  0008E8  285A               	incf	_lletraASCII^0,w,c
  4673  0008EA  A4D8               	btfss	status,2,c
  4674  0008EC  A678               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4675  0008EE  0012               	return	
  4676                           
  4677                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  4678  0008F0  505A               	movf	_lletraASCII^0,w,c
  4679  0008F2  EC76  F009         	call	_MNovaLletra
  4680                           
  4681                           ;Ssms.c: 33:     lletraASCII = -1;
  4682  0008F6  685A               	setf	_lletraASCII^0,c
  4683                           
  4684                           ;Ssms.c: 34:     ultimaTecla = -1;
  4685  0008F8  6857               	setf	_ultimaTecla^0,c
  4686                           
  4687                           ;Ssms.c: 35:     zeroTecla = 0;
  4688  0008FA  6A33               	clrf	_zeroTecla^0,c
  4689  0008FC                     l3386:
  4690                           
  4691                           ;Ssms.c: 36:     state = 0;
  4692  0008FC  6A32               	clrf	SMotor@state^0,c
  4693  0008FE  0012               	return	
  4694  000900                     l3388:
  4695                           
  4696                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  4697  000900  5057               	movf	_ultimaTecla^0,w,c
  4698  000902  1859               	xorwf	_novaTecla^0,w,c
  4699  000904  E10D               	bnz	l3398
  4700  000906  5058               	movf	_timerSMS^0,w,c
  4701  000908  ECAB  F008         	call	_TiGetTics
  4702  00090C  BE6A               	btfsc	(?_TiGetTics+1)^0,7,c
  4703  00090E  D002               	goto	u2230
  4704  000910  D8A9               	call	PL42	;call to abstracted procedure
  4705  000912  E206               	bc	l3398
  4706  000914                     u2230:
  4707                           
  4708                           ;Ssms.c: 41:     novaTecla = -1;
  4709  000914  6859               	setf	_novaTecla^0,c
  4710                           
  4711                           ;Ssms.c: 42:     sumaPulsacions++;
  4712  000916  2A34               	incf	_sumaPulsacions^0,f,c
  4713                           
  4714                           ;Ssms.c: 43:     lletraASCII++;
  4715  000918  2A5A               	incf	_lletraASCII^0,f,c
  4716                           
  4717                           ;Ssms.c: 44:     state = 2;
  4718  00091A  0E02               	movlw	2
  4719  00091C  6E32               	movwf	SMotor@state^0,c
  4720                           
  4721                           ;Ssms.c: 45:    }
  4722  00091E  0C02               	retlw	2
  4723  000920                     l3398:
  4724  000920  2859               	incf	_novaTecla^0,w,c
  4725  000922  B4D8               	btfsc	status,2,c
  4726  000924  0012               	return	
  4727  000926  5057               	movf	_ultimaTecla^0,w,c
  4728  000928  1859               	xorwf	_novaTecla^0,w,c
  4729  00092A  B4D8               	btfsc	status,2,c
  4730  00092C  0012               	return	
  4731                           
  4732                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  4733  00092E  505A               	movf	_lletraASCII^0,w,c
  4734  000930  EC76  F009         	call	_MNovaLletra
  4735                           
  4736                           ;Ssms.c: 48:     if(novaTecla != 0){
  4737  000934  5059               	movf	_novaTecla^0,w,c
  4738  000936  E004               	bz	l3408
  4739                           
  4740                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  4741  000938  5059               	movf	_novaTecla^0,w,c
  4742  00093A  0F44               	addlw	low (_lletraInici+254)
  4743  00093C  D88F               	call	PL26	;call to abstracted procedure
  4744  00093E  D001               	goto	L4
  4745  000940                     l3408:
  4746                           
  4747                           ;Ssms.c: 51:       lletraASCII = '0';
  4748  000940  0E30               	movlw	48
  4749  000942                     L4:
  4750  000942  6E5A               	movwf	_lletraASCII^0,c
  4751                           
  4752                           ;Ssms.c: 53:     zeroTecla=0;
  4753  000944  6A33               	clrf	_zeroTecla^0,c
  4754                           
  4755                           ;Ssms.c: 54:     ultimaTecla = novaTecla;
  4756  000946  C059  F057         	movff	_novaTecla,_ultimaTecla
  4757                           
  4758                           ;Ssms.c: 55:     sumaPulsacions = 0;
  4759  00094A  6A34               	clrf	_sumaPulsacions^0,c
  4760  00094C                     l3416:
  4761                           
  4762                           ;Ssms.c: 56:     novaTecla = -1;
  4763  00094C  6859               	setf	_novaTecla^0,c
  4764  00094E  D7D6               	goto	l3386
  4765  000950                     l3420:
  4766                           
  4767                           ;Ssms.c: 61:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  4768  000950  0E07               	movlw	7
  4769  000952  1857               	xorwf	_ultimaTecla^0,w,c
  4770  000954  E008               	bz	l3428
  4771  000956  0E09               	movlw	9
  4772  000958  1857               	xorwf	_ultimaTecla^0,w,c
  4773  00095A  E005               	bz	l3428
  4774  00095C  5057               	movf	_ultimaTecla^0,w,c
  4775  00095E  E003               	bz	l3428
  4776                           
  4777                           ;Ssms.c: 62:     state = 5;
  4778  000960  0E05               	movlw	5
  4779  000962  6E32               	movwf	SMotor@state^0,c
  4780                           
  4781                           ;Ssms.c: 63:    }
  4782  000964  0C05               	retlw	5
  4783  000966                     l3428:
  4784  000966  0E07               	movlw	7
  4785  000968  1857               	xorwf	_ultimaTecla^0,w,c
  4786  00096A  E003               	bz	u2310
  4787  00096C  0E09               	movlw	9
  4788  00096E  1857               	xorwf	_ultimaTecla^0,w,c
  4789  000970  E103               	bnz	l3434
  4790  000972                     u2310:
  4791                           
  4792                           ;Ssms.c: 65:     state = 6;
  4793  000972  0E06               	movlw	6
  4794  000974  6E32               	movwf	SMotor@state^0,c
  4795                           
  4796                           ;Ssms.c: 66:    }
  4797  000976  0C06               	retlw	6
  4798  000978                     l3434:
  4799  000978  5057               	movf	_ultimaTecla^0,w,c
  4800  00097A  A4D8               	btfss	status,2,c
  4801  00097C  0012               	return	
  4802                           
  4803                           ;Ssms.c: 68:     zeroTecla++;
  4804  00097E  2A33               	incf	_zeroTecla^0,f,c
  4805                           
  4806                           ;Ssms.c: 69:     if(zeroTecla == 2) zeroTecla = 0;
  4807  000980  0E02               	movlw	2
  4808  000982  1833               	xorwf	_zeroTecla^0,w,c
  4809  000984  E101               	bnz	l3442
  4810  000986  6A33               	clrf	_zeroTecla^0,c
  4811  000988                     l3442:
  4812                           
  4813                           ;Ssms.c: 70:     lletraASCII = arrayZero[zeroTecla];
  4814  000988  5033               	movf	_zeroTecla^0,w,c
  4815  00098A  0F4F               	addlw	low _arrayZero
  4816  00098C  D867               	call	PL26	;call to abstracted procedure
  4817  00098E  D041               	goto	L5
  4818  000990                     l3446:
  4819                           
  4820                           ;Ssms.c: 75:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  4821  000990  5059               	movf	_novaTecla^0,w,c
  4822  000992  0A80               	xorlw	128
  4823  000994  0F7E               	addlw	-130
  4824  000996  E202               	bc	u2350
  4825  000998  5059               	movf	_novaTecla^0,w,c
  4826  00099A  E107               	bnz	l3454
  4827  00099C                     u2350:
  4828  00099C  5059               	movf	_novaTecla^0,w,c
  4829  00099E  0A80               	xorlw	128
  4830  0009A0  0F76               	addlw	-138
  4831  0009A2  E203               	bc	l3454
  4832                           
  4833                           ;Ssms.c: 76:     state = 1;
  4834  0009A4  0E01               	movlw	1
  4835  0009A6  6E32               	movwf	SMotor@state^0,c
  4836                           
  4837                           ;Ssms.c: 77:    }
  4838  0009A8  0C01               	retlw	1
  4839  0009AA                     l3454:
  4840  0009AA  5059               	movf	_novaTecla^0,w,c
  4841  0009AC  E00B               	bz	l3466
  4842  0009AE  5059               	movf	_novaTecla^0,w,c
  4843  0009B0  0A80               	xorlw	128
  4844  0009B2  0F7E               	addlw	-130
  4845  0009B4  E207               	bc	l3466
  4846  0009B6  285A               	incf	_lletraASCII^0,w,c
  4847  0009B8  E105               	bnz	l3466
  4848                           
  4849                           ;Ssms.c: 79:     MNovaLletra(novaTecla+48);
  4850  0009BA  5059               	movf	_novaTecla^0,w,c
  4851  0009BC  0F30               	addlw	48
  4852  0009BE  EC76  F009         	call	_MNovaLletra
  4853  0009C2  D7C4               	goto	l3416
  4854  0009C4                     l3466:
  4855  0009C4  5059               	movf	_novaTecla^0,w,c
  4856  0009C6  B4D8               	btfsc	status,2,c
  4857  0009C8  0012               	return	
  4858  0009CA  5059               	movf	_novaTecla^0,w,c
  4859  0009CC  0A80               	xorlw	128
  4860  0009CE  0F7E               	addlw	-130
  4861  0009D0  B0D8               	btfsc	status,0,c
  4862  0009D2  0012               	return	
  4863  0009D4  285A               	incf	_lletraASCII^0,w,c
  4864  0009D6  B4D8               	btfsc	status,2,c
  4865  0009D8  0012               	return	
  4866                           
  4867                           ;Ssms.c: 84:     MNovaLletra(lletraASCII);
  4868  0009DA  505A               	movf	_lletraASCII^0,w,c
  4869  0009DC  EC76  F009         	call	_MNovaLletra
  4870                           
  4871                           ;Ssms.c: 85:     lletraASCII = -1;
  4872  0009E0  685A               	setf	_lletraASCII^0,c
  4873                           
  4874                           ;Ssms.c: 86:     state = 4;
  4875  0009E2  0E04               	movlw	4
  4876  0009E4  6E32               	movwf	SMotor@state^0,c
  4877  0009E6  0C04               	retlw	4
  4878  0009E8                     l3478:
  4879                           
  4880                           ;Ssms.c: 90:    MNovaLletra(novaTecla+48);
  4881  0009E8  5059               	movf	_novaTecla^0,w,c
  4882  0009EA  0F30               	addlw	48
  4883  0009EC  EC76  F009         	call	_MNovaLletra
  4884  0009F0  D7AD               	goto	l3416
  4885  0009F2                     l3484:
  4886                           
  4887                           ;Ssms.c: 95:    if (sumaPulsacions == 4) {
  4888  0009F2  0E04               	movlw	4
  4889  0009F4  1834               	xorwf	_sumaPulsacions^0,w,c
  4890  0009F6  E108               	bnz	l3492
  4891  0009F8                     u2430:
  4892                           
  4893                           ;Ssms.c: 96:     lletraASCII = lletraInici[ultimaTecla-2];
  4894  0009F8  5057               	movf	_ultimaTecla^0,w,c
  4895  0009FA  0F44               	addlw	low (_lletraInici+254)
  4896  0009FC  6ED9               	movwf	fsr2l,c
  4897  0009FE  6ADA               	clrf	fsr2h,c
  4898  000A00  50DF               	movf	indf2,w,c
  4899  000A02  6E5A               	movwf	_lletraASCII^0,c
  4900                           
  4901                           ;Ssms.c: 97:     sumaPulsacions = 0;
  4902  000A04  6A34               	clrf	_sumaPulsacions^0,c
  4903  000A06  D77A               	goto	l3386
  4904  000A08                     l3492:
  4905  000A08  0E03               	movlw	3
  4906  000A0A  1834               	xorwf	_sumaPulsacions^0,w,c
  4907  000A0C  E104               	bnz	l3498
  4908  000A0E                     u2440:
  4909                           
  4910                           ;Ssms.c: 101:     lletraASCII = ultimaTecla+48;
  4911  000A0E  5057               	movf	_ultimaTecla^0,w,c
  4912  000A10  0F30               	addlw	48
  4913  000A12                     L5:
  4914  000A12  6E5A               	movwf	_lletraASCII^0,c
  4915  000A14  D773               	goto	l3386
  4916  000A16                     l3498:
  4917  000A16  0E03               	movlw	3
  4918  000A18  6034               	cpfslt	_sumaPulsacions^0,c
  4919  000A1A  0012               	return	
  4920  000A1C  D76F               	goto	l3386
  4921  000A1E                     l3502:
  4922                           
  4923                           ;Ssms.c: 109:    if (sumaPulsacions == 4) {
  4924  000A1E  0E04               	movlw	4
  4925  000A20  1834               	xorwf	_sumaPulsacions^0,w,c
  4926  000A22  E0F5               	bz	u2440
  4927  000A24  0E05               	movlw	5
  4928  000A26  1834               	xorwf	_sumaPulsacions^0,w,c
  4929  000A28  E0E7               	bz	u2430
  4930  000A2A  0E04               	movlw	4
  4931  000A2C  D7F5               	goto	L6
  4932  000A2E                     l3522:
  4933  000A2E  5032               	movf	SMotor@state^0,w,c
  4934  000A30  6E70               	movwf	??_SMotor^0,c
  4935  000A32  6A71               	clrf	(??_SMotor+1)^0,c
  4936                           
  4937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4938                           ; Switch size 1, requested type "space"
  4939                           ; Number of cases is 1, Range of values is 0 to 0
  4940                           ; switch strategies available:
  4941                           ; Name         Instructions Cycles
  4942                           ; simple_byte            4     3 (average)
  4943                           ;	Chosen strategy is simple_byte
  4944  000A34  5071               	movf	(??_SMotor+1)^0,w,c
  4945  000A36  A4D8               	btfss	status,2,c
  4946  000A38  0012               	return	
  4947                           
  4948                           ; Switch size 1, requested type "space"
  4949                           ; Number of cases is 7, Range of values is 0 to 6
  4950                           ; switch strategies available:
  4951                           ; Name         Instructions Cycles
  4952                           ; simple_byte           22    12 (average)
  4953                           ;	Chosen strategy is simple_byte
  4954  000A3A  5070               	movf	??_SMotor^0,w,c
  4955  000A3C  E101 D73F          	bz	l3362
  4956  000A40  0A01               	xorlw	1	; case 1
  4957  000A42  E101 D75D          	bz	l3388
  4958  000A46  0A03               	xorlw	3	; case 2
  4959  000A48  E083               	bz	l3420
  4960  000A4A  0A01               	xorlw	1	; case 3
  4961  000A4C  E0A1               	bz	l3446
  4962  000A4E  0A07               	xorlw	7	; case 4
  4963  000A50  E0CB               	bz	l3478
  4964  000A52  0A01               	xorlw	1	; case 5
  4965  000A54  E0CE               	bz	l3484
  4966  000A56  0A03               	xorlw	3	; case 6
  4967  000A58  E0E2               	bz	l3502
  4968  000A5A  0012               	return		;funcret
  4969  000A5C                     __end_of_SMotor:
  4970                           	callstack 0
  4971  000A5C                     PL26:
  4972                           	callstack 27
  4973  000A5C  6ED9               	movwf	fsr2l,c
  4974  000A5E  6ADA               	clrf	fsr2h,c
  4975  000A60  50DF               	movf	indf2,w,c
  4976  000A62  0012               	return	
  4977  000A64                     __end_ofPL26:
  4978                           	callstack 0
  4979  000A64                     PL42:
  4980                           	callstack 27
  4981  000A64  0E5A               	movlw	90
  4982  000A66  5C69               	subwf	?_TiGetTics^0,w,c
  4983  000A68  0E02               	movlw	2
  4984  000A6A  586A               	subwfb	(?_TiGetTics+1)^0,w,c
  4985  000A6C  0012               	return	
  4986  000A6E                     __end_ofPL42:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function _MNovaLletra *****************
  4990 ;; Defined at:
  4991 ;;		line 32 in file "Menu.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  lletra          1    wreg     unsigned char 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  lletra          1    5[COMRAM] unsigned char 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1
  5005 ;;      Params:         0       0       0
  5006 ;;      Locals:         1       0       0
  5007 ;;      Temps:          0       0       0
  5008 ;;      Totals:         1       0       0
  5009 ;;Total ram usage:        1 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; Hardware stack levels required when called: 2
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_SMotor
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text41
  5020  0012EC                     __ptext41:
  5021                           	callstack 0
  5022  0012EC                     _MNovaLletra:
  5023                           	callstack 27
  5024                           
  5025                           ;incstack = 0
  5026                           ;MNovaLletra@lletra stored from wreg
  5027  0012EC  6E69               	movwf	MNovaLletra@lletra^0,c
  5028                           
  5029                           ;Menu.c: 33:     novaLletra = lletra;
  5030  0012EE  C069  F055         	movff	MNovaLletra@lletra,_novaLletra
  5031  0012F2  0012               	return		;funcret
  5032  0012F4                     __end_of_MNovaLletra:
  5033                           	callstack 0
  5034                           
  5035 ;; *************** function _Minit *****************
  5036 ;; Defined at:
  5037 ;;		line 25 in file "Menu.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1
  5051 ;;      Params:         0       0       0
  5052 ;;      Locals:         0       0       0
  5053 ;;      Temps:          0       0       0
  5054 ;;      Totals:         0       0       0
  5055 ;;Total ram usage:        0 bytes
  5056 ;; Hardware stack levels used: 1
  5057 ;; Hardware stack levels required when called: 3
  5058 ;; This function calls:
  5059 ;;		_TiGetTimer
  5060 ;; This function is called by:
  5061 ;;		_main
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text42
  5066  0012F4                     __ptext42:
  5067                           	callstack 0
  5068  0012F4                     _Minit:
  5069                           	callstack 27
  5070                           
  5071                           ;Menu.c: 26:     timerMenu = TiGetTimer();
  5072                           
  5073                           ;incstack = 0
  5074  0012F4  EC58  F008         	call	_TiGetTimer	;wreg free
  5075  0012F8  6E2B               	movwf	_timerMenu^0,c
  5076  0012FA  0012               	return		;funcret
  5077  0012FC                     __end_of_Minit:
  5078                           	callstack 0
  5079                           
  5080 ;; *************** function _LcLCD *****************
  5081 ;; Defined at:
  5082 ;;		line 246 in file "LcTLCD.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/1
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1
  5096 ;;      Params:         0       0       0
  5097 ;;      Locals:         0       0       0
  5098 ;;      Temps:          0       0       0
  5099 ;;      Totals:         0       0       0
  5100 ;;Total ram usage:        0 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; Hardware stack levels required when called: 6
  5103 ;; This function calls:
  5104 ;;		_LcPutChar
  5105 ;; This function is called by:
  5106 ;;		_main
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text43
  5111  000EF2                     __ptext43:
  5112                           	callstack 0
  5113  000EF2                     _LcLCD:
  5114                           	callstack 24
  5115                           
  5116                           ;LcTLCD.c: 247:     if(nou_s == 1){
  5117                           
  5118                           ;incstack = 0
  5119  000EF2  A878               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5120  000EF4  0012               	return	
  5121                           
  5122                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  5123  000EF6  D818               	call	PL16	;call to abstracted procedure
  5124  000EF8  64F7               	cpfsgt	tblptrh,c
  5125  000EFA  D003               	bra	u2137
  5126  000EFC  0008               	tblrd		*
  5127  000EFE  50F5               	movf	tablat,w,c
  5128  000F00  D001               	bra	u2130
  5129  000F02                     u2137:
  5130  000F02  D819               	call	PL22	;call to abstracted procedure
  5131  000F04                     u2130:
  5132  000F04  ECA1  F007         	call	_LcPutChar
  5133                           
  5134                           ;LcTLCD.c: 249:         s_ptr++;
  5135  000F08  4A24               	infsnz	_s_ptr^0,f,c
  5136  000F0A  2A25               	incf	(_s_ptr+1)^0,f,c
  5137                           
  5138                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  5139  000F0C  D80D               	call	PL16	;call to abstracted procedure
  5140  000F0E  64F7               	cpfsgt	tblptrh,c
  5141  000F10  D003               	bra	u2147
  5142  000F12  0008               	tblrd		*
  5143  000F14  50F5               	movf	tablat,w,c
  5144  000F16  D001               	bra	u2140
  5145  000F18                     u2147:
  5146  000F18  D80E               	call	PL22	;call to abstracted procedure
  5147  000F1A                     u2140:
  5148  000F1A  0900               	iorlw	0
  5149  000F1C  A4D8               	btfss	status,2,c
  5150  000F1E  0012               	return	
  5151                           
  5152                           ;LcTLCD.c: 251:             nou_s = 0;
  5153  000F20  9878               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5154                           
  5155                           ;LcTLCD.c: 252:             s_ptr=0;
  5156  000F22  6A24               	clrf	_s_ptr^0,c
  5157  000F24  6A25               	clrf	(_s_ptr+1)^0,c
  5158  000F26  0012               	return		;funcret
  5159  000F28                     __end_of_LcLCD:
  5160                           	callstack 0
  5161  000F28                     PL16:
  5162                           	callstack 24
  5163  000F28  C024  FFF6         	movff	_s_ptr,tblptrl
  5164  000F2C  C025  FFF7         	movff	_s_ptr+1,tblptrh
  5165  000F30  6AF8               	clrf	tblptru,c
  5166  000F32  0E01               	movlw	(high __ramtop+-1)
  5167  000F34  0012               	return	
  5168  000F36                     __end_ofPL16:
  5169                           	callstack 0
  5170  000F36                     PL22:
  5171                           	callstack 24
  5172  000F36  CFF6 FFD9          	movff	tblptrl,fsr2l
  5173  000F3A  CFF7 FFDA          	movff	tblptrh,fsr2h
  5174  000F3E  50DF               	movf	indf2,w,c
  5175  000F40  0012               	return	
  5176  000F42                     __end_ofPL22:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _LcPutChar *****************
  5180 ;; Defined at:
  5181 ;;		line 134 in file "LcTLCD.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  c               1    wreg     unsigned char 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  c               1   19[COMRAM] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1
  5195 ;;      Params:         0       0       0
  5196 ;;      Locals:         1       0       0
  5197 ;;      Temps:          0       0       0
  5198 ;;      Totals:         1       0       0
  5199 ;;Total ram usage:        1 bytes
  5200 ;; Hardware stack levels used: 1
  5201 ;; Hardware stack levels required when called: 5
  5202 ;; This function calls:
  5203 ;;		_CantaData
  5204 ;;		_LcGotoXY
  5205 ;;		_WaitForBusy
  5206 ;; This function is called by:
  5207 ;;		_LcLCD
  5208 ;;		_menu
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text44
  5213  000F42                     __ptext44:
  5214                           	callstack 0
  5215  000F42                     _LcPutChar:
  5216                           	callstack 24
  5217                           
  5218                           ;incstack = 0
  5219                           ;LcPutChar@c stored from wreg
  5220  000F42  6E77               	movwf	LcPutChar@c^0,c
  5221                           
  5222                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  5223  000F44  ECE9  F007         	call	_WaitForBusy	;wreg free
  5224  000F48  5077               	movf	LcPutChar@c^0,w,c
  5225  000F4A  EC08  F008         	call	_CantaData
  5226                           
  5227                           ;LcTLCD.c: 138:  ++ColumnAct;
  5228  000F4E  2A36               	incf	_ColumnAct^0,f,c
  5229                           
  5230                           ;LcTLCD.c: 140:  if (Rows == 2) {
  5231  000F50  0E02               	movlw	2
  5232  000F52  1838               	xorwf	_Rows^0,w,c
  5233  000F54  E10C               	bnz	l3268
  5234                           
  5235                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  5236  000F56  0E27               	movlw	39
  5237  000F58  6436               	cpfsgt	_ColumnAct^0,c
  5238  000F5A  D009               	goto	l3268
  5239                           
  5240                           ;LcTLCD.c: 142:    ColumnAct = 0;
  5241  000F5C  6A36               	clrf	_ColumnAct^0,c
  5242                           
  5243                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  5244  000F5E  2A37               	incf	_RowAct^0,f,c
  5245  000F60  0E01               	movlw	1
  5246  000F62  6437               	cpfsgt	_RowAct^0,c
  5247  000F64  D001               	goto	l3266
  5248  000F66  6A37               	clrf	_RowAct^0,c
  5249  000F68                     l3266:
  5250                           
  5251                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  5252  000F68  D80C               	call	PL46	;call to abstracted procedure
  5253  000F6A  EC3E  F008         	call	_LcGotoXY
  5254  000F6E                     l3268:
  5255                           
  5256                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  5257  000F6E  0437               	decf	_RowAct^0,w,c
  5258  000F70  A4D8               	btfss	status,2,c
  5259  000F72  0012               	return	
  5260                           
  5261                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  5262  000F74  0E27               	movlw	39
  5263  000F76  6436               	cpfsgt	_ColumnAct^0,c
  5264  000F78  D001               	goto	l3274
  5265  000F7A  6A36               	clrf	_ColumnAct^0,c
  5266  000F7C                     l3274:
  5267                           
  5268                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  5269  000F7C  D802               	call	PL46	;call to abstracted procedure
  5270  000F7E  EF3E  F008         	goto	_LcGotoXY
  5271  000F82                     __end_of_LcPutChar:
  5272                           	callstack 0
  5273  000F82                     PL46:
  5274                           	callstack 24
  5275  000F82  C037  F071         	movff	_RowAct,LcGotoXY@Row
  5276  000F86  5036               	movf	_ColumnAct^0,w,c
  5277  000F88  0012               	return	
  5278  000F8A                     __end_ofPL46:
  5279                           	callstack 0
  5280                           
  5281 ;; *************** function _LcGotoXY *****************
  5282 ;; Defined at:
  5283 ;;		line 106 in file "LcTLCD.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  Column          1    wreg     unsigned char 
  5286 ;;  Row             1   13[COMRAM] unsigned char 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;  Column          1   18[COMRAM] unsigned char 
  5289 ;;  Fisics          2   14[COMRAM] int 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1
  5299 ;;      Params:         1       0       0
  5300 ;;      Locals:         5       0       0
  5301 ;;      Temps:          0       0       0
  5302 ;;      Totals:         6       0       0
  5303 ;;Total ram usage:        6 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; Hardware stack levels required when called: 4
  5306 ;; This function calls:
  5307 ;;		_CantaIR
  5308 ;;		_WaitForBusy
  5309 ;; This function is called by:
  5310 ;;		_LcClear
  5311 ;;		_LcPutChar
  5312 ;;		_menu
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text45
  5317  00107C                     __ptext45:
  5318                           	callstack 0
  5319  00107C                     _LcGotoXY:
  5320                           	callstack 24
  5321                           
  5322                           ;incstack = 0
  5323                           ;LcGotoXY@Column stored from wreg
  5324  00107C  6E76               	movwf	LcGotoXY@Column^0,c
  5325                           
  5326                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  5327  00107E  5071               	movf	LcGotoXY@Row^0,w,c
  5328  001080  E004               	bz	l57
  5329  001082  6A75               	clrf	(_LcGotoXY$336+1)^0,c
  5330  001084  0E40               	movlw	64
  5331  001086  6E74               	movwf	_LcGotoXY$336^0,c
  5332  001088  D002               	goto	l3212
  5333  00108A                     l57:
  5334  00108A  6A74               	clrf	_LcGotoXY$336^0,c
  5335  00108C  6A75               	clrf	(_LcGotoXY$336+1)^0,c
  5336  00108E                     l3212:
  5337  00108E  5076               	movf	LcGotoXY@Column^0,w,c
  5338  001090  2474               	addwf	_LcGotoXY$336^0,w,c
  5339  001092  6E72               	movwf	LcGotoXY@Fisics^0,c
  5340  001094  0E00               	movlw	0
  5341  001096  2075               	addwfc	(_LcGotoXY$336+1)^0,w,c
  5342  001098  6E73               	movwf	(LcGotoXY@Fisics+1)^0,c
  5343                           
  5344                           ;LcTLCD.c: 127:  WaitForBusy();
  5345  00109A  ECE9  F007         	call	_WaitForBusy	;wreg free
  5346                           
  5347                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  5348  00109E  5072               	movf	LcGotoXY@Fisics^0,w,c
  5349  0010A0  0980               	iorlw	128
  5350  0010A2  EC0C  F009         	call	_CantaIR
  5351                           
  5352                           ;LcTLCD.c: 130:  RowAct = Row;
  5353  0010A6  C071  F037         	movff	LcGotoXY@Row,_RowAct
  5354                           
  5355                           ;LcTLCD.c: 131:  ColumnAct = Column;
  5356  0010AA  C076  F036         	movff	LcGotoXY@Column,_ColumnAct
  5357  0010AE  0012               	return		;funcret
  5358  0010B0                     __end_of_LcGotoXY:
  5359                           	callstack 0
  5360                           
  5361 ;; *************** function _CantaData *****************
  5362 ;; Defined at:
  5363 ;;		line 196 in file "LcTLCD.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  Data            1    wreg     unsigned char 
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;  Data            1    7[COMRAM] unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      void 
  5370 ;; Registers used:
  5371 ;;		wreg, status,2, status,0, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1
  5377 ;;      Params:         0       0       0
  5378 ;;      Locals:         1       0       0
  5379 ;;      Temps:          0       0       0
  5380 ;;      Totals:         1       0       0
  5381 ;;Total ram usage:        1 bytes
  5382 ;; Hardware stack levels used: 1
  5383 ;; Hardware stack levels required when called: 3
  5384 ;; This function calls:
  5385 ;;		_CantaPartAlta
  5386 ;;		_CantaPartBaixa
  5387 ;; This function is called by:
  5388 ;;		_LcPutChar
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text46
  5393  001010                     __ptext46:
  5394                           	callstack 0
  5395  001010                     _CantaData:
  5396                           	callstack 25
  5397                           
  5398                           ;incstack = 0
  5399                           ;CantaData@Data stored from wreg
  5400  001010  6E6B               	movwf	CantaData@Data^0,c
  5401                           
  5402                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  5403  001012  9694               	bcf	148,3,c	;volatile
  5404  001014  9494               	bcf	148,2,c	;volatile
  5405  001016  9294               	bcf	148,1,c	;volatile
  5406  001018  9094               	bcf	148,0,c	;volatile
  5407                           
  5408                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  5409  00101A  8A8B               	bsf	139,5,c	;volatile
  5410                           
  5411                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  5412  00101C  9E8C               	bcf	140,7,c	;volatile
  5413                           
  5414                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  5415  00101E  888B               	bsf	139,4,c	;volatile
  5416                           
  5417                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  5418  001020  506B               	movf	CantaData@Data^0,w,c
  5419  001022  EC1A  F007         	call	_CantaPartAlta
  5420                           
  5421                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  5422                           
  5423                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  5424                           
  5425                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  5426                           
  5427                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  5428  001026  D80B               	call	PL40	;call to abstracted procedure
  5429                           
  5430                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  5431  001028  506B               	movf	CantaData@Data^0,w,c
  5432  00102A  ECE7  F006         	call	_CantaPartBaixa
  5433                           
  5434                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  5435                           
  5436                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  5437                           
  5438                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  5439  00102E  D000               	goto	PL14	;call to abstracted procedure
  5440  001030                     __end_of_CantaData:
  5441                           	callstack 0
  5442  001030                     PL14:
  5443                           	callstack 25
  5444  001030  888B               	bsf	139,4,c	;volatile
  5445  001032  988B               	bcf	139,4,c	;volatile
  5446  001034  8694               	bsf	148,3,c	;volatile
  5447  001036  8494               	bsf	148,2,c	;volatile
  5448  001038  8294               	bsf	148,1,c	;volatile
  5449  00103A  8094               	bsf	148,0,c	;volatile
  5450  00103C  0012               	return		;funcret
  5451  00103E                     __end_ofPL14:
  5452                           	callstack 0
  5453  00103E                     PL40:
  5454                           	callstack 25
  5455  00103E  888B               	bsf	139,4,c	;volatile
  5456  001040  988B               	bcf	139,4,c	;volatile
  5457  001042  988B               	bcf	139,4,c	;volatile
  5458  001044  888B               	bsf	139,4,c	;volatile
  5459  001046  0012               	return	
  5460  001048                     __end_ofPL40:
  5461                           	callstack 0
  5462                           
  5463 ;; *************** function _LcInit *****************
  5464 ;; Defined at:
  5465 ;;		line 41 in file "LcTLCD.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  rows            1    wreg     unsigned char 
  5468 ;;  columns         1   16[COMRAM] unsigned char 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  rows            1   17[COMRAM] unsigned char 
  5471 ;;  i               2   18[COMRAM] int 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1
  5481 ;;      Params:         1       0       0
  5482 ;;      Locals:         3       0       0
  5483 ;;      Temps:          0       0       0
  5484 ;;      Totals:         4       0       0
  5485 ;;Total ram usage:        4 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 4
  5488 ;; This function calls:
  5489 ;;		_CantaIR
  5490 ;;		_EscriuPrimeraOrdre
  5491 ;;		_Espera
  5492 ;;		_TiGetTimer
  5493 ;;		_WaitForBusy
  5494 ;; This function is called by:
  5495 ;;		_main
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text47
  5500  000B96                     __ptext47:
  5501                           	callstack 0
  5502  000B96                     _LcInit:
  5503                           	callstack 26
  5504                           
  5505                           ;incstack = 0
  5506                           ;LcInit@rows stored from wreg
  5507  000B96  6E75               	movwf	LcInit@rows^0,c
  5508                           
  5509                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  5510  000B98  EC58  F008         	call	_TiGetTimer	;wreg free
  5511  000B9C  6E35               	movwf	_Timer^0,c
  5512                           
  5513                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  5514  000B9E  C075  F038         	movff	LcInit@rows,_Rows
  5515                           
  5516                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  5517  000BA2  6A36               	clrf	_ColumnAct^0,c
  5518  000BA4  6A37               	clrf	_RowAct^0,c
  5519                           
  5520                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  5521  000BA6  9894               	bcf	148,4,c	;volatile
  5522  000BA8  9E95               	bcf	149,7,c	;volatile
  5523  000BAA  9A94               	bcf	148,5,c	;volatile
  5524                           
  5525                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  5526  000BAC  6A76               	clrf	LcInit@i^0,c
  5527  000BAE  6A77               	clrf	(LcInit@i+1)^0,c
  5528  000BB0                     l3314:
  5529                           
  5530                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  5531  000BB0  6A71               	clrf	(Espera@ms+1)^0,c
  5532  000BB2  0E64               	movlw	100
  5533  000BB4  6E70               	movwf	Espera@ms^0,c
  5534  000BB6  5035               	movf	_Timer^0,w,c
  5535  000BB8  ECCF  F008         	call	_Espera
  5536                           
  5537                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  5538  000BBC  0E03               	movlw	3
  5539  000BBE  EC75  F006         	call	_EscriuPrimeraOrdre
  5540                           
  5541                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  5542  000BC2  6A71               	clrf	(Espera@ms+1)^0,c
  5543  000BC4  0E05               	movlw	5
  5544  000BC6  6E70               	movwf	Espera@ms^0,c
  5545  000BC8  5035               	movf	_Timer^0,w,c
  5546  000BCA  ECCF  F008         	call	_Espera
  5547                           
  5548                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  5549  000BCE  0E03               	movlw	3
  5550  000BD0  EC75  F006         	call	_EscriuPrimeraOrdre
  5551                           
  5552                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  5553  000BD4  D83A               	call	PL36	;call to abstracted procedure
  5554  000BD6  ECCF  F008         	call	_Espera
  5555                           
  5556                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  5557  000BDA  0E03               	movlw	3
  5558  000BDC  EC75  F006         	call	_EscriuPrimeraOrdre
  5559                           
  5560                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  5561  000BE0  D834               	call	PL36	;call to abstracted procedure
  5562  000BE2  ECCF  F008         	call	_Espera
  5563                           
  5564                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  5565  000BE6  0E02               	movlw	2
  5566  000BE8  EC75  F006         	call	_EscriuPrimeraOrdre
  5567                           
  5568                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  5569  000BEC  6A71               	clrf	(Espera@ms+1)^0,c
  5570  000BEE  0E04               	movlw	4
  5571  000BF0  6E70               	movwf	Espera@ms^0,c
  5572  000BF2  5035               	movf	_Timer^0,w,c
  5573  000BF4  ECCF  F008         	call	_Espera
  5574                           
  5575                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  5576  000BF8  0E28               	movlw	40
  5577  000BFA  EC0C  F009         	call	_CantaIR
  5578                           
  5579                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  5580  000BFE  ECE9  F007         	call	_WaitForBusy	;wreg free
  5581  000C02  0E08               	movlw	8
  5582  000C04  EC0C  F009         	call	_CantaIR
  5583                           
  5584                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  5585  000C08  ECE9  F007         	call	_WaitForBusy	;wreg free
  5586  000C0C  0E01               	movlw	1
  5587  000C0E  EC0C  F009         	call	_CantaIR
  5588                           
  5589                           ;LcTLCD.c: 71:   Espera(Timer,3);
  5590  000C12  ECCA  F008         	call	PL34	;call to abstracted procedure
  5591  000C16  ECCF  F008         	call	_Espera
  5592                           
  5593                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  5594  000C1A  ECE9  F007         	call	_WaitForBusy	;wreg free
  5595  000C1E  0E06               	movlw	6
  5596  000C20  EC0C  F009         	call	_CantaIR
  5597                           
  5598                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  5599  000C24  ECE9  F007         	call	_WaitForBusy	;wreg free
  5600  000C28  0E0F               	movlw	15
  5601  000C2A  EC0C  F009         	call	_CantaIR
  5602                           
  5603                           ;LcTLCD.c: 74:  }
  5604  000C2E  4A76               	infsnz	LcInit@i^0,f,c
  5605  000C30  2A77               	incf	(LcInit@i+1)^0,f,c
  5606  000C32  BE77               	btfsc	(LcInit@i+1)^0,7,c
  5607  000C34  D7BD               	goto	l3314
  5608  000C36  5077               	movf	(LcInit@i+1)^0,w,c
  5609  000C38  E103               	bnz	u2110
  5610  000C3A  0E02               	movlw	2
  5611  000C3C  5C76               	subwf	LcInit@i^0,w,c
  5612  000C3E  E3B8               	bnc	l3314
  5613  000C40                     u2110:
  5614                           
  5615                           ;LcTLCD.c: 80:     WaitForBusy();
  5616  000C40  ECE9  F007         	call	_WaitForBusy	;wreg free
  5617                           
  5618                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  5619  000C44  0E0C               	movlw	12
  5620  000C46  EF0C  F009         	goto	_CantaIR
  5621  000C4A                     __end_of_LcInit:
  5622                           	callstack 0
  5623  000C4A                     PL36:
  5624                           	callstack 26
  5625  000C4A  6A71               	clrf	(Espera@ms+1)^0,c
  5626  000C4C  0E01               	movlw	1
  5627  000C4E  6E70               	movwf	Espera@ms^0,c
  5628  000C50  5035               	movf	_Timer^0,w,c
  5629  000C52  0012               	return	
  5630  000C54                     __end_ofPL36:
  5631                           	callstack 0
  5632                           
  5633 ;; *************** function _WaitForBusy *****************
  5634 ;; Defined at:
  5635 ;;		line 212 in file "LcTLCD.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;		None
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  Busy            1   12[COMRAM] unsigned char 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  1    wreg      void 
  5642 ;; Registers used:
  5643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1
  5649 ;;      Params:         0       0       0
  5650 ;;      Locals:         1       0       0
  5651 ;;      Temps:          0       0       0
  5652 ;;      Totals:         1       0       0
  5653 ;;Total ram usage:        1 bytes
  5654 ;; Hardware stack levels used: 1
  5655 ;; Hardware stack levels required when called: 3
  5656 ;; This function calls:
  5657 ;;		_TiGetTics
  5658 ;;		_TiResetTics
  5659 ;; This function is called by:
  5660 ;;		_LcInit
  5661 ;;		_LcClear
  5662 ;;		_LcGotoXY
  5663 ;;		_LcPutChar
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text48
  5668  000FD2                     __ptext48:
  5669                           	callstack 0
  5670  000FD2                     _WaitForBusy:
  5671                           	callstack 25
  5672                           
  5673                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  5674                           
  5675                           ;incstack = 0
  5676  000FD2  8694               	bsf	148,3,c	;volatile
  5677  000FD4  8494               	bsf	148,2,c	;volatile
  5678  000FD6  8294               	bsf	148,1,c	;volatile
  5679  000FD8  8094               	bsf	148,0,c	;volatile
  5680                           
  5681                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  5682  000FDA  9A8B               	bcf	139,5,c	;volatile
  5683                           
  5684                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  5685  000FDC  8E8C               	bsf	140,7,c	;volatile
  5686                           
  5687                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  5688  000FDE  5035               	movf	_Timer^0,w,c
  5689  000FE0  ECFE  F008         	call	_TiResetTics
  5690  000FE4                     l3180:
  5691                           
  5692                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  5693  000FE4  888B               	bsf	139,4,c	;volatile
  5694  000FE6  888B               	bsf	139,4,c	;volatile
  5695                           
  5696                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  5697  000FE8  0E00               	movlw	0
  5698  000FEA  B682               	btfsc	130,3,c	;volatile
  5699  000FEC  0E01               	movlw	1
  5700  000FEE  6E70               	movwf	WaitForBusy@Busy^0,c
  5701                           
  5702                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  5703  000FF0  988B               	bcf	139,4,c	;volatile
  5704                           
  5705                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  5706  000FF2  988B               	bcf	139,4,c	;volatile
  5707                           
  5708                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  5709  000FF4  888B               	bsf	139,4,c	;volatile
  5710  000FF6  888B               	bsf	139,4,c	;volatile
  5711                           
  5712                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  5713  000FF8  988B               	bcf	139,4,c	;volatile
  5714                           
  5715                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  5716  000FFA  988B               	bcf	139,4,c	;volatile
  5717                           
  5718                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  5719  000FFC  5035               	movf	_Timer^0,w,c
  5720  000FFE  ECAB  F008         	call	_TiGetTics
  5721  001002  5069               	movf	?_TiGetTics^0,w,c
  5722  001004  106A               	iorwf	(?_TiGetTics+1)^0,w,c
  5723  001006  E001               	bz	l3202
  5724  001008  0012               	return	
  5725  00100A                     l3202:
  5726                           
  5727                           ;LcTLCD.c: 227:  } while(Busy);
  5728  00100A  5070               	movf	WaitForBusy@Busy^0,w,c
  5729  00100C  E1EB               	bnz	l3180
  5730  00100E  0012               	return		;funcret
  5731  001010                     __end_of_WaitForBusy:
  5732                           	callstack 0
  5733                           
  5734 ;; *************** function _Espera *****************
  5735 ;; Defined at:
  5736 ;;		line 161 in file "LcTLCD.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  Timer           1    wreg     unsigned char 
  5739 ;;  ms              2   12[COMRAM] int 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  Timer           1   15[COMRAM] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1
  5751 ;;      Params:         2       0       0
  5752 ;;      Locals:         1       0       0
  5753 ;;      Temps:          1       0       0
  5754 ;;      Totals:         4       0       0
  5755 ;;Total ram usage:        4 bytes
  5756 ;; Hardware stack levels used: 1
  5757 ;; Hardware stack levels required when called: 3
  5758 ;; This function calls:
  5759 ;;		_TiGetTics
  5760 ;;		_TiResetTics
  5761 ;; This function is called by:
  5762 ;;		_LcInit
  5763 ;;		_LcClear
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text49
  5768  00119E                     __ptext49:
  5769                           	callstack 0
  5770  00119E                     _Espera:
  5771                           	callstack 25
  5772                           
  5773                           ;incstack = 0
  5774                           ;Espera@Timer stored from wreg
  5775  00119E  6E73               	movwf	Espera@Timer^0,c
  5776                           
  5777                           ;LcTLCD.c: 162:  TiResetTics(Timer);
  5778  0011A0  5073               	movf	Espera@Timer^0,w,c
  5779  0011A2  ECFE  F008         	call	_TiResetTics
  5780  0011A6                     l3206:
  5781  0011A6  5073               	movf	Espera@Timer^0,w,c
  5782  0011A8  ECAB  F008         	call	_TiGetTics
  5783  0011AC  5070               	movf	Espera@ms^0,w,c
  5784  0011AE  5C69               	subwf	?_TiGetTics^0,w,c
  5785  0011B0  506A               	movf	(?_TiGetTics+1)^0,w,c
  5786  0011B2  0A80               	xorlw	128
  5787  0011B4  6E72               	movwf	??_Espera^0,c
  5788  0011B6  5071               	movf	(Espera@ms+1)^0,w,c
  5789  0011B8  0A80               	xorlw	128
  5790  0011BA  5872               	subwfb	??_Espera^0,w,c
  5791  0011BC  E3F4               	bnc	l3206
  5792  0011BE  0012               	return		;funcret
  5793  0011C0                     __end_of_Espera:
  5794                           	callstack 0
  5795                           
  5796 ;; *************** function _TiResetTics *****************
  5797 ;; Defined at:
  5798 ;;		line 55 in file "TiTTimer.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  Handle          1    wreg     unsigned char 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  Handle          1    5[COMRAM] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1
  5812 ;;      Params:         0       0       0
  5813 ;;      Locals:         1       0       0
  5814 ;;      Temps:          0       0       0
  5815 ;;      Totals:         1       0       0
  5816 ;;Total ram usage:        1 bytes
  5817 ;; Hardware stack levels used: 1
  5818 ;; Hardware stack levels required when called: 2
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_Espera
  5823 ;;		_WaitForBusy
  5824 ;;		_SMotor
  5825 ;;		_TeTeclat
  5826 ;;		_menu
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           	psect	text50
  5831  0011FC                     __ptext50:
  5832                           	callstack 0
  5833  0011FC                     _TiResetTics:
  5834                           	callstack 27
  5835                           
  5836                           ;incstack = 0
  5837                           ;TiResetTics@Handle stored from wreg
  5838  0011FC  6E69               	movwf	TiResetTics@Handle^0,c
  5839                           
  5840                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  5841  0011FE  5069               	movf	TiResetTics@Handle^0,w,c
  5842  001200  D805               	call	PL12	;call to abstracted procedure
  5843  001202  C022  FFDE         	movff	_h_Tics,postinc2
  5844  001206  C023  FFDD         	movff	_h_Tics+1,postdec2
  5845  00120A  0012               	return		;funcret
  5846  00120C                     __end_of_TiResetTics:
  5847                           	callstack 0
  5848  00120C                     PL12:
  5849                           	callstack 24
  5850  00120C  0D03               	mullw	3
  5851  00120E  50F3               	movf	243,w,c
  5852  001210  0F01               	addlw	low _s_Timers
  5853  001212  6ED9               	movwf	fsr2l,c
  5854  001214  6ADA               	clrf	fsr2h,c
  5855  001216  0012               	return	
  5856  001218                     __end_ofPL12:
  5857                           	callstack 0
  5858                           
  5859 ;; *************** function _TiGetTics *****************
  5860 ;; Defined at:
  5861 ;;		line 61 in file "TiTTimer.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  Handle          1    wreg     unsigned char 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  Handle          1    9[COMRAM] unsigned char 
  5866 ;;  actual          2   10[COMRAM] volatile unsigned int 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  2    5[COMRAM] int 
  5869 ;; Registers used:
  5870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1
  5876 ;;      Params:         2       0       0
  5877 ;;      Locals:         3       0       0
  5878 ;;      Temps:          2       0       0
  5879 ;;      Totals:         7       0       0
  5880 ;;Total ram usage:        7 bytes
  5881 ;; Hardware stack levels used: 1
  5882 ;; Hardware stack levels required when called: 2
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_Espera
  5887 ;;		_WaitForBusy
  5888 ;;		_SMotor
  5889 ;;		_TeTeclat
  5890 ;;		_menu
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           	psect	text51
  5895  001156                     __ptext51:
  5896                           	callstack 0
  5897  001156                     _TiGetTics:
  5898                           	callstack 27
  5899                           
  5900                           ;incstack = 0
  5901                           ;TiGetTics@Handle stored from wreg
  5902  001156  6E6D               	movwf	TiGetTics@Handle^0,c
  5903                           
  5904                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  5905  001158  C022  F06E         	movff	_h_Tics,TiGetTics@actual	;volatile
  5906  00115C  C023  F06F         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  5907                           
  5908                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  5909  001160  506D               	movf	TiGetTics@Handle^0,w,c
  5910  001162  EC06  F009         	call	PL12	;call to abstracted procedure
  5911  001166  CFDE F06B          	movff	postinc2,??_TiGetTics
  5912  00116A  CFDD F06C          	movff	postdec2,??_TiGetTics+1
  5913  00116E  506B               	movf	??_TiGetTics^0,w,c
  5914  001170  5C6E               	subwf	TiGetTics@actual^0,w,c	;volatile
  5915  001172  6E69               	movwf	?_TiGetTics^0,c
  5916  001174  506C               	movf	(??_TiGetTics+1)^0,w,c
  5917  001176  586F               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  5918  001178  6E6A               	movwf	(?_TiGetTics+1)^0,c
  5919  00117A  0012               	return		;funcret
  5920  00117C                     __end_of_TiGetTics:
  5921                           	callstack 0
  5922                           
  5923 ;; *************** function _EscriuPrimeraOrdre *****************
  5924 ;; Defined at:
  5925 ;;		line 230 in file "LcTLCD.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  ordre           1    wreg     unsigned char 
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;  ordre           1    6[COMRAM] unsigned char 
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  1    wreg      void 
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMRAM   BANK0   BANK1
  5939 ;;      Params:         0       0       0
  5940 ;;      Locals:         1       0       0
  5941 ;;      Temps:          1       0       0
  5942 ;;      Totals:         2       0       0
  5943 ;;Total ram usage:        2 bytes
  5944 ;; Hardware stack levels used: 1
  5945 ;; Hardware stack levels required when called: 2
  5946 ;; This function calls:
  5947 ;;		Nothing
  5948 ;; This function is called by:
  5949 ;;		_LcInit
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           	psect	text52
  5954  000CEA                     __ptext52:
  5955                           	callstack 0
  5956  000CEA                     _EscriuPrimeraOrdre:
  5957                           	callstack 27
  5958                           
  5959                           ;incstack = 0
  5960                           ;EscriuPrimeraOrdre@ordre stored from wreg
  5961  000CEA  6E6A               	movwf	EscriuPrimeraOrdre@ordre^0,c
  5962                           
  5963                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  5964  000CEC  9694               	bcf	148,3,c	;volatile
  5965                           
  5966                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  5967  000CEE  D82F               	call	PL18	;call to abstracted procedure
  5968  000CF0  888B               	bsf	139,4,c	;volatile
  5969                           
  5970                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  5971  000CF2  A66A               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  5972  000CF4  D003               	goto	u230
  5973  000CF6  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  5974  000CF8  2A69               	incf	??_EscriuPrimeraOrdre^0,f,c
  5975  000CFA  D001               	goto	u248
  5976  000CFC                     u230:
  5977  000CFC  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  5978  000CFE                     u248:
  5979  000CFE  4669               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  5980  000D00  D82D               	call	PL30	;call to abstracted procedure
  5981  000D02  0BF7               	andlw	-9
  5982  000D04  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5983  000D06  6E8B               	movwf	139,c	;volatile
  5984                           
  5985                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  5986  000D08  A46A               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  5987  000D0A  D003               	goto	u250
  5988  000D0C  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  5989  000D0E  2A69               	incf	??_EscriuPrimeraOrdre^0,f,c
  5990  000D10  D001               	goto	u268
  5991  000D12                     u250:
  5992  000D12  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  5993  000D14                     u268:
  5994  000D14  D823               	call	PL30	;call to abstracted procedure
  5995  000D16  0BFB               	andlw	-5
  5996  000D18  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  5997  000D1A  6E8B               	movwf	139,c	;volatile
  5998                           
  5999                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  6000  000D1C  A26A               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  6001  000D1E  D003               	goto	u270
  6002  000D20  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  6003  000D22  2A69               	incf	??_EscriuPrimeraOrdre^0,f,c
  6004  000D24  D001               	goto	u288
  6005  000D26                     u270:
  6006  000D26  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  6007  000D28                     u288:
  6008  000D28  4669               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6009  000D2A  508B               	movf	139,w,c	;volatile
  6010  000D2C  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6011  000D2E  0BFD               	andlw	-3
  6012  000D30  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6013  000D32  6E8B               	movwf	139,c	;volatile
  6014                           
  6015                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  6016  000D34  A06A               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  6017  000D36  D003               	goto	u290
  6018  000D38  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  6019  000D3A  2A69               	incf	??_EscriuPrimeraOrdre^0,f,c
  6020  000D3C  D001               	goto	u308
  6021  000D3E                     u290:
  6022  000D3E  6A69               	clrf	??_EscriuPrimeraOrdre^0,c
  6023  000D40                     u308:
  6024  000D40  508B               	movf	139,w,c	;volatile
  6025  000D42  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6026  000D44  0BFE               	andlw	-2
  6027  000D46  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6028  000D48  6E8B               	movwf	139,c	;volatile
  6029                           
  6030                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  6031  000D4A  988B               	bcf	139,4,c	;volatile
  6032  000D4C  0012               	return		;funcret
  6033  000D4E                     __end_of_EscriuPrimeraOrdre:
  6034                           	callstack 0
  6035  000D4E                     PL18:
  6036                           	callstack 25
  6037  000D4E  9494               	bcf	148,2,c	;volatile
  6038  000D50  9294               	bcf	148,1,c	;volatile
  6039  000D52  9094               	bcf	148,0,c	;volatile
  6040  000D54  9A8B               	bcf	139,5,c	;volatile
  6041  000D56  9E8C               	bcf	140,7,c	;volatile
  6042  000D58  888B               	bsf	139,4,c	;volatile
  6043  000D5A  0012               	return	
  6044  000D5C                     __end_ofPL18:
  6045                           	callstack 0
  6046  000D5C                     PL30:
  6047                           	callstack 27
  6048  000D5C  4669               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6049  000D5E  4669               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6050  000D60  508B               	movf	139,w,c	;volatile
  6051  000D62  1869               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6052  000D64  0012               	return	
  6053  000D66                     __end_ofPL30:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function _CantaIR *****************
  6057 ;; Defined at:
  6058 ;;		line 180 in file "LcTLCD.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  IR              1    wreg     unsigned char 
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  IR              1    7[COMRAM] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      void 
  6065 ;; Registers used:
  6066 ;;		wreg, status,2, status,0, cstack
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1
  6072 ;;      Params:         0       0       0
  6073 ;;      Locals:         1       0       0
  6074 ;;      Temps:          0       0       0
  6075 ;;      Totals:         1       0       0
  6076 ;;Total ram usage:        1 bytes
  6077 ;; Hardware stack levels used: 1
  6078 ;; Hardware stack levels required when called: 3
  6079 ;; This function calls:
  6080 ;;		_CantaPartAlta
  6081 ;;		_CantaPartBaixa
  6082 ;; This function is called by:
  6083 ;;		_LcScroll
  6084 ;;		_LcInit
  6085 ;;		_LcClear
  6086 ;;		_LcGotoXY
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text53
  6091  001218                     __ptext53:
  6092                           	callstack 0
  6093  001218                     _CantaIR:
  6094                           	callstack 25
  6095                           
  6096                           ;incstack = 0
  6097                           ;CantaIR@IR stored from wreg
  6098  001218  6E6B               	movwf	CantaIR@IR^0,c
  6099                           
  6100                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  6101  00121A  9694               	bcf	148,3,c	;volatile
  6102                           
  6103                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  6104                           
  6105                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  6106                           
  6107                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  6108  00121C  ECA7  F006         	call	PL18	;call to abstracted procedure
  6109                           
  6110                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  6111  001220  506B               	movf	CantaIR@IR^0,w,c
  6112  001222  EC1A  F007         	call	_CantaPartAlta
  6113                           
  6114                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  6115                           
  6116                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  6117                           
  6118                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  6119                           
  6120                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  6121  001226  EC1F  F008         	call	PL40	;call to abstracted procedure
  6122                           
  6123                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  6124  00122A  506B               	movf	CantaIR@IR^0,w,c
  6125  00122C  ECE7  F006         	call	_CantaPartBaixa
  6126                           
  6127                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  6128                           
  6129                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  6130                           
  6131                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  6132  001230  EF18  F008         	goto	PL14	;call to abstracted procedure
  6133  001234                     __end_of_CantaIR:
  6134                           	callstack 0
  6135                           
  6136 ;; *************** function _CantaPartBaixa *****************
  6137 ;; Defined at:
  6138 ;;		line 173 in file "LcTLCD.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  c               1    wreg     unsigned char 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  c               1    6[COMRAM] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      void 
  6145 ;; Registers used:
  6146 ;;		wreg, status,2, status,0
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1
  6152 ;;      Params:         0       0       0
  6153 ;;      Locals:         1       0       0
  6154 ;;      Temps:          1       0       0
  6155 ;;      Totals:         2       0       0
  6156 ;;Total ram usage:        2 bytes
  6157 ;; Hardware stack levels used: 1
  6158 ;; Hardware stack levels required when called: 2
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_CantaIR
  6163 ;;		_CantaData
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text54
  6168  000DCE                     __ptext54:
  6169                           	callstack 0
  6170  000DCE                     _CantaPartBaixa:
  6171                           	callstack 25
  6172                           
  6173                           ;incstack = 0
  6174                           ;CantaPartBaixa@c stored from wreg
  6175  000DCE  6E6A               	movwf	CantaPartBaixa@c^0,c
  6176                           
  6177                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  6178  000DD0  A66A               	btfss	CantaPartBaixa@c^0,3,c
  6179  000DD2  D003               	goto	u1940
  6180  000DD4  6A69               	clrf	??_CantaPartBaixa^0,c
  6181  000DD6  2A69               	incf	??_CantaPartBaixa^0,f,c
  6182  000DD8  D001               	goto	u1958
  6183  000DDA                     u1940:
  6184  000DDA  6A69               	clrf	??_CantaPartBaixa^0,c
  6185  000DDC                     u1958:
  6186  000DDC  4669               	rlncf	??_CantaPartBaixa^0,f,c
  6187  000DDE  D825               	call	PL44	;call to abstracted procedure
  6188  000DE0  0BF7               	andlw	-9
  6189  000DE2  1869               	xorwf	??_CantaPartBaixa^0,w,c
  6190  000DE4  6E8B               	movwf	139,c	;volatile
  6191                           
  6192                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  6193  000DE6  A46A               	btfss	CantaPartBaixa@c^0,2,c
  6194  000DE8  D003               	goto	u1960
  6195  000DEA  6A69               	clrf	??_CantaPartBaixa^0,c
  6196  000DEC  2A69               	incf	??_CantaPartBaixa^0,f,c
  6197  000DEE  D001               	goto	u1978
  6198  000DF0                     u1960:
  6199  000DF0  6A69               	clrf	??_CantaPartBaixa^0,c
  6200  000DF2                     u1978:
  6201  000DF2  D81B               	call	PL44	;call to abstracted procedure
  6202  000DF4  0BFB               	andlw	-5
  6203  000DF6  1869               	xorwf	??_CantaPartBaixa^0,w,c
  6204  000DF8  6E8B               	movwf	139,c	;volatile
  6205                           
  6206                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  6207  000DFA  A26A               	btfss	CantaPartBaixa@c^0,1,c
  6208  000DFC  D003               	goto	u1980
  6209  000DFE  6A69               	clrf	??_CantaPartBaixa^0,c
  6210  000E00  2A69               	incf	??_CantaPartBaixa^0,f,c
  6211  000E02  D001               	goto	u1998
  6212  000E04                     u1980:
  6213  000E04  6A69               	clrf	??_CantaPartBaixa^0,c
  6214  000E06                     u1998:
  6215  000E06  4669               	rlncf	??_CantaPartBaixa^0,f,c
  6216  000E08  508B               	movf	139,w,c	;volatile
  6217  000E0A  1869               	xorwf	??_CantaPartBaixa^0,w,c
  6218  000E0C  0BFD               	andlw	-3
  6219  000E0E  1869               	xorwf	??_CantaPartBaixa^0,w,c
  6220  000E10  6E8B               	movwf	139,c	;volatile
  6221                           
  6222                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  6223  000E12  A06A               	btfss	CantaPartBaixa@c^0,0,c
  6224  000E14  D003               	goto	u2000
  6225  000E16  6A69               	clrf	??_CantaPartBaixa^0,c
  6226  000E18  2A69               	incf	??_CantaPartBaixa^0,f,c
  6227  000E1A  D001               	goto	u2018
  6228  000E1C                     u2000:
  6229  000E1C  6A69               	clrf	??_CantaPartBaixa^0,c
  6230  000E1E                     u2018:
  6231  000E1E  508B               	movf	139,w,c	;volatile
  6232  000E20  1869               	xorwf	??_CantaPartBaixa^0,w,c
  6233  000E22  0BFE               	andlw	-2
  6234  000E24  1869               	xorwf	??_CantaPartBaixa^0,w,c
  6235  000E26  6E8B               	movwf	139,c	;volatile
  6236  000E28  0012               	return		;funcret
  6237  000E2A                     __end_of_CantaPartBaixa:
  6238                           	callstack 0
  6239  000E2A                     PL44:
  6240                           	callstack 25
  6241  000E2A  4669               	rlncf	??_CantaPartBaixa^0,f,c
  6242  000E2C  4669               	rlncf	??_CantaPartBaixa^0,f,c
  6243  000E2E  508B               	movf	139,w,c	;volatile
  6244  000E30  1869               	xorwf	??_CantaPartBaixa^0,w,c
  6245  000E32  0012               	return	
  6246  000E34                     __end_ofPL44:
  6247                           	callstack 0
  6248                           
  6249 ;; *************** function _CantaPartAlta *****************
  6250 ;; Defined at:
  6251 ;;		line 166 in file "LcTLCD.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  c               1    wreg     unsigned char 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  c               1    6[COMRAM] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1
  6265 ;;      Params:         0       0       0
  6266 ;;      Locals:         1       0       0
  6267 ;;      Temps:          1       0       0
  6268 ;;      Totals:         2       0       0
  6269 ;;Total ram usage:        2 bytes
  6270 ;; Hardware stack levels used: 1
  6271 ;; Hardware stack levels required when called: 2
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_CantaIR
  6276 ;;		_CantaData
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text55
  6281  000E34                     __ptext55:
  6282                           	callstack 0
  6283  000E34                     _CantaPartAlta:
  6284                           	callstack 25
  6285                           
  6286                           ;incstack = 0
  6287                           ;CantaPartAlta@c stored from wreg
  6288  000E34  6E6A               	movwf	CantaPartAlta@c^0,c
  6289                           
  6290                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  6291  000E36  AE6A               	btfss	CantaPartAlta@c^0,7,c
  6292  000E38  D003               	goto	u1860
  6293  000E3A  6A69               	clrf	??_CantaPartAlta^0,c
  6294  000E3C  2A69               	incf	??_CantaPartAlta^0,f,c
  6295  000E3E  D001               	goto	u1878
  6296  000E40                     u1860:
  6297  000E40  6A69               	clrf	??_CantaPartAlta^0,c
  6298  000E42                     u1878:
  6299  000E42  4669               	rlncf	??_CantaPartAlta^0,f,c
  6300  000E44  D825               	call	PL38	;call to abstracted procedure
  6301  000E46  0BF7               	andlw	-9
  6302  000E48  1869               	xorwf	??_CantaPartAlta^0,w,c
  6303  000E4A  6E8B               	movwf	139,c	;volatile
  6304                           
  6305                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  6306  000E4C  AC6A               	btfss	CantaPartAlta@c^0,6,c
  6307  000E4E  D003               	goto	u1880
  6308  000E50  6A69               	clrf	??_CantaPartAlta^0,c
  6309  000E52  2A69               	incf	??_CantaPartAlta^0,f,c
  6310  000E54  D001               	goto	u1898
  6311  000E56                     u1880:
  6312  000E56  6A69               	clrf	??_CantaPartAlta^0,c
  6313  000E58                     u1898:
  6314  000E58  D81B               	call	PL38	;call to abstracted procedure
  6315  000E5A  0BFB               	andlw	-5
  6316  000E5C  1869               	xorwf	??_CantaPartAlta^0,w,c
  6317  000E5E  6E8B               	movwf	139,c	;volatile
  6318                           
  6319                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  6320  000E60  AA6A               	btfss	CantaPartAlta@c^0,5,c
  6321  000E62  D003               	goto	u1900
  6322  000E64  6A69               	clrf	??_CantaPartAlta^0,c
  6323  000E66  2A69               	incf	??_CantaPartAlta^0,f,c
  6324  000E68  D001               	goto	u1918
  6325  000E6A                     u1900:
  6326  000E6A  6A69               	clrf	??_CantaPartAlta^0,c
  6327  000E6C                     u1918:
  6328  000E6C  4669               	rlncf	??_CantaPartAlta^0,f,c
  6329  000E6E  508B               	movf	139,w,c	;volatile
  6330  000E70  1869               	xorwf	??_CantaPartAlta^0,w,c
  6331  000E72  0BFD               	andlw	-3
  6332  000E74  1869               	xorwf	??_CantaPartAlta^0,w,c
  6333  000E76  6E8B               	movwf	139,c	;volatile
  6334                           
  6335                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  6336  000E78  A86A               	btfss	CantaPartAlta@c^0,4,c
  6337  000E7A  D003               	goto	u1920
  6338  000E7C  6A69               	clrf	??_CantaPartAlta^0,c
  6339  000E7E  2A69               	incf	??_CantaPartAlta^0,f,c
  6340  000E80  D001               	goto	u1938
  6341  000E82                     u1920:
  6342  000E82  6A69               	clrf	??_CantaPartAlta^0,c
  6343  000E84                     u1938:
  6344  000E84  508B               	movf	139,w,c	;volatile
  6345  000E86  1869               	xorwf	??_CantaPartAlta^0,w,c
  6346  000E88  0BFE               	andlw	-2
  6347  000E8A  1869               	xorwf	??_CantaPartAlta^0,w,c
  6348  000E8C  6E8B               	movwf	139,c	;volatile
  6349  000E8E  0012               	return		;funcret
  6350  000E90                     __end_of_CantaPartAlta:
  6351                           	callstack 0
  6352  000E90                     PL38:
  6353                           	callstack 25
  6354  000E90  4669               	rlncf	??_CantaPartAlta^0,f,c
  6355  000E92  4669               	rlncf	??_CantaPartAlta^0,f,c
  6356  000E94  508B               	movf	139,w,c	;volatile
  6357  000E96  1869               	xorwf	??_CantaPartAlta^0,w,c
  6358  000E98  0012               	return	
  6359  000E9A                     __end_ofPL38:
  6360                           	callstack 0
  6361                           
  6362 ;; *************** function _JoystickInit *****************
  6363 ;; Defined at:
  6364 ;;		line 12 in file "Joystick.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;		None
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;		None
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  1    wreg      void 
  6371 ;; Registers used:
  6372 ;;		wreg, status,2
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1
  6378 ;;      Params:         0       0       0
  6379 ;;      Locals:         0       0       0
  6380 ;;      Temps:          0       0       0
  6381 ;;      Totals:         0       0       0
  6382 ;;Total ram usage:        0 bytes
  6383 ;; Hardware stack levels used: 1
  6384 ;; Hardware stack levels required when called: 2
  6385 ;; This function calls:
  6386 ;;		Nothing
  6387 ;; This function is called by:
  6388 ;;		_main
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text56
  6393  00125E                     __ptext56:
  6394                           	callstack 0
  6395  00125E                     _JoystickInit:
  6396                           	callstack 28
  6397                           
  6398                           ;Joystick.c: 13:     ADCON0 = 0x01;
  6399                           
  6400                           ;incstack = 0
  6401  00125E  0E01               	movlw	1
  6402  001260  6EC2               	movwf	194,c	;volatile
  6403                           
  6404                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  6405  001262  0E0D               	movlw	13
  6406  001264  6EC1               	movwf	193,c	;volatile
  6407                           
  6408                           ;Joystick.c: 15:     ADCON2 = 0x09;
  6409  001266  0E09               	movlw	9
  6410  001268  6EC0               	movwf	192,c	;volatile
  6411                           
  6412                           ;Joystick.c: 16:     ADRESH = 127;
  6413  00126A  0E7F               	movlw	127
  6414  00126C  6EC4               	movwf	196,c	;volatile
  6415  00126E  0C7F               	retlw	127	;funcret
  6416  001270                     __end_of_JoystickInit:
  6417                           	callstack 0
  6418                           
  6419 ;; *************** function _GLCDInit *****************
  6420 ;; Defined at:
  6421 ;;		line 26 in file "GestioLCD.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;		None
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  1    wreg      void 
  6428 ;; Registers used:
  6429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1
  6435 ;;      Params:         0       0       0
  6436 ;;      Locals:         0       0       0
  6437 ;;      Temps:          0       0       0
  6438 ;;      Totals:         0       0       0
  6439 ;;Total ram usage:        0 bytes
  6440 ;; Hardware stack levels used: 1
  6441 ;; Hardware stack levels required when called: 3
  6442 ;; This function calls:
  6443 ;;		_TiGetTimer
  6444 ;; This function is called by:
  6445 ;;		_main
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text57
  6450  00132A                     __ptext57:
  6451                           	callstack 0
  6452  00132A                     _GLCDInit:
  6453                           	callstack 27
  6454                           
  6455                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  6456                           
  6457                           ;incstack = 0
  6458  00132A  EF58  F008         	goto	_TiGetTimer	;wreg free
  6459  00132E                     __end_of_GLCDInit:
  6460                           	callstack 0
  6461                           
  6462 ;; *************** function _TiGetTimer *****************
  6463 ;; Defined at:
  6464 ;;		line 70 in file "TiTTimer.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;		None
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;		None
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1    wreg      unsigned char 
  6471 ;; Registers used:
  6472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1
  6478 ;;      Params:         0       0       0
  6479 ;;      Locals:         0       0       0
  6480 ;;      Temps:          1       0       0
  6481 ;;      Totals:         1       0       0
  6482 ;;Total ram usage:        1 bytes
  6483 ;; Hardware stack levels used: 1
  6484 ;; Hardware stack levels required when called: 2
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_LcInit
  6489 ;;		_Sinit
  6490 ;;		_TeInit
  6491 ;;		_Minit
  6492 ;;		_initAltaveu
  6493 ;;		_GLCDInit
  6494 ;;		_initHora
  6495 ;;		_initSIO
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text58
  6500  0010B0                     __ptext58:
  6501                           	callstack 0
  6502  0010B0                     _TiGetTimer:
  6503                           	callstack 27
  6504                           
  6505                           ;TiTTimer.c: 74:     counter=0;
  6506                           
  6507                           ;incstack = 0
  6508  0010B0  6A2D               	clrf	_counter^0,c
  6509                           
  6510                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  6511  0010B2  D005               	goto	l2008
  6512  0010B4                     l2000:
  6513                           
  6514                           ;TiTTimer.c: 76:         counter++;
  6515  0010B4  2A2D               	incf	_counter^0,f,c
  6516                           
  6517                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  6518  0010B6  0E08               	movlw	8
  6519  0010B8  182D               	xorwf	_counter^0,w,c
  6520  0010BA  E101               	bnz	l2008
  6521  0010BC  0CFF               	retlw	255
  6522  0010BE                     l2008:
  6523                           
  6524                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  6525  0010BE  D807               	call	PL4	;call to abstracted procedure
  6526  0010C0  04DE               	decf	postinc2,w,c
  6527  0010C2  E0F8               	bz	l2000
  6528                           
  6529                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  6530  0010C4  D804               	call	PL4	;call to abstracted procedure
  6531  0010C6  0E01               	movlw	1
  6532  0010C8  6EDF               	movwf	indf2,c
  6533                           
  6534                           ;TiTTimer.c: 80:     return (counter);
  6535  0010CA  502D               	movf	_counter^0,w,c
  6536  0010CC  0012               	return		;funcret
  6537  0010CE                     __end_of_TiGetTimer:
  6538                           	callstack 0
  6539  0010CE                     PL4:
  6540                           	callstack 28
  6541  0010CE  502D               	movf	_counter^0,w,c
  6542  0010D0  0D03               	mullw	3
  6543  0010D2  50F3               	movf	243,w,c
  6544  0010D4  0F03               	addlw	low (_s_Timers+2)
  6545  0010D6  6ED9               	movwf	fsr2l,c
  6546  0010D8  6ADA               	clrf	fsr2h,c
  6547  0010DA  0012               	return	
  6548  0010DC                     __end_ofPL4:
  6549                           	callstack 0
  6550                           
  6551 ;; *************** function _high_rsi *****************
  6552 ;; Defined at:
  6553 ;;		line 22 in file "main.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;		None
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  1    wreg      void 
  6560 ;; Registers used:
  6561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1
  6567 ;;      Params:         0       0       0
  6568 ;;      Locals:         0       0       0
  6569 ;;      Temps:          4       0       0
  6570 ;;      Totals:         4       0       0
  6571 ;;Total ram usage:        4 bytes
  6572 ;; Hardware stack levels used: 1
  6573 ;; Hardware stack levels required when called: 1
  6574 ;; This function calls:
  6575 ;;		__TiRSITimer
  6576 ;; This function is called by:
  6577 ;;		Interrupt level 2
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	intcode
  6582  000008                     __pintcode:
  6583                           	callstack 0
  6584  000008                     _high_rsi:
  6585                           	callstack 24
  6586                           
  6587                           ;incstack = 0
  6588  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6589  00000A  CFD9 F065          	movff	fsr2l,??_high_rsi
  6590  00000E  CFDA F066          	movff	fsr2h,??_high_rsi+1
  6591  000012  CFF3 F067          	movff	prodl,??_high_rsi+2
  6592  000016  CFF4 F068          	movff	prodh,??_high_rsi+3
  6593  00001A  ECC5  F007         	call	__TiRSITimer	;wreg free
  6594  00001E  C068  FFF4         	movff	??_high_rsi+3,prodh
  6595  000022  C067  FFF3         	movff	??_high_rsi+2,prodl
  6596  000026  C066  FFDA         	movff	??_high_rsi+1,fsr2h
  6597  00002A  C065  FFD9         	movff	??_high_rsi,fsr2l
  6598  00002E  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6599  000030  0011               	retfie		f
  6600  000032                     __end_of_high_rsi:
  6601                           	callstack 0
  6602                           
  6603 ;; *************** function __TiRSITimer *****************
  6604 ;; Defined at:
  6605 ;;		line 37 in file "TiTTimer.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;		None
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;		None
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      void 
  6612 ;; Registers used:
  6613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMRAM   BANK0   BANK1
  6619 ;;      Params:         0       0       0
  6620 ;;      Locals:         0       0       0
  6621 ;;      Temps:          1       0       0
  6622 ;;      Totals:         1       0       0
  6623 ;;Total ram usage:        1 bytes
  6624 ;; Hardware stack levels used: 1
  6625 ;; This function calls:
  6626 ;;		Nothing
  6627 ;; This function is called by:
  6628 ;;		_high_rsi
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text60
  6633  000F8A                     __ptext60:
  6634                           	callstack 0
  6635  000F8A                     __TiRSITimer:
  6636                           	callstack 0
  6637                           
  6638                           ;TiTTimer.c: 39:     TMR0H = 223;
  6639                           
  6640                           ;incstack = 0
  6641                           
  6642                           ;TiTTimer.c: 40:     TMR0L = 148;
  6643  000F8A  D81E               	call	PL28	;call to abstracted procedure
  6644                           
  6645                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  6646  000F8C  94F2               	bcf	242,2,c	;volatile
  6647                           
  6648                           ;TiTTimer.c: 42:     h_Tics++;
  6649  000F8E  4A22               	infsnz	_h_Tics^0,f,c
  6650  000F90  2A23               	incf	(_h_Tics+1)^0,f,c
  6651                           
  6652                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  6653  000F92  0E48               	movlw	72
  6654  000F94  5C22               	subwf	_h_Tics^0,w,c
  6655  000F96  0EEE               	movlw	238
  6656  000F98  5823               	subwfb	(_h_Tics+1)^0,w,c
  6657  000F9A  A0D8               	btfss	status,0,c
  6658  000F9C  0012               	return	
  6659                           
  6660                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  6661  000F9E  6A2D               	clrf	_counter^0,c
  6662  000FA0                     i2l2194:
  6663  000FA0  0E07               	movlw	7
  6664  000FA2  642D               	cpfsgt	_counter^0,c
  6665  000FA4  D001               	goto	i2l2198
  6666  000FA6  D00D               	goto	i2l360
  6667  000FA8                     i2l2198:
  6668                           
  6669                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  6670  000FA8  EC67  F008         	call	PL4	;call to abstracted procedure
  6671  000FAC  04DE               	decf	postinc2,w,c
  6672  000FAE  E107               	bnz	i2l2202
  6673                           
  6674                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  6675  000FB0  502D               	movf	_counter^0,w,c
  6676  000FB2  EC06  F009         	call	PL12	;call to abstracted procedure
  6677  000FB6  5022               	movf	_h_Tics^0,w,c
  6678  000FB8  5EDE               	subwf	postinc2,f,c
  6679  000FBA  5023               	movf	(_h_Tics+1)^0,w,c
  6680  000FBC  5ADD               	subwfb	postdec2,f,c
  6681  000FBE                     i2l2202:
  6682                           
  6683                           ;TiTTimer.c: 50:         }
  6684  000FBE  2A2D               	incf	_counter^0,f,c
  6685  000FC0  D7EF               	goto	i2l2194
  6686  000FC2                     i2l360:
  6687                           
  6688                           ;TiTTimer.c: 51:         h_Tics=0;
  6689  000FC2  6A22               	clrf	_h_Tics^0,c
  6690  000FC4  6A23               	clrf	(_h_Tics+1)^0,c
  6691  000FC6  0012               	return		;funcret
  6692  000FC8                     __end_of__TiRSITimer:
  6693                           	callstack 0
  6694  000FC8                     PL28:
  6695                           	callstack 28
  6696  000FC8  0EDF               	movlw	223
  6697  000FCA  6ED7               	movwf	215,c	;volatile
  6698  000FCC  0E94               	movlw	148
  6699  000FCE  6ED6               	movwf	214,c	;volatile
  6700  000FD0  0C94               	retlw	148
  6701  000FD2                     __end_ofPL28:
  6702                           	callstack 0
  6703                           
  6704                           	psect	rparam
  6705  0000                     
  6706                           	psect	temp
  6707  000079                     btemp:
  6708                           	callstack 0
  6709  000079                     	ds	1
  6710  0000                     int$flags	set	btemp
  6711  0000                     wtemp8	set	btemp+1
  6712  0000                     ttemp5	set	btemp+1
  6713  0000                     ttemp6	set	btemp+4
  6714  0000                     ttemp7	set	btemp+8
  6715                           
  6716                           	psect	idloc
  6717                           
  6718                           ;Config register IDLOC0 @ 0x200000
  6719                           ;	unspecified, using default values
  6720  200000                     	org	2097152
  6721  200000  FF                 	db	255
  6722                           
  6723                           ;Config register IDLOC1 @ 0x200001
  6724                           ;	unspecified, using default values
  6725  200001                     	org	2097153
  6726  200001  FF                 	db	255
  6727                           
  6728                           ;Config register IDLOC2 @ 0x200002
  6729                           ;	unspecified, using default values
  6730  200002                     	org	2097154
  6731  200002  FF                 	db	255
  6732                           
  6733                           ;Config register IDLOC3 @ 0x200003
  6734                           ;	unspecified, using default values
  6735  200003                     	org	2097155
  6736  200003  FF                 	db	255
  6737                           
  6738                           ;Config register IDLOC4 @ 0x200004
  6739                           ;	unspecified, using default values
  6740  200004                     	org	2097156
  6741  200004  FF                 	db	255
  6742                           
  6743                           ;Config register IDLOC5 @ 0x200005
  6744                           ;	unspecified, using default values
  6745  200005                     	org	2097157
  6746  200005  FF                 	db	255
  6747                           
  6748                           ;Config register IDLOC6 @ 0x200006
  6749                           ;	unspecified, using default values
  6750  200006                     	org	2097158
  6751  200006  FF                 	db	255
  6752                           
  6753                           ;Config register IDLOC7 @ 0x200007
  6754                           ;	unspecified, using default values
  6755  200007                     	org	2097159
  6756  200007  FF                 	db	255
  6757                           
  6758                           	psect	config
  6759                           
  6760                           ; Padding undefined space
  6761  300000                     	org	3145728
  6762  300000  FF                 	db	255
  6763                           
  6764                           ;Config register CONFIG1H @ 0x300001
  6765                           ;	Oscillator
  6766                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  6767                           ;	Fail-Safe Clock Monitor Enable bit
  6768                           ;	FCMEN = 0x0, unprogrammed default
  6769                           ;	Internal/External Oscillator Switchover bit
  6770                           ;	IESO = 0x0, unprogrammed default
  6771  300001                     	org	3145729
  6772  300001  06                 	db	6
  6773                           
  6774                           ;Config register CONFIG2L @ 0x300002
  6775                           ;	unspecified, using default values
  6776                           ;	Power-up Timer Enable bit
  6777                           ;	PWRT = 0x1, unprogrammed default
  6778                           ;	Brown-out Reset Enable bits
  6779                           ;	BOR = 0x3, unprogrammed default
  6780                           ;	Brown-out Reset Voltage bits
  6781                           ;	BORV = 0x3, unprogrammed default
  6782  300002                     	org	3145730
  6783  300002  1F                 	db	31
  6784                           
  6785                           ;Config register CONFIG2H @ 0x300003
  6786                           ;	Watchdog Timer Enable bit
  6787                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6788                           ;	Watchdog Timer Postscale Select bits
  6789                           ;	WDTPS = 0xF, unprogrammed default
  6790  300003                     	org	3145731
  6791  300003  1E                 	db	30
  6792                           
  6793                           ; Padding undefined space
  6794  300004                     	org	3145732
  6795  300004  FF                 	db	255
  6796                           
  6797                           ;Config register CONFIG3H @ 0x300005
  6798                           ;	CCP2 MUX bit
  6799                           ;	CCP2MX = 0x1, unprogrammed default
  6800                           ;	PORTB A/D Enable bit
  6801                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  6802                           ;	Low-Power Timer1 Oscillator Enable bit
  6803                           ;	LPT1OSC = 0x0, unprogrammed default
  6804                           ;	MCLR Pin Enable bit
  6805                           ;	MCLRE = 0x1, unprogrammed default
  6806  300005                     	org	3145733
  6807  300005  81                 	db	129
  6808                           
  6809                           ;Config register CONFIG4L @ 0x300006
  6810                           ;	Stack Full/Underflow Reset Enable bit
  6811                           ;	STVREN = 0x1, unprogrammed default
  6812                           ;	Single-Supply ICSP Enable bit
  6813                           ;	LVP = OFF, Single-Supply ICSP disabled
  6814                           ;	Boot Block Size Select bits
  6815                           ;	BBSIZ = 0x0, unprogrammed default
  6816                           ;	Extended Instruction Set Enable bit
  6817                           ;	XINST = 0x0, unprogrammed default
  6818                           ;	Background Debugger Enable bit
  6819                           ;	DEBUG = 0x1, unprogrammed default
  6820  300006                     	org	3145734
  6821  300006  81                 	db	129
  6822                           
  6823                           ; Padding undefined space
  6824  300007                     	org	3145735
  6825  300007  FF                 	db	255
  6826                           
  6827                           ;Config register CONFIG5L @ 0x300008
  6828                           ;	unspecified, using default values
  6829                           ;	Code Protection bit
  6830                           ;	CP0 = 0x1, unprogrammed default
  6831                           ;	Code Protection bit
  6832                           ;	CP1 = 0x1, unprogrammed default
  6833  300008                     	org	3145736
  6834  300008  03                 	db	3
  6835                           
  6836                           ;Config register CONFIG5H @ 0x300009
  6837                           ;	unspecified, using default values
  6838                           ;	Boot Block Code Protection bitProtect Boot
  6839                           ;	CPB = 0x1, unprogrammed default
  6840                           ;	Data EEPROM Code Protection bit
  6841                           ;	CPD = 0x1, unprogrammed default
  6842  300009                     	org	3145737
  6843  300009  C0                 	db	192
  6844                           
  6845                           ;Config register CONFIG6L @ 0x30000A
  6846                           ;	unspecified, using default values
  6847                           ;	Write Protection bit
  6848                           ;	WRT0 = 0x1, unprogrammed default
  6849                           ;	Write Protection bit
  6850                           ;	WRT1 = 0x1, unprogrammed default
  6851  30000A                     	org	3145738
  6852  30000A  03                 	db	3
  6853                           
  6854                           ;Config register CONFIG6H @ 0x30000B
  6855                           ;	unspecified, using default values
  6856                           ;	Configuration Register Write Protection bit
  6857                           ;	WRTC = 0x1, unprogrammed default
  6858                           ;	Boot Block Write Protection bit
  6859                           ;	WRTB = 0x1, unprogrammed default
  6860                           ;	Data EEPROM Write Protection bit
  6861                           ;	WRTD = 0x1, unprogrammed default
  6862  30000B                     	org	3145739
  6863  30000B  E0                 	db	224
  6864                           
  6865                           ;Config register CONFIG7L @ 0x30000C
  6866                           ;	unspecified, using default values
  6867                           ;	Table Read Protection bit
  6868                           ;	EBTR0 = 0x1, unprogrammed default
  6869                           ;	Table Read Protection bit
  6870                           ;	EBTR1 = 0x1, unprogrammed default
  6871  30000C                     	org	3145740
  6872  30000C  03                 	db	3
  6873                           
  6874                           ;Config register CONFIG7H @ 0x30000D
  6875                           ;	unspecified, using default values
  6876                           ;	Boot Block Table Read Protection bit
  6877                           ;	EBTRB = 0x1, unprogrammed default
  6878  30000D                     	org	3145741
  6879  30000D  40                 	db	64
  6880                           tosu	equ	0xFFF
  6881                           tosh	equ	0xFFE
  6882                           tosl	equ	0xFFD
  6883                           stkptr	equ	0xFFC
  6884                           pclatu	equ	0xFFB
  6885                           pclath	equ	0xFFA
  6886                           pcl	equ	0xFF9
  6887                           tblptru	equ	0xFF8
  6888                           tblptrh	equ	0xFF7
  6889                           tblptrl	equ	0xFF6
  6890                           tablat	equ	0xFF5
  6891                           prodh	equ	0xFF4
  6892                           prodl	equ	0xFF3
  6893                           indf0	equ	0xFEF
  6894                           postinc0	equ	0xFEE
  6895                           postdec0	equ	0xFED
  6896                           preinc0	equ	0xFEC
  6897                           plusw0	equ	0xFEB
  6898                           fsr0h	equ	0xFEA
  6899                           fsr0l	equ	0xFE9
  6900                           wreg	equ	0xFE8
  6901                           indf1	equ	0xFE7
  6902                           postinc1	equ	0xFE6
  6903                           postdec1	equ	0xFE5
  6904                           preinc1	equ	0xFE4
  6905                           plusw1	equ	0xFE3
  6906                           fsr1h	equ	0xFE2
  6907                           fsr1l	equ	0xFE1
  6908                           bsr	equ	0xFE0
  6909                           indf2	equ	0xFDF
  6910                           postinc2	equ	0xFDE
  6911                           postdec2	equ	0xFDD
  6912                           preinc2	equ	0xFDC
  6913                           plusw2	equ	0xFDB
  6914                           fsr2h	equ	0xFDA
  6915                           fsr2l	equ	0xFD9
  6916                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    145
    Data        42
    BSS         253
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20     120
    BANK0           128      5      17
    BANK1           244      0     184

Pointer List with Targets:

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_LcInit
    _menu->_LcPutChar
    _LcScroll->_CantaIR
    _LcNewString->_UgetUserName
    _LcClear->_LcGotoXY
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcInit->_Espera
    _WaitForBusy->_TiGetTics
    _Espera->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12970
                           _GLCDInit
                       _JoystickInit
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0    9229
                                              0 BANK0      5     5      0
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
                    _checkHoraAcabat
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1438
                                              8 COMRAM     2     0      2
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2836
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0       9
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0       9
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0       9
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0       9
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2193
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2193
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1861
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1190
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (4) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCDInit
     _TiGetTimer
   _JoystickInit
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _TiGetTimer
     _WaitForBusy
       _TiGetTics
       _TiResetTics
   _LcLCD
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _WaitForBusy
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
       _CantaIR
       _Espera
       _LcGotoXY
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _UgetUserName (ARG)
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
     _checkHoraAcabat

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F3      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            F4      0       0       5        0.0%
BANK1               F4      0      B8       6       75.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      11       4       13.3%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     14      78       1       95.2%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     141       7        0.0%
DATA                 0      0     141       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri May 06 11:06:10 2022

               TiResetTics@Handle 0069                  _loginNOTRegister 03C2  
                              PL2 0890                                PL4 10CE  
                              PL6 089C                                PL8 0CC0  
                              l57 108A                  UgetUserName@quin 006B  
       ??_UcheckExistsNotFinished 0069                               PL10 0B84  
                             PL20 0CD2                               PL12 120C  
                             PL30 0D5C                               PL22 0F36  
                             PL14 1030                               PL40 103E  
                             PL32 0CE0                               PL24 08A6  
                             PL16 0F28                               PL50 08B4  
                             PL42 0A64                               PL34 1194  
                             PL26 0A5C                               PL18 0D4E  
                             PL44 0E2A                               PL36 0C4A  
                             PL28 0FC8                               PL46 0F82  
                             PL38 0E90                               PL48 08AC  
                             l511 0492                               l508 0476  
                             l509 0486                               l481 0348  
                             l742 1108                               l744 111E  
                             l576 06F2                               l681 0C5C  
                             l691 0C7E                               l684 0C6A  
                             l694 0C94                               l696 0C9A  
                             l688 0C76                               l689 0C78  
                             u230 0CFC                               u250 0D12  
                             u308 0D40                               u270 0D26  
                             u248 0CFE                               u290 0D3E  
                             u268 0D14                               u288 0D28  
                             _pos 0028                               _tmp 002C  
                ??_CantaPartBaixa 0069                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 0057  
                            l2000 10B4                              l2008 10BE  
                            l2116 12A4                              l2064 12C8  
                            l3202 100A                              l4010 0AC8  
                            l4002 0AB2                              l3212 108E  
                            l4004 0AB6                              l2244 1144  
                            l2092 12B0                              l3206 11A6  
                            l4030 0AF4                              l4032 0AF8  
                            l4024 0AE6                              l4008 0AC2  
                            l2248 114C                              l3314 0BB0  
                            l4042 0B12                              l4018 0AD8  
                            l4202 0336                              l3180 0FE4  
                            l3420 0950                              l4052 0B30  
                            l4204 033C                              l3502 0A1E  
                            l4062 0B46                              l4046 0B1C  
                            l4038 0B06                              l4302 043A  
                            l3416 094C                              l3408 0940  
                            l4072 0B56                              l4320 0462  
                            l4232 0392                              l4224 037A  
                            l4216 035E                              l3274 0F7C  
                            l3266 0F68                              l3442 0988  
                            l3434 0978                              l3370 08D2  
                            l3362 08BE                              l3522 0A2E  
                            l4066 0B50                              l4058 0B3E  
                            l2466 0CB8                              l4410 053E  
                            l4330 0482                              l4242 03B6  
                            l4234 0398                              l3268 0F6E  
                            l3428 0966                              l4412 0544  
                            l4260 03D4                              l4244 03BC  
                            l4180 02F8                              l3454 09AA  
                            l3446 0990                              l4342 04A2  
                            l4520 0648                              l4504 0632  
                            l4424 0560                              l4248 03C4  
                            l3466 09C4                              l3386 08FC  
                            l4602 076E                              l4434 0586  
                            l4426 0566                              l4370 04D8  
                            l4362 04CA                              l4354 04BA  
                            l4290 042A                              l4274 03F8  
                            l4186 030A                              l3492 0A08  
                            l3484 09F2                              l3388 0900  
                            l4620 07A6                              l4604 0774  
                            l4532 0668                              l4508 0636  
                            l4284 041C                              l4276 03FE  
                            l4196 0328                              l3478 09E8  
                            l3398 0920                              l4630 07BE  
                            l4614 079A                              l4550 0690  
                            l4542 0682                              l4438 059E  
                            l4382 04FA                              l4286 0422  
                            l4608 078E                              l4640 07D0  
                            l3498 0A16                              l4570 06CC  
                            l4562 06B0                              l4458 05D2  
                            l4628 07B8                              l4580 06F4  
                            l4556 069E                              l4492 0614  
                            l4476 05F6                              l4396 051C  
                            l4582 06FA                              l4594 0728  
                            l4682 0EE0                              l4588 070C  
                            l3998 0AA6                              STR_1 02DF  
                            STR_2 02BB                              STR_3 02EE  
                            STR_4 02E7                              STR_5 02C6  
                            STR_6 02A2                              STR_7 0292  
                            STR_8 02D7                              STR_9 02AF  
                            u2000 0E1C                              u2110 0C40  
                            u2018 0E1E                              u2130 0F04  
                            u2140 0F1A                              u2310 0972  
                            u2230 0914                              _LATD 000F8C  
                            u2137 0F02                              u2147 0F18  
                            u2430 09F8                              u2350 099C  
                            u2440 0A0E                              u4040 0654  
                            u4050 065A                              u1900 0E6A  
                            u1920 0E82                              u3280 0A78  
                            u1860 0E40                              u1940 0DDA  
                            u1918 0E6C                              u3710 049A  
                            u1880 0E56                              u1960 0DF0  
                            u3288 0A7A                              u3640 0448  
                            u1938 0E84                              u3570 03E2  
                            u1980 0E04                              u1878 0E42  
                            u1958 0DDC                              u1898 0E58  
                            u1978 0DF2                              u3690 048C  
                            u1998 0E06                   ??_SsetNovaTecla 0069  
                            _Rows 0038                              _main 0E9A  
                            _hora 005B                              _menu 02F6  
                            fsr2h 000FDA                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 0079                   __end_of_JJuguem 133C  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 1194                              start 0032  
                 __end_of_CantaIR 1234                      ?_initAltaveu 0064  
                   LcInit@columns 0074                      ___param_bank 000000  
                     _stringScore 0061                  __end_of_GLCDInit 132E  
                     Espera@Timer 0073                             ?_main 0064  
         __size_of_escriureEEPROM 0028                             ?_menu 0064  
                           _EEADR 000FA9                             STR_10 02CF  
                   ??_TiInitTimer 0069                             _T0CON 000FD5  
                           i2l360 0FC2                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 0EF2  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 0064                             _SMSon 12FC  
                           _TXSTA 000FAC                       _MNovaLletra 12EC  
                           _Minit 12F4                             _Sinit 12E4  
                           _Timer 0035                             _Uinit 0C54  
                 __end_of_initSIO 1322                             _s_ptr 0024  
                           _nou_s 03C4                   _HActualitzaHora 1048  
                  __pbitbssCOMRAM 03C0                             tablat 000FF5  
                     _LcNewString 12B4                     ??_TiResetTics 0069  
                           ttemp5 007A                             ttemp6 007D  
                           ttemp7 0081                             status 000FD8  
                ?_checkHoraAcabat 0064                             wtemp8 007A  
   __size_of_UcheckExistsGetError 0004                  __end_of_LcGotoXY 10B0  
                __end_of_LcLliure 12CC                     ??__TiRSITimer 0064  
                __end_of_LcScroll 130E                        _TiGetTimer 10B0  
         EscriuPrimeraOrdre@ordre 006A                  __end_of_JendGame 133A  
                 __initialization 0D66                __size_of_CantaData 0020  
                    __end_of_main 0EF2                      __end_of_menu 0890  
         ?_SIOHaAcabatPuntuacions 0064                  __end_of_TeTeclat 0B84  
                          ??_main 0078                            ??_menu 008C  
              __size_of_LcPutChar 0040                     __activetblptr 000002  
          __size_of_JnovaDireccio 0002                        _JnovaTecla 1334  
                          ?_LcLCD 0064                            ?_SMSon 0064  
                          ?_Minit 0064                            ?_Sinit 0064  
                          ?_Uinit 0064                __size_of_NoFerMenu 0002  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 1156  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                          _EECON2 000FA7                __size_of_URegister 0002  
                       ??_JJuguem 0069                __size_of_SiFerMenu 0002  
        ??_escriure2usuarisStruct 0069                         ??_LcClear 0077  
                       ??_CantaIR 006B                            i2l2202 0FBE  
                          i2l2194 0FA0                            i2l2198 0FA8  
                  LcGotoXY@Fisics 0072                    LcGotoXY@Column 0076  
                   ??_WaitForBusy 0070                __size_of_TiGetTics 0026  
                          _SPBRGH 000FB0                    _sumaPulsacions 0034  
                          _SMSoff 1302                            _LcInit 0B96  
                  _UgetNumUsuaris 130E                            _SMotor 08BC  
                          _TeInit 12DC                            _Espera 119E  
                    _LcGotoXY$336 0074    __end_of_SIOHaAcabatPuntuacions 131E  
                          _RowAct 0037               __end_of_TiResetTics 120C  
                          Uinit@i 006B                            Uinit@j 006C  
                __end_of_high_rsi 0032                            _h_Tics 0022  
                __end_of_initHora 1326               __end_of__TiRSITimer 0FC8  
                __end_of_menuList 0292                            clear_0 0DAC  
                          clear_1 0DBA                        _UenviaChar 1280  
                          isa$std 000001                        UenviaPas@c 006A  
     __size_of_EscriuPrimeraOrdre 0064                         ??_initSIO 006A  
                    __pdataCOMRAM 0046            __size_of_CantaPartAlta 005C  
              __size_of_UenviaPas 0010           __end_of_HActualitzaHora 107C  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
               __end_of_CantaData 1030                      TeTeclat@cols 002F  
                       ?_GLCDInit 0064                     ?_UcheckExists 0064  
                      __accesstop 0080           __end_of__initialization 0DC0  
          __end_of_UgetNumUsuaris 1312                 __end_of_LcPutChar 0F82  
                   _JnovaDireccio 1336                  JnovaDireccio@dir 0069  
                   ___rparam_used 000001                     __end_of_LcLCD 0F28  
                     ?_TiGetTimer 0064                     __end_of_SMSon 1302  
                  __pcstackCOMRAM 0064                     __end_of_Minit 12FC  
             __end_of_WaitForBusy 1010                     __end_of_Sinit 12EC  
                   __end_of_Uinit 0CC0                 __end_of_NoFerMenu 1334  
                    __pidataBANK0 1290              __size_of_initAltaveu 0004  
               __end_of_URegister 1330                 __end_of_SiFerMenu 1332  
                      __end_ofPL2 089C                        __end_ofPL4 10DC  
                      __end_ofPL6 08A6                        __end_ofPL8 0CD2  
                  _escriureEEPROM 1106                 __end_of_TiGetTics 117C  
                     _TiInitTimer 112E                       ?_JnovaTecla 0064  
                         ??_LcLCD 0078                           ??_SMSon 0069  
                       ?_LcGotoXY 0071                         ?_LcLliure 0064  
                         ??_Minit 006A                         ?_LcScroll 0064  
                         ??_Sinit 006A                   JnovaTecla@tecla 0069  
                         ??_Uinit 0069              __size_of_init_eusart 0016  
                       ?_JendGame 0064                    ??_UcheckExists 0069  
                      ??_GLCDInit 006A           __size_of_GLCDMostraMenu 0002  
                      __pbssBANK1 0100   __size_of_escriure2usuarisStruct 002A  
                       ?_TeTeclat 0064                       _TiResetTics 11FC  
                 ?_UgetNumUsuaris 0064                    ?_JnovaDireccio 0064  
                   ?_JoystickInit 0064                           ?_SMSoff 0064  
                         ?_LcInit 0074                     _CantaPartAlta 0E34  
                         ?_SMotor 0064                           ?_TeInit 0064  
                         ?_Espera 0070                 __end_of_UenviaPas 1280  
                     __TiRSITimer 0F8A                     ?_UgetUserName 0069  
          __end_of_escriureEEPROM 112E                           _BAUDCON 000FB8  
                     ?_UenviaChar 0069            __size_of_MsetNovaTecla 0008  
                         LcInit@i 0076                  ?_HActualitzaHora 0069  
                      ??_LcGotoXY 0072                      ?_MNovaLletra 0064  
                      ??_LcLliure 0069                        ??_LcScroll 006C  
             __size_of_TiGetTimer 001E                        ??_JendGame 0069  
                       ?_high_rsi 0064                           _JJuguem 133A  
                         _LcClear 117C                           _CantaIR 1218  
                    ?_LcNewString 006C                    ??_JoystickInit 0069  
                       ?_initHora 0064                        ??_TeTeclat 0070  
                     _WaitForBusy 0FD2                    ?_CantaPartAlta 0064  
           __end_of_SsetNovaTecla 12D4                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00B4                           __Hparam 0000  
                 __size_of_SMotor 01A0               __size_of_JnovaTecla 0002  
                 __size_of_TeInit 0008                   __size_of_Espera 0022  
                         __Lparam 0000                    ??_UgetUserName 006B  
        ?_UcheckExistsNotFinished 0064                   ?_escriureEEPROM 0064  
                    __psmallconst 0200            _escriure2usuarisStruct 10DC  
                         __pcinit 0D66      __end_of_UcheckExistsGetError 1316  
                      _init_ports 11DE                           __ramtop 0200  
                         __ptext0 0E9A                           __ptext1 02F6  
                         __ptext2 129C                           __ptext3 124A  
                         __ptext4 130E                           __ptext5 1270  
                         __ptext6 1280                           __ptext7 12A8  
                         __ptext8 1312                           __ptext9 1316  
                       _T0CONbits 000FD5                         CantaIR@IR 006B  
                         _initSIO 131E                           _counter 002D  
                         _horaTmp 0042                       UenviaChar@c 006A  
                LcNewString@new_s 006C                   WaitForBusy@Busy 0070  
                     Uinit@j_1140 006D                 GLCDMostraMenu@num 0069  
                      ??_high_rsi 0065              end_of_initialization 0DC0  
                         _usuaris 0100                   ??_JnovaDireccio 0069  
                      ??_initHora 006A           __size_of_CantaPartBaixa 005C  
                   __Lmediumconst 0000                   TiGetTics@Handle 006D  
                   _MsetNovaTecla 12D4               __size_of_UenviaChar 0010  
                      _novaLletra 0055                   _usuariActualSIO 0052  
                 TiGetTics@actual 006E                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE          __size_of_checkHoraAcabat 000C  
                      _numUsuaris 0026              __end_of_UcheckExists 131A  
                   TeTeclat@files 002E                     TeTeclat@state 0030  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                  _GLCDMostraMenu 133C                   ??_CantaPartAlta 0069  
                  ?_MsetNovaTecla 0064                         _CantaData 1010  
               __size_of_GLCDInit 0004   __end_of_UcheckExistsNotFinished 12B4  
                  __end_of_SMSoff 1308                      ??_TiGetTimer 0069  
                  __end_of_LcInit 0C4A                    __end_of_SMotor 0A5C  
                       _LcPutChar 0F42                    __end_of_TeInit 12E4  
                  __end_of_Espera 11C0        __end_of_EscriuPrimeraOrdre 0D4E  
                   __pidataCOMRAM 11C0                       ?_init_ports 0064  
                       _NoFerMenu 1332                         _ColumnAct 0036  
            __end_of_JoystickInit 1270                         _URegister 132E  
                    ?_TiInitTimer 0064                      ??_JnovaTecla 0069  
                       _SiFerMenu 1330                       __end_ofPL10 0B96  
                     __end_ofPL20 0CE0                       __end_ofPL12 1218  
                     __end_ofPL30 0D66                       __end_ofPL22 0F42  
                     __end_ofPL14 103E                       __end_ofPL40 1048  
                     __end_ofPL32 0CEA                       __end_ofPL24 08AC  
                     __end_ofPL16 0F36                       __end_ofPL50 08BC  
                     __end_ofPL42 0A6E                       __end_ofPL34 119E  
                     __end_ofPL26 0A64                       __end_ofPL18 0D5C  
                     __end_ofPL44 0E34                       __end_ofPL36 0C54  
                     __end_ofPL28 0FD2                       __end_ofPL46 0F8A  
                     __end_ofPL38 0E9A                       __end_ofPL48 08B4  
             start_initialization 0D66                         _TiGetTics 1156  
          __end_of_GLCDMostraMenu 133E                  ??_UgetNumUsuaris 0069  
               __size_of_LcGotoXY 0034              __end_of_UgetUserName 125E  
              __end_of_TiGetTimer 10CE                     JJuguem@usuari 0069  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
               __size_of_LcScroll 0006                 __size_of_JendGame 0002  
                    ?_TiResetTics 0064                        ?_CantaData 0064  
            _UcheckExistsGetError 1312              __size_of_LcNewString 000C  
                        ??_SMSoff 0069                          ??_LcInit 0075  
                       _NovaTecla 0056                 __size_of_TeTeclat 0116  
                        ??_SMotor 0070                          ??_TeInit 006A  
                    ?__TiRSITimer 0064                     ??_initAltaveu 006A  
                        ??_Espera 0072                __end_of_JnovaTecla 1336  
                      ?_LcPutChar 0064                         _UenviaPas 1270  
                     __pdataBANK0 0080                      ??_UenviaChar 006A  
                      ?_NoFerMenu 0064                        ?_URegister 0064  
               ??_checkHoraAcabat 0069                     ??_init_eusart 0069  
                      ?_SiFerMenu 0064                       __pbssCOMRAM 0001  
                   __pcstackBANK0 008C                        ?_TiGetTics 0069  
                 ?_GLCDMostraMenu 0064                   ??_MsetNovaTecla 0069  
                        ?_JJuguem 0064                          ?_LcClear 0064  
                        ?_CantaIR 0064                    _CantaPartBaixa 0DCE  
        ??_SIOHaAcabatPuntuacions 0069             ?_UcheckExistsGetError 0064  
               __size_of_high_rsi 002A                      ?_WaitForBusy 0064  
             __size_of_init_ports 001E                MsetNovaTecla@tecla 0069  
              SsetNovaTecla@tecla 0069                __end_of_UenviaChar 1290  
               __size_of_initHora 0004                  ??_escriureEEPROM 0069  
           __size_of_UcheckExists 0004           ?_escriure2usuarisStruct 0064  
                       __pintcode 0008                        ?_UenviaPas 0069  
                 CantaPartBaixa@c 006A               __end_of_initAltaveu 132A  
                       _arrayZero 004F                          ?_initSIO 0064  
                     __smallconst 0200                    __size_of_LcLCD 0036  
                  __size_of_SMSon 0006  __size_of_UcheckExistsNotFinished 000C  
                  __size_of_Minit 0008                    __size_of_Sinit 0008  
                  __size_of_Uinit 006C            __end_of_CantaPartBaixa 0E2A  
                        _GLCDInit 132A                escriureEEPROM@caca 0069  
             __end_of_init_eusart 124A                      _UcheckExists 1316  
        __size_of_HActualitzaHora 0034                       ??_CantaData 006B  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                     UenviaChar@pos 0069  
  __end_of_escriure2usuarisStruct 1106                         _novaTecla 0059  
                     ??_LcPutChar 0077                          _RCONbits 000FD0  
           __size_of_JoystickInit 0012                         _timerMenu 002B  
                     ??_NoFerMenu 0069                       ??_URegister 0069  
                     ??_SiFerMenu 0069             __size_of_UgetUserName 0014  
          __size_of_SsetNovaTecla 0008                          Espera@ms 0070  
                       _zeroTecla 0033                          _LcGotoXY 107C  
                  _usuariLoguejat 0053                          _LcLliure 12C0  
                     ??_TiGetTics 006B              __size_of_TiInitTimer 0028  
                        _LcScroll 1308                      _teclaPremuda 0080  
                        _JendGame 1338                       LcGotoXY@Row 0071  
                       copy_data0 0D7A                         copy_data1 0D9A  
                 ?_CantaPartBaixa 0064            ??_UcheckExistsGetError 0069  
                __size_of_JJuguem 0002                  __size_of_LcClear 0018  
                __size_of_CantaIR 001C                          _TeTeclat 0A6E  
           __end_of_JnovaDireccio 1338   __size_of_SIOHaAcabatPuntuacions 0004  
                    _JoystickInit 125E                        _EECON1bits 000FA6  
                     _indexUsuari 0029              __size_of_TiResetTics 0010  
                        __Hrparam 0000                       _initAltaveu 1326  
                       menu@state 0027                          __Lrparam 0000  
            __size_of__TiRSITimer 003E                      _UgetUserName 124A  
                     ??_UenviaPas 006A                      _novaDireccio 0054  
                    ??_init_ports 0069               HActualitzaHora@nova 0069  
                     _init_eusart 1234                  __size_of_initSIO 0004  
                 _do_check_exists 03C1                          __ptext10 132E  
                        __ptext11 1330                _EscriuPrimeraOrdre 0CEA  
                        __ptext20 1334                          __ptext12 12FC  
                        __ptext21 1336                          __ptext13 1302  
                        __ptext30 1326                          __ptext22 1338  
                        __ptext14 131A                          __ptext31 1106  
                        __ptext23 133A                          __ptext15 1332  
                        __ptext40 08BC                          __ptext32 10DC  
                        __ptext24 1048                          __ptext16 1308  
                        __ptext41 12EC                          __ptext33 0C54  
                        __ptext25 133C                          __ptext17 12B4  
                        __ptext50 11FC                          __ptext42 12F4  
                        __ptext34 112E                          __ptext26 11DE  
                        __ptext18 12C0                          __ptext51 1156  
                        __ptext43 0EF2                          __ptext35 0A6E  
                        __ptext27 1234                          __ptext19 117C  
                        __ptext60 0F8A                          __ptext52 0CEA  
                        __ptext44 0F42                          __ptext36 12CC  
                        __ptext28 131E                          __ptext53 1218  
                        __ptext45 107C                          __ptext37 12D4  
                        __ptext29 1322                          __ptext54 0DCE  
                        __ptext46 1010                          __ptext38 12DC  
                        __ptext55 0E34                          __ptext47 0B96  
                        __ptext39 12E4                          __ptext56 125E  
                        __ptext48 0FD2                          __ptext57 132A  
                        __ptext49 119E                          __ptext58 10B0  
                  CantaPartAlta@c 006A                       _lletraASCII 005A  
                        _high_rsi 0008                          _s_Timers 0001  
                        _initHora 1322                       _lletraInici 0046  
                        _menuDalt 002A                          _menuList 0201  
             ?_EscriuPrimeraOrdre 0064                     __size_of_main 0058  
                   __size_of_menu 059A             __end_of_CantaPartAlta 0E90  
                   CantaData@Data 006B                          _tiTeclat 0031  
              __end_of_init_ports 11FC                          _setSMSon 03C3  
                   _SsetNovaTecla 12CC              __size_of_WaitForBusy 003E  
               ??_HActualitzaHora 006A                   _checkHoraAcabat 129C  
                        _timerSMS 0058                          isa$xinst 000000  
                        int$flags 0079                      UenviaPas@pos 0069  
          _SIOHaAcabatPuntuacions 131A              ??_EscriuPrimeraOrdre 0069  
                      LcInit@rows 0075                  ??_GLCDMostraMenu 0069  
         _UcheckExistsNotFinished 12A8                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0069                     ??_LcNewString 006E  
                        intlevel2 0000                        LcPutChar@c 0077  
                  ?_SsetNovaTecla 0064                 MNovaLletra@lletra 0069  
                     _tempsAcabat 03C0                       _tmpPassword 0019  
             __end_of_MNovaLletra 12F4             __end_of_MsetNovaTecla 12DC  
         __end_of_checkHoraAcabat 12A8                       _tmpUsername 0039  
                     SMotor@state 0032           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 12C0  
