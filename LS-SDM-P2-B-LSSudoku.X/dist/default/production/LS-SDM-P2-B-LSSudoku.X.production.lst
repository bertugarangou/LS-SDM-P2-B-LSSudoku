

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 07 13:55:00 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	text80,global,reloc=2,class=CODE,delta=1
    95                           	psect	text81,global,reloc=2,class=CODE,delta=1
    96                           	psect	text82,global,reloc=2,class=CODE,delta=1
    97                           	psect	text83,global,reloc=2,class=CODE,delta=1
    98                           	psect	text84,global,reloc=2,class=CODE,delta=1
    99                           	psect	text85,global,reloc=2,class=CODE,delta=1
   100                           	psect	text86,global,reloc=2,class=CODE,delta=1
   101                           	psect	text87,global,reloc=2,class=CODE,delta=1
   102                           	psect	text88,global,reloc=2,class=CODE,delta=1
   103                           	psect	text89,global,reloc=2,class=CODE,delta=1
   104                           	psect	text90,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	text92,global,reloc=2,class=CODE,delta=1
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   110                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   112                           	psect	pa_nodes0,global,class=CODE,delta=1
   113  0000                     
   114                           ; Version 2.32
   115                           ; Generated 02/02/2021 GMT
   116                           ; 
   117                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution. Publication is not required when
   131                           ;        this file is used in an embedded application.
   132                           ; 
   133                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   134                           ;        software without specific prior written permission.
   135                           ; 
   136                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   137                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   138                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   139                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   140                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   141                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   142                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   143                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   144                           ; 
   145                           ; 
   146                           ; Code-generator required, PIC18F4321 Definitions
   147                           ; 
   148                           ; SFR Addresses
   149  0000                     
   150                           	psect	idataCOMRAM
   151  001B0E                     __pidataCOMRAM:
   152                           	callstack 0
   153                           
   154                           ;initializer for _convertir
   155  001B0E  FA                 	db	250
   156                           
   157                           ;initializer for _novaTeclaSIO
   158  001B0F  FF                 	db	255
   159                           
   160                           ;initializer for _direccioSIO
   161  001B10  FF                 	db	255
   162                           
   163                           ;initializer for _usuariActualSIO
   164  001B11  FF                 	db	255
   165                           
   166                           ;initializer for _novaTeclaJOC
   167  001B12  FF                 	db	255
   168                           
   169                           ;initializer for _usuariJoc
   170  001B13  FF                 	db	255
   171                           
   172                           ;initializer for GLCDMotor@max2
   173  001B14  0F                 	db	15
   174                           
   175                           ;initializer for GLCDMotor@max1
   176  001B15  0F                 	db	15
   177                           
   178                           ;initializer for _usuariLoguejat
   179  001B16  FF                 	db	255
   180                           
   181                           ;initializer for _novaDireccio
   182  001B17  FF                 	db	255
   183                           
   184                           ;initializer for _novaLletra
   185  001B18  FF                 	db	255
   186                           
   187                           ;initializer for _NovaTecla
   188  001B19  FF                 	db	255
   189                           
   190                           ;initializer for _ultimaTecla
   191  001B1A  FF                 	db	255
   192                           
   193                           ;initializer for _novaTecla
   194  001B1B  FF                 	db	255
   195                           
   196                           ;initializer for _lletraASCII
   197  001B1C  FF                 	db	255
   198                           
   199                           ;initializer for _hora
   200  001B1D  33                 	db	51
   201  001B1E  30                 	db	48
   202  001B1F  3A                 	db	58
   203  001B20  30                 	db	48
   204  001B21  30                 	db	48
   205  001B22  00                 	db	0
   206                           
   207                           ;initializer for _stringScore
   208  001B23  30                 	db	48
   209  001B24  30                 	db	48
   210  001B25  00                 	db	0
   211                           
   212                           	psect	mediumconst
   213  001EF4                     __pmediumconst:
   214                           	callstack 0
   215  001EF4  00                 	db	0
   216  001EF5                     _lletraInici:
   217                           	callstack 0
   218  001EF5  41                 	db	65
   219  001EF6  44                 	db	68
   220  001EF7  47                 	db	71
   221  001EF8  4A                 	db	74
   222  001EF9  4D                 	db	77
   223  001EFA  50                 	db	80
   224  001EFB  54                 	db	84
   225  001EFC  57                 	db	87
   226  001EFD                     __end_of_lletraInici:
   227                           	callstack 0
   228  001EFD                     _arrayZero:
   229                           	callstack 0
   230  001EFD  30                 	db	48
   231  001EFE  20                 	db	32
   232  001EFF                     __end_of_arrayZero:
   233                           	callstack 0
   234  001EFF                     _menuList:
   235                           	callstack 0
   236  001EFF  31                 	db	49
   237  001F00  2E                 	db	46
   238  001F01  50                 	db	80
   239  001F02  6C                 	db	108
   240  001F03  61                 	db	97
   241  001F04  79                 	db	121
   242  001F05  20                 	db	32
   243  001F06  61                 	db	97
   244  001F07  20                 	db	32
   245  001F08  47                 	db	71
   246  001F09  61                 	db	97
   247  001F0A  6D                 	db	109
   248  001F0B  65                 	db	101
   249  001F0C  00                 	db	0
   250  001F0D  00                 	db	0
   251  001F0E  00                 	db	0
   252  001F0F  00                 	db	0
   253  001F10  00                 	db	0
   254  001F11  00                 	db	0
   255  001F12  00                 	db	0
   256  001F13  00                 	db	0
   257  001F14  00                 	db	0
   258  001F15  00                 	db	0
   259  001F16  00                 	db	0
   260  001F17  00                 	db	0
   261  001F18  00                 	db	0
   262  001F19  00                 	db	0
   263  001F1A  00                 	db	0
   264  001F1B  00                 	db	0
   265  001F1C  32                 	db	50
   266  001F1D  2E                 	db	46
   267  001F1E  4D                 	db	77
   268  001F1F  6F                 	db	111
   269  001F20  64                 	db	100
   270  001F21  69                 	db	105
   271  001F22  66                 	db	102
   272  001F23  79                 	db	121
   273  001F24  20                 	db	32
   274  001F25  54                 	db	84
   275  001F26  69                 	db	105
   276  001F27  6D                 	db	109
   277  001F28  65                 	db	101
   278  001F29  00                 	db	0
   279  001F2A  00                 	db	0
   280  001F2B  00                 	db	0
   281  001F2C  00                 	db	0
   282  001F2D  00                 	db	0
   283  001F2E  00                 	db	0
   284  001F2F  00                 	db	0
   285  001F30  00                 	db	0
   286  001F31  00                 	db	0
   287  001F32  00                 	db	0
   288  001F33  00                 	db	0
   289  001F34  00                 	db	0
   290  001F35  00                 	db	0
   291  001F36  00                 	db	0
   292  001F37  00                 	db	0
   293  001F38  00                 	db	0
   294  001F39  33                 	db	51
   295  001F3A  2E                 	db	46
   296  001F3B  53                 	db	83
   297  001F3C  68                 	db	104
   298  001F3D  6F                 	db	111
   299  001F3E  77                 	db	119
   300  001F3F  20                 	db	32
   301  001F40  47                 	db	71
   302  001F41  65                 	db	101
   303  001F42  6E                 	db	110
   304  001F43  65                 	db	101
   305  001F44  72                 	db	114
   306  001F45  61                 	db	97
   307  001F46  6C                 	db	108
   308  001F47  20                 	db	32
   309  001F48  54                 	db	84
   310  001F49  6F                 	db	111
   311  001F4A  70                 	db	112
   312  001F4B  20                 	db	32
   313  001F4C  35                 	db	53
   314  001F4D  20                 	db	32
   315  001F4E  53                 	db	83
   316  001F4F  63                 	db	99
   317  001F50  6F                 	db	111
   318  001F51  72                 	db	114
   319  001F52  65                 	db	101
   320  001F53  73                 	db	115
   321  001F54  20                 	db	32
   322  001F55  00                 	db	0
   323  001F56  34                 	db	52
   324  001F57  2E                 	db	46
   325  001F58  4C                 	db	76
   326  001F59  6F                 	db	111
   327  001F5A  67                 	db	103
   328  001F5B  6F                 	db	111
   329  001F5C  75                 	db	117
   330  001F5D  74                 	db	116
   331  001F5E  00                 	db	0
   332  001F5F  00                 	db	0
   333  001F60  00                 	db	0
   334  001F61  00                 	db	0
   335  001F62  00                 	db	0
   336  001F63  00                 	db	0
   337  001F64  00                 	db	0
   338  001F65  00                 	db	0
   339  001F66  00                 	db	0
   340  001F67  00                 	db	0
   341  001F68  00                 	db	0
   342  001F69  00                 	db	0
   343  001F6A  00                 	db	0
   344  001F6B  00                 	db	0
   345  001F6C  00                 	db	0
   346  001F6D  00                 	db	0
   347  001F6E  00                 	db	0
   348  001F6F  00                 	db	0
   349  001F70  00                 	db	0
   350  001F71  00                 	db	0
   351  001F72  00                 	db	0
   352  001F73  35                 	db	53
   353  001F74  2E                 	db	46
   354  001F75  53                 	db	83
   355  001F76  68                 	db	104
   356  001F77  6F                 	db	111
   357  001F78  77                 	db	119
   358  001F79  20                 	db	32
   359  001F7A  41                 	db	65
   360  001F7B  6C                 	db	108
   361  001F7C  6C                 	db	108
   362  001F7D  20                 	db	32
   363  001F7E  55                 	db	85
   364  001F7F  73                 	db	115
   365  001F80  65                 	db	101
   366  001F81  72                 	db	114
   367  001F82  73                 	db	115
   368  001F83  00                 	db	0
   369  001F84  00                 	db	0
   370  001F85  00                 	db	0
   371  001F86  00                 	db	0
   372  001F87  00                 	db	0
   373  001F88  00                 	db	0
   374  001F89  00                 	db	0
   375  001F8A  00                 	db	0
   376  001F8B  00                 	db	0
   377  001F8C  00                 	db	0
   378  001F8D  00                 	db	0
   379  001F8E  00                 	db	0
   380  001F8F  00                 	db	0
   381  001F90                     __end_of_menuList:
   382                           	callstack 0
   383  001F90                     _teclaPremuda:
   384                           	callstack 0
   385  001F90  01                 	db	1
   386  001F91  02                 	db	2
   387  001F92  03                 	db	3
   388  001F93  04                 	db	4
   389  001F94  05                 	db	5
   390  001F95  06                 	db	6
   391  001F96  07                 	db	7
   392  001F97  08                 	db	8
   393  001F98  09                 	db	9
   394  001F99  0A                 	db	10
   395  001F9A  00                 	db	0
   396  001F9B  0B                 	db	11
   397  001F9C                     __end_of_teclaPremuda:
   398                           	callstack 0
   399  001F9C                     _registerText:
   400                           	callstack 0
   401  001F9C  32                 	db	50
   402  001F9D  2E                 	db	46
   403  001F9E  52                 	db	82
   404  001F9F  45                 	db	69
   405  001FA0  47                 	db	71
   406  001FA1  49                 	db	73
   407  001FA2  53                 	db	83
   408  001FA3  54                 	db	84
   409  001FA4  45                 	db	69
   410  001FA5  52                 	db	82
   411  001FA6  00                 	db	0
   412  001FA7                     __end_of_registerText:
   413                           	callstack 0
   414  001FA7                     _loginText:
   415                           	callstack 0
   416  001FA7  31                 	db	49
   417  001FA8  2E                 	db	46
   418  001FA9  4C                 	db	76
   419  001FAA  4F                 	db	79
   420  001FAB  47                 	db	71
   421  001FAC  49                 	db	73
   422  001FAD  4E                 	db	78
   423  001FAE  00                 	db	0
   424  001FAF                     __end_of_loginText:
   425                           	callstack 0
   426  0000                     _PIR1bits	set	3998
   427  0000                     _RCREG	set	4014
   428  0000                     _TXREG	set	4013
   429  0000                     _TXSTAbits	set	4012
   430  0000                     _ADCON0bits	set	4034
   431  0000                     _ADRESH	set	4036
   432  0000                     _ADCON2	set	4032
   433  0000                     _ADCON1	set	4033
   434  0000                     _ADCON0	set	4034
   435  0000                     _EECON2	set	4007
   436  0000                     _EEDATA	set	4008
   437  0000                     _EEADR	set	4009
   438  0000                     _T0CONbits	set	4053
   439  0000                     _TMR0L	set	4054
   440  0000                     _TMR0H	set	4055
   441  0000                     _T0CON	set	4053
   442  0000                     _INTCONbits	set	4082
   443  0000                     _RCONbits	set	4048
   444  0000                     _PORTDbits	set	3971
   445  0000                     _SPBRG	set	4015
   446  0000                     _SPBRGH	set	4016
   447  0000                     _BAUDCON	set	4024
   448  0000                     _RCSTA	set	4011
   449  0000                     _TXSTA	set	4012
   450  0000                     _EECON1bits	set	4006
   451  0000                     _LATD	set	3980
   452  0000                     _TRISD	set	3989
   453  0000                     _TRISC	set	3988
   454  0000                     _LATBbits	set	3978
   455  0000                     _TRISB	set	3987
   456  0000                     _TRISA	set	3986
   457  0000                     _PORTCbits	set	3970
   458  0000                     _LATDbits	set	3980
   459  0000                     _LATCbits	set	3979
   460  0000                     _TRISDbits	set	3989
   461  0000                     _TRISCbits	set	3988
   462  001FAF                     STR_5:
   463  001FAF  54                 	db	84	;'T'
   464  001FB0  49                 	db	73	;'I'
   465  001FB1  4D                 	db	77	;'M'
   466  001FB2  45                 	db	69	;'E'
   467  001FB3  20                 	db	32
   468  001FB4  52                 	db	82	;'R'
   469  001FB5  45                 	db	69	;'E'
   470  001FB6  4D                 	db	77	;'M'
   471  001FB7  41                 	db	65	;'A'
   472  001FB8  49                 	db	73	;'I'
   473  001FB9  4E                 	db	78	;'N'
   474  001FBA  49                 	db	73	;'I'
   475  001FBB  4E                 	db	78	;'N'
   476  001FBC  47                 	db	71	;'G'
   477  001FBD  3A                 	db	58	;':'
   478  001FBE  00                 	db	0
   479  001FBF                     STR_4:
   480  001FBF  4D                 	db	77	;'M'
   481  001FC0  6F                 	db	111	;'o'
   482  001FC1  64                 	db	100	;'d'
   483  001FC2  69                 	db	105	;'i'
   484  001FC3  66                 	db	102	;'f'
   485  001FC4  79                 	db	121	;'y'
   486  001FC5  20                 	db	32
   487  001FC6  54                 	db	84	;'T'
   488  001FC7  69                 	db	105	;'i'
   489  001FC8  6D                 	db	109	;'m'
   490  001FC9  65                 	db	101	;'e'
   491  001FCA  3A                 	db	58	;':'
   492  001FCB  00                 	db	0
   493  001FCC                     STR_7:
   494  001FCC  54                 	db	84	;'T'
   495  001FCD  49                 	db	73	;'I'
   496  001FCE  4D                 	db	77	;'M'
   497  001FCF  45                 	db	69	;'E'
   498  001FD0  20                 	db	32
   499  001FD1  4C                 	db	76	;'L'
   500  001FD2  45                 	db	69	;'E'
   501  001FD3  46                 	db	70	;'F'
   502  001FD4  54                 	db	84	;'T'
   503  001FD5  3A                 	db	58	;':'
   504  001FD6  20                 	db	32
   505  001FD7  00                 	db	0
   506  001FD8                     STR_3:
   507  001FD8  42                 	db	66	;'B'
   508  001FD9  59                 	db	89	;'Y'
   509  001FDA  45                 	db	69	;'E'
   510  001FDB  20                 	db	32
   511  001FDC  42                 	db	66	;'B'
   512  001FDD  59                 	db	89	;'Y'
   513  001FDE  45                 	db	69	;'E'
   514  001FDF  20                 	db	32
   515  001FE0  00                 	db	0
   516  001FE1                     STR_8:
   517  001FE1  53                 	db	83	;'S'
   518  001FE2  43                 	db	67	;'C'
   519  001FE3  4F                 	db	79	;'O'
   520  001FE4  52                 	db	82	;'R'
   521  001FE5  45                 	db	69	;'E'
   522  001FE6  3A                 	db	58	;':'
   523  001FE7  20                 	db	32
   524  001FE8  00                 	db	0
   525  001FE9                     STR_6:
   526  001FE9  45                 	db	69	;'E'
   527  001FEA  52                 	db	82	;'R'
   528  001FEB  52                 	db	82	;'R'
   529  001FEC  4F                 	db	79	;'O'
   530  001FED  52                 	db	82	;'R'
   531  001FEE  53                 	db	83	;'S'
   532  001FEF  3A                 	db	58	;':'
   533  001FF0  00                 	db	0
   534  001FF1                     STR_2:
   535  001FF1  50                 	db	80	;'P'
   536  001FF2  53                 	db	83	;'S'
   537  001FF3  57                 	db	87	;'W'
   538  001FF4  44                 	db	68	;'D'
   539  001FF5  3A                 	db	58	;':'
   540  001FF6  20                 	db	32
   541  001FF7  00                 	db	0
   542  001FF8                     STR_1:
   543  001FF8  55                 	db	85	;'U'
   544  001FF9  53                 	db	83	;'S'
   545  001FFA  45                 	db	69	;'E'
   546  001FFB  52                 	db	82	;'R'
   547  001FFC  3A                 	db	58	;':'
   548  001FFD  20                 	db	32
   549  001FFE  00                 	db	0
   550  001FFF  00                 	db	0	; dummy byte at the end
   551  0000                     
   552                           ; #config settings
   553                           
   554                           	psect	cinit
   555  0016E4                     __pcinit:
   556                           	callstack 0
   557  0016E4                     start_initialization:
   558                           	callstack 0
   559  0016E4                     __initialization:
   560                           	callstack 0
   561                           
   562                           ; Initialize objects allocated to COMRAM (24 bytes)
   563                           ; load TBLPTR registers with __pidataCOMRAM
   564  0016E4  0E0E               	movlw	low __pidataCOMRAM
   565  0016E6  6EF6               	movwf	tblptrl,c
   566  0016E8  0E1B               	movlw	high __pidataCOMRAM
   567  0016EA  6EF7               	movwf	tblptrh,c
   568  0016EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   569  0016EE  6EF8               	movwf	tblptru,c
   570  0016F0  EE00  F05E         	lfsr	0,__pdataCOMRAM
   571  0016F4  EE10 F018          	lfsr	1,24
   572  0016F8                     copy_data0:
   573  0016F8  0009               	tblrd		*+
   574  0016FA  CFF5 FFEE          	movff	tablat,postinc0
   575  0016FE  50E5               	movf	postdec1,w,c
   576  001700  50E1               	movf	fsr1l,w,c
   577  001702  E1FA               	bnz	copy_data0
   578                           
   579                           ; Clear objects allocated to BANK1 (184 bytes)
   580  001704  EE01  F000         	lfsr	0,__pbssBANK1
   581  001708  0EB8               	movlw	184
   582  00170A                     clear_0:
   583  00170A  6AEE               	clrf	postinc0,c
   584  00170C  06E8               	decf	wreg,f,c
   585  00170E  E1FD               	bnz	clear_0
   586                           
   587                           ; Clear objects allocated to BANK0 (52 bytes)
   588  001710  EE00  F080         	lfsr	0,__pbssBANK0
   589  001714  0E34               	movlw	52
   590  001716                     clear_1:
   591  001716  6AEE               	clrf	postinc0,c
   592  001718  06E8               	decf	wreg,f,c
   593  00171A  E1FD               	bnz	clear_1
   594                           
   595                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   596  00171C  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   597  00171E  6A77               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   598  001720  6A76               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   599                           
   600                           ; Clear objects allocated to COMRAM (68 bytes)
   601  001722  EE00  F001         	lfsr	0,__pbssCOMRAM
   602  001726  0E44               	movlw	68
   603  001728                     clear_2:
   604  001728  6AEE               	clrf	postinc0,c
   605  00172A  06E8               	decf	wreg,f,c
   606  00172C  E1FD               	bnz	clear_2
   607  00172E                     end_of_initialization:
   608                           	callstack 0
   609  00172E                     __end_of__initialization:
   610                           	callstack 0
   611  00172E  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   612  001730  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   613  001732  0E00               	movlw	low (__Lmediumconst shr (0+16))
   614  001734  6EF8               	movwf	tblptru,c
   615  001736  0100               	movlb	0
   616  001738  EFD4  F00A         	goto	_main	;jump to C main() function
   617                           
   618                           	psect	bitbssCOMRAM
   619  0003B0                     __pbitbssCOMRAM:
   620                           	callstack 0
   621  0003B0                     _Krebut:
   622                           	callstack 0
   623  0003B0                     	ds	1
   624  0003B1                     _jugantSIO:
   625                           	callstack 0
   626  0003B1                     	ds	1
   627  0003B2                     _jugantJoc:
   628                           	callstack 0
   629  0003B2                     	ds	1
   630  0003B3                     _tempsAcabat:
   631                           	callstack 0
   632  0003B3                     	ds	1
   633  0003B4                     _nouSegon:
   634                           	callstack 0
   635  0003B4                     	ds	1
   636  0003B5                     _jugant:
   637                           	callstack 0
   638  0003B5                     	ds	1
   639  0003B6                     _cap2:
   640                           	callstack 0
   641  0003B6                     	ds	1
   642  0003B7                     _cap1:
   643                           	callstack 0
   644  0003B7                     	ds	1
   645  0003B8                     _newString:
   646                           	callstack 0
   647  0003B8                     	ds	1
   648  0003B9                     _ferMenu:
   649                           	callstack 0
   650  0003B9                     	ds	1
   651  0003BA                     _reproduir:
   652                           	callstack 0
   653  0003BA                     	ds	1
   654  0003BB                     _do_updateScore:
   655                           	callstack 0
   656  0003BB                     	ds	1
   657  0003BC                     _do_showUsers:
   658                           	callstack 0
   659  0003BC                     	ds	1
   660  0003BD                     _do_register:
   661                           	callstack 0
   662  0003BD                     	ds	1
   663  0003BE                     _do_check_exists:
   664                           	callstack 0
   665  0003BE                     	ds	1
   666  0003BF                     _loginNOTRegister:
   667                           	callstack 0
   668  0003BF                     	ds	1
   669  0003C0                     _setSMSon:
   670                           	callstack 0
   671  0003C0                     	ds	1
   672  0003C1                     _nou_s:
   673                           	callstack 0
   674  0003C1                     	ds	1
   675                           
   676                           	psect	bssCOMRAM
   677  000001                     __pbssCOMRAM:
   678                           	callstack 0
   679  000001                     _arrayShowUsers:
   680                           	callstack 0
   681  000001                     	ds	8
   682  000009                     _userPtr:
   683                           	callstack 0
   684  000009                     	ds	2
   685  00000B                     _h_Tics:
   686                           	callstack 0
   687  00000B                     	ds	2
   688  00000D                     _s_ptr:
   689                           	callstack 0
   690  00000D                     	ds	2
   691  00000F                     motorSIO@state:
   692                           	callstack 0
   693  00000F                     	ds	1
   694  000010                     _score:
   695                           	callstack 0
   696  000010                     	ds	1
   697  000011                     _timerSIO:
   698                           	callstack 0
   699  000011                     	ds	1
   700  000012                     motorJoc@state:
   701                           	callstack 0
   702  000012                     	ds	1
   703  000013                     _direccioJoc:
   704                           	callstack 0
   705  000013                     	ds	1
   706  000014                     motorHora@state:
   707                           	callstack 0
   708  000014                     	ds	1
   709  000015                     _segons:
   710                           	callstack 0
   711  000015                     	ds	1
   712  000016                     _timerHora:
   713                           	callstack 0
   714  000016                     	ds	1
   715  000017                     JoystickMotor@state:
   716                           	callstack 0
   717  000017                     	ds	1
   718  000018                     _ultimaTeclaAD:
   719                           	callstack 0
   720  000018                     	ds	1
   721  000019                     GLCDMotor@length2:
   722                           	callstack 0
   723  000019                     	ds	1
   724  00001A                     GLCDMotor@length1:
   725                           	callstack 0
   726  00001A                     	ds	1
   727  00001B                     GLCDMotor@k2:
   728                           	callstack 0
   729  00001B                     	ds	1
   730  00001C                     GLCDMotor@k1:
   731                           	callstack 0
   732  00001C                     	ds	1
   733  00001D                     GLCDMotor@min2:
   734                           	callstack 0
   735  00001D                     	ds	1
   736  00001E                     GLCDMotor@min1:
   737                           	callstack 0
   738  00001E                     	ds	1
   739  00001F                     GLCDMotor@j:
   740                           	callstack 0
   741  00001F                     	ds	1
   742  000020                     GLCDMotor@state:
   743                           	callstack 0
   744  000020                     	ds	1
   745  000021                     _menuDaltGLCD:
   746                           	callstack 0
   747  000021                     	ds	1
   748  000022                     _timerGLCD:
   749                           	callstack 0
   750  000022                     	ds	1
   751  000023                     motorAltaveu@state:
   752                           	callstack 0
   753  000023                     	ds	1
   754  000024                     _copsNota:
   755                           	callstack 0
   756  000024                     	ds	1
   757  000025                     _timerAltaveu:
   758                           	callstack 0
   759  000025                     	ds	1
   760  000026                     _nota:
   761                           	callstack 0
   762  000026                     	ds	1
   763  000027                     UmotorUsers@state:
   764                           	callstack 0
   765  000027                     	ds	1
   766  000028                     _scoreUsr:
   767                           	callstack 0
   768  000028                     	ds	1
   769  000029                     _j:
   770                           	callstack 0
   771  000029                     	ds	1
   772  00002A                     _i:
   773                           	callstack 0
   774  00002A                     	ds	1
   775  00002B                     _indexNextUserStruct:
   776                           	callstack 0
   777  00002B                     	ds	1
   778  00002C                     _indexNextUser:
   779                           	callstack 0
   780  00002C                     	ds	1
   781  00002D                     _numUsuaris:
   782                           	callstack 0
   783  00002D                     	ds	1
   784  00002E                     menu@state:
   785                           	callstack 0
   786  00002E                     	ds	1
   787  00002F                     _pos:
   788                           	callstack 0
   789  00002F                     	ds	1
   790  000030                     _indexUsuari:
   791                           	callstack 0
   792  000030                     	ds	1
   793  000031                     _menuDalt:
   794                           	callstack 0
   795  000031                     	ds	1
   796  000032                     _timerMenu:
   797                           	callstack 0
   798  000032                     	ds	1
   799  000033                     _tmp:
   800                           	callstack 0
   801  000033                     	ds	1
   802  000034                     _counter:
   803                           	callstack 0
   804  000034                     	ds	1
   805  000035                     TeTeclat@files:
   806                           	callstack 0
   807  000035                     	ds	1
   808  000036                     TeTeclat@cols:
   809                           	callstack 0
   810  000036                     	ds	1
   811  000037                     TeTeclat@state:
   812                           	callstack 0
   813  000037                     	ds	1
   814  000038                     _tiTeclat:
   815                           	callstack 0
   816  000038                     	ds	1
   817  000039                     SMotor@state:
   818                           	callstack 0
   819  000039                     	ds	1
   820  00003A                     _zeroTecla:
   821                           	callstack 0
   822  00003A                     	ds	1
   823  00003B                     _timerSMS:
   824                           	callstack 0
   825  00003B                     	ds	1
   826  00003C                     _sumaPulsacions:
   827                           	callstack 0
   828  00003C                     	ds	1
   829  00003D                     _Timer:
   830                           	callstack 0
   831  00003D                     	ds	1
   832  00003E                     _ColumnAct:
   833                           	callstack 0
   834  00003E                     	ds	1
   835  00003F                     _RowAct:
   836                           	callstack 0
   837  00003F                     	ds	1
   838  000040                     _Rows:
   839                           	callstack 0
   840  000040                     	ds	1
   841  000041                     _horaTmp:
   842                           	callstack 0
   843  000041                     	ds	4
   844                           
   845                           	psect	dataCOMRAM
   846  00005E                     __pdataCOMRAM:
   847                           	callstack 0
   848  00005E                     _convertir:
   849                           	callstack 0
   850  00005E                     	ds	1
   851  00005F                     _novaTeclaSIO:
   852                           	callstack 0
   853  00005F                     	ds	1
   854  000060                     _direccioSIO:
   855                           	callstack 0
   856  000060                     	ds	1
   857  000061                     _usuariActualSIO:
   858                           	callstack 0
   859  000061                     	ds	1
   860  000062                     _novaTeclaJOC:
   861                           	callstack 0
   862  000062                     	ds	1
   863  000063                     _usuariJoc:
   864                           	callstack 0
   865  000063                     	ds	1
   866  000064                     GLCDMotor@max2:
   867                           	callstack 0
   868  000064                     	ds	1
   869  000065                     GLCDMotor@max1:
   870                           	callstack 0
   871  000065                     	ds	1
   872  000066                     _usuariLoguejat:
   873                           	callstack 0
   874  000066                     	ds	1
   875  000067                     _novaDireccio:
   876                           	callstack 0
   877  000067                     	ds	1
   878  000068                     _novaLletra:
   879                           	callstack 0
   880  000068                     	ds	1
   881  000069                     _NovaTecla:
   882                           	callstack 0
   883  000069                     	ds	1
   884  00006A                     _ultimaTecla:
   885                           	callstack 0
   886  00006A                     	ds	1
   887  00006B                     _novaTecla:
   888                           	callstack 0
   889  00006B                     	ds	1
   890  00006C                     _lletraASCII:
   891                           	callstack 0
   892  00006C                     	ds	1
   893  00006D                     _hora:
   894                           	callstack 0
   895  00006D                     	ds	6
   896  000073                     _stringScore:
   897                           	callstack 0
   898  000073                     	ds	3
   899                           
   900                           	psect	bssBANK0
   901  000080                     __pbssBANK0:
   902                           	callstack 0
   903  000080                     _s_Timers:
   904                           	callstack 0
   905  000080                     	ds	24
   906  000098                     _puntuacions:
   907                           	callstack 0
   908  000098                     	ds	10
   909  0000A2                     _tmpPassword:
   910                           	callstack 0
   911  0000A2                     	ds	9
   912  0000AB                     _tmpUsername:
   913                           	callstack 0
   914  0000AB                     	ds	9
   915                           
   916                           	psect	bssBANK1
   917  000100                     __pbssBANK1:
   918                           	callstack 0
   919  000100                     _usuaris:
   920                           	callstack 0
   921  000100                     	ds	184
   922                           
   923                           	psect	cstackCOMRAM
   924  000045                     __pcstackCOMRAM:
   925                           	callstack 0
   926  000045                     
   927                           ; 1 bytes @ 0x0
   928  000045                     	ds	1
   929  000046                     ??_high_rsi:
   930                           
   931                           ; 1 bytes @ 0x1
   932  000046                     	ds	4
   933  00004A                     ??_EscriuPrimeraOrdre:
   934  00004A                     ??_CantaPartAlta:
   935  00004A                     ??_CantaPartBaixa:
   936  00004A                     ?_TiGetTics:
   937                           	callstack 0
   938  00004A                     ?_UgetUserName:
   939                           	callstack 0
   940  00004A                     ?_getArrayShowUsers:
   941                           	callstack 0
   942  00004A                     SsetNovaTecla@tecla:
   943                           	callstack 0
   944  00004A                     TiResetTics@Handle:
   945                           	callstack 0
   946  00004A                     MsetNovaTecla@tecla:
   947                           	callstack 0
   948  00004A                     MNovaLletra@lletra:
   949                           	callstack 0
   950  00004A                     MNouJoystick@posicio:
   951                           	callstack 0
   952  00004A                     UenviaChar@pos:
   953                           	callstack 0
   954  00004A                     UenviaPas@pos:
   955                           	callstack 0
   956  00004A                     escriureCharEEPROM@pos:
   957                           	callstack 0
   958  00004A                     llegirCharEEPROM@pos:
   959                           	callstack 0
   960  00004A                     compareStrings@a:
   961                           	callstack 0
   962  00004A                     UgetScore@quin:
   963                           	callstack 0
   964  00004A                     UgetTop5@quin:
   965                           	callstack 0
   966  00004A                     UnewScore@scoretmp:
   967                           	callstack 0
   968  00004A                     GLCDMostraMenu@num:
   969                           	callstack 0
   970  00004A                     HActualitzaHora@nova:
   971                           	callstack 0
   972  00004A                     JJuguem@usuari:
   973                           	callstack 0
   974  00004A                     JnovaTecla@tecla:
   975                           	callstack 0
   976  00004A                     JnovaDireccio@dir:
   977                           	callstack 0
   978  00004A                     conversorJoystick@direc:
   979                           	callstack 0
   980  00004A                     SIONovaDireccio@num:
   981                           	callstack 0
   982  00004A                     SIOStartGame@usuari:
   983                           	callstack 0
   984  00004A                     SIONovaTecla@tecla:
   985                           	callstack 0
   986  00004A                     CToAConverteix@numero:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x5
   990  00004A                     	ds	1
   991  00004B                     ??_JoystickMotor:
   992  00004B                     CantaPartAlta@c:
   993                           	callstack 0
   994  00004B                     CantaPartBaixa@c:
   995                           	callstack 0
   996  00004B                     EscriuPrimeraOrdre@ordre:
   997                           	callstack 0
   998  00004B                     UenviaChar@c:
   999                           	callstack 0
  1000  00004B                     UenviaPas@c:
  1001                           	callstack 0
  1002  00004B                     escriureCharEEPROM@c:
  1003                           	callstack 0
  1004  00004B                     Uinit@i:
  1005                           	callstack 0
  1006  00004B                     compareStrings@b:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x6
  1010  00004B                     	ds	1
  1011  00004C                     ??_TiGetTics:
  1012  00004C                     CantaIR@IR:
  1013                           	callstack 0
  1014  00004C                     CantaData@Data:
  1015                           	callstack 0
  1016  00004C                     UgetUserName@quin:
  1017                           	callstack 0
  1018  00004C                     getArrayShowUsers@quin:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x7
  1022  00004C                     	ds	1
  1023  00004D                     ??_compareStrings:
  1024  00004D                     LcNewString@new_s:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x8
  1028  00004D                     	ds	1
  1029  00004E                     TiGetTics@Handle:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x9
  1033  00004E                     	ds	1
  1034  00004F                     ??_UmotorUsers:
  1035  00004F                     TiGetTics@actual:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0xA
  1039  00004F                     	ds	2
  1040  000051                     ??_SMotor:
  1041  000051                     ??_motorHora:
  1042  000051                     ??_motorAltaveu:
  1043  000051                     ??_TeTeclat:
  1044  000051                     WaitForBusy@Busy:
  1045                           	callstack 0
  1046  000051                     Espera@ms:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0xC
  1050  000051                     	ds	1
  1051  000052                     LcGotoXY@Row:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0xD
  1055  000052                     	ds	1
  1056  000053                     ??_Espera:
  1057  000053                     LcGotoXY@Fisics:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0xE
  1061  000053                     	ds	1
  1062  000054                     Espera@Timer:
  1063                           	callstack 0
  1064                           
  1065                           ; 1 bytes @ 0xF
  1066  000054                     	ds	1
  1067  000055                     LcInit@columns:
  1068                           	callstack 0
  1069  000055                     _LcGotoXY$336:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x10
  1073  000055                     	ds	1
  1074  000056                     LcInit@rows:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x11
  1078  000056                     	ds	1
  1079  000057                     LcGotoXY@Column:
  1080                           	callstack 0
  1081  000057                     LcInit@i:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x12
  1085  000057                     	ds	1
  1086  000058                     ??_motorJoc:
  1087  000058                     LcPutChar@c:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x13
  1091  000058                     	ds	1
  1092  000059                     ??_GLCDMotor:
  1093  000059                     ??_motorSIO:
  1094  000059                     ??_menu:
  1095  000059                     
  1096                           ; 1 bytes @ 0x14
  1097  000059                     	ds	5
  1098  00005E                     
  1099                           ; 1 bytes @ 0x19
  1100 ;;
  1101 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1102 ;;
  1103 ;; *************** function _main *****************
  1104 ;; Defined at:
  1105 ;;		line 76 in file "main.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1
  1119 ;;      Params:         0       0       0
  1120 ;;      Locals:         0       0       0
  1121 ;;      Temps:          0       0       0
  1122 ;;      Totals:         0       0       0
  1123 ;;Total ram usage:        0 bytes
  1124 ;; Hardware stack levels required when called: 7
  1125 ;; This function calls:
  1126 ;;		_CtoA
  1127 ;;		_GLCDInit
  1128 ;;		_GLCDMotor
  1129 ;;		_JoystickInit
  1130 ;;		_JoystickMotor
  1131 ;;		_LcInit
  1132 ;;		_LcLCD
  1133 ;;		_Minit
  1134 ;;		_SMotor
  1135 ;;		_Sinit
  1136 ;;		_TeInit
  1137 ;;		_TeTeclat
  1138 ;;		_TiInitTimer
  1139 ;;		_Uinit
  1140 ;;		_UmotorUsers
  1141 ;;		_initAltaveu
  1142 ;;		_initHora
  1143 ;;		_initSIO
  1144 ;;		_init_eusart
  1145 ;;		_init_ports
  1146 ;;		_menu
  1147 ;;		_motorAltaveu
  1148 ;;		_motorHora
  1149 ;;		_motorJoc
  1150 ;;		_motorSIO
  1151 ;; This function is called by:
  1152 ;;		Startup code after reset
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text0
  1157  0015A8                     __ptext0:
  1158                           	callstack 0
  1159  0015A8                     _main:
  1160                           	callstack 24
  1161                           
  1162                           ;main.c: 77:     init_ports();
  1163                           
  1164                           ;incstack = 0
  1165  0015A8  EC4E  F00D         	call	_init_ports	;wreg free
  1166                           
  1167                           ;main.c: 79:     init_eusart();
  1168  0015AC  EC93  F00D         	call	_init_eusart	;wreg free
  1169                           
  1170                           ;main.c: 80:     TiInitTimer();
  1171  0015B0  ECCE  F00C         	call	_TiInitTimer	;wreg free
  1172                           
  1173                           ;main.c: 81:     TeInit();
  1174  0015B4  EC40  F00E         	call	_TeInit	;wreg free
  1175                           
  1176                           ;main.c: 82:     Sinit();
  1177  0015B8  EC44  F00E         	call	_Sinit	;wreg free
  1178                           
  1179                           ;main.c: 83:     SMotor();
  1180  0015BC  EC59  F007         	call	_SMotor	;wreg free
  1181                           
  1182                           ;main.c: 84:     Uinit();
  1183  0015C0  EC4C  F00C         	call	_Uinit	;wreg free
  1184                           
  1185                           ;main.c: 85:     initAltaveu();
  1186  0015C4  EC34  F00E         	call	_initAltaveu	;wreg free
  1187                           
  1188                           ;main.c: 86:     GLCDInit();
  1189  0015C8  EC54  F00E         	call	_GLCDInit	;wreg free
  1190                           
  1191                           ;main.c: 87:     JoystickInit();
  1192  0015CC  ECA8  F00D         	call	_JoystickInit	;wreg free
  1193                           
  1194                           ;main.c: 88:     initHora();
  1195  0015D0  EC30  F00E         	call	_initHora	;wreg free
  1196                           
  1197                           ;main.c: 89:     initSIO();
  1198  0015D4  EC2C  F00E         	call	_initSIO	;wreg free
  1199                           
  1200                           ;main.c: 91:     LcInit(2,16);
  1201  0015D8  0E10               	movlw	16
  1202  0015DA  6E55               	movwf	LcInit@columns^0,c
  1203  0015DC  0E02               	movlw	2
  1204  0015DE  EC5B  F009         	call	_LcInit
  1205                           
  1206                           ;main.c: 92:     Minit();
  1207  0015E2  EC4C  F00E         	call	_Minit	;wreg free
  1208  0015E6                     l198:
  1209                           
  1210                           ;main.c: 95:         GLCDMotor();
  1211  0015E6  ECDC  F003         	call	_GLCDMotor	;wreg free
  1212                           
  1213                           ;main.c: 96:         motorJoc();
  1214  0015EA  ECBA  F009         	call	_motorJoc	;wreg free
  1215                           
  1216                           ;main.c: 97:         motorSIO();
  1217  0015EE  EC65  F006         	call	_motorSIO	;wreg free
  1218                           
  1219                           ;main.c: 98:         motorHora();
  1220  0015F2  EC54  F00A         	call	_motorHora	;wreg free
  1221                           
  1222                           ;main.c: 99:         JoystickMotor();
  1223  0015F6  ECF0  F008         	call	_JoystickMotor	;wreg free
  1224                           
  1225                           ;main.c: 100:         menu();
  1226  0015FA  EC1B  F000         	call	_menu	;wreg free
  1227                           
  1228                           ;main.c: 102:         CtoA();
  1229  0015FE  EC1A  F00D         	call	_CtoA	;wreg free
  1230                           
  1231                           ;main.c: 103:         motorAltaveu();
  1232  001602  EC0B  F00A         	call	_motorAltaveu	;wreg free
  1233                           
  1234                           ;main.c: 104:         UmotorUsers();
  1235  001606  EC25  F005         	call	_UmotorUsers	;wreg free
  1236                           
  1237                           ;main.c: 106:         TeTeclat();
  1238  00160A  EC49  F008         	call	_TeTeclat	;wreg free
  1239                           
  1240                           ;main.c: 107:         SMotor();
  1241  00160E  EC59  F007         	call	_SMotor	;wreg free
  1242                           
  1243                           ;main.c: 108:         LcLCD();
  1244  001612  EC9E  F00B         	call	_LcLCD	;wreg free
  1245  001616  D7E7               	goto	l198
  1246  001618                     __end_of_main:
  1247                           	callstack 0
  1248                           
  1249 ;; *************** function _motorSIO *****************
  1250 ;; Defined at:
  1251 ;;		line 43 in file "SIO.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1
  1265 ;;      Params:         0       0       0
  1266 ;;      Locals:         0       0       0
  1267 ;;      Temps:          2       0       0
  1268 ;;      Totals:         2       0       0
  1269 ;;Total ram usage:        2 bytes
  1270 ;; Hardware stack levels used: 1
  1271 ;; Hardware stack levels required when called: 6
  1272 ;; This function calls:
  1273 ;;		_CToAConverteix
  1274 ;;		_CToAHaAcabat
  1275 ;;		_CToAobtenir
  1276 ;;		_HGetTime
  1277 ;;		_LcClear
  1278 ;;		_LcGotoXY
  1279 ;;		_LcLliure
  1280 ;;		_LcNewString
  1281 ;;		_LcPutChar
  1282 ;;		_TiGetTics
  1283 ;;		_TiResetTics
  1284 ;;		_UgetUserName
  1285 ;;		_UnewScore
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text1
  1292  000CCA                     __ptext1:
  1293                           	callstack 0
  1294  000CCA                     _motorSIO:
  1295                           	callstack 24
  1296                           
  1297                           ;SIO.c: 44:     static char state = 0;;SIO.c: 46:  switch(state) {
  1298                           
  1299                           ;incstack = 0
  1300  000CCA  D0C8               	goto	l5051
  1301  000CCC                     l4933:
  1302                           
  1303                           ;SIO.c: 48:    if (usuariActualSIO > -1) {
  1304  000CCC  BE61               	btfsc	_usuariActualSIO^0,7,c
  1305  000CCE  0012               	return	
  1306                           
  1307                           ;SIO.c: 49:     userPtr = UgetUserName(usuariActualSIO);
  1308  000CD0  5061               	movf	_usuariActualSIO^0,w,c
  1309  000CD2  EC9E  F00D         	call	_UgetUserName
  1310  000CD6  C04A  F009         	movff	?_UgetUserName,_userPtr
  1311  000CDA  C04B  F00A         	movff	?_UgetUserName+1,_userPtr+1
  1312                           
  1313                           ;SIO.c: 50:     jugantSIO = 1;
  1314  000CDE  8276               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1315                           
  1316                           ;SIO.c: 51:     Krebut = 0;
  1317  000CE0  9076               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1318                           
  1319                           ;SIO.c: 52:     state = 1;
  1320  000CE2  0E01               	movlw	1
  1321  000CE4  6E0F               	movwf	motorSIO@state^0,c
  1322  000CE6  0C01               	retlw	1
  1323  000CE8                     l4943:
  1324                           
  1325                           ;SIO.c: 56:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1326  000CE8  D8D9               	call	PL24	;call to abstracted procedure
  1327  000CEA  E108               	bnz	l4951
  1328  000CEC  A2AC               	btfss	172,1,c	;volatile
  1329  000CEE  D006               	goto	l4951
  1330                           
  1331                           ;SIO.c: 57:     TXREG = '\0';
  1332  000CF0  6AAD               	clrf	173,c	;volatile
  1333                           
  1334                           ;SIO.c: 58:     novaTeclaSIO = 0;
  1335  000CF2  6A5F               	clrf	_novaTeclaSIO^0,c
  1336                           
  1337                           ;SIO.c: 59:     LATBbits.LATB3 = 1;
  1338  000CF4  868A               	bsf	138,3,c	;volatile
  1339                           
  1340                           ;SIO.c: 60:     state = 2;
  1341  000CF6  0E02               	movlw	2
  1342  000CF8  6E0F               	movwf	motorSIO@state^0,c
  1343                           
  1344                           ;SIO.c: 61:    }
  1345  000CFA  0C02               	retlw	2
  1346  000CFC                     l4951:
  1347  000CFC  D8CF               	call	PL24	;call to abstracted procedure
  1348  000CFE  A4D8               	btfss	status,2,c
  1349  000D00  A2AC               	btfss	172,1,c	;volatile
  1350  000D02  0012               	return	
  1351                           
  1352                           ;SIO.c: 63:     TXREG = *userPtr;
  1353  000D04  D8CB               	call	PL24	;call to abstracted procedure
  1354  000D06  6EAD               	movwf	173,c	;volatile
  1355                           
  1356                           ;SIO.c: 64:     userPtr++;
  1357  000D08  4A09               	infsnz	_userPtr^0,f,c
  1358  000D0A  2A0A               	incf	(_userPtr+1)^0,f,c
  1359  000D0C  0012               	return	
  1360  000D0E                     l4959:
  1361                           
  1362                           ;SIO.c: 68:    if (RCREG == 'K') {
  1363  000D0E  0E4B               	movlw	75
  1364  000D10  18AE               	xorwf	174,w,c
  1365  000D12  A4D8               	btfss	status,2,c
  1366  000D14  0012               	return	
  1367                           
  1368                           ;SIO.c: 69:     Krebut = 1;
  1369  000D16  8076               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1370  000D18                     l4963:
  1371                           
  1372                           ;SIO.c: 70:     state = 3;
  1373  000D18  0E03               	movlw	3
  1374  000D1A  6E0F               	movwf	motorSIO@state^0,c
  1375  000D1C  0C03               	retlw	3
  1376  000D1E                     l4965:
  1377                           
  1378                           ;SIO.c: 74:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1379  000D1E  2860               	incf	_direccioSIO^0,w,c
  1380  000D20  E006               	bz	l4973
  1381  000D22  A2AC               	btfss	172,1,c	;volatile
  1382  000D24  D004               	goto	l4973
  1383                           
  1384                           ;SIO.c: 75:     TXREG = direccioSIO;
  1385  000D26  C060  FFAD         	movff	_direccioSIO,4013	;volatile
  1386                           
  1387                           ;SIO.c: 76:     direccioSIO = -1;
  1388  000D2A  6860               	setf	_direccioSIO^0,c
  1389  000D2C  D7F5               	goto	l4963
  1390  000D2E                     l4973:
  1391  000D2E  0E30               	movlw	48
  1392  000D30  645F               	cpfsgt	_novaTeclaSIO^0,c
  1393  000D32  D009               	goto	l1255
  1394  000D34  0E3A               	movlw	58
  1395  000D36  605F               	cpfslt	_novaTeclaSIO^0,c
  1396  000D38  D006               	goto	l1255
  1397  000D3A  A2AC               	btfss	172,1,c	;volatile
  1398  000D3C  D004               	goto	l1255
  1399                           
  1400                           ;SIO.c: 80:     TXREG = novaTeclaSIO;
  1401  000D3E  C05F  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1402                           
  1403                           ;SIO.c: 81:     novaTeclaSIO = 0;
  1404  000D42  6A5F               	clrf	_novaTeclaSIO^0,c
  1405  000D44  D7E9               	goto	l4963
  1406  000D46                     l1255:
  1407  000D46  B276               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1408  000D48  D002               	goto	u4800
  1409  000D4A  B2AC               	btfsc	172,1,c	;volatile
  1410  000D4C  D002               	goto	u4810
  1411  000D4E                     u4800:
  1412  000D4E  AA9E               	btfss	158,5,c	;volatile
  1413  000D50  0012               	return	
  1414  000D52                     u4810:
  1415                           
  1416                           ;SIO.c: 85:     LcClear();
  1417  000D52  EC2C  F00D         	call	_LcClear	;wreg free
  1418                           
  1419                           ;SIO.c: 86:     LcNewString("ERRORS:");
  1420  000D56  0EE9               	movlw	low STR_6
  1421  000D58  6E4D               	movwf	LcNewString@new_s^0,c
  1422  000D5A  0E1F               	movlw	high STR_6
  1423  000D5C  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  1424  000D5E  ECFF  F00D         	call	_LcNewString	;wreg free
  1425                           
  1426                           ;SIO.c: 87:     TXREG = 'F';
  1427  000D62  0E46               	movlw	70
  1428  000D64  6EAD               	movwf	173,c	;volatile
  1429                           
  1430                           ;SIO.c: 88:     novaTeclaSIO = 0;
  1431  000D66  6A5F               	clrf	_novaTeclaSIO^0,c
  1432                           
  1433                           ;SIO.c: 89:     state = 4;
  1434  000D68  0E04               	movlw	4
  1435  000D6A  6E0F               	movwf	motorSIO@state^0,c
  1436  000D6C  0C04               	retlw	4
  1437  000D6E                     l1262:
  1438                           
  1439                           ;SIO.c: 93:    if (PIR1bits.RCIF) {
  1440  000D6E  AA9E               	btfss	158,5,c	;volatile
  1441  000D70  0012               	return	
  1442                           
  1443                           ;SIO.c: 94:                 score = RCREG;
  1444  000D72  CFAE F010          	movff	4014,_score	;volatile
  1445                           
  1446                           ;SIO.c: 95:                 UnewScore(score);
  1447  000D76  5010               	movf	_score^0,w,c
  1448  000D78  EC0B  F00E         	call	_UnewScore
  1449                           
  1450                           ;SIO.c: 96:     CToAConverteix(score);
  1451  000D7C  5010               	movf	_score^0,w,c
  1452  000D7E  ECF9  F00D         	call	_CToAConverteix
  1453                           
  1454                           ;SIO.c: 97:     TiResetTics(timerSIO);
  1455  000D82  5011               	movf	_timerSIO^0,w,c
  1456  000D84  EC79  F00D         	call	_TiResetTics
  1457  000D88                     l5001:
  1458                           
  1459                           ;SIO.c: 98:     state = 5;
  1460  000D88  0E05               	movlw	5
  1461  000D8A  6E0F               	movwf	motorSIO@state^0,c
  1462  000D8C  0C05               	retlw	5
  1463  000D8E                     l5003:
  1464                           
  1465                           ;SIO.c: 102:    if (TiGetTics(timerSIO) > 2490) {
  1466  000D8E  5011               	movf	_timerSIO^0,w,c
  1467  000D90  ECF5  F00C         	call	_TiGetTics
  1468  000D94  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  1469  000D96  D010               	goto	l5011
  1470  000D98  0EBB               	movlw	187
  1471  000D9A  5C4A               	subwf	?_TiGetTics^0,w,c
  1472  000D9C  0E09               	movlw	9
  1473  000D9E  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  1474  000DA0  E30B               	bnc	l5011
  1475                           
  1476                           ;SIO.c: 103:     LcClear();
  1477  000DA2  EC2C  F00D         	call	_LcClear	;wreg free
  1478                           
  1479                           ;SIO.c: 104:     LcNewString("TIME LEFT: ");
  1480  000DA6  0ECC               	movlw	low STR_7
  1481  000DA8  6E4D               	movwf	LcNewString@new_s^0,c
  1482  000DAA  0E1F               	movlw	high STR_7
  1483  000DAC  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  1484  000DAE  ECFF  F00D         	call	_LcNewString	;wreg free
  1485                           
  1486                           ;SIO.c: 105:     state = 7;
  1487  000DB2  0E07               	movlw	7
  1488  000DB4  6E0F               	movwf	motorSIO@state^0,c
  1489                           
  1490                           ;SIO.c: 106:    }
  1491  000DB6  0C07               	retlw	7
  1492  000DB8                     l5011:
  1493  000DB8  5011               	movf	_timerSIO^0,w,c
  1494  000DBA  ECF5  F00C         	call	_TiGetTics
  1495  000DBE  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  1496  000DC0  D006               	goto	u4840
  1497  000DC2  0EBA               	movlw	186
  1498  000DC4  5C4A               	subwf	?_TiGetTics^0,w,c
  1499  000DC6  0E09               	movlw	9
  1500  000DC8  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  1501  000DCA  B0D8               	btfsc	status,0,c
  1502  000DCC  0012               	return	
  1503  000DCE                     u4840:
  1504  000DCE  AA9E               	btfss	158,5,c	;volatile
  1505  000DD0  0012               	return	
  1506  000DD2  EC05  F00E         	call	_LcLliure	;wreg free
  1507  000DD6  A0D8               	btfss	status,0,c
  1508  000DD8  0012               	return	
  1509                           
  1510                           ;SIO.c: 108:     LcGotoXY(0,1);
  1511  000DDA  ECC1  F003         	call	PL32	;call to abstracted procedure
  1512  000DDE  EC9E  F00C         	call	_LcGotoXY
  1513                           
  1514                           ;SIO.c: 109:     LcPutChar(RCREG);
  1515  000DE2  50AE               	movf	174,w,c	;volatile
  1516  000DE4  ECC6  F00B         	call	_LcPutChar
  1517                           
  1518                           ;SIO.c: 110:     state = 6;
  1519  000DE8  0E06               	movlw	6
  1520  000DEA  6E0F               	movwf	motorSIO@state^0,c
  1521  000DEC  0C06               	retlw	6
  1522  000DEE                     l5021:
  1523                           
  1524                           ;SIO.c: 114:    if (LcLliure()) {
  1525  000DEE  EC05  F00E         	call	_LcLliure	;wreg free
  1526  000DF2  A0D8               	btfss	status,0,c
  1527  000DF4  0012               	return	
  1528                           
  1529                           ;SIO.c: 115:     LcNewString(HGetTime());
  1530  000DF6  EC68  F00E         	call	_HGetTime	;wreg free
  1531  000DFA  D856               	call	PL46	;call to abstracted procedure
  1532  000DFC  ECFF  F00D         	call	_LcNewString	;wreg free
  1533                           
  1534                           ;SIO.c: 116:     state = 8;
  1535  000E00  0E08               	movlw	8
  1536  000E02  6E0F               	movwf	motorSIO@state^0,c
  1537  000E04  0C08               	retlw	8
  1538  000E06                     l1270:
  1539                           
  1540                           ;SIO.c: 120:    if (PIR1bits.RCIF) {
  1541  000E06  AA9E               	btfss	158,5,c	;volatile
  1542  000E08  0012               	return	
  1543                           
  1544                           ;SIO.c: 121:     LcPutChar(RCREG);
  1545  000E0A  50AE               	movf	174,w,c	;volatile
  1546  000E0C  ECC6  F00B         	call	_LcPutChar
  1547                           
  1548                           ;SIO.c: 122:                 TiResetTics(timerSIO);
  1549  000E10  5011               	movf	_timerSIO^0,w,c
  1550  000E12  EC79  F00D         	call	_TiResetTics
  1551  000E16  D7B8               	goto	l5001
  1552  000E18                     l5031:
  1553                           
  1554                           ;SIO.c: 127:    if (LcLliure()) {
  1555  000E18  EC05  F00E         	call	_LcLliure	;wreg free
  1556  000E1C  A0D8               	btfss	status,0,c
  1557  000E1E  0012               	return	
  1558                           
  1559                           ;SIO.c: 128:     LcGotoXY(0,1);
  1560  000E20  ECC1  F003         	call	PL32	;call to abstracted procedure
  1561  000E24  EC9E  F00C         	call	_LcGotoXY
  1562                           
  1563                           ;SIO.c: 129:     LcNewString("SCORE: ");
  1564  000E28  0EE1               	movlw	low STR_8
  1565  000E2A  6E4D               	movwf	LcNewString@new_s^0,c
  1566  000E2C  0E1F               	movlw	high STR_8
  1567  000E2E  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  1568  000E30  ECFF  F00D         	call	_LcNewString	;wreg free
  1569                           
  1570                           ;SIO.c: 130:     state = 9;
  1571  000E34  0E09               	movlw	9
  1572  000E36  6E0F               	movwf	motorSIO@state^0,c
  1573  000E38  0C09               	retlw	9
  1574  000E3A                     l5039:
  1575                           
  1576                           ;SIO.c: 134:    if (LcLliure() && CToAHaAcabat() == 250) {
  1577  000E3A  EC05  F00E         	call	_LcLliure	;wreg free
  1578  000E3E  A0D8               	btfss	status,0,c
  1579  000E40  0012               	return	
  1580  000E42  EC82  F00E         	call	_CToAHaAcabat	;wreg free
  1581  000E46  0AFA               	xorlw	250
  1582  000E48  A4D8               	btfss	status,2,c
  1583  000E4A  0012               	return	
  1584                           
  1585                           ;SIO.c: 135:     LcNewString(CToAobtenir());
  1586  000E4C  EC80  F00E         	call	_CToAobtenir	;wreg free
  1587  000E50  D82B               	call	PL46	;call to abstracted procedure
  1588  000E52  ECFF  F00D         	call	_LcNewString	;wreg free
  1589                           
  1590                           ;SIO.c: 136:     usuariActualSIO = -1;
  1591  000E56  6861               	setf	_usuariActualSIO^0,c
  1592                           
  1593                           ;SIO.c: 137:     state = 0;
  1594  000E58  6A0F               	clrf	motorSIO@state^0,c
  1595  000E5A  0012               	return	
  1596  000E5C                     l5051:
  1597  000E5C  500F               	movf	motorSIO@state^0,w,c
  1598  000E5E  6E59               	movwf	??_motorSIO^0,c
  1599  000E60  6A5A               	clrf	(??_motorSIO+1)^0,c
  1600                           
  1601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1602                           ; Switch size 1, requested type "space"
  1603                           ; Number of cases is 1, Range of values is 0 to 0
  1604                           ; switch strategies available:
  1605                           ; Name         Instructions Cycles
  1606                           ; simple_byte            4     3 (average)
  1607                           ;	Chosen strategy is simple_byte
  1608  000E62  505A               	movf	(??_motorSIO+1)^0,w,c
  1609  000E64  A4D8               	btfss	status,2,c
  1610  000E66  0012               	return	
  1611                           
  1612                           ; Switch size 1, requested type "space"
  1613                           ; Number of cases is 10, Range of values is 0 to 9
  1614                           ; switch strategies available:
  1615                           ; Name         Instructions Cycles
  1616                           ; simple_byte           31    16 (average)
  1617                           ;	Chosen strategy is simple_byte
  1618  000E68  5059               	movf	??_motorSIO^0,w,c
  1619  000E6A  E101 D72F          	bz	l4933
  1620  000E6E  0A01               	xorlw	1	; case 1
  1621  000E70  E101 D73A          	bz	l4943
  1622  000E74  0A03               	xorlw	3	; case 2
  1623  000E76  E101 D74A          	bz	l4959
  1624  000E7A  0A01               	xorlw	1	; case 3
  1625  000E7C  E101 D74F          	bz	l4965
  1626  000E80  0A07               	xorlw	7	; case 4
  1627  000E82  E101 D774          	bz	l1262
  1628  000E86  0A01               	xorlw	1	; case 5
  1629  000E88  E082               	bz	l5003
  1630  000E8A  0A03               	xorlw	3	; case 6
  1631  000E8C  E0BC               	bz	l1270
  1632  000E8E  0A01               	xorlw	1	; case 7
  1633  000E90  E0AE               	bz	l5021
  1634  000E92  0A0F               	xorlw	15	; case 8
  1635  000E94  E0C1               	bz	l5031
  1636  000E96  0A01               	xorlw	1	; case 9
  1637  000E98  E0D0               	bz	l5039
  1638  000E9A  0012               	return		;funcret
  1639  000E9C                     __end_of_motorSIO:
  1640                           	callstack 0
  1641  000E9C                     PL24:
  1642                           	callstack 24
  1643  000E9C  C009  FFD9         	movff	_userPtr,fsr2l
  1644  000EA0  C00A  FFDA         	movff	_userPtr+1,fsr2h
  1645  000EA4  50DF               	movf	indf2,w,c
  1646  000EA6  0012               	return	
  1647  000EA8                     __end_ofPL24:
  1648                           	callstack 0
  1649  000EA8                     PL46:
  1650                           	callstack 24
  1651  000EA8  6E59               	movwf	??_motorSIO^0,c
  1652  000EAA  C059  F04D         	movff	??_motorSIO,LcNewString@new_s
  1653  000EAE  6A4E               	clrf	(LcNewString@new_s+1)^0,c
  1654  000EB0  0012               	return	
  1655  000EB2                     __end_ofPL46:
  1656                           	callstack 0
  1657                           
  1658 ;; *************** function _UnewScore *****************
  1659 ;; Defined at:
  1660 ;;		line 299 in file "Usuaris.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  scoretmp        1    wreg     unsigned char 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1
  1674 ;;      Params:         0       0       0
  1675 ;;      Locals:         1       0       0
  1676 ;;      Temps:          0       0       0
  1677 ;;      Totals:         1       0       0
  1678 ;;Total ram usage:        1 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; Hardware stack levels required when called: 2
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_motorSIO
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text2
  1689  001C16                     __ptext2:
  1690                           	callstack 0
  1691  001C16                     _UnewScore:
  1692                           	callstack 27
  1693                           
  1694                           ;incstack = 0
  1695                           ;UnewScore@scoretmp stored from wreg
  1696  001C16  6E4A               	movwf	UnewScore@scoretmp^0,c
  1697                           
  1698                           ;Usuaris.c: 300:     scoreUsr = scoretmp;
  1699  001C18  C04A  F028         	movff	UnewScore@scoretmp,_scoreUsr
  1700                           
  1701                           ;Usuaris.c: 301:     do_updateScore = 1;
  1702  001C1C  8677               	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1703  001C1E  0012               	return		;funcret
  1704  001C20                     __end_of_UnewScore:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _motorJoc *****************
  1708 ;; Defined at:
  1709 ;;		line 48 in file "Joc.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1
  1723 ;;      Params:         0       0       0
  1724 ;;      Locals:         0       0       0
  1725 ;;      Temps:          2       0       0
  1726 ;;      Totals:         2       0       0
  1727 ;;Total ram usage:        2 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 5
  1730 ;; This function calls:
  1731 ;;		_HClearNouSegon
  1732 ;;		_HGetTime
  1733 ;;		_HJugant
  1734 ;;		_HNouSegon
  1735 ;;		_HnoJugant
  1736 ;;		_LcGotoXY
  1737 ;;		_LcLliure
  1738 ;;		_LcNewString
  1739 ;;		_SIONovaDireccio
  1740 ;;		_SIONovaTecla
  1741 ;;		_SIOStartGame
  1742 ;;		_SIOcheckKrebut
  1743 ;;		_SIOendGame
  1744 ;;		_conversorJoystick
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text3
  1751  001374                     __ptext3:
  1752                           	callstack 0
  1753  001374                     _motorJoc:
  1754                           	callstack 25
  1755                           
  1756                           ;Joc.c: 49:     static char state = 0;;Joc.c: 51:  switch(state) {
  1757                           
  1758                           ;incstack = 0
  1759  001374  D043               	goto	l4925
  1760  001376                     l4879:
  1761                           
  1762                           ;Joc.c: 53:    if (usuariJoc != -1) {
  1763  001376  2863               	incf	_usuariJoc^0,w,c
  1764  001378  B4D8               	btfsc	status,2,c
  1765  00137A  0012               	return	
  1766                           
  1767                           ;Joc.c: 54:     SIOStartGame(usuariJoc);
  1768  00137C  5063               	movf	_usuariJoc^0,w,c
  1769  00137E  EC10  F00E         	call	_SIOStartGame
  1770                           
  1771                           ;Joc.c: 55:     jugantJoc = 1;
  1772  001382  8476               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1773                           
  1774                           ;Joc.c: 56:     state = 2;
  1775  001384  0E02               	movlw	2
  1776  001386  6E12               	movwf	motorJoc@state^0,c
  1777                           
  1778                           ;Joc.c: 58:   break;
  1779                           
  1780                           ;Joc.c: 57:    }
  1781  001388  0C02               	retlw	2
  1782  00138A                     l1148:
  1783                           
  1784                           ;Joc.c: 60:    if (!jugantJoc) {
  1785  00138A  B476               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1786  00138C  D008               	goto	l4895
  1787                           
  1788                           ;Joc.c: 61:     usuariJoc = -1;
  1789  00138E  6863               	setf	_usuariJoc^0,c
  1790                           
  1791                           ;Joc.c: 62:     HnoJugant();
  1792  001390  EC66  F00E         	call	_HnoJugant	;wreg free
  1793                           
  1794                           ;Joc.c: 63:     SIOendGame();
  1795  001394  EC64  F00E         	call	_SIOendGame	;wreg free
  1796                           
  1797                           ;Joc.c: 64:     LATBbits.LATB3 = 0;
  1798  001398  968A               	bcf	138,3,c	;volatile
  1799  00139A                     l4893:
  1800                           
  1801                           ;Joc.c: 65:     state--;
  1802  00139A  0612               	decf	motorJoc@state^0,f,c
  1803                           
  1804                           ;Joc.c: 66:    }
  1805  00139C  0012               	return	
  1806  00139E                     l4895:
  1807  00139E  BE13               	btfsc	_direccioJoc^0,7,c
  1808  0013A0  D007               	goto	l4901
  1809                           
  1810                           ;Joc.c: 68:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1811  0013A2  5013               	movf	_direccioJoc^0,w,c
  1812  0013A4  EC08  F00D         	call	_conversorJoystick
  1813  0013A8  EC18  F00E         	call	_SIONovaDireccio
  1814                           
  1815                           ;Joc.c: 69:     direccioJoc = -1;
  1816  0013AC  6813               	setf	_direccioJoc^0,c
  1817                           
  1818                           ;Joc.c: 70:    }
  1819  0013AE  0012               	return	
  1820  0013B0                     l4901:
  1821  0013B0  ECCF  F00D         	call	_HNouSegon	;wreg free
  1822  0013B4  E311               	bnc	l4911
  1823  0013B6  EC05  F00E         	call	_LcLliure	;wreg free
  1824  0013BA  E30E               	bnc	l4911
  1825                           
  1826                           ;Joc.c: 72:     HClearNouSegon();
  1827  0013BC  EC6A  F00E         	call	_HClearNouSegon	;wreg free
  1828                           
  1829                           ;Joc.c: 73:     LcGotoXY(0,1);
  1830  0013C0  ECC1  F003         	call	PL32	;call to abstracted procedure
  1831  0013C4  EC9E  F00C         	call	_LcGotoXY
  1832                           
  1833                           ;Joc.c: 74:     LcNewString(HGetTime());
  1834  0013C8  EC68  F00E         	call	_HGetTime	;wreg free
  1835  0013CC  6E58               	movwf	??_motorJoc^0,c
  1836  0013CE  C058  F04D         	movff	??_motorJoc,LcNewString@new_s
  1837  0013D2  6A4E               	clrf	(LcNewString@new_s+1)^0,c
  1838  0013D4  EFFF  F00D         	goto	_LcNewString	;wreg free
  1839  0013D8                     l4911:
  1840  0013D8  5062               	movf	_novaTeclaJOC^0,w,c
  1841  0013DA  0A80               	xorlw	128
  1842  0013DC  0F7F               	addlw	-129
  1843  0013DE  A0D8               	btfss	status,0,c
  1844  0013E0  0012               	return	
  1845                           
  1846                           ;Joc.c: 77:     SIONovaTecla(novaTeclaJOC+48);
  1847  0013E2  5062               	movf	_novaTeclaJOC^0,w,c
  1848  0013E4  0F30               	addlw	48
  1849  0013E6  EC14  F00E         	call	_SIONovaTecla
  1850                           
  1851                           ;Joc.c: 78:     novaTeclaJOC = -1;
  1852  0013EA  6862               	setf	_novaTeclaJOC^0,c
  1853  0013EC  0012               	return	
  1854  0013EE                     l4917:
  1855                           
  1856                           ;Joc.c: 82:    if (SIOcheckKrebut()) {
  1857  0013EE  ECC9  F00D         	call	_SIOcheckKrebut	;wreg free
  1858  0013F2  A0D8               	btfss	status,0,c
  1859  0013F4  0012               	return	
  1860                           
  1861                           ;Joc.c: 83:     HJugant();
  1862  0013F6  EC58  F00E         	call	_HJugant	;wreg free
  1863  0013FA  D7CF               	goto	l4893
  1864  0013FC                     l4925:
  1865  0013FC  5012               	movf	motorJoc@state^0,w,c
  1866  0013FE  6E58               	movwf	??_motorJoc^0,c
  1867  001400  6A59               	clrf	(??_motorJoc+1)^0,c
  1868                           
  1869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1870                           ; Switch size 1, requested type "space"
  1871                           ; Number of cases is 1, Range of values is 0 to 0
  1872                           ; switch strategies available:
  1873                           ; Name         Instructions Cycles
  1874                           ; simple_byte            4     3 (average)
  1875                           ;	Chosen strategy is simple_byte
  1876  001402  5059               	movf	(??_motorJoc+1)^0,w,c
  1877  001404  A4D8               	btfss	status,2,c
  1878  001406  0012               	return	
  1879                           
  1880                           ; Switch size 1, requested type "space"
  1881                           ; Number of cases is 3, Range of values is 0 to 2
  1882                           ; switch strategies available:
  1883                           ; Name         Instructions Cycles
  1884                           ; simple_byte           10     6 (average)
  1885                           ;	Chosen strategy is simple_byte
  1886  001408  5058               	movf	??_motorJoc^0,w,c
  1887  00140A  E0B5               	bz	l4879
  1888  00140C  0A01               	xorlw	1	; case 1
  1889  00140E  E0BD               	bz	l1148
  1890  001410  0A03               	xorlw	3	; case 2
  1891  001412  E0ED               	bz	l4917
  1892  001414  0012               	return		;funcret
  1893  001416                     __end_of_motorJoc:
  1894                           	callstack 0
  1895                           
  1896 ;; *************** function _conversorJoystick *****************
  1897 ;; Defined at:
  1898 ;;		line 31 in file "Joc.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  direc           1    wreg     unsigned char 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  direc           1    5[COMRAM] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      unsigned char 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1
  1912 ;;      Params:         0       0       0
  1913 ;;      Locals:         1       0       0
  1914 ;;      Temps:          0       0       0
  1915 ;;      Totals:         1       0       0
  1916 ;;Total ram usage:        1 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; Hardware stack levels required when called: 2
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_motorJoc
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text4
  1927  001A10                     __ptext4:
  1928                           	callstack 0
  1929  001A10                     _conversorJoystick:
  1930                           	callstack 27
  1931                           
  1932                           ;incstack = 0
  1933                           ;conversorJoystick@direc stored from wreg
  1934  001A10  6E4A               	movwf	conversorJoystick@direc^0,c
  1935                           
  1936                           ;Joc.c: 33:     if (direc==2) {
  1937  001A12  0E02               	movlw	2
  1938  001A14  184A               	xorwf	conversorJoystick@direc^0,w,c
  1939  001A16  E101               	bnz	l2331
  1940                           
  1941                           ;Joc.c: 34:         return 'W';
  1942  001A18  0C57               	retlw	87
  1943  001A1A                     l2331:
  1944                           
  1945                           ;Joc.c: 36:     if (direc==6) {
  1946  001A1A  0E06               	movlw	6
  1947  001A1C  184A               	xorwf	conversorJoystick@direc^0,w,c
  1948  001A1E  E101               	bnz	l2337
  1949                           
  1950                           ;Joc.c: 37:         return 'D';
  1951  001A20  0C44               	retlw	68
  1952  001A22                     l2337:
  1953                           
  1954                           ;Joc.c: 39:     if (direc==8) {
  1955  001A22  0E08               	movlw	8
  1956  001A24  184A               	xorwf	conversorJoystick@direc^0,w,c
  1957  001A26  E101               	bnz	l2343
  1958                           
  1959                           ;Joc.c: 40:         return 'S';
  1960  001A28  0C53               	retlw	83
  1961  001A2A                     l2343:
  1962                           
  1963                           ;Joc.c: 42:     if (direc==4) {
  1964  001A2A  0E04               	movlw	4
  1965  001A2C  184A               	xorwf	conversorJoystick@direc^0,w,c
  1966  001A2E  E101               	bnz	l2349
  1967                           
  1968                           ;Joc.c: 43:         return 'A';
  1969  001A30  0C41               	retlw	65
  1970  001A32                     l2349:
  1971                           
  1972                           ;Joc.c: 45:     return 0;
  1973  001A32  0C00               	retlw	0	;funcret
  1974  001A34                     __end_of_conversorJoystick:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _SIOendGame *****************
  1978 ;; Defined at:
  1979 ;;		line 23 in file "SIO.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		None
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1
  1993 ;;      Params:         0       0       0
  1994 ;;      Locals:         0       0       0
  1995 ;;      Temps:          0       0       0
  1996 ;;      Totals:         0       0       0
  1997 ;;Total ram usage:        0 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 2
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		_motorJoc
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text5
  2008  001CC8                     __ptext5:
  2009                           	callstack 0
  2010  001CC8                     _SIOendGame:
  2011                           	callstack 27
  2012                           
  2013                           ;SIO.c: 24:     jugantSIO = 0;
  2014                           
  2015                           ;incstack = 0
  2016  001CC8  9276               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2017  001CCA  0012               	return		;funcret
  2018  001CCC                     __end_of_SIOendGame:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _SIOcheckKrebut *****************
  2022 ;; Defined at:
  2023 ;;		line 26 in file "SIO.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;		None               void
  2030 ;; Registers used:
  2031 ;;		status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1
  2037 ;;      Params:         0       0       0
  2038 ;;      Locals:         0       0       0
  2039 ;;      Temps:          0       0       0
  2040 ;;      Totals:         0       0       0
  2041 ;;Total ram usage:        0 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 2
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_motorJoc
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text6
  2052  001B92                     __ptext6:
  2053                           	callstack 0
  2054  001B92                     _SIOcheckKrebut:
  2055                           	callstack 27
  2056                           
  2057                           ;SIO.c: 27:     return Krebut;
  2058                           
  2059                           ;incstack = 0
  2060  001B92  B076               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2061  001B94  D002               	goto	l2365
  2062  001B96  90D8               	bcf	status,0,c
  2063  001B98  0012               	return	
  2064  001B9A                     l2365:
  2065  001B9A  80D8               	bsf	status,0,c
  2066  001B9C  0012               	return		;funcret
  2067  001B9E                     __end_of_SIOcheckKrebut:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function _SIOStartGame *****************
  2071 ;; Defined at:
  2072 ;;		line 33 in file "SIO.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  usuari          1    wreg     unsigned char 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  usuari          1    5[COMRAM] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1
  2086 ;;      Params:         0       0       0
  2087 ;;      Locals:         1       0       0
  2088 ;;      Temps:          0       0       0
  2089 ;;      Totals:         1       0       0
  2090 ;;Total ram usage:        1 bytes
  2091 ;; Hardware stack levels used: 1
  2092 ;; Hardware stack levels required when called: 2
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_motorJoc
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text7
  2101  001C20                     __ptext7:
  2102                           	callstack 0
  2103  001C20                     _SIOStartGame:
  2104                           	callstack 27
  2105                           
  2106                           ;incstack = 0
  2107                           ;SIOStartGame@usuari stored from wreg
  2108  001C20  6E4A               	movwf	SIOStartGame@usuari^0,c
  2109                           
  2110                           ;SIO.c: 34:     usuariActualSIO = usuari;
  2111  001C22  C04A  F061         	movff	SIOStartGame@usuari,_usuariActualSIO
  2112  001C26  0012               	return		;funcret
  2113  001C28                     __end_of_SIOStartGame:
  2114                           	callstack 0
  2115                           
  2116 ;; *************** function _SIONovaTecla *****************
  2117 ;; Defined at:
  2118 ;;		line 40 in file "SIO.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  tecla           1    wreg     char 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  tecla           1    5[COMRAM] char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1
  2132 ;;      Params:         0       0       0
  2133 ;;      Locals:         1       0       0
  2134 ;;      Temps:          0       0       0
  2135 ;;      Totals:         1       0       0
  2136 ;;Total ram usage:        1 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; Hardware stack levels required when called: 2
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_motorJoc
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text8
  2147  001C28                     __ptext8:
  2148                           	callstack 0
  2149  001C28                     _SIONovaTecla:
  2150                           	callstack 27
  2151                           
  2152                           ;incstack = 0
  2153                           ;SIONovaTecla@tecla stored from wreg
  2154  001C28  6E4A               	movwf	SIONovaTecla@tecla^0,c
  2155                           
  2156                           ;SIO.c: 41:     novaTeclaSIO = tecla;
  2157  001C2A  C04A  F05F         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2158  001C2E  0012               	return		;funcret
  2159  001C30                     __end_of_SIONovaTecla:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _SIONovaDireccio *****************
  2163 ;; Defined at:
  2164 ;;		line 29 in file "SIO.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  num             1    wreg     unsigned char 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  num             1    5[COMRAM] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1
  2178 ;;      Params:         0       0       0
  2179 ;;      Locals:         1       0       0
  2180 ;;      Temps:          0       0       0
  2181 ;;      Totals:         1       0       0
  2182 ;;Total ram usage:        1 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 2
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_motorJoc
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text9
  2193  001C30                     __ptext9:
  2194                           	callstack 0
  2195  001C30                     _SIONovaDireccio:
  2196                           	callstack 27
  2197                           
  2198                           ;incstack = 0
  2199                           ;SIONovaDireccio@num stored from wreg
  2200  001C30  6E4A               	movwf	SIONovaDireccio@num^0,c
  2201                           
  2202                           ;SIO.c: 30:     direccioSIO = num;
  2203  001C32  C04A  F060         	movff	SIONovaDireccio@num,_direccioSIO
  2204  001C36  0012               	return		;funcret
  2205  001C38                     __end_of_SIONovaDireccio:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _HnoJugant *****************
  2209 ;; Defined at:
  2210 ;;		line 35 in file "Hora.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		None
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1
  2224 ;;      Params:         0       0       0
  2225 ;;      Locals:         0       0       0
  2226 ;;      Temps:          0       0       0
  2227 ;;      Totals:         0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 2
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_motorJoc
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text10
  2239  001CCC                     __ptext10:
  2240                           	callstack 0
  2241  001CCC                     _HnoJugant:
  2242                           	callstack 27
  2243                           
  2244                           ;Hora.c: 36:     jugant = 0;
  2245                           
  2246                           ;incstack = 0
  2247  001CCC  9A76               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2248  001CCE  0012               	return		;funcret
  2249  001CD0                     __end_of_HnoJugant:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _HNouSegon *****************
  2253 ;; Defined at:
  2254 ;;		line 23 in file "Hora.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;		None               void
  2261 ;; Registers used:
  2262 ;;		status,0
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1
  2268 ;;      Params:         0       0       0
  2269 ;;      Locals:         0       0       0
  2270 ;;      Temps:          0       0       0
  2271 ;;      Totals:         0       0       0
  2272 ;;Total ram usage:        0 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 2
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_motorJoc
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text11
  2283  001B9E                     __ptext11:
  2284                           	callstack 0
  2285  001B9E                     _HNouSegon:
  2286                           	callstack 27
  2287                           
  2288                           ;Hora.c: 24:     return nouSegon;
  2289                           
  2290                           ;incstack = 0
  2291  001B9E  B876               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2292  001BA0  D002               	goto	l2311
  2293  001BA2  90D8               	bcf	status,0,c
  2294  001BA4  0012               	return	
  2295  001BA6                     l2311:
  2296  001BA6  80D8               	bsf	status,0,c
  2297  001BA8  0012               	return		;funcret
  2298  001BAA                     __end_of_HNouSegon:
  2299                           	callstack 0
  2300                           
  2301 ;; *************** function _HJugant *****************
  2302 ;; Defined at:
  2303 ;;		line 38 in file "Hora.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		None
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1
  2317 ;;      Params:         0       0       0
  2318 ;;      Locals:         0       0       0
  2319 ;;      Temps:          0       0       0
  2320 ;;      Totals:         0       0       0
  2321 ;;Total ram usage:        0 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; Hardware stack levels required when called: 2
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_motorJoc
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text12
  2332  001CB0                     __ptext12:
  2333                           	callstack 0
  2334  001CB0                     _HJugant:
  2335                           	callstack 27
  2336                           
  2337                           ;Hora.c: 39:     jugant = 1;
  2338                           
  2339                           ;incstack = 0
  2340  001CB0  8A76               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2341                           
  2342                           ;Hora.c: 40:     tempsAcabat = 0;
  2343  001CB2  9676               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2344  001CB4  0012               	return		;funcret
  2345  001CB6                     __end_of_HJugant:
  2346                           	callstack 0
  2347                           
  2348 ;; *************** function _HGetTime *****************
  2349 ;; Defined at:
  2350 ;;		line 31 in file "Hora.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      PTR unsigned char 
  2357 ;; Registers used:
  2358 ;;		wreg
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1
  2364 ;;      Params:         2       0       0
  2365 ;;      Locals:         0       0       0
  2366 ;;      Temps:          0       0       0
  2367 ;;      Totals:         2       0       0
  2368 ;;Total ram usage:        2 bytes
  2369 ;; Hardware stack levels used: 1
  2370 ;; Hardware stack levels required when called: 2
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_motorJoc
  2375 ;;		_motorSIO
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text13
  2380  001CD0                     __ptext13:
  2381                           	callstack 0
  2382  001CD0                     _HGetTime:
  2383                           	callstack 27
  2384                           
  2385                           ;Hora.c: 32:     return hora;
  2386                           
  2387                           ;incstack = 0
  2388  001CD0  0E6D               	movlw	_hora& (0+255)
  2389  001CD2  0012               	return		;funcret
  2390  001CD4                     __end_of_HGetTime:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _HClearNouSegon *****************
  2394 ;; Defined at:
  2395 ;;		line 27 in file "Hora.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		None
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1
  2409 ;;      Params:         0       0       0
  2410 ;;      Locals:         0       0       0
  2411 ;;      Temps:          0       0       0
  2412 ;;      Totals:         0       0       0
  2413 ;;Total ram usage:        0 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 2
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_motorJoc
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text14
  2424  001CD4                     __ptext14:
  2425                           	callstack 0
  2426  001CD4                     _HClearNouSegon:
  2427                           	callstack 27
  2428                           
  2429                           ;Hora.c: 28:     nouSegon = 0;
  2430                           
  2431                           ;incstack = 0
  2432  001CD4  9876               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2433  001CD6  0012               	return		;funcret
  2434  001CD8                     __end_of_HClearNouSegon:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _motorHora *****************
  2438 ;; Defined at:
  2439 ;;		line 46 in file "Hora.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1
  2453 ;;      Params:         0       0       0
  2454 ;;      Locals:         0       0       0
  2455 ;;      Temps:          2       0       0
  2456 ;;      Totals:         2       0       0
  2457 ;;Total ram usage:        2 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; Hardware stack levels required when called: 3
  2460 ;; This function calls:
  2461 ;;		_TiGetTics
  2462 ;;		_TiResetTics
  2463 ;;		_playAltaveu
  2464 ;; This function is called by:
  2465 ;;		_main
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text15
  2470  0014A8                     __ptext15:
  2471                           	callstack 0
  2472  0014A8                     _motorHora:
  2473                           	callstack 27
  2474                           
  2475                           ;Hora.c: 47:  static char state = 0;;Hora.c: 49:  switch(state) {
  2476                           
  2477                           ;incstack = 0
  2478  0014A8  D038               	goto	l5109
  2479  0014AA                     l5059:
  2480                           
  2481                           ;Hora.c: 51:    if (TiGetTics(timerHora) >= 1205) {
  2482  0014AA  5016               	movf	_timerHora^0,w,c
  2483  0014AC  ECF5  F00C         	call	_TiGetTics
  2484  0014B0  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  2485  0014B2  0012               	return	
  2486  0014B4  EC20  F005         	call	PL64	;call to abstracted procedure
  2487  0014B8  A0D8               	btfss	status,0,c
  2488  0014BA  0012               	return	
  2489                           
  2490                           ;Hora.c: 52:     TiResetTics(timerHora);
  2491  0014BC  5016               	movf	_timerHora^0,w,c
  2492  0014BE  EC79  F00D         	call	_TiResetTics
  2493                           
  2494                           ;Hora.c: 53:     if(jugant){
  2495  0014C2  AA76               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2496  0014C4  D028               	goto	l5105
  2497                           
  2498                           ;Hora.c: 54:       nouSegon = 1;
  2499  0014C6  8876               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2500                           
  2501                           ;Hora.c: 56:      hora[4]--;
  2502  0014C8  0671               	decf	(_hora+4)^0,f,c
  2503                           
  2504                           ;Hora.c: 57:      if(hora[4] == ('0'-1)){
  2505  0014CA  0E2F               	movlw	47
  2506  0014CC  1871               	xorwf	(_hora+4)^0,w,c
  2507  0014CE  E103               	bnz	l5075
  2508                           
  2509                           ;Hora.c: 58:       hora[4] = '9';
  2510  0014D0  0E39               	movlw	57
  2511  0014D2  6E71               	movwf	(_hora+4)^0,c
  2512                           
  2513                           ;Hora.c: 59:       hora[3]--;
  2514  0014D4  0670               	decf	(_hora+3)^0,f,c
  2515  0014D6                     l5075:
  2516                           
  2517                           ;Hora.c: 62:      if(hora[3] == ('0'-1)){
  2518  0014D6  0E2F               	movlw	47
  2519  0014D8  1870               	xorwf	(_hora+3)^0,w,c
  2520  0014DA  E103               	bnz	l5081
  2521                           
  2522                           ;Hora.c: 63:       hora[3] = '5';
  2523  0014DC  0E35               	movlw	53
  2524  0014DE  6E70               	movwf	(_hora+3)^0,c
  2525                           
  2526                           ;Hora.c: 64:       hora[1]--;
  2527  0014E0  066E               	decf	(_hora+1)^0,f,c
  2528  0014E2                     l5081:
  2529                           
  2530                           ;Hora.c: 67:      if(hora[1] == ('0'-1)){
  2531  0014E2  0E2F               	movlw	47
  2532  0014E4  186E               	xorwf	(_hora+1)^0,w,c
  2533  0014E6  E103               	bnz	l5087
  2534                           
  2535                           ;Hora.c: 68:       hora[1] = '9';
  2536  0014E8  0E39               	movlw	57
  2537  0014EA  6E6E               	movwf	(_hora+1)^0,c
  2538                           
  2539                           ;Hora.c: 69:       hora[0]--;
  2540  0014EC  066D               	decf	_hora^0,f,c
  2541  0014EE                     l5087:
  2542                           
  2543                           ;Hora.c: 72:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2544  0014EE  0E30               	movlw	48
  2545  0014F0  186D               	xorwf	_hora^0,w,c
  2546  0014F2  E10A               	bnz	l5097
  2547  0014F4  0E30               	movlw	48
  2548  0014F6  186E               	xorwf	(_hora+1)^0,w,c
  2549  0014F8  E107               	bnz	l5097
  2550  0014FA  0E30               	movlw	48
  2551  0014FC  1870               	xorwf	(_hora+3)^0,w,c
  2552  0014FE  E104               	bnz	l5097
  2553  001500  0E30               	movlw	48
  2554  001502  1871               	xorwf	(_hora+4)^0,w,c
  2555  001504  E101               	bnz	l5097
  2556                           
  2557                           ;Hora.c: 73:       tempsAcabat = 1;
  2558  001506  8676               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2559  001508                     l5097:
  2560                           
  2561                           ;Hora.c: 76:      segons++;
  2562  001508  2A15               	incf	_segons^0,f,c
  2563                           
  2564                           ;Hora.c: 77:      if(segons > 59){
  2565  00150A  0E3B               	movlw	59
  2566  00150C  6415               	cpfsgt	_segons^0,c
  2567  00150E  D003               	goto	l5105
  2568                           
  2569                           ;Hora.c: 78:       playAltaveu();
  2570  001510  EC6C  F00E         	call	_playAltaveu	;wreg free
  2571                           
  2572                           ;Hora.c: 79:       segons = 0;
  2573  001514  6A15               	clrf	_segons^0,c
  2574  001516                     l5105:
  2575                           
  2576                           ;Hora.c: 82:     state = 0;
  2577  001516  6A14               	clrf	motorHora@state^0,c
  2578  001518  0012               	return	
  2579  00151A                     l5109:
  2580  00151A  5014               	movf	motorHora@state^0,w,c
  2581  00151C  6E51               	movwf	??_motorHora^0,c
  2582  00151E  6A52               	clrf	(??_motorHora+1)^0,c
  2583                           
  2584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2585                           ; Switch size 1, requested type "space"
  2586                           ; Number of cases is 1, Range of values is 0 to 0
  2587                           ; switch strategies available:
  2588                           ; Name         Instructions Cycles
  2589                           ; simple_byte            4     3 (average)
  2590                           ;	Chosen strategy is simple_byte
  2591  001520  5052               	movf	(??_motorHora+1)^0,w,c
  2592  001522  A4D8               	btfss	status,2,c
  2593  001524  0012               	return	
  2594                           
  2595                           ; Switch size 1, requested type "space"
  2596                           ; Number of cases is 1, Range of values is 0 to 0
  2597                           ; switch strategies available:
  2598                           ; Name         Instructions Cycles
  2599                           ; simple_byte            4     3 (average)
  2600                           ;	Chosen strategy is simple_byte
  2601  001526  5051               	movf	??_motorHora^0,w,c
  2602  001528  E0C0               	bz	l5059
  2603  00152A  0012               	return		;funcret
  2604  00152C                     __end_of_motorHora:
  2605                           	callstack 0
  2606                           
  2607 ;; *************** function _playAltaveu *****************
  2608 ;; Defined at:
  2609 ;;		line 13 in file "Altaveu.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		None
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1
  2623 ;;      Params:         0       0       0
  2624 ;;      Locals:         0       0       0
  2625 ;;      Temps:          0       0       0
  2626 ;;      Totals:         0       0       0
  2627 ;;Total ram usage:        0 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 2
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_motorHora
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text16
  2638  001CD8                     __ptext16:
  2639                           	callstack 0
  2640  001CD8                     _playAltaveu:
  2641                           	callstack 27
  2642                           
  2643                           ;Altaveu.c: 14:     reproduir = 1;
  2644                           
  2645                           ;incstack = 0
  2646  001CD8  8477               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2647  001CDA  0012               	return		;funcret
  2648  001CDC                     __end_of_playAltaveu:
  2649                           	callstack 0
  2650                           
  2651 ;; *************** function _motorAltaveu *****************
  2652 ;; Defined at:
  2653 ;;		line 16 in file "Altaveu.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1
  2667 ;;      Params:         0       0       0
  2668 ;;      Locals:         0       0       0
  2669 ;;      Temps:          3       0       0
  2670 ;;      Totals:         3       0       0
  2671 ;;Total ram usage:        3 bytes
  2672 ;; Hardware stack levels used: 1
  2673 ;; Hardware stack levels required when called: 3
  2674 ;; This function calls:
  2675 ;;		_TiGetTics
  2676 ;;		_TiResetTics
  2677 ;; This function is called by:
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text17
  2683  001416                     __ptext17:
  2684                           	callstack 0
  2685  001416                     _motorAltaveu:
  2686                           	callstack 27
  2687                           
  2688                           ;Altaveu.c: 17: static char state = 0;;Altaveu.c: 19:  switch(state) {
  2689                           
  2690                           ;incstack = 0
  2691  001416  D02F               	goto	l5711
  2692  001418                     l846:
  2693                           
  2694                           ;Altaveu.c: 21:    if (reproduir) {
  2695  001418  A477               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2696  00141A  0012               	return	
  2697                           
  2698                           ;Altaveu.c: 22:     nota = 1;
  2699  00141C  0E01               	movlw	1
  2700  00141E  6E26               	movwf	_nota^0,c
  2701                           
  2702                           ;Altaveu.c: 23:     copsNota = 0;
  2703  001420  6A24               	clrf	_copsNota^0,c
  2704                           
  2705                           ;Altaveu.c: 24:     TiResetTics(timerAltaveu);
  2706  001422  5025               	movf	_timerAltaveu^0,w,c
  2707  001424  EC79  F00D         	call	_TiResetTics
  2708                           
  2709                           ;Altaveu.c: 25:     state = 1;
  2710  001428  0E01               	movlw	1
  2711  00142A  6E23               	movwf	motorAltaveu@state^0,c
  2712  00142C  0C01               	retlw	1
  2713  00142E                     l5679:
  2714                           
  2715                           ;Altaveu.c: 29:    if (nota > 5) {
  2716  00142E  0E05               	movlw	5
  2717  001430  6426               	cpfsgt	_nota^0,c
  2718  001432  D003               	goto	l5685
  2719                           
  2720                           ;Altaveu.c: 30:     reproduir = 0;
  2721  001434  9477               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2722                           
  2723                           ;Altaveu.c: 31:     state--;
  2724  001436  0623               	decf	motorAltaveu@state^0,f,c
  2725                           
  2726                           ;Altaveu.c: 32:    }
  2727  001438  0C05               	retlw	5
  2728  00143A                     l5685:
  2729  00143A  0EA8               	movlw	168
  2730  00143C  1824               	xorwf	_copsNota^0,w,c
  2731  00143E  E103               	bnz	l5691
  2732                           
  2733                           ;Altaveu.c: 34:     nota++;
  2734  001440  2A26               	incf	_nota^0,f,c
  2735                           
  2736                           ;Altaveu.c: 35:     copsNota = 0;
  2737  001442  6A24               	clrf	_copsNota^0,c
  2738                           
  2739                           ;Altaveu.c: 36:    }
  2740  001444  0012               	return	
  2741  001446                     l5691:
  2742  001446  5025               	movf	_timerAltaveu^0,w,c
  2743  001448  ECF5  F00C         	call	_TiGetTics
  2744  00144C  D821               	call	PL20	;call to abstracted procedure
  2745  00144E  B0D8               	btfsc	status,0,c
  2746  001450  0012               	return	
  2747                           
  2748                           ;Altaveu.c: 38:     LATBbits.LB0 = 1;
  2749  001452  808A               	bsf	138,0,c	;volatile
  2750                           
  2751                           ;Altaveu.c: 39:     TiResetTics(timerAltaveu);
  2752  001454  5025               	movf	_timerAltaveu^0,w,c
  2753  001456  EC79  F00D         	call	_TiResetTics
  2754  00145A                     l5697:
  2755                           
  2756                           ;Altaveu.c: 40:     state++;
  2757  00145A  2A23               	incf	motorAltaveu@state^0,f,c
  2758  00145C  0012               	return	
  2759  00145E                     l5699:
  2760                           
  2761                           ;Altaveu.c: 44:    if (TiGetTics(timerAltaveu) > nota) {
  2762  00145E  5025               	movf	_timerAltaveu^0,w,c
  2763  001460  ECF5  F00C         	call	_TiGetTics
  2764  001464  D815               	call	PL20	;call to abstracted procedure
  2765  001466  B0D8               	btfsc	status,0,c
  2766  001468  0012               	return	
  2767                           
  2768                           ;Altaveu.c: 45:     LATBbits.LB0 = 0;
  2769  00146A  908A               	bcf	138,0,c	;volatile
  2770                           
  2771                           ;Altaveu.c: 46:     TiResetTics(timerAltaveu);
  2772  00146C  5025               	movf	_timerAltaveu^0,w,c
  2773  00146E  EC79  F00D         	call	_TiResetTics
  2774                           
  2775                           ;Altaveu.c: 47:     copsNota++;
  2776  001472  2A24               	incf	_copsNota^0,f,c
  2777  001474  D7F2               	goto	l5697
  2778  001476                     l5711:
  2779  001476  5023               	movf	motorAltaveu@state^0,w,c
  2780  001478  6E51               	movwf	??_motorAltaveu^0,c
  2781  00147A  6A52               	clrf	(??_motorAltaveu+1)^0,c
  2782                           
  2783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2784                           ; Switch size 1, requested type "space"
  2785                           ; Number of cases is 1, Range of values is 0 to 0
  2786                           ; switch strategies available:
  2787                           ; Name         Instructions Cycles
  2788                           ; simple_byte            4     3 (average)
  2789                           ;	Chosen strategy is simple_byte
  2790  00147C  5052               	movf	(??_motorAltaveu+1)^0,w,c
  2791  00147E  A4D8               	btfss	status,2,c
  2792  001480  0012               	return	
  2793                           
  2794                           ; Switch size 1, requested type "space"
  2795                           ; Number of cases is 3, Range of values is 0 to 2
  2796                           ; switch strategies available:
  2797                           ; Name         Instructions Cycles
  2798                           ; simple_byte           10     6 (average)
  2799                           ;	Chosen strategy is simple_byte
  2800  001482  5051               	movf	??_motorAltaveu^0,w,c
  2801  001484  E0C9               	bz	l846
  2802  001486  0A01               	xorlw	1	; case 1
  2803  001488  E0D2               	bz	l5679
  2804  00148A  0A03               	xorlw	3	; case 2
  2805  00148C  E0E8               	bz	l5699
  2806  00148E  0012               	return		;funcret
  2807  001490                     __end_of_motorAltaveu:
  2808                           	callstack 0
  2809  001490                     PL20:
  2810                           	callstack 27
  2811  001490  5026               	movf	_nota^0,w,c
  2812  001492  6E51               	movwf	??_motorAltaveu^0,c
  2813  001494  6A52               	clrf	(??_motorAltaveu+1)^0,c
  2814  001496  504A               	movf	?_TiGetTics^0,w,c
  2815  001498  5C51               	subwf	??_motorAltaveu^0,w,c
  2816  00149A  5052               	movf	(??_motorAltaveu+1)^0,w,c
  2817  00149C  0A80               	xorlw	128
  2818  00149E  6E53               	movwf	(??_motorAltaveu+2)^0,c
  2819  0014A0  504B               	movf	(?_TiGetTics+1)^0,w,c
  2820  0014A2  0A80               	xorlw	128
  2821  0014A4  5853               	subwfb	(??_motorAltaveu+2)^0,w,c
  2822  0014A6  0012               	return	
  2823  0014A8                     __end_ofPL20:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function _menu *****************
  2827 ;; Defined at:
  2828 ;;		line 42 in file "Menu.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1
  2842 ;;      Params:         0       0       0
  2843 ;;      Locals:         0       0       0
  2844 ;;      Temps:          5       0       0
  2845 ;;      Totals:         5       0       0
  2846 ;;Total ram usage:        5 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; Hardware stack levels required when called: 6
  2849 ;; This function calls:
  2850 ;;		_CToAConverteix
  2851 ;;		_CToAHaAcabat
  2852 ;;		_CToAobtenir
  2853 ;;		_GLCDMostraMenu
  2854 ;;		_HActualitzaHora
  2855 ;;		_JJuguem
  2856 ;;		_JendGame
  2857 ;;		_JnovaDireccio
  2858 ;;		_JnovaTecla
  2859 ;;		_LcClear
  2860 ;;		_LcGotoXY
  2861 ;;		_LcLliure
  2862 ;;		_LcNewString
  2863 ;;		_LcPutChar
  2864 ;;		_LcScroll
  2865 ;;		_NoFerMenu
  2866 ;;		_SIOHaAcabatPuntuacions
  2867 ;;		_SMSoff
  2868 ;;		_SMSon
  2869 ;;		_SiFerMenu
  2870 ;;		_TiGetTics
  2871 ;;		_TiResetTics
  2872 ;;		_URegister
  2873 ;;		_UcheckExists
  2874 ;;		_UcheckExistsGetError
  2875 ;;		_UcheckExistsNotFinished
  2876 ;;		_UenviaChar
  2877 ;;		_UenviaPas
  2878 ;;		_UgetNumUsuaris
  2879 ;;		_UgetScore
  2880 ;;		_UgetTop5
  2881 ;;		_UgetUserName
  2882 ;;		_UshowUsersCalculat
  2883 ;;		_calculateShowUsers
  2884 ;;		_checkHoraAcabat
  2885 ;;		_getArrayShowUsers
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text18
  2892  000036                     __ptext18:
  2893                           	callstack 0
  2894  000036                     _menu:
  2895                           	callstack 24
  2896                           
  2897                           ;Menu.c: 43:  static char state = 0;;Menu.c: 45:  switch(state) {
  2898                           
  2899                           ;incstack = 0
  2900  000036  D32A               	goto	l5663
  2901  000038                     l5117:
  2902                           
  2903                           ;Menu.c: 47:    LcClear();
  2904  000038  EC2C  F00D         	call	_LcClear	;wreg free
  2905                           
  2906                           ;Menu.c: 48:    LcNewString(loginText);
  2907  00003C  0EA7               	movlw	low _loginText
  2908  00003E  6E4D               	movwf	LcNewString@new_s^0,c
  2909  000040  0E1F               	movlw	high _loginText
  2910  000042  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  2911  000044  ECFF  F00D         	call	_LcNewString	;wreg free
  2912                           
  2913                           ;Menu.c: 49:    state = 1;
  2914  000048  0E01               	movlw	1
  2915  00004A  6E2E               	movwf	menu@state^0,c
  2916                           
  2917                           ;Menu.c: 50:   break;
  2918  00004C  0C01               	retlw	1
  2919  00004E                     l5123:
  2920                           
  2921                           ;Menu.c: 52:    if (LcLliure()) {
  2922  00004E  EC05  F00E         	call	_LcLliure	;wreg free
  2923  000052  A0D8               	btfss	status,0,c
  2924  000054  0012               	return	
  2925                           
  2926                           ;Menu.c: 53:     LcGotoXY(0,1);
  2927  000056  DB95               	call	PL32	;call to abstracted procedure
  2928  000058  EC9E  F00C         	call	_LcGotoXY
  2929                           
  2930                           ;Menu.c: 54:     LcNewString(registerText);
  2931  00005C  0E9C               	movlw	low _registerText
  2932  00005E  6E4D               	movwf	LcNewString@new_s^0,c
  2933  000060  0E1F               	movlw	high _registerText
  2934  000062  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  2935  000064  ECFF  F00D         	call	_LcNewString	;wreg free
  2936                           
  2937                           ;Menu.c: 55:     NovaTecla = -1;
  2938  000068  6869               	setf	_NovaTecla^0,c
  2939                           
  2940                           ;Menu.c: 56:     state = 2;
  2941  00006A  0E02               	movlw	2
  2942  00006C  6E2E               	movwf	menu@state^0,c
  2943                           
  2944                           ;Menu.c: 58:   break;
  2945                           
  2946                           ;Menu.c: 57:    }
  2947  00006E  0C02               	retlw	2
  2948  000070                     l5133:
  2949                           
  2950                           ;Menu.c: 60:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  2951  000070  0469               	decf	_NovaTecla^0,w,c
  2952  000072  E108               	bnz	l5141
  2953  000074  EC70  F00E         	call	_UgetNumUsuaris	;wreg free
  2954  000078  0900               	iorlw	0
  2955  00007A  E004               	bz	l5141
  2956                           
  2957                           ;Menu.c: 61:     loginNOTRegister = 1;
  2958  00007C  8E77               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2959  00007E                     l5139:
  2960                           
  2961                           ;Menu.c: 62:     state = 3;
  2962  00007E  0E03               	movlw	3
  2963  000080  6E2E               	movwf	menu@state^0,c
  2964                           
  2965                           ;Menu.c: 63:    }
  2966  000082  0C03               	retlw	3
  2967  000084                     l5141:
  2968  000084  0E02               	movlw	2
  2969  000086  1869               	xorwf	_NovaTecla^0,w,c
  2970  000088  A4D8               	btfss	status,2,c
  2971  00008A  0012               	return	
  2972                           
  2973                           ;Menu.c: 65:     loginNOTRegister = 0;
  2974  00008C  9E77               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2975  00008E  D7F7               	goto	l5139
  2976  000090                     l511:
  2977                           
  2978                           ;Menu.c: 70:    NovaTecla = -1;
  2979  000090  6869               	setf	_NovaTecla^0,c
  2980                           
  2981                           ;Menu.c: 71:    novaLletra = -1;
  2982  000092  6868               	setf	_novaLletra^0,c
  2983                           
  2984                           ;Menu.c: 72:    LcClear();
  2985  000094  EC2C  F00D         	call	_LcClear	;wreg free
  2986                           
  2987                           ;Menu.c: 73:    LcNewString("USER: ");
  2988  000098  0EF8               	movlw	low STR_1
  2989  00009A  6E4D               	movwf	LcNewString@new_s^0,c
  2990  00009C  0E1F               	movlw	high STR_1
  2991  00009E  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  2992  0000A0  ECFF  F00D         	call	_LcNewString	;wreg free
  2993                           
  2994                           ;Menu.c: 74:    state = 4;
  2995  0000A4  0E04               	movlw	4
  2996  0000A6  6E2E               	movwf	menu@state^0,c
  2997                           
  2998                           ;Menu.c: 75:   break;
  2999  0000A8  0C04               	retlw	4
  3000  0000AA                     l5153:
  3001                           
  3002                           ;Menu.c: 77:    if (LcLliure()) {
  3003  0000AA  EC05  F00E         	call	_LcLliure	;wreg free
  3004  0000AE  A0D8               	btfss	status,0,c
  3005  0000B0  0012               	return	
  3006                           
  3007                           ;Menu.c: 78:     LcGotoXY(0,1);
  3008  0000B2  DB67               	call	PL32	;call to abstracted procedure
  3009  0000B4  EC9E  F00C         	call	_LcGotoXY
  3010                           
  3011                           ;Menu.c: 79:     LcNewString("PSWD: ");
  3012  0000B8  0EF1               	movlw	low STR_2
  3013  0000BA  6E4D               	movwf	LcNewString@new_s^0,c
  3014  0000BC  0E1F               	movlw	high STR_2
  3015  0000BE  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3016  0000C0  ECFF  F00D         	call	_LcNewString	;wreg free
  3017                           
  3018                           ;Menu.c: 80:     state = 5;
  3019  0000C4  0E05               	movlw	5
  3020  0000C6  6E2E               	movwf	menu@state^0,c
  3021  0000C8  0C05               	retlw	5
  3022  0000CA                     l5161:
  3023                           
  3024                           ;Menu.c: 84:    if (LcLliure()) {
  3025  0000CA  EC05  F00E         	call	_LcLliure	;wreg free
  3026  0000CE  A0D8               	btfss	status,0,c
  3027  0000D0  0012               	return	
  3028                           
  3029                           ;Menu.c: 85:     LcGotoXY(6,0);
  3030  0000D2  0E00               	movlw	0
  3031  0000D4  6E52               	movwf	LcGotoXY@Row^0,c
  3032  0000D6  0E06               	movlw	6
  3033  0000D8  EC9E  F00C         	call	_LcGotoXY
  3034                           
  3035                           ;Menu.c: 86:     SMSon();
  3036  0000DC  EC5B  F00E         	call	_SMSon	;wreg free
  3037                           
  3038                           ;Menu.c: 87:     tmp =0;
  3039  0000E0  6A33               	clrf	_tmp^0,c
  3040  0000E2                     l5169:
  3041                           
  3042                           ;Menu.c: 88:     state = 6;
  3043  0000E2  0E06               	movlw	6
  3044  0000E4  6E2E               	movwf	menu@state^0,c
  3045  0000E6  0C06               	retlw	6
  3046  0000E8                     l5171:
  3047                           
  3048                           ;Menu.c: 92:    if (novaLletra > 31 && NovaTecla != 10) {
  3049  0000E8  5068               	movf	_novaLletra^0,w,c
  3050  0000EA  0A80               	xorlw	128
  3051  0000EC  0F60               	addlw	-160
  3052  0000EE  E30E               	bnc	l5181
  3053  0000F0  0E0A               	movlw	10
  3054  0000F2  1869               	xorwf	_NovaTecla^0,w,c
  3055  0000F4  E00B               	bz	l5181
  3056                           
  3057                           ;Menu.c: 93:     LcPutChar(novaLletra);
  3058  0000F6  5068               	movf	_novaLletra^0,w,c
  3059  0000F8  ECC6  F00B         	call	_LcPutChar
  3060                           
  3061                           ;Menu.c: 94:     UenviaChar(novaLletra,tmp);
  3062  0000FC  C033  F04A         	movff	_tmp,UenviaChar@pos
  3063  000100  5068               	movf	_novaLletra^0,w,c
  3064  000102  ECB9  F00D         	call	_UenviaChar
  3065  000106                     l5179:
  3066                           
  3067                           ;Menu.c: 95:     state = 7;
  3068  000106  0E07               	movlw	7
  3069  000108  6E2E               	movwf	menu@state^0,c
  3070                           
  3071                           ;Menu.c: 96:    }
  3072  00010A  0C07               	retlw	7
  3073  00010C                     l5181:
  3074  00010C  0E0B               	movlw	11
  3075  00010E  1869               	xorwf	_NovaTecla^0,w,c
  3076  000110  E0FA               	bz	l5179
  3077  000112  0012               	return	
  3078  000114                     l5185:
  3079                           
  3080                           ;Menu.c: 102:    if (tmp != 7 && NovaTecla != 11) {
  3081  000114  0E07               	movlw	7
  3082  000116  1833               	xorwf	_tmp^0,w,c
  3083  000118  E005               	bz	l5197
  3084  00011A  0E0B               	movlw	11
  3085  00011C  1869               	xorwf	_NovaTecla^0,w,c
  3086  00011E  E002               	bz	l5197
  3087                           
  3088                           ;Menu.c: 103:     tmp++;
  3089                           
  3090                           ;Menu.c: 104:     NovaTecla = -1;
  3091                           
  3092                           ;Menu.c: 105:     novaLletra = -1;
  3093  000120  DB47               	call	PL78	;call to abstracted procedure
  3094  000122  D7DF               	goto	l5169
  3095  000124                     l5197:
  3096  000124  0E07               	movlw	7
  3097  000126  1833               	xorwf	_tmp^0,w,c
  3098  000128  E004               	bz	u5140
  3099  00012A  0E0B               	movlw	11
  3100  00012C  1869               	xorwf	_NovaTecla^0,w,c
  3101  00012E  A4D8               	btfss	status,2,c
  3102  000130  0012               	return	
  3103  000132                     u5140:
  3104                           
  3105                           ;Menu.c: 109:     LcGotoXY(6,1);
  3106  000132  0E01               	movlw	1
  3107  000134  6E52               	movwf	LcGotoXY@Row^0,c
  3108  000136  0E06               	movlw	6
  3109  000138  EC9E  F00C         	call	_LcGotoXY
  3110                           
  3111                           ;Menu.c: 110:     UenviaChar('\0',tmp);
  3112  00013C  C033  F04A         	movff	_tmp,UenviaChar@pos
  3113  000140  0E00               	movlw	0
  3114  000142  ECB9  F00D         	call	_UenviaChar
  3115                           
  3116                           ;Menu.c: 111:     NovaTecla = -1;
  3117                           
  3118                           ;Menu.c: 112:     novaLletra = -1;
  3119                           
  3120                           ;Menu.c: 113:     tmp = 0;
  3121  000146  DB30               	call	PL76	;call to abstracted procedure
  3122  000148                     l5211:
  3123                           
  3124                           ;Menu.c: 114:     state = 8;
  3125  000148  0E08               	movlw	8
  3126  00014A  6E2E               	movwf	menu@state^0,c
  3127  00014C  0C08               	retlw	8
  3128  00014E                     l5213:
  3129                           
  3130                           ;Menu.c: 118:    if (novaLletra > 31 && NovaTecla != 10) {
  3131  00014E  5068               	movf	_novaLletra^0,w,c
  3132  000150  0A80               	xorlw	128
  3133  000152  0F60               	addlw	-160
  3134  000154  E30E               	bnc	l5223
  3135  000156  0E0A               	movlw	10
  3136  000158  1869               	xorwf	_NovaTecla^0,w,c
  3137  00015A  E00B               	bz	l5223
  3138                           
  3139                           ;Menu.c: 119:     LcPutChar(novaLletra);
  3140  00015C  5068               	movf	_novaLletra^0,w,c
  3141  00015E  ECC6  F00B         	call	_LcPutChar
  3142                           
  3143                           ;Menu.c: 120:     UenviaPas(novaLletra,tmp);
  3144  000162  C033  F04A         	movff	_tmp,UenviaPas@pos
  3145  000166  5068               	movf	_novaLletra^0,w,c
  3146  000168  ECB1  F00D         	call	_UenviaPas
  3147  00016C                     l5221:
  3148                           
  3149                           ;Menu.c: 121:     state = 9;
  3150  00016C  0E09               	movlw	9
  3151  00016E  6E2E               	movwf	menu@state^0,c
  3152                           
  3153                           ;Menu.c: 122:    }
  3154  000170  0C09               	retlw	9
  3155  000172                     l5223:
  3156  000172  0E0B               	movlw	11
  3157  000174  1869               	xorwf	_NovaTecla^0,w,c
  3158  000176  E0FA               	bz	l5221
  3159  000178  0012               	return	
  3160  00017A                     l5227:
  3161                           
  3162                           ;Menu.c: 128:    if (tmp != 7 && NovaTecla != 11) {
  3163  00017A  0E07               	movlw	7
  3164  00017C  1833               	xorwf	_tmp^0,w,c
  3165  00017E  E005               	bz	l5239
  3166  000180  0E0B               	movlw	11
  3167  000182  1869               	xorwf	_NovaTecla^0,w,c
  3168  000184  E002               	bz	l5239
  3169                           
  3170                           ;Menu.c: 129:     tmp++;
  3171                           
  3172                           ;Menu.c: 130:     NovaTecla = -1;
  3173                           
  3174                           ;Menu.c: 131:     novaLletra = -1;
  3175  000186  DB14               	call	PL78	;call to abstracted procedure
  3176  000188  D7DF               	goto	l5211
  3177  00018A                     l5239:
  3178  00018A  0E07               	movlw	7
  3179  00018C  1833               	xorwf	_tmp^0,w,c
  3180  00018E  E004               	bz	u5210
  3181  000190  0E0B               	movlw	11
  3182  000192  1869               	xorwf	_NovaTecla^0,w,c
  3183  000194  A4D8               	btfss	status,2,c
  3184  000196  0012               	return	
  3185  000198                     u5210:
  3186                           
  3187                           ;Menu.c: 135:     UenviaPas('\0',tmp);
  3188  000198  C033  F04A         	movff	_tmp,UenviaPas@pos
  3189  00019C  0E00               	movlw	0
  3190  00019E  ECB1  F00D         	call	_UenviaPas
  3191                           
  3192                           ;Menu.c: 136:     NovaTecla = -1;
  3193                           
  3194                           ;Menu.c: 137:     novaLletra = -1;
  3195                           
  3196                           ;Menu.c: 138:     tmp = 0;
  3197  0001A2  DB02               	call	PL76	;call to abstracted procedure
  3198                           
  3199                           ;Menu.c: 139:     UcheckExists();
  3200  0001A4  EC74  F00E         	call	_UcheckExists	;wreg free
  3201                           
  3202                           ;Menu.c: 140:     SMSoff();
  3203  0001A8  EC5E  F00E         	call	_SMSoff	;wreg free
  3204                           
  3205                           ;Menu.c: 141:     state = 10;
  3206  0001AC  0E0A               	movlw	10
  3207  0001AE  6E2E               	movwf	menu@state^0,c
  3208  0001B0  0C0A               	retlw	10
  3209  0001B2                     l5257:
  3210                           
  3211                           ;Menu.c: 145:    if (!UcheckExistsNotFinished()) {
  3212  0001B2  ECED  F00D         	call	_UcheckExistsNotFinished	;wreg free
  3213  0001B6  B0D8               	btfsc	status,0,c
  3214  0001B8  0012               	return	
  3215                           
  3216                           ;Menu.c: 146:     indexUsuari = UcheckExistsGetError();
  3217  0001BA  EC72  F00E         	call	_UcheckExistsGetError	;wreg free
  3218  0001BE  6E30               	movwf	_indexUsuari^0,c
  3219                           
  3220                           ;Menu.c: 147:     state = 11;
  3221  0001C0  0E0B               	movlw	11
  3222  0001C2  6E2E               	movwf	menu@state^0,c
  3223  0001C4  0C0B               	retlw	11
  3224  0001C6                     l538:
  3225                           
  3226                           ;Menu.c: 151:    if (!loginNOTRegister && indexUsuari == -1) {
  3227  0001C6  BE77               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3228  0001C8  D006               	goto	l539
  3229  0001CA  2830               	incf	_indexUsuari^0,w,c
  3230  0001CC  E104               	bnz	l539
  3231                           
  3232                           ;Menu.c: 152:     URegister();
  3233  0001CE  EC76  F00E         	call	_URegister	;wreg free
  3234  0001D2                     l5267:
  3235                           
  3236                           ;Menu.c: 153:     state = 0;
  3237  0001D2  6A2E               	clrf	menu@state^0,c
  3238                           
  3239                           ;Menu.c: 154:    }
  3240  0001D4  0012               	return	
  3241  0001D6                     l539:
  3242  0001D6  BE77               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3243  0001D8  BE30               	btfsc	_indexUsuari^0,7,c
  3244  0001DA  D003               	goto	l541
  3245  0001DC                     u5260:
  3246                           
  3247                           ;Menu.c: 156:     state = 12;
  3248  0001DC  0E0C               	movlw	12
  3249  0001DE  6E2E               	movwf	menu@state^0,c
  3250                           
  3251                           ;Menu.c: 157:    }
  3252  0001E0  0C0C               	retlw	12
  3253  0001E2                     l541:
  3254  0001E2  AE77               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3255  0001E4  D002               	goto	u5280
  3256  0001E6  2830               	incf	_indexUsuari^0,w,c
  3257  0001E8  E0F4               	bz	l5267
  3258  0001EA                     u5280:
  3259  0001EA  AE77               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3260  0001EC  BE30               	btfsc	_indexUsuari^0,7,c
  3261  0001EE  D7F6               	goto	u5260
  3262  0001F0  D7F0               	goto	l5267
  3263  0001F2                     l5279:
  3264                           
  3265                           ;Menu.c: 166:    LcClear();
  3266  0001F2  EC2C  F00D         	call	_LcClear	;wreg free
  3267                           
  3268                           ;Menu.c: 167:    SiFerMenu();
  3269  0001F6  EC78  F00E         	call	_SiFerMenu	;wreg free
  3270                           
  3271                           ;Menu.c: 168:    GLCDMostraMenu(menuDalt);
  3272  0001FA  5031               	movf	_menuDalt^0,w,c
  3273  0001FC  ECF3  F00D         	call	_GLCDMostraMenu
  3274                           
  3275                           ;Menu.c: 169:    novaDireccio = -1;
  3276  000200  6867               	setf	_novaDireccio^0,c
  3277                           
  3278                           ;Menu.c: 170:    NovaTecla = -1;
  3279  000202  6869               	setf	_NovaTecla^0,c
  3280                           
  3281                           ;Menu.c: 171:    state = 13;
  3282  000204  0E0D               	movlw	13
  3283  000206  6E2E               	movwf	menu@state^0,c
  3284                           
  3285                           ;Menu.c: 172:   break;
  3286  000208  0C0D               	retlw	13
  3287  00020A                     l5291:
  3288                           
  3289                           ;Menu.c: 174:    if (novaDireccio == 8) {
  3290  00020A  0E08               	movlw	8
  3291  00020C  1867               	xorwf	_novaDireccio^0,w,c
  3292  00020E  E105               	bnz	l5299
  3293                           
  3294                           ;Menu.c: 175:     if(menuDalt < 4) menuDalt++;
  3295  000210  0E04               	movlw	4
  3296  000212  6031               	cpfslt	_menuDalt^0,c
  3297  000214  D7E3               	goto	u5260
  3298  000216  2A31               	incf	_menuDalt^0,f,c
  3299  000218  D7E1               	goto	u5260
  3300  00021A                     l5299:
  3301  00021A  0E02               	movlw	2
  3302  00021C  1867               	xorwf	_novaDireccio^0,w,c
  3303  00021E  E104               	bnz	l5307
  3304                           
  3305                           ;Menu.c: 179:     if(menuDalt > 0) menuDalt--;
  3306  000220  5031               	movf	_menuDalt^0,w,c
  3307  000222  E0DC               	bz	u5260
  3308  000224  0631               	decf	_menuDalt^0,f,c
  3309  000226  D7DA               	goto	u5260
  3310  000228                     l5307:
  3311  000228  0E0B               	movlw	11
  3312  00022A  1869               	xorwf	_NovaTecla^0,w,c
  3313  00022C  E110               	bnz	l5319
  3314  00022E  0E03               	movlw	3
  3315  000230  1831               	xorwf	_menuDalt^0,w,c
  3316  000232  E10D               	bnz	l5319
  3317                           
  3318                           ;Menu.c: 183:     NoFerMenu();
  3319  000234  EC7C  F00E         	call	_NoFerMenu	;wreg free
  3320                           
  3321                           ;Menu.c: 184:     LcClear();
  3322  000238  EC2C  F00D         	call	_LcClear	;wreg free
  3323                           
  3324                           ;Menu.c: 185:     LcNewString("BYE BYE ");
  3325  00023C  0ED8               	movlw	low STR_3
  3326  00023E  6E4D               	movwf	LcNewString@new_s^0,c
  3327  000240  0E1F               	movlw	high STR_3
  3328  000242  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3329  000244  ECFF  F00D         	call	_LcNewString	;wreg free
  3330                           
  3331                           ;Menu.c: 186:     state = 14;
  3332  000248  0E0E               	movlw	14
  3333  00024A  6E2E               	movwf	menu@state^0,c
  3334                           
  3335                           ;Menu.c: 187:    }
  3336  00024C  0C0E               	retlw	14
  3337  00024E                     l5319:
  3338  00024E  0E0B               	movlw	11
  3339  000250  1869               	xorwf	_NovaTecla^0,w,c
  3340  000252  E110               	bnz	l5333
  3341  000254  0431               	decf	_menuDalt^0,w,c
  3342  000256  E10E               	bnz	l5333
  3343                           
  3344                           ;Menu.c: 189:     LcClear();
  3345  000258  EC2C  F00D         	call	_LcClear	;wreg free
  3346                           
  3347                           ;Menu.c: 190:     NoFerMenu();
  3348  00025C  EC7C  F00E         	call	_NoFerMenu	;wreg free
  3349                           
  3350                           ;Menu.c: 191:     LcNewString("Modify Time:");
  3351  000260  0EBF               	movlw	low STR_4
  3352  000262  6E4D               	movwf	LcNewString@new_s^0,c
  3353  000264  0E1F               	movlw	high STR_4
  3354  000266  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3355  000268  ECFF  F00D         	call	_LcNewString	;wreg free
  3356                           
  3357                           ;Menu.c: 192:     NovaTecla = -1;
  3358  00026C  6869               	setf	_NovaTecla^0,c
  3359                           
  3360                           ;Menu.c: 193:     state = 16;
  3361  00026E  0E10               	movlw	16
  3362  000270  6E2E               	movwf	menu@state^0,c
  3363                           
  3364                           ;Menu.c: 194:    }
  3365  000272  0C10               	retlw	16
  3366  000274                     l5333:
  3367  000274  5031               	movf	_menuDalt^0,w,c
  3368  000276  E114               	bnz	l5349
  3369  000278  0E0B               	movlw	11
  3370  00027A  1869               	xorwf	_NovaTecla^0,w,c
  3371  00027C  E111               	bnz	l5349
  3372                           
  3373                           ;Menu.c: 196:     NoFerMenu();
  3374  00027E  EC7C  F00E         	call	_NoFerMenu	;wreg free
  3375                           
  3376                           ;Menu.c: 197:     NovaTecla = -1;
  3377  000282  6869               	setf	_NovaTecla^0,c
  3378                           
  3379                           ;Menu.c: 198:     LcClear();
  3380  000284  EC2C  F00D         	call	_LcClear	;wreg free
  3381                           
  3382                           ;Menu.c: 199:     LcNewString("TIME REMAINING:");
  3383  000288  0EAF               	movlw	low STR_5
  3384  00028A  6E4D               	movwf	LcNewString@new_s^0,c
  3385  00028C  0E1F               	movlw	high STR_5
  3386  00028E  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  3387  000290  ECFF  F00D         	call	_LcNewString	;wreg free
  3388                           
  3389                           ;Menu.c: 200:     JJuguem(indexUsuari);
  3390  000294  5030               	movf	_indexUsuari^0,w,c
  3391  000296  EC24  F00E         	call	_JJuguem
  3392  00029A                     l5347:
  3393                           
  3394                           ;Menu.c: 201:     state = 21;
  3395  00029A  0E15               	movlw	21
  3396  00029C  6E2E               	movwf	menu@state^0,c
  3397                           
  3398                           ;Menu.c: 202:    }
  3399  00029E  0C15               	retlw	21
  3400  0002A0                     l5349:
  3401  0002A0  0E0B               	movlw	11
  3402  0002A2  1869               	xorwf	_NovaTecla^0,w,c
  3403  0002A4  E10E               	bnz	l5365
  3404  0002A6  0E04               	movlw	4
  3405  0002A8  1831               	xorwf	_menuDalt^0,w,c
  3406  0002AA  E10B               	bnz	l5365
  3407                           
  3408                           ;Menu.c: 204:     NoFerMenu();
  3409  0002AC  EC7C  F00E         	call	_NoFerMenu	;wreg free
  3410                           
  3411                           ;Menu.c: 205:     LcClear();
  3412  0002B0  EC2C  F00D         	call	_LcClear	;wreg free
  3413                           
  3414                           ;Menu.c: 206:     menuDalt = 0;
  3415  0002B4  6A31               	clrf	_menuDalt^0,c
  3416                           
  3417                           ;Menu.c: 207:     NovaTecla = -1;
  3418  0002B6  6869               	setf	_NovaTecla^0,c
  3419                           
  3420                           ;Menu.c: 208:     calculateShowUsers();
  3421  0002B8  EC6E  F00E         	call	_calculateShowUsers	;wreg free
  3422                           
  3423                           ;Menu.c: 209:     state = 30;
  3424  0002BC  0E1E               	movlw	30
  3425  0002BE  6E2E               	movwf	menu@state^0,c
  3426                           
  3427                           ;Menu.c: 210:    }
  3428  0002C0  0C1E               	retlw	30
  3429  0002C2                     l5365:
  3430  0002C2  0E0B               	movlw	11
  3431  0002C4  1869               	xorwf	_NovaTecla^0,w,c
  3432  0002C6  A4D8               	btfss	status,2,c
  3433  0002C8  0012               	return	
  3434  0002CA  0E02               	movlw	2
  3435  0002CC  1831               	xorwf	_menuDalt^0,w,c
  3436  0002CE  A4D8               	btfss	status,2,c
  3437  0002D0  0012               	return	
  3438  0002D2  0E00               	movlw	0
  3439  0002D4  ECE1  F00D         	call	_UgetTop5
  3440  0002D8  0AFF               	xorlw	255
  3441  0002DA  B4D8               	btfsc	status,2,c
  3442  0002DC  0012               	return	
  3443                           
  3444                           ;Menu.c: 212:     NoFerMenu();
  3445  0002DE  EC7C  F00E         	call	_NoFerMenu	;wreg free
  3446                           
  3447                           ;Menu.c: 213:     LcClear();
  3448  0002E2  EC2C  F00D         	call	_LcClear	;wreg free
  3449                           
  3450                           ;Menu.c: 214:     menuDalt = 0;
  3451  0002E6  6A31               	clrf	_menuDalt^0,c
  3452                           
  3453                           ;Menu.c: 215:     NovaTecla = -1;
  3454  0002E8  6869               	setf	_NovaTecla^0,c
  3455  0002EA                     l5379:
  3456                           
  3457                           ;Menu.c: 216:     state = 31;
  3458  0002EA  0E1F               	movlw	31
  3459  0002EC  6E2E               	movwf	menu@state^0,c
  3460  0002EE  0C1F               	retlw	31
  3461  0002F0                     l5381:
  3462                           
  3463                           ;Menu.c: 220:    if (LcLliure()) {
  3464  0002F0  EC05  F00E         	call	_LcLliure	;wreg free
  3465  0002F4  A0D8               	btfss	status,0,c
  3466  0002F6  0012               	return	
  3467                           
  3468                           ;Menu.c: 221:     LcNewString(UgetUserName(indexUsuari));
  3469  0002F8  5030               	movf	_indexUsuari^0,w,c
  3470  0002FA  EC9E  F00D         	call	_UgetUserName
  3471  0002FE  DA44               	call	PL40	;call to abstracted procedure
  3472  000300  ECFF  F00D         	call	_LcNewString	;wreg free
  3473                           
  3474                           ;Menu.c: 222:     TiResetTics(timerMenu);
  3475  000304  5032               	movf	_timerMenu^0,w,c
  3476  000306  EC79  F00D         	call	_TiResetTics
  3477                           
  3478                           ;Menu.c: 223:     state = 15;
  3479  00030A  0E0F               	movlw	15
  3480  00030C  6E2E               	movwf	menu@state^0,c
  3481  00030E  0C0F               	retlw	15
  3482  000310                     l5389:
  3483                           
  3484                           ;Menu.c: 227:    if (TiGetTics(timerMenu) > 2410) {
  3485  000310  5032               	movf	_timerMenu^0,w,c
  3486  000312  ECF5  F00C         	call	_TiGetTics
  3487  000316  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  3488  000318  0012               	return	
  3489  00031A  0E6B               	movlw	107
  3490  00031C  5C4A               	subwf	?_TiGetTics^0,w,c
  3491  00031E  0E09               	movlw	9
  3492  000320  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  3493  000322  E301 D756          	bc	l5267
  3494  000326  0012               	return	
  3495  000328                     l5393:
  3496                           
  3497                           ;Menu.c: 232:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3498  000328  EC05  F00E         	call	_LcLliure	;wreg free
  3499  00032C  E347               	bnc	l5459
  3500  00032E  BE69               	btfsc	_NovaTecla^0,7,c
  3501  000330  D045               	goto	l5459
  3502  000332  5069               	movf	_NovaTecla^0,w,c
  3503  000334  0A80               	xorlw	128
  3504  000336  0F76               	addlw	-138
  3505  000338  E241               	bc	l5459
  3506                           
  3507                           ;Menu.c: 233:     LcGotoXY(0,1);
  3508  00033A  DA23               	call	PL32	;call to abstracted procedure
  3509  00033C  EC9E  F00C         	call	_LcGotoXY
  3510                           
  3511                           ;Menu.c: 234:     horaTmp[0] = NovaTecla+48;
  3512  000340  5069               	movf	_NovaTecla^0,w,c
  3513  000342  0F30               	addlw	48
  3514  000344  6E41               	movwf	_horaTmp^0,c
  3515                           
  3516                           ;Menu.c: 235:     LcPutChar(horaTmp[0]);
  3517  000346  5041               	movf	_horaTmp^0,w,c
  3518  000348  ECC6  F00B         	call	_LcPutChar
  3519                           
  3520                           ;Menu.c: 236:     NovaTecla = -1;
  3521  00034C  6869               	setf	_NovaTecla^0,c
  3522                           
  3523                           ;Menu.c: 237:     state = 17;
  3524  00034E  0E11               	movlw	17
  3525  000350                     L1:
  3526  000350  6E2E               	movwf	menu@state^0,c
  3527                           
  3528                           ;Menu.c: 238:    }
  3529  000352  0012               	return	
  3530  000354                     L2:
  3531  000354  1869               	xorwf	_NovaTecla^0,w,c
  3532  000356  E101 D741          	bz	u5260
  3533  00035A  0012               	return	
  3534  00035C                     l5413:
  3535                           
  3536                           ;Menu.c: 244:    if (NovaTecla > -1 && NovaTecla < 10) {
  3537  00035C  BE69               	btfsc	_NovaTecla^0,7,c
  3538  00035E  D02E               	goto	l5459
  3539  000360  5069               	movf	_NovaTecla^0,w,c
  3540  000362  0A80               	xorlw	128
  3541  000364  0F76               	addlw	-138
  3542  000366  E22A               	bc	l5459
  3543                           
  3544                           ;Menu.c: 245:     horaTmp[1] = NovaTecla+48;
  3545  000368  5069               	movf	_NovaTecla^0,w,c
  3546  00036A  0F30               	addlw	48
  3547  00036C  6E42               	movwf	(_horaTmp+1)^0,c
  3548                           
  3549                           ;Menu.c: 246:     LcPutChar(horaTmp[1]);
  3550  00036E  5042               	movf	(_horaTmp+1)^0,w,c
  3551  000370  ECC6  F00B         	call	_LcPutChar
  3552                           
  3553                           ;Menu.c: 247:     NovaTecla = -1;
  3554  000374  6869               	setf	_NovaTecla^0,c
  3555                           
  3556                           ;Menu.c: 248:     LcPutChar(':');
  3557  000376  0E3A               	movlw	58
  3558  000378  ECC6  F00B         	call	_LcPutChar
  3559                           
  3560                           ;Menu.c: 249:     state = 18;
  3561  00037C  0E12               	movlw	18
  3562  00037E  D7E8               	goto	L1
  3563  000380                     l5431:
  3564                           
  3565                           ;Menu.c: 256:    if (NovaTecla > -1 && NovaTecla < 10) {
  3566  000380  BE69               	btfsc	_NovaTecla^0,7,c
  3567  000382  D01C               	goto	l5459
  3568  000384  5069               	movf	_NovaTecla^0,w,c
  3569  000386  0A80               	xorlw	128
  3570  000388  0F76               	addlw	-138
  3571  00038A  E218               	bc	l5459
  3572                           
  3573                           ;Menu.c: 257:     horaTmp[2] = NovaTecla+48;
  3574  00038C  5069               	movf	_NovaTecla^0,w,c
  3575  00038E  0F30               	addlw	48
  3576  000390  6E43               	movwf	(_horaTmp+2)^0,c
  3577                           
  3578                           ;Menu.c: 258:     LcPutChar(horaTmp[2]);
  3579  000392  5043               	movf	(_horaTmp+2)^0,w,c
  3580  000394  ECC6  F00B         	call	_LcPutChar
  3581                           
  3582                           ;Menu.c: 259:     NovaTecla = -1;
  3583  000398  6869               	setf	_NovaTecla^0,c
  3584                           
  3585                           ;Menu.c: 260:     state = 19;
  3586  00039A  0E13               	movlw	19
  3587  00039C  D7D9               	goto	L1
  3588  00039E                     l5447:
  3589                           
  3590                           ;Menu.c: 267:    if (NovaTecla > -1 && NovaTecla < 10) {
  3591  00039E  BE69               	btfsc	_NovaTecla^0,7,c
  3592  0003A0  D00D               	goto	l5459
  3593  0003A2  5069               	movf	_NovaTecla^0,w,c
  3594  0003A4  0A80               	xorlw	128
  3595  0003A6  0F76               	addlw	-138
  3596  0003A8  E209               	bc	l5459
  3597                           
  3598                           ;Menu.c: 268:     horaTmp[3] = NovaTecla+48;
  3599  0003AA  5069               	movf	_NovaTecla^0,w,c
  3600  0003AC  0F30               	addlw	48
  3601  0003AE  6E44               	movwf	(_horaTmp+3)^0,c
  3602                           
  3603                           ;Menu.c: 269:     LcPutChar(horaTmp[3]);
  3604  0003B0  5044               	movf	(_horaTmp+3)^0,w,c
  3605  0003B2  ECC6  F00B         	call	_LcPutChar
  3606                           
  3607                           ;Menu.c: 270:     NovaTecla = -1;
  3608  0003B6  6869               	setf	_NovaTecla^0,c
  3609                           
  3610                           ;Menu.c: 271:     state = 20;
  3611  0003B8  0E14               	movlw	20
  3612  0003BA  D7CA               	goto	L1
  3613  0003BC                     l5459:
  3614  0003BC  0E0A               	movlw	10
  3615  0003BE  D7CA               	goto	L2
  3616  0003C0                     l5463:
  3617                           
  3618                           ;Menu.c: 278:    if (NovaTecla == 11) {
  3619  0003C0  0E0B               	movlw	11
  3620  0003C2  1869               	xorwf	_NovaTecla^0,w,c
  3621  0003C4  E1FB               	bnz	l5459
  3622                           
  3623                           ;Menu.c: 279:     HActualitzaHora(horaTmp);
  3624  0003C6  0E41               	movlw	low _horaTmp
  3625  0003C8  6E4A               	movwf	HActualitzaHora@nova^0,c
  3626  0003CA  EC84  F00C         	call	_HActualitzaHora	;wreg free
  3627                           
  3628                           ;Menu.c: 280:     NovaTecla = -1;
  3629  0003CE  6869               	setf	_NovaTecla^0,c
  3630  0003D0  D705               	goto	u5260
  3631  0003D2                     l5475:
  3632                           
  3633                           ;Menu.c: 288:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3634  0003D2  0E0A               	movlw	10
  3635  0003D4  1869               	xorwf	_NovaTecla^0,w,c
  3636  0003D6  E103               	bnz	u5640
  3637  0003D8  EC05  F00E         	call	_LcLliure	;wreg free
  3638  0003DC  E203               	bc	u5650
  3639  0003DE                     u5640:
  3640  0003DE  ECD5  F00D         	call	_checkHoraAcabat	;wreg free
  3641  0003E2  E307               	bnc	l5487
  3642  0003E4                     u5650:
  3643                           
  3644                           ;Menu.c: 289:     LcClear();
  3645  0003E4  EC2C  F00D         	call	_LcClear	;wreg free
  3646                           
  3647                           ;Menu.c: 290:     JendGame();
  3648  0003E8  EC7E  F00E         	call	_JendGame	;wreg free
  3649                           
  3650                           ;Menu.c: 291:     state = 22;
  3651  0003EC  0E16               	movlw	22
  3652  0003EE  6E2E               	movwf	menu@state^0,c
  3653                           
  3654                           ;Menu.c: 292:    }
  3655  0003F0  0C16               	retlw	22
  3656  0003F2                     l5487:
  3657  0003F2  5069               	movf	_NovaTecla^0,w,c
  3658  0003F4  0A80               	xorlw	128
  3659  0003F6  0F7F               	addlw	-129
  3660  0003F8  E309               	bnc	l5497
  3661  0003FA  5069               	movf	_NovaTecla^0,w,c
  3662  0003FC  0A80               	xorlw	128
  3663  0003FE  0F76               	addlw	-138
  3664  000400  E205               	bc	l5497
  3665                           
  3666                           ;Menu.c: 294:     JnovaTecla(NovaTecla);
  3667  000402  5069               	movf	_NovaTecla^0,w,c
  3668  000404  EC1C  F00E         	call	_JnovaTecla
  3669                           
  3670                           ;Menu.c: 295:     NovaTecla = -1;
  3671  000408  6869               	setf	_NovaTecla^0,c
  3672  00040A  D747               	goto	l5347
  3673  00040C                     l5497:
  3674  00040C  BE67               	btfsc	_novaDireccio^0,7,c
  3675  00040E  0012               	return	
  3676                           
  3677                           ;Menu.c: 299:     JnovaDireccio(novaDireccio);
  3678  000410  5067               	movf	_novaDireccio^0,w,c
  3679  000412  EC20  F00E         	call	_JnovaDireccio
  3680                           
  3681                           ;Menu.c: 300:     novaDireccio = -1;
  3682  000416  6867               	setf	_novaDireccio^0,c
  3683  000418  D740               	goto	l5347
  3684  00041A                     l5505:
  3685                           
  3686                           ;Menu.c: 305:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3687  00041A  EC7A  F00E         	call	_SIOHaAcabatPuntuacions	;wreg free
  3688  00041E  0900               	iorlw	0
  3689  000420  B4D8               	btfsc	status,2,c
  3690  000422  0012               	return	
  3691  000424  0E0B               	movlw	11
  3692  000426  D796               	goto	L2
  3693  000428                     l5511:
  3694                           
  3695                           ;Menu.c: 310:    if (LcLliure()) {
  3696  000428  EC05  F00E         	call	_LcLliure	;wreg free
  3697  00042C  A0D8               	btfss	status,0,c
  3698  00042E  0012               	return	
  3699                           
  3700                           ;Menu.c: 311:     LcGotoXY(0,0);
  3701  000430  0E00               	movlw	0
  3702  000432  6E52               	movwf	LcGotoXY@Row^0,c
  3703  000434  EC9E  F00C         	call	_LcGotoXY
  3704                           
  3705                           ;Menu.c: 312:     LcNewString(getArrayShowUsers(menuDalt));
  3706  000438  5031               	movf	_menuDalt^0,w,c
  3707  00043A  EC5D  F00D         	call	_getArrayShowUsers
  3708  00043E  D99C               	call	PL28	;call to abstracted procedure
  3709  000440  ECFF  F00D         	call	_LcNewString	;wreg free
  3710                           
  3711                           ;Menu.c: 313:     menuDalt++;
  3712  000444  2A31               	incf	_menuDalt^0,f,c
  3713                           
  3714                           ;Menu.c: 314:     state = 24;
  3715  000446  0E18               	movlw	24
  3716  000448  6E2E               	movwf	menu@state^0,c
  3717  00044A  0C18               	retlw	24
  3718  00044C                     l5519:
  3719                           
  3720                           ;Menu.c: 318:    if (LcLliure()) {
  3721  00044C  EC05  F00E         	call	_LcLliure	;wreg free
  3722  000450  A0D8               	btfss	status,0,c
  3723  000452  0012               	return	
  3724                           
  3725                           ;Menu.c: 319:     if (menuDalt < UgetNumUsuaris()){
  3726  000454  EC70  F00E         	call	_UgetNumUsuaris	;wreg free
  3727  000458  6031               	cpfslt	_menuDalt^0,c
  3728  00045A  D00B               	goto	l607
  3729                           
  3730                           ;Menu.c: 320:       LcGotoXY(0,1);
  3731  00045C  D992               	call	PL32	;call to abstracted procedure
  3732  00045E  EC9E  F00C         	call	_LcGotoXY
  3733                           
  3734                           ;Menu.c: 321:       LcNewString(getArrayShowUsers(menuDalt));
  3735  000462  5031               	movf	_menuDalt^0,w,c
  3736  000464  EC5D  F00D         	call	_getArrayShowUsers
  3737  000468  D987               	call	PL28	;call to abstracted procedure
  3738  00046A  ECFF  F00D         	call	_LcNewString	;wreg free
  3739                           
  3740                           ;Menu.c: 322:       menuDalt++;
  3741  00046E  2A31               	incf	_menuDalt^0,f,c
  3742                           
  3743                           ;Menu.c: 323:     } else {
  3744  000470  D001               	goto	l5527
  3745  000472                     l607:
  3746                           
  3747                           ;Menu.c: 324:       menuDalt = 0;
  3748  000472  6A31               	clrf	_menuDalt^0,c
  3749  000474                     l5527:
  3750                           
  3751                           ;Menu.c: 326:     state = 25;
  3752  000474  0E19               	movlw	25
  3753  000476  6E2E               	movwf	menu@state^0,c
  3754  000478  0C19               	retlw	25
  3755  00047A                     l5529:
  3756                           
  3757                           ;Menu.c: 330:    if (LcLliure()) {
  3758  00047A  EC05  F00E         	call	_LcLliure	;wreg free
  3759  00047E  A0D8               	btfss	status,0,c
  3760  000480  0012               	return	
  3761                           
  3762                           ;Menu.c: 331:     if (menuDalt == UgetNumUsuaris()){
  3763  000482  EC70  F00E         	call	_UgetNumUsuaris	;wreg free
  3764  000486  1831               	xorwf	_menuDalt^0,w,c
  3765  000488  E101               	bnz	l5535
  3766                           
  3767                           ;Menu.c: 332:       menuDalt = 0;
  3768  00048A  6A31               	clrf	_menuDalt^0,c
  3769  00048C                     l5535:
  3770                           
  3771                           ;Menu.c: 334:     LcGotoXY(16,0);
  3772  00048C  D98A               	call	PL74	;call to abstracted procedure
  3773  00048E  EC9E  F00C         	call	_LcGotoXY
  3774                           
  3775                           ;Menu.c: 335:     LcNewString(getArrayShowUsers(menuDalt));
  3776  000492  5031               	movf	_menuDalt^0,w,c
  3777  000494  EC5D  F00D         	call	_getArrayShowUsers
  3778  000498  D96F               	call	PL28	;call to abstracted procedure
  3779  00049A  ECFF  F00D         	call	_LcNewString	;wreg free
  3780                           
  3781                           ;Menu.c: 336:     state = 26;
  3782  00049E  0E1A               	movlw	26
  3783  0004A0  6E2E               	movwf	menu@state^0,c
  3784  0004A2  0C1A               	retlw	26
  3785  0004A4                     l5539:
  3786                           
  3787                           ;Menu.c: 340:    if (LcLliure()) {
  3788  0004A4  EC05  F00E         	call	_LcLliure	;wreg free
  3789  0004A8  A0D8               	btfss	status,0,c
  3790  0004AA  0012               	return	
  3791                           
  3792                           ;Menu.c: 341:     if (menuDalt+1 < UgetNumUsuaris()){
  3793  0004AC  EC70  F00E         	call	_UgetNumUsuaris	;wreg free
  3794  0004B0  6E59               	movwf	??_menu^0,c
  3795  0004B2  6A5A               	clrf	(??_menu+1)^0,c
  3796  0004B4  5031               	movf	_menuDalt^0,w,c
  3797  0004B6  6E5B               	movwf	(??_menu+2)^0,c
  3798  0004B8  6A5C               	clrf	(??_menu+3)^0,c
  3799  0004BA  2A5B               	incf	(??_menu+2)^0,f,c
  3800  0004BC  0E00               	movlw	0
  3801  0004BE  225C               	addwfc	(??_menu+3)^0,f,c
  3802  0004C0  5059               	movf	??_menu^0,w,c
  3803  0004C2  5C5B               	subwf	(??_menu+2)^0,w,c
  3804  0004C4  505C               	movf	(??_menu+3)^0,w,c
  3805  0004C6  0A80               	xorlw	128
  3806  0004C8  6E5D               	movwf	(??_menu+4)^0,c
  3807  0004CA  505A               	movf	(??_menu+1)^0,w,c
  3808  0004CC  0A80               	xorlw	128
  3809  0004CE  585D               	subwfb	(??_menu+4)^0,w,c
  3810  0004D0  E209               	bc	l5545
  3811                           
  3812                           ;Menu.c: 342:       LcGotoXY(16,1);
  3813  0004D2  D964               	call	PL72	;call to abstracted procedure
  3814  0004D4  EC9E  F00C         	call	_LcGotoXY
  3815                           
  3816                           ;Menu.c: 343:       LcNewString(getArrayShowUsers(menuDalt+1));
  3817  0004D8  2831               	incf	_menuDalt^0,w,c
  3818  0004DA  EC5D  F00D         	call	_getArrayShowUsers
  3819  0004DE  D94C               	call	PL28	;call to abstracted procedure
  3820  0004E0  ECFF  F00D         	call	_LcNewString	;wreg free
  3821  0004E4                     l5545:
  3822                           
  3823                           ;Menu.c: 345:     state = 27;
  3824  0004E4  0E1B               	movlw	27
  3825  0004E6  6E2E               	movwf	menu@state^0,c
  3826  0004E8  0C1B               	retlw	27
  3827  0004EA                     l5547:
  3828                           
  3829                           ;Menu.c: 349:    if (TiGetTics(timerMenu) > 1205) {
  3830  0004EA  5032               	movf	_timerMenu^0,w,c
  3831  0004EC  ECF5  F00C         	call	_TiGetTics
  3832  0004F0  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  3833  0004F2  D008               	goto	l5551
  3834  0004F4  0EB6               	movlw	182
  3835  0004F6  5C4A               	subwf	?_TiGetTics^0,w,c
  3836  0004F8  0E04               	movlw	4
  3837  0004FA  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  3838  0004FC  E303               	bnc	l5551
  3839                           
  3840                           ;Menu.c: 350:     state = 29;
  3841  0004FE  0E1D               	movlw	29
  3842  000500  6E2E               	movwf	menu@state^0,c
  3843                           
  3844                           ;Menu.c: 351:    }
  3845  000502  0C1D               	retlw	29
  3846  000504                     l5551:
  3847  000504  0E0B               	movlw	11
  3848  000506  1869               	xorwf	_NovaTecla^0,w,c
  3849  000508  A4D8               	btfss	status,2,c
  3850  00050A  0012               	return	
  3851  00050C                     u5790:
  3852                           
  3853                           ;Menu.c: 353:     menuDalt = 0;
  3854  00050C  6A31               	clrf	_menuDalt^0,c
  3855  00050E  D666               	goto	u5260
  3856  000510                     l5557:
  3857                           
  3858                           ;Menu.c: 358:    if (pos > 15) {
  3859  000510  0E0F               	movlw	15
  3860  000512  642F               	cpfsgt	_pos^0,c
  3861  000514  D005               	goto	l5563
  3862                           
  3863                           ;Menu.c: 359:     LcClear();
  3864  000516  EC2C  F00D         	call	_LcClear	;wreg free
  3865  00051A                     l5561:
  3866                           
  3867                           ;Menu.c: 360:     state = 23;
  3868  00051A  0E17               	movlw	23
  3869  00051C  6E2E               	movwf	menu@state^0,c
  3870                           
  3871                           ;Menu.c: 361:    }
  3872  00051E  0C17               	retlw	23
  3873  000520                     l5563:
  3874  000520  0E10               	movlw	16
  3875  000522  602F               	cpfslt	_pos^0,c
  3876  000524  0C10               	retlw	16
  3877                           
  3878                           ;Menu.c: 363:     TiResetTics(timerMenu);
  3879  000526  5032               	movf	_timerMenu^0,w,c
  3880  000528  EC79  F00D         	call	_TiResetTics
  3881                           
  3882                           ;Menu.c: 364:     LcScroll();
  3883  00052C  EC61  F00E         	call	_LcScroll	;wreg free
  3884                           
  3885                           ;Menu.c: 365:     pos++;
  3886  000530  2A2F               	incf	_pos^0,f,c
  3887  000532                     l5571:
  3888                           
  3889                           ;Menu.c: 366:     state = 28;
  3890  000532  0E1C               	movlw	28
  3891  000534  6E2E               	movwf	menu@state^0,c
  3892  000536  0C1C               	retlw	28
  3893  000538                     l5573:
  3894                           
  3895                           ;Menu.c: 370:    if (LcLliure()) {
  3896  000538  EC05  F00E         	call	_LcLliure	;wreg free
  3897  00053C  A0D8               	btfss	status,0,c
  3898  00053E  0012               	return	
  3899                           
  3900                           ;Menu.c: 371:     TiResetTics(timerMenu);
  3901  000540  5032               	movf	_timerMenu^0,w,c
  3902  000542  EC79  F00D         	call	_TiResetTics
  3903                           
  3904                           ;Menu.c: 372:     pos = 0;
  3905  000546  6A2F               	clrf	_pos^0,c
  3906  000548  D7F4               	goto	l5571
  3907  00054A                     l5581:
  3908                           
  3909                           ;Menu.c: 377:    if (UshowUsersCalculat()) {
  3910  00054A  ECDB  F00D         	call	_UshowUsersCalculat	;wreg free
  3911  00054E  E2E5               	bc	l5561
  3912  000550  0012               	return	
  3913  000552                     l5585:
  3914                           
  3915                           ;Menu.c: 382:    if (LcLliure()) {
  3916  000552  EC05  F00E         	call	_LcLliure	;wreg free
  3917  000556  A0D8               	btfss	status,0,c
  3918  000558  0012               	return	
  3919                           
  3920                           ;Menu.c: 383:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  3921  00055A  5031               	movf	_menuDalt^0,w,c
  3922  00055C  ECE1  F00D         	call	_UgetTop5
  3923  000560  EC9E  F00D         	call	_UgetUserName
  3924  000564  D911               	call	PL40	;call to abstracted procedure
  3925  000566  ECFF  F00D         	call	_LcNewString	;wreg free
  3926                           
  3927                           ;Menu.c: 384:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  3928  00056A  5031               	movf	_menuDalt^0,w,c
  3929  00056C  ECE1  F00D         	call	_UgetTop5
  3930  000570  ECE7  F00D         	call	_UgetScore
  3931  000574  ECF9  F00D         	call	_CToAConverteix
  3932                           
  3933                           ;Menu.c: 385:     state = 32;
  3934  000578  0E20               	movlw	32
  3935  00057A  6E2E               	movwf	menu@state^0,c
  3936  00057C  0C20               	retlw	32
  3937  00057E                     l5591:
  3938                           
  3939                           ;Menu.c: 389:    if (CToAHaAcabat() == 250 && LcLliure()) {
  3940  00057E  EC82  F00E         	call	_CToAHaAcabat	;wreg free
  3941  000582  0AFA               	xorlw	250
  3942  000584  A4D8               	btfss	status,2,c
  3943  000586  0012               	return	
  3944  000588  EC05  F00E         	call	_LcLliure	;wreg free
  3945  00058C  A0D8               	btfss	status,0,c
  3946  00058E  0012               	return	
  3947                           
  3948                           ;Menu.c: 390:     LcPutChar(':');
  3949  000590  0E3A               	movlw	58
  3950  000592  ECC6  F00B         	call	_LcPutChar
  3951                           
  3952                           ;Menu.c: 391:     LcGotoXY(0,1);
  3953  000596  D8F5               	call	PL32	;call to abstracted procedure
  3954  000598  EC9E  F00C         	call	_LcGotoXY
  3955                           
  3956                           ;Menu.c: 392:     LcNewString(CToAobtenir());
  3957  00059C  EC80  F00E         	call	_CToAobtenir	;wreg free
  3958  0005A0  D8F8               	call	PL48	;call to abstracted procedure
  3959  0005A2  ECFF  F00D         	call	_LcNewString	;wreg free
  3960                           
  3961                           ;Menu.c: 393:     menuDalt++;
  3962  0005A6  2A31               	incf	_menuDalt^0,f,c
  3963                           
  3964                           ;Menu.c: 394:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  3965  0005A8  0E05               	movlw	5
  3966  0005AA  1831               	xorwf	_menuDalt^0,w,c
  3967  0005AC  E005               	bz	u5880
  3968  0005AE  5031               	movf	_menuDalt^0,w,c
  3969  0005B0  ECE1  F00D         	call	_UgetTop5
  3970  0005B4  0AFF               	xorlw	255
  3971  0005B6  E101               	bnz	l5605
  3972  0005B8                     u5880:
  3973  0005B8  6A31               	clrf	_menuDalt^0,c
  3974  0005BA                     l5605:
  3975                           
  3976                           ;Menu.c: 395:     state = 34;
  3977  0005BA  0E22               	movlw	34
  3978  0005BC  6E2E               	movwf	menu@state^0,c
  3979  0005BE  0C22               	retlw	34
  3980  0005C0                     l5607:
  3981                           
  3982                           ;Menu.c: 399:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  3983  0005C0  5031               	movf	_menuDalt^0,w,c
  3984  0005C2  ECE1  F00D         	call	_UgetTop5
  3985  0005C6  0AFF               	xorlw	255
  3986  0005C8  E104               	bnz	u5900
  3987  0005CA  0E05               	movlw	5
  3988  0005CC  1831               	xorwf	_menuDalt^0,w,c
  3989  0005CE  B4D8               	btfsc	status,2,c
  3990  0005D0  0012               	return	
  3991  0005D2                     u5900:
  3992  0005D2  EC05  F00E         	call	_LcLliure	;wreg free
  3993  0005D6  A0D8               	btfss	status,0,c
  3994  0005D8  0012               	return	
  3995                           
  3996                           ;Menu.c: 400:     LcGotoXY(16,0);
  3997  0005DA  D8E3               	call	PL74	;call to abstracted procedure
  3998  0005DC  EC9E  F00C         	call	_LcGotoXY
  3999                           
  4000                           ;Menu.c: 401:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4001  0005E0  5031               	movf	_menuDalt^0,w,c
  4002  0005E2  ECE1  F00D         	call	_UgetTop5
  4003  0005E6  EC9E  F00D         	call	_UgetUserName
  4004  0005EA  D8CE               	call	PL40	;call to abstracted procedure
  4005  0005EC  ECFF  F00D         	call	_LcNewString	;wreg free
  4006                           
  4007                           ;Menu.c: 402:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4008  0005F0  5031               	movf	_menuDalt^0,w,c
  4009  0005F2  ECE1  F00D         	call	_UgetTop5
  4010  0005F6  ECE7  F00D         	call	_UgetScore
  4011  0005FA  ECF9  F00D         	call	_CToAConverteix
  4012                           
  4013                           ;Menu.c: 403:     state = 35;
  4014  0005FE  0E23               	movlw	35
  4015  000600  6E2E               	movwf	menu@state^0,c
  4016  000602  0C23               	retlw	35
  4017  000604                     l5617:
  4018                           
  4019                           ;Menu.c: 407:    if (LcLliure() && CToAHaAcabat() == 250) {
  4020  000604  EC05  F00E         	call	_LcLliure	;wreg free
  4021  000608  A0D8               	btfss	status,0,c
  4022  00060A  0012               	return	
  4023  00060C  EC82  F00E         	call	_CToAHaAcabat	;wreg free
  4024  000610  0AFA               	xorlw	250
  4025  000612  A4D8               	btfss	status,2,c
  4026  000614  0012               	return	
  4027                           
  4028                           ;Menu.c: 408:     LcPutChar(':');
  4029  000616  0E3A               	movlw	58
  4030  000618  ECC6  F00B         	call	_LcPutChar
  4031                           
  4032                           ;Menu.c: 409:     LcGotoXY(16,1);
  4033  00061C  D8BF               	call	PL72	;call to abstracted procedure
  4034  00061E  EC9E  F00C         	call	_LcGotoXY
  4035                           
  4036                           ;Menu.c: 410:     LcNewString(CToAobtenir());
  4037  000622  EC80  F00E         	call	_CToAobtenir	;wreg free
  4038  000626  D8B5               	call	PL48	;call to abstracted procedure
  4039  000628  ECFF  F00D         	call	_LcNewString	;wreg free
  4040                           
  4041                           ;Menu.c: 411:     pos = 0;
  4042  00062C  6A2F               	clrf	_pos^0,c
  4043                           
  4044                           ;Menu.c: 412:     TiResetTics(timerMenu);
  4045  00062E  5032               	movf	_timerMenu^0,w,c
  4046  000630  EC79  F00D         	call	_TiResetTics
  4047  000634                     l5629:
  4048                           
  4049                           ;Menu.c: 413:     state = 37;
  4050  000634  0E25               	movlw	37
  4051  000636  6E2E               	movwf	menu@state^0,c
  4052  000638  0C25               	retlw	37
  4053  00063A                     l5631:
  4054                           
  4055                           ;Menu.c: 417:    if (NovaTecla == 11 && LcLliure()) {
  4056  00063A  0E0B               	movlw	11
  4057  00063C  1869               	xorwf	_NovaTecla^0,w,c
  4058  00063E  E104               	bnz	l5639
  4059  000640  EC05  F00E         	call	_LcLliure	;wreg free
  4060  000644  E301 D762          	bc	u5790
  4061  000648                     l5639:
  4062  000648  5032               	movf	_timerMenu^0,w,c
  4063  00064A  ECF5  F00C         	call	_TiGetTics
  4064  00064E  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  4065  000650  0012               	return	
  4066  000652  0E91               	movlw	145
  4067  000654  5C4A               	subwf	?_TiGetTics^0,w,c
  4068  000656  0E01               	movlw	1
  4069  000658  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  4070  00065A  A0D8               	btfss	status,0,c
  4071  00065C  0012               	return	
  4072  00065E  EC05  F00E         	call	_LcLliure	;wreg free
  4073  000662  A0D8               	btfss	status,0,c
  4074  000664  0012               	return	
  4075                           
  4076                           ;Menu.c: 422:     state = 38;
  4077  000666  0E26               	movlw	38
  4078  000668  6E2E               	movwf	menu@state^0,c
  4079  00066A  0C26               	retlw	38
  4080  00066C                     l5645:
  4081                           
  4082                           ;Menu.c: 426:    if (pos < 16) {
  4083  00066C  0E10               	movlw	16
  4084  00066E  602F               	cpfslt	_pos^0,c
  4085  000670  D007               	goto	l5655
  4086                           
  4087                           ;Menu.c: 427:     TiResetTics(timerMenu);
  4088  000672  5032               	movf	_timerMenu^0,w,c
  4089  000674  EC79  F00D         	call	_TiResetTics
  4090                           
  4091                           ;Menu.c: 428:     LcScroll();
  4092  000678  EC61  F00E         	call	_LcScroll	;wreg free
  4093                           
  4094                           ;Menu.c: 429:     pos++;
  4095  00067C  2A2F               	incf	_pos^0,f,c
  4096  00067E  D7DA               	goto	l5629
  4097  000680                     l5655:
  4098  000680  0E0F               	movlw	15
  4099  000682  642F               	cpfsgt	_pos^0,c
  4100  000684  0C0F               	retlw	15
  4101                           
  4102                           ;Menu.c: 433:     LcClear();
  4103  000686  EC2C  F00D         	call	_LcClear	;wreg free
  4104  00068A  D62F               	goto	l5379
  4105  00068C                     l5663:
  4106  00068C  502E               	movf	menu@state^0,w,c
  4107  00068E  6E59               	movwf	??_menu^0,c
  4108  000690  6A5A               	clrf	(??_menu+1)^0,c
  4109                           
  4110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4111                           ; Switch size 1, requested type "space"
  4112                           ; Number of cases is 1, Range of values is 0 to 0
  4113                           ; switch strategies available:
  4114                           ; Name         Instructions Cycles
  4115                           ; simple_byte            4     3 (average)
  4116                           ;	Chosen strategy is simple_byte
  4117  000692  505A               	movf	(??_menu+1)^0,w,c
  4118  000694  A4D8               	btfss	status,2,c
  4119  000696  0012               	return	
  4120                           
  4121                           ; Switch size 1, requested type "space"
  4122                           ; Number of cases is 37, Range of values is 0 to 38
  4123                           ; switch strategies available:
  4124                           ; Name         Instructions Cycles
  4125                           ; simple_byte          112    57 (average)
  4126                           ;	Chosen strategy is simple_byte
  4127  000698  5059               	movf	??_menu^0,w,c
  4128  00069A  E101 D4CD          	bz	l5117
  4129  00069E  0A01               	xorlw	1	; case 1
  4130  0006A0  E101 D4D5          	bz	l5123
  4131  0006A4  0A03               	xorlw	3	; case 2
  4132  0006A6  E101 D4E3          	bz	l5133
  4133  0006AA  0A01               	xorlw	1	; case 3
  4134  0006AC  E101 D4F0          	bz	l511
  4135  0006B0  0A07               	xorlw	7	; case 4
  4136  0006B2  E101 D4FA          	bz	l5153
  4137  0006B6  0A01               	xorlw	1	; case 5
  4138  0006B8  E101 D507          	bz	l5161
  4139  0006BC  0A03               	xorlw	3	; case 6
  4140  0006BE  E101 D513          	bz	l5171
  4141  0006C2  0A01               	xorlw	1	; case 7
  4142  0006C4  E101 D526          	bz	l5185
  4143  0006C8  0A0F               	xorlw	15	; case 8
  4144  0006CA  E101 D540          	bz	l5213
  4145  0006CE  0A01               	xorlw	1	; case 9
  4146  0006D0  E101 D553          	bz	l5227
  4147  0006D4  0A03               	xorlw	3	; case 10
  4148  0006D6  E101 D56C          	bz	l5257
  4149  0006DA  0A01               	xorlw	1	; case 11
  4150  0006DC  E101 D573          	bz	l538
  4151  0006E0  0A07               	xorlw	7	; case 12
  4152  0006E2  E101 D586          	bz	l5279
  4153  0006E6  0A01               	xorlw	1	; case 13
  4154  0006E8  E101 D58F          	bz	l5291
  4155  0006EC  0A03               	xorlw	3	; case 14
  4156  0006EE  E101 D5FF          	bz	l5381
  4157  0006F2  0A01               	xorlw	1	; case 15
  4158  0006F4  E101 D60C          	bz	l5389
  4159  0006F8  0A1F               	xorlw	31	; case 16
  4160  0006FA  E101 D615          	bz	l5393
  4161  0006FE  0A01               	xorlw	1	; case 17
  4162  000700  E101 D62C          	bz	l5413
  4163  000704  0A03               	xorlw	3	; case 18
  4164  000706  E101 D63B          	bz	l5431
  4165  00070A  0A01               	xorlw	1	; case 19
  4166  00070C  E101 D647          	bz	l5447
  4167  000710  0A07               	xorlw	7	; case 20
  4168  000712  E101 D655          	bz	l5463
  4169  000716  0A01               	xorlw	1	; case 21
  4170  000718  E101 D65B          	bz	l5475
  4171  00071C  0A03               	xorlw	3	; case 22
  4172  00071E  E101 D67C          	bz	l5505
  4173  000722  0A01               	xorlw	1	; case 23
  4174  000724  E101 D680          	bz	l5511
  4175  000728  0A0F               	xorlw	15	; case 24
  4176  00072A  E101 D68F          	bz	l5519
  4177  00072E  0A01               	xorlw	1	; case 25
  4178  000730  E101 D6A3          	bz	l5529
  4179  000734  0A03               	xorlw	3	; case 26
  4180  000736  E101 D6B5          	bz	l5539
  4181  00073A  0A01               	xorlw	1	; case 27
  4182  00073C  E101 D6FC          	bz	l5573
  4183  000740  0A07               	xorlw	7	; case 28
  4184  000742  E101 D6D2          	bz	l5547
  4185  000746  0A01               	xorlw	1	; case 29
  4186  000748  E101 D6E2          	bz	l5557
  4187  00074C  0A03               	xorlw	3	; case 30
  4188  00074E  E101 D6FC          	bz	l5581
  4189  000752  0A01               	xorlw	1	; case 31
  4190  000754  E101 D6FD          	bz	l5585
  4191  000758  0A3F               	xorlw	63	; case 32
  4192  00075A  E101 D710          	bz	l5591
  4193  00075E  0A02               	xorlw	2	; case 34
  4194  000760  E101 D72E          	bz	l5607
  4195  000764  0A01               	xorlw	1	; case 35
  4196  000766  E101 D74D          	bz	l5617
  4197  00076A  0A06               	xorlw	6	; case 37
  4198  00076C  E101 D765          	bz	l5631
  4199  000770  0A03               	xorlw	3	; case 38
  4200  000772  E101 D77B          	bz	l5645
  4201  000776  0012               	return		;funcret
  4202  000778                     __end_of_menu:
  4203                           	callstack 0
  4204  000778                     PL28:
  4205                           	callstack 24
  4206  000778  C04A  F04D         	movff	?_getArrayShowUsers,LcNewString@new_s
  4207  00077C  C04B  F04E         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4208  000780  0012               	return	
  4209  000782                     __end_ofPL28:
  4210                           	callstack 0
  4211  000782                     PL32:
  4212                           	callstack 24
  4213  000782  0E01               	movlw	1
  4214  000784  6E52               	movwf	LcGotoXY@Row^0,c
  4215  000786  0C00               	retlw	0
  4216  000788                     __end_ofPL32:
  4217                           	callstack 0
  4218  000788                     PL40:
  4219                           	callstack 24
  4220  000788  C04A  F04D         	movff	?_UgetUserName,LcNewString@new_s
  4221  00078C  C04B  F04E         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4222  000790  0012               	return	
  4223  000792                     __end_ofPL40:
  4224                           	callstack 0
  4225  000792                     PL48:
  4226                           	callstack 24
  4227  000792  6E59               	movwf	??_menu^0,c
  4228  000794  C059  F04D         	movff	??_menu,LcNewString@new_s
  4229  000798  6A4E               	clrf	(LcNewString@new_s+1)^0,c
  4230  00079A  0012               	return	
  4231  00079C                     __end_ofPL48:
  4232                           	callstack 0
  4233  00079C                     PL72:
  4234                           	callstack 24
  4235  00079C  0E01               	movlw	1
  4236  00079E  6E52               	movwf	LcGotoXY@Row^0,c
  4237  0007A0  0C10               	retlw	16
  4238  0007A2                     __end_ofPL72:
  4239                           	callstack 0
  4240  0007A2                     PL74:
  4241                           	callstack 24
  4242  0007A2  0E00               	movlw	0
  4243  0007A4  6E52               	movwf	LcGotoXY@Row^0,c
  4244  0007A6  0C10               	retlw	16
  4245  0007A8                     __end_ofPL74:
  4246                           	callstack 0
  4247  0007A8                     PL76:
  4248                           	callstack 24
  4249  0007A8  6869               	setf	_NovaTecla^0,c
  4250  0007AA  6868               	setf	_novaLletra^0,c
  4251  0007AC  6A33               	clrf	_tmp^0,c
  4252  0007AE  0012               	return	
  4253  0007B0                     __end_ofPL76:
  4254                           	callstack 0
  4255  0007B0                     PL78:
  4256                           	callstack 24
  4257  0007B0  2A33               	incf	_tmp^0,f,c
  4258  0007B2  6869               	setf	_NovaTecla^0,c
  4259  0007B4  6868               	setf	_novaLletra^0,c
  4260  0007B6  0012               	return	
  4261  0007B8                     __end_ofPL78:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _getArrayShowUsers *****************
  4265 ;; Defined at:
  4266 ;;		line 63 in file "Usuaris.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  quin            1    wreg     unsigned char 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  quin            1    7[COMRAM] unsigned char 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  2    5[COMRAM] PTR unsigned char 
  4273 ;; Registers used:
  4274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1
  4280 ;;      Params:         2       0       0
  4281 ;;      Locals:         1       0       0
  4282 ;;      Temps:          0       0       0
  4283 ;;      Totals:         3       0       0
  4284 ;;Total ram usage:        3 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; Hardware stack levels required when called: 2
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_menu
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text19
  4295  001ABA                     __ptext19:
  4296                           	callstack 0
  4297  001ABA                     _getArrayShowUsers:
  4298                           	callstack 27
  4299                           
  4300                           ;incstack = 0
  4301                           ;getArrayShowUsers@quin stored from wreg
  4302  001ABA  6E4C               	movwf	getArrayShowUsers@quin^0,c
  4303                           
  4304                           ;Usuaris.c: 65:     return usuaris[arrayShowUsers[quin]].username;
  4305  001ABC  504C               	movf	getArrayShowUsers@quin^0,w,c
  4306  001ABE  0F01               	addlw	low _arrayShowUsers
  4307  001AC0  6ED9               	movwf	fsr2l,c
  4308  001AC2  6ADA               	clrf	fsr2h,c
  4309  001AC4  50DF               	movf	indf2,w,c
  4310  001AC6  0D17               	mullw	23
  4311  001AC8  0E00               	movlw	low _usuaris
  4312  001ACA  24F3               	addwf	243,w,c
  4313  001ACC  6E4A               	movwf	?_getArrayShowUsers^0,c
  4314  001ACE  0E01               	movlw	high _usuaris
  4315  001AD0  20F4               	addwfc	prodh,w,c
  4316  001AD2  6E4B               	movwf	(?_getArrayShowUsers+1)^0,c
  4317  001AD4  0012               	return		;funcret
  4318  001AD6                     __end_of_getArrayShowUsers:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _checkHoraAcabat *****************
  4322 ;; Defined at:
  4323 ;;		line 42 in file "Hora.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;		None               void
  4330 ;; Registers used:
  4331 ;;		status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1
  4337 ;;      Params:         0       0       0
  4338 ;;      Locals:         0       0       0
  4339 ;;      Temps:          0       0       0
  4340 ;;      Totals:         0       0       0
  4341 ;;Total ram usage:        0 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 2
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_menu
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text20
  4352  001BAA                     __ptext20:
  4353                           	callstack 0
  4354  001BAA                     _checkHoraAcabat:
  4355                           	callstack 27
  4356                           
  4357                           ;Hora.c: 43:     return tempsAcabat;
  4358                           
  4359                           ;incstack = 0
  4360  001BAA  B676               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4361  001BAC  D002               	goto	l2215
  4362  001BAE  90D8               	bcf	status,0,c
  4363  001BB0  0012               	return	
  4364  001BB2                     l2215:
  4365  001BB2  80D8               	bsf	status,0,c
  4366  001BB4  0012               	return		;funcret
  4367  001BB6                     __end_of_checkHoraAcabat:
  4368                           	callstack 0
  4369                           
  4370 ;; *************** function _calculateShowUsers *****************
  4371 ;; Defined at:
  4372 ;;		line 149 in file "Usuaris.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		None
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1
  4386 ;;      Params:         0       0       0
  4387 ;;      Locals:         0       0       0
  4388 ;;      Temps:          0       0       0
  4389 ;;      Totals:         0       0       0
  4390 ;;Total ram usage:        0 bytes
  4391 ;; Hardware stack levels used: 1
  4392 ;; Hardware stack levels required when called: 2
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		_menu
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text21
  4401  001CDC                     __ptext21:
  4402                           	callstack 0
  4403  001CDC                     _calculateShowUsers:
  4404                           	callstack 27
  4405                           
  4406                           ;Usuaris.c: 150:     do_showUsers = 1;
  4407                           
  4408                           ;incstack = 0
  4409  001CDC  8877               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4410  001CDE  0012               	return		;funcret
  4411  001CE0                     __end_of_calculateShowUsers:
  4412                           	callstack 0
  4413                           
  4414 ;; *************** function _UshowUsersCalculat *****************
  4415 ;; Defined at:
  4416 ;;		line 152 in file "Usuaris.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;		None
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;		None
  4421 ;; Return value:  Size  Location     Type
  4422 ;;		None               void
  4423 ;; Registers used:
  4424 ;;		status,0
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1
  4430 ;;      Params:         0       0       0
  4431 ;;      Locals:         0       0       0
  4432 ;;      Temps:          0       0       0
  4433 ;;      Totals:         0       0       0
  4434 ;;Total ram usage:        0 bytes
  4435 ;; Hardware stack levels used: 1
  4436 ;; Hardware stack levels required when called: 2
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_menu
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text22
  4445  001BB6                     __ptext22:
  4446                           	callstack 0
  4447  001BB6                     _UshowUsersCalculat:
  4448                           	callstack 27
  4449                           
  4450                           ;Usuaris.c: 153:     return !do_showUsers;
  4451                           
  4452                           ;incstack = 0
  4453  001BB6  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4454  001BB8  D002               	goto	l2237
  4455  001BBA  90D8               	bcf	status,0,c
  4456  001BBC  0012               	return	
  4457  001BBE                     l2237:
  4458  001BBE  80D8               	bsf	status,0,c
  4459  001BC0  0012               	return		;funcret
  4460  001BC2                     __end_of_UshowUsersCalculat:
  4461                           	callstack 0
  4462                           
  4463 ;; *************** function _UgetUserName *****************
  4464 ;; Defined at:
  4465 ;;		line 59 in file "Usuaris.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  quin            1    wreg     unsigned char 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  quin            1    7[COMRAM] unsigned char 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  2    5[COMRAM] PTR unsigned char 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, prodl, prodh
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1
  4479 ;;      Params:         2       0       0
  4480 ;;      Locals:         1       0       0
  4481 ;;      Temps:          0       0       0
  4482 ;;      Totals:         3       0       0
  4483 ;;Total ram usage:        3 bytes
  4484 ;; Hardware stack levels used: 1
  4485 ;; Hardware stack levels required when called: 2
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_menu
  4490 ;;		_motorSIO
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text23
  4495  001B3C                     __ptext23:
  4496                           	callstack 0
  4497  001B3C                     _UgetUserName:
  4498                           	callstack 27
  4499                           
  4500                           ;incstack = 0
  4501                           ;UgetUserName@quin stored from wreg
  4502  001B3C  6E4C               	movwf	UgetUserName@quin^0,c
  4503                           
  4504                           ;Usuaris.c: 60:     return usuaris[quin].username;
  4505  001B3E  504C               	movf	UgetUserName@quin^0,w,c
  4506  001B40  0D17               	mullw	23
  4507  001B42  0E00               	movlw	low _usuaris
  4508  001B44  24F3               	addwf	243,w,c
  4509  001B46  6E4A               	movwf	?_UgetUserName^0,c
  4510  001B48  0E01               	movlw	high _usuaris
  4511  001B4A  20F4               	addwfc	prodh,w,c
  4512  001B4C  6E4B               	movwf	(?_UgetUserName+1)^0,c
  4513  001B4E  0012               	return		;funcret
  4514  001B50                     __end_of_UgetUserName:
  4515                           	callstack 0
  4516                           
  4517 ;; *************** function _UgetTop5 *****************
  4518 ;; Defined at:
  4519 ;;		line 296 in file "Usuaris.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  quin            1    wreg     unsigned char 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  quin            1    5[COMRAM] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      char 
  4526 ;; Registers used:
  4527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1
  4533 ;;      Params:         0       0       0
  4534 ;;      Locals:         1       0       0
  4535 ;;      Temps:          0       0       0
  4536 ;;      Totals:         1       0       0
  4537 ;;Total ram usage:        1 bytes
  4538 ;; Hardware stack levels used: 1
  4539 ;; Hardware stack levels required when called: 2
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_menu
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text24
  4548  001BC2                     __ptext24:
  4549                           	callstack 0
  4550  001BC2                     _UgetTop5:
  4551                           	callstack 27
  4552                           
  4553                           ;incstack = 0
  4554                           ;UgetTop5@quin stored from wreg
  4555  001BC2  6E4A               	movwf	UgetTop5@quin^0,c
  4556                           
  4557                           ;Usuaris.c: 297:     return puntuacions[quin].indexStruct;
  4558  001BC4  504A               	movf	UgetTop5@quin^0,w,c
  4559  001BC6  EC52  F006         	call	PL18	;call to abstracted procedure
  4560  001BCA  50DF               	movf	indf2,w,c
  4561  001BCC  0012               	return		;funcret
  4562  001BCE                     __end_of_UgetTop5:
  4563                           	callstack 0
  4564                           
  4565 ;; *************** function _UgetScore *****************
  4566 ;; Defined at:
  4567 ;;		line 293 in file "Usuaris.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  quin            1    wreg     unsigned char 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  quin            1    5[COMRAM] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      unsigned char 
  4574 ;; Registers used:
  4575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1
  4581 ;;      Params:         0       0       0
  4582 ;;      Locals:         1       0       0
  4583 ;;      Temps:          0       0       0
  4584 ;;      Totals:         1       0       0
  4585 ;;Total ram usage:        1 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; Hardware stack levels required when called: 2
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_menu
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text25
  4596  001BCE                     __ptext25:
  4597                           	callstack 0
  4598  001BCE                     _UgetScore:
  4599                           	callstack 27
  4600                           
  4601                           ;incstack = 0
  4602                           ;UgetScore@quin stored from wreg
  4603  001BCE  6E4A               	movwf	UgetScore@quin^0,c
  4604                           
  4605                           ;Usuaris.c: 294:     return puntuacions[quin].score;
  4606  001BD0  504A               	movf	UgetScore@quin^0,w,c
  4607  001BD2  EC4C  F006         	call	PL16	;call to abstracted procedure
  4608  001BD6  50DF               	movf	indf2,w,c
  4609  001BD8  0012               	return		;funcret
  4610  001BDA                     __end_of_UgetScore:
  4611                           	callstack 0
  4612                           
  4613 ;; *************** function _UgetNumUsuaris *****************
  4614 ;; Defined at:
  4615 ;;		line 35 in file "Usuaris.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      unsigned char 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1
  4629 ;;      Params:         0       0       0
  4630 ;;      Locals:         0       0       0
  4631 ;;      Temps:          0       0       0
  4632 ;;      Totals:         0       0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; Hardware stack levels required when called: 2
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_menu
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text26
  4644  001CE0                     __ptext26:
  4645                           	callstack 0
  4646  001CE0                     _UgetNumUsuaris:
  4647                           	callstack 27
  4648                           
  4649                           ;Usuaris.c: 36:     return numUsuaris;
  4650                           
  4651                           ;incstack = 0
  4652  001CE0  502D               	movf	_numUsuaris^0,w,c
  4653  001CE2  0012               	return		;funcret
  4654  001CE4                     __end_of_UgetNumUsuaris:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _UenviaPas *****************
  4658 ;; Defined at:
  4659 ;;		line 51 in file "Usuaris.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  c               1    wreg     unsigned char 
  4662 ;;  pos             1    5[COMRAM] unsigned char 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  c               1    6[COMRAM] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      void 
  4667 ;; Registers used:
  4668 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1
  4674 ;;      Params:         1       0       0
  4675 ;;      Locals:         1       0       0
  4676 ;;      Temps:          0       0       0
  4677 ;;      Totals:         2       0       0
  4678 ;;Total ram usage:        2 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; Hardware stack levels required when called: 2
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_menu
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text27
  4689  001B62                     __ptext27:
  4690                           	callstack 0
  4691  001B62                     _UenviaPas:
  4692                           	callstack 27
  4693                           
  4694                           ;incstack = 0
  4695                           ;UenviaPas@c stored from wreg
  4696  001B62  6E4B               	movwf	UenviaPas@c^0,c
  4697                           
  4698                           ;Usuaris.c: 52:     tmpPassword[pos] = c;
  4699  001B64  504A               	movf	UenviaPas@pos^0,w,c
  4700  001B66  0FA2               	addlw	low _tmpPassword
  4701  001B68  6ED9               	movwf	fsr2l,c
  4702  001B6A  6ADA               	clrf	fsr2h,c
  4703  001B6C  C04B  FFDF         	movff	UenviaPas@c,indf2
  4704  001B70  0012               	return		;funcret
  4705  001B72                     __end_of_UenviaPas:
  4706                           	callstack 0
  4707                           
  4708 ;; *************** function _UenviaChar *****************
  4709 ;; Defined at:
  4710 ;;		line 48 in file "Usuaris.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  c               1    wreg     unsigned char 
  4713 ;;  pos             1    5[COMRAM] unsigned char 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  c               1    6[COMRAM] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1
  4725 ;;      Params:         1       0       0
  4726 ;;      Locals:         1       0       0
  4727 ;;      Temps:          0       0       0
  4728 ;;      Totals:         2       0       0
  4729 ;;Total ram usage:        2 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; Hardware stack levels required when called: 2
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_menu
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text28
  4740  001B72                     __ptext28:
  4741                           	callstack 0
  4742  001B72                     _UenviaChar:
  4743                           	callstack 27
  4744                           
  4745                           ;incstack = 0
  4746                           ;UenviaChar@c stored from wreg
  4747  001B72  6E4B               	movwf	UenviaChar@c^0,c
  4748                           
  4749                           ;Usuaris.c: 49:     tmpUsername[pos] = c;
  4750  001B74  504A               	movf	UenviaChar@pos^0,w,c
  4751  001B76  0FAB               	addlw	low _tmpUsername
  4752  001B78  6ED9               	movwf	fsr2l,c
  4753  001B7A  6ADA               	clrf	fsr2h,c
  4754  001B7C  C04B  FFDF         	movff	UenviaChar@c,indf2
  4755  001B80  0012               	return		;funcret
  4756  001B82                     __end_of_UenviaChar:
  4757                           	callstack 0
  4758                           
  4759 ;; *************** function _UcheckExistsNotFinished *****************
  4760 ;; Defined at:
  4761 ;;		line 42 in file "Usuaris.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;		None               void
  4768 ;; Registers used:
  4769 ;;		status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1
  4775 ;;      Params:         0       0       0
  4776 ;;      Locals:         0       0       0
  4777 ;;      Temps:          0       0       0
  4778 ;;      Totals:         0       0       0
  4779 ;;Total ram usage:        0 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; Hardware stack levels required when called: 2
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_menu
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text29
  4790  001BDA                     __ptext29:
  4791                           	callstack 0
  4792  001BDA                     _UcheckExistsNotFinished:
  4793                           	callstack 27
  4794                           
  4795                           ;Usuaris.c: 43:     return do_check_exists;
  4796                           
  4797                           ;incstack = 0
  4798  001BDA  BC77               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4799  001BDC  D002               	goto	l2171
  4800  001BDE  90D8               	bcf	status,0,c
  4801  001BE0  0012               	return	
  4802  001BE2                     l2171:
  4803  001BE2  80D8               	bsf	status,0,c
  4804  001BE4  0012               	return		;funcret
  4805  001BE6                     __end_of_UcheckExistsNotFinished:
  4806                           	callstack 0
  4807                           
  4808 ;; *************** function _UcheckExistsGetError *****************
  4809 ;; Defined at:
  4810 ;;		line 45 in file "Usuaris.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;		None
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;		None
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      char 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1
  4824 ;;      Params:         0       0       0
  4825 ;;      Locals:         0       0       0
  4826 ;;      Temps:          0       0       0
  4827 ;;      Totals:         0       0       0
  4828 ;;Total ram usage:        0 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; Hardware stack levels required when called: 2
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_menu
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text30
  4839  001CE4                     __ptext30:
  4840                           	callstack 0
  4841  001CE4                     _UcheckExistsGetError:
  4842                           	callstack 27
  4843                           
  4844                           ;Usuaris.c: 46:     return usuariLoguejat;
  4845                           
  4846                           ;incstack = 0
  4847  001CE4  5066               	movf	_usuariLoguejat^0,w,c
  4848  001CE6  0012               	return		;funcret
  4849  001CE8                     __end_of_UcheckExistsGetError:
  4850                           	callstack 0
  4851                           
  4852 ;; *************** function _UcheckExists *****************
  4853 ;; Defined at:
  4854 ;;		line 39 in file "Usuaris.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		None
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1
  4868 ;;      Params:         0       0       0
  4869 ;;      Locals:         0       0       0
  4870 ;;      Temps:          0       0       0
  4871 ;;      Totals:         0       0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; Hardware stack levels required when called: 2
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_menu
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text31
  4883  001CE8                     __ptext31:
  4884                           	callstack 0
  4885  001CE8                     _UcheckExists:
  4886                           	callstack 27
  4887                           
  4888                           ;Usuaris.c: 40:     do_check_exists = 1;
  4889                           
  4890                           ;incstack = 0
  4891  001CE8  8C77               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4892  001CEA  0012               	return		;funcret
  4893  001CEC                     __end_of_UcheckExists:
  4894                           	callstack 0
  4895                           
  4896 ;; *************** function _URegister *****************
  4897 ;; Defined at:
  4898 ;;		line 55 in file "Usuaris.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		None
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1
  4912 ;;      Params:         0       0       0
  4913 ;;      Locals:         0       0       0
  4914 ;;      Temps:          0       0       0
  4915 ;;      Totals:         0       0       0
  4916 ;;Total ram usage:        0 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; Hardware stack levels required when called: 2
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_menu
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text32
  4927  001CEC                     __ptext32:
  4928                           	callstack 0
  4929  001CEC                     _URegister:
  4930                           	callstack 27
  4931                           
  4932                           ;Usuaris.c: 56:     do_register = 1;
  4933                           
  4934                           ;incstack = 0
  4935  001CEC  8A77               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  4936  001CEE  0012               	return		;funcret
  4937  001CF0                     __end_of_URegister:
  4938                           	callstack 0
  4939                           
  4940 ;; *************** function _SiFerMenu *****************
  4941 ;; Defined at:
  4942 ;;		line 19 in file "GestioLCD.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		None
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1
  4956 ;;      Params:         0       0       0
  4957 ;;      Locals:         0       0       0
  4958 ;;      Temps:          0       0       0
  4959 ;;      Totals:         0       0       0
  4960 ;;Total ram usage:        0 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 2
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_menu
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text33
  4971  001CF0                     __ptext33:
  4972                           	callstack 0
  4973  001CF0                     _SiFerMenu:
  4974                           	callstack 27
  4975                           
  4976                           ;GestioLCD.c: 20:     ferMenu = 1;
  4977                           
  4978                           ;incstack = 0
  4979  001CF0  8277               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4980  001CF2  0012               	return		;funcret
  4981  001CF4                     __end_of_SiFerMenu:
  4982                           	callstack 0
  4983                           
  4984 ;; *************** function _SMSon *****************
  4985 ;; Defined at:
  4986 ;;		line 128 in file "Ssms.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		None
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1
  5000 ;;      Params:         0       0       0
  5001 ;;      Locals:         0       0       0
  5002 ;;      Temps:          0       0       0
  5003 ;;      Totals:         0       0       0
  5004 ;;Total ram usage:        0 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 2
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_menu
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text34
  5015  001CB6                     __ptext34:
  5016                           	callstack 0
  5017  001CB6                     _SMSon:
  5018                           	callstack 27
  5019                           
  5020                           ;Ssms.c: 129:     setSMSon = 1;
  5021                           
  5022                           ;incstack = 0
  5023  001CB6  8078               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5024                           
  5025                           ;Ssms.c: 130:     novaTecla = -1;
  5026  001CB8  686B               	setf	_novaTecla^0,c
  5027  001CBA  0012               	return		;funcret
  5028  001CBC                     __end_of_SMSon:
  5029                           	callstack 0
  5030                           
  5031 ;; *************** function _SMSoff *****************
  5032 ;; Defined at:
  5033 ;;		line 133 in file "Ssms.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;		None
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;		None
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  1    wreg      void 
  5040 ;; Registers used:
  5041 ;;		None
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMRAM   BANK0   BANK1
  5047 ;;      Params:         0       0       0
  5048 ;;      Locals:         0       0       0
  5049 ;;      Temps:          0       0       0
  5050 ;;      Totals:         0       0       0
  5051 ;;Total ram usage:        0 bytes
  5052 ;; Hardware stack levels used: 1
  5053 ;; Hardware stack levels required when called: 2
  5054 ;; This function calls:
  5055 ;;		Nothing
  5056 ;; This function is called by:
  5057 ;;		_menu
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text35
  5062  001CBC                     __ptext35:
  5063                           	callstack 0
  5064  001CBC                     _SMSoff:
  5065                           	callstack 27
  5066                           
  5067                           ;Ssms.c: 134:     setSMSon = 0;
  5068                           
  5069                           ;incstack = 0
  5070  001CBC  9078               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5071                           
  5072                           ;Ssms.c: 135:     novaTecla = -1;
  5073  001CBE  686B               	setf	_novaTecla^0,c
  5074  001CC0  0012               	return		;funcret
  5075  001CC2                     __end_of_SMSoff:
  5076                           	callstack 0
  5077                           
  5078 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5079 ;; Defined at:
  5080 ;;		line 37 in file "SIO.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;		None
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      char 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1
  5094 ;;      Params:         0       0       0
  5095 ;;      Locals:         0       0       0
  5096 ;;      Temps:          0       0       0
  5097 ;;      Totals:         0       0       0
  5098 ;;Total ram usage:        0 bytes
  5099 ;; Hardware stack levels used: 1
  5100 ;; Hardware stack levels required when called: 2
  5101 ;; This function calls:
  5102 ;;		Nothing
  5103 ;; This function is called by:
  5104 ;;		_menu
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text36
  5109  001CF4                     __ptext36:
  5110                           	callstack 0
  5111  001CF4                     _SIOHaAcabatPuntuacions:
  5112                           	callstack 27
  5113                           
  5114                           ;SIO.c: 38:     return usuariActualSIO;
  5115                           
  5116                           ;incstack = 0
  5117  001CF4  5061               	movf	_usuariActualSIO^0,w,c
  5118  001CF6  0012               	return		;funcret
  5119  001CF8                     __end_of_SIOHaAcabatPuntuacions:
  5120                           	callstack 0
  5121                           
  5122 ;; *************** function _NoFerMenu *****************
  5123 ;; Defined at:
  5124 ;;		line 22 in file "GestioLCD.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		None
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1
  5138 ;;      Params:         0       0       0
  5139 ;;      Locals:         0       0       0
  5140 ;;      Temps:          0       0       0
  5141 ;;      Totals:         0       0       0
  5142 ;;Total ram usage:        0 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 2
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_menu
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text37
  5153  001CF8                     __ptext37:
  5154                           	callstack 0
  5155  001CF8                     _NoFerMenu:
  5156                           	callstack 27
  5157                           
  5158                           ;GestioLCD.c: 23:     ferMenu = 0;
  5159                           
  5160                           ;incstack = 0
  5161  001CF8  9277               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5162  001CFA  0012               	return		;funcret
  5163  001CFC                     __end_of_NoFerMenu:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function _LcScroll *****************
  5167 ;; Defined at:
  5168 ;;		line 37 in file "LcTLCD.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;		None
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1
  5182 ;;      Params:         0       0       0
  5183 ;;      Locals:         0       0       0
  5184 ;;      Temps:          0       0       0
  5185 ;;      Totals:         0       0       0
  5186 ;;Total ram usage:        0 bytes
  5187 ;; Hardware stack levels used: 1
  5188 ;; Hardware stack levels required when called: 4
  5189 ;; This function calls:
  5190 ;;		_CantaIR
  5191 ;; This function is called by:
  5192 ;;		_menu
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           	psect	text38
  5197  001CC2                     __ptext38:
  5198                           	callstack 0
  5199  001CC2                     _LcScroll:
  5200                           	callstack 25
  5201                           
  5202                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5203                           
  5204                           ;incstack = 0
  5205  001CC2  0E18               	movlw	24
  5206  001CC4  EF6B  F00D         	goto	_CantaIR
  5207  001CC8                     __end_of_LcScroll:
  5208                           	callstack 0
  5209                           
  5210 ;; *************** function _JnovaTecla *****************
  5211 ;; Defined at:
  5212 ;;		line 16 in file "Joc.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  tecla           1    wreg     char 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  tecla           1    5[COMRAM] char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      void 
  5219 ;; Registers used:
  5220 ;;		wreg
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1
  5226 ;;      Params:         0       0       0
  5227 ;;      Locals:         1       0       0
  5228 ;;      Temps:          0       0       0
  5229 ;;      Totals:         1       0       0
  5230 ;;Total ram usage:        1 bytes
  5231 ;; Hardware stack levels used: 1
  5232 ;; Hardware stack levels required when called: 2
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_menu
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text39
  5241  001C38                     __ptext39:
  5242                           	callstack 0
  5243  001C38                     _JnovaTecla:
  5244                           	callstack 27
  5245                           
  5246                           ;incstack = 0
  5247                           ;JnovaTecla@tecla stored from wreg
  5248  001C38  6E4A               	movwf	JnovaTecla@tecla^0,c
  5249                           
  5250                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5251  001C3A  C04A  F062         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5252  001C3E  0012               	return		;funcret
  5253  001C40                     __end_of_JnovaTecla:
  5254                           	callstack 0
  5255                           
  5256 ;; *************** function _JnovaDireccio *****************
  5257 ;; Defined at:
  5258 ;;		line 19 in file "Joc.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  dir             1    wreg     unsigned char 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  dir             1    5[COMRAM] unsigned char 
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1    wreg      void 
  5265 ;; Registers used:
  5266 ;;		wreg
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1
  5272 ;;      Params:         0       0       0
  5273 ;;      Locals:         1       0       0
  5274 ;;      Temps:          0       0       0
  5275 ;;      Totals:         1       0       0
  5276 ;;Total ram usage:        1 bytes
  5277 ;; Hardware stack levels used: 1
  5278 ;; Hardware stack levels required when called: 2
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_menu
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	text40
  5287  001C40                     __ptext40:
  5288                           	callstack 0
  5289  001C40                     _JnovaDireccio:
  5290                           	callstack 27
  5291                           
  5292                           ;incstack = 0
  5293                           ;JnovaDireccio@dir stored from wreg
  5294  001C40  6E4A               	movwf	JnovaDireccio@dir^0,c
  5295                           
  5296                           ;Joc.c: 20:     direccioJoc = dir;
  5297  001C42  C04A  F013         	movff	JnovaDireccio@dir,_direccioJoc
  5298  001C46  0012               	return		;funcret
  5299  001C48                     __end_of_JnovaDireccio:
  5300                           	callstack 0
  5301                           
  5302 ;; *************** function _JendGame *****************
  5303 ;; Defined at:
  5304 ;;		line 27 in file "Joc.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		None
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1
  5318 ;;      Params:         0       0       0
  5319 ;;      Locals:         0       0       0
  5320 ;;      Temps:          0       0       0
  5321 ;;      Totals:         0       0       0
  5322 ;;Total ram usage:        0 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; Hardware stack levels required when called: 2
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_menu
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text41
  5333  001CFC                     __ptext41:
  5334                           	callstack 0
  5335  001CFC                     _JendGame:
  5336                           	callstack 27
  5337                           
  5338                           ;Joc.c: 28:     jugantJoc = 0;
  5339                           
  5340                           ;incstack = 0
  5341  001CFC  9476               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5342  001CFE  0012               	return		;funcret
  5343  001D00                     __end_of_JendGame:
  5344                           	callstack 0
  5345                           
  5346 ;; *************** function _JJuguem *****************
  5347 ;; Defined at:
  5348 ;;		line 13 in file "Joc.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  usuari          1    wreg     unsigned char 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  usuari          1    5[COMRAM] unsigned char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1
  5362 ;;      Params:         0       0       0
  5363 ;;      Locals:         1       0       0
  5364 ;;      Temps:          0       0       0
  5365 ;;      Totals:         1       0       0
  5366 ;;Total ram usage:        1 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; Hardware stack levels required when called: 2
  5369 ;; This function calls:
  5370 ;;		Nothing
  5371 ;; This function is called by:
  5372 ;;		_menu
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text42
  5377  001C48                     __ptext42:
  5378                           	callstack 0
  5379  001C48                     _JJuguem:
  5380                           	callstack 27
  5381                           
  5382                           ;incstack = 0
  5383                           ;JJuguem@usuari stored from wreg
  5384  001C48  6E4A               	movwf	JJuguem@usuari^0,c
  5385                           
  5386                           ;Joc.c: 14:     usuariJoc = usuari;
  5387  001C4A  C04A  F063         	movff	JJuguem@usuari,_usuariJoc
  5388  001C4E  0012               	return		;funcret
  5389  001C50                     __end_of_JJuguem:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function _HActualitzaHora *****************
  5393 ;; Defined at:
  5394 ;;		line 16 in file "Hora.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5397 ;;		 -> horaTmp(4), 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;		None
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      void 
  5402 ;; Registers used:
  5403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1
  5409 ;;      Params:         1       0       0
  5410 ;;      Locals:         0       0       0
  5411 ;;      Temps:          0       0       0
  5412 ;;      Totals:         1       0       0
  5413 ;;Total ram usage:        1 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 2
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_menu
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text43
  5424  001908                     __ptext43:
  5425                           	callstack 0
  5426  001908                     _HActualitzaHora:
  5427                           	callstack 27
  5428                           
  5429                           ;Hora.c: 17:     hora[0] = nova[0];
  5430                           
  5431                           ;incstack = 0
  5432  001908  504A               	movf	HActualitzaHora@nova^0,w,c
  5433  00190A  6ED9               	movwf	fsr2l,c
  5434  00190C  6ADA               	clrf	fsr2h,c
  5435  00190E  50DF               	movf	indf2,w,c
  5436  001910  6E6D               	movwf	_hora^0,c
  5437                           
  5438                           ;Hora.c: 18:     hora[1] = nova[1];
  5439  001912  504A               	movf	HActualitzaHora@nova^0,w,c
  5440  001914  6ED9               	movwf	fsr2l,c
  5441  001916  6ADA               	clrf	fsr2h,c
  5442  001918  2AD9               	incf	fsr2l,f,c
  5443  00191A  50DF               	movf	indf2,w,c
  5444  00191C  6E6E               	movwf	(_hora+1)^0,c
  5445                           
  5446                           ;Hora.c: 19:     hora[3] = nova[2];
  5447  00191E  504A               	movf	HActualitzaHora@nova^0,w,c
  5448  001920  6ED9               	movwf	fsr2l,c
  5449  001922  6ADA               	clrf	fsr2h,c
  5450  001924  0E02               	movlw	2
  5451  001926  26D9               	addwf	fsr2l,f,c
  5452  001928  50DF               	movf	indf2,w,c
  5453  00192A  6E70               	movwf	(_hora+3)^0,c
  5454                           
  5455                           ;Hora.c: 20:     hora[4] = nova[3];
  5456  00192C  504A               	movf	HActualitzaHora@nova^0,w,c
  5457  00192E  6ED9               	movwf	fsr2l,c
  5458  001930  6ADA               	clrf	fsr2h,c
  5459  001932  0E03               	movlw	3
  5460  001934  26D9               	addwf	fsr2l,f,c
  5461  001936  50DF               	movf	indf2,w,c
  5462  001938  6E71               	movwf	(_hora+4)^0,c
  5463  00193A  0012               	return		;funcret
  5464  00193C                     __end_of_HActualitzaHora:
  5465                           	callstack 0
  5466                           
  5467 ;; *************** function _GLCDMostraMenu *****************
  5468 ;; Defined at:
  5469 ;;		line 30 in file "GestioLCD.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  num             1    wreg     unsigned char 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  num             1    5[COMRAM] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1
  5483 ;;      Params:         0       0       0
  5484 ;;      Locals:         1       0       0
  5485 ;;      Temps:          0       0       0
  5486 ;;      Totals:         1       0       0
  5487 ;;Total ram usage:        1 bytes
  5488 ;; Hardware stack levels used: 1
  5489 ;; Hardware stack levels required when called: 2
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_menu
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text44
  5498  001BE6                     __ptext44:
  5499                           	callstack 0
  5500  001BE6                     _GLCDMostraMenu:
  5501                           	callstack 27
  5502                           
  5503                           ;incstack = 0
  5504                           ;GLCDMostraMenu@num stored from wreg
  5505  001BE6  6E4A               	movwf	GLCDMostraMenu@num^0,c
  5506                           
  5507                           ;GestioLCD.c: 31:     newString = 1;
  5508  001BE8  8077               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5509                           
  5510                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5511  001BEA  C04A  F021         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5512                           
  5513                           ;GestioLCD.c: 33:     ferMenu = 1;
  5514  001BEE  8277               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5515  001BF0  0012               	return		;funcret
  5516  001BF2                     __end_of_GLCDMostraMenu:
  5517                           	callstack 0
  5518                           
  5519 ;; *************** function _CToAobtenir *****************
  5520 ;; Defined at:
  5521 ;;		line 7 in file "CtoA.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      PTR unsigned char 
  5528 ;; Registers used:
  5529 ;;		wreg
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1
  5535 ;;      Params:         2       0       0
  5536 ;;      Locals:         0       0       0
  5537 ;;      Temps:          0       0       0
  5538 ;;      Totals:         2       0       0
  5539 ;;Total ram usage:        2 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; Hardware stack levels required when called: 2
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_menu
  5546 ;;		_motorSIO
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text45
  5551  001D00                     __ptext45:
  5552                           	callstack 0
  5553  001D00                     _CToAobtenir:
  5554                           	callstack 27
  5555                           
  5556                           ;CtoA.c: 8:     return stringScore;
  5557                           
  5558                           ;incstack = 0
  5559  001D00  0E73               	movlw	_stringScore& (0+255)
  5560  001D02  0012               	return		;funcret
  5561  001D04                     __end_of_CToAobtenir:
  5562                           	callstack 0
  5563                           
  5564 ;; *************** function _CToAHaAcabat *****************
  5565 ;; Defined at:
  5566 ;;		line 10 in file "CtoA.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      unsigned char 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1
  5580 ;;      Params:         0       0       0
  5581 ;;      Locals:         0       0       0
  5582 ;;      Temps:          0       0       0
  5583 ;;      Totals:         0       0       0
  5584 ;;Total ram usage:        0 bytes
  5585 ;; Hardware stack levels used: 1
  5586 ;; Hardware stack levels required when called: 2
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_menu
  5591 ;;		_motorSIO
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text46
  5596  001D04                     __ptext46:
  5597                           	callstack 0
  5598  001D04                     _CToAHaAcabat:
  5599                           	callstack 27
  5600                           
  5601                           ;CtoA.c: 11:     return convertir;
  5602                           
  5603                           ;incstack = 0
  5604  001D04  505E               	movf	_convertir^0,w,c
  5605  001D06  0012               	return		;funcret
  5606  001D08                     __end_of_CToAHaAcabat:
  5607                           	callstack 0
  5608                           
  5609 ;; *************** function _CToAConverteix *****************
  5610 ;; Defined at:
  5611 ;;		line 14 in file "CtoA.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  numero          1    wreg     unsigned char 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  numero          1    5[COMRAM] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      void 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, cstack
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1
  5625 ;;      Params:         0       0       0
  5626 ;;      Locals:         1       0       0
  5627 ;;      Temps:          0       0       0
  5628 ;;      Totals:         1       0       0
  5629 ;;Total ram usage:        1 bytes
  5630 ;; Hardware stack levels used: 1
  5631 ;; Hardware stack levels required when called: 3
  5632 ;; This function calls:
  5633 ;;		_CToAReset
  5634 ;; This function is called by:
  5635 ;;		_menu
  5636 ;;		_motorSIO
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text47
  5641  001BF2                     __ptext47:
  5642                           	callstack 0
  5643  001BF2                     _CToAConverteix:
  5644                           	callstack 26
  5645                           
  5646                           ;incstack = 0
  5647                           ;CToAConverteix@numero stored from wreg
  5648  001BF2  6E4A               	movwf	CToAConverteix@numero^0,c
  5649                           
  5650                           ;CtoA.c: 15:     CToAReset();
  5651  001BF4  EC28  F00E         	call	_CToAReset	;wreg free
  5652                           
  5653                           ;CtoA.c: 16:     convertir = numero;
  5654  001BF8  C04A  F05E         	movff	CToAConverteix@numero,_convertir
  5655  001BFC  0012               	return		;funcret
  5656  001BFE                     __end_of_CToAConverteix:
  5657                           	callstack 0
  5658                           
  5659 ;; *************** function _CToAReset *****************
  5660 ;; Defined at:
  5661 ;;		line 18 in file "CtoA.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;		None
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;		None
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      void 
  5668 ;; Registers used:
  5669 ;;		wreg, status,2
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1
  5675 ;;      Params:         0       0       0
  5676 ;;      Locals:         0       0       0
  5677 ;;      Temps:          0       0       0
  5678 ;;      Totals:         0       0       0
  5679 ;;Total ram usage:        0 bytes
  5680 ;; Hardware stack levels used: 1
  5681 ;; Hardware stack levels required when called: 2
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_CToAConverteix
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text48
  5690  001C50                     __ptext48:
  5691                           	callstack 0
  5692  001C50                     _CToAReset:
  5693                           	callstack 26
  5694                           
  5695                           ;CtoA.c: 19:     stringScore[0] = '0';
  5696                           
  5697                           ;incstack = 0
  5698  001C50  0E30               	movlw	48
  5699  001C52  6E73               	movwf	_stringScore^0,c
  5700                           
  5701                           ;CtoA.c: 20:     stringScore[1] = '0';
  5702  001C54  6E74               	movwf	(_stringScore+1)^0,c
  5703  001C56  0C30               	retlw	48	;funcret
  5704  001C58                     __end_of_CToAReset:
  5705                           	callstack 0
  5706                           
  5707 ;; *************** function _init_ports *****************
  5708 ;; Defined at:
  5709 ;;		line 25 in file "main.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;		None
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1
  5723 ;;      Params:         0       0       0
  5724 ;;      Locals:         0       0       0
  5725 ;;      Temps:          0       0       0
  5726 ;;      Totals:         0       0       0
  5727 ;;Total ram usage:        0 bytes
  5728 ;; Hardware stack levels used: 1
  5729 ;; Hardware stack levels required when called: 2
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_main
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text49
  5738  001A9C                     __ptext49:
  5739                           	callstack 0
  5740  001A9C                     _init_ports:
  5741                           	callstack 28
  5742                           
  5743                           ;incstack = 0
  5744  001A9C  0E03               	movlw	3
  5745  001A9E  6E92               	movwf	146,c	;volatile
  5746  001AA0  0EE0               	movlw	224
  5747  001AA2  6E93               	movwf	147,c	;volatile
  5748  001AA4  968A               	bcf	138,3,c	;volatile
  5749  001AA6  908A               	bcf	138,0,c	;volatile
  5750  001AA8  928A               	bcf	138,1,c	;volatile
  5751                           
  5752                           ;main.c: 49:     TRISC = 0xC0;
  5753  001AAA  0EC0               	movlw	192
  5754  001AAC  6E94               	movwf	148,c	;volatile
  5755                           
  5756                           ;main.c: 59:     TRISD = 0x8F;
  5757  001AAE  0E8F               	movlw	143
  5758  001AB0  6E95               	movwf	149,c	;volatile
  5759                           
  5760                           ;main.c: 60:     LATD = 0x00;
  5761  001AB2  6A8C               	clrf	140,c	;volatile
  5762                           
  5763                           ;main.c: 63:     EECON1bits.EEPGD = 1;
  5764  001AB4  8EA6               	bsf	166,7,c	;volsfr
  5765                           
  5766                           ;main.c: 64:     EECON1bits.CFGS = 0;
  5767  001AB6  9CA6               	bcf	166,6,c	;volsfr
  5768  001AB8  0012               	return		;funcret
  5769  001ABA                     __end_of_init_ports:
  5770                           	callstack 0
  5771                           
  5772 ;; *************** function _init_eusart *****************
  5773 ;; Defined at:
  5774 ;;		line 67 in file "main.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;		None
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      void 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1
  5788 ;;      Params:         0       0       0
  5789 ;;      Locals:         0       0       0
  5790 ;;      Temps:          0       0       0
  5791 ;;      Totals:         0       0       0
  5792 ;;Total ram usage:        0 bytes
  5793 ;; Hardware stack levels used: 1
  5794 ;; Hardware stack levels required when called: 2
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_main
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text50
  5803  001B26                     __ptext50:
  5804                           	callstack 0
  5805  001B26                     _init_eusart:
  5806                           	callstack 28
  5807                           
  5808                           ;main.c: 68:     TXSTA = 0x24;
  5809                           
  5810                           ;incstack = 0
  5811  001B26  0E24               	movlw	36
  5812  001B28  6EAC               	movwf	172,c	;volatile
  5813                           
  5814                           ;main.c: 69:     RCSTA = 0x90;
  5815  001B2A  0E90               	movlw	144
  5816  001B2C  6EAB               	movwf	171,c	;volatile
  5817                           
  5818                           ;main.c: 70:     BAUDCON = 0x08;
  5819  001B2E  0E08               	movlw	8
  5820  001B30  6EB8               	movwf	184,c	;volatile
  5821                           
  5822                           ;main.c: 71:     SPBRGH = 0x04;
  5823  001B32  0E04               	movlw	4
  5824  001B34  6EB0               	movwf	176,c	;volatile
  5825                           
  5826                           ;main.c: 72:     SPBRG = 0x10;
  5827  001B36  0E10               	movlw	16
  5828  001B38  6EAF               	movwf	175,c	;volatile
  5829  001B3A  0C10               	retlw	16	;funcret
  5830  001B3C                     __end_of_init_eusart:
  5831                           	callstack 0
  5832                           
  5833 ;; *************** function _initSIO *****************
  5834 ;; Defined at:
  5835 ;;		line 19 in file "SIO.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;		None
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1
  5849 ;;      Params:         0       0       0
  5850 ;;      Locals:         0       0       0
  5851 ;;      Temps:          0       0       0
  5852 ;;      Totals:         0       0       0
  5853 ;;Total ram usage:        0 bytes
  5854 ;; Hardware stack levels used: 1
  5855 ;; Hardware stack levels required when called: 3
  5856 ;; This function calls:
  5857 ;;		_TiGetTimer
  5858 ;; This function is called by:
  5859 ;;		_main
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text51
  5864  001C58                     __ptext51:
  5865                           	callstack 0
  5866  001C58                     _initSIO:
  5867                           	callstack 27
  5868                           
  5869                           ;SIO.c: 20:     timerSIO = TiGetTimer();
  5870                           
  5871                           ;incstack = 0
  5872  001C58  ECB8  F00C         	call	_TiGetTimer	;wreg free
  5873  001C5C  6E11               	movwf	_timerSIO^0,c
  5874  001C5E  0012               	return		;funcret
  5875  001C60                     __end_of_initSIO:
  5876                           	callstack 0
  5877                           
  5878 ;; *************** function _initHora *****************
  5879 ;; Defined at:
  5880 ;;		line 12 in file "Hora.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1    wreg      void 
  5887 ;; Registers used:
  5888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1
  5894 ;;      Params:         0       0       0
  5895 ;;      Locals:         0       0       0
  5896 ;;      Temps:          0       0       0
  5897 ;;      Totals:         0       0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used: 1
  5900 ;; Hardware stack levels required when called: 3
  5901 ;; This function calls:
  5902 ;;		_TiGetTimer
  5903 ;; This function is called by:
  5904 ;;		_main
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text52
  5909  001C60                     __ptext52:
  5910                           	callstack 0
  5911  001C60                     _initHora:
  5912                           	callstack 27
  5913                           
  5914                           ;Hora.c: 13:     timerHora = TiGetTimer();
  5915                           
  5916                           ;incstack = 0
  5917  001C60  ECB8  F00C         	call	_TiGetTimer	;wreg free
  5918  001C64  6E16               	movwf	_timerHora^0,c
  5919  001C66  0012               	return		;funcret
  5920  001C68                     __end_of_initHora:
  5921                           	callstack 0
  5922                           
  5923 ;; *************** function _initAltaveu *****************
  5924 ;; Defined at:
  5925 ;;		line 10 in file "Altaveu.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;		None
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;		None
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  1    wreg      void 
  5932 ;; Registers used:
  5933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMRAM   BANK0   BANK1
  5939 ;;      Params:         0       0       0
  5940 ;;      Locals:         0       0       0
  5941 ;;      Temps:          0       0       0
  5942 ;;      Totals:         0       0       0
  5943 ;;Total ram usage:        0 bytes
  5944 ;; Hardware stack levels used: 1
  5945 ;; Hardware stack levels required when called: 3
  5946 ;; This function calls:
  5947 ;;		_TiGetTimer
  5948 ;; This function is called by:
  5949 ;;		_main
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           	psect	text53
  5954  001C68                     __ptext53:
  5955                           	callstack 0
  5956  001C68                     _initAltaveu:
  5957                           	callstack 27
  5958                           
  5959                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  5960                           
  5961                           ;incstack = 0
  5962  001C68  ECB8  F00C         	call	_TiGetTimer	;wreg free
  5963  001C6C  6E25               	movwf	_timerAltaveu^0,c
  5964  001C6E  0012               	return		;funcret
  5965  001C70                     __end_of_initAltaveu:
  5966                           	callstack 0
  5967                           
  5968 ;; *************** function _UmotorUsers *****************
  5969 ;; Defined at:
  5970 ;;		line 156 in file "Usuaris.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1
  5984 ;;      Params:         0       0       0
  5985 ;;      Locals:         0       0       0
  5986 ;;      Temps:          2       0       0
  5987 ;;      Totals:         2       0       0
  5988 ;;Total ram usage:        2 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; Hardware stack levels required when called: 3
  5991 ;; This function calls:
  5992 ;;		_compareStrings
  5993 ;;		_escriureCharEEPROM
  5994 ;; This function is called by:
  5995 ;;		_main
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text54
  6000  000A4A                     __ptext54:
  6001                           	callstack 0
  6002  000A4A                     _UmotorUsers:
  6003                           	callstack 27
  6004                           
  6005                           ;Usuaris.c: 157:     static char state = 0;;Usuaris.c: 159:  switch(state) {
  6006                           
  6007                           ;incstack = 0
  6008  000A4A  D0FC               	goto	l5885
  6009  000A4C                     l758:
  6010                           
  6011                           ;Usuaris.c: 161:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  6012  000A4C  AC77               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6013  000A4E  BA77               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6014  000A50  D006               	goto	l759
  6015  000A52  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6016  000A54  B677               	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6017  000A56  D003               	goto	l759
  6018                           
  6019                           ;Usuaris.c: 162:     i = 0;
  6020  000A58  6A2A               	clrf	_i^0,c
  6021                           
  6022                           ;Usuaris.c: 163:     j = 0;
  6023  000A5A  6A29               	clrf	_j^0,c
  6024                           
  6025                           ;Usuaris.c: 164:    }
  6026  000A5C  0012               	return	
  6027  000A5E                     l759:
  6028  000A5E  AC77               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6029  000A60  D004               	goto	l761
  6030                           
  6031                           ;Usuaris.c: 166:     usuariLoguejat = -1;
  6032  000A62  6866               	setf	_usuariLoguejat^0,c
  6033  000A64                     l5729:
  6034                           
  6035                           ;Usuaris.c: 167:     state = 1;
  6036  000A64  0E01               	movlw	1
  6037  000A66  6E27               	movwf	UmotorUsers@state^0,c
  6038                           
  6039                           ;Usuaris.c: 168:    }
  6040  000A68  0C01               	retlw	1
  6041  000A6A                     l761:
  6042  000A6A  AA77               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6043  000A6C  D003               	goto	l763
  6044  000A6E                     u6100:
  6045                           
  6046                           ;Usuaris.c: 170:     state = 2;
  6047  000A6E  0E02               	movlw	2
  6048  000A70  6E27               	movwf	UmotorUsers@state^0,c
  6049                           
  6050                           ;Usuaris.c: 171:    }
  6051  000A72  0C02               	retlw	2
  6052  000A74                     l763:
  6053  000A74  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6054  000A76  D015               	goto	l765
  6055                           
  6056                           ;Usuaris.c: 173:     arrayShowUsers[0] = usuariLoguejat;
  6057  000A78  C066  F001         	movff	_usuariLoguejat,_arrayShowUsers
  6058                           
  6059                           ;Usuaris.c: 174:     arrayShowUsers[1] = -1;
  6060  000A7C  6802               	setf	(_arrayShowUsers+1)^0,c
  6061                           
  6062                           ;Usuaris.c: 175:     arrayShowUsers[2] = -1;
  6063  000A7E  6803               	setf	(_arrayShowUsers+2)^0,c
  6064                           
  6065                           ;Usuaris.c: 176:     arrayShowUsers[3] = -1;
  6066  000A80  6804               	setf	(_arrayShowUsers+3)^0,c
  6067                           
  6068                           ;Usuaris.c: 177:     arrayShowUsers[4] = -1;
  6069  000A82  6805               	setf	(_arrayShowUsers+4)^0,c
  6070                           
  6071                           ;Usuaris.c: 178:     arrayShowUsers[5] = -1;
  6072  000A84  6806               	setf	(_arrayShowUsers+5)^0,c
  6073                           
  6074                           ;Usuaris.c: 179:     arrayShowUsers[6] = -1;
  6075  000A86  6807               	setf	(_arrayShowUsers+6)^0,c
  6076                           
  6077                           ;Usuaris.c: 180:     arrayShowUsers[7] = -1;
  6078  000A88  6808               	setf	(_arrayShowUsers+7)^0,c
  6079                           
  6080                           ;Usuaris.c: 181:     i = 1;
  6081  000A8A  0E01               	movlw	1
  6082  000A8C  6E2A               	movwf	_i^0,c
  6083                           
  6084                           ;Usuaris.c: 182:     if(numUsuaris < 7) {
  6085  000A8E  0E07               	movlw	7
  6086  000A90  602D               	cpfslt	_numUsuaris^0,c
  6087  000A92  D002               	goto	l766
  6088  000A94                     u6120:
  6089                           
  6090                           ;Usuaris.c: 183:       j = 0;
  6091  000A94  6A29               	clrf	_j^0,c
  6092                           
  6093                           ;Usuaris.c: 184:     }
  6094  000A96  D002               	goto	l5741
  6095  000A98                     l766:
  6096                           
  6097                           ;Usuaris.c: 186:       j = indexNextUserStruct;
  6098  000A98  C02B  F029         	movff	_indexNextUserStruct,_j
  6099  000A9C                     l5741:
  6100                           
  6101                           ;Usuaris.c: 188:     state = 5;
  6102  000A9C  0E05               	movlw	5
  6103  000A9E  6E27               	movwf	UmotorUsers@state^0,c
  6104                           
  6105                           ;Usuaris.c: 189:    }
  6106  000AA0  0C05               	retlw	5
  6107  000AA2                     l765:
  6108  000AA2  A677               	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6109  000AA4  0012               	return	
  6110                           
  6111                           ;Usuaris.c: 191:     do_updateScore = 0;
  6112  000AA6  9677               	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6113  000AA8                     l5745:
  6114                           
  6115                           ;Usuaris.c: 192:     state = 6;
  6116  000AA8  0E06               	movlw	6
  6117  000AAA  6E27               	movwf	UmotorUsers@state^0,c
  6118  000AAC  0C06               	retlw	6
  6119  000AAE                     l5747:
  6120                           
  6121                           ;Usuaris.c: 196:    if (i < numUsuaris) {
  6122  000AAE  502D               	movf	_numUsuaris^0,w,c
  6123  000AB0  5C2A               	subwf	_i^0,w,c
  6124  000AB2  E212               	bc	l5757
  6125                           
  6126                           ;Usuaris.c: 197:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6127  000AB4  0EAB               	movlw	low _tmpUsername
  6128  000AB6  6E4A               	movwf	compareStrings@a^0,c
  6129  000AB8  502A               	movf	_i^0,w,c
  6130  000ABA  0D17               	mullw	23
  6131  000ABC  0E00               	movlw	low _usuaris
  6132  000ABE  24F3               	addwf	243,w,c
  6133  000AC0  6E4B               	movwf	compareStrings@b^0,c
  6134  000AC2  0E01               	movlw	high _usuaris
  6135  000AC4  20F4               	addwfc	prodh,w,c
  6136  000AC6  6E4C               	movwf	(compareStrings@b+1)^0,c
  6137  000AC8  EC0E  F00C         	call	_compareStrings	;wreg free
  6138  000ACC  0900               	iorlw	0
  6139  000ACE  E102               	bnz	l5753
  6140                           
  6141                           ;Usuaris.c: 198:      usuariLoguejat = i;
  6142  000AD0  C02A  F066         	movff	_i,_usuariLoguejat
  6143  000AD4                     l5753:
  6144                           
  6145                           ;Usuaris.c: 201:     i++;
  6146  000AD4  2A2A               	incf	_i^0,f,c
  6147  000AD6  D7C6               	goto	l5729
  6148  000AD8                     l5757:
  6149  000AD8  502D               	movf	_numUsuaris^0,w,c
  6150  000ADA  182A               	xorwf	_i^0,w,c
  6151  000ADC  A4D8               	btfss	status,2,c
  6152  000ADE  0012               	return	
  6153                           
  6154                           ;Usuaris.c: 205:     do_check_exists = 0;
  6155  000AE0  9C77               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6156                           
  6157                           ;Usuaris.c: 206:     state = 0;
  6158  000AE2  6A27               	clrf	UmotorUsers@state^0,c
  6159  000AE4  0012               	return	
  6160  000AE6                     l5761:
  6161                           
  6162                           ;Usuaris.c: 210:    if (i != 8) {
  6163  000AE6  0E08               	movlw	8
  6164  000AE8  182A               	xorwf	_i^0,w,c
  6165  000AEA  E00D               	bz	l5773
  6166                           
  6167                           ;Usuaris.c: 211:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  6168  000AEC  C02C  F04A         	movff	_indexNextUser,escriureCharEEPROM@pos
  6169  000AF0  502A               	movf	_i^0,w,c
  6170  000AF2  0FAB               	addlw	low _tmpUsername
  6171  000AF4  D8E6               	call	PL80	;call to abstracted procedure
  6172  000AF6  ECE2  F00C         	call	_escriureCharEEPROM
  6173  000AFA  2A2C               	incf	_indexNextUser^0,f,c
  6174                           
  6175                           ;Usuaris.c: 212:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6176  000AFC  502A               	movf	_i^0,w,c
  6177  000AFE  0FAB               	addlw	low _tmpUsername
  6178  000B00  D8D7               	call	PL22	;call to abstracted procedure
  6179                           
  6180                           ;Usuaris.c: 213:     i++;
  6181  000B02  D8BC               	call	PL14	;call to abstracted procedure
  6182  000B04  D7B4               	goto	u6100
  6183  000B06                     l5773:
  6184  000B06  0E08               	movlw	8
  6185  000B08  182A               	xorwf	_i^0,w,c
  6186  000B0A  A4D8               	btfss	status,2,c
  6187  000B0C  0012               	return	
  6188                           
  6189                           ;Usuaris.c: 217:     i = 0;
  6190  000B0E  6A2A               	clrf	_i^0,c
  6191  000B10                     l5777:
  6192                           
  6193                           ;Usuaris.c: 218:     state = 3;
  6194  000B10  0E03               	movlw	3
  6195  000B12  6E27               	movwf	UmotorUsers@state^0,c
  6196  000B14  0C03               	retlw	3
  6197  000B16                     l5779:
  6198                           
  6199                           ;Usuaris.c: 222:    if (i != 8) {
  6200  000B16  0E08               	movlw	8
  6201  000B18  182A               	xorwf	_i^0,w,c
  6202  000B1A  E011               	bz	l5791
  6203                           
  6204                           ;Usuaris.c: 223:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  6205  000B1C  C02C  F04A         	movff	_indexNextUser,escriureCharEEPROM@pos
  6206  000B20  502A               	movf	_i^0,w,c
  6207  000B22  0FA2               	addlw	low _tmpPassword
  6208  000B24  D8CE               	call	PL80	;call to abstracted procedure
  6209  000B26  ECE2  F00C         	call	_escriureCharEEPROM
  6210  000B2A  2A2C               	incf	_indexNextUser^0,f,c
  6211                           
  6212                           ;Usuaris.c: 224:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6213  000B2C  502A               	movf	_i^0,w,c
  6214  000B2E  0FA2               	addlw	low _tmpPassword
  6215  000B30  D8BF               	call	PL22	;call to abstracted procedure
  6216  000B32  0E09               	movlw	9
  6217  000B34  264F               	addwf	??_UmotorUsers^0,f,c
  6218  000B36  0E00               	movlw	0
  6219  000B38  2250               	addwfc	(??_UmotorUsers+1)^0,f,c
  6220                           
  6221                           ;Usuaris.c: 225:     i++;
  6222  000B3A  D8A0               	call	PL14	;call to abstracted procedure
  6223  000B3C  D7E9               	goto	l5777
  6224  000B3E                     l5791:
  6225  000B3E  0E08               	movlw	8
  6226  000B40  182A               	xorwf	_i^0,w,c
  6227  000B42  A4D8               	btfss	status,2,c
  6228  000B44  0012               	return	
  6229                           
  6230                           ;Usuaris.c: 229:     do_register = 0;
  6231  000B46  9A77               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6232                           
  6233                           ;Usuaris.c: 230:     indexNextUser++;
  6234  000B48  2A2C               	incf	_indexNextUser^0,f,c
  6235                           
  6236                           ;Usuaris.c: 231:     if(indexNextUser == 159) indexNextUser = 16;
  6237  000B4A  0E9F               	movlw	159
  6238  000B4C  182C               	xorwf	_indexNextUser^0,w,c
  6239  000B4E  E102               	bnz	l5801
  6240  000B50  0E10               	movlw	16
  6241  000B52  6E2C               	movwf	_indexNextUser^0,c
  6242  000B54                     l5801:
  6243                           
  6244                           ;Usuaris.c: 232:     indexNextUserStruct++;
  6245  000B54  2A2B               	incf	_indexNextUserStruct^0,f,c
  6246                           
  6247                           ;Usuaris.c: 233:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6248  000B56  0E08               	movlw	8
  6249  000B58  182B               	xorwf	_indexNextUserStruct^0,w,c
  6250  000B5A  E101               	bnz	l5807
  6251  000B5C  6A2B               	clrf	_indexNextUserStruct^0,c
  6252  000B5E                     l5807:
  6253                           
  6254                           ;Usuaris.c: 234:     if(numUsuaris != 8) numUsuaris++;
  6255  000B5E  0E08               	movlw	8
  6256  000B60  182D               	xorwf	_numUsuaris^0,w,c
  6257  000B62  E001               	bz	l5811
  6258  000B64  2A2D               	incf	_numUsuaris^0,f,c
  6259  000B66                     l5811:
  6260                           
  6261                           ;Usuaris.c: 235:     state = 0;
  6262  000B66  6A27               	clrf	UmotorUsers@state^0,c
  6263  000B68  0012               	return	
  6264  000B6A                     l5813:
  6265                           
  6266                           ;Usuaris.c: 239:    if (i < numUsuaris) {
  6267  000B6A  502D               	movf	_numUsuaris^0,w,c
  6268  000B6C  5C2A               	subwf	_i^0,w,c
  6269  000B6E  E217               	bc	l5829
  6270                           
  6271                           ;Usuaris.c: 240:     if(j != usuariLoguejat){
  6272  000B70  C066  F04F         	movff	_usuariLoguejat,??_UmotorUsers
  6273  000B74  6A50               	clrf	(??_UmotorUsers+1)^0,c
  6274  000B76  BE4F               	btfsc	??_UmotorUsers^0,7,c
  6275  000B78  0650               	decf	(??_UmotorUsers+1)^0,f,c
  6276  000B7A  5029               	movf	_j^0,w,c
  6277  000B7C  184F               	xorwf	??_UmotorUsers^0,w,c
  6278  000B7E  1050               	iorwf	(??_UmotorUsers+1)^0,w,c
  6279  000B80  E008               	bz	l5821
  6280                           
  6281                           ;Usuaris.c: 241:       arrayShowUsers[i] = j;
  6282  000B82  502A               	movf	_i^0,w,c
  6283  000B84  0F01               	addlw	low _arrayShowUsers
  6284  000B86  6ED9               	movwf	fsr2l,c
  6285  000B88  6ADA               	clrf	fsr2h,c
  6286  000B8A  C029  FFDF         	movff	_j,indf2
  6287                           
  6288                           ;Usuaris.c: 242:      i++;
  6289  000B8E  2A2A               	incf	_i^0,f,c
  6290                           
  6291                           ;Usuaris.c: 243:     }else{
  6292  000B90  D001               	goto	l790
  6293  000B92                     l5821:
  6294                           
  6295                           ;Usuaris.c: 244:       j++;
  6296  000B92  2A29               	incf	_j^0,f,c
  6297  000B94                     l790:
  6298                           
  6299                           ;Usuaris.c: 246:     j++;
  6300  000B94  2A29               	incf	_j^0,f,c
  6301                           
  6302                           ;Usuaris.c: 247:     if(j > 7) j=0;
  6303  000B96  0E07               	movlw	7
  6304  000B98  6429               	cpfsgt	_j^0,c
  6305  000B9A  D780               	goto	l5741
  6306  000B9C  D77B               	goto	u6120
  6307  000B9E                     l5829:
  6308  000B9E  502D               	movf	_numUsuaris^0,w,c
  6309  000BA0  182A               	xorwf	_i^0,w,c
  6310  000BA2  A4D8               	btfss	status,2,c
  6311  000BA4  0012               	return	
  6312                           
  6313                           ;Usuaris.c: 251:     do_showUsers = 0;
  6314  000BA6  9877               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6315                           
  6316                           ;Usuaris.c: 252:     state = 0;
  6317  000BA8  6A27               	clrf	UmotorUsers@state^0,c
  6318  000BAA  0012               	return	
  6319  000BAC                     l5833:
  6320                           
  6321                           ;Usuaris.c: 256:    if (i < 5 && puntuacions[i].indexStruct != -1) {
  6322  000BAC  0E05               	movlw	5
  6323  000BAE  602A               	cpfslt	_i^0,c
  6324  000BB0  D006               	goto	l5841
  6325  000BB2  502A               	movf	_i^0,w,c
  6326  000BB4  D877               	call	PL18	;call to abstracted procedure
  6327  000BB6  28DE               	incf	postinc2,w,c
  6328  000BB8  E002               	bz	l5841
  6329                           
  6330                           ;Usuaris.c: 257:     i++;
  6331  000BBA  2A2A               	incf	_i^0,f,c
  6332  000BBC  D775               	goto	l5745
  6333  000BBE                     l5841:
  6334  000BBE  0E05               	movlw	5
  6335  000BC0  602A               	cpfslt	_i^0,c
  6336  000BC2  D007               	goto	l5847
  6337  000BC4  502A               	movf	_i^0,w,c
  6338  000BC6  D86E               	call	PL18	;call to abstracted procedure
  6339  000BC8  28DE               	incf	postinc2,w,c
  6340  000BCA  E103               	bnz	l5847
  6341  000BCC                     u6310:
  6342                           
  6343                           ;Usuaris.c: 261:     state = 7;
  6344  000BCC  0E07               	movlw	7
  6345  000BCE  6E27               	movwf	UmotorUsers@state^0,c
  6346                           
  6347                           ;Usuaris.c: 262:    }
  6348  000BD0  0C07               	retlw	7
  6349  000BD2                     l5847:
  6350  000BD2  0E04               	movlw	4
  6351  000BD4  642A               	cpfsgt	_i^0,c
  6352  000BD6  0C04               	retlw	4
  6353                           
  6354                           ;Usuaris.c: 264:     i = 0;
  6355  000BD8  6A2A               	clrf	_i^0,c
  6356  000BDA                     l5851:
  6357                           
  6358                           ;Usuaris.c: 265:     state = 8;
  6359  000BDA  0E08               	movlw	8
  6360  000BDC  6E27               	movwf	UmotorUsers@state^0,c
  6361  000BDE  0C08               	retlw	8
  6362  000BE0                     l5853:
  6363                           
  6364                           ;Usuaris.c: 269:    puntuacions[i].score = scoreUsr;
  6365  000BE0  502A               	movf	_i^0,w,c
  6366  000BE2  D85A               	call	PL16	;call to abstracted procedure
  6367  000BE4  C028  FFDF         	movff	_scoreUsr,indf2
  6368                           
  6369                           ;Usuaris.c: 270:    puntuacions[i].indexStruct = usuariLoguejat;
  6370  000BE8  502A               	movf	_i^0,w,c
  6371  000BEA  D85C               	call	PL18	;call to abstracted procedure
  6372  000BEC  C066  FFDF         	movff	_usuariLoguejat,indf2
  6373                           
  6374                           ;Usuaris.c: 271:    i = i+i;
  6375  000BF0  0E02               	movlw	2
  6376  000BF2  022A               	mulwf	_i^0,c
  6377  000BF4  50F3               	movf	prodl,w,c
  6378  000BF6  6E2A               	movwf	_i^0,c
  6379                           
  6380                           ;Usuaris.c: 272:    escriureCharEEPROM(usuariLoguejat,200+i);
  6381  000BF8  502A               	movf	_i^0,w,c
  6382  000BFA  0FC8               	addlw	200
  6383  000BFC  6E4A               	movwf	escriureCharEEPROM@pos^0,c
  6384  000BFE  5066               	movf	_usuariLoguejat^0,w,c
  6385  000C00  ECE2  F00C         	call	_escriureCharEEPROM
  6386                           
  6387                           ;Usuaris.c: 273:    i++;
  6388  000C04  2A2A               	incf	_i^0,f,c
  6389                           
  6390                           ;Usuaris.c: 274:    escriureCharEEPROM(scoreUsr,200+i);
  6391  000C06  502A               	movf	_i^0,w,c
  6392  000C08  0FC8               	addlw	200
  6393  000C0A  6E4A               	movwf	escriureCharEEPROM@pos^0,c
  6394  000C0C  5028               	movf	_scoreUsr^0,w,c
  6395  000C0E  ECE2  F00C         	call	_escriureCharEEPROM
  6396  000C12  D7A9               	goto	l5811
  6397  000C14                     l5865:
  6398                           
  6399                           ;Usuaris.c: 278:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  6400  000C14  502A               	movf	_i^0,w,c
  6401  000C16  D840               	call	PL16	;call to abstracted procedure
  6402  000C18  5028               	movf	_scoreUsr^0,w,c
  6403  000C1A  5CDE               	subwf	postinc2,w,c
  6404  000C1C  E305               	bnc	l5873
  6405  000C1E  0E05               	movlw	5
  6406  000C20  602A               	cpfslt	_i^0,c
  6407  000C22  D002               	goto	l5873
  6408                           
  6409                           ;Usuaris.c: 279:     i++;
  6410  000C24  2A2A               	incf	_i^0,f,c
  6411  000C26  D7D9               	goto	l5851
  6412  000C28                     l5873:
  6413  000C28  0E04               	movlw	4
  6414  000C2A  642A               	cpfsgt	_i^0,c
  6415  000C2C  D001               	goto	l5877
  6416  000C2E  D79B               	goto	l5811
  6417  000C30                     l5877:
  6418  000C30  502A               	movf	_i^0,w,c
  6419  000C32  D832               	call	PL16	;call to abstracted procedure
  6420  000C34  5028               	movf	_scoreUsr^0,w,c
  6421  000C36  5CDE               	subwf	postinc2,w,c
  6422  000C38  B0D8               	btfsc	status,0,c
  6423  000C3A  0012               	return	
  6424  000C3C  0E05               	movlw	5
  6425  000C3E  602A               	cpfslt	_i^0,c
  6426  000C40  0C05               	retlw	5
  6427  000C42  D7C4               	goto	u6310
  6428  000C44                     l5885:
  6429  000C44  5027               	movf	UmotorUsers@state^0,w,c
  6430  000C46  6E4F               	movwf	??_UmotorUsers^0,c
  6431  000C48  6A50               	clrf	(??_UmotorUsers+1)^0,c
  6432                           
  6433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6434                           ; Switch size 1, requested type "space"
  6435                           ; Number of cases is 1, Range of values is 0 to 0
  6436                           ; switch strategies available:
  6437                           ; Name         Instructions Cycles
  6438                           ; simple_byte            4     3 (average)
  6439                           ;	Chosen strategy is simple_byte
  6440  000C4A  5050               	movf	(??_UmotorUsers+1)^0,w,c
  6441  000C4C  A4D8               	btfss	status,2,c
  6442  000C4E  0012               	return	
  6443                           
  6444                           ; Switch size 1, requested type "space"
  6445                           ; Number of cases is 8, Range of values is 0 to 8
  6446                           ; switch strategies available:
  6447                           ; Name         Instructions Cycles
  6448                           ; simple_byte           25    13 (average)
  6449                           ;	Chosen strategy is simple_byte
  6450  000C50  504F               	movf	??_UmotorUsers^0,w,c
  6451  000C52  E101 D6FB          	bz	l758
  6452  000C56  0A01               	xorlw	1	; case 1
  6453  000C58  E101 D729          	bz	l5747
  6454  000C5C  0A03               	xorlw	3	; case 2
  6455  000C5E  E101 D742          	bz	l5761
  6456  000C62  0A01               	xorlw	1	; case 3
  6457  000C64  E101 D757          	bz	l5779
  6458  000C68  0A06               	xorlw	6	; case 5
  6459  000C6A  E101 D77E          	bz	l5813
  6460  000C6E  0A03               	xorlw	3	; case 6
  6461  000C70  E09D               	bz	l5833
  6462  000C72  0A01               	xorlw	1	; case 7
  6463  000C74  E0B5               	bz	l5853
  6464  000C76  0A0F               	xorlw	15	; case 8
  6465  000C78  E0CD               	bz	l5865
  6466  000C7A  0012               	return		;funcret
  6467  000C7C                     __end_of_UmotorUsers:
  6468                           	callstack 0
  6469  000C7C                     PL14:
  6470                           	callstack 27
  6471  000C7C  50F3               	movf	243,w,c
  6472  000C7E  264F               	addwf	??_UmotorUsers^0,f,c
  6473  000C80  50F4               	movf	244,w,c
  6474  000C82  2250               	addwfc	(??_UmotorUsers+1)^0,f,c
  6475  000C84  502A               	movf	_i^0,w,c
  6476  000C86  244F               	addwf	??_UmotorUsers^0,w,c
  6477  000C88  6EE1               	movwf	fsr1l,c
  6478  000C8A  0E00               	movlw	0
  6479  000C8C  2050               	addwfc	(??_UmotorUsers+1)^0,w,c
  6480  000C8E  6EE2               	movwf	fsr1h,c
  6481  000C90  CFDF FFE7          	movff	indf2,indf1
  6482  000C94  2A2A               	incf	_i^0,f,c
  6483  000C96  0012               	return	
  6484  000C98                     __end_ofPL14:
  6485                           	callstack 0
  6486  000C98                     PL16:
  6487                           	callstack 27
  6488  000C98  0D02               	mullw	2
  6489  000C9A  50F3               	movf	243,w,c
  6490  000C9C  0F99               	addlw	low (_puntuacions+1)
  6491  000C9E  6ED9               	movwf	fsr2l,c
  6492  000CA0  6ADA               	clrf	fsr2h,c
  6493  000CA2  0012               	return	
  6494  000CA4                     __end_ofPL16:
  6495                           	callstack 0
  6496  000CA4                     PL18:
  6497                           	callstack 27
  6498  000CA4  0D02               	mullw	2
  6499  000CA6  50F3               	movf	243,w,c
  6500  000CA8  0F98               	addlw	low _puntuacions
  6501  000CAA  6ED9               	movwf	fsr2l,c
  6502  000CAC  6ADA               	clrf	fsr2h,c
  6503  000CAE  0012               	return	
  6504  000CB0                     __end_ofPL18:
  6505                           	callstack 0
  6506  000CB0                     PL22:
  6507                           	callstack 27
  6508  000CB0  6ED9               	movwf	fsr2l,c
  6509  000CB2  6ADA               	clrf	fsr2h,c
  6510  000CB4  502B               	movf	_indexNextUserStruct^0,w,c
  6511  000CB6  0D17               	mullw	23
  6512  000CB8  0E00               	movlw	low _usuaris
  6513  000CBA  6E4F               	movwf	??_UmotorUsers^0,c
  6514  000CBC  0E01               	movlw	high _usuaris
  6515  000CBE  6E50               	movwf	(??_UmotorUsers+1)^0,c
  6516  000CC0  0012               	return	
  6517  000CC2                     __end_ofPL22:
  6518                           	callstack 0
  6519  000CC2                     PL80:
  6520                           	callstack 27
  6521  000CC2  6ED9               	movwf	fsr2l,c
  6522  000CC4  6ADA               	clrf	fsr2h,c
  6523  000CC6  50DF               	movf	indf2,w,c
  6524  000CC8  0012               	return	
  6525  000CCA                     __end_ofPL80:
  6526                           	callstack 0
  6527                           
  6528 ;; *************** function _escriureCharEEPROM *****************
  6529 ;; Defined at:
  6530 ;;		line 67 in file "Usuaris.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  c               1    wreg     unsigned char 
  6533 ;;  pos             1    5[COMRAM] unsigned char 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  c               1    6[COMRAM] unsigned char 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  1    wreg      void 
  6538 ;; Registers used:
  6539 ;;		wreg, status,2
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1
  6545 ;;      Params:         1       0       0
  6546 ;;      Locals:         1       0       0
  6547 ;;      Temps:          0       0       0
  6548 ;;      Totals:         2       0       0
  6549 ;;Total ram usage:        2 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; Hardware stack levels required when called: 2
  6552 ;; This function calls:
  6553 ;;		Nothing
  6554 ;; This function is called by:
  6555 ;;		_UmotorUsers
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559                           	psect	text55
  6560  0019C4                     __ptext55:
  6561                           	callstack 0
  6562  0019C4                     _escriureCharEEPROM:
  6563                           	callstack 27
  6564                           
  6565                           ;incstack = 0
  6566                           ;escriureCharEEPROM@c stored from wreg
  6567  0019C4  6E4B               	movwf	escriureCharEEPROM@c^0,c
  6568                           
  6569                           ;Usuaris.c: 68:     EEADR = pos;
  6570  0019C6  C04A  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  6571                           
  6572                           ;Usuaris.c: 69:     EEDATA = c;
  6573  0019CA  C04B  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  6574                           
  6575                           ;Usuaris.c: 70:     EECON1bits.EEPGD = 0;
  6576  0019CE  9EA6               	bcf	166,7,c	;volsfr
  6577                           
  6578                           ;Usuaris.c: 71:     EECON1bits.CFGS = 0;
  6579  0019D0  9CA6               	bcf	166,6,c	;volsfr
  6580                           
  6581                           ;Usuaris.c: 72:     EECON1bits.WREN = 1;
  6582  0019D2  84A6               	bsf	166,2,c	;volsfr
  6583                           
  6584                           ;Usuaris.c: 73:     INTCONbits.GIE = 0;
  6585  0019D4  9EF2               	bcf	242,7,c	;volatile
  6586                           
  6587                           ;Usuaris.c: 74:     EECON2 = 85;
  6588  0019D6  0E55               	movlw	85
  6589  0019D8  6EA7               	movwf	167,c	;volsfr
  6590                           
  6591                           ;Usuaris.c: 75:     EECON2 = 170;
  6592  0019DA  0EAA               	movlw	170
  6593  0019DC  6EA7               	movwf	167,c	;volsfr
  6594                           
  6595                           ;Usuaris.c: 76:     EECON1bits.WR = 1;
  6596  0019DE  82A6               	bsf	166,1,c	;volsfr
  6597  0019E0                     l724:
  6598  0019E0  B2A6               	btfsc	166,1,c	;volsfr
  6599  0019E2  D7FE               	goto	l724
  6600                           
  6601                           ;Usuaris.c: 78:     INTCONbits.GIE = 1;
  6602  0019E4  8EF2               	bsf	242,7,c	;volatile
  6603                           
  6604                           ;Usuaris.c: 79:     EECON1bits.WREN = 0;
  6605  0019E6  94A6               	bcf	166,2,c	;volsfr
  6606  0019E8  0012               	return		;funcret
  6607  0019EA                     __end_of_escriureCharEEPROM:
  6608                           	callstack 0
  6609                           
  6610 ;; *************** function _compareStrings *****************
  6611 ;; Defined at:
  6612 ;;		line 140 in file "Usuaris.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;  a               1    5[COMRAM] PTR const unsigned char 
  6615 ;;		 -> tmpUsername(9), 
  6616 ;;  b               2    6[COMRAM] PTR const unsigned char 
  6617 ;;		 -> usuaris.username(9), usuaris(184), 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;		None
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1    wreg      unsigned char 
  6622 ;; Registers used:
  6623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1
  6629 ;;      Params:         3       0       0
  6630 ;;      Locals:         0       0       0
  6631 ;;      Temps:          2       0       0
  6632 ;;      Totals:         5       0       0
  6633 ;;Total ram usage:        5 bytes
  6634 ;; Hardware stack levels used: 1
  6635 ;; Hardware stack levels required when called: 2
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_UmotorUsers
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           	psect	text56
  6644  00181C                     __ptext56:
  6645                           	callstack 0
  6646  00181C                     _compareStrings:
  6647                           	callstack 27
  6648                           
  6649                           ;Usuaris.c: 141:     while (*a){
  6650                           
  6651                           ;incstack = 0
  6652  00181C  D00A               	goto	l4385
  6653  00181E                     l4379:
  6654                           
  6655                           ;Usuaris.c: 142:         if (*a != *b)break;
  6656  00181E  D813               	call	PL44	;call to abstracted procedure
  6657  001820  504A               	movf	compareStrings@a^0,w,c
  6658  001822  6EE1               	movwf	fsr1l,c
  6659  001824  6AE2               	clrf	fsr1h,c
  6660  001826  50DE               	movf	postinc2,w,c
  6661  001828  18E6               	xorwf	postinc1,w,c
  6662  00182A  E105               	bnz	u3780
  6663                           
  6664                           ;Usuaris.c: 143:         a++;
  6665  00182C  2A4A               	incf	compareStrings@a^0,f,c
  6666                           
  6667                           ;Usuaris.c: 144:         b++;
  6668  00182E  4A4B               	infsnz	compareStrings@b^0,f,c
  6669  001830  2A4C               	incf	(compareStrings@b+1)^0,f,c
  6670  001832                     l4385:
  6671                           
  6672                           ;Usuaris.c: 141:     while (*a){
  6673  001832  D80E               	call	PL66	;call to abstracted procedure
  6674  001834  E1F4               	bnz	l4379
  6675  001836                     u3780:
  6676                           
  6677                           ;Usuaris.c: 146:     return *(const unsigned char*)a - *(const unsigned char*)b;
  6678  001836  D807               	call	PL44	;call to abstracted procedure
  6679  001838  50DF               	movf	indf2,w,c
  6680  00183A  6E4D               	movwf	??_compareStrings^0,c
  6681  00183C  D809               	call	PL66	;call to abstracted procedure
  6682  00183E  6E4E               	movwf	(??_compareStrings+1)^0,c
  6683  001840  504D               	movf	??_compareStrings^0,w,c
  6684  001842  5C4E               	subwf	(??_compareStrings+1)^0,w,c
  6685  001844  0012               	return		;funcret
  6686  001846                     __end_of_compareStrings:
  6687                           	callstack 0
  6688  001846                     PL44:
  6689                           	callstack 27
  6690  001846  C04B  FFD9         	movff	compareStrings@b,fsr2l
  6691  00184A  C04C  FFDA         	movff	compareStrings@b+1,fsr2h
  6692  00184E  0012               	return	
  6693  001850                     __end_ofPL44:
  6694                           	callstack 0
  6695  001850                     PL66:
  6696                           	callstack 27
  6697  001850  504A               	movf	compareStrings@a^0,w,c
  6698  001852  6ED9               	movwf	fsr2l,c
  6699  001854  6ADA               	clrf	fsr2h,c
  6700  001856  50DF               	movf	indf2,w,c
  6701  001858  0012               	return	
  6702  00185A                     __end_ofPL66:
  6703                           	callstack 0
  6704                           
  6705 ;; *************** function _Uinit *****************
  6706 ;; Defined at:
  6707 ;;		line 88 in file "Usuaris.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;		None
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  i               1    6[COMRAM] unsigned char 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1
  6721 ;;      Params:         0       0       0
  6722 ;;      Locals:         1       0       0
  6723 ;;      Temps:          0       0       0
  6724 ;;      Totals:         1       0       0
  6725 ;;Total ram usage:        1 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 3
  6728 ;; This function calls:
  6729 ;;		_llegirCharEEPROM
  6730 ;; This function is called by:
  6731 ;;		_main
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text57
  6736  001898                     __ptext57:
  6737                           	callstack 0
  6738  001898                     _Uinit:
  6739                           	callstack 27
  6740                           
  6741                           ;Usuaris.c: 131:     puntuacions[0].indexStruct = -1;
  6742                           
  6743                           ;incstack = 0
  6744  001898  0100               	movlb	0	; () banked
  6745  00189A  6998               	setf	_puntuacions& (0+255),b
  6746                           
  6747                           ;Usuaris.c: 132:     for(char i = 0; i<5; i++){
  6748  00189C  6A4B               	clrf	Uinit@i^0,c
  6749  00189E                     l4669:
  6750                           
  6751                           ;Usuaris.c: 133:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  6752  00189E  504B               	movf	Uinit@i^0,w,c
  6753  0018A0  EC52  F006         	call	PL18	;call to abstracted procedure
  6754  0018A4  504B               	movf	Uinit@i^0,w,c
  6755  0018A6  0D02               	mullw	2
  6756  0018A8  50F3               	movf	243,w,c
  6757  0018AA  0FC8               	addlw	200
  6758  0018AC  ECC1  F00D         	call	_llegirCharEEPROM
  6759  0018B0  6EDF               	movwf	indf2,c
  6760                           
  6761                           ;Usuaris.c: 134:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  6762  0018B2  504B               	movf	Uinit@i^0,w,c
  6763  0018B4  EC4C  F006         	call	PL16	;call to abstracted procedure
  6764  0018B8  504B               	movf	Uinit@i^0,w,c
  6765  0018BA  0D02               	mullw	2
  6766  0018BC  50F3               	movf	243,w,c
  6767  0018BE  0FC9               	addlw	201
  6768  0018C0  ECC1  F00D         	call	_llegirCharEEPROM
  6769  0018C4  6EDF               	movwf	indf2,c
  6770                           
  6771                           ;Usuaris.c: 135:     }
  6772  0018C6  2A4B               	incf	Uinit@i^0,f,c
  6773  0018C8  0E04               	movlw	4
  6774  0018CA  644B               	cpfsgt	Uinit@i^0,c
  6775  0018CC  D7E8               	goto	l4669
  6776  0018CE  0C04               	retlw	4
  6777  0018D0                     __end_of_Uinit:
  6778                           	callstack 0
  6779                           
  6780 ;; *************** function _llegirCharEEPROM *****************
  6781 ;; Defined at:
  6782 ;;		line 81 in file "Usuaris.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  pos             1    wreg     unsigned char 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  pos             1    5[COMRAM] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      unsigned char 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1
  6796 ;;      Params:         0       0       0
  6797 ;;      Locals:         1       0       0
  6798 ;;      Temps:          0       0       0
  6799 ;;      Totals:         1       0       0
  6800 ;;Total ram usage:        1 bytes
  6801 ;; Hardware stack levels used: 1
  6802 ;; Hardware stack levels required when called: 2
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_Uinit
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text58
  6811  001B82                     __ptext58:
  6812                           	callstack 0
  6813  001B82                     _llegirCharEEPROM:
  6814                           	callstack 27
  6815                           
  6816                           ;incstack = 0
  6817                           ;llegirCharEEPROM@pos stored from wreg
  6818  001B82  6E4A               	movwf	llegirCharEEPROM@pos^0,c
  6819                           
  6820                           ;Usuaris.c: 82:     EEADR = pos;
  6821  001B84  C04A  FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  6822                           
  6823                           ;Usuaris.c: 83:     EECON1bits.EEPGD = 0;
  6824  001B88  9EA6               	bcf	166,7,c	;volsfr
  6825                           
  6826                           ;Usuaris.c: 84:     EECON1bits.CFGS = 0;
  6827  001B8A  9CA6               	bcf	166,6,c	;volsfr
  6828                           
  6829                           ;Usuaris.c: 85:     EECON1bits.RD = 1;
  6830  001B8C  80A6               	bsf	166,0,c	;volsfr
  6831                           
  6832                           ;Usuaris.c: 86:     return EEDATA;
  6833  001B8E  50A8               	movf	168,w,c	;volatile
  6834  001B90  0012               	return		;funcret
  6835  001B92                     __end_of_llegirCharEEPROM:
  6836                           	callstack 0
  6837                           
  6838 ;; *************** function _TiInitTimer *****************
  6839 ;; Defined at:
  6840 ;;		line 18 in file "TiTTimer.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;		None
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;		None
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  1    wreg      void 
  6847 ;; Registers used:
  6848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMRAM   BANK0   BANK1
  6854 ;;      Params:         0       0       0
  6855 ;;      Locals:         0       0       0
  6856 ;;      Temps:          0       0       0
  6857 ;;      Totals:         0       0       0
  6858 ;;Total ram usage:        0 bytes
  6859 ;; Hardware stack levels used: 1
  6860 ;; Hardware stack levels required when called: 2
  6861 ;; This function calls:
  6862 ;;		Nothing
  6863 ;; This function is called by:
  6864 ;;		_main
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           	psect	text59
  6869  00199C                     __ptext59:
  6870                           	callstack 0
  6871  00199C                     _TiInitTimer:
  6872                           	callstack 28
  6873                           
  6874                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  6875                           
  6876                           ;incstack = 0
  6877  00199C  9ED0               	bcf	208,7,c	;volatile
  6878                           
  6879                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  6880  00199E  8EF2               	bsf	242,7,c	;volatile
  6881                           
  6882                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  6883  0019A0  8CF2               	bsf	242,6,c	;volatile
  6884                           
  6885                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  6886  0019A2  8AF2               	bsf	242,5,c	;volatile
  6887                           
  6888                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  6889  0019A4  94F2               	bcf	242,2,c	;volatile
  6890                           
  6891                           ;TiTTimer.c: 25:     T0CON = 136;
  6892  0019A6  0E88               	movlw	136
  6893  0019A8  6ED5               	movwf	213,c	;volatile
  6894                           
  6895                           ;TiTTimer.c: 27:     TMR0H = 223;
  6896                           
  6897                           ;TiTTimer.c: 28:     TMR0L = 148;
  6898  0019AA  EC09  F00C         	call	PL54	;call to abstracted procedure
  6899                           
  6900                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  6901  0019AE  8ED5               	bsf	213,7,c	;volatile
  6902                           
  6903                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  6904  0019B0  6A34               	clrf	_counter^0,c
  6905  0019B2                     l4485:
  6906  0019B2  0E07               	movlw	7
  6907  0019B4  6434               	cpfsgt	_counter^0,c
  6908  0019B6  D001               	goto	l4489
  6909  0019B8  0C07               	retlw	7
  6910  0019BA                     l4489:
  6911                           
  6912                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  6913  0019BA  ECC7  F00C         	call	PL12	;call to abstracted procedure
  6914  0019BE  6ADF               	clrf	indf2,c
  6915                           
  6916                           ;TiTTimer.c: 33:     }
  6917  0019C0  2A34               	incf	_counter^0,f,c
  6918  0019C2  D7F7               	goto	l4485
  6919  0019C4                     __end_of_TiInitTimer:
  6920                           	callstack 0
  6921                           
  6922 ;; *************** function _TeTeclat *****************
  6923 ;; Defined at:
  6924 ;;		line 21 in file "TeTeclat.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;		None
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;		None
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1    wreg      void 
  6931 ;; Registers used:
  6932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1
  6938 ;;      Params:         0       0       0
  6939 ;;      Locals:         0       0       0
  6940 ;;      Temps:          4       0       0
  6941 ;;      Totals:         4       0       0
  6942 ;;Total ram usage:        4 bytes
  6943 ;; Hardware stack levels used: 1
  6944 ;; Hardware stack levels required when called: 3
  6945 ;; This function calls:
  6946 ;;		_MsetNovaTecla
  6947 ;;		_SsetNovaTecla
  6948 ;;		_TiGetTics
  6949 ;;		_TiResetTics
  6950 ;; This function is called by:
  6951 ;;		_main
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text60
  6956  001092                     __ptext60:
  6957                           	callstack 0
  6958  001092                     _TeTeclat:
  6959                           	callstack 27
  6960                           
  6961                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  6962                           
  6963                           ;incstack = 0
  6964  001092  A083               	btfss	131,0,c	;volatile
  6965  001094  D003               	goto	u6380
  6966  001096  6A51               	clrf	??_TeTeclat^0,c
  6967  001098  2A51               	incf	??_TeTeclat^0,f,c
  6968  00109A  D001               	goto	u6388
  6969  00109C                     u6380:
  6970  00109C  6A51               	clrf	??_TeTeclat^0,c
  6971  00109E                     u6388:
  6972  00109E  0E01               	movlw	1
  6973  0010A0  A283               	btfss	131,1,c	;volatile
  6974  0010A2  0E00               	movlw	0
  6975  0010A4  0D02               	mullw	2
  6976  0010A6  CFF3 F052          	movff	prodl,??_TeTeclat+1
  6977  0010AA  0E01               	movlw	1
  6978  0010AC  A483               	btfss	131,2,c	;volatile
  6979  0010AE  0E00               	movlw	0
  6980  0010B0  0D03               	mullw	3
  6981  0010B2  CFF3 F053          	movff	prodl,??_TeTeclat+2
  6982  0010B6  0E01               	movlw	1
  6983  0010B8  A683               	btfss	131,3,c	;volatile
  6984  0010BA  0E00               	movlw	0
  6985  0010BC  0D04               	mullw	4
  6986  0010BE  50F3               	movf	243,w,c
  6987  0010C0  2453               	addwf	(??_TeTeclat+2)^0,w,c
  6988  0010C2  2452               	addwf	(??_TeTeclat+1)^0,w,c
  6989  0010C4  2451               	addwf	??_TeTeclat^0,w,c
  6990  0010C6  6E35               	movwf	TeTeclat@files^0,c
  6991                           
  6992                           ;TeTeclat.c: 26:  switch(state) {
  6993  0010C8  D058               	goto	l5967
  6994  0010CA                     l5893:
  6995                           
  6996                           ;TeTeclat.c: 28:    if (files==0) {
  6997  0010CA  5035               	movf	TeTeclat@files^0,w,c
  6998  0010CC  E106               	bnz	l5899
  6999                           
  7000                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  7001  0010CE  888C               	bsf	140,4,c	;volatile
  7002                           
  7003                           ;TeTeclat.c: 30:     LATDbits.LD5=0;
  7004  0010D0  9A8C               	bcf	140,5,c	;volatile
  7005                           
  7006                           ;TeTeclat.c: 31:     LATDbits.LD6=0;
  7007  0010D2  9C8C               	bcf	140,6,c	;volatile
  7008                           
  7009                           ;TeTeclat.c: 32:     cols=0;
  7010  0010D4  6A36               	clrf	TeTeclat@cols^0,c
  7011  0010D6                     l5897:
  7012                           
  7013                           ;TeTeclat.c: 33:     state++;
  7014  0010D6  2A37               	incf	TeTeclat@state^0,f,c
  7015                           
  7016                           ;TeTeclat.c: 34:    }
  7017  0010D8  0012               	return	
  7018  0010DA                     l5899:
  7019  0010DA  5035               	movf	TeTeclat@files^0,w,c
  7020  0010DC  B4D8               	btfsc	status,2,c
  7021  0010DE  0012               	return	
  7022                           
  7023                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  7024  0010E0  5038               	movf	_tiTeclat^0,w,c
  7025  0010E2  EC79  F00D         	call	_TiResetTics
  7026  0010E6                     l5903:
  7027                           
  7028                           ;TeTeclat.c: 37:     state = 3;
  7029  0010E6  0E03               	movlw	3
  7030  0010E8  6E37               	movwf	TeTeclat@state^0,c
  7031  0010EA  0C03               	retlw	3
  7032  0010EC                     l5905:
  7033                           
  7034                           ;TeTeclat.c: 41:    if (files==0) {
  7035  0010EC  5035               	movf	TeTeclat@files^0,w,c
  7036  0010EE  E106               	bnz	l5913
  7037                           
  7038                           ;TeTeclat.c: 42:     LATDbits.LD4=0;
  7039  0010F0  988C               	bcf	140,4,c	;volatile
  7040                           
  7041                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  7042  0010F2  8A8C               	bsf	140,5,c	;volatile
  7043                           
  7044                           ;TeTeclat.c: 44:     LATDbits.LD6=0;
  7045  0010F4  9C8C               	bcf	140,6,c	;volatile
  7046                           
  7047                           ;TeTeclat.c: 45:     cols=1;
  7048  0010F6  0E01               	movlw	1
  7049  0010F8  6E36               	movwf	TeTeclat@cols^0,c
  7050  0010FA  D7ED               	goto	l5897
  7051  0010FC                     l5913:
  7052  0010FC  5035               	movf	TeTeclat@files^0,w,c
  7053  0010FE  B4D8               	btfsc	status,2,c
  7054  001100  0012               	return	
  7055                           
  7056                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  7057  001102  5038               	movf	_tiTeclat^0,w,c
  7058  001104  EC79  F00D         	call	_TiResetTics
  7059  001108  D7EE               	goto	l5903
  7060  00110A                     l5919:
  7061                           
  7062                           ;TeTeclat.c: 54:    if (files==0) {
  7063  00110A  5035               	movf	TeTeclat@files^0,w,c
  7064  00110C  E107               	bnz	l5927
  7065                           
  7066                           ;TeTeclat.c: 55:     LATDbits.LD4=0;
  7067  00110E  988C               	bcf	140,4,c	;volatile
  7068                           
  7069                           ;TeTeclat.c: 56:     LATDbits.LD5=0;
  7070  001110  9A8C               	bcf	140,5,c	;volatile
  7071                           
  7072                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  7073  001112  8C8C               	bsf	140,6,c	;volatile
  7074                           
  7075                           ;TeTeclat.c: 58:     cols=2;
  7076  001114  0E02               	movlw	2
  7077  001116  6E36               	movwf	TeTeclat@cols^0,c
  7078  001118                     l5925:
  7079                           
  7080                           ;TeTeclat.c: 59:     state = 0;
  7081  001118  6A37               	clrf	TeTeclat@state^0,c
  7082                           
  7083                           ;TeTeclat.c: 60:    }
  7084  00111A  0012               	return	
  7085  00111C                     l5927:
  7086  00111C  5035               	movf	TeTeclat@files^0,w,c
  7087  00111E  B4D8               	btfsc	status,2,c
  7088  001120  0012               	return	
  7089                           
  7090                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  7091  001122  5038               	movf	_tiTeclat^0,w,c
  7092  001124  EC79  F00D         	call	_TiResetTics
  7093  001128  D7D6               	goto	l5897
  7094  00112A                     l5933:
  7095                           
  7096                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  7097  00112A  5038               	movf	_tiTeclat^0,w,c
  7098  00112C  ECF5  F00C         	call	_TiGetTics
  7099  001130  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  7100  001132  0012               	return	
  7101  001134  D7D0               	goto	l5897
  7102  001136                     l5937:
  7103                           
  7104                           ;TeTeclat.c: 72:    if (files==0) {
  7105  001136  5035               	movf	TeTeclat@files^0,w,c
  7106  001138  E103               	bnz	l5941
  7107                           
  7108                           ;TeTeclat.c: 73:     state = 1;
  7109  00113A  0E01               	movlw	1
  7110  00113C  6E37               	movwf	TeTeclat@state^0,c
  7111                           
  7112                           ;TeTeclat.c: 74:    }
  7113  00113E  0C01               	retlw	1
  7114  001140                     l5941:
  7115  001140  5035               	movf	TeTeclat@files^0,w,c
  7116  001142  B4D8               	btfsc	status,2,c
  7117  001144  0012               	return	
  7118                           
  7119                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7120  001146  D830               	call	PL8	;call to abstracted procedure
  7121  001148  EC3C  F00E         	call	_MsetNovaTecla
  7122                           
  7123                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7124  00114C  D82D               	call	PL8	;call to abstracted procedure
  7125  00114E  EC38  F00E         	call	_SsetNovaTecla
  7126  001152  D7C1               	goto	l5897
  7127  001154                     l5947:
  7128                           
  7129                           ;TeTeclat.c: 82:    if (files==0) {
  7130  001154  5035               	movf	TeTeclat@files^0,w,c
  7131  001156  A4D8               	btfss	status,2,c
  7132  001158  0012               	return	
  7133                           
  7134                           ;TeTeclat.c: 83:     TiResetTics(tiTeclat);
  7135  00115A  5038               	movf	_tiTeclat^0,w,c
  7136  00115C  EC79  F00D         	call	_TiResetTics
  7137  001160  D7BA               	goto	l5897
  7138  001162                     l5953:
  7139                           
  7140                           ;TeTeclat.c: 88:    if (TiGetTics(tiTeclat)>=0) {
  7141  001162  5038               	movf	_tiTeclat^0,w,c
  7142  001164  ECF5  F00C         	call	_TiGetTics
  7143  001168  D7E3               	goto	L3
  7144  00116A                     l5957:
  7145                           
  7146                           ;TeTeclat.c: 93:    if (files!=0) {
  7147  00116A  5035               	movf	TeTeclat@files^0,w,c
  7148  00116C  E003               	bz	l5961
  7149                           
  7150                           ;TeTeclat.c: 94:     state = 5;
  7151  00116E  0E05               	movlw	5
  7152  001170  6E37               	movwf	TeTeclat@state^0,c
  7153                           
  7154                           ;TeTeclat.c: 95:    }
  7155  001172  0C05               	retlw	5
  7156  001174                     l5961:
  7157  001174  5035               	movf	TeTeclat@files^0,w,c
  7158  001176  E0D0               	bz	l5925
  7159  001178  0012               	return	
  7160  00117A                     l5967:
  7161  00117A  5037               	movf	TeTeclat@state^0,w,c
  7162  00117C  6E51               	movwf	??_TeTeclat^0,c
  7163  00117E  6A52               	clrf	(??_TeTeclat+1)^0,c
  7164                           
  7165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7166                           ; Switch size 1, requested type "space"
  7167                           ; Number of cases is 1, Range of values is 0 to 0
  7168                           ; switch strategies available:
  7169                           ; Name         Instructions Cycles
  7170                           ; simple_byte            4     3 (average)
  7171                           ;	Chosen strategy is simple_byte
  7172  001180  5052               	movf	(??_TeTeclat+1)^0,w,c
  7173  001182  A4D8               	btfss	status,2,c
  7174  001184  0012               	return	
  7175                           
  7176                           ; Switch size 1, requested type "space"
  7177                           ; Number of cases is 8, Range of values is 0 to 7
  7178                           ; switch strategies available:
  7179                           ; Name         Instructions Cycles
  7180                           ; simple_byte           25    13 (average)
  7181                           ;	Chosen strategy is simple_byte
  7182  001186  5051               	movf	??_TeTeclat^0,w,c
  7183  001188  E0A0               	bz	l5893
  7184  00118A  0A01               	xorlw	1	; case 1
  7185  00118C  E0AF               	bz	l5905
  7186  00118E  0A03               	xorlw	3	; case 2
  7187  001190  E0BC               	bz	l5919
  7188  001192  0A01               	xorlw	1	; case 3
  7189  001194  E0CA               	bz	l5933
  7190  001196  0A07               	xorlw	7	; case 4
  7191  001198  E0CE               	bz	l5937
  7192  00119A  0A01               	xorlw	1	; case 5
  7193  00119C  E0DB               	bz	l5947
  7194  00119E  0A03               	xorlw	3	; case 6
  7195  0011A0  E0E0               	bz	l5953
  7196  0011A2  0A01               	xorlw	1	; case 7
  7197  0011A4  E0E2               	bz	l5957
  7198  0011A6  0012               	return		;funcret
  7199  0011A8                     __end_of_TeTeclat:
  7200                           	callstack 0
  7201  0011A8                     PL8:
  7202                           	callstack 27
  7203  0011A8  0EFD               	movlw	253
  7204  0011AA  6E51               	movwf	??_TeTeclat^0,c
  7205  0011AC  6852               	setf	(??_TeTeclat+1)^0,c
  7206  0011AE  5035               	movf	TeTeclat@files^0,w,c
  7207  0011B0  0D03               	mullw	3
  7208  0011B2  0E90               	movlw	low _teclaPremuda
  7209  0011B4  6E53               	movwf	(??_TeTeclat+2)^0,c
  7210  0011B6  0E1F               	movlw	high _teclaPremuda
  7211  0011B8  6E54               	movwf	(??_TeTeclat+3)^0,c
  7212  0011BA  50F3               	movf	243,w,c
  7213  0011BC  2653               	addwf	(??_TeTeclat+2)^0,f,c
  7214  0011BE  50F4               	movf	244,w,c
  7215  0011C0  2254               	addwfc	(??_TeTeclat+3)^0,f,c
  7216  0011C2  5036               	movf	TeTeclat@cols^0,w,c
  7217  0011C4  2653               	addwf	(??_TeTeclat+2)^0,f,c
  7218  0011C6  0E00               	movlw	0
  7219  0011C8  2254               	addwfc	(??_TeTeclat+3)^0,f,c
  7220  0011CA  5051               	movf	??_TeTeclat^0,w,c
  7221  0011CC  2653               	addwf	(??_TeTeclat+2)^0,f,c
  7222  0011CE  5052               	movf	(??_TeTeclat+1)^0,w,c
  7223  0011D0  2254               	addwfc	(??_TeTeclat+3)^0,f,c
  7224  0011D2  C053  FFF6         	movff	??_TeTeclat+2,tblptrl
  7225  0011D6  C054  FFF7         	movff	??_TeTeclat+3,tblptrh
  7226  0011DA                     	if	0	;tblptru may be non-zero
  7227  0011DA                     	endif
  7228  0011DA                     	if	0	;tblptru may be non-zero
  7229  0011DA                     	endif
  7230  0011DA  0008               	tblrd		*
  7231  0011DC  50F5               	movf	tablat,w,c
  7232  0011DE  0012               	return	
  7233  0011E0                     __end_ofPL8:
  7234                           	callstack 0
  7235                           
  7236 ;; *************** function _SsetNovaTecla *****************
  7237 ;; Defined at:
  7238 ;;		line 124 in file "Ssms.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  tecla           1    wreg     unsigned char 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  tecla           1    5[COMRAM] unsigned char 
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  1    wreg      void 
  7245 ;; Registers used:
  7246 ;;		wreg
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMRAM   BANK0   BANK1
  7252 ;;      Params:         0       0       0
  7253 ;;      Locals:         1       0       0
  7254 ;;      Temps:          0       0       0
  7255 ;;      Totals:         1       0       0
  7256 ;;Total ram usage:        1 bytes
  7257 ;; Hardware stack levels used: 1
  7258 ;; Hardware stack levels required when called: 2
  7259 ;; This function calls:
  7260 ;;		Nothing
  7261 ;; This function is called by:
  7262 ;;		_TeTeclat
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           	psect	text61
  7267  001C70                     __ptext61:
  7268                           	callstack 0
  7269  001C70                     _SsetNovaTecla:
  7270                           	callstack 27
  7271                           
  7272                           ;incstack = 0
  7273                           ;SsetNovaTecla@tecla stored from wreg
  7274  001C70  6E4A               	movwf	SsetNovaTecla@tecla^0,c
  7275                           
  7276                           ;Ssms.c: 125:     novaTecla = tecla;
  7277  001C72  C04A  F06B         	movff	SsetNovaTecla@tecla,_novaTecla
  7278  001C76  0012               	return		;funcret
  7279  001C78                     __end_of_SsetNovaTecla:
  7280                           	callstack 0
  7281                           
  7282 ;; *************** function _MsetNovaTecla *****************
  7283 ;; Defined at:
  7284 ;;		line 31 in file "Menu.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;  tecla           1    wreg     unsigned char 
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;  tecla           1    5[COMRAM] unsigned char 
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  1    wreg      void 
  7291 ;; Registers used:
  7292 ;;		wreg
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMRAM   BANK0   BANK1
  7298 ;;      Params:         0       0       0
  7299 ;;      Locals:         1       0       0
  7300 ;;      Temps:          0       0       0
  7301 ;;      Totals:         1       0       0
  7302 ;;Total ram usage:        1 bytes
  7303 ;; Hardware stack levels used: 1
  7304 ;; Hardware stack levels required when called: 2
  7305 ;; This function calls:
  7306 ;;		Nothing
  7307 ;; This function is called by:
  7308 ;;		_TeTeclat
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           	psect	text62
  7313  001C78                     __ptext62:
  7314                           	callstack 0
  7315  001C78                     _MsetNovaTecla:
  7316                           	callstack 27
  7317                           
  7318                           ;incstack = 0
  7319                           ;MsetNovaTecla@tecla stored from wreg
  7320  001C78  6E4A               	movwf	MsetNovaTecla@tecla^0,c
  7321                           
  7322                           ;Menu.c: 32:     NovaTecla = tecla;
  7323  001C7A  C04A  F069         	movff	MsetNovaTecla@tecla,_NovaTecla
  7324  001C7E  0012               	return		;funcret
  7325  001C80                     __end_of_MsetNovaTecla:
  7326                           	callstack 0
  7327                           
  7328 ;; *************** function _TeInit *****************
  7329 ;; Defined at:
  7330 ;;		line 17 in file "TeTeclat.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;		None
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;		None
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1    wreg      void 
  7337 ;; Registers used:
  7338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1
  7344 ;;      Params:         0       0       0
  7345 ;;      Locals:         0       0       0
  7346 ;;      Temps:          0       0       0
  7347 ;;      Totals:         0       0       0
  7348 ;;Total ram usage:        0 bytes
  7349 ;; Hardware stack levels used: 1
  7350 ;; Hardware stack levels required when called: 3
  7351 ;; This function calls:
  7352 ;;		_TiGetTimer
  7353 ;; This function is called by:
  7354 ;;		_main
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text63
  7359  001C80                     __ptext63:
  7360                           	callstack 0
  7361  001C80                     _TeInit:
  7362                           	callstack 27
  7363                           
  7364                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  7365                           
  7366                           ;incstack = 0
  7367  001C80  ECB8  F00C         	call	_TiGetTimer	;wreg free
  7368  001C84  6E38               	movwf	_tiTeclat^0,c
  7369  001C86  0012               	return		;funcret
  7370  001C88                     __end_of_TeInit:
  7371                           	callstack 0
  7372                           
  7373 ;; *************** function _Sinit *****************
  7374 ;; Defined at:
  7375 ;;		line 18 in file "Ssms.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;		None
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1
  7389 ;;      Params:         0       0       0
  7390 ;;      Locals:         0       0       0
  7391 ;;      Temps:          0       0       0
  7392 ;;      Totals:         0       0       0
  7393 ;;Total ram usage:        0 bytes
  7394 ;; Hardware stack levels used: 1
  7395 ;; Hardware stack levels required when called: 3
  7396 ;; This function calls:
  7397 ;;		_TiGetTimer
  7398 ;; This function is called by:
  7399 ;;		_main
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text64
  7404  001C88                     __ptext64:
  7405                           	callstack 0
  7406  001C88                     _Sinit:
  7407                           	callstack 27
  7408                           
  7409                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  7410                           
  7411                           ;incstack = 0
  7412  001C88  ECB8  F00C         	call	_TiGetTimer	;wreg free
  7413  001C8C  6E3B               	movwf	_timerSMS^0,c
  7414  001C8E  0012               	return		;funcret
  7415  001C90                     __end_of_Sinit:
  7416                           	callstack 0
  7417                           
  7418 ;; *************** function _SMotor *****************
  7419 ;; Defined at:
  7420 ;;		line 22 in file "Ssms.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1
  7434 ;;      Params:         0       0       0
  7435 ;;      Locals:         0       0       0
  7436 ;;      Temps:          4       0       0
  7437 ;;      Totals:         4       0       0
  7438 ;;Total ram usage:        4 bytes
  7439 ;; Hardware stack levels used: 1
  7440 ;; Hardware stack levels required when called: 3
  7441 ;; This function calls:
  7442 ;;		_MNovaLletra
  7443 ;;		_TiGetTics
  7444 ;;		_TiResetTics
  7445 ;; This function is called by:
  7446 ;;		_main
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text65
  7451  000EB2                     __ptext65:
  7452                           	callstack 0
  7453  000EB2                     _SMotor:
  7454                           	callstack 27
  7455                           
  7456                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  7457                           
  7458                           ;incstack = 0
  7459  000EB2  D0C1               	goto	l4657
  7460  000EB4                     l4501:
  7461                           
  7462                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  7463  000EB4  286B               	incf	_novaTecla^0,w,c
  7464  000EB6  E008               	bz	l4509
  7465  000EB8  A078               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7466  000EBA  D006               	goto	l4509
  7467                           
  7468                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  7469  000EBC  503B               	movf	_timerSMS^0,w,c
  7470  000EBE  EC79  F00D         	call	_TiResetTics
  7471                           
  7472                           ;Ssms.c: 29:     state = 3;
  7473  000EC2  0E03               	movlw	3
  7474  000EC4  6E39               	movwf	SMotor@state^0,c
  7475                           
  7476                           ;Ssms.c: 30:    }
  7477  000EC6  0C03               	retlw	3
  7478  000EC8                     l4509:
  7479  000EC8  286B               	incf	_novaTecla^0,w,c
  7480  000ECA  A4D8               	btfss	status,2,c
  7481  000ECC  0012               	return	
  7482  000ECE  503B               	movf	_timerSMS^0,w,c
  7483  000ED0  ECF5  F00C         	call	_TiGetTics
  7484  000ED4  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  7485  000ED6  0012               	return	
  7486  000ED8  D8D7               	call	PL50	;call to abstracted procedure
  7487  000EDA  A0D8               	btfss	status,0,c
  7488  000EDC  0012               	return	
  7489  000EDE  286C               	incf	_lletraASCII^0,w,c
  7490  000EE0  A4D8               	btfss	status,2,c
  7491  000EE2  A078               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7492  000EE4  0012               	return	
  7493                           
  7494                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  7495  000EE6  506C               	movf	_lletraASCII^0,w,c
  7496  000EE8  EC48  F00E         	call	_MNovaLletra
  7497                           
  7498                           ;Ssms.c: 33:     lletraASCII = -1;
  7499  000EEC  686C               	setf	_lletraASCII^0,c
  7500                           
  7501                           ;Ssms.c: 34:     ultimaTecla = -1;
  7502  000EEE  686A               	setf	_ultimaTecla^0,c
  7503                           
  7504                           ;Ssms.c: 35:     zeroTecla = 0;
  7505  000EF0  6A3A               	clrf	_zeroTecla^0,c
  7506  000EF2  0012               	return	
  7507  000EF4                     l4525:
  7508                           
  7509                           ;Ssms.c: 39:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  7510  000EF4  506A               	movf	_ultimaTecla^0,w,c
  7511  000EF6  186B               	xorwf	_novaTecla^0,w,c
  7512  000EF8  E10C               	bnz	l4533
  7513  000EFA  503B               	movf	_timerSMS^0,w,c
  7514  000EFC  ECF5  F00C         	call	_TiGetTics
  7515  000F00  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  7516  000F02  D002               	goto	u3950
  7517  000F04  D8C1               	call	PL50	;call to abstracted procedure
  7518  000F06  E205               	bc	l4533
  7519  000F08                     u3950:
  7520                           
  7521                           ;Ssms.c: 40:     novaTecla = -1;
  7522  000F08  686B               	setf	_novaTecla^0,c
  7523                           
  7524                           ;Ssms.c: 41:     sumaPulsacions++;
  7525  000F0A  2A3C               	incf	_sumaPulsacions^0,f,c
  7526                           
  7527                           ;Ssms.c: 42:     lletraASCII++;
  7528  000F0C  2A6C               	incf	_lletraASCII^0,f,c
  7529                           
  7530                           ;Ssms.c: 43:     state++;
  7531  000F0E  2A39               	incf	SMotor@state^0,f,c
  7532                           
  7533                           ;Ssms.c: 44:    }
  7534  000F10  0012               	return	
  7535  000F12                     l4533:
  7536  000F12  286B               	incf	_novaTecla^0,w,c
  7537  000F14  B4D8               	btfsc	status,2,c
  7538  000F16  0012               	return	
  7539  000F18  506A               	movf	_ultimaTecla^0,w,c
  7540  000F1A  186B               	xorwf	_novaTecla^0,w,c
  7541  000F1C  B4D8               	btfsc	status,2,c
  7542  000F1E  0012               	return	
  7543                           
  7544                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  7545  000F20  506C               	movf	_lletraASCII^0,w,c
  7546  000F22  EC48  F00E         	call	_MNovaLletra
  7547                           
  7548                           ;Ssms.c: 47:     if(novaTecla != 0){
  7549  000F26  506B               	movf	_novaTecla^0,w,c
  7550  000F28  E007               	bz	l4543
  7551                           
  7552                           ;Ssms.c: 48:       lletraASCII = lletraInici[novaTecla-2];
  7553  000F2A  0EFE               	movlw	254
  7554  000F2C  6E51               	movwf	??_SMotor^0,c
  7555  000F2E  6852               	setf	(??_SMotor+1)^0,c
  7556  000F30  C06B  F053         	movff	_novaTecla,??_SMotor+2
  7557  000F34  D898               	call	PL10	;call to abstracted procedure
  7558                           
  7559                           ;Ssms.c: 49:     }else{
  7560  000F36  D002               	goto	l4545
  7561  000F38                     l4543:
  7562                           
  7563                           ;Ssms.c: 50:       lletraASCII = '0';
  7564  000F38  0E30               	movlw	48
  7565  000F3A  6E6C               	movwf	_lletraASCII^0,c
  7566  000F3C                     l4545:
  7567                           
  7568                           ;Ssms.c: 52:     zeroTecla=0;
  7569  000F3C  6A3A               	clrf	_zeroTecla^0,c
  7570                           
  7571                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  7572  000F3E  C06B  F06A         	movff	_novaTecla,_ultimaTecla
  7573                           
  7574                           ;Ssms.c: 54:     sumaPulsacions = 0;
  7575  000F42  6A3C               	clrf	_sumaPulsacions^0,c
  7576                           
  7577                           ;Ssms.c: 55:     novaTecla = -1;
  7578  000F44  686B               	setf	_novaTecla^0,c
  7579                           
  7580                           ;Ssms.c: 56:     state--;
  7581  000F46  0639               	decf	SMotor@state^0,f,c
  7582  000F48  0012               	return	
  7583  000F4A                     l4555:
  7584                           
  7585                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  7586  000F4A  0E07               	movlw	7
  7587  000F4C  186A               	xorwf	_ultimaTecla^0,w,c
  7588  000F4E  E008               	bz	l4563
  7589  000F50  0E09               	movlw	9
  7590  000F52  186A               	xorwf	_ultimaTecla^0,w,c
  7591  000F54  E005               	bz	l4563
  7592  000F56  506A               	movf	_ultimaTecla^0,w,c
  7593  000F58  E003               	bz	l4563
  7594                           
  7595                           ;Ssms.c: 61:     state = 5;
  7596  000F5A  0E05               	movlw	5
  7597  000F5C  6E39               	movwf	SMotor@state^0,c
  7598                           
  7599                           ;Ssms.c: 62:    }
  7600  000F5E  0C05               	retlw	5
  7601  000F60                     l4563:
  7602  000F60  0E07               	movlw	7
  7603  000F62  186A               	xorwf	_ultimaTecla^0,w,c
  7604  000F64  E003               	bz	u4030
  7605  000F66  0E09               	movlw	9
  7606  000F68  186A               	xorwf	_ultimaTecla^0,w,c
  7607  000F6A  E103               	bnz	l4569
  7608  000F6C                     u4030:
  7609                           
  7610                           ;Ssms.c: 64:     state = 6;
  7611  000F6C  0E06               	movlw	6
  7612  000F6E  6E39               	movwf	SMotor@state^0,c
  7613                           
  7614                           ;Ssms.c: 65:    }
  7615  000F70  0C06               	retlw	6
  7616  000F72                     l4569:
  7617  000F72  506A               	movf	_ultimaTecla^0,w,c
  7618  000F74  A4D8               	btfss	status,2,c
  7619  000F76  0012               	return	
  7620                           
  7621                           ;Ssms.c: 67:     zeroTecla++;
  7622  000F78  2A3A               	incf	_zeroTecla^0,f,c
  7623                           
  7624                           ;Ssms.c: 68:     if(zeroTecla == 2) zeroTecla = 0;
  7625  000F7A  0E02               	movlw	2
  7626  000F7C  183A               	xorwf	_zeroTecla^0,w,c
  7627  000F7E  E101               	bnz	l4577
  7628  000F80  6A3A               	clrf	_zeroTecla^0,c
  7629  000F82                     l4577:
  7630                           
  7631                           ;Ssms.c: 69:     lletraASCII = arrayZero[zeroTecla];
  7632  000F82  0EFD               	movlw	low _arrayZero
  7633  000F84  243A               	addwf	_zeroTecla^0,w,c
  7634  000F86  6EF6               	movwf	tblptrl,c
  7635  000F88  6AF7               	clrf	tblptrh,c
  7636  000F8A  0E1E               	movlw	high _arrayZero
  7637  000F8C  22F7               	addwfc	tblptrh,f,c
  7638  000F8E                     	if	0	;There are less than 3 active tblptr bytes
  7639  000F8E                     	endif
  7640  000F8E  0008               	tblrd		*
  7641  000F90  CFF5 F06C          	movff	tablat,_lletraASCII
  7642  000F94                     l4579:
  7643                           
  7644                           ;Ssms.c: 70:     state = 0;
  7645  000F94  6A39               	clrf	SMotor@state^0,c
  7646  000F96  0012               	return	
  7647  000F98                     l4581:
  7648                           
  7649                           ;Ssms.c: 74:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  7650  000F98  506B               	movf	_novaTecla^0,w,c
  7651  000F9A  0A80               	xorlw	128
  7652  000F9C  0F7E               	addlw	-130
  7653  000F9E  E202               	bc	u4070
  7654  000FA0  506B               	movf	_novaTecla^0,w,c
  7655  000FA2  E107               	bnz	l4589
  7656  000FA4                     u4070:
  7657  000FA4  506B               	movf	_novaTecla^0,w,c
  7658  000FA6  0A80               	xorlw	128
  7659  000FA8  0F76               	addlw	-138
  7660  000FAA  E203               	bc	l4589
  7661                           
  7662                           ;Ssms.c: 75:     state = 1;
  7663  000FAC  0E01               	movlw	1
  7664  000FAE  6E39               	movwf	SMotor@state^0,c
  7665                           
  7666                           ;Ssms.c: 76:    }
  7667  000FB0  0C01               	retlw	1
  7668  000FB2                     l4589:
  7669  000FB2  506B               	movf	_novaTecla^0,w,c
  7670  000FB4  E00C               	bz	l4601
  7671  000FB6  506B               	movf	_novaTecla^0,w,c
  7672  000FB8  0A80               	xorlw	128
  7673  000FBA  0F7E               	addlw	-130
  7674  000FBC  E208               	bc	l4601
  7675  000FBE  286C               	incf	_lletraASCII^0,w,c
  7676  000FC0  E106               	bnz	l4601
  7677                           
  7678                           ;Ssms.c: 78:     MNovaLletra(novaTecla+48);
  7679  000FC2  506B               	movf	_novaTecla^0,w,c
  7680  000FC4  0F30               	addlw	48
  7681  000FC6  EC48  F00E         	call	_MNovaLletra
  7682  000FCA                     l4597:
  7683                           
  7684                           ;Ssms.c: 79:     novaTecla = -1;
  7685  000FCA  686B               	setf	_novaTecla^0,c
  7686  000FCC  D7E3               	goto	l4579
  7687  000FCE                     l4601:
  7688  000FCE  506B               	movf	_novaTecla^0,w,c
  7689  000FD0  B4D8               	btfsc	status,2,c
  7690  000FD2  0012               	return	
  7691  000FD4  506B               	movf	_novaTecla^0,w,c
  7692  000FD6  0A80               	xorlw	128
  7693  000FD8  0F7E               	addlw	-130
  7694  000FDA  B0D8               	btfsc	status,0,c
  7695  000FDC  0012               	return	
  7696  000FDE  286C               	incf	_lletraASCII^0,w,c
  7697  000FE0  B4D8               	btfsc	status,2,c
  7698  000FE2  0012               	return	
  7699                           
  7700                           ;Ssms.c: 83:     MNovaLletra(lletraASCII);
  7701  000FE4  506C               	movf	_lletraASCII^0,w,c
  7702  000FE6  EC48  F00E         	call	_MNovaLletra
  7703                           
  7704                           ;Ssms.c: 84:     lletraASCII = -1;
  7705  000FEA  686C               	setf	_lletraASCII^0,c
  7706                           
  7707                           ;Ssms.c: 85:     state++;
  7708  000FEC  2A39               	incf	SMotor@state^0,f,c
  7709  000FEE  0012               	return	
  7710  000FF0                     l4613:
  7711                           
  7712                           ;Ssms.c: 89:    MNovaLletra(novaTecla+48);
  7713  000FF0  506B               	movf	_novaTecla^0,w,c
  7714  000FF2  0F30               	addlw	48
  7715  000FF4  EC48  F00E         	call	_MNovaLletra
  7716  000FF8  D7E8               	goto	l4597
  7717  000FFA                     l4619:
  7718                           
  7719                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  7720  000FFA  0E04               	movlw	4
  7721  000FFC  183C               	xorwf	_sumaPulsacions^0,w,c
  7722  000FFE  E108               	bnz	l4627
  7723  001000                     u4150:
  7724                           
  7725                           ;Ssms.c: 95:     lletraASCII = lletraInici[ultimaTecla-2];
  7726  001000  0EFE               	movlw	254
  7727  001002  6E51               	movwf	??_SMotor^0,c
  7728  001004  6852               	setf	(??_SMotor+1)^0,c
  7729  001006  C06A  F053         	movff	_ultimaTecla,??_SMotor+2
  7730  00100A  D82D               	call	PL10	;call to abstracted procedure
  7731                           
  7732                           ;Ssms.c: 96:     sumaPulsacions = 0;
  7733  00100C  6A3C               	clrf	_sumaPulsacions^0,c
  7734  00100E  D7C2               	goto	l4579
  7735  001010                     l4627:
  7736  001010  0E03               	movlw	3
  7737  001012  183C               	xorwf	_sumaPulsacions^0,w,c
  7738  001014  E104               	bnz	l4633
  7739  001016                     u4160:
  7740                           
  7741                           ;Ssms.c: 100:     lletraASCII = ultimaTecla+48;
  7742  001016  506A               	movf	_ultimaTecla^0,w,c
  7743  001018  0F30               	addlw	48
  7744  00101A  6E6C               	movwf	_lletraASCII^0,c
  7745  00101C  D7BB               	goto	l4579
  7746  00101E                     l4633:
  7747  00101E  0E03               	movlw	3
  7748  001020  603C               	cpfslt	_sumaPulsacions^0,c
  7749  001022  0012               	return	
  7750  001024  D7B7               	goto	l4579
  7751  001026                     l4637:
  7752                           
  7753                           ;Ssms.c: 108:    if (sumaPulsacions == 4) {
  7754  001026  0E04               	movlw	4
  7755  001028  183C               	xorwf	_sumaPulsacions^0,w,c
  7756  00102A  E0F5               	bz	u4160
  7757  00102C  0E05               	movlw	5
  7758  00102E  183C               	xorwf	_sumaPulsacions^0,w,c
  7759  001030  E0E7               	bz	u4150
  7760  001032  0E04               	movlw	4
  7761  001034  D7F5               	goto	L4
  7762  001036                     l4657:
  7763  001036  5039               	movf	SMotor@state^0,w,c
  7764  001038  6E51               	movwf	??_SMotor^0,c
  7765  00103A  6A52               	clrf	(??_SMotor+1)^0,c
  7766                           
  7767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7768                           ; Switch size 1, requested type "space"
  7769                           ; Number of cases is 1, Range of values is 0 to 0
  7770                           ; switch strategies available:
  7771                           ; Name         Instructions Cycles
  7772                           ; simple_byte            4     3 (average)
  7773                           ;	Chosen strategy is simple_byte
  7774  00103C  5052               	movf	(??_SMotor+1)^0,w,c
  7775  00103E  A4D8               	btfss	status,2,c
  7776  001040  0012               	return	
  7777                           
  7778                           ; Switch size 1, requested type "space"
  7779                           ; Number of cases is 7, Range of values is 0 to 6
  7780                           ; switch strategies available:
  7781                           ; Name         Instructions Cycles
  7782                           ; simple_byte           22    12 (average)
  7783                           ;	Chosen strategy is simple_byte
  7784  001042  5051               	movf	??_SMotor^0,w,c
  7785  001044  E101 D736          	bz	l4501
  7786  001048  0A01               	xorlw	1	; case 1
  7787  00104A  E101 D753          	bz	l4525
  7788  00104E  0A03               	xorlw	3	; case 2
  7789  001050  E101 D77B          	bz	l4555
  7790  001054  0A01               	xorlw	1	; case 3
  7791  001056  E0A0               	bz	l4581
  7792  001058  0A07               	xorlw	7	; case 4
  7793  00105A  E0CA               	bz	l4613
  7794  00105C  0A01               	xorlw	1	; case 5
  7795  00105E  E0CD               	bz	l4619
  7796  001060  0A03               	xorlw	3	; case 6
  7797  001062  E0E1               	bz	l4637
  7798  001064  0012               	return		;funcret
  7799  001066                     __end_of_SMotor:
  7800                           	callstack 0
  7801  001066                     PL10:
  7802                           	callstack 27
  7803  001066  6A54               	clrf	(??_SMotor+3)^0,c
  7804  001068  BE53               	btfsc	(??_SMotor+2)^0,7,c
  7805  00106A  0654               	decf	(??_SMotor+3)^0,f,c
  7806  00106C  5051               	movf	??_SMotor^0,w,c
  7807  00106E  2653               	addwf	(??_SMotor+2)^0,f,c
  7808  001070  5052               	movf	(??_SMotor+1)^0,w,c
  7809  001072  2254               	addwfc	(??_SMotor+3)^0,f,c
  7810  001074  0EF5               	movlw	low _lletraInici
  7811  001076  2453               	addwf	(??_SMotor+2)^0,w,c
  7812  001078  6EF6               	movwf	tblptrl,c
  7813  00107A  0E1E               	movlw	high _lletraInici
  7814  00107C  2054               	addwfc	(??_SMotor+3)^0,w,c
  7815  00107E  6EF7               	movwf	tblptrh,c
  7816  001080                     	if	0	;There are less than 3 active tblptr bytes
  7817  001080                     	endif
  7818  001080  0008               	tblrd		*
  7819  001082  CFF5 F06C          	movff	tablat,_lletraASCII
  7820  001086  0012               	return	
  7821  001088                     __end_ofPL10:
  7822                           	callstack 0
  7823  001088                     PL50:
  7824                           	callstack 27
  7825  001088  0E5A               	movlw	90
  7826  00108A  5C4A               	subwf	?_TiGetTics^0,w,c
  7827  00108C  0E02               	movlw	2
  7828  00108E  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  7829  001090  0012               	return	
  7830  001092                     __end_ofPL50:
  7831                           	callstack 0
  7832                           
  7833 ;; *************** function _MNovaLletra *****************
  7834 ;; Defined at:
  7835 ;;		line 35 in file "Menu.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  lletra          1    wreg     unsigned char 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  lletra          1    5[COMRAM] unsigned char 
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  1    wreg      void 
  7842 ;; Registers used:
  7843 ;;		wreg
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMRAM   BANK0   BANK1
  7849 ;;      Params:         0       0       0
  7850 ;;      Locals:         1       0       0
  7851 ;;      Temps:          0       0       0
  7852 ;;      Totals:         1       0       0
  7853 ;;Total ram usage:        1 bytes
  7854 ;; Hardware stack levels used: 1
  7855 ;; Hardware stack levels required when called: 2
  7856 ;; This function calls:
  7857 ;;		Nothing
  7858 ;; This function is called by:
  7859 ;;		_SMotor
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text66
  7864  001C90                     __ptext66:
  7865                           	callstack 0
  7866  001C90                     _MNovaLletra:
  7867                           	callstack 27
  7868                           
  7869                           ;incstack = 0
  7870                           ;MNovaLletra@lletra stored from wreg
  7871  001C90  6E4A               	movwf	MNovaLletra@lletra^0,c
  7872                           
  7873                           ;Menu.c: 36:     novaLletra = lletra;
  7874  001C92  C04A  F068         	movff	MNovaLletra@lletra,_novaLletra
  7875  001C96  0012               	return		;funcret
  7876  001C98                     __end_of_MNovaLletra:
  7877                           	callstack 0
  7878                           
  7879 ;; *************** function _Minit *****************
  7880 ;; Defined at:
  7881 ;;		line 28 in file "Menu.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;		None
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1
  7895 ;;      Params:         0       0       0
  7896 ;;      Locals:         0       0       0
  7897 ;;      Temps:          0       0       0
  7898 ;;      Totals:         0       0       0
  7899 ;;Total ram usage:        0 bytes
  7900 ;; Hardware stack levels used: 1
  7901 ;; Hardware stack levels required when called: 3
  7902 ;; This function calls:
  7903 ;;		_TiGetTimer
  7904 ;; This function is called by:
  7905 ;;		_main
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text67
  7910  001C98                     __ptext67:
  7911                           	callstack 0
  7912  001C98                     _Minit:
  7913                           	callstack 27
  7914                           
  7915                           ;Menu.c: 29:     timerMenu = TiGetTimer();
  7916                           
  7917                           ;incstack = 0
  7918  001C98  ECB8  F00C         	call	_TiGetTimer	;wreg free
  7919  001C9C  6E32               	movwf	_timerMenu^0,c
  7920  001C9E  0012               	return		;funcret
  7921  001CA0                     __end_of_Minit:
  7922                           	callstack 0
  7923                           
  7924 ;; *************** function _LcLCD *****************
  7925 ;; Defined at:
  7926 ;;		line 246 in file "LcTLCD.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;		None
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;		None
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  1    wreg      void 
  7933 ;; Registers used:
  7934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMRAM   BANK0   BANK1
  7940 ;;      Params:         0       0       0
  7941 ;;      Locals:         0       0       0
  7942 ;;      Temps:          0       0       0
  7943 ;;      Totals:         0       0       0
  7944 ;;Total ram usage:        0 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; Hardware stack levels required when called: 6
  7947 ;; This function calls:
  7948 ;;		_LcPutChar
  7949 ;; This function is called by:
  7950 ;;		_main
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954                           	psect	text68
  7955  00173C                     __ptext68:
  7956                           	callstack 0
  7957  00173C                     _LcLCD:
  7958                           	callstack 24
  7959                           
  7960                           ;LcTLCD.c: 247:     if(nou_s == 1){
  7961                           
  7962                           ;incstack = 0
  7963  00173C  A278               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7964  00173E  0012               	return	
  7965                           
  7966                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  7967  001740  D818               	call	PL34	;call to abstracted procedure
  7968  001742  64F7               	cpfsgt	tblptrh,c
  7969  001744  D003               	bra	u3817
  7970  001746  0008               	tblrd		*
  7971  001748  50F5               	movf	tablat,w,c
  7972  00174A  D001               	bra	u3810
  7973  00174C                     u3817:
  7974  00174C  D819               	call	PL42	;call to abstracted procedure
  7975  00174E                     u3810:
  7976  00174E  ECC6  F00B         	call	_LcPutChar
  7977                           
  7978                           ;LcTLCD.c: 249:         s_ptr++;
  7979  001752  4A0D               	infsnz	_s_ptr^0,f,c
  7980  001754  2A0E               	incf	(_s_ptr+1)^0,f,c
  7981                           
  7982                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  7983  001756  D80D               	call	PL34	;call to abstracted procedure
  7984  001758  64F7               	cpfsgt	tblptrh,c
  7985  00175A  D003               	bra	u3827
  7986  00175C  0008               	tblrd		*
  7987  00175E  50F5               	movf	tablat,w,c
  7988  001760  D001               	bra	u3820
  7989  001762                     u3827:
  7990  001762  D80E               	call	PL42	;call to abstracted procedure
  7991  001764                     u3820:
  7992  001764  0900               	iorlw	0
  7993  001766  A4D8               	btfss	status,2,c
  7994  001768  0012               	return	
  7995                           
  7996                           ;LcTLCD.c: 251:             nou_s = 0;
  7997  00176A  9278               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7998                           
  7999                           ;LcTLCD.c: 252:             s_ptr=0;
  8000  00176C  6A0D               	clrf	_s_ptr^0,c
  8001  00176E  6A0E               	clrf	(_s_ptr+1)^0,c
  8002  001770  0012               	return		;funcret
  8003  001772                     __end_of_LcLCD:
  8004                           	callstack 0
  8005  001772                     PL34:
  8006                           	callstack 24
  8007  001772  C00D  FFF6         	movff	_s_ptr,tblptrl
  8008  001776  C00E  FFF7         	movff	_s_ptr+1,tblptrh
  8009  00177A  6AF8               	clrf	tblptru,c
  8010  00177C  0E01               	movlw	(high __ramtop+-1)
  8011  00177E  0012               	return	
  8012  001780                     __end_ofPL34:
  8013                           	callstack 0
  8014  001780                     PL42:
  8015                           	callstack 24
  8016  001780  CFF6 FFE1          	movff	tblptrl,fsr1l
  8017  001784  CFF7 FFE2          	movff	tblptrh,fsr1h
  8018  001788  50E7               	movf	indf1,w,c
  8019  00178A  0012               	return	
  8020  00178C                     __end_ofPL42:
  8021                           	callstack 0
  8022                           
  8023 ;; *************** function _LcInit *****************
  8024 ;; Defined at:
  8025 ;;		line 41 in file "LcTLCD.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  rows            1    wreg     unsigned char 
  8028 ;;  columns         1   16[COMRAM] unsigned char 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  rows            1   17[COMRAM] unsigned char 
  8031 ;;  i               2   18[COMRAM] int 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      void 
  8034 ;; Registers used:
  8035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1
  8041 ;;      Params:         1       0       0
  8042 ;;      Locals:         3       0       0
  8043 ;;      Temps:          0       0       0
  8044 ;;      Totals:         4       0       0
  8045 ;;Total ram usage:        4 bytes
  8046 ;; Hardware stack levels used: 1
  8047 ;; Hardware stack levels required when called: 4
  8048 ;; This function calls:
  8049 ;;		_CantaIR
  8050 ;;		_EscriuPrimeraOrdre
  8051 ;;		_Espera
  8052 ;;		_TiGetTimer
  8053 ;;		_WaitForBusy
  8054 ;; This function is called by:
  8055 ;;		_main
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text69
  8060  0012B6                     __ptext69:
  8061                           	callstack 0
  8062  0012B6                     _LcInit:
  8063                           	callstack 26
  8064                           
  8065                           ;incstack = 0
  8066                           ;LcInit@rows stored from wreg
  8067  0012B6  6E56               	movwf	LcInit@rows^0,c
  8068                           
  8069                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  8070  0012B8  ECB8  F00C         	call	_TiGetTimer	;wreg free
  8071  0012BC  6E3D               	movwf	_Timer^0,c
  8072                           
  8073                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  8074  0012BE  C056  F040         	movff	LcInit@rows,_Rows
  8075                           
  8076                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  8077  0012C2  6A3E               	clrf	_ColumnAct^0,c
  8078  0012C4  6A3F               	clrf	_RowAct^0,c
  8079                           
  8080                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  8081  0012C6  9894               	bcf	148,4,c	;volatile
  8082  0012C8  9E95               	bcf	149,7,c	;volatile
  8083  0012CA  9A94               	bcf	148,5,c	;volatile
  8084                           
  8085                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  8086  0012CC  6A57               	clrf	LcInit@i^0,c
  8087  0012CE  6A58               	clrf	(LcInit@i+1)^0,c
  8088  0012D0                     l4409:
  8089                           
  8090                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  8091  0012D0  6A52               	clrf	(Espera@ms+1)^0,c
  8092  0012D2  0E64               	movlw	100
  8093  0012D4  6E51               	movwf	Espera@ms^0,c
  8094  0012D6  503D               	movf	_Timer^0,w,c
  8095  0012D8  EC3D  F00D         	call	_Espera
  8096                           
  8097                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  8098  0012DC  0E03               	movlw	3
  8099  0012DE  EC96  F00A         	call	_EscriuPrimeraOrdre
  8100                           
  8101                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  8102  0012E2  6A52               	clrf	(Espera@ms+1)^0,c
  8103  0012E4  0E05               	movlw	5
  8104  0012E6  6E51               	movwf	Espera@ms^0,c
  8105  0012E8  503D               	movf	_Timer^0,w,c
  8106  0012EA  EC3D  F00D         	call	_Espera
  8107                           
  8108                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  8109  0012EE  0E03               	movlw	3
  8110  0012F0  EC96  F00A         	call	_EscriuPrimeraOrdre
  8111                           
  8112                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8113  0012F4  D83A               	call	PL60	;call to abstracted procedure
  8114  0012F6  EC3D  F00D         	call	_Espera
  8115                           
  8116                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  8117  0012FA  0E03               	movlw	3
  8118  0012FC  EC96  F00A         	call	_EscriuPrimeraOrdre
  8119                           
  8120                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  8121  001300  D834               	call	PL60	;call to abstracted procedure
  8122  001302  EC3D  F00D         	call	_Espera
  8123                           
  8124                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  8125  001306  0E02               	movlw	2
  8126  001308  EC96  F00A         	call	_EscriuPrimeraOrdre
  8127                           
  8128                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  8129  00130C  6A52               	clrf	(Espera@ms+1)^0,c
  8130  00130E  0E04               	movlw	4
  8131  001310  6E51               	movwf	Espera@ms^0,c
  8132  001312  503D               	movf	_Timer^0,w,c
  8133  001314  EC3D  F00D         	call	_Espera
  8134                           
  8135                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  8136  001318  0E28               	movlw	40
  8137  00131A  EC6B  F00D         	call	_CantaIR
  8138                           
  8139                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  8140  00131E  EC2D  F00C         	call	_WaitForBusy	;wreg free
  8141  001322  0E08               	movlw	8
  8142  001324  EC6B  F00D         	call	_CantaIR
  8143                           
  8144                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  8145  001328  EC2D  F00C         	call	_WaitForBusy	;wreg free
  8146  00132C  0E01               	movlw	1
  8147  00132E  EC6B  F00D         	call	_CantaIR
  8148                           
  8149                           ;LcTLCD.c: 71:   Espera(Timer,3);
  8150  001332  EC38  F00D         	call	PL58	;call to abstracted procedure
  8151  001336  EC3D  F00D         	call	_Espera
  8152                           
  8153                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  8154  00133A  EC2D  F00C         	call	_WaitForBusy	;wreg free
  8155  00133E  0E06               	movlw	6
  8156  001340  EC6B  F00D         	call	_CantaIR
  8157                           
  8158                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  8159  001344  EC2D  F00C         	call	_WaitForBusy	;wreg free
  8160  001348  0E0F               	movlw	15
  8161  00134A  EC6B  F00D         	call	_CantaIR
  8162                           
  8163                           ;LcTLCD.c: 74:  }
  8164  00134E  4A57               	infsnz	LcInit@i^0,f,c
  8165  001350  2A58               	incf	(LcInit@i+1)^0,f,c
  8166  001352  BE58               	btfsc	(LcInit@i+1)^0,7,c
  8167  001354  D7BD               	goto	l4409
  8168  001356  5058               	movf	(LcInit@i+1)^0,w,c
  8169  001358  E103               	bnz	u3790
  8170  00135A  0E02               	movlw	2
  8171  00135C  5C57               	subwf	LcInit@i^0,w,c
  8172  00135E  E3B8               	bnc	l4409
  8173  001360                     u3790:
  8174                           
  8175                           ;LcTLCD.c: 80:     WaitForBusy();
  8176  001360  EC2D  F00C         	call	_WaitForBusy	;wreg free
  8177                           
  8178                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  8179  001364  0E0C               	movlw	12
  8180  001366  EF6B  F00D         	goto	_CantaIR
  8181  00136A                     __end_of_LcInit:
  8182                           	callstack 0
  8183  00136A                     PL60:
  8184                           	callstack 26
  8185  00136A  6A52               	clrf	(Espera@ms+1)^0,c
  8186  00136C  0E01               	movlw	1
  8187  00136E  6E51               	movwf	Espera@ms^0,c
  8188  001370  503D               	movf	_Timer^0,w,c
  8189  001372  0012               	return	
  8190  001374                     __end_ofPL60:
  8191                           	callstack 0
  8192                           
  8193 ;; *************** function _EscriuPrimeraOrdre *****************
  8194 ;; Defined at:
  8195 ;;		line 230 in file "LcTLCD.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;  ordre           1    wreg     unsigned char 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;  ordre           1    6[COMRAM] unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1
  8209 ;;      Params:         0       0       0
  8210 ;;      Locals:         1       0       0
  8211 ;;      Temps:          1       0       0
  8212 ;;      Totals:         2       0       0
  8213 ;;Total ram usage:        2 bytes
  8214 ;; Hardware stack levels used: 1
  8215 ;; Hardware stack levels required when called: 2
  8216 ;; This function calls:
  8217 ;;		Nothing
  8218 ;; This function is called by:
  8219 ;;		_LcInit
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text70
  8224  00152C                     __ptext70:
  8225                           	callstack 0
  8226  00152C                     _EscriuPrimeraOrdre:
  8227                           	callstack 27
  8228                           
  8229                           ;incstack = 0
  8230                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8231  00152C  6E4B               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8232                           
  8233                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8234  00152E  9694               	bcf	148,3,c	;volatile
  8235                           
  8236                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8237  001530  D82F               	call	PL38	;call to abstracted procedure
  8238  001532  888B               	bsf	139,4,c	;volatile
  8239                           
  8240                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8241  001534  A64B               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8242  001536  D003               	goto	u230
  8243  001538  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8244  00153A  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8245  00153C  D001               	goto	u248
  8246  00153E                     u230:
  8247  00153E  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8248  001540                     u248:
  8249  001540  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8250  001542  D82D               	call	PL56	;call to abstracted procedure
  8251  001544  0BF7               	andlw	-9
  8252  001546  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8253  001548  6E8B               	movwf	139,c	;volatile
  8254                           
  8255                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8256  00154A  A44B               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8257  00154C  D003               	goto	u250
  8258  00154E  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8259  001550  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8260  001552  D001               	goto	u268
  8261  001554                     u250:
  8262  001554  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8263  001556                     u268:
  8264  001556  D823               	call	PL56	;call to abstracted procedure
  8265  001558  0BFB               	andlw	-5
  8266  00155A  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8267  00155C  6E8B               	movwf	139,c	;volatile
  8268                           
  8269                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8270  00155E  A24B               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8271  001560  D003               	goto	u270
  8272  001562  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8273  001564  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8274  001566  D001               	goto	u288
  8275  001568                     u270:
  8276  001568  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8277  00156A                     u288:
  8278  00156A  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8279  00156C  508B               	movf	139,w,c	;volatile
  8280  00156E  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8281  001570  0BFD               	andlw	-3
  8282  001572  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8283  001574  6E8B               	movwf	139,c	;volatile
  8284                           
  8285                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8286  001576  A04B               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8287  001578  D003               	goto	u290
  8288  00157A  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8289  00157C  2A4A               	incf	??_EscriuPrimeraOrdre^0,f,c
  8290  00157E  D001               	goto	u308
  8291  001580                     u290:
  8292  001580  6A4A               	clrf	??_EscriuPrimeraOrdre^0,c
  8293  001582                     u308:
  8294  001582  508B               	movf	139,w,c	;volatile
  8295  001584  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8296  001586  0BFE               	andlw	-2
  8297  001588  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8298  00158A  6E8B               	movwf	139,c	;volatile
  8299                           
  8300                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  8301  00158C  988B               	bcf	139,4,c	;volatile
  8302  00158E  0012               	return		;funcret
  8303  001590                     __end_of_EscriuPrimeraOrdre:
  8304                           	callstack 0
  8305  001590                     PL38:
  8306                           	callstack 24
  8307  001590  9494               	bcf	148,2,c	;volatile
  8308  001592  9294               	bcf	148,1,c	;volatile
  8309  001594  9094               	bcf	148,0,c	;volatile
  8310  001596  9A8B               	bcf	139,5,c	;volatile
  8311  001598  9E8C               	bcf	140,7,c	;volatile
  8312  00159A  888B               	bsf	139,4,c	;volatile
  8313  00159C  0012               	return	
  8314  00159E                     __end_ofPL38:
  8315                           	callstack 0
  8316  00159E                     PL56:
  8317                           	callstack 27
  8318  00159E  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8319  0015A0  464A               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8320  0015A2  508B               	movf	139,w,c	;volatile
  8321  0015A4  184A               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8322  0015A6  0012               	return	
  8323  0015A8                     __end_ofPL56:
  8324                           	callstack 0
  8325                           
  8326 ;; *************** function _JoystickMotor *****************
  8327 ;; Defined at:
  8328 ;;		line 18 in file "Joystick.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;		None
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;		None
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  1    wreg      void 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0, cstack
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1
  8342 ;;      Params:         0       0       0
  8343 ;;      Locals:         0       0       0
  8344 ;;      Temps:          2       0       0
  8345 ;;      Totals:         2       0       0
  8346 ;;Total ram usage:        2 bytes
  8347 ;; Hardware stack levels used: 1
  8348 ;; Hardware stack levels required when called: 3
  8349 ;; This function calls:
  8350 ;;		_MNouJoystick
  8351 ;; This function is called by:
  8352 ;;		_main
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text71
  8357  0011E0                     __ptext71:
  8358                           	callstack 0
  8359  0011E0                     _JoystickMotor:
  8360                           	callstack 27
  8361                           
  8362                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  8363                           
  8364                           ;incstack = 0
  8365  0011E0  D056               	goto	l3187
  8366  0011E2                     l996:
  8367                           
  8368                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8369  0011E2  B2C2               	btfsc	194,1,c	;volatile
  8370  0011E4  D00B               	goto	l997
  8371  0011E6  0EC8               	movlw	200
  8372  0011E8  60C4               	cpfslt	196,c	;volatile
  8373  0011EA  D008               	goto	l997
  8374  0011EC  0E32               	movlw	50
  8375  0011EE  64C4               	cpfsgt	196,c	;volatile
  8376  0011F0  D005               	goto	l997
  8377                           
  8378                           ;Joystick.c: 23:     ADCON0 = 0x07;
  8379  0011F2  0E07               	movlw	7
  8380  0011F4  6EC2               	movwf	194,c	;volatile
  8381                           
  8382                           ;Joystick.c: 24:                 cap1 = 1;
  8383  0011F6  8E76               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8384  0011F8                     l3117:
  8385                           
  8386                           ;Joystick.c: 25:     state++;
  8387  0011F8  2A17               	incf	JoystickMotor@state^0,f,c
  8388                           
  8389                           ;Joystick.c: 26:    }
  8390  0011FA  D052               	goto	l1004
  8391  0011FC                     l997:
  8392  0011FC  B2C2               	btfsc	194,1,c	;volatile
  8393  0011FE  D00F               	goto	l999
  8394  001200  0EC7               	movlw	199
  8395  001202  64C4               	cpfsgt	196,c	;volatile
  8396  001204  D00C               	goto	l999
  8397                           
  8398                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  8399  001206  0E02               	movlw	2
  8400  001208  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8401  00120A  E003               	bz	l3125
  8402  00120C  0E02               	movlw	2
  8403  00120E  EC50  F00E         	call	_MNouJoystick
  8404  001212                     l3125:
  8405                           
  8406                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  8407  001212  0E02               	movlw	2
  8408  001214  6E18               	movwf	_ultimaTeclaAD^0,c
  8409                           
  8410                           ;Joystick.c: 30:     ADCON0 = 0x07;
  8411  001216  0E07               	movlw	7
  8412  001218  6EC2               	movwf	194,c	;volatile
  8413                           
  8414                           ;Joystick.c: 31:                 cap1 = 0;
  8415  00121A  9E76               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8416  00121C  D7ED               	goto	l3117
  8417  00121E                     l999:
  8418  00121E  B2C2               	btfsc	194,1,c	;volatile
  8419  001220  D03F               	goto	l1004
  8420  001222  0E33               	movlw	51
  8421  001224  60C4               	cpfslt	196,c	;volatile
  8422  001226  D03C               	goto	l1004
  8423                           
  8424                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  8425  001228  0E08               	movlw	8
  8426  00122A  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8427  00122C  E003               	bz	l3139
  8428  00122E  0E08               	movlw	8
  8429  001230  EC50  F00E         	call	_MNouJoystick
  8430  001234                     l3139:
  8431                           
  8432                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  8433  001234  0E08               	movlw	8
  8434  001236  D7EE               	goto	L5
  8435  001238                     l1005:
  8436                           
  8437                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8438  001238  B2C2               	btfsc	194,1,c	;volatile
  8439  00123A  D00B               	goto	l1006
  8440  00123C  0EC8               	movlw	200
  8441  00123E  60C4               	cpfslt	196,c	;volatile
  8442  001240  D008               	goto	l1006
  8443  001242  0E32               	movlw	50
  8444  001244  64C4               	cpfsgt	196,c	;volatile
  8445  001246  D005               	goto	l1006
  8446                           
  8447                           ;Joystick.c: 44:     ADCON0 = 0x03;
  8448  001248  0E03               	movlw	3
  8449  00124A  6EC2               	movwf	194,c	;volatile
  8450                           
  8451                           ;Joystick.c: 45:                 cap2 = 1;
  8452  00124C  8C76               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8453  00124E                     l3155:
  8454                           
  8455                           ;Joystick.c: 46:     state--;
  8456  00124E  0617               	decf	JoystickMotor@state^0,f,c
  8457                           
  8458                           ;Joystick.c: 47:    }
  8459  001250  D027               	goto	l1004
  8460  001252                     l1006:
  8461  001252  B2C2               	btfsc	194,1,c	;volatile
  8462  001254  D00F               	goto	l1008
  8463  001256  0EC7               	movlw	199
  8464  001258  64C4               	cpfsgt	196,c	;volatile
  8465  00125A  D00C               	goto	l1008
  8466                           
  8467                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  8468  00125C  0E06               	movlw	6
  8469  00125E  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8470  001260  E003               	bz	l3163
  8471  001262  0E06               	movlw	6
  8472  001264  EC50  F00E         	call	_MNouJoystick
  8473  001268                     l3163:
  8474                           
  8475                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  8476  001268  0E06               	movlw	6
  8477  00126A  6E18               	movwf	_ultimaTeclaAD^0,c
  8478                           
  8479                           ;Joystick.c: 51:     ADCON0 = 0x03;
  8480  00126C  0E03               	movlw	3
  8481  00126E  6EC2               	movwf	194,c	;volatile
  8482                           
  8483                           ;Joystick.c: 52:                 cap2 = 0;
  8484  001270  9C76               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8485  001272  D7ED               	goto	l3155
  8486  001274                     l1008:
  8487  001274  B2C2               	btfsc	194,1,c	;volatile
  8488  001276  D014               	goto	l1004
  8489  001278  0E33               	movlw	51
  8490  00127A  60C4               	cpfslt	196,c	;volatile
  8491  00127C  D011               	goto	l1004
  8492                           
  8493                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  8494  00127E  0E04               	movlw	4
  8495  001280  1818               	xorwf	_ultimaTeclaAD^0,w,c
  8496  001282  E003               	bz	l3177
  8497  001284  0E04               	movlw	4
  8498  001286  EC50  F00E         	call	_MNouJoystick
  8499  00128A                     l3177:
  8500                           
  8501                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  8502  00128A  0E04               	movlw	4
  8503  00128C  D7EE               	goto	L6
  8504  00128E                     l3187:
  8505  00128E  5017               	movf	JoystickMotor@state^0,w,c
  8506  001290  6E4B               	movwf	??_JoystickMotor^0,c
  8507  001292  6A4C               	clrf	(??_JoystickMotor+1)^0,c
  8508                           
  8509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8510                           ; Switch size 1, requested type "space"
  8511                           ; Number of cases is 1, Range of values is 0 to 0
  8512                           ; switch strategies available:
  8513                           ; Name         Instructions Cycles
  8514                           ; simple_byte            4     3 (average)
  8515                           ;	Chosen strategy is simple_byte
  8516  001294  504C               	movf	(??_JoystickMotor+1)^0,w,c
  8517  001296  E104               	bnz	l1004
  8518                           
  8519                           ; Switch size 1, requested type "space"
  8520                           ; Number of cases is 2, Range of values is 0 to 1
  8521                           ; switch strategies available:
  8522                           ; Name         Instructions Cycles
  8523                           ; simple_byte            7     4 (average)
  8524                           ;	Chosen strategy is simple_byte
  8525  001298  504B               	movf	??_JoystickMotor^0,w,c
  8526  00129A  E0A3               	bz	l996
  8527  00129C  0A01               	xorlw	1	; case 1
  8528  00129E  E0CC               	bz	l1005
  8529  0012A0                     l1004:
  8530                           
  8531                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  8532  0012A0  BE76               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  8533  0012A2  AC76               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  8534  0012A4  0012               	return	
  8535  0012A6  5018               	movf	_ultimaTeclaAD^0,w,c
  8536  0012A8  B4D8               	btfsc	status,2,c
  8537  0012AA  0012               	return	
  8538                           
  8539                           ;Joystick.c: 66:         MNouJoystick(-1);
  8540  0012AC  0EFF               	movlw	255
  8541  0012AE  EC50  F00E         	call	_MNouJoystick
  8542                           
  8543                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  8544  0012B2  6818               	setf	_ultimaTeclaAD^0,c
  8545  0012B4  0012               	return		;funcret
  8546  0012B6                     __end_of_JoystickMotor:
  8547                           	callstack 0
  8548                           
  8549 ;; *************** function _MNouJoystick *****************
  8550 ;; Defined at:
  8551 ;;		line 38 in file "Menu.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  posicio         1    wreg     char 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  posicio         1    5[COMRAM] char 
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      void 
  8558 ;; Registers used:
  8559 ;;		wreg
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1
  8565 ;;      Params:         0       0       0
  8566 ;;      Locals:         1       0       0
  8567 ;;      Temps:          0       0       0
  8568 ;;      Totals:         1       0       0
  8569 ;;Total ram usage:        1 bytes
  8570 ;; Hardware stack levels used: 1
  8571 ;; Hardware stack levels required when called: 2
  8572 ;; This function calls:
  8573 ;;		Nothing
  8574 ;; This function is called by:
  8575 ;;		_JoystickMotor
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text72
  8580  001CA0                     __ptext72:
  8581                           	callstack 0
  8582  001CA0                     _MNouJoystick:
  8583                           	callstack 27
  8584                           
  8585                           ;incstack = 0
  8586                           ;MNouJoystick@posicio stored from wreg
  8587  001CA0  6E4A               	movwf	MNouJoystick@posicio^0,c
  8588                           
  8589                           ;Menu.c: 39:     novaDireccio = posicio;
  8590  001CA2  C04A  F067         	movff	MNouJoystick@posicio,_novaDireccio
  8591  001CA6  0012               	return		;funcret
  8592  001CA8                     __end_of_MNouJoystick:
  8593                           	callstack 0
  8594                           
  8595 ;; *************** function _JoystickInit *****************
  8596 ;; Defined at:
  8597 ;;		line 12 in file "Joystick.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;		None
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  1    wreg      void 
  8604 ;; Registers used:
  8605 ;;		wreg, status,2
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1
  8611 ;;      Params:         0       0       0
  8612 ;;      Locals:         0       0       0
  8613 ;;      Temps:          0       0       0
  8614 ;;      Totals:         0       0       0
  8615 ;;Total ram usage:        0 bytes
  8616 ;; Hardware stack levels used: 1
  8617 ;; Hardware stack levels required when called: 2
  8618 ;; This function calls:
  8619 ;;		Nothing
  8620 ;; This function is called by:
  8621 ;;		_main
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text73
  8626  001B50                     __ptext73:
  8627                           	callstack 0
  8628  001B50                     _JoystickInit:
  8629                           	callstack 28
  8630                           
  8631                           ;Joystick.c: 13:     ADCON0 = 0x01;
  8632                           
  8633                           ;incstack = 0
  8634  001B50  0E01               	movlw	1
  8635  001B52  6EC2               	movwf	194,c	;volatile
  8636                           
  8637                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  8638  001B54  0E0D               	movlw	13
  8639  001B56  6EC1               	movwf	193,c	;volatile
  8640                           
  8641                           ;Joystick.c: 15:     ADCON2 = 0x09;
  8642  001B58  0E09               	movlw	9
  8643  001B5A  6EC0               	movwf	192,c	;volatile
  8644                           
  8645                           ;Joystick.c: 16:     ADRESH = 127;
  8646  001B5C  0E7F               	movlw	127
  8647  001B5E  6EC4               	movwf	196,c	;volatile
  8648  001B60  0C7F               	retlw	127	;funcret
  8649  001B62                     __end_of_JoystickInit:
  8650                           	callstack 0
  8651                           
  8652 ;; *************** function _GLCDMotor *****************
  8653 ;; Defined at:
  8654 ;;		line 36 in file "GestioLCD.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;		None
  8657 ;; Auto vars:     Size  Location     Type
  8658 ;;		None
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  1    wreg      void 
  8661 ;; Registers used:
  8662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8663 ;; Tracked objects:
  8664 ;;		On entry : 0/0
  8665 ;;		On exit  : 0/0
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMRAM   BANK0   BANK1
  8668 ;;      Params:         0       0       0
  8669 ;;      Locals:         0       0       0
  8670 ;;      Temps:          2       0       0
  8671 ;;      Totals:         2       0       0
  8672 ;;Total ram usage:        2 bytes
  8673 ;; Hardware stack levels used: 1
  8674 ;; Hardware stack levels required when called: 6
  8675 ;; This function calls:
  8676 ;;		_LcClear
  8677 ;;		_LcGotoXY
  8678 ;;		_LcLliure
  8679 ;;		_LcNewString
  8680 ;;		_LcPutChar
  8681 ;;		_TiGetTics
  8682 ;;		_TiResetTics
  8683 ;; This function is called by:
  8684 ;;		_main
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688                           	psect	text74
  8689  0007B8                     __ptext74:
  8690                           	callstack 0
  8691  0007B8                     _GLCDMotor:
  8692                           	callstack 24
  8693                           
  8694                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  8695                           
  8696                           ;incstack = 0
  8697  0007B8  D0FD               	goto	l4871
  8698  0007BA                     l4687:
  8699                           
  8700                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  8701  0007BA  0E11               	movlw	17
  8702  0007BC  601A               	cpfslt	GLCDMotor@length1^0,c
  8703  0007BE  D00E               	goto	l4697
  8704  0007C0  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8705  0007C2  D00C               	goto	l4697
  8706                           
  8707                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  8708  0007C4  0E00               	movlw	0
  8709  0007C6  6E52               	movwf	LcGotoXY@Row^0,c
  8710  0007C8  EC9E  F00C         	call	_LcGotoXY
  8711                           
  8712                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  8713  0007CC  5021               	movf	_menuDaltGLCD^0,w,c
  8714  0007CE  0D1D               	mullw	29
  8715  0007D0  D930               	call	PL36	;call to abstracted procedure
  8716  0007D2  ECFF  F00D         	call	_LcNewString	;wreg free
  8717                           
  8718                           ;GestioLCD.c: 53:     state = 5;
  8719  0007D6  0E05               	movlw	5
  8720  0007D8  6E20               	movwf	GLCDMotor@state^0,c
  8721                           
  8722                           ;GestioLCD.c: 54:    }
  8723  0007DA  0C05               	retlw	5
  8724  0007DC                     l4697:
  8725  0007DC  0E10               	movlw	16
  8726  0007DE  641A               	cpfsgt	GLCDMotor@length1^0,c
  8727  0007E0  0C10               	retlw	16
  8728  0007E2  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8729  0007E4  0C10               	retlw	16
  8730  0007E6                     u4250:
  8731                           
  8732                           ;GestioLCD.c: 56:     state++;
  8733  0007E6  2A20               	incf	GLCDMotor@state^0,f,c
  8734  0007E8  0012               	return	
  8735  0007EA                     l4703:
  8736                           
  8737                           ;GestioLCD.c: 60:    if (j>=16) {
  8738  0007EA  0E0F               	movlw	15
  8739  0007EC  641F               	cpfsgt	GLCDMotor@j^0,c
  8740  0007EE  D012               	goto	l4717
  8741                           
  8742                           ;GestioLCD.c: 61:     min1++;
  8743  0007F0  2A1E               	incf	GLCDMotor@min1^0,f,c
  8744                           
  8745                           ;GestioLCD.c: 62:     max1++;
  8746  0007F2  2A65               	incf	GLCDMotor@max1^0,f,c
  8747                           
  8748                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  8749  0007F4  D905               	call	PL2	;call to abstracted procedure
  8750  0007F6  5065               	movf	GLCDMotor@max1^0,w,c
  8751  0007F8  D90E               	call	PL4	;call to abstracted procedure
  8752  0007FA  E101               	bnz	l4711
  8753  0007FC  6A65               	clrf	GLCDMotor@max1^0,c
  8754  0007FE                     l4711:
  8755                           
  8756                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  8757  0007FE  D900               	call	PL2	;call to abstracted procedure
  8758  000800  501E               	movf	GLCDMotor@min1^0,w,c
  8759  000802  D909               	call	PL4	;call to abstracted procedure
  8760  000804  E101               	bnz	l927
  8761  000806  6A1E               	clrf	GLCDMotor@min1^0,c
  8762  000808                     l927:
  8763                           
  8764                           ;GestioLCD.c: 65:     j=0;
  8765  000808  6A1F               	clrf	GLCDMotor@j^0,c
  8766                           
  8767                           ;GestioLCD.c: 66:     k1=min1;
  8768  00080A  C01E  F01C         	movff	GLCDMotor@min1,GLCDMotor@k1
  8769                           
  8770                           ;GestioLCD.c: 67:     state = 6;
  8771  00080E  0E06               	movlw	6
  8772  000810  6E20               	movwf	GLCDMotor@state^0,c
  8773                           
  8774                           ;GestioLCD.c: 68:    }
  8775  000812  0C06               	retlw	6
  8776  000814                     l4717:
  8777  000814  0E10               	movlw	16
  8778  000816  601F               	cpfslt	GLCDMotor@j^0,c
  8779  000818  0C10               	retlw	16
  8780                           
  8781                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  8782  00081A  0E00               	movlw	0
  8783  00081C  6E52               	movwf	LcGotoXY@Row^0,c
  8784  00081E  501F               	movf	GLCDMotor@j^0,w,c
  8785  000820  EC9E  F00C         	call	_LcGotoXY
  8786                           
  8787                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  8788  000824  D8ED               	call	PL2	;call to abstracted procedure
  8789  000826  501C               	movf	GLCDMotor@k1^0,w,c
  8790  000828  D8F6               	call	PL4	;call to abstracted procedure
  8791  00082A  ECC6  F00B         	call	_LcPutChar
  8792                           
  8793                           ;GestioLCD.c: 72:     j++;
  8794  00082E  2A1F               	incf	GLCDMotor@j^0,f,c
  8795                           
  8796                           ;GestioLCD.c: 73:     k1++;
  8797  000830  2A1C               	incf	GLCDMotor@k1^0,f,c
  8798                           
  8799                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  8800  000832  D8E6               	call	PL2	;call to abstracted procedure
  8801  000834  501C               	movf	GLCDMotor@k1^0,w,c
  8802  000836  D8EF               	call	PL4	;call to abstracted procedure
  8803  000838  B4D8               	btfsc	status,2,c
  8804  00083A  6A1C               	clrf	GLCDMotor@k1^0,c
  8805  00083C  0012               	return	
  8806  00083E                     l4731:
  8807                           
  8808                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  8809  00083E  0E04               	movlw	4
  8810  000840  6021               	cpfslt	_menuDaltGLCD^0,c
  8811  000842  D010               	goto	u4350
  8812  000844  D7D0               	goto	u4250
  8813  000846                     u4320:
  8814                           
  8815                           ;GestioLCD.c: 82:     state = 0;
  8816  000846  6A20               	clrf	GLCDMotor@state^0,c
  8817  000848  0012               	return	
  8818  00084A                     l4739:
  8819                           
  8820                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  8821  00084A  EC05  F00E         	call	_LcLliure	;wreg free
  8822  00084E  E306               	bnc	l4745
  8823  000850  0E04               	movlw	4
  8824  000852  6021               	cpfslt	_menuDaltGLCD^0,c
  8825  000854  D003               	goto	l4745
  8826                           
  8827                           ;GestioLCD.c: 87:     state = 7;
  8828  000856  0E07               	movlw	7
  8829  000858  6E20               	movwf	GLCDMotor@state^0,c
  8830                           
  8831                           ;GestioLCD.c: 88:    }
  8832  00085A  0C07               	retlw	7
  8833  00085C                     l4745:
  8834  00085C  EC05  F00E         	call	_LcLliure	;wreg free
  8835  000860  A0D8               	btfss	status,0,c
  8836  000862  0012               	return	
  8837  000864                     u4350:
  8838  000864  0E03               	movlw	3
  8839  000866  6421               	cpfsgt	_menuDaltGLCD^0,c
  8840  000868  0C03               	retlw	3
  8841  00086A  D7ED               	goto	u4320
  8842  00086C                     l939:
  8843                           
  8844                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  8845  00086C  B077               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8846  00086E  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8847  000870  0012               	return	
  8848                           
  8849                           ;GestioLCD.c: 95:     length1 = 0;
  8850  000872  6A1A               	clrf	GLCDMotor@length1^0,c
  8851                           
  8852                           ;GestioLCD.c: 96:     length2 = 0;
  8853  000874  6A19               	clrf	GLCDMotor@length2^0,c
  8854                           
  8855                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  8856  000876  0E00               	movlw	0
  8857  000878  6E52               	movwf	LcGotoXY@Row^0,c
  8858  00087A  EC9E  F00C         	call	_LcGotoXY
  8859                           
  8860                           ;GestioLCD.c: 98:     min1 = 0;
  8861  00087E  6A1E               	clrf	GLCDMotor@min1^0,c
  8862                           
  8863                           ;GestioLCD.c: 99:     max1 = 15;
  8864  000880  0E0F               	movlw	15
  8865  000882  6E65               	movwf	GLCDMotor@max1^0,c
  8866                           
  8867                           ;GestioLCD.c: 100:     min2 = 0;
  8868  000884  6A1D               	clrf	GLCDMotor@min2^0,c
  8869                           
  8870                           ;GestioLCD.c: 101:     max2 = 15;
  8871  000886  0E0F               	movlw	15
  8872  000888  6E64               	movwf	GLCDMotor@max2^0,c
  8873                           
  8874                           ;GestioLCD.c: 102:     j = 0;
  8875  00088A  6A1F               	clrf	GLCDMotor@j^0,c
  8876                           
  8877                           ;GestioLCD.c: 103:     k1 = 0;
  8878  00088C  6A1C               	clrf	GLCDMotor@k1^0,c
  8879                           
  8880                           ;GestioLCD.c: 104:     k2 = 0;
  8881  00088E  6A1B               	clrf	GLCDMotor@k2^0,c
  8882                           
  8883                           ;GestioLCD.c: 105:     newString = 0;
  8884  000890  9077               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  8885  000892  D7A9               	goto	u4250
  8886  000894                     l4775:
  8887                           
  8888                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  8889  000894  D8B5               	call	PL2	;call to abstracted procedure
  8890  000896  501A               	movf	GLCDMotor@length1^0,w,c
  8891  000898  D8BE               	call	PL4	;call to abstracted procedure
  8892  00089A  E104               	bnz	l4781
  8893  00089C  0E03               	movlw	3
  8894  00089E  6421               	cpfsgt	_menuDaltGLCD^0,c
  8895  0008A0  D001               	goto	l4781
  8896  0008A2  D7A1               	goto	u4250
  8897  0008A4                     l4781:
  8898  0008A4  D8AD               	call	PL2	;call to abstracted procedure
  8899  0008A6  501A               	movf	GLCDMotor@length1^0,w,c
  8900  0008A8  D8B6               	call	PL4	;call to abstracted procedure
  8901  0008AA  E002               	bz	l4785
  8902                           
  8903                           ;GestioLCD.c: 114:     length1++;
  8904  0008AC  2A1A               	incf	GLCDMotor@length1^0,f,c
  8905                           
  8906                           ;GestioLCD.c: 115:    }
  8907  0008AE  0012               	return	
  8908  0008B0                     l4785:
  8909  0008B0  0E04               	movlw	4
  8910  0008B2  6021               	cpfslt	_menuDaltGLCD^0,c
  8911  0008B4  0C04               	retlw	4
  8912  0008B6  D8A4               	call	PL2	;call to abstracted procedure
  8913  0008B8  501A               	movf	GLCDMotor@length1^0,w,c
  8914  0008BA  D8AD               	call	PL4	;call to abstracted procedure
  8915  0008BC  A4D8               	btfss	status,2,c
  8916  0008BE  0012               	return	
  8917                           
  8918                           ;GestioLCD.c: 117:     state = 13;
  8919  0008C0  0E0D               	movlw	13
  8920  0008C2  6E20               	movwf	GLCDMotor@state^0,c
  8921  0008C4  0C0D               	retlw	13
  8922  0008C6                     l4791:
  8923                           
  8924                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  8925  0008C6  0E11               	movlw	17
  8926  0008C8  6019               	cpfslt	GLCDMotor@length2^0,c
  8927  0008CA  D010               	goto	l4801
  8928  0008CC  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8929  0008CE  D00E               	goto	l4801
  8930                           
  8931                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  8932  0008D0  ECC1  F003         	call	PL32	;call to abstracted procedure
  8933  0008D4  EC9E  F00C         	call	_LcGotoXY
  8934                           
  8935                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  8936  0008D8  5021               	movf	_menuDaltGLCD^0,w,c
  8937  0008DA  0D1D               	mullw	29
  8938  0008DC  0E1D               	movlw	29
  8939  0008DE  26F3               	addwf	243,f,c
  8940  0008E0  0E00               	movlw	0
  8941  0008E2  22F4               	addwfc	244,f,c
  8942  0008E4  D8A6               	call	PL36	;call to abstracted procedure
  8943  0008E6  ECFF  F00D         	call	_LcNewString	;wreg free
  8944  0008EA  D77D               	goto	u4250
  8945  0008EC                     l4801:
  8946  0008EC  0E10               	movlw	16
  8947  0008EE  6419               	cpfsgt	GLCDMotor@length2^0,c
  8948  0008F0  0C10               	retlw	16
  8949  0008F2  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8950  0008F4  0C10               	retlw	16
  8951                           
  8952                           ;GestioLCD.c: 127:     state = 9;
  8953  0008F6  0E09               	movlw	9
  8954  0008F8  6E20               	movwf	GLCDMotor@state^0,c
  8955  0008FA  0C09               	retlw	9
  8956  0008FC                     l4807:
  8957                           
  8958                           ;GestioLCD.c: 131:    if (j<16) {
  8959  0008FC  0E10               	movlw	16
  8960  0008FE  601F               	cpfslt	GLCDMotor@j^0,c
  8961  000900  D014               	goto	l4821
  8962                           
  8963                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  8964  000902  0E01               	movlw	1
  8965  000904  6E52               	movwf	LcGotoXY@Row^0,c
  8966  000906  501F               	movf	GLCDMotor@j^0,w,c
  8967  000908  EC9E  F00C         	call	_LcGotoXY
  8968                           
  8969                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  8970  00090C  D879               	call	PL2	;call to abstracted procedure
  8971  00090E  501B               	movf	GLCDMotor@k2^0,w,c
  8972  000910  D88C               	call	PL6	;call to abstracted procedure
  8973  000912  D881               	call	PL4	;call to abstracted procedure
  8974  000914  ECC6  F00B         	call	_LcPutChar
  8975                           
  8976                           ;GestioLCD.c: 134:     j++;
  8977  000918  2A1F               	incf	GLCDMotor@j^0,f,c
  8978                           
  8979                           ;GestioLCD.c: 135:     k2++;
  8980  00091A  2A1B               	incf	GLCDMotor@k2^0,f,c
  8981                           
  8982                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  8983  00091C  D871               	call	PL2	;call to abstracted procedure
  8984  00091E  501B               	movf	GLCDMotor@k2^0,w,c
  8985  000920  D884               	call	PL6	;call to abstracted procedure
  8986  000922  D879               	call	PL4	;call to abstracted procedure
  8987  000924  B4D8               	btfsc	status,2,c
  8988  000926  6A1B               	clrf	GLCDMotor@k2^0,c
  8989  000928  0012               	return	
  8990  00092A                     l4821:
  8991  00092A  0E0F               	movlw	15
  8992  00092C  641F               	cpfsgt	GLCDMotor@j^0,c
  8993  00092E  0C0F               	retlw	15
  8994                           
  8995                           ;GestioLCD.c: 139:     min2++;
  8996  000930  2A1D               	incf	GLCDMotor@min2^0,f,c
  8997                           
  8998                           ;GestioLCD.c: 140:     max2++;
  8999  000932  2A64               	incf	GLCDMotor@max2^0,f,c
  9000                           
  9001                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  9002  000934  D865               	call	PL2	;call to abstracted procedure
  9003  000936  5064               	movf	GLCDMotor@max2^0,w,c
  9004  000938  D878               	call	PL6	;call to abstracted procedure
  9005  00093A  D86D               	call	PL4	;call to abstracted procedure
  9006  00093C  E101               	bnz	l4829
  9007  00093E  6A64               	clrf	GLCDMotor@max2^0,c
  9008  000940                     l4829:
  9009                           
  9010                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  9011  000940  D85F               	call	PL2	;call to abstracted procedure
  9012  000942  501D               	movf	GLCDMotor@min2^0,w,c
  9013  000944  D872               	call	PL6	;call to abstracted procedure
  9014  000946  D867               	call	PL4	;call to abstracted procedure
  9015  000948  E101               	bnz	l957
  9016  00094A  6A1D               	clrf	GLCDMotor@min2^0,c
  9017  00094C                     l957:
  9018                           
  9019                           ;GestioLCD.c: 143:     j=0;
  9020  00094C  6A1F               	clrf	GLCDMotor@j^0,c
  9021                           
  9022                           ;GestioLCD.c: 144:     k2=min2;
  9023  00094E  C01D  F01B         	movff	GLCDMotor@min2,GLCDMotor@k2
  9024  000952  D749               	goto	u4250
  9025  000954                     l4835:
  9026                           
  9027                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  9028  000954  5022               	movf	_timerGLCD^0,w,c
  9029  000956  ECF5  F00C         	call	_TiGetTics
  9030  00095A  BE4B               	btfsc	(?_TiGetTics+1)^0,7,c
  9031  00095C  D00A               	goto	l959
  9032  00095E  D870               	call	PL64	;call to abstracted procedure
  9033  000960  E308               	bnc	l959
  9034  000962  A077               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  9035  000964  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9036  000966  D005               	goto	l959
  9037                           
  9038                           ;GestioLCD.c: 150:     LcClear();
  9039  000968  EC2C  F00D         	call	_LcClear	;wreg free
  9040  00096C                     l4843:
  9041                           
  9042                           ;GestioLCD.c: 151:     state = 2;
  9043  00096C  0E02               	movlw	2
  9044  00096E  6E20               	movwf	GLCDMotor@state^0,c
  9045                           
  9046                           ;GestioLCD.c: 152:    }
  9047  000970  0C02               	retlw	2
  9048  000972                     l959:
  9049  000972  B077               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  9050  000974  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  9051  000976  0012               	return	
  9052                           
  9053                           ;GestioLCD.c: 154:     LcClear();
  9054  000978  EC2C  F00D         	call	_LcClear	;wreg free
  9055  00097C  D764               	goto	u4320
  9056  00097E                     l4851:
  9057                           
  9058                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  9059  00097E  5022               	movf	_timerGLCD^0,w,c
  9060  000980  EC79  F00D         	call	_TiResetTics
  9061  000984  D730               	goto	u4250
  9062  000986                     l4855:
  9063                           
  9064                           ;GestioLCD.c: 163:    if (LcLliure()) {
  9065  000986  EC05  F00E         	call	_LcLliure	;wreg free
  9066  00098A  A0D8               	btfss	status,0,c
  9067  00098C  0012               	return	
  9068                           
  9069                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  9070  00098E  5022               	movf	_timerGLCD^0,w,c
  9071  000990  EC79  F00D         	call	_TiResetTics
  9072                           
  9073                           ;GestioLCD.c: 165:     state = 11;
  9074  000994  0E0B               	movlw	11
  9075  000996  6E20               	movwf	GLCDMotor@state^0,c
  9076  000998  0C0B               	retlw	11
  9077  00099A                     l4861:
  9078                           
  9079                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  9080  00099A  D832               	call	PL2	;call to abstracted procedure
  9081  00099C  5019               	movf	GLCDMotor@length2^0,w,c
  9082  00099E  D845               	call	PL6	;call to abstracted procedure
  9083  0009A0  D83A               	call	PL4	;call to abstracted procedure
  9084  0009A2  E002               	bz	l4865
  9085                           
  9086                           ;GestioLCD.c: 170:     length2++;
  9087  0009A4  2A19               	incf	GLCDMotor@length2^0,f,c
  9088                           
  9089                           ;GestioLCD.c: 171:    }
  9090  0009A6  0012               	return	
  9091  0009A8                     l4865:
  9092  0009A8  D82B               	call	PL2	;call to abstracted procedure
  9093  0009AA  5019               	movf	GLCDMotor@length2^0,w,c
  9094  0009AC  D83E               	call	PL6	;call to abstracted procedure
  9095  0009AE  D833               	call	PL4	;call to abstracted procedure
  9096  0009B0  E0DD               	bz	l4843
  9097  0009B2  0012               	return	
  9098  0009B4                     l4871:
  9099  0009B4  5020               	movf	GLCDMotor@state^0,w,c
  9100  0009B6  6E59               	movwf	??_GLCDMotor^0,c
  9101  0009B8  6A5A               	clrf	(??_GLCDMotor+1)^0,c
  9102                           
  9103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9104                           ; Switch size 1, requested type "space"
  9105                           ; Number of cases is 1, Range of values is 0 to 0
  9106                           ; switch strategies available:
  9107                           ; Name         Instructions Cycles
  9108                           ; simple_byte            4     3 (average)
  9109                           ;	Chosen strategy is simple_byte
  9110  0009BA  505A               	movf	(??_GLCDMotor+1)^0,w,c
  9111  0009BC  A4D8               	btfss	status,2,c
  9112  0009BE  0012               	return	
  9113                           
  9114                           ; Switch size 1, requested type "space"
  9115                           ; Number of cases is 12, Range of values is 0 to 13
  9116                           ; switch strategies available:
  9117                           ; Name         Instructions Cycles
  9118                           ; simple_byte           37    19 (average)
  9119                           ;	Chosen strategy is simple_byte
  9120  0009C0  5059               	movf	??_GLCDMotor^0,w,c
  9121  0009C2  E101 D753          	bz	l939
  9122  0009C6  0A01               	xorlw	1	; case 1
  9123  0009C8  E101 D764          	bz	l4775
  9124  0009CC  0A03               	xorlw	3	; case 2
  9125  0009CE  E101 D6F4          	bz	l4687
  9126  0009D2  0A01               	xorlw	1	; case 3
  9127  0009D4  E101 D709          	bz	l4703
  9128  0009D8  0A06               	xorlw	6	; case 5
  9129  0009DA  E101 D736          	bz	l4739
  9130  0009DE  0A03               	xorlw	3	; case 6
  9131  0009E0  E101 D72D          	bz	l4731
  9132  0009E4  0A01               	xorlw	1	; case 7
  9133  0009E6  E101 D76E          	bz	l4791
  9134  0009EA  0A0F               	xorlw	15	; case 8
  9135  0009EC  E0CC               	bz	l4855
  9136  0009EE  0A01               	xorlw	1	; case 9
  9137  0009F0  E085               	bz	l4807
  9138  0009F2  0A03               	xorlw	3	; case 10
  9139  0009F4  E0C4               	bz	l4851
  9140  0009F6  0A01               	xorlw	1	; case 11
  9141  0009F8  E0AD               	bz	l4835
  9142  0009FA  0A06               	xorlw	6	; case 13
  9143  0009FC  E0CE               	bz	l4861
  9144  0009FE  0012               	return		;funcret
  9145  000A00                     __end_of_GLCDMotor:
  9146                           	callstack 0
  9147  000A00                     PL2:
  9148                           	callstack 24
  9149  000A00  5021               	movf	_menuDaltGLCD^0,w,c
  9150  000A02  0D1D               	mullw	29
  9151  000A04  0EFF               	movlw	low _menuList
  9152  000A06  6E59               	movwf	??_GLCDMotor^0,c
  9153  000A08  0E1E               	movlw	high _menuList
  9154  000A0A  6E5A               	movwf	(??_GLCDMotor+1)^0,c
  9155  000A0C  50F3               	movf	243,w,c
  9156  000A0E  2659               	addwf	??_GLCDMotor^0,f,c
  9157  000A10  50F4               	movf	244,w,c
  9158  000A12  225A               	addwfc	(??_GLCDMotor+1)^0,f,c
  9159  000A14  0012               	return	
  9160  000A16                     __end_ofPL2:
  9161                           	callstack 0
  9162  000A16                     PL4:
  9163                           	callstack 24
  9164  000A16  2659               	addwf	??_GLCDMotor^0,f,c
  9165  000A18  0E00               	movlw	0
  9166  000A1A  225A               	addwfc	(??_GLCDMotor+1)^0,f,c
  9167  000A1C  C059  FFF6         	movff	??_GLCDMotor,tblptrl
  9168  000A20  C05A  FFF7         	movff	??_GLCDMotor+1,tblptrh
  9169  000A24                     	if	0	;tblptru may be non-zero
  9170  000A24                     	endif
  9171  000A24                     	if	0	;tblptru may be non-zero
  9172  000A24                     	endif
  9173  000A24  0008               	tblrd		*
  9174  000A26  50F5               	movf	tablat,w,c
  9175  000A28  0012               	return	
  9176  000A2A                     __end_ofPL4:
  9177                           	callstack 0
  9178  000A2A                     PL6:
  9179                           	callstack 24
  9180  000A2A  2659               	addwf	??_GLCDMotor^0,f,c
  9181  000A2C  0E00               	movlw	0
  9182  000A2E  225A               	addwfc	(??_GLCDMotor+1)^0,f,c
  9183  000A30  0C1D               	retlw	29
  9184  000A32                     __end_ofPL6:
  9185                           	callstack 0
  9186  000A32                     PL36:
  9187                           	callstack 24
  9188  000A32  0EFF               	movlw	low _menuList
  9189  000A34  24F3               	addwf	243,w,c
  9190  000A36  6E4D               	movwf	LcNewString@new_s^0,c
  9191  000A38  0E1E               	movlw	high _menuList
  9192  000A3A  20F4               	addwfc	prodh,w,c
  9193  000A3C  6E4E               	movwf	(LcNewString@new_s+1)^0,c
  9194  000A3E  0012               	return	
  9195  000A40                     __end_ofPL36:
  9196                           	callstack 0
  9197  000A40                     PL64:
  9198                           	callstack 27
  9199  000A40  0EB5               	movlw	181
  9200  000A42  5C4A               	subwf	?_TiGetTics^0,w,c
  9201  000A44  0E04               	movlw	4
  9202  000A46  584B               	subwfb	(?_TiGetTics+1)^0,w,c
  9203  000A48  0012               	return	
  9204  000A4A                     __end_ofPL64:
  9205                           	callstack 0
  9206                           
  9207 ;; *************** function _LcPutChar *****************
  9208 ;; Defined at:
  9209 ;;		line 134 in file "LcTLCD.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  c               1    wreg     unsigned char 
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  c               1   19[COMRAM] unsigned char 
  9214 ;; Return value:  Size  Location     Type
  9215 ;;                  1    wreg      void 
  9216 ;; Registers used:
  9217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9218 ;; Tracked objects:
  9219 ;;		On entry : 0/0
  9220 ;;		On exit  : 0/0
  9221 ;;		Unchanged: 0/0
  9222 ;; Data sizes:     COMRAM   BANK0   BANK1
  9223 ;;      Params:         0       0       0
  9224 ;;      Locals:         1       0       0
  9225 ;;      Temps:          0       0       0
  9226 ;;      Totals:         1       0       0
  9227 ;;Total ram usage:        1 bytes
  9228 ;; Hardware stack levels used: 1
  9229 ;; Hardware stack levels required when called: 5
  9230 ;; This function calls:
  9231 ;;		_CantaData
  9232 ;;		_LcGotoXY
  9233 ;;		_WaitForBusy
  9234 ;; This function is called by:
  9235 ;;		_LcLCD
  9236 ;;		_menu
  9237 ;;		_GLCDMotor
  9238 ;;		_motorSIO
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           	psect	text75
  9243  00178C                     __ptext75:
  9244                           	callstack 0
  9245  00178C                     _LcPutChar:
  9246                           	callstack 24
  9247                           
  9248                           ;incstack = 0
  9249                           ;LcPutChar@c stored from wreg
  9250  00178C  6E58               	movwf	LcPutChar@c^0,c
  9251                           
  9252                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  9253  00178E  EC2D  F00C         	call	_WaitForBusy	;wreg free
  9254  001792  5058               	movf	LcPutChar@c^0,w,c
  9255  001794  EC68  F00C         	call	_CantaData
  9256                           
  9257                           ;LcTLCD.c: 138:  ++ColumnAct;
  9258  001798  2A3E               	incf	_ColumnAct^0,f,c
  9259                           
  9260                           ;LcTLCD.c: 140:  if (Rows == 2) {
  9261  00179A  0E02               	movlw	2
  9262  00179C  1840               	xorwf	_Rows^0,w,c
  9263  00179E  E10C               	bnz	l4303
  9264                           
  9265                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  9266  0017A0  0E27               	movlw	39
  9267  0017A2  643E               	cpfsgt	_ColumnAct^0,c
  9268  0017A4  D009               	goto	l4303
  9269                           
  9270                           ;LcTLCD.c: 142:    ColumnAct = 0;
  9271  0017A6  6A3E               	clrf	_ColumnAct^0,c
  9272                           
  9273                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  9274  0017A8  2A3F               	incf	_RowAct^0,f,c
  9275  0017AA  0E01               	movlw	1
  9276  0017AC  643F               	cpfsgt	_RowAct^0,c
  9277  0017AE  D001               	goto	l4301
  9278  0017B0  6A3F               	clrf	_RowAct^0,c
  9279  0017B2                     l4301:
  9280                           
  9281                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  9282  0017B2  D80C               	call	PL70	;call to abstracted procedure
  9283  0017B4  EC9E  F00C         	call	_LcGotoXY
  9284  0017B8                     l4303:
  9285                           
  9286                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  9287  0017B8  043F               	decf	_RowAct^0,w,c
  9288  0017BA  A4D8               	btfss	status,2,c
  9289  0017BC  0012               	return	
  9290                           
  9291                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  9292  0017BE  0E27               	movlw	39
  9293  0017C0  643E               	cpfsgt	_ColumnAct^0,c
  9294  0017C2  D001               	goto	l4309
  9295  0017C4  6A3E               	clrf	_ColumnAct^0,c
  9296  0017C6                     l4309:
  9297                           
  9298                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  9299  0017C6  D802               	call	PL70	;call to abstracted procedure
  9300  0017C8  EF9E  F00C         	goto	_LcGotoXY
  9301  0017CC                     __end_of_LcPutChar:
  9302                           	callstack 0
  9303  0017CC                     PL70:
  9304                           	callstack 24
  9305  0017CC  C03F  F052         	movff	_RowAct,LcGotoXY@Row
  9306  0017D0  503E               	movf	_ColumnAct^0,w,c
  9307  0017D2  0012               	return	
  9308  0017D4                     __end_ofPL70:
  9309                           	callstack 0
  9310                           
  9311 ;; *************** function _CantaData *****************
  9312 ;; Defined at:
  9313 ;;		line 196 in file "LcTLCD.c"
  9314 ;; Parameters:    Size  Location     Type
  9315 ;;  Data            1    wreg     unsigned char 
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;  Data            1    7[COMRAM] unsigned char 
  9318 ;; Return value:  Size  Location     Type
  9319 ;;                  1    wreg      void 
  9320 ;; Registers used:
  9321 ;;		wreg, status,2, status,0, cstack
  9322 ;; Tracked objects:
  9323 ;;		On entry : 0/0
  9324 ;;		On exit  : 0/0
  9325 ;;		Unchanged: 0/0
  9326 ;; Data sizes:     COMRAM   BANK0   BANK1
  9327 ;;      Params:         0       0       0
  9328 ;;      Locals:         1       0       0
  9329 ;;      Temps:          0       0       0
  9330 ;;      Totals:         1       0       0
  9331 ;;Total ram usage:        1 bytes
  9332 ;; Hardware stack levels used: 1
  9333 ;; Hardware stack levels required when called: 3
  9334 ;; This function calls:
  9335 ;;		_CantaPartAlta
  9336 ;;		_CantaPartBaixa
  9337 ;; This function is called by:
  9338 ;;		_LcPutChar
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342                           	psect	text76
  9343  0018D0                     __ptext76:
  9344                           	callstack 0
  9345  0018D0                     _CantaData:
  9346                           	callstack 25
  9347                           
  9348                           ;incstack = 0
  9349                           ;CantaData@Data stored from wreg
  9350  0018D0  6E4C               	movwf	CantaData@Data^0,c
  9351                           
  9352                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9353  0018D2  9694               	bcf	148,3,c	;volatile
  9354  0018D4  9494               	bcf	148,2,c	;volatile
  9355  0018D6  9294               	bcf	148,1,c	;volatile
  9356  0018D8  9094               	bcf	148,0,c	;volatile
  9357                           
  9358                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  9359  0018DA  8A8B               	bsf	139,5,c	;volatile
  9360                           
  9361                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  9362  0018DC  9E8C               	bcf	140,7,c	;volatile
  9363                           
  9364                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  9365  0018DE  888B               	bsf	139,4,c	;volatile
  9366                           
  9367                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  9368  0018E0  504C               	movf	CantaData@Data^0,w,c
  9369  0018E2  EC3F  F00B         	call	_CantaPartAlta
  9370                           
  9371                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  9372                           
  9373                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  9374                           
  9375                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  9376                           
  9377                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  9378  0018E6  D80B               	call	PL68	;call to abstracted procedure
  9379                           
  9380                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  9381  0018E8  504C               	movf	CantaData@Data^0,w,c
  9382  0018EA  EC0C  F00B         	call	_CantaPartBaixa
  9383                           
  9384                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  9385                           
  9386                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  9387                           
  9388                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9389  0018EE  D000               	goto	PL30	;call to abstracted procedure
  9390  0018F0                     __end_of_CantaData:
  9391                           	callstack 0
  9392  0018F0                     PL30:
  9393                           	callstack 24
  9394  0018F0  888B               	bsf	139,4,c	;volatile
  9395  0018F2  988B               	bcf	139,4,c	;volatile
  9396  0018F4  8694               	bsf	148,3,c	;volatile
  9397  0018F6  8494               	bsf	148,2,c	;volatile
  9398  0018F8  8294               	bsf	148,1,c	;volatile
  9399  0018FA  8094               	bsf	148,0,c	;volatile
  9400  0018FC  0012               	return		;funcret
  9401  0018FE                     __end_ofPL30:
  9402                           	callstack 0
  9403  0018FE                     PL68:
  9404                           	callstack 24
  9405  0018FE  888B               	bsf	139,4,c	;volatile
  9406  001900  988B               	bcf	139,4,c	;volatile
  9407  001902  988B               	bcf	139,4,c	;volatile
  9408  001904  888B               	bsf	139,4,c	;volatile
  9409  001906  0012               	return	
  9410  001908                     __end_ofPL68:
  9411                           	callstack 0
  9412                           
  9413 ;; *************** function _LcNewString *****************
  9414 ;; Defined at:
  9415 ;;		line 241 in file "LcTLCD.c"
  9416 ;; Parameters:    Size  Location     Type
  9417 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9418 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
  9419 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  9420 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  9421 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;		None
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  1    wreg      void 
  9426 ;; Registers used:
  9427 ;;		wreg, status,2, status,0
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMRAM   BANK0   BANK1
  9433 ;;      Params:         2       0       0
  9434 ;;      Locals:         0       0       0
  9435 ;;      Temps:          0       0       0
  9436 ;;      Totals:         2       0       0
  9437 ;;Total ram usage:        2 bytes
  9438 ;; Hardware stack levels used: 1
  9439 ;; Hardware stack levels required when called: 2
  9440 ;; This function calls:
  9441 ;;		Nothing
  9442 ;; This function is called by:
  9443 ;;		_menu
  9444 ;;		_GLCDMotor
  9445 ;;		_motorJoc
  9446 ;;		_motorSIO
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           	psect	text77
  9451  001BFE                     __ptext77:
  9452                           	callstack 0
  9453  001BFE                     _LcNewString:
  9454                           	callstack 27
  9455                           
  9456                           ;LcTLCD.c: 242:     s_ptr = new_s;
  9457                           
  9458                           ;incstack = 0
  9459  001BFE  C04D  F00D         	movff	LcNewString@new_s,_s_ptr
  9460  001C02  C04E  F00E         	movff	LcNewString@new_s+1,_s_ptr+1
  9461                           
  9462                           ;LcTLCD.c: 243:     nou_s = 1;
  9463  001C06  8278               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9464  001C08  0012               	return		;funcret
  9465  001C0A                     __end_of_LcNewString:
  9466                           	callstack 0
  9467                           
  9468 ;; *************** function _LcLliure *****************
  9469 ;; Defined at:
  9470 ;;		line 257 in file "LcTLCD.c"
  9471 ;; Parameters:    Size  Location     Type
  9472 ;;		None
  9473 ;; Auto vars:     Size  Location     Type
  9474 ;;		None
  9475 ;; Return value:  Size  Location     Type
  9476 ;;		None               void
  9477 ;; Registers used:
  9478 ;;		status,0
  9479 ;; Tracked objects:
  9480 ;;		On entry : 0/0
  9481 ;;		On exit  : 0/0
  9482 ;;		Unchanged: 0/0
  9483 ;; Data sizes:     COMRAM   BANK0   BANK1
  9484 ;;      Params:         0       0       0
  9485 ;;      Locals:         0       0       0
  9486 ;;      Temps:          0       0       0
  9487 ;;      Totals:         0       0       0
  9488 ;;Total ram usage:        0 bytes
  9489 ;; Hardware stack levels used: 1
  9490 ;; Hardware stack levels required when called: 2
  9491 ;; This function calls:
  9492 ;;		Nothing
  9493 ;; This function is called by:
  9494 ;;		_menu
  9495 ;;		_GLCDMotor
  9496 ;;		_motorJoc
  9497 ;;		_motorSIO
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           	psect	text78
  9502  001C0A                     __ptext78:
  9503                           	callstack 0
  9504  001C0A                     _LcLliure:
  9505                           	callstack 27
  9506                           
  9507                           ;LcTLCD.c: 258:     return !nou_s;
  9508                           
  9509                           ;incstack = 0
  9510  001C0A  A278               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9511  001C0C  D002               	goto	l2141
  9512  001C0E  90D8               	bcf	status,0,c
  9513  001C10  0012               	return	
  9514  001C12                     l2141:
  9515  001C12  80D8               	bsf	status,0,c
  9516  001C14  0012               	return		;funcret
  9517  001C16                     __end_of_LcLliure:
  9518                           	callstack 0
  9519                           
  9520 ;; *************** function _LcClear *****************
  9521 ;; Defined at:
  9522 ;;		line 84 in file "LcTLCD.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;		None
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;		None
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1    wreg      void 
  9529 ;; Registers used:
  9530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9531 ;; Tracked objects:
  9532 ;;		On entry : 0/0
  9533 ;;		On exit  : 0/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMRAM   BANK0   BANK1
  9536 ;;      Params:         0       0       0
  9537 ;;      Locals:         0       0       0
  9538 ;;      Temps:          0       0       0
  9539 ;;      Totals:         0       0       0
  9540 ;;Total ram usage:        0 bytes
  9541 ;; Hardware stack levels used: 1
  9542 ;; Hardware stack levels required when called: 5
  9543 ;; This function calls:
  9544 ;;		_CantaIR
  9545 ;;		_Espera
  9546 ;;		_LcGotoXY
  9547 ;;		_WaitForBusy
  9548 ;; This function is called by:
  9549 ;;		_menu
  9550 ;;		_GLCDMotor
  9551 ;;		_motorSIO
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555                           	psect	text79
  9556  001A58                     __ptext79:
  9557                           	callstack 0
  9558  001A58                     _LcClear:
  9559                           	callstack 24
  9560                           
  9561                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  9562                           
  9563                           ;incstack = 0
  9564  001A58  EC2D  F00C         	call	_WaitForBusy	;wreg free
  9565  001A5C  0E01               	movlw	1
  9566  001A5E  EC6B  F00D         	call	_CantaIR
  9567                           
  9568                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  9569  001A62  D806               	call	PL58	;call to abstracted procedure
  9570  001A64  EC3D  F00D         	call	_Espera
  9571                           
  9572                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  9573  001A68  0E00               	movlw	0
  9574  001A6A  6E52               	movwf	LcGotoXY@Row^0,c
  9575  001A6C  EF9E  F00C         	goto	_LcGotoXY
  9576  001A70                     __end_of_LcClear:
  9577                           	callstack 0
  9578  001A70                     PL58:
  9579                           	callstack 26
  9580  001A70  6A52               	clrf	(Espera@ms+1)^0,c
  9581  001A72  0E03               	movlw	3
  9582  001A74  6E51               	movwf	Espera@ms^0,c
  9583  001A76  503D               	movf	_Timer^0,w,c
  9584  001A78  0012               	return	
  9585  001A7A                     __end_ofPL58:
  9586                           	callstack 0
  9587                           
  9588 ;; *************** function _LcGotoXY *****************
  9589 ;; Defined at:
  9590 ;;		line 106 in file "LcTLCD.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  Column          1    wreg     unsigned char 
  9593 ;;  Row             1   13[COMRAM] unsigned char 
  9594 ;; Auto vars:     Size  Location     Type
  9595 ;;  Column          1   18[COMRAM] unsigned char 
  9596 ;;  Fisics          2   14[COMRAM] int 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1    wreg      void 
  9599 ;; Registers used:
  9600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMRAM   BANK0   BANK1
  9606 ;;      Params:         1       0       0
  9607 ;;      Locals:         5       0       0
  9608 ;;      Temps:          0       0       0
  9609 ;;      Totals:         6       0       0
  9610 ;;Total ram usage:        6 bytes
  9611 ;; Hardware stack levels used: 1
  9612 ;; Hardware stack levels required when called: 4
  9613 ;; This function calls:
  9614 ;;		_CantaIR
  9615 ;;		_WaitForBusy
  9616 ;; This function is called by:
  9617 ;;		_LcClear
  9618 ;;		_LcPutChar
  9619 ;;		_menu
  9620 ;;		_GLCDMotor
  9621 ;;		_motorJoc
  9622 ;;		_motorSIO
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           	psect	text80
  9627  00193C                     __ptext80:
  9628                           	callstack 0
  9629  00193C                     _LcGotoXY:
  9630                           	callstack 24
  9631                           
  9632                           ;incstack = 0
  9633                           ;LcGotoXY@Column stored from wreg
  9634  00193C  6E57               	movwf	LcGotoXY@Column^0,c
  9635                           
  9636                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  9637  00193E  5052               	movf	LcGotoXY@Row^0,w,c
  9638  001940  E004               	bz	l57
  9639  001942  6A56               	clrf	(_LcGotoXY$336+1)^0,c
  9640  001944  0E40               	movlw	64
  9641  001946  6E55               	movwf	_LcGotoXY$336^0,c
  9642  001948  D002               	goto	l4229
  9643  00194A                     l57:
  9644  00194A  6A55               	clrf	_LcGotoXY$336^0,c
  9645  00194C  6A56               	clrf	(_LcGotoXY$336+1)^0,c
  9646  00194E                     l4229:
  9647  00194E  5057               	movf	LcGotoXY@Column^0,w,c
  9648  001950  2455               	addwf	_LcGotoXY$336^0,w,c
  9649  001952  6E53               	movwf	LcGotoXY@Fisics^0,c
  9650  001954  0E00               	movlw	0
  9651  001956  2056               	addwfc	(_LcGotoXY$336+1)^0,w,c
  9652  001958  6E54               	movwf	(LcGotoXY@Fisics+1)^0,c
  9653                           
  9654                           ;LcTLCD.c: 127:  WaitForBusy();
  9655  00195A  EC2D  F00C         	call	_WaitForBusy	;wreg free
  9656                           
  9657                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  9658  00195E  5053               	movf	LcGotoXY@Fisics^0,w,c
  9659  001960  0980               	iorlw	128
  9660  001962  EC6B  F00D         	call	_CantaIR
  9661                           
  9662                           ;LcTLCD.c: 130:  RowAct = Row;
  9663  001966  C052  F03F         	movff	LcGotoXY@Row,_RowAct
  9664                           
  9665                           ;LcTLCD.c: 131:  ColumnAct = Column;
  9666  00196A  C057  F03E         	movff	LcGotoXY@Column,_ColumnAct
  9667  00196E  0012               	return		;funcret
  9668  001970                     __end_of_LcGotoXY:
  9669                           	callstack 0
  9670                           
  9671 ;; *************** function _WaitForBusy *****************
  9672 ;; Defined at:
  9673 ;;		line 212 in file "LcTLCD.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;		None
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;  Busy            1   12[COMRAM] unsigned char 
  9678 ;; Return value:  Size  Location     Type
  9679 ;;                  1    wreg      void 
  9680 ;; Registers used:
  9681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9682 ;; Tracked objects:
  9683 ;;		On entry : 0/0
  9684 ;;		On exit  : 0/0
  9685 ;;		Unchanged: 0/0
  9686 ;; Data sizes:     COMRAM   BANK0   BANK1
  9687 ;;      Params:         0       0       0
  9688 ;;      Locals:         1       0       0
  9689 ;;      Temps:          0       0       0
  9690 ;;      Totals:         1       0       0
  9691 ;;Total ram usage:        1 bytes
  9692 ;; Hardware stack levels used: 1
  9693 ;; Hardware stack levels required when called: 3
  9694 ;; This function calls:
  9695 ;;		_TiGetTics
  9696 ;;		_TiResetTics
  9697 ;; This function is called by:
  9698 ;;		_LcInit
  9699 ;;		_LcClear
  9700 ;;		_LcGotoXY
  9701 ;;		_LcPutChar
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           	psect	text81
  9706  00185A                     __ptext81:
  9707                           	callstack 0
  9708  00185A                     _WaitForBusy:
  9709                           	callstack 25
  9710                           
  9711                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9712                           
  9713                           ;incstack = 0
  9714  00185A  8694               	bsf	148,3,c	;volatile
  9715  00185C  8494               	bsf	148,2,c	;volatile
  9716  00185E  8294               	bsf	148,1,c	;volatile
  9717  001860  8094               	bsf	148,0,c	;volatile
  9718                           
  9719                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  9720  001862  9A8B               	bcf	139,5,c	;volatile
  9721                           
  9722                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  9723  001864  8E8C               	bsf	140,7,c	;volatile
  9724                           
  9725                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  9726  001866  503D               	movf	_Timer^0,w,c
  9727  001868  EC79  F00D         	call	_TiResetTics
  9728  00186C                     l4197:
  9729                           
  9730                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9731  00186C  888B               	bsf	139,4,c	;volatile
  9732  00186E  888B               	bsf	139,4,c	;volatile
  9733                           
  9734                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  9735  001870  0E00               	movlw	0
  9736  001872  B682               	btfsc	130,3,c	;volatile
  9737  001874  0E01               	movlw	1
  9738  001876  6E51               	movwf	WaitForBusy@Busy^0,c
  9739                           
  9740                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  9741  001878  988B               	bcf	139,4,c	;volatile
  9742                           
  9743                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  9744  00187A  988B               	bcf	139,4,c	;volatile
  9745                           
  9746                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9747  00187C  888B               	bsf	139,4,c	;volatile
  9748  00187E  888B               	bsf	139,4,c	;volatile
  9749                           
  9750                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  9751  001880  988B               	bcf	139,4,c	;volatile
  9752                           
  9753                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  9754  001882  988B               	bcf	139,4,c	;volatile
  9755                           
  9756                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  9757  001884  503D               	movf	_Timer^0,w,c
  9758  001886  ECF5  F00C         	call	_TiGetTics
  9759  00188A  504A               	movf	?_TiGetTics^0,w,c
  9760  00188C  104B               	iorwf	(?_TiGetTics+1)^0,w,c
  9761  00188E  E001               	bz	l4219
  9762  001890  0012               	return	
  9763  001892                     l4219:
  9764                           
  9765                           ;LcTLCD.c: 227:  } while(Busy);
  9766  001892  5051               	movf	WaitForBusy@Busy^0,w,c
  9767  001894  E1EB               	bnz	l4197
  9768  001896  0012               	return		;funcret
  9769  001898                     __end_of_WaitForBusy:
  9770                           	callstack 0
  9771                           
  9772 ;; *************** function _CantaIR *****************
  9773 ;; Defined at:
  9774 ;;		line 180 in file "LcTLCD.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  IR              1    wreg     unsigned char 
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;  IR              1    7[COMRAM] unsigned char 
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1
  9788 ;;      Params:         0       0       0
  9789 ;;      Locals:         1       0       0
  9790 ;;      Temps:          0       0       0
  9791 ;;      Totals:         1       0       0
  9792 ;;Total ram usage:        1 bytes
  9793 ;; Hardware stack levels used: 1
  9794 ;; Hardware stack levels required when called: 3
  9795 ;; This function calls:
  9796 ;;		_CantaPartAlta
  9797 ;;		_CantaPartBaixa
  9798 ;; This function is called by:
  9799 ;;		_LcScroll
  9800 ;;		_LcInit
  9801 ;;		_LcClear
  9802 ;;		_LcGotoXY
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           	psect	text82
  9807  001AD6                     __ptext82:
  9808                           	callstack 0
  9809  001AD6                     _CantaIR:
  9810                           	callstack 24
  9811                           
  9812                           ;incstack = 0
  9813                           ;CantaIR@IR stored from wreg
  9814  001AD6  6E4C               	movwf	CantaIR@IR^0,c
  9815                           
  9816                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9817  001AD8  9694               	bcf	148,3,c	;volatile
  9818                           
  9819                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  9820                           
  9821                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  9822                           
  9823                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  9824  001ADA  ECC8  F00A         	call	PL38	;call to abstracted procedure
  9825                           
  9826                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  9827  001ADE  504C               	movf	CantaIR@IR^0,w,c
  9828  001AE0  EC3F  F00B         	call	_CantaPartAlta
  9829                           
  9830                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9831                           
  9832                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  9833                           
  9834                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  9835                           
  9836                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  9837  001AE4  EC7F  F00C         	call	PL68	;call to abstracted procedure
  9838                           
  9839                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  9840  001AE8  504C               	movf	CantaIR@IR^0,w,c
  9841  001AEA  EC0C  F00B         	call	_CantaPartBaixa
  9842                           
  9843                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9844                           
  9845                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  9846                           
  9847                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9848  001AEE  EF78  F00C         	goto	PL30	;call to abstracted procedure
  9849  001AF2                     __end_of_CantaIR:
  9850                           	callstack 0
  9851                           
  9852 ;; *************** function _CantaPartBaixa *****************
  9853 ;; Defined at:
  9854 ;;		line 173 in file "LcTLCD.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;  c               1    wreg     unsigned char 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  c               1    6[COMRAM] unsigned char 
  9859 ;; Return value:  Size  Location     Type
  9860 ;;                  1    wreg      void 
  9861 ;; Registers used:
  9862 ;;		wreg, status,2, status,0
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/0
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMRAM   BANK0   BANK1
  9868 ;;      Params:         0       0       0
  9869 ;;      Locals:         1       0       0
  9870 ;;      Temps:          1       0       0
  9871 ;;      Totals:         2       0       0
  9872 ;;Total ram usage:        2 bytes
  9873 ;; Hardware stack levels used: 1
  9874 ;; Hardware stack levels required when called: 2
  9875 ;; This function calls:
  9876 ;;		Nothing
  9877 ;; This function is called by:
  9878 ;;		_CantaIR
  9879 ;;		_CantaData
  9880 ;; This function uses a non-reentrant model
  9881 ;;
  9882                           
  9883                           	psect	text83
  9884  001618                     __ptext83:
  9885                           	callstack 0
  9886  001618                     _CantaPartBaixa:
  9887                           	callstack 24
  9888                           
  9889                           ;incstack = 0
  9890                           ;CantaPartBaixa@c stored from wreg
  9891  001618  6E4B               	movwf	CantaPartBaixa@c^0,c
  9892                           
  9893                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  9894  00161A  A64B               	btfss	CantaPartBaixa@c^0,3,c
  9895  00161C  D003               	goto	u3570
  9896  00161E  6A4A               	clrf	??_CantaPartBaixa^0,c
  9897  001620  2A4A               	incf	??_CantaPartBaixa^0,f,c
  9898  001622  D001               	goto	u3588
  9899  001624                     u3570:
  9900  001624  6A4A               	clrf	??_CantaPartBaixa^0,c
  9901  001626                     u3588:
  9902  001626  464A               	rlncf	??_CantaPartBaixa^0,f,c
  9903  001628  D825               	call	PL52	;call to abstracted procedure
  9904  00162A  0BF7               	andlw	-9
  9905  00162C  184A               	xorwf	??_CantaPartBaixa^0,w,c
  9906  00162E  6E8B               	movwf	139,c	;volatile
  9907                           
  9908                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  9909  001630  A44B               	btfss	CantaPartBaixa@c^0,2,c
  9910  001632  D003               	goto	u3590
  9911  001634  6A4A               	clrf	??_CantaPartBaixa^0,c
  9912  001636  2A4A               	incf	??_CantaPartBaixa^0,f,c
  9913  001638  D001               	goto	u3608
  9914  00163A                     u3590:
  9915  00163A  6A4A               	clrf	??_CantaPartBaixa^0,c
  9916  00163C                     u3608:
  9917  00163C  D81B               	call	PL52	;call to abstracted procedure
  9918  00163E  0BFB               	andlw	-5
  9919  001640  184A               	xorwf	??_CantaPartBaixa^0,w,c
  9920  001642  6E8B               	movwf	139,c	;volatile
  9921                           
  9922                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  9923  001644  A24B               	btfss	CantaPartBaixa@c^0,1,c
  9924  001646  D003               	goto	u3610
  9925  001648  6A4A               	clrf	??_CantaPartBaixa^0,c
  9926  00164A  2A4A               	incf	??_CantaPartBaixa^0,f,c
  9927  00164C  D001               	goto	u3628
  9928  00164E                     u3610:
  9929  00164E  6A4A               	clrf	??_CantaPartBaixa^0,c
  9930  001650                     u3628:
  9931  001650  464A               	rlncf	??_CantaPartBaixa^0,f,c
  9932  001652  508B               	movf	139,w,c	;volatile
  9933  001654  184A               	xorwf	??_CantaPartBaixa^0,w,c
  9934  001656  0BFD               	andlw	-3
  9935  001658  184A               	xorwf	??_CantaPartBaixa^0,w,c
  9936  00165A  6E8B               	movwf	139,c	;volatile
  9937                           
  9938                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  9939  00165C  A04B               	btfss	CantaPartBaixa@c^0,0,c
  9940  00165E  D003               	goto	u3630
  9941  001660  6A4A               	clrf	??_CantaPartBaixa^0,c
  9942  001662  2A4A               	incf	??_CantaPartBaixa^0,f,c
  9943  001664  D001               	goto	u3648
  9944  001666                     u3630:
  9945  001666  6A4A               	clrf	??_CantaPartBaixa^0,c
  9946  001668                     u3648:
  9947  001668  508B               	movf	139,w,c	;volatile
  9948  00166A  184A               	xorwf	??_CantaPartBaixa^0,w,c
  9949  00166C  0BFE               	andlw	-2
  9950  00166E  184A               	xorwf	??_CantaPartBaixa^0,w,c
  9951  001670  6E8B               	movwf	139,c	;volatile
  9952  001672  0012               	return		;funcret
  9953  001674                     __end_of_CantaPartBaixa:
  9954                           	callstack 0
  9955  001674                     PL52:
  9956                           	callstack 24
  9957  001674  464A               	rlncf	??_CantaPartBaixa^0,f,c
  9958  001676  464A               	rlncf	??_CantaPartBaixa^0,f,c
  9959  001678  508B               	movf	139,w,c	;volatile
  9960  00167A  184A               	xorwf	??_CantaPartBaixa^0,w,c
  9961  00167C  0012               	return	
  9962  00167E                     __end_ofPL52:
  9963                           	callstack 0
  9964                           
  9965 ;; *************** function _CantaPartAlta *****************
  9966 ;; Defined at:
  9967 ;;		line 166 in file "LcTLCD.c"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;  c               1    wreg     unsigned char 
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;  c               1    6[COMRAM] unsigned char 
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1    wreg      void 
  9974 ;; Registers used:
  9975 ;;		wreg, status,2, status,0
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMRAM   BANK0   BANK1
  9981 ;;      Params:         0       0       0
  9982 ;;      Locals:         1       0       0
  9983 ;;      Temps:          1       0       0
  9984 ;;      Totals:         2       0       0
  9985 ;;Total ram usage:        2 bytes
  9986 ;; Hardware stack levels used: 1
  9987 ;; Hardware stack levels required when called: 2
  9988 ;; This function calls:
  9989 ;;		Nothing
  9990 ;; This function is called by:
  9991 ;;		_CantaIR
  9992 ;;		_CantaData
  9993 ;; This function uses a non-reentrant model
  9994 ;;
  9995                           
  9996                           	psect	text84
  9997  00167E                     __ptext84:
  9998                           	callstack 0
  9999  00167E                     _CantaPartAlta:
 10000                           	callstack 24
 10001                           
 10002                           ;incstack = 0
 10003                           ;CantaPartAlta@c stored from wreg
 10004  00167E  6E4B               	movwf	CantaPartAlta@c^0,c
 10005                           
 10006                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
 10007  001680  AE4B               	btfss	CantaPartAlta@c^0,7,c
 10008  001682  D003               	goto	u3490
 10009  001684  6A4A               	clrf	??_CantaPartAlta^0,c
 10010  001686  2A4A               	incf	??_CantaPartAlta^0,f,c
 10011  001688  D001               	goto	u3508
 10012  00168A                     u3490:
 10013  00168A  6A4A               	clrf	??_CantaPartAlta^0,c
 10014  00168C                     u3508:
 10015  00168C  464A               	rlncf	??_CantaPartAlta^0,f,c
 10016  00168E  D825               	call	PL62	;call to abstracted procedure
 10017  001690  0BF7               	andlw	-9
 10018  001692  184A               	xorwf	??_CantaPartAlta^0,w,c
 10019  001694  6E8B               	movwf	139,c	;volatile
 10020                           
 10021                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
 10022  001696  AC4B               	btfss	CantaPartAlta@c^0,6,c
 10023  001698  D003               	goto	u3510
 10024  00169A  6A4A               	clrf	??_CantaPartAlta^0,c
 10025  00169C  2A4A               	incf	??_CantaPartAlta^0,f,c
 10026  00169E  D001               	goto	u3528
 10027  0016A0                     u3510:
 10028  0016A0  6A4A               	clrf	??_CantaPartAlta^0,c
 10029  0016A2                     u3528:
 10030  0016A2  D81B               	call	PL62	;call to abstracted procedure
 10031  0016A4  0BFB               	andlw	-5
 10032  0016A6  184A               	xorwf	??_CantaPartAlta^0,w,c
 10033  0016A8  6E8B               	movwf	139,c	;volatile
 10034                           
 10035                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
 10036  0016AA  AA4B               	btfss	CantaPartAlta@c^0,5,c
 10037  0016AC  D003               	goto	u3530
 10038  0016AE  6A4A               	clrf	??_CantaPartAlta^0,c
 10039  0016B0  2A4A               	incf	??_CantaPartAlta^0,f,c
 10040  0016B2  D001               	goto	u3548
 10041  0016B4                     u3530:
 10042  0016B4  6A4A               	clrf	??_CantaPartAlta^0,c
 10043  0016B6                     u3548:
 10044  0016B6  464A               	rlncf	??_CantaPartAlta^0,f,c
 10045  0016B8  508B               	movf	139,w,c	;volatile
 10046  0016BA  184A               	xorwf	??_CantaPartAlta^0,w,c
 10047  0016BC  0BFD               	andlw	-3
 10048  0016BE  184A               	xorwf	??_CantaPartAlta^0,w,c
 10049  0016C0  6E8B               	movwf	139,c	;volatile
 10050                           
 10051                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
 10052  0016C2  A84B               	btfss	CantaPartAlta@c^0,4,c
 10053  0016C4  D003               	goto	u3550
 10054  0016C6  6A4A               	clrf	??_CantaPartAlta^0,c
 10055  0016C8  2A4A               	incf	??_CantaPartAlta^0,f,c
 10056  0016CA  D001               	goto	u3568
 10057  0016CC                     u3550:
 10058  0016CC  6A4A               	clrf	??_CantaPartAlta^0,c
 10059  0016CE                     u3568:
 10060  0016CE  508B               	movf	139,w,c	;volatile
 10061  0016D0  184A               	xorwf	??_CantaPartAlta^0,w,c
 10062  0016D2  0BFE               	andlw	-2
 10063  0016D4  184A               	xorwf	??_CantaPartAlta^0,w,c
 10064  0016D6  6E8B               	movwf	139,c	;volatile
 10065  0016D8  0012               	return		;funcret
 10066  0016DA                     __end_of_CantaPartAlta:
 10067                           	callstack 0
 10068  0016DA                     PL62:
 10069                           	callstack 24
 10070  0016DA  464A               	rlncf	??_CantaPartAlta^0,f,c
 10071  0016DC  464A               	rlncf	??_CantaPartAlta^0,f,c
 10072  0016DE  508B               	movf	139,w,c	;volatile
 10073  0016E0  184A               	xorwf	??_CantaPartAlta^0,w,c
 10074  0016E2  0012               	return	
 10075  0016E4                     __end_ofPL62:
 10076                           	callstack 0
 10077                           
 10078 ;; *************** function _Espera *****************
 10079 ;; Defined at:
 10080 ;;		line 161 in file "LcTLCD.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;  Timer           1    wreg     unsigned char 
 10083 ;;  ms              2   12[COMRAM] int 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  Timer           1   15[COMRAM] unsigned char 
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      void 
 10088 ;; Registers used:
 10089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMRAM   BANK0   BANK1
 10095 ;;      Params:         2       0       0
 10096 ;;      Locals:         1       0       0
 10097 ;;      Temps:          1       0       0
 10098 ;;      Totals:         4       0       0
 10099 ;;Total ram usage:        4 bytes
 10100 ;; Hardware stack levels used: 1
 10101 ;; Hardware stack levels required when called: 3
 10102 ;; This function calls:
 10103 ;;		_TiGetTics
 10104 ;;		_TiResetTics
 10105 ;; This function is called by:
 10106 ;;		_LcInit
 10107 ;;		_LcClear
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text85
 10112  001A7A                     __ptext85:
 10113                           	callstack 0
 10114  001A7A                     _Espera:
 10115                           	callstack 25
 10116                           
 10117                           ;incstack = 0
 10118                           ;Espera@Timer stored from wreg
 10119  001A7A  6E54               	movwf	Espera@Timer^0,c
 10120                           
 10121                           ;LcTLCD.c: 162:  TiResetTics(Timer);
 10122  001A7C  5054               	movf	Espera@Timer^0,w,c
 10123  001A7E  EC79  F00D         	call	_TiResetTics
 10124  001A82                     l4223:
 10125  001A82  5054               	movf	Espera@Timer^0,w,c
 10126  001A84  ECF5  F00C         	call	_TiGetTics
 10127  001A88  5051               	movf	Espera@ms^0,w,c
 10128  001A8A  5C4A               	subwf	?_TiGetTics^0,w,c
 10129  001A8C  504B               	movf	(?_TiGetTics+1)^0,w,c
 10130  001A8E  0A80               	xorlw	128
 10131  001A90  6E53               	movwf	??_Espera^0,c
 10132  001A92  5052               	movf	(Espera@ms+1)^0,w,c
 10133  001A94  0A80               	xorlw	128
 10134  001A96  5853               	subwfb	??_Espera^0,w,c
 10135  001A98  E3F4               	bnc	l4223
 10136  001A9A  0012               	return		;funcret
 10137  001A9C                     __end_of_Espera:
 10138                           	callstack 0
 10139                           
 10140 ;; *************** function _TiResetTics *****************
 10141 ;; Defined at:
 10142 ;;		line 55 in file "TiTTimer.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;  Handle          1    wreg     unsigned char 
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;  Handle          1    5[COMRAM] unsigned char 
 10147 ;; Return value:  Size  Location     Type
 10148 ;;                  1    wreg      void 
 10149 ;; Registers used:
 10150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 0/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMRAM   BANK0   BANK1
 10156 ;;      Params:         0       0       0
 10157 ;;      Locals:         1       0       0
 10158 ;;      Temps:          0       0       0
 10159 ;;      Totals:         1       0       0
 10160 ;;Total ram usage:        1 bytes
 10161 ;; Hardware stack levels used: 1
 10162 ;; Hardware stack levels required when called: 2
 10163 ;; This function calls:
 10164 ;;		Nothing
 10165 ;; This function is called by:
 10166 ;;		_Espera
 10167 ;;		_WaitForBusy
 10168 ;;		_SMotor
 10169 ;;		_TeTeclat
 10170 ;;		_menu
 10171 ;;		_motorAltaveu
 10172 ;;		_GLCDMotor
 10173 ;;		_motorHora
 10174 ;;		_motorSIO
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           	psect	text86
 10179  001AF2                     __ptext86:
 10180                           	callstack 0
 10181  001AF2                     _TiResetTics:
 10182                           	callstack 27
 10183                           
 10184                           ;incstack = 0
 10185                           ;TiResetTics@Handle stored from wreg
 10186  001AF2  6E4A               	movwf	TiResetTics@Handle^0,c
 10187                           
 10188                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10189  001AF4  504A               	movf	TiResetTics@Handle^0,w,c
 10190  001AF6  D805               	call	PL26	;call to abstracted procedure
 10191  001AF8  C00B  FFDE         	movff	_h_Tics,postinc2
 10192  001AFC  C00C  FFDD         	movff	_h_Tics+1,postdec2
 10193  001B00  0012               	return		;funcret
 10194  001B02                     __end_of_TiResetTics:
 10195                           	callstack 0
 10196  001B02                     PL26:
 10197                           	callstack 24
 10198  001B02  0D03               	mullw	3
 10199  001B04  50F3               	movf	243,w,c
 10200  001B06  0F80               	addlw	low _s_Timers
 10201  001B08  6ED9               	movwf	fsr2l,c
 10202  001B0A  6ADA               	clrf	fsr2h,c
 10203  001B0C  0012               	return	
 10204  001B0E                     __end_ofPL26:
 10205                           	callstack 0
 10206                           
 10207 ;; *************** function _TiGetTics *****************
 10208 ;; Defined at:
 10209 ;;		line 61 in file "TiTTimer.c"
 10210 ;; Parameters:    Size  Location     Type
 10211 ;;  Handle          1    wreg     unsigned char 
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;  Handle          1    9[COMRAM] unsigned char 
 10214 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10215 ;; Return value:  Size  Location     Type
 10216 ;;                  2    5[COMRAM] int 
 10217 ;; Registers used:
 10218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10219 ;; Tracked objects:
 10220 ;;		On entry : 0/0
 10221 ;;		On exit  : 0/0
 10222 ;;		Unchanged: 0/0
 10223 ;; Data sizes:     COMRAM   BANK0   BANK1
 10224 ;;      Params:         2       0       0
 10225 ;;      Locals:         3       0       0
 10226 ;;      Temps:          2       0       0
 10227 ;;      Totals:         7       0       0
 10228 ;;Total ram usage:        7 bytes
 10229 ;; Hardware stack levels used: 1
 10230 ;; Hardware stack levels required when called: 2
 10231 ;; This function calls:
 10232 ;;		Nothing
 10233 ;; This function is called by:
 10234 ;;		_Espera
 10235 ;;		_WaitForBusy
 10236 ;;		_SMotor
 10237 ;;		_TeTeclat
 10238 ;;		_menu
 10239 ;;		_motorAltaveu
 10240 ;;		_GLCDMotor
 10241 ;;		_motorHora
 10242 ;;		_motorSIO
 10243 ;; This function uses a non-reentrant model
 10244 ;;
 10245                           
 10246                           	psect	text87
 10247  0019EA                     __ptext87:
 10248                           	callstack 0
 10249  0019EA                     _TiGetTics:
 10250                           	callstack 27
 10251                           
 10252                           ;incstack = 0
 10253                           ;TiGetTics@Handle stored from wreg
 10254  0019EA  6E4E               	movwf	TiGetTics@Handle^0,c
 10255                           
 10256                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10257  0019EC  C00B  F04F         	movff	_h_Tics,TiGetTics@actual	;volatile
 10258  0019F0  C00C  F050         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10259                           
 10260                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10261  0019F4  504E               	movf	TiGetTics@Handle^0,w,c
 10262  0019F6  EC81  F00D         	call	PL26	;call to abstracted procedure
 10263  0019FA  CFDE F04C          	movff	postinc2,??_TiGetTics
 10264  0019FE  CFDD F04D          	movff	postdec2,??_TiGetTics+1
 10265  001A02  504C               	movf	??_TiGetTics^0,w,c
 10266  001A04  5C4F               	subwf	TiGetTics@actual^0,w,c	;volatile
 10267  001A06  6E4A               	movwf	?_TiGetTics^0,c
 10268  001A08  504D               	movf	(??_TiGetTics+1)^0,w,c
 10269  001A0A  5850               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10270  001A0C  6E4B               	movwf	(?_TiGetTics+1)^0,c
 10271  001A0E  0012               	return		;funcret
 10272  001A10                     __end_of_TiGetTics:
 10273                           	callstack 0
 10274                           
 10275 ;; *************** function _GLCDInit *****************
 10276 ;; Defined at:
 10277 ;;		line 26 in file "GestioLCD.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;		None
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;		None
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  1    wreg      void 
 10284 ;; Registers used:
 10285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMRAM   BANK0   BANK1
 10291 ;;      Params:         0       0       0
 10292 ;;      Locals:         0       0       0
 10293 ;;      Temps:          0       0       0
 10294 ;;      Totals:         0       0       0
 10295 ;;Total ram usage:        0 bytes
 10296 ;; Hardware stack levels used: 1
 10297 ;; Hardware stack levels required when called: 3
 10298 ;; This function calls:
 10299 ;;		_TiGetTimer
 10300 ;; This function is called by:
 10301 ;;		_main
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           	psect	text88
 10306  001CA8                     __ptext88:
 10307                           	callstack 0
 10308  001CA8                     _GLCDInit:
 10309                           	callstack 27
 10310                           
 10311                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 10312                           
 10313                           ;incstack = 0
 10314  001CA8  ECB8  F00C         	call	_TiGetTimer	;wreg free
 10315  001CAC  6E22               	movwf	_timerGLCD^0,c
 10316  001CAE  0012               	return		;funcret
 10317  001CB0                     __end_of_GLCDInit:
 10318                           	callstack 0
 10319                           
 10320 ;; *************** function _TiGetTimer *****************
 10321 ;; Defined at:
 10322 ;;		line 70 in file "TiTTimer.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;		None
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;		None
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      unsigned char 
 10329 ;; Registers used:
 10330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMRAM   BANK0   BANK1
 10336 ;;      Params:         0       0       0
 10337 ;;      Locals:         0       0       0
 10338 ;;      Temps:          1       0       0
 10339 ;;      Totals:         1       0       0
 10340 ;;Total ram usage:        1 bytes
 10341 ;; Hardware stack levels used: 1
 10342 ;; Hardware stack levels required when called: 2
 10343 ;; This function calls:
 10344 ;;		Nothing
 10345 ;; This function is called by:
 10346 ;;		_LcInit
 10347 ;;		_Sinit
 10348 ;;		_TeInit
 10349 ;;		_Minit
 10350 ;;		_initAltaveu
 10351 ;;		_GLCDInit
 10352 ;;		_initHora
 10353 ;;		_initSIO
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	text89
 10358  001970                     __ptext89:
 10359                           	callstack 0
 10360  001970                     _TiGetTimer:
 10361                           	callstack 27
 10362                           
 10363                           ;TiTTimer.c: 74:     counter=0;
 10364                           
 10365                           ;incstack = 0
 10366  001970  6A34               	clrf	_counter^0,c
 10367                           
 10368                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10369  001972  D005               	goto	l4269
 10370  001974                     l4261:
 10371                           
 10372                           ;TiTTimer.c: 76:         counter++;
 10373  001974  2A34               	incf	_counter^0,f,c
 10374                           
 10375                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10376  001976  0E08               	movlw	8
 10377  001978  1834               	xorwf	_counter^0,w,c
 10378  00197A  E101               	bnz	l4269
 10379  00197C  0CFF               	retlw	255
 10380  00197E                     l4269:
 10381                           
 10382                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10383  00197E  D807               	call	PL12	;call to abstracted procedure
 10384  001980  04DE               	decf	postinc2,w,c
 10385  001982  E0F8               	bz	l4261
 10386                           
 10387                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10388  001984  D804               	call	PL12	;call to abstracted procedure
 10389  001986  0E01               	movlw	1
 10390  001988  6EDF               	movwf	indf2,c
 10391                           
 10392                           ;TiTTimer.c: 80:     return (counter);
 10393  00198A  5034               	movf	_counter^0,w,c
 10394  00198C  0012               	return		;funcret
 10395  00198E                     __end_of_TiGetTimer:
 10396                           	callstack 0
 10397  00198E                     PL12:
 10398                           	callstack 28
 10399  00198E  5034               	movf	_counter^0,w,c
 10400  001990  0D03               	mullw	3
 10401  001992  50F3               	movf	243,w,c
 10402  001994  0F82               	addlw	low (_s_Timers+2)
 10403  001996  6ED9               	movwf	fsr2l,c
 10404  001998  6ADA               	clrf	fsr2h,c
 10405  00199A  0012               	return	
 10406  00199C                     __end_ofPL12:
 10407                           	callstack 0
 10408                           
 10409 ;; *************** function _CtoA *****************
 10410 ;; Defined at:
 10411 ;;		line 22 in file "CtoA.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;		None
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;		None
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  1    wreg      void 
 10418 ;; Registers used:
 10419 ;;		wreg, status,2, status,0
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK0   BANK1
 10425 ;;      Params:         0       0       0
 10426 ;;      Locals:         0       0       0
 10427 ;;      Temps:          0       0       0
 10428 ;;      Totals:         0       0       0
 10429 ;;Total ram usage:        0 bytes
 10430 ;; Hardware stack levels used: 1
 10431 ;; Hardware stack levels required when called: 2
 10432 ;; This function calls:
 10433 ;;		Nothing
 10434 ;; This function is called by:
 10435 ;;		_main
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text90
 10440  001A34                     __ptext90:
 10441                           	callstack 0
 10442  001A34                     _CtoA:
 10443                           	callstack 28
 10444                           
 10445                           ;CtoA.c: 23:     if (convertir != 250) {
 10446                           
 10447                           ;incstack = 0
 10448  001A34  0EFA               	movlw	250
 10449  001A36  185E               	xorwf	_convertir^0,w,c
 10450  001A38  B4D8               	btfsc	status,2,c
 10451  001A3A  0012               	return	
 10452                           
 10453                           ;CtoA.c: 24:         if (convertir != 0){
 10454  001A3C  505E               	movf	_convertir^0,w,c
 10455  001A3E  E009               	bz	l3769
 10456                           
 10457                           ;CtoA.c: 25:             stringScore[1]++;
 10458  001A40  2A74               	incf	(_stringScore+1)^0,f,c
 10459                           
 10460                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 10461  001A42  0E3A               	movlw	58
 10462  001A44  1874               	xorwf	(_stringScore+1)^0,w,c
 10463  001A46  E103               	bnz	l3767
 10464                           
 10465                           ;CtoA.c: 27:                 stringScore[1] = '0';
 10466  001A48  0E30               	movlw	48
 10467  001A4A  6E74               	movwf	(_stringScore+1)^0,c
 10468                           
 10469                           ;CtoA.c: 28:                 stringScore[0]++;
 10470  001A4C  2A73               	incf	_stringScore^0,f,c
 10471  001A4E                     l3767:
 10472                           
 10473                           ;CtoA.c: 30:             convertir--;
 10474  001A4E  065E               	decf	_convertir^0,f,c
 10475                           
 10476                           ;CtoA.c: 31:         } else {
 10477  001A50  0012               	return	
 10478  001A52                     l3769:
 10479                           
 10480                           ;CtoA.c: 32:             convertir = 250;
 10481  001A52  0EFA               	movlw	250
 10482  001A54  6E5E               	movwf	_convertir^0,c
 10483  001A56  0CFA               	retlw	250	;funcret
 10484  001A58                     __end_of_CtoA:
 10485                           	callstack 0
 10486                           
 10487 ;; *************** function _high_rsi *****************
 10488 ;; Defined at:
 10489 ;;		line 21 in file "main.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;		None
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;		None
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1    wreg      void 
 10496 ;; Registers used:
 10497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1
 10503 ;;      Params:         0       0       0
 10504 ;;      Locals:         0       0       0
 10505 ;;      Temps:          4       0       0
 10506 ;;      Totals:         4       0       0
 10507 ;;Total ram usage:        4 bytes
 10508 ;; Hardware stack levels used: 1
 10509 ;; Hardware stack levels required when called: 1
 10510 ;; This function calls:
 10511 ;;		__TiRSITimer
 10512 ;; This function is called by:
 10513 ;;		Interrupt level 2
 10514 ;; This function uses a non-reentrant model
 10515 ;;
 10516                           
 10517                           	psect	intcode
 10518  000008                     __pintcode:
 10519                           	callstack 0
 10520  000008                     _high_rsi:
 10521                           	callstack 24
 10522                           
 10523                           ;incstack = 0
 10524  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10525  00000A  CFD9 F046          	movff	fsr2l,??_high_rsi
 10526  00000E  CFDA F047          	movff	fsr2h,??_high_rsi+1
 10527  000012  CFF3 F048          	movff	prodl,??_high_rsi+2
 10528  000016  CFF4 F049          	movff	prodh,??_high_rsi+3
 10529  00001A  ECEA  F00B         	call	__TiRSITimer	;wreg free
 10530  00001E  C049  FFF4         	movff	??_high_rsi+3,prodh
 10531  000022  C048  FFF3         	movff	??_high_rsi+2,prodl
 10532  000026  C047  FFDA         	movff	??_high_rsi+1,fsr2h
 10533  00002A  C046  FFD9         	movff	??_high_rsi,fsr2l
 10534  00002E  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10535  000030  0011               	retfie		f
 10536  000032                     __end_of_high_rsi:
 10537                           	callstack 0
 10538                           
 10539 ;; *************** function __TiRSITimer *****************
 10540 ;; Defined at:
 10541 ;;		line 37 in file "TiTTimer.c"
 10542 ;; Parameters:    Size  Location     Type
 10543 ;;		None
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;		None
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  1    wreg      void 
 10548 ;; Registers used:
 10549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10550 ;; Tracked objects:
 10551 ;;		On entry : 0/0
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1
 10555 ;;      Params:         0       0       0
 10556 ;;      Locals:         0       0       0
 10557 ;;      Temps:          1       0       0
 10558 ;;      Totals:         1       0       0
 10559 ;;Total ram usage:        1 bytes
 10560 ;; Hardware stack levels used: 1
 10561 ;; This function calls:
 10562 ;;		Nothing
 10563 ;; This function is called by:
 10564 ;;		_high_rsi
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           	psect	text92
 10569  0017D4                     __ptext92:
 10570                           	callstack 0
 10571  0017D4                     __TiRSITimer:
 10572                           	callstack 0
 10573                           
 10574                           ;TiTTimer.c: 39:     TMR0H = 223;
 10575                           
 10576                           ;incstack = 0
 10577                           
 10578                           ;TiTTimer.c: 40:     TMR0L = 148;
 10579  0017D4  D81E               	call	PL54	;call to abstracted procedure
 10580                           
 10581                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 10582  0017D6  94F2               	bcf	242,2,c	;volatile
 10583                           
 10584                           ;TiTTimer.c: 42:     h_Tics++;
 10585  0017D8  4A0B               	infsnz	_h_Tics^0,f,c
 10586  0017DA  2A0C               	incf	(_h_Tics+1)^0,f,c
 10587                           
 10588                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 10589  0017DC  0E48               	movlw	72
 10590  0017DE  5C0B               	subwf	_h_Tics^0,w,c
 10591  0017E0  0EEE               	movlw	238
 10592  0017E2  580C               	subwfb	(_h_Tics+1)^0,w,c
 10593  0017E4  A0D8               	btfss	status,0,c
 10594  0017E6  0012               	return	
 10595                           
 10596                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 10597  0017E8  6A34               	clrf	_counter^0,c
 10598  0017EA                     i2l4465:
 10599  0017EA  0E07               	movlw	7
 10600  0017EC  6434               	cpfsgt	_counter^0,c
 10601  0017EE  D001               	goto	i2l4469
 10602  0017F0  D00D               	goto	i2l372
 10603  0017F2                     i2l4469:
 10604                           
 10605                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 10606  0017F2  ECC7  F00C         	call	PL12	;call to abstracted procedure
 10607  0017F6  04DE               	decf	postinc2,w,c
 10608  0017F8  E107               	bnz	i2l4473
 10609                           
 10610                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 10611  0017FA  5034               	movf	_counter^0,w,c
 10612  0017FC  EC81  F00D         	call	PL26	;call to abstracted procedure
 10613  001800  500B               	movf	_h_Tics^0,w,c
 10614  001802  5EDE               	subwf	postinc2,f,c
 10615  001804  500C               	movf	(_h_Tics+1)^0,w,c
 10616  001806  5ADD               	subwfb	postdec2,f,c
 10617  001808                     i2l4473:
 10618                           
 10619                           ;TiTTimer.c: 50:         }
 10620  001808  2A34               	incf	_counter^0,f,c
 10621  00180A  D7EF               	goto	i2l4465
 10622  00180C                     i2l372:
 10623                           
 10624                           ;TiTTimer.c: 51:         h_Tics=0;
 10625  00180C  6A0B               	clrf	_h_Tics^0,c
 10626  00180E  6A0C               	clrf	(_h_Tics+1)^0,c
 10627  001810  0012               	return		;funcret
 10628  001812                     __end_of__TiRSITimer:
 10629                           	callstack 0
 10630  001812                     PL54:
 10631                           	callstack 28
 10632  001812  0EDF               	movlw	223
 10633  001814  6ED7               	movwf	215,c	;volatile
 10634  001816  0E94               	movlw	148
 10635  001818  6ED6               	movwf	214,c	;volatile
 10636  00181A  0C94               	retlw	148
 10637  00181C                     __end_ofPL54:
 10638                           	callstack 0
 10639                           
 10640                           	psect	rparam
 10641  0000                     
 10642                           	psect	temp
 10643  000079                     btemp:
 10644                           	callstack 0
 10645  000079                     	ds	1
 10646  0000                     int$flags	set	btemp
 10647  0000                     wtemp8	set	btemp+1
 10648  0000                     ttemp5	set	btemp+1
 10649  0000                     ttemp6	set	btemp+4
 10650  0000                     ttemp7	set	btemp+8
 10651                           
 10652                           	psect	idloc
 10653                           
 10654                           ;Config register IDLOC0 @ 0x200000
 10655                           ;	unspecified, using default values
 10656  200000                     	org	2097152
 10657  200000  FF                 	db	255
 10658                           
 10659                           ;Config register IDLOC1 @ 0x200001
 10660                           ;	unspecified, using default values
 10661  200001                     	org	2097153
 10662  200001  FF                 	db	255
 10663                           
 10664                           ;Config register IDLOC2 @ 0x200002
 10665                           ;	unspecified, using default values
 10666  200002                     	org	2097154
 10667  200002  FF                 	db	255
 10668                           
 10669                           ;Config register IDLOC3 @ 0x200003
 10670                           ;	unspecified, using default values
 10671  200003                     	org	2097155
 10672  200003  FF                 	db	255
 10673                           
 10674                           ;Config register IDLOC4 @ 0x200004
 10675                           ;	unspecified, using default values
 10676  200004                     	org	2097156
 10677  200004  FF                 	db	255
 10678                           
 10679                           ;Config register IDLOC5 @ 0x200005
 10680                           ;	unspecified, using default values
 10681  200005                     	org	2097157
 10682  200005  FF                 	db	255
 10683                           
 10684                           ;Config register IDLOC6 @ 0x200006
 10685                           ;	unspecified, using default values
 10686  200006                     	org	2097158
 10687  200006  FF                 	db	255
 10688                           
 10689                           ;Config register IDLOC7 @ 0x200007
 10690                           ;	unspecified, using default values
 10691  200007                     	org	2097159
 10692  200007  FF                 	db	255
 10693                           
 10694                           	psect	config
 10695                           
 10696                           ; Padding undefined space
 10697  300000                     	org	3145728
 10698  300000  FF                 	db	255
 10699                           
 10700                           ;Config register CONFIG1H @ 0x300001
 10701                           ;	Oscillator
 10702                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 10703                           ;	Fail-Safe Clock Monitor Enable bit
 10704                           ;	FCMEN = 0x0, unprogrammed default
 10705                           ;	Internal/External Oscillator Switchover bit
 10706                           ;	IESO = 0x0, unprogrammed default
 10707  300001                     	org	3145729
 10708  300001  06                 	db	6
 10709                           
 10710                           ;Config register CONFIG2L @ 0x300002
 10711                           ;	unspecified, using default values
 10712                           ;	Power-up Timer Enable bit
 10713                           ;	PWRT = 0x1, unprogrammed default
 10714                           ;	Brown-out Reset Enable bits
 10715                           ;	BOR = 0x3, unprogrammed default
 10716                           ;	Brown-out Reset Voltage bits
 10717                           ;	BORV = 0x3, unprogrammed default
 10718  300002                     	org	3145730
 10719  300002  1F                 	db	31
 10720                           
 10721                           ;Config register CONFIG2H @ 0x300003
 10722                           ;	Watchdog Timer Enable bit
 10723                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10724                           ;	Watchdog Timer Postscale Select bits
 10725                           ;	WDTPS = 0xF, unprogrammed default
 10726  300003                     	org	3145731
 10727  300003  1E                 	db	30
 10728                           
 10729                           ; Padding undefined space
 10730  300004                     	org	3145732
 10731  300004  FF                 	db	255
 10732                           
 10733                           ;Config register CONFIG3H @ 0x300005
 10734                           ;	CCP2 MUX bit
 10735                           ;	CCP2MX = 0x1, unprogrammed default
 10736                           ;	PORTB A/D Enable bit
 10737                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10738                           ;	Low-Power Timer1 Oscillator Enable bit
 10739                           ;	LPT1OSC = 0x0, unprogrammed default
 10740                           ;	MCLR Pin Enable bit
 10741                           ;	MCLRE = 0x1, unprogrammed default
 10742  300005                     	org	3145733
 10743  300005  81                 	db	129
 10744                           
 10745                           ;Config register CONFIG4L @ 0x300006
 10746                           ;	Stack Full/Underflow Reset Enable bit
 10747                           ;	STVREN = 0x1, unprogrammed default
 10748                           ;	Single-Supply ICSP Enable bit
 10749                           ;	LVP = OFF, Single-Supply ICSP disabled
 10750                           ;	Boot Block Size Select bits
 10751                           ;	BBSIZ = 0x0, unprogrammed default
 10752                           ;	Extended Instruction Set Enable bit
 10753                           ;	XINST = 0x0, unprogrammed default
 10754                           ;	Background Debugger Enable bit
 10755                           ;	DEBUG = 0x1, unprogrammed default
 10756  300006                     	org	3145734
 10757  300006  81                 	db	129
 10758                           
 10759                           ; Padding undefined space
 10760  300007                     	org	3145735
 10761  300007  FF                 	db	255
 10762                           
 10763                           ;Config register CONFIG5L @ 0x300008
 10764                           ;	unspecified, using default values
 10765                           ;	Code Protection bit
 10766                           ;	CP0 = 0x1, unprogrammed default
 10767                           ;	Code Protection bit
 10768                           ;	CP1 = 0x1, unprogrammed default
 10769  300008                     	org	3145736
 10770  300008  03                 	db	3
 10771                           
 10772                           ;Config register CONFIG5H @ 0x300009
 10773                           ;	unspecified, using default values
 10774                           ;	Boot Block Code Protection bitProtect Boot
 10775                           ;	CPB = 0x1, unprogrammed default
 10776                           ;	Data EEPROM Code Protection bit
 10777                           ;	CPD = 0x1, unprogrammed default
 10778  300009                     	org	3145737
 10779  300009  C0                 	db	192
 10780                           
 10781                           ;Config register CONFIG6L @ 0x30000A
 10782                           ;	unspecified, using default values
 10783                           ;	Write Protection bit
 10784                           ;	WRT0 = 0x1, unprogrammed default
 10785                           ;	Write Protection bit
 10786                           ;	WRT1 = 0x1, unprogrammed default
 10787  30000A                     	org	3145738
 10788  30000A  03                 	db	3
 10789                           
 10790                           ;Config register CONFIG6H @ 0x30000B
 10791                           ;	unspecified, using default values
 10792                           ;	Configuration Register Write Protection bit
 10793                           ;	WRTC = 0x1, unprogrammed default
 10794                           ;	Boot Block Write Protection bit
 10795                           ;	WRTB = 0x1, unprogrammed default
 10796                           ;	Data EEPROM Write Protection bit
 10797                           ;	WRTD = 0x1, unprogrammed default
 10798  30000B                     	org	3145739
 10799  30000B  E0                 	db	224
 10800                           
 10801                           ;Config register CONFIG7L @ 0x30000C
 10802                           ;	unspecified, using default values
 10803                           ;	Table Read Protection bit
 10804                           ;	EBTR0 = 0x1, unprogrammed default
 10805                           ;	Table Read Protection bit
 10806                           ;	EBTR1 = 0x1, unprogrammed default
 10807  30000C                     	org	3145740
 10808  30000C  03                 	db	3
 10809                           
 10810                           ;Config register CONFIG7H @ 0x30000D
 10811                           ;	unspecified, using default values
 10812                           ;	Boot Block Table Read Protection bit
 10813                           ;	EBTRB = 0x1, unprogrammed default
 10814  30000D                     	org	3145741
 10815  30000D  40                 	db	64
 10816                           tosu	equ	0xFFF
 10817                           tosh	equ	0xFFE
 10818                           tosl	equ	0xFFD
 10819                           stkptr	equ	0xFFC
 10820                           pclatu	equ	0xFFB
 10821                           pclath	equ	0xFFA
 10822                           pcl	equ	0xFF9
 10823                           tblptru	equ	0xFF8
 10824                           tblptrh	equ	0xFF7
 10825                           tblptrl	equ	0xFF6
 10826                           tablat	equ	0xFF5
 10827                           prodh	equ	0xFF4
 10828                           prodl	equ	0xFF3
 10829                           indf0	equ	0xFEF
 10830                           postinc0	equ	0xFEE
 10831                           postdec0	equ	0xFED
 10832                           preinc0	equ	0xFEC
 10833                           plusw0	equ	0xFEB
 10834                           fsr0h	equ	0xFEA
 10835                           fsr0l	equ	0xFE9
 10836                           wreg	equ	0xFE8
 10837                           indf1	equ	0xFE7
 10838                           postinc1	equ	0xFE6
 10839                           postdec1	equ	0xFE5
 10840                           preinc1	equ	0xFE4
 10841                           plusw1	equ	0xFE3
 10842                           fsr1h	equ	0xFE2
 10843                           fsr1l	equ	0xFE1
 10844                           bsr	equ	0xFE0
 10845                           indf2	equ	0xFDF
 10846                           postinc2	equ	0xFDE
 10847                           postdec2	equ	0xFDD
 10848                           preinc2	equ	0xFDC
 10849                           plusw2	equ	0xFDB
 10850                           fsr2h	equ	0xFDA
 10851                           fsr2l	equ	0xFD9
 10852                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    186
    Data        24
    BSS         304
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     25     120
    BANK0           128      0      52
    BANK1           256      0     184

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(CODE[11]), loginText(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(CODE[11]), loginText(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->_llegirCharEEPROM
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39343
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9851
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   10738
                                             20 COMRAM     5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     612
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     348
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                1     1      0     156
                                              6 COMRAM     1     1      0
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             4     4      0      97
                                             12 COMRAM     4     4      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               4     4      0      82
                                             12 COMRAM     4     4      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1190
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      34       4       40.6%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     19      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     164       7        0.0%
DATA                 0      0     164       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 07 13:55:00 2022

               TiResetTics@Handle 004A                  _loginNOTRegister 03BF  
                               _i 002A                                 _j 0029  
                              PL2 0A00                                PL4 0A16  
                              PL6 0A2A                                PL8 11A8  
                              l57 194A                  UgetUserName@quin 004C  
       ??_UcheckExistsNotFinished 004A         __size_of_llegirCharEEPROM 0010  
                             PL10 1066                               PL20 1490  
                             PL12 198E                               PL30 18F0  
                             PL22 0CB0                               PL14 0C7C  
                             PL40 0788                               PL32 0782  
                             PL24 0E9C                               PL16 0C98  
                             PL50 1088                               PL42 1780  
                             PL34 1772                               PL26 1B02  
                             PL18 0CA4                               PL60 136A  
                             PL52 1674                               PL44 1846  
                             PL36 0A32                               PL28 0778  
                             PL70 17CC                               PL62 16DA  
                             PL54 1812                               PL46 0EA8  
                             PL38 1590                               PL80 0CC2  
                             PL72 079C                               PL64 0A40  
                             PL56 159E                               PL48 0792  
                             PL74 07A2                               PL66 1850  
                             PL58 1A70                               PL76 07A8  
                             PL68 18FE                               PL78 07B0  
          __end_of_compareStrings 1846                               l511 0090  
                             l541 01E2                               l198 15E6  
                             l607 0472                               l538 01C6  
                             l539 01D6                               l724 19E0  
                             l761 0A6A                               l763 0A74  
                             l765 0AA2                               l790 0B94  
                             l766 0A98                               l758 0A4C  
                             l846 1418                               l927 0808  
                             l759 0A5E                               l939 086C  
                             l957 094C                               l959 0972  
                             l996 11E2                               l997 11FC  
                             l999 121E                               u230 153E  
                             u250 1554                               u308 1582  
                             u270 1568                               u248 1540  
                             u290 1580                               u268 1556  
                             u288 156A                               _pos 002F  
                             _tmp 0033                  ??_CantaPartBaixa 004A  
                             prod 000FF3                               wreg 000FE8  
     __size_of_calculateShowUsers 0004                       _ultimaTecla 006A  
              __size_of_GLCDMotor 0248                              l1004 12A0  
                            l1005 1238                              l1006 1252  
                            l1008 1274                              l1148 138A  
                            l2141 1C12                              l1270 0E06  
                            l1262 0D6E                              l2215 1BB2  
                            l2311 1BA6                              l1255 0D46  
                            l2171 1BE2                              l2331 1A1A  
                            l3125 1212                              l3117 11F8  
                            l2237 1BBE                              l2343 1A2A  
                            l2337 1A22                              l5001 0D88  
                            l3163 1268                              l3155 124E  
                            l3139 1234                              l5011 0DB8  
                            l5003 0D8E                              l4301 17B2  
                            l2365 1B9A                              l2349 1A32  
                            l5021 0DEE                              l4223 1A82  
                            l4303 17B8                              l5031 0E18  
                            l3177 128A                              l5105 1516  
                            l4219 1892                              l3187 128E  
                            l5211 0148                              l5123 004E  
                            l5051 0E5C                              l4261 1974  
                            l4229 194E                              l4309 17C6  
                            l4501 0EB4                              l5221 016C  
                            l5213 014E                              l5141 0084  
                            l5133 0070                              l5117 0038  
                            l5109 151A                              l5223 0172  
                            l5039 0E3A                       _puntuacions 0098  
                            l4409 12D0                              l4601 0FCE  
                            l5161 00CA                              l5153 00AA  
                            l5081 14E2                              l5307 0228  
                            l5227 017A                              l5171 00E8  
                            l5139 007E                              l5075 14D6  
                            l5059 14AA                              l4269 197E  
                            l4197 186C                              l4613 0FF0  
                            l4533 0F12                              l4525 0EF4  
                            l4509 0EC8                              l5413 035C  
                            l5333 0274                              l5181 010C  
                            l4711 07FE                              l4703 07EA  
                            l4543 0F38                              l5511 0428  
                            l5431 0380                              l5319 024E  
                            l5239 018A                              l5087 14EE  
                            l4801 08EC                              l4633 101E  
                            l4545 0F3C                              l4385 1832  
                            l5505 041A                              l5257 01B2  
                            l5185 0114                              l5169 00E2  
                            l5097 1508                              l4731 083E  
                            l4627 1010                              l4619 0FFA  
                            l4563 0F60                              l4555 0F4A  
                            l4379 181E                              l5347 029A  
                            l5291 020A                              l5267 01D2  
                            l5179 0106                              l4821 092A  
                            l4717 0814                              l4637 1026  
                            l4581 0F98                              l4485 19B2  
                            l5605 05BA                              l5381 02F0  
                            l5365 02C2                              l5349 02A0  
                            l5197 0124                              l4901 13B0  
                            l3767 1A4E                              l4807 08FC  
                            l5631 063A                              l5607 05C0  
                            l5551 0504                              l5535 048C  
                            l5527 0474                              l5519 044C  
                            l5463 03C0                              l5447 039E  
                            l5279 01F2                              l5711 1476  
                            l4911 13D8                              l3769 1A52  
                            l4745 085C                              l4577 0F82  
                            l4569 0F72                              l4657 1036  
                            l4489 19BA                              l5801 0B54  
                            l5617 0604                              l5561 051A  
                            l5545 04E4                              l5529 047A  
                            l5393 0328                              l4851 097E  
                            l4843 096C                              l4835 0954  
                            l4739 084A                              l4579 0F94  
                            l5811 0B66                              l5571 0532  
                            l5563 0520                              l5547 04EA  
                            l5539 04A4                              l5475 03D2  
                            l5459 03BC                              l5379 02EA  
                            l5299 021A                              l4861 099A  
                            l4829 0940                              l4781 08A4  
                            l4597 0FCA                              l4589 0FB2  
                            l4669 189E                              l5821 0B92  
                            l5813 0B6A                              l5741 0A9C  
                            l5645 066C                              l5629 0634  
                            l5581 054A                              l5573 0538  
                            l5557 0510                              l5389 0310  
                            l4917 13EE                              l4925 13FC  
                            l4933 0CCC                              l4855 0986  
                            l4791 08C6                              l4775 0894  
                            l4687 07BA                              l4871 09B4  
                            l5903 10E6                              l5807 0B5E  
                            l5655 0680                              l5639 0648  
                            l5591 057E                              l5487 03F2  
                            l5663 068C                              l4951 0CFC  
                            l4943 0CE8                              l4865 09A8  
                            l4785 08B0                              l4697 07DC  
                            l5913 10FC                              l5905 10EC  
                            l5841 0BBE                              l5833 0BAC  
                            l5761 0AE6                              l5753 0AD4  
                            l5745 0AA8                              l5729 0A64  
                            l5585 0552                              l5497 040C  
                            l5851 0BDA                              l5747 0AAE  
                            l5691 1446                              l4963 0D18  
                            l5941 1140                              l5933 112A  
                            l5925 1118                              l5853 0BE0  
                            l5829 0B9E                              l5773 0B06  
                            l5757 0AD8                              l5685 143A  
                            l4893 139A                              l4973 0D2E  
                            l4965 0D1E                              l5927 111C  
                            l5919 110A                              l5847 0BD2  
                            l5791 0B3E                              l5679 142E  
                            l4895 139E                              l4879 1376  
                            l4959 0D0E                              l5961 1174  
                            l5953 1162                              l5937 1136  
                            l5873 0C28                              l5865 0C14  
                            l5777 0B10                              l5697 145A  
                            l5947 1154                              l5779 0B16  
                            l5699 145E                              l5957 116A  
                            l5893 10CA                              l5877 0C30  
                            l5885 0C44                              l5967 117A  
                            l5897 10D6                              l5899 10DA  
                            STR_1 1FF8                              STR_2 1FF1  
                            STR_3 1FD8                              STR_4 1FBF  
                            STR_5 1FAF                              STR_6 1FE9  
                            STR_7 1FCC                              STR_8 1FE1  
                            _LATD 000F8C                              u4030 0F6C  
                            u3510 16A0                              u4150 1000  
                            u4070 0FA4                              u4320 0846  
                            u4160 1016                              u3530 16B4  
                            u3610 164E                              u4250 07E6  
                            u5210 0198                              u3508 168C  
                            u6100 0A6E                              u5140 0132  
                            u3550 16CC                              u3630 1666  
                            u4350 0864                              u3528 16A2  
                            u3608 163C                              u6120 0A94  
                            u3490 168A                              u3570 1624  
                            u3810 174E                              u3548 16B6  
                            u3628 1650                              u3820 1764  
                            u5260 01DC                              u3590 163A  
                            u6310 0BCC                              u3568 16CE  
                            u3648 1668                              u5280 01EA  
                            u4800 0D4E                              u3817 174C  
                            u4810 0D52                              u3827 1762  
                            u3588 1626                              u3780 1836  
                            u3790 1360                              u3950 0F08  
                            u5640 03DE                              u4840 0DCE  
                            u5650 03E4                              u6380 109C  
                            u5900 05D2                              u6388 109E  
                            u5790 050C                              u5880 05B8  
                            _CtoA 1A34                   ??_SsetNovaTecla 004A  
          __end_of_SIOcheckKrebut 1B9E                              _cap1 03B7  
                            _Rows 0040                              _cap2 03B6  
                            _main 15A8                              _hora 006D  
                            _menu 0036                              _nota 0026  
           getArrayShowUsers@quin 004C                   __end_of_HJugant 1CB6  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 0079                   __end_of_JJuguem 1C50  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 1A70                              start 0032  
                 __end_of_CantaIR 1AF2                      ?_initAltaveu 0045  
                   LcInit@columns 0055                      ___param_bank 000000  
                     _stringScore 0073                  __end_of_GLCDInit 1CB0  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 1CD4  
                           ?_CtoA 0045                __size_of_CToAReset 0008  
                     Espera@Timer 0054                             ?_main 0045  
                           ?_menu 0045                             _EEADR 000FA9  
                   ??_TiInitTimer 004A                             _T0CON 000FD5  
                 ?_compareStrings 004A                             i2l372 180C  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 173C  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 0045                             _TXREG 000FAD  
                           _SMSon 1CB6                             _TXSTA 000FAC  
                     _MNovaLletra 1C90                             _Minit 1C98  
                __end_of_HGetTime 1CD4                             _Sinit 1C88  
                           _Timer 003D                             _Uinit 1898  
                 __end_of_initSIO 1C60                             _s_ptr 000D  
                           _score 0010                             _nou_s 03C1  
           __end_of_JoystickMotor 12B6                   _HActualitzaHora 1908  
     __size_of_escriureCharEEPROM 0026                    __pbitbssCOMRAM 03B0  
                           tablat 000FF5                       _LcNewString 1BFE  
                   ??_TiResetTics 004A                   ?_SIOcheckKrebut 0045  
              _UshowUsersCalculat 1BB6                             ttemp5 007A  
                           ttemp6 007D                             ttemp7 0081  
                           status 000FD8                  ?_checkHoraAcabat 0045  
                           wtemp8 007A     __size_of_UcheckExistsGetError 0004  
              __size_of_HNouSegon 000C                  __end_of_LcGotoXY 1970  
            CToAConverteix@numero 004A                  __end_of_LcLliure 1C16  
                   ??__TiRSITimer 0045                  __end_of_LcScroll 1CC8  
                      _TiGetTimer 1970           EscriuPrimeraOrdre@ordre 004B  
                    __end_of_CtoA 1A58                  __end_of_JendGame 1D00  
                     ?_SIOendGame 0045                   __initialization 16E4  
             ?_UshowUsersCalculat 0045                __size_of_CantaData 0020  
                    __end_of_main 1618            __end_of_HClearNouSegon 1CD8  
                    __end_of_menu 0778           ?_SIOHaAcabatPuntuacions 0045  
           __size_of_MNouJoystick 0008                      ?_playAltaveu 0045  
               __end_of_GLCDMotor 0A00                  __end_of_TeTeclat 11A8  
                   _indexNextUser 002C                            ??_CtoA 004A  
                          ??_main 005E                            ??_menu 0059  
              __size_of_LcPutChar 0040                     __activetblptr 000002  
                   _ultimaTeclaAD 0018            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 001A                  GLCDMotor@length2 0019  
                      _JnovaTecla 1C38                  __end_of_UgetTop5 1BCE  
                          ?_LcLCD 0045                            ?_SMSon 0045  
                    ?_CToAobtenir 004A                            ?_Minit 0045  
            ??_UshowUsersCalculat 004A                            ?_Sinit 0045  
                          ?_Uinit 0045                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 19C4  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 004A                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 004A                __size_of_SiFerMenu 0004  
                       ??_LcClear 0058                         ??_CantaIR 004C  
                          i2l4473 1808                            i2l4465 17EA  
                          i2l4469 17F2                    LcGotoXY@Fisics 0053  
                  LcGotoXY@Column 0057                     ??_WaitForBusy 0051  
              __size_of_TiGetTics 0026                            _SPBRGH 000FB0  
                  _sumaPulsacions 003C                 __end_of_CToAReset 1C58  
                          _SMSoff 1CBC                SIONovaDireccio@num 004A  
                          _LcInit 12B6                      _MNouJoystick 1CA0  
                  _UgetNumUsuaris 1CE0                            _SMotor 0EB2  
             escriureCharEEPROM@c 004B                            _TeInit 1C80  
                          _Espera 1A7A                      _LcGotoXY$336 0055  
                          _Krebut 03B0    __end_of_SIOHaAcabatPuntuacions 1CF8  
                          _RowAct 003F               __end_of_TiResetTics 1B02  
                          Uinit@i 004B                  __end_of_high_rsi 0032  
                          _h_Tics 000B                   ?_HClearNouSegon 0045  
                   ?_CToAHaAcabat 0045                  __end_of_initHora 1C68  
             __end_of__TiRSITimer 1812                  __end_of_menuList 1F90  
                          clear_0 170A                            clear_1 1716  
                          clear_2 1728                            _jugant 03B5  
                          _segons 0015                        _UenviaChar 1B72  
                          isa$std 000001                  _llegirCharEEPROM 1B82  
              __size_of_UgetScore 000C                        UenviaPas@c 004B  
     __size_of_EscriuPrimeraOrdre 0064                 __end_of_HNouSegon 1BAA  
                       ??_initSIO 004B                      __pdataCOMRAM 005E  
          __size_of_CantaPartAlta 005C                  __end_of_motorSIO 0E9C  
              __size_of_UenviaPas 0010           __end_of_HActualitzaHora 193C  
               ??_SIONovaDireccio 004A                  __end_of_motorJoc 1416  
                    __mediumconst 1EF4                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                ??_CToAConverteix 004A                __size_of_UnewScore 000A  
             __size_of_SIOendGame 0004                 __end_of_CantaData 18F0  
                    TeTeclat@cols 0036                         ?_GLCDInit 0045  
                   ?_UcheckExists 0045                        __accesstop 0080  
         __end_of__initialization 172E            __end_of_UgetNumUsuaris 1CE4  
               __end_of_LcPutChar 17CC                     _JnovaDireccio 1C40  
                JnovaDireccio@dir 004A                     ___rparam_used 000001  
                   __end_of_LcLCD 1772                       ?_TiGetTimer 0045  
                   __end_of_SMSon 1CBC                 SIONovaTecla@tecla 004A  
                  __pcstackCOMRAM 0045                     __end_of_Minit 1CA0  
             __end_of_WaitForBusy 1898                     __end_of_Sinit 1C90  
                   __end_of_Uinit 18D0                 __end_of_NoFerMenu 1CFC  
                       ?_HGetTime 004A                    ??_CToAHaAcabat 004A  
            __size_of_initAltaveu 0008                 __end_of_URegister 1CF0  
               __end_of_HnoJugant 1CD0                 __end_of_SiFerMenu 1CF4  
                      __end_ofPL2 0A16                        __end_ofPL4 0A2A  
                      __end_ofPL6 0A32                        __end_ofPL8 11E0  
               __end_of_TiGetTics 1A10                       _TiInitTimer 199C  
                     ?_JnovaTecla 0045                           ??_LcLCD 0059  
                         ??_SMSon 004A                         ?_LcGotoXY 0052  
                       ?_LcLliure 0045                           ??_Minit 004B  
                       ?_LcScroll 0045                           ??_Sinit 004B  
                 JnovaTecla@tecla 004A                           ??_Uinit 004B  
            __size_of_init_eusart 0016                         ?_JendGame 0045  
                  ??_UcheckExists 004A               MNouJoystick@posicio 004A  
                      ??_GLCDInit 004B           __size_of_GLCDMostraMenu 000C  
                      __pbssBANK0 0080                        __pbssBANK1 0100  
                       ?_TeTeclat 0045                       _TiResetTics 1AF2  
                 ?_UgetNumUsuaris 0045                    ?_JnovaDireccio 0045  
                   ??_UmotorUsers 004F                 __end_of_UgetScore 1BDA  
                   ?_JoystickInit 0045                           ?_SMSoff 0045  
                         ?_LcInit 0055                     _CantaPartAlta 167E  
                         ?_SMotor 0045                           ?_TeInit 0045  
                         ?_Espera 0051                 __end_of_UenviaPas 1B72  
                     __TiRSITimer 17D4               _indexNextUserStruct 002B  
                       ?_UgetTop5 0045                 __end_of_UnewScore 1C20  
                      ??_HGetTime 004C                     ?_UgetUserName 004A  
                ??_compareStrings 004D                           _BAUDCON 000FB8  
                     ?_UenviaChar 004A              __size_of_playAltaveu 0004  
              __size_of_motorHora 0084            __size_of_MsetNovaTecla 0008  
      __end_of_calculateShowUsers 1CE0                           LcInit@i 0057  
                ?_HActualitzaHora 004A                        ??_LcGotoXY 0053  
                    ?_MNovaLletra 0045                        ??_LcLliure 004A  
                      ??_LcScroll 004D                  ??_SIOcheckKrebut 004A  
             __size_of_TiGetTimer 001E              __size_of_CToAobtenir 0004  
                      ??_JendGame 004A                           _HJugant 1CB0  
                       ?_high_rsi 0045                           _JJuguem 1C48  
                         _LcClear 1A58                           _CantaIR 1AD6  
                    ?_LcNewString 004D                    ??_JoystickInit 004A  
                       ?_initHora 0045                        ??_TeTeclat 0051  
                     _WaitForBusy 185A                    ?_CantaPartAlta 0045  
           __end_of_SsetNovaTecla 1C78                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00B4                           __Hparam 0000  
                 __size_of_SMotor 01B4               __size_of_JnovaTecla 0008  
                 __size_of_TeInit 0008                   __size_of_Espera 0022  
                         __Lparam 0000                        ??_UgetTop5 004A  
                    ??_SIOendGame 004A                         ?_motorSIO 0045  
                       ?_motorJoc 0045                    ??_UgetUserName 004C  
               _getArrayShowUsers 1ABA               __end_of_UmotorUsers 0C7C  
        ?_UcheckExistsNotFinished 0045                 __end_of_arrayZero 1EFF  
                   ?_motorAltaveu 0045                ?_getArrayShowUsers 004A  
                         __pcinit 16E4      __end_of_UcheckExistsGetError 1CE8  
                         _ferMenu 03B9                        _init_ports 1A9C  
                         __ramtop 0200                           __ptext0 15A8  
                         __ptext1 0CCA                           __ptext2 1C16  
                         __ptext3 1374                           __ptext4 1A10  
                         __ptext5 1CC8                           __ptext6 1B92  
                         __ptext7 1C20                           __ptext8 1C28  
                         __ptext9 1C30                         _T0CONbits 000FD5  
                       _GLCDMotor 07B8                         CantaIR@IR 004C  
                         _initSIO 1C58                           _counter 0034  
                         _horaTmp 0041            conversorJoystick@direc 004A  
             ??_getArrayShowUsers 004C                       UenviaChar@c 004B  
      __end_of_escriureCharEEPROM 19EA                 __end_of_loginText 1FAF  
                LcNewString@new_s 004D                   WaitForBusy@Busy 0051  
                    _do_showUsers 03BC                           _userPtr 0009  
               GLCDMostraMenu@num 004A                __end_of_SIOendGame 1CCC  
                      ??_high_rsi 0046              __end_of_CToAHaAcabat 1D08  
            end_of_initialization 172E                           _usuaris 0100  
                   UgetScore@quin 004A                   ??_JnovaDireccio 004A  
                      ??_initHora 004B          __end_of_llegirCharEEPROM 1B92  
         __size_of_CantaPartBaixa 005C                     __Lmediumconst 1EF4  
                 TiGetTics@Handle 004E                     _MsetNovaTecla 1C78  
             __size_of_UenviaChar 0010                 _conversorJoystick 1A10  
               __end_of_motorHora 152C                  ??_HClearNouSegon 004A  
                      _novaLletra 0068         __end_of_getArrayShowUsers 1AD6  
              ?_conversorJoystick 0045                   _usuariActualSIO 0061  
                      ??_motorSIO 0059                         _CToAReset 1C50  
                      ??_motorJoc 0058                   TiGetTics@actual 004F  
                   ?_SIONovaTecla 0045                        GLCDMotor@j 001F  
                         postdec1 000FE5                           postdec2 000FDD  
                 _SIONovaDireccio 1C30                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                  ??_motorAltaveu 0051          __size_of_checkHoraAcabat 000C  
                      _numUsuaris 002D              __end_of_UcheckExists 1CEC  
                   TeTeclat@files 0035               ??_conversorJoystick 004A  
              SIOStartGame@usuari 004A            __size_of_JoystickMotor 00D6  
                   TeTeclat@state 0037                         _PORTCbits 000F82  
                       _PORTDbits 000F83                        ?_GLCDMotor 0045  
                   ?_SIOStartGame 0045                         _TRISCbits 000F94  
                       _TRISDbits 000F95       __size_of_UshowUsersCalculat 000C  
                       _HNouSegon 1B9E                 UnewScore@scoretmp 004A  
                  _GLCDMostraMenu 1BE6         __end_of_conversorJoystick 1A34  
                 ??_CantaPartAlta 004A                    ?_MsetNovaTecla 0045  
                       _CantaData 18D0                 __size_of_GLCDInit 0008  
                     _UmotorUsers 0A4A                         _TXSTAbits 000FAC  
 __end_of_UcheckExistsNotFinished 1BE6                    __end_of_SMSoff 1CC2  
                    ??_TiGetTimer 004A                    __end_of_LcInit 136A  
                  ??_SIONovaTecla 004A                        ?_CToAReset 0045  
                  __end_of_SMotor 1066              __end_of_teclaPremuda 1F9C  
                       _LcPutChar 178C                    __end_of_TeInit 1C88  
               motorAltaveu@state 0023                    __end_of_Espera 1A9C  
                  GLCDMotor@state 0020        __end_of_EscriuPrimeraOrdre 1590  
               __size_of_HGetTime 0004                     __pidataCOMRAM 1B0E  
                     ?_init_ports 0045                         _NoFerMenu 1CF8  
                       _ColumnAct 003E              __end_of_JoystickInit 1B62  
                  ??_SIOStartGame 004A                         _URegister 1CEC  
                       _HnoJugant 1CCC                      ?_TiInitTimer 0045  
            __end_of_registerText 1FA7                      ??_JnovaTecla 004A  
                       _SiFerMenu 1CF0                       __end_ofPL10 1088  
                     __end_ofPL20 14A8                       __end_ofPL12 199C  
                     __end_ofPL30 18FE                       __end_ofPL22 0CC2  
                     __end_ofPL14 0C98                       __end_ofPL40 0792  
                     __end_ofPL32 0788                       __end_ofPL24 0EA8  
                     __end_ofPL16 0CA4                       __end_ofPL50 1092  
                     __end_ofPL42 178C                       __end_ofPL34 1780  
                     __end_ofPL26 1B0E                       __end_ofPL18 0CB0  
                     __end_ofPL60 1374                       __end_ofPL52 167E  
                     __end_ofPL44 1850                       __end_ofPL36 0A40  
                     __end_ofPL28 0782                       __end_ofPL70 17D4  
                     __end_ofPL62 16E4                       __end_ofPL54 181C  
                     __end_ofPL46 0EB2                       __end_ofPL38 159E  
                     __end_ofPL80 0CCA                       __end_ofPL72 07A2  
                     __end_ofPL64 0A4A                       __end_ofPL56 15A8  
                     __end_ofPL48 079C                       __end_ofPL74 07A8  
                     __end_ofPL66 185A                       __end_ofPL58 1A7A  
                     __end_ofPL76 07B0                       __end_ofPL68 1908  
                     __end_ofPL78 07B8               start_initialization 16E4  
                       _TiGetTics 19EA            __end_of_GLCDMostraMenu 1BF2  
                      ?_HNouSegon 0045                  ??_UgetNumUsuaris 004A  
                UmotorUsers@state 0027                 __size_of_LcGotoXY 0034  
            __end_of_UgetUserName 1B50                __end_of_TiGetTimer 198E  
                   JJuguem@usuari 004A              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                 __size_of_LcScroll 0006  
                   _JoystickMotor 11E0                 __size_of_JendGame 0004  
                    ?_TiResetTics 0045                        ?_CantaData 0045  
            _UcheckExistsGetError 1CE4           __end_of_SIONovaDireccio 1C38  
            __size_of_LcNewString 000C                          ??_SMSoff 004A  
                        ??_LcInit 0056                         _NovaTecla 0069  
               __size_of_TeTeclat 0116                          ??_SMotor 0051  
      __size_of_getArrayShowUsers 001C                          ??_TeInit 004B  
                    ?__TiRSITimer 0045                     ??_initAltaveu 004B  
                        ??_Espera 0053                         _UgetScore 1BCE  
              __end_of_JnovaTecla 1C40                        ?_LcPutChar 0045  
                       _UenviaPas 1B62                 __size_of_UgetTop5 000C  
                  motorHora@state 0014                      _menuDaltGLCD 0021  
                    ??_UenviaChar 004B                         _UnewScore 1C16  
                      ?_NoFerMenu 0045                       ??_GLCDMotor 0059  
                      ?_URegister 0045                        ?_HnoJugant 0045  
               ??_checkHoraAcabat 004A                     ??_init_eusart 004A  
                      ?_SiFerMenu 0045                       __pbssCOMRAM 0001  
           __size_of_CToAHaAcabat 0004                        ?_TiGetTics 004A  
                 ?_GLCDMostraMenu 0045                          ?_HJugant 0045  
                  ?_JoystickMotor 0045                   ??_MsetNovaTecla 004A  
            __end_of_motorAltaveu 1490                          ?_JJuguem 0045  
                        ?_LcClear 0045                          ?_CantaIR 0045  
      __size_of_conversorJoystick 0024                _calculateShowUsers 1CDC  
                  _CantaPartBaixa 1618          ??_SIOHaAcabatPuntuacions 004A  
           ?_UcheckExistsGetError 0045                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 0045               __size_of_init_ports 001E  
              MsetNovaTecla@tecla 004A                SsetNovaTecla@tecla 004A  
              __end_of_UenviaChar 1B82           __size_of_CToAConverteix 000C  
               __size_of_initHora 0008             __size_of_UcheckExists 0004  
             ?_calculateShowUsers 0045                        ?_UgetScore 0045  
                     ??_CToAReset 004A                         __pintcode 0008  
                   __pmediumconst 1EF4                     ??_playAltaveu 004A  
                      ?_UenviaPas 004A                 __size_of_motorSIO 01D2  
               __size_of_motorJoc 00A2                   CantaPartBaixa@c 004B  
                    _CToAHaAcabat 1D04               __end_of_initAltaveu 1C70  
                      ?_UnewScore 0045                         _arrayZero 1EFD  
                        ?_initSIO 0045                         _convertir 005E  
                   ??_CToAobtenir 004C                    __size_of_LcLCD 0036  
                  __size_of_SMSon 0006              ??_calculateShowUsers 004A  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 1C30                    __size_of_Sinit 0008  
                     ??_HNouSegon 004A                    __size_of_Uinit 0038  
                     _direccioSIO 0060                       _direccioJoc 0013  
          __end_of_CantaPartBaixa 1674                JoystickMotor@state 0017  
                        _GLCDInit 1CA8                       _do_register 03BD  
             __end_of_init_eusart 1B3C                         _newString 03B8  
                    _UcheckExists 1CE8                         _loginText 1FA7  
                       _jugantSIO 03B1          __size_of_HActualitzaHora 0034  
                       _jugantJoc 03B2                      UgetTop5@quin 004A  
                     ??_CantaData 004C                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
               ?_llegirCharEEPROM 0045                     ?_MNouJoystick 0045  
                ?_SIONovaDireccio 0045              __end_of_SIOStartGame 1C28  
                   UenviaChar@pos 004A                _escriureCharEEPROM 19C4  
                       _novaTecla 006B                ??_llegirCharEEPROM 004A  
                   motorSIO@state 000F                          _PIR1bits 000F9E  
             __end_of_lletraInici 1EFD                       ??_LcPutChar 0058  
                       _timerGLCD 0022                         _motorHora 14A8  
                        _RCONbits 000FD0                         _reproduir 03BA  
                        _HGetTime 1CD0             __size_of_JoystickInit 0012  
                       _timerHora 0016                         _timerMenu 0032  
             ?_escriureCharEEPROM 004A                       ??_NoFerMenu 004A  
                      _ADCON0bits 000FC2                       ??_URegister 004A  
                     ??_HnoJugant 004A                       ??_SiFerMenu 004A  
           __size_of_UgetUserName 0014               __end_of_playAltaveu 1CDC  
          __size_of_SsetNovaTecla 0008                          Espera@ms 0051  
                       _zeroTecla 003A                          _LcGotoXY 193C  
                  _usuariLoguejat 0066                          _LcLliure 1C0A  
                     ??_TiGetTics 004C           __size_of_compareStrings 002A  
             llegirCharEEPROM@pos 004A              __size_of_TiInitTimer 0028  
                        _LcScroll 1CC2                   ??_JoystickMotor 004B  
                   GLCDMotor@max1 0065                     GLCDMotor@max2 0064  
                   GLCDMotor@min1 001E                     GLCDMotor@min2 001D  
                    _teclaPremuda 1F90                          _JendGame 1CFC  
                       _usuariJoc 0063                       LcGotoXY@Row 0052  
                       copy_data0 16F8              ??_escriureCharEEPROM 004B  
                 ?_CantaPartBaixa 0045               __end_of_CToAobtenir 1D04  
                __size_of_HJugant 0006            ??_UcheckExistsGetError 004A  
           escriureCharEEPROM@pos 004A                  __size_of_JJuguem 0008  
                __size_of_LcClear 0018                  __size_of_CantaIR 001C  
                        _TeTeclat 1092             __end_of_JnovaDireccio 1C48  
                  ??_MNouJoystick 004A                    _do_updateScore 03BB  
 __size_of_SIOHaAcabatPuntuacions 0004                      ?_UmotorUsers 0045  
                    _JoystickInit 1B50                        _EECON1bits 000FA6  
                    _registerText 1F9C                       _indexUsuari 0030  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0010  
                   motorJoc@state 0012                          __Hrparam 0000  
                     _initAltaveu 1C68                       ??_UgetScore 004A  
                        _UgetTop5 1BC2                         menu@state 002E  
                        __Lrparam 0000                        ?_motorHora 0045  
            __size_of__TiRSITimer 003E                      _UgetUserName 1B3C  
                     ??_UenviaPas 004B                      _novaDireccio 0067  
                     ??_UnewScore 004A                      ??_init_ports 004A  
             HActualitzaHora@nova 004A        __end_of_UshowUsersCalculat 1BC2  
                     _init_eusart 1B26                  __size_of_initSIO 0008  
           __size_of_motorAltaveu 007A                      _novaTeclaJOC 0062  
                    _novaTeclaSIO 005F                   _do_check_exists 03BE  
                        __ptext10 1CCC                          __ptext11 1B9E  
              _EscriuPrimeraOrdre 152C                          __ptext20 1BAA  
                        __ptext12 1CB0                          __ptext21 1CDC  
                        __ptext13 1CD0                          __ptext30 1CE4  
                        __ptext22 1BB6                          __ptext14 1CD4  
                        __ptext31 1CE8                          __ptext23 1B3C  
                        __ptext15 14A8                          __ptext40 1C40  
                        __ptext32 1CEC                          __ptext24 1BC2  
                        __ptext16 1CD8                          __ptext41 1CFC  
                        __ptext33 1CF0                          __ptext25 1BCE  
                        __ptext17 1416                          __ptext50 1B26  
                        __ptext42 1C48                          __ptext34 1CB6  
                        __ptext26 1CE0                          __ptext18 0036  
                        __ptext51 1C58                          __ptext43 1908  
                        __ptext35 1CBC                          __ptext27 1B62  
                        __ptext19 1ABA                          __ptext60 1092  
                        __ptext52 1C60                          __ptext44 1BE6  
                        __ptext36 1CF4                          __ptext28 1B72  
                        __ptext61 1C70                          __ptext53 1C68  
                        __ptext45 1D00                          __ptext37 1CF8  
                        __ptext29 1BDA                          __ptext70 152C  
                        __ptext62 1C78                          __ptext54 0A4A  
                        __ptext46 1D04                          __ptext38 1CC2  
                        __ptext71 11E0                          __ptext63 1C80  
                        __ptext55 19C4                          __ptext47 1BF2  
                        __ptext39 1C38                          __ptext80 193C  
                        __ptext72 1CA0                          __ptext64 1C88  
                        __ptext56 181C                          __ptext48 1C50  
                        __ptext81 185A                          __ptext73 1B50  
                        __ptext65 0EB2                          __ptext57 1898  
                        __ptext49 1A9C                          __ptext90 1A34  
                        __ptext82 1AD6                          __ptext74 07B8  
                        __ptext66 1C90                          __ptext58 1B82  
                        __ptext83 1618                          __ptext75 178C  
                        __ptext67 1C98                          __ptext59 199C  
                        __ptext92 17D4                          __ptext84 167E  
                        __ptext76 18D0                          __ptext68 173C  
                        __ptext85 1A7A                          __ptext77 1BFE  
                        __ptext69 12B6                          __ptext86 1AF2  
                        __ptext78 1C0A                          __ptext87 19EA  
                        __ptext79 1A58                          __ptext88 1CA8  
                        __ptext89 1970                    CantaPartAlta@c 004B  
                     _lletraASCII 006C                          _high_rsi 0008  
                        _copsNota 0024                          _s_Timers 0080  
                   __size_of_CtoA 0024                          _initHora 1C60  
                     _lletraInici 1EF5                          _menuDalt 0031  
                        _menuList 1EFF               ?_EscriuPrimeraOrdre 0045  
                   __size_of_main 0070                     __size_of_menu 0742  
           __end_of_CantaPartAlta 16DA                    _CToAConverteix 1BF2  
                   CantaData@Data 004C                          _tiTeclat 0038  
              __end_of_init_ports 1ABA                          _setSMSon 03C0  
                   _SsetNovaTecla 1C70              __size_of_WaitForBusy 003E  
                        _nouSegon 03B4                          _scoreUsr 0028  
                        _motorSIO 0CCA                 ??_HActualitzaHora 004B  
                        _motorJoc 1374                   _checkHoraAcabat 1BAA  
                        _timerSIO 0011                          _timerSMS 003B  
                        isa$xinst 000000                          int$flags 0079  
                    UenviaPas@pos 004A                       _playAltaveu 1CD8  
                    _motorAltaveu 1416           __size_of_HClearNouSegon 0004  
          _SIOHaAcabatPuntuacions 1CF4              ??_EscriuPrimeraOrdre 004A  
                      LcInit@rows 0056                  ??_GLCDMostraMenu 004A  
           __size_of_SIONovaTecla 0008           _UcheckExistsNotFinished 1BDA  
                      _INTCONbits 000FF2                     ??_MNovaLletra 004A  
                     _CToAobtenir 1D00             __size_of_SIOStartGame 0008  
                   ??_LcNewString 004F                          intlevel2 0000  
                    _timerAltaveu 0025                    _arrayShowUsers 0001  
          __end_of_CToAConverteix 1BFE                        LcPutChar@c 0058  
                  ?_SsetNovaTecla 0045                 MNovaLletra@lletra 004A  
                 compareStrings@a 004A                   compareStrings@b 004B  
                     ??_motorHora 0051                      _SIONovaTecla 1C28  
                     _tempsAcabat 03B3                       GLCDMotor@k1 001C  
                     GLCDMotor@k2 001B              __end_of_MNouJoystick 1CA8  
                    _SIOStartGame 1C20                    _compareStrings 181C  
                     _tmpPassword 00A2               __end_of_MNovaLletra 1C98  
                 ?_CToAConverteix 0045             __end_of_MsetNovaTecla 1C80  
         __end_of_checkHoraAcabat 1BB6                       _tmpUsername 00AB  
                  _SIOcheckKrebut 1B92                       SMotor@state 0039  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 1C0A  
            __size_of_UmotorUsers 0232                        _SIOendGame 1CC8  
