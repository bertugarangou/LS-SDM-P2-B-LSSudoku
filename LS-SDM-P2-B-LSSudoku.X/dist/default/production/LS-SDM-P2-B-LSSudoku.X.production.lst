

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed May 04 13:25:48 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100  0000                     
   101                           ; Version 2.32
   102                           ; Generated 02/02/2021 GMT
   103                           ; 
   104                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution. Publication is not required when
   118                           ;        this file is used in an embedded application.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC18F4321 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136  0000                     
   137                           	psect	idataCOMRAM
   138  001B4C                     __pidataCOMRAM:
   139                           	callstack 0
   140                           
   141                           ;initializer for _lletraInici
   142  001B4C  41                 	db	65
   143  001B4D  44                 	db	68
   144  001B4E  47                 	db	71
   145  001B4F  4A                 	db	74
   146  001B50  4D                 	db	77
   147  001B51  50                 	db	80
   148  001B52  54                 	db	84
   149  001B53  57                 	db	87
   150  001B54  00                 	db	0
   151                           
   152                           ;initializer for _arrayZero
   153  001B55  30                 	db	48
   154  001B56  20                 	db	32
   155  001B57  00                 	db	0
   156                           
   157                           ;initializer for _novaTeclaSIO
   158  001B58  FF                 	db	255
   159                           
   160                           ;initializer for _direccio
   161  001B59  FF                 	db	255
   162                           
   163                           ;initializer for _usuariActualSIO
   164  001B5A  FF                 	db	255
   165                           
   166                           ;initializer for _usuariJoc
   167  001B5B  FF                 	db	255
   168                           
   169                           ;initializer for GLCDMotor@max2
   170  001B5C  0F                 	db	15
   171                           
   172                           ;initializer for GLCDMotor@max1
   173  001B5D  0F                 	db	15
   174                           
   175                           ;initializer for _usuariLoguejat
   176  001B5E  FF                 	db	255
   177                           
   178                           ;initializer for _novaDireccio
   179  001B5F  FF                 	db	255
   180                           
   181                           ;initializer for _novaLletra
   182  001B60  FF                 	db	255
   183                           
   184                           ;initializer for _NovaTecla
   185  001B61  FF                 	db	255
   186                           
   187                           ;initializer for _ultimaTecla
   188  001B62  FF                 	db	255
   189                           
   190                           ;initializer for _timerSMS
   191  001B63  FF                 	db	255
   192                           
   193                           ;initializer for _novaTecla
   194  001B64  FF                 	db	255
   195                           
   196                           ;initializer for _lletraASCII
   197  001B65  FF                 	db	255
   198                           
   199                           ;initializer for _hora
   200  001B66  33                 	db	51
   201  001B67  30                 	db	48
   202  001B68  3A                 	db	58
   203  001B69  30                 	db	48
   204  001B6A  30                 	db	48
   205  001B6B  00                 	db	0
   206                           
   207                           	psect	idataBANK0
   208  001B8C                     __pidataBANK0:
   209                           	callstack 0
   210                           
   211                           ;initializer for _teclaPremuda
   212  001B8C  01                 	db	1
   213  001B8D  02                 	db	2
   214  001B8E  03                 	db	3
   215  001B8F  04                 	db	4
   216  001B90  05                 	db	5
   217  001B91  06                 	db	6
   218  001B92  07                 	db	7
   219  001B93  08                 	db	8
   220  001B94  09                 	db	9
   221  001B95  0A                 	db	10
   222  001B96  00                 	db	0
   223  001B97  0B                 	db	11
   224                           
   225                           ;initializer for _registerText
   226  001B98  32                 	db	50
   227  001B99  2E                 	db	46
   228  001B9A  52                 	db	82
   229  001B9B  45                 	db	69
   230  001B9C  47                 	db	71
   231  001B9D  49                 	db	73
   232  001B9E  53                 	db	83
   233  001B9F  54                 	db	84
   234  001BA0  45                 	db	69
   235  001BA1  52                 	db	82
   236  001BA2  00                 	db	0
   237                           
   238                           ;initializer for _loginText
   239  001BA3  31                 	db	49
   240  001BA4  2E                 	db	46
   241  001BA5  4C                 	db	76
   242  001BA6  4F                 	db	79
   243  001BA7  47                 	db	71
   244  001BA8  49                 	db	73
   245  001BA9  4E                 	db	78
   246  001BAA  00                 	db	0
   247                           
   248                           	psect	smallconst
   249  000200                     __psmallconst:
   250                           	callstack 0
   251  000200  00                 	db	0
   252  000201                     _menuList:
   253                           	callstack 0
   254  000201  31                 	db	49
   255  000202  2E                 	db	46
   256  000203  50                 	db	80
   257  000204  6C                 	db	108
   258  000205  61                 	db	97
   259  000206  79                 	db	121
   260  000207  20                 	db	32
   261  000208  61                 	db	97
   262  000209  20                 	db	32
   263  00020A  47                 	db	71
   264  00020B  61                 	db	97
   265  00020C  6D                 	db	109
   266  00020D  65                 	db	101
   267  00020E  00                 	db	0
   268  00020F  00                 	db	0
   269  000210  00                 	db	0
   270  000211  00                 	db	0
   271  000212  00                 	db	0
   272  000213  00                 	db	0
   273  000214  00                 	db	0
   274  000215  00                 	db	0
   275  000216  00                 	db	0
   276  000217  00                 	db	0
   277  000218  00                 	db	0
   278  000219  00                 	db	0
   279  00021A  00                 	db	0
   280  00021B  00                 	db	0
   281  00021C  00                 	db	0
   282  00021D  00                 	db	0
   283  00021E  32                 	db	50
   284  00021F  2E                 	db	46
   285  000220  4D                 	db	77
   286  000221  6F                 	db	111
   287  000222  64                 	db	100
   288  000223  69                 	db	105
   289  000224  66                 	db	102
   290  000225  79                 	db	121
   291  000226  20                 	db	32
   292  000227  54                 	db	84
   293  000228  69                 	db	105
   294  000229  6D                 	db	109
   295  00022A  65                 	db	101
   296  00022B  00                 	db	0
   297  00022C  00                 	db	0
   298  00022D  00                 	db	0
   299  00022E  00                 	db	0
   300  00022F  00                 	db	0
   301  000230  00                 	db	0
   302  000231  00                 	db	0
   303  000232  00                 	db	0
   304  000233  00                 	db	0
   305  000234  00                 	db	0
   306  000235  00                 	db	0
   307  000236  00                 	db	0
   308  000237  00                 	db	0
   309  000238  00                 	db	0
   310  000239  00                 	db	0
   311  00023A  00                 	db	0
   312  00023B  33                 	db	51
   313  00023C  2E                 	db	46
   314  00023D  53                 	db	83
   315  00023E  68                 	db	104
   316  00023F  6F                 	db	111
   317  000240  77                 	db	119
   318  000241  20                 	db	32
   319  000242  47                 	db	71
   320  000243  65                 	db	101
   321  000244  6E                 	db	110
   322  000245  65                 	db	101
   323  000246  72                 	db	114
   324  000247  61                 	db	97
   325  000248  6C                 	db	108
   326  000249  20                 	db	32
   327  00024A  54                 	db	84
   328  00024B  6F                 	db	111
   329  00024C  70                 	db	112
   330  00024D  20                 	db	32
   331  00024E  35                 	db	53
   332  00024F  20                 	db	32
   333  000250  53                 	db	83
   334  000251  63                 	db	99
   335  000252  6F                 	db	111
   336  000253  72                 	db	114
   337  000254  65                 	db	101
   338  000255  73                 	db	115
   339  000256  20                 	db	32
   340  000257  00                 	db	0
   341  000258  34                 	db	52
   342  000259  2E                 	db	46
   343  00025A  4C                 	db	76
   344  00025B  6F                 	db	111
   345  00025C  67                 	db	103
   346  00025D  6F                 	db	111
   347  00025E  75                 	db	117
   348  00025F  74                 	db	116
   349  000260  00                 	db	0
   350  000261  00                 	db	0
   351  000262  00                 	db	0
   352  000263  00                 	db	0
   353  000264  00                 	db	0
   354  000265  00                 	db	0
   355  000266  00                 	db	0
   356  000267  00                 	db	0
   357  000268  00                 	db	0
   358  000269  00                 	db	0
   359  00026A  00                 	db	0
   360  00026B  00                 	db	0
   361  00026C  00                 	db	0
   362  00026D  00                 	db	0
   363  00026E  00                 	db	0
   364  00026F  00                 	db	0
   365  000270  00                 	db	0
   366  000271  00                 	db	0
   367  000272  00                 	db	0
   368  000273  00                 	db	0
   369  000274  00                 	db	0
   370  000275  35                 	db	53
   371  000276  2E                 	db	46
   372  000277  53                 	db	83
   373  000278  68                 	db	104
   374  000279  6F                 	db	111
   375  00027A  77                 	db	119
   376  00027B  20                 	db	32
   377  00027C  41                 	db	65
   378  00027D  6C                 	db	108
   379  00027E  6C                 	db	108
   380  00027F  20                 	db	32
   381  000280  55                 	db	85
   382  000281  73                 	db	115
   383  000282  65                 	db	101
   384  000283  72                 	db	114
   385  000284  73                 	db	115
   386  000285  00                 	db	0
   387  000286  00                 	db	0
   388  000287  00                 	db	0
   389  000288  00                 	db	0
   390  000289  00                 	db	0
   391  00028A  00                 	db	0
   392  00028B  00                 	db	0
   393  00028C  00                 	db	0
   394  00028D  00                 	db	0
   395  00028E  00                 	db	0
   396  00028F  00                 	db	0
   397  000290  00                 	db	0
   398  000291  00                 	db	0
   399  000292                     __end_of_menuList:
   400                           	callstack 0
   401  0000                     _RCREG	set	4014
   402  0000                     _TXREG	set	4013
   403  0000                     _TXSTAbits	set	4012
   404  0000                     _ADCON0bits	set	4034
   405  0000                     _ADRESH	set	4036
   406  0000                     _ADCON2	set	4032
   407  0000                     _ADCON1	set	4033
   408  0000                     _ADCON0	set	4034
   409  0000                     _EECON2	set	4007
   410  0000                     _EEDATA	set	4008
   411  0000                     _EEADR	set	4009
   412  0000                     _T0CONbits	set	4053
   413  0000                     _TMR0L	set	4054
   414  0000                     _TMR0H	set	4055
   415  0000                     _T0CON	set	4053
   416  0000                     _INTCONbits	set	4082
   417  0000                     _RCONbits	set	4048
   418  0000                     _PORTDbits	set	3971
   419  0000                     _SPBRG	set	4015
   420  0000                     _SPBRGH	set	4016
   421  0000                     _BAUDCON	set	4024
   422  0000                     _RCSTA	set	4011
   423  0000                     _TXSTA	set	4012
   424  0000                     _EECON1bits	set	4006
   425  0000                     _LATD	set	3980
   426  0000                     _TRISD	set	3989
   427  0000                     _TRISC	set	3988
   428  0000                     _LATBbits	set	3978
   429  0000                     _TRISB	set	3987
   430  0000                     _TRISA	set	3986
   431  0000                     _PORTCbits	set	3970
   432  0000                     _LATDbits	set	3980
   433  0000                     _LATCbits	set	3979
   434  0000                     _TRISDbits	set	3989
   435  0000                     _TRISCbits	set	3988
   436  000292                     STR_5:
   437  000292  54                 	db	84	;'T'
   438  000293  49                 	db	73	;'I'
   439  000294  4D                 	db	77	;'M'
   440  000295  45                 	db	69	;'E'
   441  000296  20                 	db	32
   442  000297  52                 	db	82	;'R'
   443  000298  45                 	db	69	;'E'
   444  000299  4D                 	db	77	;'M'
   445  00029A  41                 	db	65	;'A'
   446  00029B  49                 	db	73	;'I'
   447  00029C  4E                 	db	78	;'N'
   448  00029D  49                 	db	73	;'I'
   449  00029E  4E                 	db	78	;'N'
   450  00029F  47                 	db	71	;'G'
   451  0002A0  3A                 	db	58	;':'
   452  0002A1  00                 	db	0
   453  0002A2                     STR_4:
   454  0002A2  4D                 	db	77	;'M'
   455  0002A3  6F                 	db	111	;'o'
   456  0002A4  64                 	db	100	;'d'
   457  0002A5  69                 	db	105	;'i'
   458  0002A6  66                 	db	102	;'f'
   459  0002A7  79                 	db	121	;'y'
   460  0002A8  20                 	db	32
   461  0002A9  54                 	db	84	;'T'
   462  0002AA  69                 	db	105	;'i'
   463  0002AB  6D                 	db	109	;'m'
   464  0002AC  65                 	db	101	;'e'
   465  0002AD  3A                 	db	58	;':'
   466  0002AE  00                 	db	0
   467  0002AF                     STR_3:
   468  0002AF  42                 	db	66	;'B'
   469  0002B0  59                 	db	89	;'Y'
   470  0002B1  45                 	db	69	;'E'
   471  0002B2  20                 	db	32
   472  0002B3  42                 	db	66	;'B'
   473  0002B4  59                 	db	89	;'Y'
   474  0002B5  45                 	db	69	;'E'
   475  0002B6  20                 	db	32
   476  0002B7  00                 	db	0
   477  0002B8                     STR_2:
   478  0002B8  50                 	db	80	;'P'
   479  0002B9  53                 	db	83	;'S'
   480  0002BA  57                 	db	87	;'W'
   481  0002BB  44                 	db	68	;'D'
   482  0002BC  3A                 	db	58	;':'
   483  0002BD  20                 	db	32
   484  0002BE  00                 	db	0
   485  0002BF                     STR_1:
   486  0002BF  55                 	db	85	;'U'
   487  0002C0  53                 	db	83	;'S'
   488  0002C1  45                 	db	69	;'E'
   489  0002C2  52                 	db	82	;'R'
   490  0002C3  3A                 	db	58	;':'
   491  0002C4  20                 	db	32
   492  0002C5  00                 	db	0
   493  0002C6  00                 	db	0	; dummy byte at the end
   494  0000                     
   495                           ; #config settings
   496                           
   497                           	psect	cinit
   498  0015CE                     __pcinit:
   499                           	callstack 0
   500  0015CE                     start_initialization:
   501                           	callstack 0
   502  0015CE                     __initialization:
   503                           	callstack 0
   504                           
   505                           ; Initialize objects allocated to BANK0 (31 bytes)
   506                           ; load TBLPTR registers with __pidataBANK0
   507  0015CE  0E8C               	movlw	low __pidataBANK0
   508  0015D0  6EF6               	movwf	tblptrl,c
   509  0015D2  0E1B               	movlw	high __pidataBANK0
   510  0015D4  6EF7               	movwf	tblptrh,c
   511  0015D6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   512  0015D8  6EF8               	movwf	tblptru,c
   513  0015DA  EE00  F0A1         	lfsr	0,__pdataBANK0
   514  0015DE  EE10 F01F          	lfsr	1,31
   515  0015E2                     copy_data0:
   516  0015E2  0009               	tblrd		*+
   517  0015E4  CFF5 FFEE          	movff	tablat,postinc0
   518  0015E8  50E5               	movf	postdec1,w,c
   519  0015EA  50E1               	movf	fsr1l,w,c
   520  0015EC  E1FA               	bnz	copy_data0
   521                           
   522                           ; Initialize objects allocated to COMRAM (32 bytes)
   523                           ; load TBLPTR registers with __pidataCOMRAM
   524  0015EE  0E4C               	movlw	low __pidataCOMRAM
   525  0015F0  6EF6               	movwf	tblptrl,c
   526  0015F2  0E1B               	movlw	high __pidataCOMRAM
   527  0015F4  6EF7               	movwf	tblptrh,c
   528  0015F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   529  0015F8  6EF8               	movwf	tblptru,c
   530  0015FA  EE00  F043         	lfsr	0,__pdataCOMRAM
   531  0015FE  EE10 F020          	lfsr	1,32
   532  001602                     copy_data1:
   533  001602  0009               	tblrd		*+
   534  001604  CFF5 FFEE          	movff	tablat,postinc0
   535  001608  50E5               	movf	postdec1,w,c
   536  00160A  50E1               	movf	fsr1l,w,c
   537  00160C  E1FA               	bnz	copy_data1
   538                           
   539                           ; Clear objects allocated to BANK1 (184 bytes)
   540  00160E  EE01  F000         	lfsr	0,__pbssBANK1
   541  001612  0EB8               	movlw	184
   542  001614                     clear_0:
   543  001614  6AEE               	clrf	postinc0,c
   544  001616  06E8               	decf	wreg,f,c
   545  001618  E1FD               	bnz	clear_0
   546                           
   547                           ; Clear objects allocated to BANK0 (33 bytes)
   548  00161A  EE00  F080         	lfsr	0,__pbssBANK0
   549  00161E  0E21               	movlw	33
   550  001620                     clear_1:
   551  001620  6AEE               	clrf	postinc0,c
   552  001622  06E8               	decf	wreg,f,c
   553  001624  E1FD               	bnz	clear_1
   554                           
   555                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   556  001626  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   557  001628  6A78               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   558                           
   559                           ; Clear objects allocated to COMRAM (66 bytes)
   560  00162A  EE00  F001         	lfsr	0,__pbssCOMRAM
   561  00162E  0E42               	movlw	66
   562  001630                     clear_2:
   563  001630  6AEE               	clrf	postinc0,c
   564  001632  06E8               	decf	wreg,f,c
   565  001634  E1FD               	bnz	clear_2
   566  001636                     end_of_initialization:
   567                           	callstack 0
   568  001636                     __end_of__initialization:
   569                           	callstack 0
   570  001636  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   571  001638  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   572  00163A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   573  00163C  6EF8               	movwf	tblptru,c
   574  00163E  0100               	movlb	0
   575  001640  EF22  F00B         	goto	_main	;jump to C main() function
   576                           
   577                           	psect	bitbssCOMRAM
   578  0003C0                     __pbitbssCOMRAM:
   579                           	callstack 0
   580  0003C0                     _Krebut:
   581                           	callstack 0
   582  0003C0                     	ds	1
   583  0003C1                     _nouSegon:
   584                           	callstack 0
   585  0003C1                     	ds	1
   586  0003C2                     _jugant:
   587                           	callstack 0
   588  0003C2                     	ds	1
   589  0003C3                     _cap2:
   590                           	callstack 0
   591  0003C3                     	ds	1
   592  0003C4                     _cap1:
   593                           	callstack 0
   594  0003C4                     	ds	1
   595  0003C5                     _newString:
   596                           	callstack 0
   597  0003C5                     	ds	1
   598  0003C6                     _ferMenu:
   599                           	callstack 0
   600  0003C6                     	ds	1
   601  0003C7                     _reproduir:
   602                           	callstack 0
   603  0003C7                     	ds	1
   604  0003C8                     _borram:
   605                           	callstack 0
   606  0003C8                     	ds	1
   607  0003C9                     _do_register:
   608                           	callstack 0
   609  0003C9                     	ds	1
   610  0003CA                     _do_check_exists:
   611                           	callstack 0
   612  0003CA                     	ds	1
   613  0003CB                     _loginNOTRegister:
   614                           	callstack 0
   615  0003CB                     	ds	1
   616  0003CC                     _setSMSon:
   617                           	callstack 0
   618  0003CC                     	ds	1
   619  0003CD                     _nou_s:
   620                           	callstack 0
   621  0003CD                     	ds	1
   622                           
   623                           	psect	bssCOMRAM
   624  000001                     __pbssCOMRAM:
   625                           	callstack 0
   626  000001                     _userPtr:
   627                           	callstack 0
   628  000001                     	ds	2
   629  000003                     _h_Tics:
   630                           	callstack 0
   631  000003                     	ds	2
   632  000005                     _s_ptr:
   633                           	callstack 0
   634  000005                     	ds	2
   635  000007                     motorSIO@state:
   636                           	callstack 0
   637  000007                     	ds	1
   638  000008                     _rebut:
   639                           	callstack 0
   640  000008                     	ds	1
   641  000009                     motorJoc@state:
   642                           	callstack 0
   643  000009                     	ds	1
   644  00000A                     motorHora@state:
   645                           	callstack 0
   646  00000A                     	ds	1
   647  00000B                     _segons:
   648                           	callstack 0
   649  00000B                     	ds	1
   650  00000C                     _timerHora:
   651                           	callstack 0
   652  00000C                     	ds	1
   653  00000D                     JoystickMotor@state:
   654                           	callstack 0
   655  00000D                     	ds	1
   656  00000E                     _ultimaTeclaAD:
   657                           	callstack 0
   658  00000E                     	ds	1
   659  00000F                     GLCDMotor@length2:
   660                           	callstack 0
   661  00000F                     	ds	1
   662  000010                     GLCDMotor@length1:
   663                           	callstack 0
   664  000010                     	ds	1
   665  000011                     GLCDMotor@k2:
   666                           	callstack 0
   667  000011                     	ds	1
   668  000012                     GLCDMotor@k1:
   669                           	callstack 0
   670  000012                     	ds	1
   671  000013                     GLCDMotor@min2:
   672                           	callstack 0
   673  000013                     	ds	1
   674  000014                     GLCDMotor@min1:
   675                           	callstack 0
   676  000014                     	ds	1
   677  000015                     GLCDMotor@j:
   678                           	callstack 0
   679  000015                     	ds	1
   680  000016                     GLCDMotor@state:
   681                           	callstack 0
   682  000016                     	ds	1
   683  000017                     _menuDaltGLCD:
   684                           	callstack 0
   685  000017                     	ds	1
   686  000018                     _timerGLCD:
   687                           	callstack 0
   688  000018                     	ds	1
   689  000019                     motorAltaveu@state:
   690                           	callstack 0
   691  000019                     	ds	1
   692  00001A                     _copsNota:
   693                           	callstack 0
   694  00001A                     	ds	1
   695  00001B                     _timerAltaveu:
   696                           	callstack 0
   697  00001B                     	ds	1
   698  00001C                     _nota:
   699                           	callstack 0
   700  00001C                     	ds	1
   701  00001D                     UmotorUsers@state:
   702                           	callstack 0
   703  00001D                     	ds	1
   704  00001E                     _j:
   705                           	callstack 0
   706  00001E                     	ds	1
   707  00001F                     _i:
   708                           	callstack 0
   709  00001F                     	ds	1
   710  000020                     _indexNextUserStruct:
   711                           	callstack 0
   712  000020                     	ds	1
   713  000021                     _indexNextUser:
   714                           	callstack 0
   715  000021                     	ds	1
   716  000022                     _numUsuaris:
   717                           	callstack 0
   718  000022                     	ds	1
   719  000023                     _currentUsrIndex:
   720                           	callstack 0
   721  000023                     	ds	1
   722  000024                     menu@state:
   723                           	callstack 0
   724  000024                     	ds	1
   725  000025                     _indexUsuari:
   726                           	callstack 0
   727  000025                     	ds	1
   728  000026                     _menuDalt:
   729                           	callstack 0
   730  000026                     	ds	1
   731  000027                     _timerMenu:
   732                           	callstack 0
   733  000027                     	ds	1
   734  000028                     _tmp:
   735                           	callstack 0
   736  000028                     	ds	1
   737  000029                     _counter:
   738                           	callstack 0
   739  000029                     	ds	1
   740  00002A                     TeTeclat@files:
   741                           	callstack 0
   742  00002A                     	ds	1
   743  00002B                     TeTeclat@cols:
   744                           	callstack 0
   745  00002B                     	ds	1
   746  00002C                     TeTeclat@state:
   747                           	callstack 0
   748  00002C                     	ds	1
   749  00002D                     _tiTeclat:
   750                           	callstack 0
   751  00002D                     	ds	1
   752  00002E                     SMotor@state:
   753                           	callstack 0
   754  00002E                     	ds	1
   755  00002F                     _zeroTecla:
   756                           	callstack 0
   757  00002F                     	ds	1
   758  000030                     _sumaPulsacions:
   759                           	callstack 0
   760  000030                     	ds	1
   761  000031                     _Timer:
   762                           	callstack 0
   763  000031                     	ds	1
   764  000032                     _ColumnAct:
   765                           	callstack 0
   766  000032                     	ds	1
   767  000033                     _RowAct:
   768                           	callstack 0
   769  000033                     	ds	1
   770  000034                     _Columns:
   771                           	callstack 0
   772  000034                     	ds	1
   773  000035                     _Rows:
   774                           	callstack 0
   775  000035                     	ds	1
   776  000036                     _tmpUsername:
   777                           	callstack 0
   778  000036                     	ds	9
   779  00003F                     _horaTmp:
   780                           	callstack 0
   781  00003F                     	ds	4
   782                           
   783                           	psect	dataCOMRAM
   784  000043                     __pdataCOMRAM:
   785                           	callstack 0
   786  000043                     _lletraInici:
   787                           	callstack 0
   788  000043                     	ds	9
   789  00004C                     _arrayZero:
   790                           	callstack 0
   791  00004C                     	ds	3
   792  00004F                     _novaTeclaSIO:
   793                           	callstack 0
   794  00004F                     	ds	1
   795  000050                     _direccio:
   796                           	callstack 0
   797  000050                     	ds	1
   798  000051                     _usuariActualSIO:
   799                           	callstack 0
   800  000051                     	ds	1
   801  000052                     _usuariJoc:
   802                           	callstack 0
   803  000052                     	ds	1
   804  000053                     GLCDMotor@max2:
   805                           	callstack 0
   806  000053                     	ds	1
   807  000054                     GLCDMotor@max1:
   808                           	callstack 0
   809  000054                     	ds	1
   810  000055                     _usuariLoguejat:
   811                           	callstack 0
   812  000055                     	ds	1
   813  000056                     _novaDireccio:
   814                           	callstack 0
   815  000056                     	ds	1
   816  000057                     _novaLletra:
   817                           	callstack 0
   818  000057                     	ds	1
   819  000058                     _NovaTecla:
   820                           	callstack 0
   821  000058                     	ds	1
   822  000059                     _ultimaTecla:
   823                           	callstack 0
   824  000059                     	ds	1
   825  00005A                     _timerSMS:
   826                           	callstack 0
   827  00005A                     	ds	1
   828  00005B                     _novaTecla:
   829                           	callstack 0
   830  00005B                     	ds	1
   831  00005C                     _lletraASCII:
   832                           	callstack 0
   833  00005C                     	ds	1
   834  00005D                     _hora:
   835                           	callstack 0
   836  00005D                     	ds	6
   837                           
   838                           	psect	bssBANK0
   839  000080                     __pbssBANK0:
   840                           	callstack 0
   841  000080                     _s_Timers:
   842                           	callstack 0
   843  000080                     	ds	24
   844  000098                     _tmpPassword:
   845                           	callstack 0
   846  000098                     	ds	9
   847                           
   848                           	psect	dataBANK0
   849  0000A1                     __pdataBANK0:
   850                           	callstack 0
   851  0000A1                     _teclaPremuda:
   852                           	callstack 0
   853  0000A1                     	ds	12
   854  0000AD                     _registerText:
   855                           	callstack 0
   856  0000AD                     	ds	11
   857  0000B8                     _loginText:
   858                           	callstack 0
   859  0000B8                     	ds	8
   860                           
   861                           	psect	bssBANK1
   862  000100                     __pbssBANK1:
   863                           	callstack 0
   864  000100                     _usuaris:
   865                           	callstack 0
   866  000100                     	ds	184
   867                           
   868                           	psect	cstackBANK0
   869  0000C0                     __pcstackBANK0:
   870                           	callstack 0
   871  0000C0                     ??_menu:
   872  0000C0                     ??_GLCDMotor:
   873                           
   874                           ; 1 bytes @ 0x0
   875  0000C0                     	ds	2
   876                           
   877                           	psect	cstackCOMRAM
   878  000063                     __pcstackCOMRAM:
   879                           	callstack 0
   880  000063                     
   881                           ; 1 bytes @ 0x0
   882  000063                     	ds	1
   883  000064                     ??_high_rsi:
   884                           
   885                           ; 1 bytes @ 0x1
   886  000064                     	ds	4
   887  000068                     ??_EscriuPrimeraOrdre:
   888  000068                     ??_Uinit:
   889  000068                     ??_UcheckExistsGetError:
   890  000068                     ??_CantaPartAlta:
   891  000068                     ??_CantaPartBaixa:
   892  000068                     ?_TiGetTics:
   893                           	callstack 0
   894  000068                     ?_UgetUserName:
   895                           	callstack 0
   896  000068                     SsetNovaTecla@tecla:
   897                           	callstack 0
   898  000068                     TiResetTics@Handle:
   899                           	callstack 0
   900  000068                     MsetNovaTecla@tecla:
   901                           	callstack 0
   902  000068                     MNovaLletra@lletra:
   903                           	callstack 0
   904  000068                     MNouJoystick@posicio:
   905                           	callstack 0
   906  000068                     UenviaChar@pos:
   907                           	callstack 0
   908  000068                     UenviaPas@pos:
   909                           	callstack 0
   910  000068                     escriureCharEEPROM@pos:
   911                           	callstack 0
   912  000068                     compareStrings@a:
   913                           	callstack 0
   914  000068                     escriureEEPROM@caca:
   915                           	callstack 0
   916  000068                     GLCDMostraMenu@num:
   917                           	callstack 0
   918  000068                     HActualitzaHora@nova:
   919                           	callstack 0
   920  000068                     JJuguem@usuari:
   921                           	callstack 0
   922  000068                     JnovaTecla@tecla:
   923                           	callstack 0
   924  000068                     JnovaDireccio@dir:
   925                           	callstack 0
   926  000068                     SIONovaDireccio@num:
   927                           	callstack 0
   928  000068                     SIOStartGame@usuari:
   929                           	callstack 0
   930  000068                     SIONovaTecla@tecla:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x5
   934  000068                     	ds	1
   935  000069                     ??_JoystickMotor:
   936  000069                     CantaPartAlta@c:
   937                           	callstack 0
   938  000069                     CantaPartBaixa@c:
   939                           	callstack 0
   940  000069                     EscriuPrimeraOrdre@ordre:
   941                           	callstack 0
   942  000069                     UenviaChar@c:
   943                           	callstack 0
   944  000069                     UenviaPas@c:
   945                           	callstack 0
   946  000069                     escriureCharEEPROM@c:
   947                           	callstack 0
   948  000069                     compareStrings@b:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x6
   952  000069                     	ds	1
   953  00006A                     ??_TiGetTics:
   954  00006A                     CantaIR@IR:
   955                           	callstack 0
   956  00006A                     CantaData@Data:
   957                           	callstack 0
   958  00006A                     UgetUserName@quin:
   959                           	callstack 0
   960  00006A                     Uinit@i:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0x7
   964  00006A                     	ds	1
   965  00006B                     ??_motorSIO:
   966  00006B                     ??_compareStrings:
   967  00006B                     Uinit@j:
   968                           	callstack 0
   969  00006B                     LcNewString@new_s:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x8
   973  00006B                     	ds	1
   974  00006C                     TiGetTics@Handle:
   975                           	callstack 0
   976  00006C                     Uinit@j_1140:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x9
   980  00006C                     	ds	1
   981  00006D                     ??_UmotorUsers:
   982  00006D                     TiGetTics@actual:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0xA
   986  00006D                     	ds	2
   987  00006F                     ??_SMotor:
   988  00006F                     ??_motorHora:
   989  00006F                     ??_motorAltaveu:
   990  00006F                     ??_TeTeclat:
   991  00006F                     WaitForBusy@Busy:
   992                           	callstack 0
   993  00006F                     Espera@ms:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0xC
   997  00006F                     	ds	1
   998  000070                     LcGotoXY@Row:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0xD
  1002  000070                     	ds	1
  1003  000071                     ??_Espera:
  1004  000071                     LcGotoXY@Fisics:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0xE
  1008  000071                     	ds	1
  1009  000072                     Espera@Timer:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0xF
  1013  000072                     	ds	1
  1014  000073                     LcInit@columns:
  1015                           	callstack 0
  1016  000073                     _LcGotoXY$336:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x10
  1020  000073                     	ds	1
  1021  000074                     LcInit@rows:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x11
  1025  000074                     	ds	1
  1026  000075                     LcGotoXY@Column:
  1027                           	callstack 0
  1028  000075                     LcInit@i:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x12
  1032  000075                     	ds	1
  1033  000076                     ??_motorJoc:
  1034  000076                     LcPutChar@c:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x13
  1038  000076                     	ds	1
  1039  000077                     
  1040                           ; 1 bytes @ 0x14
  1041  000077                     	ds	1
  1042  000078                     
  1043                           ; 1 bytes @ 0x15
  1044 ;;
  1045 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1046 ;;
  1047 ;; *************** function _main *****************
  1048 ;; Defined at:
  1049 ;;		line 75 in file "main.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1
  1063 ;;      Params:         0       0       0
  1064 ;;      Locals:         0       0       0
  1065 ;;      Temps:          0       0       0
  1066 ;;      Totals:         0       0       0
  1067 ;;Total ram usage:        0 bytes
  1068 ;; Hardware stack levels required when called: 7
  1069 ;; This function calls:
  1070 ;;		_GLCDInit
  1071 ;;		_GLCDMotor
  1072 ;;		_JoystickInit
  1073 ;;		_JoystickMotor
  1074 ;;		_LcInit
  1075 ;;		_LcLCD
  1076 ;;		_Minit
  1077 ;;		_SMotor
  1078 ;;		_Sinit
  1079 ;;		_TeInit
  1080 ;;		_TeTeclat
  1081 ;;		_TiInitTimer
  1082 ;;		_Uinit
  1083 ;;		_UmotorUsers
  1084 ;;		_escriure2usuarisStruct
  1085 ;;		_escriureEEPROM
  1086 ;;		_initAltaveu
  1087 ;;		_initHora
  1088 ;;		_init_eusart
  1089 ;;		_init_ports
  1090 ;;		_menu
  1091 ;;		_motorAltaveu
  1092 ;;		_motorHora
  1093 ;;		_motorJoc
  1094 ;;		_motorSIO
  1095 ;; This function is called by:
  1096 ;;		Startup code after reset
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text0
  1101  001644                     __ptext0:
  1102                           	callstack 0
  1103  001644                     _main:
  1104                           	callstack 24
  1105                           
  1106                           ;main.c: 76:     init_ports();
  1107                           
  1108                           ;incstack = 0
  1109  001644  ECB6  F00D         	call	_init_ports	;wreg free
  1110                           
  1111                           ;main.c: 77:     escriureEEPROM();
  1112  001648  EC2D  F00D         	call	_escriureEEPROM	;wreg free
  1113                           
  1114                           ;main.c: 78:     init_eusart();
  1115  00164C  ECE2  F00D         	call	_init_eusart	;wreg free
  1116                           
  1117                           ;main.c: 79:     TiInitTimer();
  1118  001650  ECC4  F00C         	call	_TiInitTimer	;wreg free
  1119                           
  1120                           ;main.c: 80:     TeInit();
  1121  001654  EC66  F00E         	call	_TeInit	;wreg free
  1122                           
  1123                           ;main.c: 81:     Sinit();
  1124  001658  EC6A  F00E         	call	_Sinit	;wreg free
  1125                           
  1126                           ;main.c: 82:     SMotor();
  1127  00165C  EC94  F005         	call	_SMotor	;wreg free
  1128                           
  1129                           ;main.c: 83:     Uinit();
  1130  001660  ECB9  F009         	call	_Uinit	;wreg free
  1131                           
  1132                           ;main.c: 84:     initAltaveu();
  1133  001664  EC5A  F00E         	call	_initAltaveu	;wreg free
  1134                           
  1135                           ;main.c: 85:     GLCDInit();
  1136  001668  EC7A  F00E         	call	_GLCDInit	;wreg free
  1137                           
  1138                           ;main.c: 86:     JoystickInit();
  1139  00166C  ECF7  F00D         	call	_JoystickInit	;wreg free
  1140                           
  1141                           ;main.c: 87:     initHora();
  1142  001670  EC56  F00E         	call	_initHora	;wreg free
  1143                           
  1144                           ;main.c: 89:     LcInit(2,16);
  1145  001674  0E10               	movlw	16
  1146  001676  6E73               	movwf	LcInit@columns^0,c
  1147  001678  0E02               	movlw	2
  1148  00167A  ECEE  F008         	call	_LcInit
  1149                           
  1150                           ;main.c: 90:     Minit();
  1151  00167E  EC72  F00E         	call	_Minit	;wreg free
  1152                           
  1153                           ;main.c: 92:     escriure2usuarisStruct();
  1154  001682  EC44  F00D         	call	_escriure2usuarisStruct	;wreg free
  1155  001686                     l6096:
  1156                           
  1157                           ;main.c: 95:         motorJoc();
  1158  001686  EC13  F00A         	call	_motorJoc	;wreg free
  1159                           
  1160                           ;main.c: 96:         motorSIO();
  1161  00168A  EC01  F008         	call	_motorSIO	;wreg free
  1162                           
  1163                           ;main.c: 97:         motorHora();
  1164  00168E  EC6B  F00A         	call	_motorHora	;wreg free
  1165                           
  1166                           ;main.c: 98:         JoystickMotor();
  1167  001692  EC78  F008         	call	_JoystickMotor	;wreg free
  1168                           
  1169                           ;main.c: 99:         menu();
  1170  001696  EC64  F001         	call	_menu	;wreg free
  1171                           
  1172                           ;main.c: 100:         motorAltaveu();
  1173  00169A  EC5E  F009         	call	_motorAltaveu	;wreg free
  1174                           
  1175                           ;main.c: 101:         UmotorUsers();
  1176  00169E  EC92  F006         	call	_UmotorUsers	;wreg free
  1177                           
  1178                           ;main.c: 102:         GLCDMotor();
  1179  0016A2  ECA8  F003         	call	_GLCDMotor	;wreg free
  1180                           
  1181                           ;main.c: 103:         TeTeclat();
  1182  0016A6  EC4F  F007         	call	_TeTeclat	;wreg free
  1183                           
  1184                           ;main.c: 104:         SMotor();
  1185  0016AA  EC94  F005         	call	_SMotor	;wreg free
  1186                           
  1187                           ;main.c: 105:         LcLCD();
  1188  0016AE  ECC2  F00B         	call	_LcLCD	;wreg free
  1189  0016B2  D7E9               	goto	l6096
  1190  0016B4                     __end_of_main:
  1191                           	callstack 0
  1192                           
  1193 ;; *************** function _motorSIO *****************
  1194 ;; Defined at:
  1195 ;;		line 34 in file "SIO.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/1
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1
  1209 ;;      Params:         0       0       0
  1210 ;;      Locals:         0       0       0
  1211 ;;      Temps:          2       0       0
  1212 ;;      Totals:         2       0       0
  1213 ;;Total ram usage:        2 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 3
  1216 ;; This function calls:
  1217 ;;		_UgetUserName
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text1
  1224  001002                     __ptext1:
  1225                           	callstack 0
  1226  001002                     _motorSIO:
  1227                           	callstack 27
  1228                           
  1229                           ;SIO.c: 35:     static char state = 0;;SIO.c: 37:  switch(state) {
  1230                           
  1231                           ;incstack = 0
  1232  001002  D060               	goto	l4414
  1233  001004                     l4354:
  1234                           
  1235                           ;SIO.c: 39:    if (usuariActualSIO > -1) {
  1236  001004  BE51               	btfsc	_usuariActualSIO^0,7,c
  1237  001006  0012               	return	
  1238                           
  1239                           ;SIO.c: 40:     userPtr = UgetUserName(usuariActualSIO);
  1240  001008  5051               	movf	_usuariActualSIO^0,w,c
  1241  00100A  ECED  F00D         	call	_UgetUserName
  1242  00100E  C068  F001         	movff	?_UgetUserName,_userPtr
  1243  001012  C069  F002         	movff	?_UgetUserName+1,_userPtr+1
  1244                           
  1245                           ;SIO.c: 41:     jugant = 1;
  1246  001016  8478               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  1247                           
  1248                           ;SIO.c: 42:                 Krebut = 0;
  1249  001018  9078               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1250                           
  1251                           ;SIO.c: 43:     state = 1;
  1252  00101A  0E01               	movlw	1
  1253  00101C  6E07               	movwf	motorSIO@state^0,c
  1254  00101E  0012               	return	
  1255  001020                     l4364:
  1256                           
  1257                           ;SIO.c: 47:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1258  001020  C001  FFD9         	movff	_userPtr,fsr2l
  1259  001024  C002  FFDA         	movff	_userPtr+1,fsr2h
  1260  001028  50DF               	movf	indf2,w,c
  1261  00102A  B4D8               	btfsc	status,2,c
  1262  00102C  A2AC               	btfss	172,1,c	;volatile
  1263  00102E  D008               	goto	l4372
  1264                           
  1265                           ;SIO.c: 48:     TXREG = '\0';
  1266  001030  0E00               	movlw	0
  1267  001032  6EAD               	movwf	173,c	;volatile
  1268                           
  1269                           ;SIO.c: 49:     novaTeclaSIO = 0;
  1270  001034  0E00               	movlw	0
  1271  001036  6E4F               	movwf	_novaTeclaSIO^0,c
  1272                           
  1273                           ;SIO.c: 50:     LATBbits.LATB3 = 1;
  1274  001038  868A               	bsf	138,3,c	;volatile
  1275                           
  1276                           ;SIO.c: 51:     state = 2;
  1277  00103A  0E02               	movlw	2
  1278  00103C  6E07               	movwf	motorSIO@state^0,c
  1279                           
  1280                           ;SIO.c: 52:    }
  1281  00103E  0012               	return	
  1282  001040                     l4372:
  1283  001040  C001  FFD9         	movff	_userPtr,fsr2l
  1284  001044  C002  FFDA         	movff	_userPtr+1,fsr2h
  1285  001048  50DF               	movf	indf2,w,c
  1286  00104A  B4D8               	btfsc	status,2,c
  1287  00104C  0012               	return	
  1288  00104E  A2AC               	btfss	172,1,c	;volatile
  1289  001050  0012               	return	
  1290                           
  1291                           ;SIO.c: 54:     TXREG = *userPtr;
  1292  001052  C001  FFD9         	movff	_userPtr,fsr2l
  1293  001056  C002  FFDA         	movff	_userPtr+1,fsr2h
  1294  00105A  50DF               	movf	indf2,w,c
  1295  00105C  6EAD               	movwf	173,c	;volatile
  1296                           
  1297                           ;SIO.c: 55:     userPtr++;
  1298  00105E  4A01               	infsnz	_userPtr^0,f,c
  1299  001060  2A02               	incf	(_userPtr+1)^0,f,c
  1300  001062  0012               	return	
  1301  001064                     l4380:
  1302                           
  1303                           ;SIO.c: 59:    if (RCREG == 'K') {
  1304  001064  0E4B               	movlw	75
  1305  001066  18AE               	xorwf	174,w,c
  1306  001068  A4D8               	btfss	status,2,c
  1307  00106A  0012               	return	
  1308                           
  1309                           ;SIO.c: 60:     Krebut = 1;
  1310  00106C  8078               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1311  00106E                     l4384:
  1312                           
  1313                           ;SIO.c: 61:     state = 3;
  1314  00106E  0E03               	movlw	3
  1315  001070  6E07               	movwf	motorSIO@state^0,c
  1316  001072  0012               	return	
  1317  001074                     l4386:
  1318                           
  1319                           ;SIO.c: 65:    if (direccio != -1 && TXSTAbits.TRMT) {
  1320  001074  2850               	incf	_direccio^0,w,c
  1321  001076  A4D8               	btfss	status,2,c
  1322  001078  A2AC               	btfss	172,1,c	;volatile
  1323  00107A  D004               	goto	l4394
  1324                           
  1325                           ;SIO.c: 66:     TXREG = direccio;
  1326  00107C  C050  FFAD         	movff	_direccio,4013	;volatile
  1327                           
  1328                           ;SIO.c: 67:     direccio = -1;
  1329  001080  6850               	setf	_direccio^0,c
  1330  001082  D7F5               	goto	l4384
  1331  001084                     l4394:
  1332  001084  504F               	movf	_novaTeclaSIO^0,w,c
  1333  001086  0A80               	xorlw	128
  1334  001088  0F7F               	addlw	-129
  1335  00108A  A0D8               	btfss	status,0,c
  1336  00108C  D00D               	goto	l4404
  1337  00108E  504F               	movf	_novaTeclaSIO^0,w,c
  1338  001090  0A80               	xorlw	128
  1339  001092  0F76               	addlw	-138
  1340  001094  A0D8               	btfss	status,0,c
  1341  001096  A2AC               	btfss	172,1,c	;volatile
  1342  001098  D007               	goto	l4404
  1343                           
  1344                           ;SIO.c: 71:     TXREG = novaTeclaSIO;
  1345  00109A  C04F  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1346                           
  1347                           ;SIO.c: 72:     novaTeclaSIO = 0;
  1348  00109E  0E00               	movlw	0
  1349  0010A0  6E4F               	movwf	_novaTeclaSIO^0,c
  1350                           
  1351                           ;SIO.c: 73:     state = 3;
  1352  0010A2  0E03               	movlw	3
  1353  0010A4  6E07               	movwf	motorSIO@state^0,c
  1354                           
  1355                           ;SIO.c: 74:    }
  1356  0010A6  0012               	return	
  1357  0010A8                     l4404:
  1358  0010A8  0E0A               	movlw	10
  1359  0010AA  184F               	xorwf	_novaTeclaSIO^0,w,c
  1360  0010AC  A4D8               	btfss	status,2,c
  1361  0010AE  0012               	return	
  1362  0010B0  A2AC               	btfss	172,1,c	;volatile
  1363  0010B2  0012               	return	
  1364                           
  1365                           ;SIO.c: 76:     TXREG = 'F';
  1366  0010B4  0E46               	movlw	70
  1367  0010B6  6EAD               	movwf	173,c	;volatile
  1368                           
  1369                           ;SIO.c: 77:     novaTeclaSIO = 0;
  1370  0010B8  0E00               	movlw	0
  1371  0010BA  6E4F               	movwf	_novaTeclaSIO^0,c
  1372                           
  1373                           ;SIO.c: 78:     jugant = 0;
  1374  0010BC  9478               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  1375                           
  1376                           ;SIO.c: 79:     state = 4;
  1377  0010BE  0E04               	movlw	4
  1378  0010C0  6E07               	movwf	motorSIO@state^0,c
  1379  0010C2  0012               	return	
  1380  0010C4                     l4414:
  1381  0010C4  5007               	movf	motorSIO@state^0,w,c
  1382  0010C6  6E6B               	movwf	??_motorSIO^0,c
  1383  0010C8  6A6C               	clrf	(??_motorSIO+1)^0,c
  1384                           
  1385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1386                           ; Switch size 1, requested type "simple"
  1387                           ; Number of cases is 1, Range of values is 0 to 0
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte            4     3 (average)
  1391                           ;	Chosen strategy is simple_byte
  1392  0010CA  506C               	movf	(??_motorSIO+1)^0,w,c
  1393  0010CC  0A00               	xorlw	0	; case 0
  1394  0010CE  A4D8               	btfss	status,2,c
  1395  0010D0  0012               	return	
  1396                           
  1397                           ; Switch size 1, requested type "simple"
  1398                           ; Number of cases is 5, Range of values is 0 to 4
  1399                           ; switch strategies available:
  1400                           ; Name         Instructions Cycles
  1401                           ; simple_byte           16     9 (average)
  1402                           ;	Chosen strategy is simple_byte
  1403  0010D2  506B               	movf	??_motorSIO^0,w,c
  1404  0010D4  0A00               	xorlw	0	; case 0
  1405  0010D6  B4D8               	btfsc	status,2,c
  1406  0010D8  D795               	goto	l4354
  1407  0010DA  0A01               	xorlw	1	; case 1
  1408  0010DC  B4D8               	btfsc	status,2,c
  1409  0010DE  D7A0               	goto	l4364
  1410  0010E0  0A03               	xorlw	3	; case 2
  1411  0010E2  B4D8               	btfsc	status,2,c
  1412  0010E4  D7BF               	goto	l4380
  1413  0010E6  0A01               	xorlw	1	; case 3
  1414  0010E8  B4D8               	btfsc	status,2,c
  1415  0010EA  D7C4               	goto	l4386
  1416  0010EC  0A07               	xorlw	7	; case 4
  1417  0010EE  0012               	return	
  1418  0010F0                     __end_of_motorSIO:
  1419                           	callstack 0
  1420                           
  1421 ;; *************** function _motorJoc *****************
  1422 ;; Defined at:
  1423 ;;		line 26 in file "Joc.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/1
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1
  1437 ;;      Params:         0       0       0
  1438 ;;      Locals:         0       0       0
  1439 ;;      Temps:          2       0       0
  1440 ;;      Totals:         2       0       0
  1441 ;;Total ram usage:        2 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 5
  1444 ;; This function calls:
  1445 ;;		_HClearNouSegon
  1446 ;;		_HGetTime
  1447 ;;		_HJugant
  1448 ;;		_HNouSegon
  1449 ;;		_HnoJugant
  1450 ;;		_LcGotoXY
  1451 ;;		_LcLliure
  1452 ;;		_LcNewString
  1453 ;;		_SIOJugant
  1454 ;;		_SIONovaDireccio
  1455 ;;		_SIONovaTecla
  1456 ;;		_SIOStartGame
  1457 ;;		_SIOcheckKrebut
  1458 ;; This function is called by:
  1459 ;;		_main
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text2
  1464  001426                     __ptext2:
  1465                           	callstack 0
  1466  001426                     _motorJoc:
  1467                           	callstack 25
  1468                           
  1469                           ;Joc.c: 27:     static char state = 0;;Joc.c: 29:  switch(state) {
  1470                           
  1471                           ;incstack = 0
  1472  001426  D045               	goto	l4346
  1473  001428                     l4296:
  1474                           
  1475                           ;Joc.c: 31:    if (usuariJoc != -1) {
  1476  001428  2852               	incf	_usuariJoc^0,w,c
  1477  00142A  B4D8               	btfsc	status,2,c
  1478  00142C  0012               	return	
  1479                           
  1480                           ;Joc.c: 32:     SIOStartGame(usuariJoc);
  1481  00142E  5052               	movf	_usuariJoc^0,w,c
  1482  001430  EC3A  F00E         	call	_SIOStartGame
  1483                           
  1484                           ;Joc.c: 33:     state = 2;
  1485  001434  0E02               	movlw	2
  1486  001436  6E09               	movwf	motorJoc@state^0,c
  1487                           
  1488                           ;Joc.c: 35:   break;
  1489                           
  1490                           ;Joc.c: 34:    }
  1491  001438  0012               	return	
  1492  00143A                     l4302:
  1493                           
  1494                           ;Joc.c: 37:    if (!SIOJugant()) {
  1495  00143A  EC16  F00E         	call	_SIOJugant	;wreg free
  1496  00143E  B0D8               	btfsc	status,0,c
  1497  001440  D006               	goto	l4310
  1498                           
  1499                           ;Joc.c: 38:     usuariJoc = -1;
  1500  001442  6852               	setf	_usuariJoc^0,c
  1501                           
  1502                           ;Joc.c: 39:     HnoJugant();
  1503  001444  EC84  F00E         	call	_HnoJugant	;wreg free
  1504                           
  1505                           ;Joc.c: 40:     state = 0;
  1506  001448  0E00               	movlw	0
  1507  00144A  6E09               	movwf	motorJoc@state^0,c
  1508                           
  1509                           ;Joc.c: 41:    }
  1510  00144C  0012               	return	
  1511  00144E                     l4310:
  1512  00144E  BE56               	btfsc	_novaDireccio^0,7,c
  1513  001450  D007               	goto	l4318
  1514                           
  1515                           ;Joc.c: 43:     SIONovaDireccio(novaDireccio);
  1516  001452  5056               	movf	_novaDireccio^0,w,c
  1517  001454  EC42  F00E         	call	_SIONovaDireccio
  1518                           
  1519                           ;Joc.c: 44:     novaDireccio = -1;
  1520  001458  6856               	setf	_novaDireccio^0,c
  1521  00145A                     l4316:
  1522                           
  1523                           ;Joc.c: 45:     state = 1;
  1524  00145A  0E01               	movlw	1
  1525  00145C  6E09               	movwf	motorJoc@state^0,c
  1526                           
  1527                           ;Joc.c: 46:    }
  1528  00145E  0012               	return	
  1529  001460                     l4318:
  1530  001460  EC1C  F00E         	call	_HNouSegon	;wreg free
  1531  001464  A0D8               	btfss	status,0,c
  1532  001466  D014               	goto	l4330
  1533  001468  EC34  F00E         	call	_LcLliure	;wreg free
  1534  00146C  A0D8               	btfss	status,0,c
  1535  00146E  D010               	goto	l4330
  1536                           
  1537                           ;Joc.c: 48:     HClearNouSegon();
  1538  001470  EC8A  F00E         	call	_HClearNouSegon	;wreg free
  1539                           
  1540                           ;Joc.c: 49:     LcGotoXY(0,1);
  1541  001474  0E01               	movlw	1
  1542  001476  6E70               	movwf	LcGotoXY@Row^0,c
  1543  001478  0E00               	movlw	0
  1544  00147A  EC8A  F00C         	call	_LcGotoXY
  1545                           
  1546                           ;Joc.c: 50:     LcNewString(HGetTime());
  1547  00147E  EC88  F00E         	call	_HGetTime	;wreg free
  1548  001482  6E76               	movwf	??_motorJoc^0,c
  1549  001484  C076  F06B         	movff	??_motorJoc,LcNewString@new_s
  1550  001488  6A6C               	clrf	(LcNewString@new_s+1)^0,c
  1551  00148A  EC2E  F00E         	call	_LcNewString	;wreg free
  1552  00148E  D7E5               	goto	l4316
  1553  001490                     l4330:
  1554  001490  505B               	movf	_novaTecla^0,w,c
  1555  001492  0A80               	xorlw	128
  1556  001494  0F7F               	addlw	-129
  1557  001496  A0D8               	btfss	status,0,c
  1558  001498  0012               	return	
  1559                           
  1560                           ;Joc.c: 54:     SIONovaTecla(novaTecla);
  1561  00149A  505B               	movf	_novaTecla^0,w,c
  1562  00149C  EC3E  F00E         	call	_SIONovaTecla
  1563                           
  1564                           ;Joc.c: 55:     novaTecla = -1;
  1565  0014A0  685B               	setf	_novaTecla^0,c
  1566  0014A2  D7DB               	goto	l4316
  1567  0014A4                     l4338:
  1568                           
  1569                           ;Joc.c: 60:    if (SIOcheckKrebut()) {
  1570  0014A4  EC10  F00E         	call	_SIOcheckKrebut	;wreg free
  1571  0014A8  A0D8               	btfss	status,0,c
  1572  0014AA  0012               	return	
  1573                           
  1574                           ;Joc.c: 61:     HJugant();
  1575  0014AC  EC86  F00E         	call	_HJugant	;wreg free
  1576  0014B0  D7D4               	goto	l4316
  1577  0014B2                     l4346:
  1578  0014B2  5009               	movf	motorJoc@state^0,w,c
  1579  0014B4  6E76               	movwf	??_motorJoc^0,c
  1580  0014B6  6A77               	clrf	(??_motorJoc+1)^0,c
  1581                           
  1582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1583                           ; Switch size 1, requested type "simple"
  1584                           ; Number of cases is 1, Range of values is 0 to 0
  1585                           ; switch strategies available:
  1586                           ; Name         Instructions Cycles
  1587                           ; simple_byte            4     3 (average)
  1588                           ;	Chosen strategy is simple_byte
  1589  0014B8  5077               	movf	(??_motorJoc+1)^0,w,c
  1590  0014BA  0A00               	xorlw	0	; case 0
  1591  0014BC  A4D8               	btfss	status,2,c
  1592  0014BE  0012               	return	
  1593                           
  1594                           ; Switch size 1, requested type "simple"
  1595                           ; Number of cases is 3, Range of values is 0 to 2
  1596                           ; switch strategies available:
  1597                           ; Name         Instructions Cycles
  1598                           ; simple_byte           10     6 (average)
  1599                           ;	Chosen strategy is simple_byte
  1600  0014C0  5076               	movf	??_motorJoc^0,w,c
  1601  0014C2  0A00               	xorlw	0	; case 0
  1602  0014C4  B4D8               	btfsc	status,2,c
  1603  0014C6  D7B0               	goto	l4296
  1604  0014C8  0A01               	xorlw	1	; case 1
  1605  0014CA  B4D8               	btfsc	status,2,c
  1606  0014CC  D7B6               	goto	l4302
  1607  0014CE  0A03               	xorlw	3	; case 2
  1608  0014D0  A4D8               	btfss	status,2,c
  1609  0014D2  0012               	return	
  1610  0014D4  D7E7               	goto	l4338
  1611  0014D6                     __end_of_motorJoc:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function _SIOcheckKrebut *****************
  1615 ;; Defined at:
  1616 ;;		line 13 in file "SIO.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;		None               void
  1623 ;; Registers used:
  1624 ;;		status,0
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/1
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1
  1630 ;;      Params:         0       0       0
  1631 ;;      Locals:         0       0       0
  1632 ;;      Temps:          0       0       0
  1633 ;;      Totals:         0       0       0
  1634 ;;Total ram usage:        0 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 2
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_motorJoc
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text3
  1645  001C20                     __ptext3:
  1646                           	callstack 0
  1647  001C20                     _SIOcheckKrebut:
  1648                           	callstack 27
  1649                           
  1650                           ;SIO.c: 14:     return Krebut;
  1651                           
  1652                           ;incstack = 0
  1653  001C20  B078               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1654  001C22  D002               	goto	l2080
  1655  001C24  90D8               	bcf	status,0,c
  1656  001C26  0012               	return	
  1657  001C28                     l2080:
  1658  001C28  80D8               	bsf	status,0,c
  1659  001C2A  0012               	return		;funcret
  1660  001C2C                     __end_of_SIOcheckKrebut:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _SIOStartGame *****************
  1664 ;; Defined at:
  1665 ;;		line 20 in file "SIO.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  usuari          1    wreg     unsigned char 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  usuari          1    5[COMRAM] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/1
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1
  1679 ;;      Params:         0       0       0
  1680 ;;      Locals:         1       0       0
  1681 ;;      Temps:          0       0       0
  1682 ;;      Totals:         1       0       0
  1683 ;;Total ram usage:        1 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 2
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_motorJoc
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text4
  1694  001C74                     __ptext4:
  1695                           	callstack 0
  1696  001C74                     _SIOStartGame:
  1697                           	callstack 27
  1698                           
  1699                           ;incstack = 0
  1700                           ;SIOStartGame@usuari stored from wreg
  1701  001C74  6E68               	movwf	SIOStartGame@usuari^0,c
  1702                           
  1703                           ;SIO.c: 21:     usuariActualSIO = usuari;
  1704  001C76  C068  F051         	movff	SIOStartGame@usuari,_usuariActualSIO
  1705  001C7A  0012               	return		;funcret
  1706  001C7C                     __end_of_SIOStartGame:
  1707                           	callstack 0
  1708                           
  1709 ;; *************** function _SIONovaTecla *****************
  1710 ;; Defined at:
  1711 ;;		line 27 in file "SIO.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  tecla           1    wreg     char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  tecla           1    5[COMRAM] char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/1
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1
  1725 ;;      Params:         0       0       0
  1726 ;;      Locals:         1       0       0
  1727 ;;      Temps:          0       0       0
  1728 ;;      Totals:         1       0       0
  1729 ;;Total ram usage:        1 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 2
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_motorJoc
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text5
  1740  001C7C                     __ptext5:
  1741                           	callstack 0
  1742  001C7C                     _SIONovaTecla:
  1743                           	callstack 27
  1744                           
  1745                           ;incstack = 0
  1746                           ;SIONovaTecla@tecla stored from wreg
  1747  001C7C  6E68               	movwf	SIONovaTecla@tecla^0,c
  1748                           
  1749                           ;SIO.c: 28:     novaTeclaSIO = tecla;
  1750  001C7E  C068  F04F         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  1751  001C82  0012               	return		;funcret
  1752  001C84                     __end_of_SIONovaTecla:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _SIONovaDireccio *****************
  1756 ;; Defined at:
  1757 ;;		line 16 in file "SIO.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  num             1    wreg     unsigned char 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  num             1    5[COMRAM] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/1
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1
  1771 ;;      Params:         0       0       0
  1772 ;;      Locals:         1       0       0
  1773 ;;      Temps:          0       0       0
  1774 ;;      Totals:         1       0       0
  1775 ;;Total ram usage:        1 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; Hardware stack levels required when called: 2
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_motorJoc
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text6
  1786  001C84                     __ptext6:
  1787                           	callstack 0
  1788  001C84                     _SIONovaDireccio:
  1789                           	callstack 27
  1790                           
  1791                           ;incstack = 0
  1792                           ;SIONovaDireccio@num stored from wreg
  1793  001C84  6E68               	movwf	SIONovaDireccio@num^0,c
  1794                           
  1795                           ;SIO.c: 17:     direccio = num;
  1796  001C86  C068  F050         	movff	SIONovaDireccio@num,_direccio
  1797  001C8A  0012               	return		;funcret
  1798  001C8C                     __end_of_SIONovaDireccio:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _SIOJugant *****************
  1802 ;; Defined at:
  1803 ;;		line 30 in file "SIO.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;		None               void
  1810 ;; Registers used:
  1811 ;;		status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/1
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1
  1817 ;;      Params:         0       0       0
  1818 ;;      Locals:         0       0       0
  1819 ;;      Temps:          0       0       0
  1820 ;;      Totals:         0       0       0
  1821 ;;Total ram usage:        0 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 2
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_motorJoc
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text7
  1832  001C2C                     __ptext7:
  1833                           	callstack 0
  1834  001C2C                     _SIOJugant:
  1835                           	callstack 27
  1836                           
  1837                           ;SIO.c: 31:     return jugant;
  1838                           
  1839                           ;incstack = 0
  1840  001C2C  B478               	btfsc	(_jugant/(0+8))^0,_jugant& (0+7),c
  1841  001C2E  D002               	goto	l2068
  1842  001C30  90D8               	bcf	status,0,c
  1843  001C32  0012               	return	
  1844  001C34                     l2068:
  1845  001C34  80D8               	bsf	status,0,c
  1846  001C36  0012               	return		;funcret
  1847  001C38                     __end_of_SIOJugant:
  1848                           	callstack 0
  1849                           
  1850 ;; *************** function _HnoJugant *****************
  1851 ;; Defined at:
  1852 ;;		line 33 in file "Hora.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		None
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/1
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1
  1866 ;;      Params:         0       0       0
  1867 ;;      Locals:         0       0       0
  1868 ;;      Temps:          0       0       0
  1869 ;;      Totals:         0       0       0
  1870 ;;Total ram usage:        0 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 2
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_motorJoc
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text8
  1881  001D08                     __ptext8:
  1882                           	callstack 0
  1883  001D08                     _HnoJugant:
  1884                           	callstack 27
  1885                           
  1886                           ;Hora.c: 34:     jugant = 0;
  1887                           
  1888                           ;incstack = 0
  1889  001D08  9478               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  1890  001D0A  0012               	return		;funcret
  1891  001D0C                     __end_of_HnoJugant:
  1892                           	callstack 0
  1893                           
  1894 ;; *************** function _HNouSegon *****************
  1895 ;; Defined at:
  1896 ;;		line 21 in file "Hora.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;		None               void
  1903 ;; Registers used:
  1904 ;;		status,0
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/1
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1
  1910 ;;      Params:         0       0       0
  1911 ;;      Locals:         0       0       0
  1912 ;;      Temps:          0       0       0
  1913 ;;      Totals:         0       0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; Hardware stack levels required when called: 2
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_motorJoc
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text9
  1925  001C38                     __ptext9:
  1926                           	callstack 0
  1927  001C38                     _HNouSegon:
  1928                           	callstack 27
  1929                           
  1930                           ;Hora.c: 22:     return nouSegon;
  1931                           
  1932                           ;incstack = 0
  1933  001C38  B278               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  1934  001C3A  D002               	goto	l2048
  1935  001C3C  90D8               	bcf	status,0,c
  1936  001C3E  0012               	return	
  1937  001C40                     l2048:
  1938  001C40  80D8               	bsf	status,0,c
  1939  001C42  0012               	return		;funcret
  1940  001C44                     __end_of_HNouSegon:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _HJugant *****************
  1944 ;; Defined at:
  1945 ;;		line 36 in file "Hora.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		None
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/1
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1
  1959 ;;      Params:         0       0       0
  1960 ;;      Locals:         0       0       0
  1961 ;;      Temps:          0       0       0
  1962 ;;      Totals:         0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 2
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_motorJoc
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text10
  1974  001D0C                     __ptext10:
  1975                           	callstack 0
  1976  001D0C                     _HJugant:
  1977                           	callstack 27
  1978                           
  1979                           ;Hora.c: 37:     jugant = 1;
  1980                           
  1981                           ;incstack = 0
  1982  001D0C  8478               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  1983  001D0E  0012               	return		;funcret
  1984  001D10                     __end_of_HJugant:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _HGetTime *****************
  1988 ;; Defined at:
  1989 ;;		line 29 in file "Hora.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      PTR unsigned char 
  1996 ;; Registers used:
  1997 ;;		wreg
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/1
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1
  2003 ;;      Params:         2       0       0
  2004 ;;      Locals:         0       0       0
  2005 ;;      Temps:          0       0       0
  2006 ;;      Totals:         2       0       0
  2007 ;;Total ram usage:        2 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 2
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_motorJoc
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text11
  2018  001D10                     __ptext11:
  2019                           	callstack 0
  2020  001D10                     _HGetTime:
  2021                           	callstack 27
  2022                           
  2023                           ;Hora.c: 30:     return hora;
  2024                           
  2025                           ;incstack = 0
  2026  001D10  0E5D               	movlw	_hora& (0+255)
  2027  001D12  0012               	return		;funcret
  2028  001D14                     __end_of_HGetTime:
  2029                           	callstack 0
  2030                           
  2031 ;; *************** function _HClearNouSegon *****************
  2032 ;; Defined at:
  2033 ;;		line 25 in file "Hora.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		None
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/1
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1
  2047 ;;      Params:         0       0       0
  2048 ;;      Locals:         0       0       0
  2049 ;;      Temps:          0       0       0
  2050 ;;      Totals:         0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 2
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_motorJoc
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text12
  2062  001D14                     __ptext12:
  2063                           	callstack 0
  2064  001D14                     _HClearNouSegon:
  2065                           	callstack 27
  2066                           
  2067                           ;Hora.c: 26:     nouSegon = 0;
  2068                           
  2069                           ;incstack = 0
  2070  001D14  9278               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2071  001D16  0012               	return		;funcret
  2072  001D18                     __end_of_HClearNouSegon:
  2073                           	callstack 0
  2074                           
  2075 ;; *************** function _motorHora *****************
  2076 ;; Defined at:
  2077 ;;		line 40 in file "Hora.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/1
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1
  2091 ;;      Params:         0       0       0
  2092 ;;      Locals:         0       0       0
  2093 ;;      Temps:          2       0       0
  2094 ;;      Totals:         2       0       0
  2095 ;;Total ram usage:        2 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 3
  2098 ;; This function calls:
  2099 ;;		_TiGetTics
  2100 ;;		_TiResetTics
  2101 ;;		_playAltaveu
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text13
  2108  0014D6                     __ptext13:
  2109                           	callstack 0
  2110  0014D6                     _motorHora:
  2111                           	callstack 27
  2112                           
  2113                           ;Hora.c: 41:  static char state = 0;;Hora.c: 43:  switch(state) {
  2114                           
  2115                           ;incstack = 0
  2116  0014D6  D032               	goto	l4470
  2117  0014D8                     l4422:
  2118                           
  2119                           ;Hora.c: 45:    if (TiGetTics(timerHora) >= 1205) {
  2120  0014D8  500C               	movf	_timerHora^0,w,c
  2121  0014DA  EC5A  F00D         	call	_TiGetTics
  2122  0014DE  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  2123  0014E0  0012               	return	
  2124  0014E2  0EB5               	movlw	181
  2125  0014E4  5C68               	subwf	?_TiGetTics^0,w,c
  2126  0014E6  0E04               	movlw	4
  2127  0014E8  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  2128  0014EA  A0D8               	btfss	status,0,c
  2129  0014EC  0012               	return	
  2130                           
  2131                           ;Hora.c: 46:     TiResetTics(timerHora);
  2132  0014EE  500C               	movf	_timerHora^0,w,c
  2133  0014F0  ECD6  F00D         	call	_TiResetTics
  2134                           
  2135                           ;Hora.c: 47:     if(jugant){
  2136  0014F4  A478               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2137  0014F6  D01F               	goto	l4466
  2138                           
  2139                           ;Hora.c: 48:       nouSegon = 1;
  2140  0014F8  8278               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2141                           
  2142                           ;Hora.c: 50:      hora[4]--;
  2143  0014FA  0661               	decf	(_hora+4)^0,f,c
  2144                           
  2145                           ;Hora.c: 51:      if(hora[4] == ('0'-1)){
  2146  0014FC  0E2F               	movlw	47
  2147  0014FE  1861               	xorwf	(_hora+4)^0,w,c
  2148  001500  A4D8               	btfss	status,2,c
  2149  001502  D003               	goto	l4438
  2150                           
  2151                           ;Hora.c: 52:       hora[4] = '9';
  2152  001504  0E39               	movlw	57
  2153  001506  6E61               	movwf	(_hora+4)^0,c
  2154                           
  2155                           ;Hora.c: 53:       hora[3]--;
  2156  001508  0660               	decf	(_hora+3)^0,f,c
  2157  00150A                     l4438:
  2158                           
  2159                           ;Hora.c: 56:      if(hora[3] == ('0'-1)){
  2160  00150A  0E2F               	movlw	47
  2161  00150C  1860               	xorwf	(_hora+3)^0,w,c
  2162  00150E  A4D8               	btfss	status,2,c
  2163  001510  D003               	goto	l4444
  2164                           
  2165                           ;Hora.c: 57:       hora[3] = '5';
  2166  001512  0E35               	movlw	53
  2167  001514  6E60               	movwf	(_hora+3)^0,c
  2168                           
  2169                           ;Hora.c: 58:       hora[1]--;
  2170  001516  065E               	decf	(_hora+1)^0,f,c
  2171  001518                     l4444:
  2172                           
  2173                           ;Hora.c: 61:      if(hora[1] == ('0'-1)){
  2174  001518  0E2F               	movlw	47
  2175  00151A  185E               	xorwf	(_hora+1)^0,w,c
  2176  00151C  A4D8               	btfss	status,2,c
  2177  00151E  D003               	goto	l4450
  2178                           
  2179                           ;Hora.c: 62:       hora[1] = '9';
  2180  001520  0E39               	movlw	57
  2181  001522  6E5E               	movwf	(_hora+1)^0,c
  2182                           
  2183                           ;Hora.c: 63:       hora[0]--;
  2184  001524  065D               	decf	_hora^0,f,c
  2185  001526                     l4450:
  2186                           
  2187                           ;Hora.c: 70:      segons++;
  2188  001526  2A0B               	incf	_segons^0,f,c
  2189                           
  2190                           ;Hora.c: 71:      if(segons > 59){
  2191  001528  0E3B               	movlw	59
  2192  00152A  640B               	cpfsgt	_segons^0,c
  2193  00152C  D004               	goto	l4466
  2194                           
  2195                           ;Hora.c: 72:       playAltaveu();
  2196  00152E  EC8C  F00E         	call	_playAltaveu	;wreg free
  2197                           
  2198                           ;Hora.c: 73:       segons = 0;
  2199  001532  0E00               	movlw	0
  2200  001534  6E0B               	movwf	_segons^0,c
  2201  001536                     l4466:
  2202                           
  2203                           ;Hora.c: 76:     state = 0;
  2204  001536  0E00               	movlw	0
  2205  001538  6E0A               	movwf	motorHora@state^0,c
  2206  00153A  0012               	return	
  2207  00153C                     l4470:
  2208  00153C  500A               	movf	motorHora@state^0,w,c
  2209  00153E  6E6F               	movwf	??_motorHora^0,c
  2210  001540  6A70               	clrf	(??_motorHora+1)^0,c
  2211                           
  2212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2213                           ; Switch size 1, requested type "simple"
  2214                           ; Number of cases is 1, Range of values is 0 to 0
  2215                           ; switch strategies available:
  2216                           ; Name         Instructions Cycles
  2217                           ; simple_byte            4     3 (average)
  2218                           ;	Chosen strategy is simple_byte
  2219  001542  5070               	movf	(??_motorHora+1)^0,w,c
  2220  001544  0A00               	xorlw	0	; case 0
  2221  001546  A4D8               	btfss	status,2,c
  2222  001548  0012               	return	
  2223                           
  2224                           ; Switch size 1, requested type "simple"
  2225                           ; Number of cases is 1, Range of values is 0 to 0
  2226                           ; switch strategies available:
  2227                           ; Name         Instructions Cycles
  2228                           ; simple_byte            4     3 (average)
  2229                           ;	Chosen strategy is simple_byte
  2230  00154A  506F               	movf	??_motorHora^0,w,c
  2231  00154C  0A00               	xorlw	0	; case 0
  2232  00154E  A4D8               	btfss	status,2,c
  2233  001550  0012               	return	
  2234  001552  D7C2               	goto	l4422
  2235  001554                     __end_of_motorHora:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _playAltaveu *****************
  2239 ;; Defined at:
  2240 ;;		line 14 in file "Altaveu.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		None
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/1
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1
  2254 ;;      Params:         0       0       0
  2255 ;;      Locals:         0       0       0
  2256 ;;      Temps:          0       0       0
  2257 ;;      Totals:         0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 2
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_motorHora
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text14
  2269  001D18                     __ptext14:
  2270                           	callstack 0
  2271  001D18                     _playAltaveu:
  2272                           	callstack 27
  2273                           
  2274                           ;Altaveu.c: 15:     reproduir = 1;
  2275                           
  2276                           ;incstack = 0
  2277  001D18  8E78               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2278  001D1A  0012               	return		;funcret
  2279  001D1C                     __end_of_playAltaveu:
  2280                           	callstack 0
  2281                           
  2282 ;; *************** function _motorAltaveu *****************
  2283 ;; Defined at:
  2284 ;;		line 17 in file "Altaveu.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/1
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1
  2298 ;;      Params:         0       0       0
  2299 ;;      Locals:         0       0       0
  2300 ;;      Temps:          3       0       0
  2301 ;;      Totals:         3       0       0
  2302 ;;Total ram usage:        3 bytes
  2303 ;; Hardware stack levels used: 1
  2304 ;; Hardware stack levels required when called: 3
  2305 ;; This function calls:
  2306 ;;		_TiGetTics
  2307 ;;		_TiResetTics
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text15
  2314  0012BC                     __ptext15:
  2315                           	callstack 0
  2316  0012BC                     _motorAltaveu:
  2317                           	callstack 27
  2318                           
  2319                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  2320                           
  2321                           ;incstack = 0
  2322  0012BC  D048               	goto	l4884
  2323  0012BE                     l739:
  2324                           
  2325                           ;Altaveu.c: 22:    if (reproduir) {
  2326  0012BE  AE78               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2327  0012C0  0012               	return	
  2328                           
  2329                           ;Altaveu.c: 23:     nota = 1;
  2330  0012C2  0E01               	movlw	1
  2331  0012C4  6E1C               	movwf	_nota^0,c
  2332                           
  2333                           ;Altaveu.c: 24:     copsNota = 0;
  2334  0012C6  0E00               	movlw	0
  2335  0012C8  6E1A               	movwf	_copsNota^0,c
  2336                           
  2337                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  2338  0012CA  501B               	movf	_timerAltaveu^0,w,c
  2339  0012CC  ECD6  F00D         	call	_TiResetTics
  2340  0012D0                     l4848:
  2341                           
  2342                           ;Altaveu.c: 26:     state = 1;
  2343  0012D0  0E01               	movlw	1
  2344  0012D2  6E19               	movwf	motorAltaveu@state^0,c
  2345  0012D4  0012               	return	
  2346  0012D6                     l4850:
  2347                           
  2348                           ;Altaveu.c: 30:    if (nota > 5) {
  2349  0012D6  0E05               	movlw	5
  2350  0012D8  641C               	cpfsgt	_nota^0,c
  2351  0012DA  D004               	goto	l4856
  2352                           
  2353                           ;Altaveu.c: 31:     reproduir = 0;
  2354  0012DC  9E78               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2355                           
  2356                           ;Altaveu.c: 32:     state = 0;
  2357  0012DE  0E00               	movlw	0
  2358  0012E0  6E19               	movwf	motorAltaveu@state^0,c
  2359                           
  2360                           ;Altaveu.c: 33:    }
  2361  0012E2  0012               	return	
  2362  0012E4                     l4856:
  2363  0012E4  0EA8               	movlw	168
  2364  0012E6  181A               	xorwf	_copsNota^0,w,c
  2365  0012E8  A4D8               	btfss	status,2,c
  2366  0012EA  D004               	goto	l4864
  2367                           
  2368                           ;Altaveu.c: 35:     nota++;
  2369  0012EC  2A1C               	incf	_nota^0,f,c
  2370                           
  2371                           ;Altaveu.c: 36:     copsNota = 0;
  2372  0012EE  0E00               	movlw	0
  2373  0012F0  6E1A               	movwf	_copsNota^0,c
  2374  0012F2  D7EE               	goto	l4848
  2375  0012F4                     l4864:
  2376  0012F4  501B               	movf	_timerAltaveu^0,w,c
  2377  0012F6  EC5A  F00D         	call	_TiGetTics
  2378  0012FA  501C               	movf	_nota^0,w,c
  2379  0012FC  6E6F               	movwf	??_motorAltaveu^0,c
  2380  0012FE  6A70               	clrf	(??_motorAltaveu+1)^0,c
  2381  001300  5068               	movf	?_TiGetTics^0,w,c
  2382  001302  5C6F               	subwf	??_motorAltaveu^0,w,c
  2383  001304  5070               	movf	(??_motorAltaveu+1)^0,w,c
  2384  001306  0A80               	xorlw	128
  2385  001308  6E71               	movwf	(??_motorAltaveu+2)^0,c
  2386  00130A  5069               	movf	(?_TiGetTics+1)^0,w,c
  2387  00130C  0A80               	xorlw	128
  2388  00130E  5871               	subwfb	(??_motorAltaveu+2)^0,w,c
  2389  001310  B0D8               	btfsc	status,0,c
  2390  001312  0012               	return	
  2391                           
  2392                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  2393  001314  808A               	bsf	138,0,c	;volatile
  2394                           
  2395                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  2396  001316  501B               	movf	_timerAltaveu^0,w,c
  2397  001318  ECD6  F00D         	call	_TiResetTics
  2398                           
  2399                           ;Altaveu.c: 42:     state = 2;
  2400  00131C  0E02               	movlw	2
  2401  00131E  6E19               	movwf	motorAltaveu@state^0,c
  2402  001320  0012               	return	
  2403  001322                     l4872:
  2404                           
  2405                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  2406  001322  501B               	movf	_timerAltaveu^0,w,c
  2407  001324  EC5A  F00D         	call	_TiGetTics
  2408  001328  501C               	movf	_nota^0,w,c
  2409  00132A  6E6F               	movwf	??_motorAltaveu^0,c
  2410  00132C  6A70               	clrf	(??_motorAltaveu+1)^0,c
  2411  00132E  5068               	movf	?_TiGetTics^0,w,c
  2412  001330  5C6F               	subwf	??_motorAltaveu^0,w,c
  2413  001332  5070               	movf	(??_motorAltaveu+1)^0,w,c
  2414  001334  0A80               	xorlw	128
  2415  001336  6E71               	movwf	(??_motorAltaveu+2)^0,c
  2416  001338  5069               	movf	(?_TiGetTics+1)^0,w,c
  2417  00133A  0A80               	xorlw	128
  2418  00133C  5871               	subwfb	(??_motorAltaveu+2)^0,w,c
  2419  00133E  B0D8               	btfsc	status,0,c
  2420  001340  0012               	return	
  2421                           
  2422                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  2423  001342  908A               	bcf	138,0,c	;volatile
  2424                           
  2425                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  2426  001344  501B               	movf	_timerAltaveu^0,w,c
  2427  001346  ECD6  F00D         	call	_TiResetTics
  2428                           
  2429                           ;Altaveu.c: 49:     copsNota++;
  2430  00134A  2A1A               	incf	_copsNota^0,f,c
  2431  00134C  D7C1               	goto	l4848
  2432  00134E                     l4884:
  2433  00134E  5019               	movf	motorAltaveu@state^0,w,c
  2434  001350  6E6F               	movwf	??_motorAltaveu^0,c
  2435  001352  6A70               	clrf	(??_motorAltaveu+1)^0,c
  2436                           
  2437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2438                           ; Switch size 1, requested type "simple"
  2439                           ; Number of cases is 1, Range of values is 0 to 0
  2440                           ; switch strategies available:
  2441                           ; Name         Instructions Cycles
  2442                           ; simple_byte            4     3 (average)
  2443                           ;	Chosen strategy is simple_byte
  2444  001354  5070               	movf	(??_motorAltaveu+1)^0,w,c
  2445  001356  0A00               	xorlw	0	; case 0
  2446  001358  A4D8               	btfss	status,2,c
  2447  00135A  0012               	return	
  2448                           
  2449                           ; Switch size 1, requested type "simple"
  2450                           ; Number of cases is 3, Range of values is 0 to 2
  2451                           ; switch strategies available:
  2452                           ; Name         Instructions Cycles
  2453                           ; simple_byte           10     6 (average)
  2454                           ;	Chosen strategy is simple_byte
  2455  00135C  506F               	movf	??_motorAltaveu^0,w,c
  2456  00135E  0A00               	xorlw	0	; case 0
  2457  001360  B4D8               	btfsc	status,2,c
  2458  001362  D7AD               	goto	l739
  2459  001364  0A01               	xorlw	1	; case 1
  2460  001366  B4D8               	btfsc	status,2,c
  2461  001368  D7B6               	goto	l4850
  2462  00136A  0A03               	xorlw	3	; case 2
  2463  00136C  A4D8               	btfss	status,2,c
  2464  00136E  0012               	return	
  2465  001370  D7D8               	goto	l4872
  2466  001372                     __end_of_motorAltaveu:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function _menu *****************
  2470 ;; Defined at:
  2471 ;;		line 39 in file "Menu.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/1
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1
  2485 ;;      Params:         0       0       0
  2486 ;;      Locals:         0       0       0
  2487 ;;      Temps:          0       2       0
  2488 ;;      Totals:         0       2       0
  2489 ;;Total ram usage:        2 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 6
  2492 ;; This function calls:
  2493 ;;		_GLCDMostraMenu
  2494 ;;		_HActualitzaHora
  2495 ;;		_JJuguem
  2496 ;;		_JUsuari
  2497 ;;		_JnovaDireccio
  2498 ;;		_JnovaTecla
  2499 ;;		_LcClear
  2500 ;;		_LcGotoXY
  2501 ;;		_LcLliure
  2502 ;;		_LcNewString
  2503 ;;		_LcPutChar
  2504 ;;		_NoFerMenu
  2505 ;;		_SMSoff
  2506 ;;		_SMSon
  2507 ;;		_SiFerMenu
  2508 ;;		_TiGetTics
  2509 ;;		_TiResetTics
  2510 ;;		_URegister
  2511 ;;		_UcheckExists
  2512 ;;		_UcheckExistsGetError
  2513 ;;		_UcheckExistsNotFinished
  2514 ;;		_UenviaChar
  2515 ;;		_UenviaPas
  2516 ;;		_UgetNumUsuaris
  2517 ;;		_UgetUserName
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text16
  2524  0002C8                     __ptext16:
  2525                           	callstack 0
  2526  0002C8                     _menu:
  2527                           	callstack 24
  2528                           
  2529                           ;Menu.c: 40:  static char state = 0;;Menu.c: 42:  switch(state) {
  2530                           
  2531                           ;incstack = 0
  2532  0002C8  D1F6               	goto	l5860
  2533  0002CA                     l5502:
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;Menu.c: 44:    LcClear();
  2537  0002CA  EC82  F00D         	call	_LcClear	;wreg free
  2538                           
  2539                           ;Menu.c: 45:    LcNewString(loginText);
  2540  0002CE  0EB8               	movlw	low _loginText
  2541  0002D0  6E6B               	movwf	LcNewString@new_s^0,c
  2542  0002D2  6A6C               	clrf	(LcNewString@new_s+1)^0,c
  2543  0002D4  EC2E  F00E         	call	_LcNewString	;wreg free
  2544                           
  2545                           ;Menu.c: 46:    state = 1;
  2546  0002D8  0E01               	movlw	1
  2547  0002DA  6E24               	movwf	menu@state^0,c
  2548                           
  2549                           ;Menu.c: 47:   break;
  2550  0002DC  0012               	return	
  2551  0002DE                     l5508:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;Menu.c: 49:    if (LcLliure()) {
  2555  0002DE  EC34  F00E         	call	_LcLliure	;wreg free
  2556  0002E2  A0D8               	btfss	status,0,c
  2557  0002E4  0012               	return	
  2558                           
  2559                           ;Menu.c: 50:     LcGotoXY(0,1);
  2560  0002E6  0E01               	movlw	1
  2561  0002E8  6E70               	movwf	LcGotoXY@Row^0,c
  2562  0002EA  0E00               	movlw	0
  2563  0002EC  EC8A  F00C         	call	_LcGotoXY
  2564                           
  2565                           ;Menu.c: 51:     LcNewString(registerText);
  2566  0002F0  0EAD               	movlw	low _registerText
  2567  0002F2  6E6B               	movwf	LcNewString@new_s^0,c
  2568  0002F4  6A6C               	clrf	(LcNewString@new_s+1)^0,c
  2569  0002F6  EC2E  F00E         	call	_LcNewString	;wreg free
  2570                           
  2571                           ;Menu.c: 52:     NovaTecla = -1;
  2572  0002FA  6858               	setf	_NovaTecla^0,c
  2573                           
  2574                           ;Menu.c: 53:     state = 2;
  2575  0002FC  0E02               	movlw	2
  2576  0002FE  6E24               	movwf	menu@state^0,c
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;Menu.c: 55:   break;
  2580                           
  2581                           ;Menu.c: 54:    }
  2582  000300  0012               	return	
  2583  000302                     l5518:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;Menu.c: 57:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  2587  000302  0458               	decf	_NovaTecla^0,w,c
  2588  000304  A4D8               	btfss	status,2,c
  2589  000306  D009               	goto	l5526
  2590                           
  2591                           ; BSR set to: 0
  2592  000308  EC8E  F00E         	call	_UgetNumUsuaris	;wreg free
  2593  00030C  0900               	iorlw	0
  2594  00030E  B4D8               	btfsc	status,2,c
  2595  000310  D004               	goto	l5526
  2596                           
  2597                           ;Menu.c: 58:     loginNOTRegister = 1;
  2598  000312  8679               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2599  000314                     l5524:
  2600                           
  2601                           ;Menu.c: 59:     state = 3;
  2602  000314  0E03               	movlw	3
  2603  000316  6E24               	movwf	menu@state^0,c
  2604                           
  2605                           ;Menu.c: 60:    }
  2606  000318  0012               	return	
  2607  00031A                     l5526:
  2608  00031A  0E02               	movlw	2
  2609  00031C  1858               	xorwf	_NovaTecla^0,w,c
  2610  00031E  A4D8               	btfss	status,2,c
  2611  000320  0012               	return	
  2612                           
  2613                           ;Menu.c: 62:     loginNOTRegister = 0;
  2614  000322  9679               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2615  000324  D7F7               	goto	l5524
  2616  000326                     l487:
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;Menu.c: 67:    NovaTecla = -1;
  2620  000326  6858               	setf	_NovaTecla^0,c
  2621                           
  2622                           ;Menu.c: 68:    novaLletra = -1;
  2623  000328  6857               	setf	_novaLletra^0,c
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;Menu.c: 69:    LcClear();
  2627  00032A  EC82  F00D         	call	_LcClear	;wreg free
  2628                           
  2629                           ;Menu.c: 70:    LcNewString("USER: ");
  2630  00032E  0EBF               	movlw	low STR_1
  2631  000330  6E6B               	movwf	LcNewString@new_s^0,c
  2632  000332  506B               	movf	LcNewString@new_s^0,w,c
  2633  000334  A4D8               	btfss	status,2,c
  2634  000336  0E02               	movlw	high __smallconst
  2635  000338  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  2636  00033A  EC2E  F00E         	call	_LcNewString	;wreg free
  2637                           
  2638                           ;Menu.c: 71:    state = 4;
  2639  00033E  0E04               	movlw	4
  2640  000340  6E24               	movwf	menu@state^0,c
  2641                           
  2642                           ;Menu.c: 72:   break;
  2643  000342  0012               	return	
  2644  000344                     l5538:
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;Menu.c: 74:    if (LcLliure()) {
  2648  000344  EC34  F00E         	call	_LcLliure	;wreg free
  2649  000348  A0D8               	btfss	status,0,c
  2650  00034A  0012               	return	
  2651                           
  2652                           ;Menu.c: 75:     LcGotoXY(0,1);
  2653  00034C  0E01               	movlw	1
  2654  00034E  6E70               	movwf	LcGotoXY@Row^0,c
  2655  000350  0E00               	movlw	0
  2656  000352  EC8A  F00C         	call	_LcGotoXY
  2657                           
  2658                           ;Menu.c: 76:     LcNewString("PSWD: ");
  2659  000356  0EB8               	movlw	low STR_2
  2660  000358  6E6B               	movwf	LcNewString@new_s^0,c
  2661  00035A  506B               	movf	LcNewString@new_s^0,w,c
  2662  00035C  A4D8               	btfss	status,2,c
  2663  00035E  0E02               	movlw	high __smallconst
  2664  000360  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  2665  000362  EC2E  F00E         	call	_LcNewString	;wreg free
  2666                           
  2667                           ;Menu.c: 77:     state = 5;
  2668  000366  0E05               	movlw	5
  2669  000368  6E24               	movwf	menu@state^0,c
  2670  00036A  0012               	return	
  2671  00036C                     l5546:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;Menu.c: 81:    if (LcLliure()) {
  2675  00036C  EC34  F00E         	call	_LcLliure	;wreg free
  2676  000370  A0D8               	btfss	status,0,c
  2677  000372  0012               	return	
  2678                           
  2679                           ;Menu.c: 82:     LcGotoXY(6,0);
  2680  000374  0E00               	movlw	0
  2681  000376  6E70               	movwf	LcGotoXY@Row^0,c
  2682  000378  0E06               	movlw	6
  2683  00037A  EC8A  F00C         	call	_LcGotoXY
  2684                           
  2685                           ;Menu.c: 83:     SMSon();
  2686  00037E  EC7E  F00E         	call	_SMSon	;wreg free
  2687                           
  2688                           ;Menu.c: 84:     tmp =0;
  2689  000382  0E00               	movlw	0
  2690  000384  6E28               	movwf	_tmp^0,c
  2691  000386                     l5554:
  2692                           
  2693                           ;Menu.c: 85:     state = 6;
  2694  000386  0E06               	movlw	6
  2695  000388  6E24               	movwf	menu@state^0,c
  2696  00038A  0012               	return	
  2697  00038C                     l5556:
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;Menu.c: 89:    if (novaLletra > 47 && NovaTecla != 10) {
  2701  00038C  5057               	movf	_novaLletra^0,w,c
  2702  00038E  0A80               	xorlw	128
  2703  000390  0F50               	addlw	-176
  2704  000392  A0D8               	btfss	status,0,c
  2705  000394  D00F               	goto	l5566
  2706                           
  2707                           ; BSR set to: 0
  2708  000396  0E0A               	movlw	10
  2709  000398  1858               	xorwf	_NovaTecla^0,w,c
  2710  00039A  B4D8               	btfsc	status,2,c
  2711  00039C  D00B               	goto	l5566
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;Menu.c: 90:     LcPutChar(novaLletra);
  2715  00039E  5057               	movf	_novaLletra^0,w,c
  2716  0003A0  EC1E  F00C         	call	_LcPutChar
  2717                           
  2718                           ;Menu.c: 91:     UenviaChar(novaLletra,tmp);
  2719  0003A4  C028  F068         	movff	_tmp,UenviaChar@pos
  2720  0003A8  5057               	movf	_novaLletra^0,w,c
  2721  0003AA  EC08  F00E         	call	_UenviaChar
  2722  0003AE                     l5564:
  2723                           
  2724                           ;Menu.c: 92:     state = 7;
  2725  0003AE  0E07               	movlw	7
  2726  0003B0  6E24               	movwf	menu@state^0,c
  2727                           
  2728                           ;Menu.c: 93:    }
  2729  0003B2  0012               	return	
  2730  0003B4                     l5566:
  2731                           
  2732                           ; BSR set to: 0
  2733  0003B4  0E0B               	movlw	11
  2734  0003B6  1858               	xorwf	_NovaTecla^0,w,c
  2735  0003B8  A4D8               	btfss	status,2,c
  2736  0003BA  0012               	return	
  2737  0003BC  D7F8               	goto	l5564
  2738  0003BE                     l5570:
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;Menu.c: 99:    if (tmp != 7 && NovaTecla != 11) {
  2742  0003BE  0E07               	movlw	7
  2743  0003C0  1828               	xorwf	_tmp^0,w,c
  2744  0003C2  B4D8               	btfsc	status,2,c
  2745  0003C4  D008               	goto	l5582
  2746                           
  2747                           ; BSR set to: 0
  2748  0003C6  0E0B               	movlw	11
  2749  0003C8  1858               	xorwf	_NovaTecla^0,w,c
  2750  0003CA  B4D8               	btfsc	status,2,c
  2751  0003CC  D004               	goto	l5582
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;Menu.c: 100:     tmp++;
  2755  0003CE  2A28               	incf	_tmp^0,f,c
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;Menu.c: 101:     NovaTecla = -1;
  2759  0003D0  6858               	setf	_NovaTecla^0,c
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;Menu.c: 102:     novaLletra = -1;
  2763  0003D2  6857               	setf	_novaLletra^0,c
  2764  0003D4  D7D8               	goto	l5554
  2765  0003D6                     l5582:
  2766                           
  2767                           ; BSR set to: 0
  2768  0003D6  0E07               	movlw	7
  2769  0003D8  1828               	xorwf	_tmp^0,w,c
  2770  0003DA  B4D8               	btfsc	status,2,c
  2771  0003DC  D004               	goto	u5160
  2772                           
  2773                           ; BSR set to: 0
  2774  0003DE  0E0B               	movlw	11
  2775  0003E0  1858               	xorwf	_NovaTecla^0,w,c
  2776  0003E2  A4D8               	btfss	status,2,c
  2777  0003E4  0012               	return	
  2778  0003E6                     u5160:
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;Menu.c: 106:     LcGotoXY(6,1);
  2782  0003E6  0E01               	movlw	1
  2783  0003E8  6E70               	movwf	LcGotoXY@Row^0,c
  2784  0003EA  0E06               	movlw	6
  2785  0003EC  EC8A  F00C         	call	_LcGotoXY
  2786                           
  2787                           ;Menu.c: 107:     UenviaChar('\0',tmp);
  2788  0003F0  C028  F068         	movff	_tmp,UenviaChar@pos
  2789  0003F4  0E00               	movlw	0
  2790  0003F6  EC08  F00E         	call	_UenviaChar
  2791                           
  2792                           ;Menu.c: 108:     NovaTecla = -1;
  2793  0003FA  6858               	setf	_NovaTecla^0,c
  2794                           
  2795                           ;Menu.c: 109:     novaLletra = -1;
  2796  0003FC  6857               	setf	_novaLletra^0,c
  2797                           
  2798                           ;Menu.c: 110:     tmp = 0;
  2799  0003FE  0E00               	movlw	0
  2800  000400  6E28               	movwf	_tmp^0,c
  2801  000402                     l5596:
  2802                           
  2803                           ;Menu.c: 111:     state = 8;
  2804  000402  0E08               	movlw	8
  2805  000404  6E24               	movwf	menu@state^0,c
  2806  000406  0012               	return	
  2807  000408                     l5598:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;Menu.c: 115:    if (novaLletra > 47 && NovaTecla != 10) {
  2811  000408  5057               	movf	_novaLletra^0,w,c
  2812  00040A  0A80               	xorlw	128
  2813  00040C  0F50               	addlw	-176
  2814  00040E  A0D8               	btfss	status,0,c
  2815  000410  D00F               	goto	l5608
  2816                           
  2817                           ; BSR set to: 0
  2818  000412  0E0A               	movlw	10
  2819  000414  1858               	xorwf	_NovaTecla^0,w,c
  2820  000416  B4D8               	btfsc	status,2,c
  2821  000418  D00B               	goto	l5608
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;Menu.c: 116:     LcPutChar(novaLletra);
  2825  00041A  5057               	movf	_novaLletra^0,w,c
  2826  00041C  EC1E  F00C         	call	_LcPutChar
  2827                           
  2828                           ;Menu.c: 117:     UenviaPas(novaLletra,tmp);
  2829  000420  C028  F068         	movff	_tmp,UenviaPas@pos
  2830  000424  5057               	movf	_novaLletra^0,w,c
  2831  000426  EC00  F00E         	call	_UenviaPas
  2832  00042A                     l5606:
  2833                           
  2834                           ;Menu.c: 118:     state = 9;
  2835  00042A  0E09               	movlw	9
  2836  00042C  6E24               	movwf	menu@state^0,c
  2837                           
  2838                           ;Menu.c: 119:    }
  2839  00042E  0012               	return	
  2840  000430                     l5608:
  2841                           
  2842                           ; BSR set to: 0
  2843  000430  0E0B               	movlw	11
  2844  000432  1858               	xorwf	_NovaTecla^0,w,c
  2845  000434  A4D8               	btfss	status,2,c
  2846  000436  0012               	return	
  2847  000438  D7F8               	goto	l5606
  2848  00043A                     l5612:
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;Menu.c: 125:    if (tmp != 7 && NovaTecla != 11) {
  2852  00043A  0E07               	movlw	7
  2853  00043C  1828               	xorwf	_tmp^0,w,c
  2854  00043E  B4D8               	btfsc	status,2,c
  2855  000440  D008               	goto	l5624
  2856                           
  2857                           ; BSR set to: 0
  2858  000442  0E0B               	movlw	11
  2859  000444  1858               	xorwf	_NovaTecla^0,w,c
  2860  000446  B4D8               	btfsc	status,2,c
  2861  000448  D004               	goto	l5624
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;Menu.c: 126:     tmp++;
  2865  00044A  2A28               	incf	_tmp^0,f,c
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;Menu.c: 127:     NovaTecla = -1;
  2869  00044C  6858               	setf	_NovaTecla^0,c
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;Menu.c: 128:     novaLletra = -1;
  2873  00044E  6857               	setf	_novaLletra^0,c
  2874  000450  D7D8               	goto	l5596
  2875  000452                     l5624:
  2876                           
  2877                           ; BSR set to: 0
  2878  000452  0E07               	movlw	7
  2879  000454  1828               	xorwf	_tmp^0,w,c
  2880  000456  B4D8               	btfsc	status,2,c
  2881  000458  D004               	goto	u5230
  2882                           
  2883                           ; BSR set to: 0
  2884  00045A  0E0B               	movlw	11
  2885  00045C  1858               	xorwf	_NovaTecla^0,w,c
  2886  00045E  A4D8               	btfss	status,2,c
  2887  000460  0012               	return	
  2888  000462                     u5230:
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;Menu.c: 132:     UenviaPas('\0',tmp);
  2892  000462  C028  F068         	movff	_tmp,UenviaPas@pos
  2893  000466  0E00               	movlw	0
  2894  000468  EC00  F00E         	call	_UenviaPas
  2895                           
  2896                           ;Menu.c: 133:     NovaTecla = -1;
  2897  00046C  6858               	setf	_NovaTecla^0,c
  2898                           
  2899                           ;Menu.c: 134:     novaLletra = -1;
  2900  00046E  6857               	setf	_novaLletra^0,c
  2901                           
  2902                           ;Menu.c: 135:     tmp = 0;
  2903  000470  0E00               	movlw	0
  2904  000472  6E28               	movwf	_tmp^0,c
  2905                           
  2906                           ;Menu.c: 136:     UcheckExists();
  2907  000474  EC90  F00E         	call	_UcheckExists	;wreg free
  2908                           
  2909                           ;Menu.c: 137:     SMSoff();
  2910  000478  EC81  F00E         	call	_SMSoff	;wreg free
  2911                           
  2912                           ;Menu.c: 138:     state = 10;
  2913  00047C  0E0A               	movlw	10
  2914  00047E  6E24               	movwf	menu@state^0,c
  2915  000480  0012               	return	
  2916  000482                     l5642:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;Menu.c: 142:    if (!UcheckExistsNotFinished()) {
  2920  000482  EC22  F00E         	call	_UcheckExistsNotFinished	;wreg free
  2921  000486  B0D8               	btfsc	status,0,c
  2922  000488  0012               	return	
  2923                           
  2924                           ;Menu.c: 143:     indexUsuari = UcheckExistsGetError();
  2925  00048A  EC46  F00E         	call	_UcheckExistsGetError	;wreg free
  2926  00048E  A0D8               	btfss	status,0,c
  2927  000490  D002               	goto	u5250
  2928  000492  0E01               	movlw	1
  2929  000494  D001               	goto	u5260
  2930  000496                     u5250:
  2931  000496  0E00               	movlw	0
  2932  000498                     u5260:
  2933  000498  6E25               	movwf	_indexUsuari^0,c
  2934                           
  2935                           ;Menu.c: 144:     state = 11;
  2936  00049A  0E0B               	movlw	11
  2937  00049C  6E24               	movwf	menu@state^0,c
  2938  00049E  0012               	return	
  2939  0004A0                     l5648:
  2940                           
  2941                           ;Menu.c: 149:     state = 12;
  2942  0004A0  0E0C               	movlw	12
  2943  0004A2  6E24               	movwf	menu@state^0,c
  2944                           
  2945                           ;Menu.c: 150:    }
  2946  0004A4  0012               	return	
  2947  0004A6                     l5654:
  2948                           
  2949                           ;Menu.c: 153:     state = 0;
  2950  0004A6  0E00               	movlw	0
  2951  0004A8  6E24               	movwf	menu@state^0,c
  2952                           
  2953                           ;Menu.c: 154:    }
  2954  0004AA  0012               	return	
  2955  0004AC                     l5666:
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;Menu.c: 164:    LcClear();
  2959  0004AC  EC82  F00D         	call	_LcClear	;wreg free
  2960                           
  2961                           ;Menu.c: 165:    SiFerMenu();
  2962  0004B0  EC94  F00E         	call	_SiFerMenu	;wreg free
  2963                           
  2964                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  2965  0004B4  5026               	movf	_menuDalt^0,w,c
  2966  0004B6  EC28  F00E         	call	_GLCDMostraMenu
  2967                           
  2968                           ;Menu.c: 167:    novaDireccio = -1;
  2969  0004BA  6856               	setf	_novaDireccio^0,c
  2970                           
  2971                           ;Menu.c: 168:    NovaTecla = -1;
  2972  0004BC  6858               	setf	_NovaTecla^0,c
  2973                           
  2974                           ;Menu.c: 169:    state = 13;
  2975  0004BE  0E0D               	movlw	13
  2976  0004C0  6E24               	movwf	menu@state^0,c
  2977                           
  2978                           ;Menu.c: 170:   break;
  2979  0004C2  0012               	return	
  2980  0004C4                     l5678:
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;Menu.c: 172:    if (novaDireccio == 8) {
  2984  0004C4  0E08               	movlw	8
  2985  0004C6  1856               	xorwf	_novaDireccio^0,w,c
  2986  0004C8  A4D8               	btfss	status,2,c
  2987  0004CA  D005               	goto	l5686
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  2991  0004CC  0E04               	movlw	4
  2992  0004CE  6026               	cpfslt	_menuDalt^0,c
  2993  0004D0  D7E7               	goto	l5648
  2994                           
  2995                           ; BSR set to: 0
  2996  0004D2  2A26               	incf	_menuDalt^0,f,c
  2997  0004D4  D7E5               	goto	l5648
  2998  0004D6                     l5686:
  2999                           
  3000                           ; BSR set to: 0
  3001  0004D6  0E02               	movlw	2
  3002  0004D8  1856               	xorwf	_novaDireccio^0,w,c
  3003  0004DA  A4D8               	btfss	status,2,c
  3004  0004DC  D005               	goto	l5694
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  3008  0004DE  5026               	movf	_menuDalt^0,w,c
  3009  0004E0  B4D8               	btfsc	status,2,c
  3010  0004E2  D7DE               	goto	l5648
  3011                           
  3012                           ; BSR set to: 0
  3013  0004E4  0626               	decf	_menuDalt^0,f,c
  3014  0004E6  D7DC               	goto	l5648
  3015  0004E8                     l5694:
  3016                           
  3017                           ; BSR set to: 0
  3018  0004E8  0E0B               	movlw	11
  3019  0004EA  1858               	xorwf	_NovaTecla^0,w,c
  3020  0004EC  A4D8               	btfss	status,2,c
  3021  0004EE  D013               	goto	l5706
  3022                           
  3023                           ; BSR set to: 0
  3024  0004F0  0E03               	movlw	3
  3025  0004F2  1826               	xorwf	_menuDalt^0,w,c
  3026  0004F4  A4D8               	btfss	status,2,c
  3027  0004F6  D00F               	goto	l5706
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;Menu.c: 181:     NoFerMenu();
  3031  0004F8  EC96  F00E         	call	_NoFerMenu	;wreg free
  3032                           
  3033                           ;Menu.c: 182:     LcClear();
  3034  0004FC  EC82  F00D         	call	_LcClear	;wreg free
  3035                           
  3036                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  3037  000500  0EAF               	movlw	low STR_3
  3038  000502  6E6B               	movwf	LcNewString@new_s^0,c
  3039  000504  506B               	movf	LcNewString@new_s^0,w,c
  3040  000506  A4D8               	btfss	status,2,c
  3041  000508  0E02               	movlw	high __smallconst
  3042  00050A  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  3043  00050C  EC2E  F00E         	call	_LcNewString	;wreg free
  3044                           
  3045                           ;Menu.c: 184:     state = 14;
  3046  000510  0E0E               	movlw	14
  3047  000512  6E24               	movwf	menu@state^0,c
  3048                           
  3049                           ;Menu.c: 185:    }
  3050  000514  0012               	return	
  3051  000516                     l5706:
  3052                           
  3053                           ; BSR set to: 0
  3054  000516  0E0B               	movlw	11
  3055  000518  1858               	xorwf	_NovaTecla^0,w,c
  3056  00051A  A4D8               	btfss	status,2,c
  3057  00051C  D013               	goto	l5720
  3058                           
  3059                           ; BSR set to: 0
  3060  00051E  0426               	decf	_menuDalt^0,w,c
  3061  000520  A4D8               	btfss	status,2,c
  3062  000522  D010               	goto	l5720
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;Menu.c: 187:     LcClear();
  3066  000524  EC82  F00D         	call	_LcClear	;wreg free
  3067                           
  3068                           ;Menu.c: 188:     NoFerMenu();
  3069  000528  EC96  F00E         	call	_NoFerMenu	;wreg free
  3070                           
  3071                           ;Menu.c: 189:     LcNewString("Modify Time:");
  3072  00052C  0EA2               	movlw	low STR_4
  3073  00052E  6E6B               	movwf	LcNewString@new_s^0,c
  3074  000530  506B               	movf	LcNewString@new_s^0,w,c
  3075  000532  A4D8               	btfss	status,2,c
  3076  000534  0E02               	movlw	high __smallconst
  3077  000536  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  3078  000538  EC2E  F00E         	call	_LcNewString	;wreg free
  3079                           
  3080                           ;Menu.c: 190:     NovaTecla = -1;
  3081  00053C  6858               	setf	_NovaTecla^0,c
  3082                           
  3083                           ;Menu.c: 191:     state = 16;
  3084  00053E  0E10               	movlw	16
  3085  000540  6E24               	movwf	menu@state^0,c
  3086                           
  3087                           ;Menu.c: 192:    }
  3088  000542  0012               	return	
  3089  000544                     l5720:
  3090                           
  3091                           ; BSR set to: 0
  3092  000544  5026               	movf	_menuDalt^0,w,c
  3093  000546  A4D8               	btfss	status,2,c
  3094  000548  0012               	return	
  3095                           
  3096                           ; BSR set to: 0
  3097  00054A  0E0B               	movlw	11
  3098  00054C  1858               	xorwf	_NovaTecla^0,w,c
  3099  00054E  A4D8               	btfss	status,2,c
  3100  000550  0012               	return	
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;Menu.c: 194:     NoFerMenu();
  3104  000552  EC96  F00E         	call	_NoFerMenu	;wreg free
  3105                           
  3106                           ;Menu.c: 195:     NovaTecla = -1;
  3107  000556  6858               	setf	_NovaTecla^0,c
  3108                           
  3109                           ;Menu.c: 196:     LcClear();
  3110  000558  EC82  F00D         	call	_LcClear	;wreg free
  3111                           
  3112                           ;Menu.c: 197:     LcNewString("TIME REMAINING:");
  3113  00055C  0E92               	movlw	low STR_5
  3114  00055E  6E6B               	movwf	LcNewString@new_s^0,c
  3115  000560  506B               	movf	LcNewString@new_s^0,w,c
  3116  000562  A4D8               	btfss	status,2,c
  3117  000564  0E02               	movlw	high __smallconst
  3118  000566  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  3119  000568  EC2E  F00E         	call	_LcNewString	;wreg free
  3120                           
  3121                           ;Menu.c: 198:     JJuguem(indexUsuari);
  3122  00056C  5025               	movf	_indexUsuari^0,w,c
  3123  00056E  EC52  F00E         	call	_JJuguem
  3124  000572                     l5734:
  3125                           
  3126                           ;Menu.c: 199:     state = 21;
  3127  000572  0E15               	movlw	21
  3128  000574  6E24               	movwf	menu@state^0,c
  3129  000576  0012               	return	
  3130  000578                     l5736:
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;Menu.c: 203:    if (LcLliure()) {
  3134  000578  EC34  F00E         	call	_LcLliure	;wreg free
  3135  00057C  A0D8               	btfss	status,0,c
  3136  00057E  0012               	return	
  3137                           
  3138                           ;Menu.c: 204:     LcNewString(UgetUserName(indexUsuari));
  3139  000580  5025               	movf	_indexUsuari^0,w,c
  3140  000582  ECED  F00D         	call	_UgetUserName
  3141  000586  C068  F06B         	movff	?_UgetUserName,LcNewString@new_s
  3142  00058A  C069  F06C         	movff	?_UgetUserName+1,LcNewString@new_s+1
  3143  00058E  EC2E  F00E         	call	_LcNewString	;wreg free
  3144                           
  3145                           ;Menu.c: 205:     TiResetTics(timerMenu);
  3146  000592  5027               	movf	_timerMenu^0,w,c
  3147  000594  ECD6  F00D         	call	_TiResetTics
  3148                           
  3149                           ;Menu.c: 206:     state = 15;
  3150  000598  0E0F               	movlw	15
  3151  00059A  6E24               	movwf	menu@state^0,c
  3152  00059C  0012               	return	
  3153  00059E                     l5744:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;Menu.c: 210:    if (TiGetTics(timerMenu) > 2410) {
  3157  00059E  5027               	movf	_timerMenu^0,w,c
  3158  0005A0  EC5A  F00D         	call	_TiGetTics
  3159  0005A4  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  3160  0005A6  0012               	return	
  3161  0005A8  0E6B               	movlw	107
  3162  0005AA  5C68               	subwf	?_TiGetTics^0,w,c
  3163  0005AC  0E09               	movlw	9
  3164  0005AE  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  3165  0005B0  A0D8               	btfss	status,0,c
  3166  0005B2  0012               	return	
  3167  0005B4  D778               	goto	l5654
  3168  0005B6                     l5748:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;Menu.c: 215:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3172  0005B6  EC34  F00E         	call	_LcLliure	;wreg free
  3173  0005BA  B0D8               	btfsc	status,0,c
  3174  0005BC  BE58               	btfsc	_NovaTecla^0,7,c
  3175  0005BE  D047               	goto	l5814
  3176  0005C0  5058               	movf	_NovaTecla^0,w,c
  3177  0005C2  0A80               	xorlw	128
  3178  0005C4  0F76               	addlw	-138
  3179  0005C6  B0D8               	btfsc	status,0,c
  3180  0005C8  D042               	goto	l5814
  3181                           
  3182                           ;Menu.c: 216:     LcGotoXY(0,1);
  3183  0005CA  0E01               	movlw	1
  3184  0005CC  6E70               	movwf	LcGotoXY@Row^0,c
  3185  0005CE  0E00               	movlw	0
  3186  0005D0  EC8A  F00C         	call	_LcGotoXY
  3187                           
  3188                           ;Menu.c: 217:     horaTmp[0] = NovaTecla+48;
  3189  0005D4  5058               	movf	_NovaTecla^0,w,c
  3190  0005D6  0F30               	addlw	48
  3191  0005D8  6E3F               	movwf	_horaTmp^0,c
  3192                           
  3193                           ;Menu.c: 218:     LcPutChar(horaTmp[0]);
  3194  0005DA  503F               	movf	_horaTmp^0,w,c
  3195  0005DC  EC1E  F00C         	call	_LcPutChar
  3196                           
  3197                           ;Menu.c: 219:     NovaTecla = -1;
  3198  0005E0  6858               	setf	_NovaTecla^0,c
  3199                           
  3200                           ;Menu.c: 220:     state = 17;
  3201  0005E2  0E11               	movlw	17
  3202  0005E4                     L1:
  3203  0005E4  6E24               	movwf	menu@state^0,c
  3204                           
  3205                           ;Menu.c: 221:    }
  3206  0005E6  0012               	return	
  3207  0005E8                     l5768:
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;Menu.c: 227:    if (NovaTecla > -1 && NovaTecla < 10) {
  3211  0005E8  BE58               	btfsc	_NovaTecla^0,7,c
  3212  0005EA  D031               	goto	l5814
  3213                           
  3214                           ; BSR set to: 0
  3215  0005EC  5058               	movf	_NovaTecla^0,w,c
  3216  0005EE  0A80               	xorlw	128
  3217  0005F0  0F76               	addlw	-138
  3218  0005F2  B0D8               	btfsc	status,0,c
  3219  0005F4  D02C               	goto	l5814
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;Menu.c: 228:     horaTmp[1] = NovaTecla+48;
  3223  0005F6  5058               	movf	_NovaTecla^0,w,c
  3224  0005F8  0F30               	addlw	48
  3225  0005FA  6E40               	movwf	(_horaTmp+1)^0,c
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;Menu.c: 229:     LcPutChar(horaTmp[1]);
  3229  0005FC  5040               	movf	(_horaTmp+1)^0,w,c
  3230  0005FE  EC1E  F00C         	call	_LcPutChar
  3231                           
  3232                           ;Menu.c: 230:     NovaTecla = -1;
  3233  000602  6858               	setf	_NovaTecla^0,c
  3234                           
  3235                           ;Menu.c: 231:     LcPutChar(':');
  3236  000604  0E3A               	movlw	58
  3237  000606  EC1E  F00C         	call	_LcPutChar
  3238                           
  3239                           ;Menu.c: 232:     state = 18;
  3240  00060A  0E12               	movlw	18
  3241  00060C  D7EB               	goto	L1
  3242  00060E                     l5786:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;Menu.c: 239:    if (NovaTecla > -1 && NovaTecla < 10) {
  3246  00060E  BE58               	btfsc	_NovaTecla^0,7,c
  3247  000610  D01E               	goto	l5814
  3248                           
  3249                           ; BSR set to: 0
  3250  000612  5058               	movf	_NovaTecla^0,w,c
  3251  000614  0A80               	xorlw	128
  3252  000616  0F76               	addlw	-138
  3253  000618  B0D8               	btfsc	status,0,c
  3254  00061A  D019               	goto	l5814
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;Menu.c: 240:     horaTmp[2] = NovaTecla+48;
  3258  00061C  5058               	movf	_NovaTecla^0,w,c
  3259  00061E  0F30               	addlw	48
  3260  000620  6E41               	movwf	(_horaTmp+2)^0,c
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;Menu.c: 241:     LcPutChar(horaTmp[2]);
  3264  000622  5041               	movf	(_horaTmp+2)^0,w,c
  3265  000624  EC1E  F00C         	call	_LcPutChar
  3266                           
  3267                           ;Menu.c: 242:     NovaTecla = -1;
  3268  000628  6858               	setf	_NovaTecla^0,c
  3269                           
  3270                           ;Menu.c: 243:     state = 19;
  3271  00062A  0E13               	movlw	19
  3272  00062C  D7DB               	goto	L1
  3273  00062E                     l5802:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;Menu.c: 250:    if (NovaTecla > -1 && NovaTecla < 10) {
  3277  00062E  BE58               	btfsc	_NovaTecla^0,7,c
  3278  000630  D00E               	goto	l5814
  3279                           
  3280                           ; BSR set to: 0
  3281  000632  5058               	movf	_NovaTecla^0,w,c
  3282  000634  0A80               	xorlw	128
  3283  000636  0F76               	addlw	-138
  3284  000638  B0D8               	btfsc	status,0,c
  3285  00063A  D009               	goto	l5814
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;Menu.c: 251:     horaTmp[3] = NovaTecla+48;
  3289  00063C  5058               	movf	_NovaTecla^0,w,c
  3290  00063E  0F30               	addlw	48
  3291  000640  6E42               	movwf	(_horaTmp+3)^0,c
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;Menu.c: 252:     LcPutChar(horaTmp[3]);
  3295  000642  5042               	movf	(_horaTmp+3)^0,w,c
  3296  000644  EC1E  F00C         	call	_LcPutChar
  3297                           
  3298                           ;Menu.c: 253:     NovaTecla = -1;
  3299  000648  6858               	setf	_NovaTecla^0,c
  3300                           
  3301                           ;Menu.c: 254:     state = 20;
  3302  00064A  0E14               	movlw	20
  3303  00064C  D7CB               	goto	L1
  3304  00064E                     l5814:
  3305                           
  3306                           ; BSR set to: 0
  3307  00064E  0E0A               	movlw	10
  3308  000650  1858               	xorwf	_NovaTecla^0,w,c
  3309  000652  A4D8               	btfss	status,2,c
  3310  000654  0012               	return	
  3311  000656  D724               	goto	l5648
  3312  000658                     l5818:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;Menu.c: 261:    if (NovaTecla == 11) {
  3316  000658  0E0B               	movlw	11
  3317  00065A  1858               	xorwf	_NovaTecla^0,w,c
  3318  00065C  A4D8               	btfss	status,2,c
  3319  00065E  D7F7               	goto	l5814
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;Menu.c: 262:     HActualitzaHora(horaTmp);
  3323  000660  0E3F               	movlw	low _horaTmp
  3324  000662  6E68               	movwf	HActualitzaHora@nova^0,c
  3325  000664  ECE0  F00C         	call	_HActualitzaHora	;wreg free
  3326                           
  3327                           ;Menu.c: 263:     NovaTecla = -1;
  3328  000668  6858               	setf	_NovaTecla^0,c
  3329  00066A  D71A               	goto	l5648
  3330  00066C                     l5830:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;Menu.c: 271:    if (NovaTecla == 11 && JUsuari() && LcLliure()) {
  3334  00066C  0E0B               	movlw	11
  3335  00066E  1858               	xorwf	_NovaTecla^0,w,c
  3336  000670  A4D8               	btfss	status,2,c
  3337  000672  D00E               	goto	l5840
  3338                           
  3339                           ; BSR set to: 0
  3340  000674  EC98  F00E         	call	_JUsuari	;wreg free
  3341  000678  0900               	iorlw	0
  3342  00067A  B4D8               	btfsc	status,2,c
  3343  00067C  D009               	goto	l5840
  3344  00067E  EC34  F00E         	call	_LcLliure	;wreg free
  3345  000682  A0D8               	btfss	status,0,c
  3346  000684  D005               	goto	l5840
  3347                           
  3348                           ;Menu.c: 272:     LcClear();
  3349  000686  EC82  F00D         	call	_LcClear	;wreg free
  3350                           
  3351                           ;Menu.c: 273:     state = 22;
  3352  00068A  0E16               	movlw	22
  3353  00068C  6E24               	movwf	menu@state^0,c
  3354                           
  3355                           ;Menu.c: 274:    }
  3356  00068E  0012               	return	
  3357  000690                     l5840:
  3358  000690  BE58               	btfsc	_NovaTecla^0,7,c
  3359  000692  D00A               	goto	l5850
  3360  000694  5058               	movf	_NovaTecla^0,w,c
  3361  000696  0A80               	xorlw	128
  3362  000698  0F76               	addlw	-138
  3363  00069A  B0D8               	btfsc	status,0,c
  3364  00069C  D005               	goto	l5850
  3365                           
  3366                           ;Menu.c: 276:     JnovaTecla(NovaTecla);
  3367  00069E  5058               	movf	_NovaTecla^0,w,c
  3368  0006A0  EC4A  F00E         	call	_JnovaTecla
  3369                           
  3370                           ;Menu.c: 277:     NovaTecla = -1;
  3371  0006A4  6858               	setf	_NovaTecla^0,c
  3372  0006A6  D765               	goto	l5734
  3373  0006A8                     l5850:
  3374  0006A8  BE56               	btfsc	_novaDireccio^0,7,c
  3375  0006AA  0012               	return	
  3376                           
  3377                           ;Menu.c: 281:     JnovaDireccio(novaDireccio);
  3378  0006AC  5056               	movf	_novaDireccio^0,w,c
  3379  0006AE  EC4E  F00E         	call	_JnovaDireccio
  3380                           
  3381                           ;Menu.c: 282:     novaDireccio = -1;
  3382  0006B2  6856               	setf	_novaDireccio^0,c
  3383  0006B4  D75E               	goto	l5734
  3384  0006B6                     l5860:
  3385  0006B6  5024               	movf	menu@state^0,w,c
  3386  0006B8  0100               	movlb	0	; () banked
  3387  0006BA  6FC0               	movwf	??_menu& (0+255),b
  3388  0006BC  6BC1               	clrf	(??_menu+1)& (0+255),b
  3389                           
  3390                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3391                           ; Switch size 1, requested type "simple"
  3392                           ; Number of cases is 1, Range of values is 0 to 0
  3393                           ; switch strategies available:
  3394                           ; Name         Instructions Cycles
  3395                           ; simple_byte            4     3 (average)
  3396                           ;	Chosen strategy is simple_byte
  3397  0006BE  51C1               	movf	(??_menu+1)& (0+255),w,b
  3398  0006C0  0A00               	xorlw	0	; case 0
  3399  0006C2  A4D8               	btfss	status,2,c
  3400  0006C4  0012               	return	
  3401                           
  3402                           ; BSR set to: 0
  3403                           ; Switch size 1, requested type "simple"
  3404                           ; Number of cases is 23, Range of values is 0 to 22
  3405                           ; switch strategies available:
  3406                           ; Name         Instructions Cycles
  3407                           ; simple_byte           70    36 (average)
  3408                           ;	Chosen strategy is simple_byte
  3409  0006C6  51C0               	movf	??_menu& (0+255),w,b
  3410  0006C8  0A00               	xorlw	0	; case 0
  3411  0006CA  B4D8               	btfsc	status,2,c
  3412  0006CC  D5FE               	goto	l5502
  3413  0006CE  0A01               	xorlw	1	; case 1
  3414  0006D0  B4D8               	btfsc	status,2,c
  3415  0006D2  D605               	goto	l5508
  3416  0006D4  0A03               	xorlw	3	; case 2
  3417  0006D6  B4D8               	btfsc	status,2,c
  3418  0006D8  D614               	goto	l5518
  3419  0006DA  0A01               	xorlw	1	; case 3
  3420  0006DC  B4D8               	btfsc	status,2,c
  3421  0006DE  D623               	goto	l487
  3422  0006E0  0A07               	xorlw	7	; case 4
  3423  0006E2  B4D8               	btfsc	status,2,c
  3424  0006E4  D62F               	goto	l5538
  3425  0006E6  0A01               	xorlw	1	; case 5
  3426  0006E8  B4D8               	btfsc	status,2,c
  3427  0006EA  D640               	goto	l5546
  3428  0006EC  0A03               	xorlw	3	; case 6
  3429  0006EE  B4D8               	btfsc	status,2,c
  3430  0006F0  D64D               	goto	l5556
  3431  0006F2  0A01               	xorlw	1	; case 7
  3432  0006F4  B4D8               	btfsc	status,2,c
  3433  0006F6  D663               	goto	l5570
  3434  0006F8  0A0F               	xorlw	15	; case 8
  3435  0006FA  B4D8               	btfsc	status,2,c
  3436  0006FC  D685               	goto	l5598
  3437  0006FE  0A01               	xorlw	1	; case 9
  3438  000700  B4D8               	btfsc	status,2,c
  3439  000702  D69B               	goto	l5612
  3440  000704  0A03               	xorlw	3	; case 10
  3441  000706  B4D8               	btfsc	status,2,c
  3442  000708  D6BC               	goto	l5642
  3443  00070A  0A01               	xorlw	1	; case 11
  3444  00070C  B4D8               	btfsc	status,2,c
  3445  00070E  D6C8               	goto	l5648
  3446  000710  0A07               	xorlw	7	; case 12
  3447  000712  B4D8               	btfsc	status,2,c
  3448  000714  D6CB               	goto	l5666
  3449  000716  0A01               	xorlw	1	; case 13
  3450  000718  B4D8               	btfsc	status,2,c
  3451  00071A  D6D4               	goto	l5678
  3452  00071C  0A03               	xorlw	3	; case 14
  3453  00071E  B4D8               	btfsc	status,2,c
  3454  000720  D72B               	goto	l5736
  3455  000722  0A01               	xorlw	1	; case 15
  3456  000724  B4D8               	btfsc	status,2,c
  3457  000726  D73B               	goto	l5744
  3458  000728  0A1F               	xorlw	31	; case 16
  3459  00072A  B4D8               	btfsc	status,2,c
  3460  00072C  D744               	goto	l5748
  3461  00072E  0A01               	xorlw	1	; case 17
  3462  000730  B4D8               	btfsc	status,2,c
  3463  000732  D75A               	goto	l5768
  3464  000734  0A03               	xorlw	3	; case 18
  3465  000736  B4D8               	btfsc	status,2,c
  3466  000738  D76A               	goto	l5786
  3467  00073A  0A01               	xorlw	1	; case 19
  3468  00073C  B4D8               	btfsc	status,2,c
  3469  00073E  D777               	goto	l5802
  3470  000740  0A07               	xorlw	7	; case 20
  3471  000742  B4D8               	btfsc	status,2,c
  3472  000744  D789               	goto	l5818
  3473  000746  0A01               	xorlw	1	; case 21
  3474  000748  B4D8               	btfsc	status,2,c
  3475  00074A  D790               	goto	l5830
  3476  00074C  0A03               	xorlw	3	; case 22
  3477  00074E  0012               	return	
  3478  000750                     __end_of_menu:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _UgetUserName *****************
  3482 ;; Defined at:
  3483 ;;		line 27 in file "Usuaris.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  quin            1    wreg     unsigned char 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  quin            1    7[COMRAM] unsigned char 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  2    5[COMRAM] PTR unsigned char 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, prodl, prodh
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/1
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1
  3497 ;;      Params:         2       0       0
  3498 ;;      Locals:         1       0       0
  3499 ;;      Temps:          0       0       0
  3500 ;;      Totals:         3       0       0
  3501 ;;Total ram usage:        3 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; Hardware stack levels required when called: 2
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_menu
  3508 ;;		_motorSIO
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text17
  3513  001BDA                     __ptext17:
  3514                           	callstack 0
  3515  001BDA                     _UgetUserName:
  3516                           	callstack 27
  3517                           
  3518                           ;incstack = 0
  3519                           ;UgetUserName@quin stored from wreg
  3520  001BDA  6E6A               	movwf	UgetUserName@quin^0,c
  3521                           
  3522                           ;Usuaris.c: 28:     return usuaris[quin].username;
  3523  001BDC  506A               	movf	UgetUserName@quin^0,w,c
  3524  001BDE  0D17               	mullw	23
  3525  001BE0  0E00               	movlw	low _usuaris
  3526  001BE2  24F3               	addwf	243,w,c
  3527  001BE4  6E68               	movwf	?_UgetUserName^0,c
  3528  001BE6  0E01               	movlw	high _usuaris
  3529  001BE8  20F4               	addwfc	prodh,w,c
  3530  001BEA  6E69               	movwf	(?_UgetUserName+1)^0,c
  3531  001BEC  0012               	return		;funcret
  3532  001BEE                     __end_of_UgetUserName:
  3533                           	callstack 0
  3534                           
  3535 ;; *************** function _UgetNumUsuaris *****************
  3536 ;; Defined at:
  3537 ;;		line 30 in file "Usuaris.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      unsigned char 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1
  3551 ;;      Params:         0       0       0
  3552 ;;      Locals:         0       0       0
  3553 ;;      Temps:          0       0       0
  3554 ;;      Totals:         0       0       0
  3555 ;;Total ram usage:        0 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 2
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_menu
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text18
  3566  001D1C                     __ptext18:
  3567                           	callstack 0
  3568  001D1C                     _UgetNumUsuaris:
  3569                           	callstack 27
  3570                           
  3571                           ;Usuaris.c: 31:     return numUsuaris;
  3572                           
  3573                           ;incstack = 0
  3574  001D1C  5022               	movf	_numUsuaris^0,w,c
  3575  001D1E  0012               	return		;funcret
  3576  001D20                     __end_of_UgetNumUsuaris:
  3577                           	callstack 0
  3578                           
  3579 ;; *************** function _UenviaPas *****************
  3580 ;; Defined at:
  3581 ;;		line 46 in file "Usuaris.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  c               1    wreg     unsigned char 
  3584 ;;  pos             1    5[COMRAM] unsigned char 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  c               1    6[COMRAM] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1
  3596 ;;      Params:         1       0       0
  3597 ;;      Locals:         1       0       0
  3598 ;;      Temps:          0       0       0
  3599 ;;      Totals:         2       0       0
  3600 ;;Total ram usage:        2 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; Hardware stack levels required when called: 2
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_menu
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text19
  3611  001C00                     __ptext19:
  3612                           	callstack 0
  3613  001C00                     _UenviaPas:
  3614                           	callstack 27
  3615                           
  3616                           ;incstack = 0
  3617                           ;UenviaPas@c stored from wreg
  3618  001C00  6E69               	movwf	UenviaPas@c^0,c
  3619                           
  3620                           ;Usuaris.c: 47:     tmpPassword[pos] = c;
  3621  001C02  5068               	movf	UenviaPas@pos^0,w,c
  3622  001C04  0F98               	addlw	low _tmpPassword
  3623  001C06  6ED9               	movwf	fsr2l,c
  3624  001C08  6ADA               	clrf	fsr2h,c
  3625  001C0A  C069  FFDF         	movff	UenviaPas@c,indf2
  3626  001C0E  0012               	return		;funcret
  3627  001C10                     __end_of_UenviaPas:
  3628                           	callstack 0
  3629                           
  3630 ;; *************** function _UenviaChar *****************
  3631 ;; Defined at:
  3632 ;;		line 43 in file "Usuaris.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  c               1    wreg     unsigned char 
  3635 ;;  pos             1    5[COMRAM] unsigned char 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  c               1    6[COMRAM] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1
  3647 ;;      Params:         1       0       0
  3648 ;;      Locals:         1       0       0
  3649 ;;      Temps:          0       0       0
  3650 ;;      Totals:         2       0       0
  3651 ;;Total ram usage:        2 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; Hardware stack levels required when called: 2
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_menu
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text20
  3662  001C10                     __ptext20:
  3663                           	callstack 0
  3664  001C10                     _UenviaChar:
  3665                           	callstack 27
  3666                           
  3667                           ;incstack = 0
  3668                           ;UenviaChar@c stored from wreg
  3669  001C10  6E69               	movwf	UenviaChar@c^0,c
  3670                           
  3671                           ;Usuaris.c: 44:     tmpUsername[pos] = c;
  3672  001C12  5068               	movf	UenviaChar@pos^0,w,c
  3673  001C14  0F36               	addlw	low _tmpUsername
  3674  001C16  6ED9               	movwf	fsr2l,c
  3675  001C18  6ADA               	clrf	fsr2h,c
  3676  001C1A  C069  FFDF         	movff	UenviaChar@c,indf2
  3677  001C1E  0012               	return		;funcret
  3678  001C20                     __end_of_UenviaChar:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function _UcheckExistsNotFinished *****************
  3682 ;; Defined at:
  3683 ;;		line 37 in file "Usuaris.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;		None               void
  3690 ;; Registers used:
  3691 ;;		status,0
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1
  3697 ;;      Params:         0       0       0
  3698 ;;      Locals:         0       0       0
  3699 ;;      Temps:          0       0       0
  3700 ;;      Totals:         0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; Hardware stack levels required when called: 2
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_menu
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text21
  3712  001C44                     __ptext21:
  3713                           	callstack 0
  3714  001C44                     _UcheckExistsNotFinished:
  3715                           	callstack 27
  3716                           
  3717                           ;Usuaris.c: 38:     return do_check_exists;
  3718                           
  3719                           ;incstack = 0
  3720  001C44  B479               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  3721  001C46  D002               	goto	l3936
  3722  001C48  90D8               	bcf	status,0,c
  3723  001C4A  0012               	return	
  3724  001C4C                     l3936:
  3725  001C4C  80D8               	bsf	status,0,c
  3726  001C4E  0012               	return		;funcret
  3727  001C50                     __end_of_UcheckExistsNotFinished:
  3728                           	callstack 0
  3729                           
  3730 ;; *************** function _UcheckExistsGetError *****************
  3731 ;; Defined at:
  3732 ;;		line 40 in file "Usuaris.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;		None
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;		None
  3737 ;; Return value:  Size  Location     Type
  3738 ;;		None               void
  3739 ;; Registers used:
  3740 ;;		wreg, status,0
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1
  3746 ;;      Params:         0       0       0
  3747 ;;      Locals:         0       0       0
  3748 ;;      Temps:          1       0       0
  3749 ;;      Totals:         1       0       0
  3750 ;;Total ram usage:        1 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; Hardware stack levels required when called: 2
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_menu
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text22
  3761  001C8C                     __ptext22:
  3762                           	callstack 0
  3763  001C8C                     _UcheckExistsGetError:
  3764                           	callstack 27
  3765                           
  3766                           ;Usuaris.c: 41:     return usuariLoguejat;
  3767                           
  3768                           ;incstack = 0
  3769  001C8C  C055  F068         	movff	_usuariLoguejat,??_UcheckExistsGetError
  3770  001C90  3068               	rrcf	??_UcheckExistsGetError^0,w,c
  3771  001C92  0012               	return		;funcret
  3772  001C94                     __end_of_UcheckExistsGetError:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function _UcheckExists *****************
  3776 ;; Defined at:
  3777 ;;		line 34 in file "Usuaris.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		None
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1
  3791 ;;      Params:         0       0       0
  3792 ;;      Locals:         0       0       0
  3793 ;;      Temps:          0       0       0
  3794 ;;      Totals:         0       0       0
  3795 ;;Total ram usage:        0 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 2
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_menu
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text23
  3806  001D20                     __ptext23:
  3807                           	callstack 0
  3808  001D20                     _UcheckExists:
  3809                           	callstack 27
  3810                           
  3811                           ;Usuaris.c: 35:     do_check_exists = 1;
  3812                           
  3813                           ;incstack = 0
  3814  001D20  8479               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  3815  001D22  0012               	return		;funcret
  3816  001D24                     __end_of_UcheckExists:
  3817                           	callstack 0
  3818                           
  3819 ;; *************** function _URegister *****************
  3820 ;; Defined at:
  3821 ;;		line 54 in file "Usuaris.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		None
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1
  3835 ;;      Params:         0       0       0
  3836 ;;      Locals:         0       0       0
  3837 ;;      Temps:          0       0       0
  3838 ;;      Totals:         0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; Hardware stack levels required when called: 2
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_menu
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text24
  3850  001D24                     __ptext24:
  3851                           	callstack 0
  3852  001D24                     _URegister:
  3853                           	callstack 27
  3854                           
  3855                           ;Usuaris.c: 55:     do_register = 1;
  3856                           
  3857                           ;incstack = 0
  3858  001D24  8279               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  3859  001D26  0012               	return		;funcret
  3860  001D28                     __end_of_URegister:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _SiFerMenu *****************
  3864 ;; Defined at:
  3865 ;;		line 19 in file "GestioLCD.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		None
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1
  3879 ;;      Params:         0       0       0
  3880 ;;      Locals:         0       0       0
  3881 ;;      Temps:          0       0       0
  3882 ;;      Totals:         0       0       0
  3883 ;;Total ram usage:        0 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; Hardware stack levels required when called: 2
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_menu
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text25
  3894  001D28                     __ptext25:
  3895                           	callstack 0
  3896  001D28                     _SiFerMenu:
  3897                           	callstack 27
  3898                           
  3899                           ;GestioLCD.c: 20:     ferMenu = 1;
  3900                           
  3901                           ;incstack = 0
  3902  001D28  8C78               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  3903  001D2A  0012               	return		;funcret
  3904  001D2C                     __end_of_SiFerMenu:
  3905                           	callstack 0
  3906                           
  3907 ;; *************** function _SMSon *****************
  3908 ;; Defined at:
  3909 ;;		line 130 in file "Ssms.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		None
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1
  3923 ;;      Params:         0       0       0
  3924 ;;      Locals:         0       0       0
  3925 ;;      Temps:          0       0       0
  3926 ;;      Totals:         0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; Hardware stack levels required when called: 2
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_menu
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text26
  3938  001CFC                     __ptext26:
  3939                           	callstack 0
  3940  001CFC                     _SMSon:
  3941                           	callstack 27
  3942                           
  3943                           ;Ssms.c: 131:     setSMSon = 1;
  3944                           
  3945                           ;incstack = 0
  3946  001CFC  8879               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3947                           
  3948                           ;Ssms.c: 132:     novaTecla = -1;
  3949  001CFE  685B               	setf	_novaTecla^0,c
  3950  001D00  0012               	return		;funcret
  3951  001D02                     __end_of_SMSon:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function _SMSoff *****************
  3955 ;; Defined at:
  3956 ;;		line 135 in file "Ssms.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;		None
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;		None
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		None
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1
  3970 ;;      Params:         0       0       0
  3971 ;;      Locals:         0       0       0
  3972 ;;      Temps:          0       0       0
  3973 ;;      Totals:         0       0       0
  3974 ;;Total ram usage:        0 bytes
  3975 ;; Hardware stack levels used: 1
  3976 ;; Hardware stack levels required when called: 2
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_menu
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text27
  3985  001D02                     __ptext27:
  3986                           	callstack 0
  3987  001D02                     _SMSoff:
  3988                           	callstack 27
  3989                           
  3990                           ;Ssms.c: 136:     setSMSon = 0;
  3991                           
  3992                           ;incstack = 0
  3993  001D02  9879               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3994                           
  3995                           ;Ssms.c: 137:     novaTecla = -1;
  3996  001D04  685B               	setf	_novaTecla^0,c
  3997  001D06  0012               	return		;funcret
  3998  001D08                     __end_of_SMSoff:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _NoFerMenu *****************
  4002 ;; Defined at:
  4003 ;;		line 22 in file "GestioLCD.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;		None
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;		None
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		None
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1
  4017 ;;      Params:         0       0       0
  4018 ;;      Locals:         0       0       0
  4019 ;;      Temps:          0       0       0
  4020 ;;      Totals:         0       0       0
  4021 ;;Total ram usage:        0 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 2
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_menu
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text28
  4032  001D2C                     __ptext28:
  4033                           	callstack 0
  4034  001D2C                     _NoFerMenu:
  4035                           	callstack 27
  4036                           
  4037                           ;GestioLCD.c: 23:     ferMenu = 0;
  4038                           
  4039                           ;incstack = 0
  4040  001D2C  9C78               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4041  001D2E  0012               	return		;funcret
  4042  001D30                     __end_of_NoFerMenu:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function _JnovaTecla *****************
  4046 ;; Defined at:
  4047 ;;		line 15 in file "Joc.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  tecla           1    wreg     unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  tecla           1    5[COMRAM] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      void 
  4054 ;; Registers used:
  4055 ;;		wreg
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1
  4061 ;;      Params:         0       0       0
  4062 ;;      Locals:         1       0       0
  4063 ;;      Temps:          0       0       0
  4064 ;;      Totals:         1       0       0
  4065 ;;Total ram usage:        1 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; Hardware stack levels required when called: 2
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_menu
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text29
  4076  001C94                     __ptext29:
  4077                           	callstack 0
  4078  001C94                     _JnovaTecla:
  4079                           	callstack 27
  4080                           
  4081                           ;incstack = 0
  4082                           ;JnovaTecla@tecla stored from wreg
  4083  001C94  6E68               	movwf	JnovaTecla@tecla^0,c
  4084                           
  4085                           ;Joc.c: 16:     novaTecla = tecla;
  4086  001C96  C068  F05B         	movff	JnovaTecla@tecla,_novaTecla
  4087  001C9A  0012               	return		;funcret
  4088  001C9C                     __end_of_JnovaTecla:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _JnovaDireccio *****************
  4092 ;; Defined at:
  4093 ;;		line 18 in file "Joc.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  dir             1    wreg     unsigned char 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  dir             1    5[COMRAM] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1
  4107 ;;      Params:         0       0       0
  4108 ;;      Locals:         1       0       0
  4109 ;;      Temps:          0       0       0
  4110 ;;      Totals:         1       0       0
  4111 ;;Total ram usage:        1 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 2
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_menu
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text30
  4122  001C9C                     __ptext30:
  4123                           	callstack 0
  4124  001C9C                     _JnovaDireccio:
  4125                           	callstack 27
  4126                           
  4127                           ;incstack = 0
  4128                           ;JnovaDireccio@dir stored from wreg
  4129  001C9C  6E68               	movwf	JnovaDireccio@dir^0,c
  4130                           
  4131                           ;Joc.c: 19:     novaDireccio = dir;
  4132  001C9E  C068  F056         	movff	JnovaDireccio@dir,_novaDireccio
  4133  001CA2  0012               	return		;funcret
  4134  001CA4                     __end_of_JnovaDireccio:
  4135                           	callstack 0
  4136                           
  4137 ;; *************** function _JUsuari *****************
  4138 ;; Defined at:
  4139 ;;		line 22 in file "Joc.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;		None
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      char 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1
  4153 ;;      Params:         0       0       0
  4154 ;;      Locals:         0       0       0
  4155 ;;      Temps:          0       0       0
  4156 ;;      Totals:         0       0       0
  4157 ;;Total ram usage:        0 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; Hardware stack levels required when called: 2
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_menu
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text31
  4168  001D30                     __ptext31:
  4169                           	callstack 0
  4170  001D30                     _JUsuari:
  4171                           	callstack 27
  4172                           
  4173                           ;Joc.c: 23:     return usuariJoc;
  4174                           
  4175                           ;incstack = 0
  4176  001D30  5052               	movf	_usuariJoc^0,w,c
  4177  001D32  0012               	return		;funcret
  4178  001D34                     __end_of_JUsuari:
  4179                           	callstack 0
  4180                           
  4181 ;; *************** function _JJuguem *****************
  4182 ;; Defined at:
  4183 ;;		line 12 in file "Joc.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  usuari          1    wreg     unsigned char 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  usuari          1    5[COMRAM] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1
  4197 ;;      Params:         0       0       0
  4198 ;;      Locals:         1       0       0
  4199 ;;      Temps:          0       0       0
  4200 ;;      Totals:         1       0       0
  4201 ;;Total ram usage:        1 bytes
  4202 ;; Hardware stack levels used: 1
  4203 ;; Hardware stack levels required when called: 2
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_menu
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text32
  4212  001CA4                     __ptext32:
  4213                           	callstack 0
  4214  001CA4                     _JJuguem:
  4215                           	callstack 27
  4216                           
  4217                           ;incstack = 0
  4218                           ;JJuguem@usuari stored from wreg
  4219  001CA4  6E68               	movwf	JJuguem@usuari^0,c
  4220                           
  4221                           ;Joc.c: 13:     usuariJoc = usuari;
  4222  001CA6  C068  F052         	movff	JJuguem@usuari,_usuariJoc
  4223  001CAA  0012               	return		;funcret
  4224  001CAC                     __end_of_JJuguem:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function _HActualitzaHora *****************
  4228 ;; Defined at:
  4229 ;;		line 14 in file "Hora.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  nova            1    5[COMRAM] PTR unsigned char 
  4232 ;;		 -> horaTmp(4), 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1
  4244 ;;      Params:         1       0       0
  4245 ;;      Locals:         0       0       0
  4246 ;;      Temps:          0       0       0
  4247 ;;      Totals:         1       0       0
  4248 ;;Total ram usage:        1 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 2
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_menu
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text33
  4259  0019C0                     __ptext33:
  4260                           	callstack 0
  4261  0019C0                     _HActualitzaHora:
  4262                           	callstack 27
  4263                           
  4264                           ;Hora.c: 15:     hora[0] = nova[0];
  4265                           
  4266                           ;incstack = 0
  4267  0019C0  5068               	movf	HActualitzaHora@nova^0,w,c
  4268  0019C2  6ED9               	movwf	fsr2l,c
  4269  0019C4  6ADA               	clrf	fsr2h,c
  4270  0019C6  50DF               	movf	indf2,w,c
  4271  0019C8  6E5D               	movwf	_hora^0,c
  4272                           
  4273                           ;Hora.c: 16:     hora[1] = nova[1];
  4274  0019CA  5068               	movf	HActualitzaHora@nova^0,w,c
  4275  0019CC  6ED9               	movwf	fsr2l,c
  4276  0019CE  6ADA               	clrf	fsr2h,c
  4277  0019D0  0E01               	movlw	1
  4278  0019D2  26D9               	addwf	fsr2l,f,c
  4279  0019D4  50DF               	movf	indf2,w,c
  4280  0019D6  6E5E               	movwf	(_hora+1)^0,c
  4281                           
  4282                           ;Hora.c: 17:     hora[3] = nova[2];
  4283  0019D8  5068               	movf	HActualitzaHora@nova^0,w,c
  4284  0019DA  6ED9               	movwf	fsr2l,c
  4285  0019DC  6ADA               	clrf	fsr2h,c
  4286  0019DE  0E02               	movlw	2
  4287  0019E0  26D9               	addwf	fsr2l,f,c
  4288  0019E2  50DF               	movf	indf2,w,c
  4289  0019E4  6E60               	movwf	(_hora+3)^0,c
  4290                           
  4291                           ;Hora.c: 18:     hora[4] = nova[3];
  4292  0019E6  5068               	movf	HActualitzaHora@nova^0,w,c
  4293  0019E8  6ED9               	movwf	fsr2l,c
  4294  0019EA  6ADA               	clrf	fsr2h,c
  4295  0019EC  0E03               	movlw	3
  4296  0019EE  26D9               	addwf	fsr2l,f,c
  4297  0019F0  50DF               	movf	indf2,w,c
  4298  0019F2  6E61               	movwf	(_hora+4)^0,c
  4299  0019F4  0012               	return		;funcret
  4300  0019F6                     __end_of_HActualitzaHora:
  4301                           	callstack 0
  4302                           
  4303 ;; *************** function _GLCDMostraMenu *****************
  4304 ;; Defined at:
  4305 ;;		line 30 in file "GestioLCD.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  num             1    wreg     unsigned char 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  num             1    5[COMRAM] unsigned char 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1
  4319 ;;      Params:         0       0       0
  4320 ;;      Locals:         1       0       0
  4321 ;;      Temps:          0       0       0
  4322 ;;      Totals:         1       0       0
  4323 ;;Total ram usage:        1 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; Hardware stack levels required when called: 2
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_menu
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text34
  4334  001C50                     __ptext34:
  4335                           	callstack 0
  4336  001C50                     _GLCDMostraMenu:
  4337                           	callstack 27
  4338                           
  4339                           ;incstack = 0
  4340                           ;GLCDMostraMenu@num stored from wreg
  4341  001C50  6E68               	movwf	GLCDMostraMenu@num^0,c
  4342                           
  4343                           ;GestioLCD.c: 31:     newString = 1;
  4344  001C52  8A78               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  4345                           
  4346                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  4347  001C54  C068  F017         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  4348                           
  4349                           ;GestioLCD.c: 33:     ferMenu = 1;
  4350  001C58  8C78               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4351  001C5A  0012               	return		;funcret
  4352  001C5C                     __end_of_GLCDMostraMenu:
  4353                           	callstack 0
  4354                           
  4355 ;; *************** function _init_ports *****************
  4356 ;; Defined at:
  4357 ;;		line 25 in file "main.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;		None
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1
  4371 ;;      Params:         0       0       0
  4372 ;;      Locals:         0       0       0
  4373 ;;      Temps:          0       0       0
  4374 ;;      Totals:         0       0       0
  4375 ;;Total ram usage:        0 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; Hardware stack levels required when called: 2
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_main
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text35
  4386  001B6C                     __ptext35:
  4387                           	callstack 0
  4388  001B6C                     _init_ports:
  4389                           	callstack 28
  4390                           
  4391                           ;incstack = 0
  4392  001B6C  0E03               	movlw	3
  4393  001B6E  6E92               	movwf	146,c	;volatile
  4394  001B70  0EE0               	movlw	224
  4395  001B72  6E93               	movwf	147,c	;volatile
  4396  001B74  968A               	bcf	138,3,c	;volatile
  4397  001B76  908A               	bcf	138,0,c	;volatile
  4398  001B78  928A               	bcf	138,1,c	;volatile
  4399                           
  4400                           ;main.c: 48:     TRISC = 0xC0;
  4401  001B7A  0EC0               	movlw	192
  4402  001B7C  6E94               	movwf	148,c	;volatile
  4403                           
  4404                           ;main.c: 58:     TRISD = 0x8F;
  4405  001B7E  0E8F               	movlw	143
  4406  001B80  6E95               	movwf	149,c	;volatile
  4407                           
  4408                           ;main.c: 59:     LATD = 0x00;
  4409  001B82  0E00               	movlw	0
  4410  001B84  6E8C               	movwf	140,c	;volatile
  4411                           
  4412                           ;main.c: 62:     EECON1bits.EEPGD = 1;
  4413  001B86  8EA6               	bsf	166,7,c	;volsfr
  4414                           
  4415                           ;main.c: 63:     EECON1bits.CFGS = 0;
  4416  001B88  9CA6               	bcf	166,6,c	;volsfr
  4417  001B8A  0012               	return		;funcret
  4418  001B8C                     __end_of_init_ports:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function _init_eusart *****************
  4422 ;; Defined at:
  4423 ;;		line 66 in file "main.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1
  4437 ;;      Params:         0       0       0
  4438 ;;      Locals:         0       0       0
  4439 ;;      Temps:          0       0       0
  4440 ;;      Totals:         0       0       0
  4441 ;;Total ram usage:        0 bytes
  4442 ;; Hardware stack levels used: 1
  4443 ;; Hardware stack levels required when called: 2
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_main
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text36
  4452  001BC4                     __ptext36:
  4453                           	callstack 0
  4454  001BC4                     _init_eusart:
  4455                           	callstack 28
  4456                           
  4457                           ;main.c: 67:     TXSTA = 0x24;
  4458                           
  4459                           ;incstack = 0
  4460  001BC4  0E24               	movlw	36
  4461  001BC6  6EAC               	movwf	172,c	;volatile
  4462                           
  4463                           ;main.c: 68:     RCSTA = 0x90;
  4464  001BC8  0E90               	movlw	144
  4465  001BCA  6EAB               	movwf	171,c	;volatile
  4466                           
  4467                           ;main.c: 69:     BAUDCON = 0x08;
  4468  001BCC  0E08               	movlw	8
  4469  001BCE  6EB8               	movwf	184,c	;volatile
  4470                           
  4471                           ;main.c: 70:     SPBRGH = 0x04;
  4472  001BD0  0E04               	movlw	4
  4473  001BD2  6EB0               	movwf	176,c	;volatile
  4474                           
  4475                           ;main.c: 71:     SPBRG = 0x10;
  4476  001BD4  0E10               	movlw	16
  4477  001BD6  6EAF               	movwf	175,c	;volatile
  4478  001BD8  0012               	return		;funcret
  4479  001BDA                     __end_of_init_eusart:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _initHora *****************
  4483 ;; Defined at:
  4484 ;;		line 10 in file "Hora.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;		None
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1
  4498 ;;      Params:         0       0       0
  4499 ;;      Locals:         0       0       0
  4500 ;;      Temps:          0       0       0
  4501 ;;      Totals:         0       0       0
  4502 ;;Total ram usage:        0 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; Hardware stack levels required when called: 3
  4505 ;; This function calls:
  4506 ;;		_TiGetTimer
  4507 ;; This function is called by:
  4508 ;;		_main
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text37
  4513  001CAC                     __ptext37:
  4514                           	callstack 0
  4515  001CAC                     _initHora:
  4516                           	callstack 27
  4517                           
  4518                           ;Hora.c: 11:     timerHora = TiGetTimer();
  4519                           
  4520                           ;incstack = 0
  4521  001CAC  ECA7  F00C         	call	_TiGetTimer	;wreg free
  4522  001CB0  6E0C               	movwf	_timerHora^0,c
  4523  001CB2  0012               	return		;funcret
  4524  001CB4                     __end_of_initHora:
  4525                           	callstack 0
  4526                           
  4527 ;; *************** function _initAltaveu *****************
  4528 ;; Defined at:
  4529 ;;		line 10 in file "Altaveu.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;		None
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      void 
  4536 ;; Registers used:
  4537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1
  4543 ;;      Params:         0       0       0
  4544 ;;      Locals:         0       0       0
  4545 ;;      Temps:          0       0       0
  4546 ;;      Totals:         0       0       0
  4547 ;;Total ram usage:        0 bytes
  4548 ;; Hardware stack levels used: 1
  4549 ;; Hardware stack levels required when called: 3
  4550 ;; This function calls:
  4551 ;;		_TiGetTimer
  4552 ;; This function is called by:
  4553 ;;		_main
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text38
  4558  001CB4                     __ptext38:
  4559                           	callstack 0
  4560  001CB4                     _initAltaveu:
  4561                           	callstack 27
  4562                           
  4563                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  4564                           
  4565                           ;incstack = 0
  4566  001CB4  ECA7  F00C         	call	_TiGetTimer	;wreg free
  4567  001CB8  6E1B               	movwf	_timerAltaveu^0,c
  4568  001CBA  0012               	return		;funcret
  4569  001CBC                     __end_of_initAltaveu:
  4570                           	callstack 0
  4571                           
  4572 ;; *************** function _escriureEEPROM *****************
  4573 ;; Defined at:
  4574 ;;		line 208 in file "Usuaris.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  caca            1    5[COMRAM] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1
  4588 ;;      Params:         0       0       0
  4589 ;;      Locals:         1       0       0
  4590 ;;      Temps:          0       0       0
  4591 ;;      Totals:         1       0       0
  4592 ;;Total ram usage:        1 bytes
  4593 ;; Hardware stack levels used: 1
  4594 ;; Hardware stack levels required when called: 2
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_main
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text39
  4603  001A5A                     __ptext39:
  4604                           	callstack 0
  4605  001A5A                     _escriureEEPROM:
  4606                           	callstack 28
  4607                           
  4608                           ;Usuaris.c: 209:     for(unsigned char caca = 0; caca < 160; caca++){
  4609                           
  4610                           ;incstack = 0
  4611  001A5A  0E00               	movlw	0
  4612  001A5C  6E68               	movwf	escriureEEPROM@caca^0,c
  4613  001A5E                     l2192:
  4614                           
  4615                           ;Usuaris.c: 210:         EEADR = 0;
  4616  001A5E  0E00               	movlw	0
  4617  001A60  6EA9               	movwf	169,c	;volatile
  4618                           
  4619                           ;Usuaris.c: 211:         EEDATA = 0;
  4620  001A62  0E00               	movlw	0
  4621  001A64  6EA8               	movwf	168,c	;volatile
  4622                           
  4623                           ;Usuaris.c: 212:         EECON1bits.EEPGD = 0;
  4624  001A66  9EA6               	bcf	166,7,c	;volsfr
  4625                           
  4626                           ;Usuaris.c: 213:         EECON1bits.CFGS = 0;
  4627  001A68  9CA6               	bcf	166,6,c	;volsfr
  4628                           
  4629                           ;Usuaris.c: 214:         EECON1bits.WREN = 1;
  4630  001A6A  84A6               	bsf	166,2,c	;volsfr
  4631                           
  4632                           ;Usuaris.c: 215:         INTCONbits.GIE = 0;
  4633  001A6C  9EF2               	bcf	242,7,c	;volatile
  4634                           
  4635                           ;Usuaris.c: 216:         EECON2 = 85;
  4636  001A6E  0E55               	movlw	85
  4637  001A70  6EA7               	movwf	167,c	;volsfr
  4638                           
  4639                           ;Usuaris.c: 217:         EECON2 = 170;
  4640  001A72  0EAA               	movlw	170
  4641  001A74  6EA7               	movwf	167,c	;volsfr
  4642                           
  4643                           ;Usuaris.c: 218:          EECON1bits.WR = 1;
  4644  001A76  82A6               	bsf	166,1,c	;volsfr
  4645  001A78                     l708:
  4646                           
  4647                           ;Usuaris.c: 219:         while(EECON1bits.WR){
  4648  001A78  B2A6               	btfsc	166,1,c	;volsfr
  4649  001A7A  D7FE               	goto	l708
  4650                           
  4651                           ;Usuaris.c: 224:     }
  4652  001A7C  2A68               	incf	escriureEEPROM@caca^0,f,c
  4653  001A7E  0E9F               	movlw	159
  4654  001A80  6468               	cpfsgt	escriureEEPROM@caca^0,c
  4655  001A82  D7ED               	goto	l2192
  4656                           
  4657                           ;Usuaris.c: 225:    INTCONbits.GIE = 1;
  4658  001A84  8EF2               	bsf	242,7,c	;volatile
  4659  001A86  0012               	return		;funcret
  4660  001A88                     __end_of_escriureEEPROM:
  4661                           	callstack 0
  4662                           
  4663 ;; *************** function _escriure2usuarisStruct *****************
  4664 ;; Defined at:
  4665 ;;		line 115 in file "Usuaris.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 3F/1
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1
  4679 ;;      Params:         0       0       0
  4680 ;;      Locals:         0       0       0
  4681 ;;      Temps:          0       0       0
  4682 ;;      Totals:         0       0       0
  4683 ;;Total ram usage:        0 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; Hardware stack levels required when called: 2
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_main
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text40
  4694  001A88                     __ptext40:
  4695                           	callstack 0
  4696  001A88                     _escriure2usuarisStruct:
  4697                           	callstack 28
  4698                           
  4699                           ;Usuaris.c: 117:     usuaris[0].username[0] = 1;
  4700                           
  4701                           ;incstack = 0
  4702  001A88  0E01               	movlw	1
  4703  001A8A  0101               	movlb	1	; () banked
  4704  001A8C  6F00               	movwf	_usuaris& (0+255),b
  4705                           
  4706                           ;Usuaris.c: 118:     usuaris[0].password[0] = 1;
  4707  001A8E  0E01               	movlw	1
  4708  001A90  6F09               	movwf	(_usuaris+9)& (0+255),b
  4709                           
  4710                           ;Usuaris.c: 119:     usuaris[1].username[0] = '1';
  4711  001A92  0E31               	movlw	49
  4712  001A94  6F17               	movwf	(_usuaris+23)& (0+255),b
  4713                           
  4714                           ;Usuaris.c: 120:     usuaris[1].password[0] = '1';
  4715  001A96  0E31               	movlw	49
  4716  001A98  6F20               	movwf	(_usuaris+32)& (0+255),b
  4717                           
  4718                           ;Usuaris.c: 121:     usuaris[0].username[1] = '\0';
  4719  001A9A  0E00               	movlw	0
  4720  001A9C  6F01               	movwf	(_usuaris+1)& (0+255),b
  4721                           
  4722                           ;Usuaris.c: 122:     usuaris[0].password[1] = '\0';
  4723  001A9E  0E00               	movlw	0
  4724  001AA0  6F0A               	movwf	(_usuaris+10)& (0+255),b
  4725                           
  4726                           ;Usuaris.c: 123:     usuaris[1].username[1] = '\0';
  4727  001AA2  0E00               	movlw	0
  4728  001AA4  6F18               	movwf	(_usuaris+24)& (0+255),b
  4729                           
  4730                           ;Usuaris.c: 124:     usuaris[1].password[1] = '\0';
  4731  001AA6  0E00               	movlw	0
  4732  001AA8  6F21               	movwf	(_usuaris+33)& (0+255),b
  4733                           
  4734                           ;Usuaris.c: 125:     numUsuaris = 2;
  4735  001AAA  0E02               	movlw	2
  4736  001AAC  6E22               	movwf	_numUsuaris^0,c
  4737                           
  4738                           ;Usuaris.c: 126:     indexNextUser = 2;
  4739  001AAE  0E02               	movlw	2
  4740  001AB0  6E21               	movwf	_indexNextUser^0,c
  4741                           
  4742                           ; BSR set to: 1
  4743  001AB2  0012               	return		;funcret
  4744  001AB4                     __end_of_escriure2usuarisStruct:
  4745                           	callstack 0
  4746                           
  4747 ;; *************** function _UmotorUsers *****************
  4748 ;; Defined at:
  4749 ;;		line 139 in file "Usuaris.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/1
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1
  4763 ;;      Params:         0       0       0
  4764 ;;      Locals:         0       0       0
  4765 ;;      Temps:          2       0       0
  4766 ;;      Totals:         2       0       0
  4767 ;;Total ram usage:        2 bytes
  4768 ;; Hardware stack levels used: 1
  4769 ;; Hardware stack levels required when called: 3
  4770 ;; This function calls:
  4771 ;;		_compareStrings
  4772 ;;		_escriureCharEEPROM
  4773 ;; This function is called by:
  4774 ;;		_main
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text41
  4779  000D24                     __ptext41:
  4780                           	callstack 0
  4781  000D24                     _UmotorUsers:
  4782                           	callstack 27
  4783                           
  4784                           ;Usuaris.c: 140: static char state = 0;;Usuaris.c: 142:  switch(state) {
  4785                           
  4786                           ; BSR set to: 1
  4787                           ;incstack = 0
  4788  000D24  D0A7               	goto	l4970
  4789  000D26                     l680:
  4790                           
  4791                           ;Usuaris.c: 144:    if (!do_check_exists && !do_register) {
  4792  000D26  A479               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4793  000D28  B279               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  4794  000D2A  D005               	goto	l681
  4795                           
  4796                           ;Usuaris.c: 145:     i = 0;
  4797  000D2C  0E00               	movlw	0
  4798  000D2E  6E1F               	movwf	_i^0,c
  4799                           
  4800                           ;Usuaris.c: 146:     j = 0;
  4801  000D30  0E00               	movlw	0
  4802  000D32  6E1E               	movwf	_j^0,c
  4803                           
  4804                           ;Usuaris.c: 147:    }
  4805  000D34  0012               	return	
  4806  000D36                     l681:
  4807  000D36  A479               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4808  000D38  D004               	goto	l683
  4809                           
  4810                           ;Usuaris.c: 149:     usuariLoguejat = -1;
  4811  000D3A  6855               	setf	_usuariLoguejat^0,c
  4812  000D3C                     l4898:
  4813                           
  4814                           ;Usuaris.c: 150:     state = 1;
  4815  000D3C  0E01               	movlw	1
  4816  000D3E  6E1D               	movwf	UmotorUsers@state^0,c
  4817                           
  4818                           ;Usuaris.c: 151:    }
  4819  000D40  0012               	return	
  4820  000D42                     l683:
  4821  000D42  A279               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  4822  000D44  0012               	return	
  4823  000D46                     u4370:
  4824                           
  4825                           ;Usuaris.c: 153:     state = 2;
  4826  000D46  0E02               	movlw	2
  4827  000D48  6E1D               	movwf	UmotorUsers@state^0,c
  4828                           
  4829                           ;Usuaris.c: 155:   break;
  4830  000D4A  0012               	return	
  4831  000D4C                     l4902:
  4832                           
  4833                           ;Usuaris.c: 158:    if (i < numUsuaris) {
  4834  000D4C  5022               	movf	_numUsuaris^0,w,c
  4835  000D4E  5C1F               	subwf	_i^0,w,c
  4836  000D50  B0D8               	btfsc	status,0,c
  4837  000D52  D014               	goto	l4912
  4838                           
  4839                           ;Usuaris.c: 159:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  4840  000D54  0E36               	movlw	low _tmpUsername
  4841  000D56  6E68               	movwf	compareStrings@a^0,c
  4842  000D58  501F               	movf	_i^0,w,c
  4843  000D5A  0D17               	mullw	23
  4844  000D5C  0E00               	movlw	low _usuaris
  4845  000D5E  24F3               	addwf	243,w,c
  4846  000D60  6E69               	movwf	compareStrings@b^0,c
  4847  000D62  0E01               	movlw	high _usuaris
  4848  000D64  20F4               	addwfc	prodh,w,c
  4849  000D66  6E6A               	movwf	(compareStrings@b+1)^0,c
  4850  000D68  EC47  F00C         	call	_compareStrings	;wreg free
  4851  000D6C  0900               	iorlw	0
  4852  000D6E  A4D8               	btfss	status,2,c
  4853  000D70  D003               	goto	l4908
  4854                           
  4855                           ;Usuaris.c: 160:      usuariLoguejat = i;
  4856  000D72  C01F  F055         	movff	_i,_usuariLoguejat
  4857                           
  4858                           ;Usuaris.c: 161:                     LATBbits.LATB3 = 1;
  4859  000D76  868A               	bsf	138,3,c	;volatile
  4860  000D78                     l4908:
  4861                           
  4862                           ;Usuaris.c: 166:     i++;
  4863  000D78  2A1F               	incf	_i^0,f,c
  4864  000D7A  D7E0               	goto	l4898
  4865  000D7C                     l4912:
  4866  000D7C  5022               	movf	_numUsuaris^0,w,c
  4867  000D7E  181F               	xorwf	_i^0,w,c
  4868  000D80  A4D8               	btfss	status,2,c
  4869  000D82  0012               	return	
  4870                           
  4871                           ;Usuaris.c: 170:     do_check_exists = 0;
  4872  000D84  9479               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4873  000D86                     l4916:
  4874                           
  4875                           ;Usuaris.c: 171:     state = 0;
  4876  000D86  0E00               	movlw	0
  4877  000D88  6E1D               	movwf	UmotorUsers@state^0,c
  4878  000D8A  0012               	return	
  4879  000D8C                     l4918:
  4880                           
  4881                           ;Usuaris.c: 176:    if (i != 8) {
  4882  000D8C  0E08               	movlw	8
  4883  000D8E  181F               	xorwf	_i^0,w,c
  4884  000D90  B4D8               	btfsc	status,2,c
  4885  000D92  D022               	goto	l4930
  4886                           
  4887                           ;Usuaris.c: 177:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  4888  000D94  C021  F068         	movff	_indexNextUser,escriureCharEEPROM@pos
  4889  000D98  501F               	movf	_i^0,w,c
  4890  000D9A  0F36               	addlw	low _tmpUsername
  4891  000D9C  6ED9               	movwf	fsr2l,c
  4892  000D9E  6ADA               	clrf	fsr2h,c
  4893  000DA0  50DF               	movf	indf2,w,c
  4894  000DA2  EC70  F00D         	call	_escriureCharEEPROM
  4895  000DA6  2A21               	incf	_indexNextUser^0,f,c
  4896                           
  4897                           ;Usuaris.c: 178:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  4898  000DA8  501F               	movf	_i^0,w,c
  4899  000DAA  0F36               	addlw	low _tmpUsername
  4900  000DAC  6ED9               	movwf	fsr2l,c
  4901  000DAE  6ADA               	clrf	fsr2h,c
  4902  000DB0  5020               	movf	_indexNextUserStruct^0,w,c
  4903  000DB2  0D17               	mullw	23
  4904  000DB4  0E00               	movlw	low _usuaris
  4905  000DB6  6E6D               	movwf	??_UmotorUsers^0,c
  4906  000DB8  0E01               	movlw	high _usuaris
  4907  000DBA  6E6E               	movwf	(??_UmotorUsers+1)^0,c
  4908  000DBC  50F3               	movf	243,w,c
  4909  000DBE  266D               	addwf	??_UmotorUsers^0,f,c
  4910  000DC0  50F4               	movf	244,w,c
  4911  000DC2  226E               	addwfc	(??_UmotorUsers+1)^0,f,c
  4912  000DC4  501F               	movf	_i^0,w,c
  4913  000DC6  246D               	addwf	??_UmotorUsers^0,w,c
  4914  000DC8  6EE1               	movwf	fsr1l,c
  4915  000DCA  0E00               	movlw	0
  4916  000DCC  206E               	addwfc	(??_UmotorUsers+1)^0,w,c
  4917  000DCE  6EE2               	movwf	fsr1h,c
  4918  000DD0  CFDF FFE7          	movff	indf2,indf1
  4919                           
  4920                           ;Usuaris.c: 179:     i++;
  4921  000DD4  2A1F               	incf	_i^0,f,c
  4922  000DD6  D7B7               	goto	u4370
  4923  000DD8                     l4930:
  4924  000DD8  0E08               	movlw	8
  4925  000DDA  181F               	xorwf	_i^0,w,c
  4926  000DDC  A4D8               	btfss	status,2,c
  4927  000DDE  0012               	return	
  4928                           
  4929                           ;Usuaris.c: 183:     i = 0;
  4930  000DE0  0E00               	movlw	0
  4931  000DE2  6E1F               	movwf	_i^0,c
  4932                           
  4933                           ;Usuaris.c: 184:     state = 3;
  4934  000DE4  0E03               	movlw	3
  4935  000DE6  6E1D               	movwf	UmotorUsers@state^0,c
  4936  000DE8  0012               	return	
  4937  000DEA                     l4934:
  4938                           
  4939                           ;Usuaris.c: 188:    if (i != 8) {
  4940  000DEA  0E08               	movlw	8
  4941  000DEC  181F               	xorwf	_i^0,w,c
  4942  000DEE  B4D8               	btfsc	status,2,c
  4943  000DF0  D028               	goto	l4946
  4944                           
  4945                           ;Usuaris.c: 189:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  4946  000DF2  C021  F068         	movff	_indexNextUser,escriureCharEEPROM@pos
  4947  000DF6  501F               	movf	_i^0,w,c
  4948  000DF8  0F98               	addlw	low _tmpPassword
  4949  000DFA  6ED9               	movwf	fsr2l,c
  4950  000DFC  6ADA               	clrf	fsr2h,c
  4951  000DFE  50DF               	movf	indf2,w,c
  4952  000E00  EC70  F00D         	call	_escriureCharEEPROM
  4953  000E04  2A21               	incf	_indexNextUser^0,f,c
  4954                           
  4955                           ;Usuaris.c: 190:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  4956  000E06  501F               	movf	_i^0,w,c
  4957  000E08  0F98               	addlw	low _tmpPassword
  4958  000E0A  6ED9               	movwf	fsr2l,c
  4959  000E0C  6ADA               	clrf	fsr2h,c
  4960  000E0E  5020               	movf	_indexNextUserStruct^0,w,c
  4961  000E10  0D17               	mullw	23
  4962  000E12  0E00               	movlw	low _usuaris
  4963  000E14  6E6D               	movwf	??_UmotorUsers^0,c
  4964  000E16  0E01               	movlw	high _usuaris
  4965  000E18  6E6E               	movwf	(??_UmotorUsers+1)^0,c
  4966  000E1A  0E09               	movlw	9
  4967  000E1C  266D               	addwf	??_UmotorUsers^0,f,c
  4968  000E1E  0E00               	movlw	0
  4969  000E20  226E               	addwfc	(??_UmotorUsers+1)^0,f,c
  4970  000E22  50F3               	movf	243,w,c
  4971  000E24  266D               	addwf	??_UmotorUsers^0,f,c
  4972  000E26  50F4               	movf	244,w,c
  4973  000E28  226E               	addwfc	(??_UmotorUsers+1)^0,f,c
  4974  000E2A  501F               	movf	_i^0,w,c
  4975  000E2C  246D               	addwf	??_UmotorUsers^0,w,c
  4976  000E2E  6EE1               	movwf	fsr1l,c
  4977  000E30  0E00               	movlw	0
  4978  000E32  206E               	addwfc	(??_UmotorUsers+1)^0,w,c
  4979  000E34  6EE2               	movwf	fsr1h,c
  4980  000E36  CFDF FFE7          	movff	indf2,indf1
  4981                           
  4982                           ;Usuaris.c: 191:     i++;
  4983  000E3A  2A1F               	incf	_i^0,f,c
  4984                           
  4985                           ;Usuaris.c: 192:     state = 3;
  4986  000E3C  0E03               	movlw	3
  4987  000E3E  6E1D               	movwf	UmotorUsers@state^0,c
  4988                           
  4989                           ;Usuaris.c: 193:    }
  4990  000E40  0012               	return	
  4991  000E42                     l4946:
  4992  000E42  0E08               	movlw	8
  4993  000E44  181F               	xorwf	_i^0,w,c
  4994  000E46  A4D8               	btfss	status,2,c
  4995  000E48  0012               	return	
  4996                           
  4997                           ;Usuaris.c: 195:     do_register = 0;
  4998  000E4A  9279               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  4999                           
  5000                           ;Usuaris.c: 196:     indexNextUser++;
  5001  000E4C  2A21               	incf	_indexNextUser^0,f,c
  5002                           
  5003                           ;Usuaris.c: 197:     if(indexNextUser == 159) indexNextUser = 16;
  5004  000E4E  0E9F               	movlw	159
  5005  000E50  1821               	xorwf	_indexNextUser^0,w,c
  5006  000E52  A4D8               	btfss	status,2,c
  5007  000E54  D002               	goto	l4956
  5008  000E56  0E10               	movlw	16
  5009  000E58  6E21               	movwf	_indexNextUser^0,c
  5010  000E5A                     l4956:
  5011                           
  5012                           ;Usuaris.c: 198:     indexNextUserStruct++;
  5013  000E5A  2A20               	incf	_indexNextUserStruct^0,f,c
  5014                           
  5015                           ;Usuaris.c: 199:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  5016  000E5C  0E08               	movlw	8
  5017  000E5E  1820               	xorwf	_indexNextUserStruct^0,w,c
  5018  000E60  A4D8               	btfss	status,2,c
  5019  000E62  D002               	goto	l4962
  5020  000E64  0E00               	movlw	0
  5021  000E66  6E20               	movwf	_indexNextUserStruct^0,c
  5022  000E68                     l4962:
  5023                           
  5024                           ;Usuaris.c: 200:     if(numUsuaris != 8) numUsuaris++;
  5025  000E68  0E08               	movlw	8
  5026  000E6A  1822               	xorwf	_numUsuaris^0,w,c
  5027  000E6C  B4D8               	btfsc	status,2,c
  5028  000E6E  D78B               	goto	l4916
  5029  000E70  2A22               	incf	_numUsuaris^0,f,c
  5030  000E72  D789               	goto	l4916
  5031  000E74                     l4970:
  5032  000E74  501D               	movf	UmotorUsers@state^0,w,c
  5033  000E76  6E6D               	movwf	??_UmotorUsers^0,c
  5034  000E78  6A6E               	clrf	(??_UmotorUsers+1)^0,c
  5035                           
  5036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5037                           ; Switch size 1, requested type "simple"
  5038                           ; Number of cases is 1, Range of values is 0 to 0
  5039                           ; switch strategies available:
  5040                           ; Name         Instructions Cycles
  5041                           ; simple_byte            4     3 (average)
  5042                           ;	Chosen strategy is simple_byte
  5043  000E7A  506E               	movf	(??_UmotorUsers+1)^0,w,c
  5044  000E7C  0A00               	xorlw	0	; case 0
  5045  000E7E  A4D8               	btfss	status,2,c
  5046  000E80  0012               	return	
  5047                           
  5048                           ; Switch size 1, requested type "simple"
  5049                           ; Number of cases is 4, Range of values is 0 to 3
  5050                           ; switch strategies available:
  5051                           ; Name         Instructions Cycles
  5052                           ; simple_byte           13     7 (average)
  5053                           ;	Chosen strategy is simple_byte
  5054  000E82  506D               	movf	??_UmotorUsers^0,w,c
  5055  000E84  0A00               	xorlw	0	; case 0
  5056  000E86  B4D8               	btfsc	status,2,c
  5057  000E88  D74E               	goto	l680
  5058  000E8A  0A01               	xorlw	1	; case 1
  5059  000E8C  B4D8               	btfsc	status,2,c
  5060  000E8E  D75E               	goto	l4902
  5061  000E90  0A03               	xorlw	3	; case 2
  5062  000E92  B4D8               	btfsc	status,2,c
  5063  000E94  D77B               	goto	l4918
  5064  000E96  0A01               	xorlw	1	; case 3
  5065  000E98  A4D8               	btfss	status,2,c
  5066  000E9A  0012               	return	
  5067  000E9C  D7A6               	goto	l4934
  5068  000E9E                     __end_of_UmotorUsers:
  5069                           	callstack 0
  5070                           
  5071 ;; *************** function _escriureCharEEPROM *****************
  5072 ;; Defined at:
  5073 ;;		line 57 in file "Usuaris.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  c               1    wreg     unsigned char 
  5076 ;;  pos             1    5[COMRAM] unsigned char 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  c               1    6[COMRAM] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/1
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1
  5088 ;;      Params:         1       0       0
  5089 ;;      Locals:         1       0       0
  5090 ;;      Temps:          0       0       0
  5091 ;;      Totals:         2       0       0
  5092 ;;Total ram usage:        2 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; Hardware stack levels required when called: 2
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_UmotorUsers
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text42
  5103  001AE0                     __ptext42:
  5104                           	callstack 0
  5105  001AE0                     _escriureCharEEPROM:
  5106                           	callstack 27
  5107                           
  5108                           ;incstack = 0
  5109                           ;escriureCharEEPROM@c stored from wreg
  5110  001AE0  6E69               	movwf	escriureCharEEPROM@c^0,c
  5111                           
  5112                           ;Usuaris.c: 58:     EEADR = pos;
  5113  001AE2  C068  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  5114                           
  5115                           ;Usuaris.c: 59:     EEDATA = c;
  5116  001AE6  C069  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  5117                           
  5118                           ;Usuaris.c: 60:     EECON1bits.EEPGD = 0;
  5119  001AEA  9EA6               	bcf	166,7,c	;volsfr
  5120                           
  5121                           ;Usuaris.c: 61:     EECON1bits.CFGS = 0;
  5122  001AEC  9CA6               	bcf	166,6,c	;volsfr
  5123                           
  5124                           ;Usuaris.c: 62:     EECON1bits.WREN = 1;
  5125  001AEE  84A6               	bsf	166,2,c	;volsfr
  5126                           
  5127                           ;Usuaris.c: 63:     INTCONbits.GIE = 0;
  5128  001AF0  9EF2               	bcf	242,7,c	;volatile
  5129                           
  5130                           ;Usuaris.c: 64:     EECON2 = 85;
  5131  001AF2  0E55               	movlw	85
  5132  001AF4  6EA7               	movwf	167,c	;volsfr
  5133                           
  5134                           ;Usuaris.c: 65:     EECON2 = 170;
  5135  001AF6  0EAA               	movlw	170
  5136  001AF8  6EA7               	movwf	167,c	;volsfr
  5137                           
  5138                           ;Usuaris.c: 66:     EECON1bits.WR = 1;
  5139  001AFA  82A6               	bsf	166,1,c	;volsfr
  5140  001AFC                     l639:
  5141  001AFC  B2A6               	btfsc	166,1,c	;volsfr
  5142  001AFE  D7FE               	goto	l639
  5143                           
  5144                           ;Usuaris.c: 68:     INTCONbits.GIE = 1;
  5145  001B00  8EF2               	bsf	242,7,c	;volatile
  5146  001B02  0012               	return		;funcret
  5147  001B04                     __end_of_escriureCharEEPROM:
  5148                           	callstack 0
  5149                           
  5150 ;; *************** function _compareStrings *****************
  5151 ;; Defined at:
  5152 ;;		line 129 in file "Usuaris.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  a               1    5[COMRAM] PTR const unsigned char 
  5155 ;;		 -> tmpUsername(9), 
  5156 ;;  b               2    6[COMRAM] PTR const unsigned char 
  5157 ;;		 -> usuaris.username(9), usuaris(184), 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;		None
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  1    wreg      unsigned char 
  5162 ;; Registers used:
  5163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/1
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1
  5169 ;;      Params:         3       0       0
  5170 ;;      Locals:         0       0       0
  5171 ;;      Temps:          2       0       0
  5172 ;;      Totals:         5       0       0
  5173 ;;Total ram usage:        5 bytes
  5174 ;; Hardware stack levels used: 1
  5175 ;; Hardware stack levels required when called: 2
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_UmotorUsers
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text43
  5184  00188E                     __ptext43:
  5185                           	callstack 0
  5186  00188E                     _compareStrings:
  5187                           	callstack 27
  5188                           
  5189                           ;Usuaris.c: 130:     while (*a){
  5190                           
  5191                           ;incstack = 0
  5192  00188E  D00E               	goto	l4004
  5193  001890                     l3998:
  5194                           
  5195                           ;Usuaris.c: 131:         if (*a != *b)break;
  5196  001890  C069  FFD9         	movff	compareStrings@b,fsr2l
  5197  001894  C06A  FFDA         	movff	compareStrings@b+1,fsr2h
  5198  001898  5068               	movf	compareStrings@a^0,w,c
  5199  00189A  6EE1               	movwf	fsr1l,c
  5200  00189C  6AE2               	clrf	fsr1h,c
  5201  00189E  50DE               	movf	postinc2,w,c
  5202  0018A0  18E6               	xorwf	postinc1,w,c
  5203  0018A2  A4D8               	btfss	status,2,c
  5204  0018A4  D009               	goto	u3040
  5205                           
  5206                           ;Usuaris.c: 132:         a++;
  5207  0018A6  2A68               	incf	compareStrings@a^0,f,c
  5208                           
  5209                           ;Usuaris.c: 133:         b++;
  5210  0018A8  4A69               	infsnz	compareStrings@b^0,f,c
  5211  0018AA  2A6A               	incf	(compareStrings@b+1)^0,f,c
  5212  0018AC                     l4004:
  5213                           
  5214                           ;Usuaris.c: 130:     while (*a){
  5215  0018AC  5068               	movf	compareStrings@a^0,w,c
  5216  0018AE  6ED9               	movwf	fsr2l,c
  5217  0018B0  6ADA               	clrf	fsr2h,c
  5218  0018B2  50DF               	movf	indf2,w,c
  5219  0018B4  A4D8               	btfss	status,2,c
  5220  0018B6  D7EC               	goto	l3998
  5221  0018B8                     u3040:
  5222                           
  5223                           ;Usuaris.c: 135:     return *(const unsigned char*)a - *(const unsigned char*)b;
  5224  0018B8  C069  FFD9         	movff	compareStrings@b,fsr2l
  5225  0018BC  C06A  FFDA         	movff	compareStrings@b+1,fsr2h
  5226  0018C0  50DF               	movf	indf2,w,c
  5227  0018C2  6E6B               	movwf	??_compareStrings^0,c
  5228  0018C4  5068               	movf	compareStrings@a^0,w,c
  5229  0018C6  6ED9               	movwf	fsr2l,c
  5230  0018C8  6ADA               	clrf	fsr2h,c
  5231  0018CA  50DF               	movf	indf2,w,c
  5232  0018CC  6E6C               	movwf	(??_compareStrings+1)^0,c
  5233  0018CE  506B               	movf	??_compareStrings^0,w,c
  5234  0018D0  5C6C               	subwf	(??_compareStrings+1)^0,w,c
  5235  0018D2  0012               	return		;funcret
  5236  0018D4                     __end_of_compareStrings:
  5237                           	callstack 0
  5238                           
  5239 ;; *************** function _Uinit *****************
  5240 ;; Defined at:
  5241 ;;		line 70 in file "Usuaris.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;		None
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  j               1    9[COMRAM] unsigned char 
  5246 ;;  j               1    8[COMRAM] unsigned char 
  5247 ;;  i               1    7[COMRAM] unsigned char 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      void 
  5250 ;; Registers used:
  5251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1
  5257 ;;      Params:         0       0       0
  5258 ;;      Locals:         3       0       0
  5259 ;;      Temps:          2       0       0
  5260 ;;      Totals:         5       0       0
  5261 ;;Total ram usage:        5 bytes
  5262 ;; Hardware stack levels used: 1
  5263 ;; Hardware stack levels required when called: 2
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_main
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text44
  5272  001372                     __ptext44:
  5273                           	callstack 0
  5274  001372                     _Uinit:
  5275                           	callstack 28
  5276                           
  5277                           ;Usuaris.c: 75:     EEADR = 0;
  5278                           
  5279                           ;incstack = 0
  5280  001372  0E00               	movlw	0
  5281  001374  6EA9               	movwf	169,c	;volatile
  5282                           
  5283                           ;Usuaris.c: 76:     EECON1bits.EEPGD = 0;
  5284  001376  9EA6               	bcf	166,7,c	;volsfr
  5285                           
  5286                           ;Usuaris.c: 77:     EECON1bits.CFGS = 0;
  5287  001378  9CA6               	bcf	166,6,c	;volsfr
  5288                           
  5289                           ;Usuaris.c: 78:     EECON1bits.RD = 1;
  5290  00137A  80A6               	bsf	166,0,c	;volsfr
  5291  00137C                     l645:
  5292  00137C  B0A6               	btfsc	166,0,c	;volsfr
  5293  00137E  D7FE               	goto	l645
  5294                           
  5295                           ;Usuaris.c: 80:     numUsuaris = EEDATA;
  5296  001380  CFA8 F022          	movff	4008,_numUsuaris	;volatile
  5297                           
  5298                           ;Usuaris.c: 83:     EEADR++;
  5299  001384  2AA9               	incf	169,f,c	;volatile
  5300                           
  5301                           ;Usuaris.c: 84:     EECON1bits.EEPGD = 0;
  5302  001386  9EA6               	bcf	166,7,c	;volsfr
  5303                           
  5304                           ;Usuaris.c: 85:     EECON1bits.CFGS = 0;
  5305  001388  9CA6               	bcf	166,6,c	;volsfr
  5306  00138A                     l648:
  5307  00138A  B0A6               	btfsc	166,0,c	;volsfr
  5308  00138C  D7FE               	goto	l648
  5309                           
  5310                           ;Usuaris.c: 88:     indexNextUser = EEDATA;
  5311  00138E  CFA8 F021          	movff	4008,_indexNextUser	;volatile
  5312                           
  5313                           ;Usuaris.c: 90:     EEADR++;
  5314  001392  2AA9               	incf	169,f,c	;volatile
  5315                           
  5316                           ;Usuaris.c: 92:     for(char i = 0; i< numUsuaris; i++){
  5317  001394  0E00               	movlw	0
  5318  001396  6E6A               	movwf	Uinit@i^0,c
  5319  001398  D041               	goto	l2440
  5320  00139A                     l2410:
  5321                           
  5322                           ;Usuaris.c: 93:         for(char j = 0; j<9; j++){
  5323  00139A  0E00               	movlw	0
  5324  00139C  6E6B               	movwf	Uinit@j^0,c
  5325  00139E                     l653:
  5326                           
  5327                           ;Usuaris.c: 94:             EECON1bits.EEPGD = 0;
  5328  00139E  9EA6               	bcf	166,7,c	;volsfr
  5329                           
  5330                           ;Usuaris.c: 95:             EECON1bits.CFGS = 0;
  5331  0013A0  9CA6               	bcf	166,6,c	;volsfr
  5332                           
  5333                           ;Usuaris.c: 96:             EECON1bits.RD = 1;
  5334  0013A2  80A6               	bsf	166,0,c	;volsfr
  5335  0013A4                     l655:
  5336  0013A4  B0A6               	btfsc	166,0,c	;volsfr
  5337  0013A6  D7FE               	goto	l655
  5338                           
  5339                           ;Usuaris.c: 98:             usuaris[i].username[j] = EEDATA;
  5340  0013A8  506A               	movf	Uinit@i^0,w,c
  5341  0013AA  0D17               	mullw	23
  5342  0013AC  0E00               	movlw	low _usuaris
  5343  0013AE  6E68               	movwf	??_Uinit^0,c
  5344  0013B0  0E01               	movlw	high _usuaris
  5345  0013B2  6E69               	movwf	(??_Uinit+1)^0,c
  5346  0013B4  50F3               	movf	243,w,c
  5347  0013B6  2668               	addwf	??_Uinit^0,f,c
  5348  0013B8  50F4               	movf	244,w,c
  5349  0013BA  2269               	addwfc	(??_Uinit+1)^0,f,c
  5350  0013BC  506B               	movf	Uinit@j^0,w,c
  5351  0013BE  2468               	addwf	??_Uinit^0,w,c
  5352  0013C0  6ED9               	movwf	fsr2l,c
  5353  0013C2  0E00               	movlw	0
  5354  0013C4  2069               	addwfc	(??_Uinit+1)^0,w,c
  5355  0013C6  6EDA               	movwf	fsr2h,c
  5356  0013C8  CFA8 FFDF          	movff	4008,indf2	;volatile
  5357                           
  5358                           ;Usuaris.c: 99:             EEADR++;
  5359  0013CC  2AA9               	incf	169,f,c	;volatile
  5360                           
  5361                           ;Usuaris.c: 100:         }
  5362  0013CE  2A6B               	incf	Uinit@j^0,f,c
  5363  0013D0  0E08               	movlw	8
  5364  0013D2  646B               	cpfsgt	Uinit@j^0,c
  5365  0013D4  D7E4               	goto	l653
  5366                           
  5367                           ;Usuaris.c: 101:         for(char j = 0; j<9; j++){
  5368  0013D6  0E00               	movlw	0
  5369  0013D8  6E6C               	movwf	Uinit@j_1140^0,c
  5370  0013DA                     l658:
  5371                           
  5372                           ;Usuaris.c: 102:             EECON1bits.EEPGD = 0;
  5373  0013DA  9EA6               	bcf	166,7,c	;volsfr
  5374                           
  5375                           ;Usuaris.c: 103:             EECON1bits.CFGS = 0;
  5376  0013DC  9CA6               	bcf	166,6,c	;volsfr
  5377                           
  5378                           ;Usuaris.c: 104:             EECON1bits.RD = 1;
  5379  0013DE  80A6               	bsf	166,0,c	;volsfr
  5380  0013E0                     l660:
  5381  0013E0  B0A6               	btfsc	166,0,c	;volsfr
  5382  0013E2  D7FE               	goto	l660
  5383                           
  5384                           ;Usuaris.c: 106:             usuaris[i].password[j] = EEDATA;
  5385  0013E4  506A               	movf	Uinit@i^0,w,c
  5386  0013E6  0D17               	mullw	23
  5387  0013E8  0E00               	movlw	low _usuaris
  5388  0013EA  6E68               	movwf	??_Uinit^0,c
  5389  0013EC  0E01               	movlw	high _usuaris
  5390  0013EE  6E69               	movwf	(??_Uinit+1)^0,c
  5391  0013F0  0E09               	movlw	9
  5392  0013F2  2668               	addwf	??_Uinit^0,f,c
  5393  0013F4  0E00               	movlw	0
  5394  0013F6  2269               	addwfc	(??_Uinit+1)^0,f,c
  5395  0013F8  50F3               	movf	243,w,c
  5396  0013FA  2668               	addwf	??_Uinit^0,f,c
  5397  0013FC  50F4               	movf	244,w,c
  5398  0013FE  2269               	addwfc	(??_Uinit+1)^0,f,c
  5399  001400  506C               	movf	Uinit@j_1140^0,w,c
  5400  001402  2468               	addwf	??_Uinit^0,w,c
  5401  001404  6ED9               	movwf	fsr2l,c
  5402  001406  0E00               	movlw	0
  5403  001408  2069               	addwfc	(??_Uinit+1)^0,w,c
  5404  00140A  6EDA               	movwf	fsr2h,c
  5405  00140C  CFA8 FFDF          	movff	4008,indf2	;volatile
  5406                           
  5407                           ;Usuaris.c: 107:             EEADR++;
  5408  001410  2AA9               	incf	169,f,c	;volatile
  5409                           
  5410                           ;Usuaris.c: 108:         }
  5411  001412  2A6C               	incf	Uinit@j_1140^0,f,c
  5412  001414  0E08               	movlw	8
  5413  001416  646C               	cpfsgt	Uinit@j_1140^0,c
  5414  001418  D7E0               	goto	l658
  5415                           
  5416                           ;Usuaris.c: 109:     }
  5417  00141A  2A6A               	incf	Uinit@i^0,f,c
  5418  00141C                     l2440:
  5419  00141C  5022               	movf	_numUsuaris^0,w,c
  5420  00141E  5C6A               	subwf	Uinit@i^0,w,c
  5421  001420  B0D8               	btfsc	status,0,c
  5422  001422  0012               	return	
  5423  001424  D7BA               	goto	l2410
  5424  001426                     __end_of_Uinit:
  5425                           	callstack 0
  5426                           
  5427 ;; *************** function _TiInitTimer *****************
  5428 ;; Defined at:
  5429 ;;		line 18 in file "TiTTimer.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;		None
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1    wreg      void 
  5436 ;; Registers used:
  5437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMRAM   BANK0   BANK1
  5443 ;;      Params:         0       0       0
  5444 ;;      Locals:         0       0       0
  5445 ;;      Temps:          0       0       0
  5446 ;;      Totals:         0       0       0
  5447 ;;Total ram usage:        0 bytes
  5448 ;; Hardware stack levels used: 1
  5449 ;; Hardware stack levels required when called: 2
  5450 ;; This function calls:
  5451 ;;		Nothing
  5452 ;; This function is called by:
  5453 ;;		_main
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           	psect	text45
  5458  001988                     __ptext45:
  5459                           	callstack 0
  5460  001988                     _TiInitTimer:
  5461                           	callstack 28
  5462                           
  5463                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  5464                           
  5465                           ;incstack = 0
  5466  001988  9ED0               	bcf	208,7,c	;volatile
  5467                           
  5468                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  5469  00198A  8EF2               	bsf	242,7,c	;volatile
  5470                           
  5471                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  5472  00198C  8CF2               	bsf	242,6,c	;volatile
  5473                           
  5474                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  5475  00198E  8AF2               	bsf	242,5,c	;volatile
  5476                           
  5477                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  5478  001990  94F2               	bcf	242,2,c	;volatile
  5479                           
  5480                           ;TiTTimer.c: 25:     T0CON = 136;
  5481  001992  0E88               	movlw	136
  5482  001994  6ED5               	movwf	213,c	;volatile
  5483                           
  5484                           ;TiTTimer.c: 27:     TMR0H = 223;
  5485  001996  0EDF               	movlw	223
  5486  001998  6ED7               	movwf	215,c	;volatile
  5487                           
  5488                           ;TiTTimer.c: 28:     TMR0L = 148;
  5489  00199A  0E94               	movlw	148
  5490  00199C  6ED6               	movwf	214,c	;volatile
  5491                           
  5492                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  5493  00199E  8ED5               	bsf	213,7,c	;volatile
  5494                           
  5495                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  5496  0019A0  0E00               	movlw	0
  5497  0019A2  6E29               	movwf	_counter^0,c
  5498  0019A4                     l4108:
  5499  0019A4  0E07               	movlw	7
  5500  0019A6  6429               	cpfsgt	_counter^0,c
  5501  0019A8  D001               	goto	l4112
  5502  0019AA  0012               	return	
  5503  0019AC                     l4112:
  5504                           
  5505                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  5506  0019AC  5029               	movf	_counter^0,w,c
  5507  0019AE  0D03               	mullw	3
  5508  0019B0  50F3               	movf	243,w,c
  5509  0019B2  0F82               	addlw	low (_s_Timers+2)
  5510  0019B4  6ED9               	movwf	fsr2l,c
  5511  0019B6  6ADA               	clrf	fsr2h,c
  5512  0019B8  0E00               	movlw	0
  5513  0019BA  6EDF               	movwf	indf2,c
  5514                           
  5515                           ;TiTTimer.c: 33:     }
  5516  0019BC  2A29               	incf	_counter^0,f,c
  5517  0019BE  D7F2               	goto	l4108
  5518  0019C0                     __end_of_TiInitTimer:
  5519                           	callstack 0
  5520                           
  5521 ;; *************** function _TeTeclat *****************
  5522 ;; Defined at:
  5523 ;;		line 22 in file "TeTeclat.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/1
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1
  5537 ;;      Params:         0       0       0
  5538 ;;      Locals:         0       0       0
  5539 ;;      Temps:          3       0       0
  5540 ;;      Totals:         3       0       0
  5541 ;;Total ram usage:        3 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 3
  5544 ;; This function calls:
  5545 ;;		_MsetNovaTecla
  5546 ;;		_SsetNovaTecla
  5547 ;;		_TiGetTics
  5548 ;;		_TiResetTics
  5549 ;; This function is called by:
  5550 ;;		_main
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text46
  5555  000E9E                     __ptext46:
  5556                           	callstack 0
  5557  000E9E                     _TeTeclat:
  5558                           	callstack 27
  5559                           
  5560                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  5561                           
  5562                           ;incstack = 0
  5563  000E9E  A083               	btfss	131,0,c	;volatile
  5564  000EA0  D003               	goto	u4870
  5565  000EA2  6A6F               	clrf	??_TeTeclat^0,c
  5566  000EA4  2A6F               	incf	??_TeTeclat^0,f,c
  5567  000EA6  D001               	goto	u4878
  5568  000EA8                     u4870:
  5569  000EA8  6A6F               	clrf	??_TeTeclat^0,c
  5570  000EAA                     u4878:
  5571  000EAA  A283               	btfss	131,1,c	;volatile
  5572  000EAC  D002               	goto	u4880
  5573  000EAE  0E01               	movlw	1
  5574  000EB0  D001               	goto	u4886
  5575  000EB2                     u4880:
  5576  000EB2  0E00               	movlw	0
  5577  000EB4                     u4886:
  5578  000EB4  0D02               	mullw	2
  5579  000EB6  CFF3 F070          	movff	prodl,??_TeTeclat+1
  5580  000EBA  A483               	btfss	131,2,c	;volatile
  5581  000EBC  D002               	goto	u4890
  5582  000EBE  0E01               	movlw	1
  5583  000EC0  D001               	goto	u4896
  5584  000EC2                     u4890:
  5585  000EC2  0E00               	movlw	0
  5586  000EC4                     u4896:
  5587  000EC4  0D03               	mullw	3
  5588  000EC6  CFF3 F071          	movff	prodl,??_TeTeclat+2
  5589  000ECA  A683               	btfss	131,3,c	;volatile
  5590  000ECC  D002               	goto	u4900
  5591  000ECE  0E01               	movlw	1
  5592  000ED0  D001               	goto	u4906
  5593  000ED2                     u4900:
  5594  000ED2  0E00               	movlw	0
  5595  000ED4                     u4906:
  5596  000ED4  0D04               	mullw	4
  5597  000ED6  50F3               	movf	243,w,c
  5598  000ED8  2471               	addwf	(??_TeTeclat+2)^0,w,c
  5599  000EDA  2470               	addwf	(??_TeTeclat+1)^0,w,c
  5600  000EDC  246F               	addwf	??_TeTeclat^0,w,c
  5601  000EDE  6E2A               	movwf	TeTeclat@files^0,c
  5602                           
  5603                           ;TeTeclat.c: 27:  switch(state) {
  5604  000EE0  D06F               	goto	l5246
  5605  000EE2                     l5172:
  5606                           
  5607                           ;TeTeclat.c: 29:    if (files==0) {
  5608  000EE2  502A               	movf	TeTeclat@files^0,w,c
  5609  000EE4  A4D8               	btfss	status,2,c
  5610  000EE6  D007               	goto	l5180
  5611                           
  5612                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  5613  000EE8  888C               	bsf	140,4,c	;volatile
  5614                           
  5615                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  5616  000EEA  9A8C               	bcf	140,5,c	;volatile
  5617                           
  5618                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  5619  000EEC  9C8C               	bcf	140,6,c	;volatile
  5620                           
  5621                           ;TeTeclat.c: 33:     cols=0;
  5622  000EEE  0E00               	movlw	0
  5623  000EF0  6E2B               	movwf	TeTeclat@cols^0,c
  5624  000EF2                     l5178:
  5625                           
  5626                           ;TeTeclat.c: 34:     state++;
  5627  000EF2  2A2C               	incf	TeTeclat@state^0,f,c
  5628                           
  5629                           ;TeTeclat.c: 35:    }
  5630  000EF4  0012               	return	
  5631  000EF6                     l5180:
  5632  000EF6  502A               	movf	TeTeclat@files^0,w,c
  5633  000EF8  B4D8               	btfsc	status,2,c
  5634  000EFA  0012               	return	
  5635                           
  5636                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  5637  000EFC  502D               	movf	_tiTeclat^0,w,c
  5638  000EFE  ECD6  F00D         	call	_TiResetTics
  5639  000F02                     l5184:
  5640                           
  5641                           ;TeTeclat.c: 38:     state = 3;
  5642  000F02  0E03               	movlw	3
  5643  000F04  6E2C               	movwf	TeTeclat@state^0,c
  5644  000F06  0012               	return	
  5645  000F08                     l5186:
  5646                           
  5647                           ;TeTeclat.c: 42:    if (files==0) {
  5648  000F08  502A               	movf	TeTeclat@files^0,w,c
  5649  000F0A  A4D8               	btfss	status,2,c
  5650  000F0C  D005               	goto	l5194
  5651                           
  5652                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  5653  000F0E  988C               	bcf	140,4,c	;volatile
  5654                           
  5655                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  5656  000F10  8A8C               	bsf	140,5,c	;volatile
  5657                           
  5658                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  5659  000F12  9C8C               	bcf	140,6,c	;volatile
  5660                           
  5661                           ;TeTeclat.c: 46:     cols=1;
  5662  000F14  0E01               	movlw	1
  5663  000F16  D7EC               	goto	L2
  5664  000F18                     l5194:
  5665  000F18  502A               	movf	TeTeclat@files^0,w,c
  5666  000F1A  B4D8               	btfsc	status,2,c
  5667  000F1C  0012               	return	
  5668                           
  5669                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  5670  000F1E  502D               	movf	_tiTeclat^0,w,c
  5671  000F20  ECD6  F00D         	call	_TiResetTics
  5672  000F24  D7EE               	goto	l5184
  5673  000F26                     l5200:
  5674                           
  5675                           ;TeTeclat.c: 55:    if (files==0) {
  5676  000F26  502A               	movf	TeTeclat@files^0,w,c
  5677  000F28  A4D8               	btfss	status,2,c
  5678  000F2A  D008               	goto	l5206
  5679                           
  5680                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  5681  000F2C  988C               	bcf	140,4,c	;volatile
  5682                           
  5683                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  5684  000F2E  9A8C               	bcf	140,5,c	;volatile
  5685                           
  5686                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  5687  000F30  8C8C               	bsf	140,6,c	;volatile
  5688                           
  5689                           ;TeTeclat.c: 59:     cols=2;
  5690  000F32  0E02               	movlw	2
  5691  000F34  6E2B               	movwf	TeTeclat@cols^0,c
  5692                           
  5693                           ;TeTeclat.c: 60:     state = 0;
  5694  000F36  0E00               	movlw	0
  5695  000F38  6E2C               	movwf	TeTeclat@state^0,c
  5696                           
  5697                           ;TeTeclat.c: 61:    }
  5698  000F3A  0012               	return	
  5699  000F3C                     l5206:
  5700  000F3C  502A               	movf	TeTeclat@files^0,w,c
  5701  000F3E  B4D8               	btfsc	status,2,c
  5702  000F40  0012               	return	
  5703                           
  5704                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  5705  000F42  502D               	movf	_tiTeclat^0,w,c
  5706  000F44  ECD6  F00D         	call	_TiResetTics
  5707  000F48  D7D4               	goto	l5178
  5708  000F4A                     l5212:
  5709                           
  5710                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  5711  000F4A  502D               	movf	_tiTeclat^0,w,c
  5712  000F4C  EC5A  F00D         	call	_TiGetTics
  5713  000F50  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  5714  000F52  0012               	return	
  5715  000F54  D7CE               	goto	l5178
  5716  000F56                     l5216:
  5717                           
  5718                           ;TeTeclat.c: 73:    if (files==0) {
  5719  000F56  502A               	movf	TeTeclat@files^0,w,c
  5720  000F58  A4D8               	btfss	status,2,c
  5721  000F5A  D003               	goto	l5220
  5722                           
  5723                           ;TeTeclat.c: 74:     state = 1;
  5724  000F5C  0E01               	movlw	1
  5725  000F5E  6E2C               	movwf	TeTeclat@state^0,c
  5726                           
  5727                           ;TeTeclat.c: 75:    }
  5728  000F60  0012               	return	
  5729  000F62                     l5220:
  5730  000F62  502A               	movf	TeTeclat@files^0,w,c
  5731  000F64  B4D8               	btfsc	status,2,c
  5732  000F66  0012               	return	
  5733                           
  5734                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  5735  000F68  502A               	movf	TeTeclat@files^0,w,c
  5736  000F6A  0D03               	mullw	3
  5737  000F6C  50F3               	movf	243,w,c
  5738  000F6E  0F9E               	addlw	low (_teclaPremuda+253)
  5739  000F70  242B               	addwf	TeTeclat@cols^0,w,c
  5740  000F72  6ED9               	movwf	fsr2l,c
  5741  000F74  6ADA               	clrf	fsr2h,c
  5742  000F76  50DF               	movf	indf2,w,c
  5743  000F78  EC62  F00E         	call	_MsetNovaTecla
  5744                           
  5745                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  5746  000F7C  502A               	movf	TeTeclat@files^0,w,c
  5747  000F7E  0D03               	mullw	3
  5748  000F80  50F3               	movf	243,w,c
  5749  000F82  0F9E               	addlw	low (_teclaPremuda+253)
  5750  000F84  242B               	addwf	TeTeclat@cols^0,w,c
  5751  000F86  6ED9               	movwf	fsr2l,c
  5752  000F88  6ADA               	clrf	fsr2h,c
  5753  000F8A  50DF               	movf	indf2,w,c
  5754  000F8C  EC5E  F00E         	call	_SsetNovaTecla
  5755  000F90  D7B0               	goto	l5178
  5756  000F92                     l5226:
  5757                           
  5758                           ;TeTeclat.c: 84:    if (files==0) {
  5759  000F92  502A               	movf	TeTeclat@files^0,w,c
  5760  000F94  A4D8               	btfss	status,2,c
  5761  000F96  0012               	return	
  5762                           
  5763                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  5764  000F98  502D               	movf	_tiTeclat^0,w,c
  5765  000F9A  ECD6  F00D         	call	_TiResetTics
  5766  000F9E  D7A9               	goto	l5178
  5767  000FA0                     l5232:
  5768                           
  5769                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  5770  000FA0  502D               	movf	_tiTeclat^0,w,c
  5771  000FA2  EC5A  F00D         	call	_TiGetTics
  5772  000FA6  D7D4               	goto	L3
  5773  000FA8                     l5236:
  5774                           
  5775                           ;TeTeclat.c: 95:    if (files!=0) {
  5776  000FA8  502A               	movf	TeTeclat@files^0,w,c
  5777  000FAA  B4D8               	btfsc	status,2,c
  5778  000FAC  D003               	goto	l5240
  5779                           
  5780                           ;TeTeclat.c: 96:     state = 5;
  5781  000FAE  0E05               	movlw	5
  5782  000FB0  6E2C               	movwf	TeTeclat@state^0,c
  5783                           
  5784                           ;TeTeclat.c: 97:    }
  5785  000FB2  0012               	return	
  5786  000FB4                     l5240:
  5787  000FB4  502A               	movf	TeTeclat@files^0,w,c
  5788  000FB6  A4D8               	btfss	status,2,c
  5789  000FB8  0012               	return	
  5790                           
  5791                           ;TeTeclat.c: 99:     state = 0;
  5792  000FBA  0E00               	movlw	0
  5793  000FBC  6E2C               	movwf	TeTeclat@state^0,c
  5794  000FBE  0012               	return	
  5795  000FC0                     l5246:
  5796  000FC0  502C               	movf	TeTeclat@state^0,w,c
  5797  000FC2  6E6F               	movwf	??_TeTeclat^0,c
  5798  000FC4  6A70               	clrf	(??_TeTeclat+1)^0,c
  5799                           
  5800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5801                           ; Switch size 1, requested type "simple"
  5802                           ; Number of cases is 1, Range of values is 0 to 0
  5803                           ; switch strategies available:
  5804                           ; Name         Instructions Cycles
  5805                           ; simple_byte            4     3 (average)
  5806                           ;	Chosen strategy is simple_byte
  5807  000FC6  5070               	movf	(??_TeTeclat+1)^0,w,c
  5808  000FC8  0A00               	xorlw	0	; case 0
  5809  000FCA  A4D8               	btfss	status,2,c
  5810  000FCC  0012               	return	
  5811                           
  5812                           ; Switch size 1, requested type "simple"
  5813                           ; Number of cases is 8, Range of values is 0 to 7
  5814                           ; switch strategies available:
  5815                           ; Name         Instructions Cycles
  5816                           ; simple_byte           25    13 (average)
  5817                           ;	Chosen strategy is simple_byte
  5818  000FCE  506F               	movf	??_TeTeclat^0,w,c
  5819  000FD0  0A00               	xorlw	0	; case 0
  5820  000FD2  B4D8               	btfsc	status,2,c
  5821  000FD4  D786               	goto	l5172
  5822  000FD6  0A01               	xorlw	1	; case 1
  5823  000FD8  B4D8               	btfsc	status,2,c
  5824  000FDA  D796               	goto	l5186
  5825  000FDC  0A03               	xorlw	3	; case 2
  5826  000FDE  B4D8               	btfsc	status,2,c
  5827  000FE0  D7A2               	goto	l5200
  5828  000FE2  0A01               	xorlw	1	; case 3
  5829  000FE4  B4D8               	btfsc	status,2,c
  5830  000FE6  D7B1               	goto	l5212
  5831  000FE8  0A07               	xorlw	7	; case 4
  5832  000FEA  B4D8               	btfsc	status,2,c
  5833  000FEC  D7B4               	goto	l5216
  5834  000FEE  0A01               	xorlw	1	; case 5
  5835  000FF0  B4D8               	btfsc	status,2,c
  5836  000FF2  D7CF               	goto	l5226
  5837  000FF4  0A03               	xorlw	3	; case 6
  5838  000FF6  B4D8               	btfsc	status,2,c
  5839  000FF8  D7D3               	goto	l5232
  5840  000FFA  0A01               	xorlw	1	; case 7
  5841  000FFC  A4D8               	btfss	status,2,c
  5842  000FFE  0012               	return	
  5843  001000  D7D3               	goto	l5236
  5844  001002                     __end_of_TeTeclat:
  5845                           	callstack 0
  5846                           
  5847 ;; *************** function _SsetNovaTecla *****************
  5848 ;; Defined at:
  5849 ;;		line 126 in file "Ssms.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  tecla           1    wreg     unsigned char 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  tecla           1    5[COMRAM] unsigned char 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/1
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1
  5863 ;;      Params:         0       0       0
  5864 ;;      Locals:         1       0       0
  5865 ;;      Temps:          0       0       0
  5866 ;;      Totals:         1       0       0
  5867 ;;Total ram usage:        1 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 2
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_TeTeclat
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text47
  5878  001CBC                     __ptext47:
  5879                           	callstack 0
  5880  001CBC                     _SsetNovaTecla:
  5881                           	callstack 27
  5882                           
  5883                           ;incstack = 0
  5884                           ;SsetNovaTecla@tecla stored from wreg
  5885  001CBC  6E68               	movwf	SsetNovaTecla@tecla^0,c
  5886                           
  5887                           ;Ssms.c: 127:     novaTecla = tecla;
  5888  001CBE  C068  F05B         	movff	SsetNovaTecla@tecla,_novaTecla
  5889  001CC2  0012               	return		;funcret
  5890  001CC4                     __end_of_SsetNovaTecla:
  5891                           	callstack 0
  5892                           
  5893 ;; *************** function _MsetNovaTecla *****************
  5894 ;; Defined at:
  5895 ;;		line 28 in file "Menu.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  tecla           1    wreg     unsigned char 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  tecla           1    5[COMRAM] unsigned char 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  1    wreg      void 
  5902 ;; Registers used:
  5903 ;;		wreg
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/1
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1
  5909 ;;      Params:         0       0       0
  5910 ;;      Locals:         1       0       0
  5911 ;;      Temps:          0       0       0
  5912 ;;      Totals:         1       0       0
  5913 ;;Total ram usage:        1 bytes
  5914 ;; Hardware stack levels used: 1
  5915 ;; Hardware stack levels required when called: 2
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_TeTeclat
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text48
  5924  001CC4                     __ptext48:
  5925                           	callstack 0
  5926  001CC4                     _MsetNovaTecla:
  5927                           	callstack 27
  5928                           
  5929                           ;incstack = 0
  5930                           ;MsetNovaTecla@tecla stored from wreg
  5931  001CC4  6E68               	movwf	MsetNovaTecla@tecla^0,c
  5932                           
  5933                           ;Menu.c: 29:     NovaTecla = tecla;
  5934  001CC6  C068  F058         	movff	MsetNovaTecla@tecla,_NovaTecla
  5935  001CCA  0012               	return		;funcret
  5936  001CCC                     __end_of_MsetNovaTecla:
  5937                           	callstack 0
  5938                           
  5939 ;; *************** function _TeInit *****************
  5940 ;; Defined at:
  5941 ;;		line 18 in file "TeTeclat.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;		None
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;		None
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      void 
  5948 ;; Registers used:
  5949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1
  5955 ;;      Params:         0       0       0
  5956 ;;      Locals:         0       0       0
  5957 ;;      Temps:          0       0       0
  5958 ;;      Totals:         0       0       0
  5959 ;;Total ram usage:        0 bytes
  5960 ;; Hardware stack levels used: 1
  5961 ;; Hardware stack levels required when called: 3
  5962 ;; This function calls:
  5963 ;;		_TiGetTimer
  5964 ;; This function is called by:
  5965 ;;		_main
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text49
  5970  001CCC                     __ptext49:
  5971                           	callstack 0
  5972  001CCC                     _TeInit:
  5973                           	callstack 27
  5974                           
  5975                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  5976                           
  5977                           ;incstack = 0
  5978  001CCC  ECA7  F00C         	call	_TiGetTimer	;wreg free
  5979  001CD0  6E2D               	movwf	_tiTeclat^0,c
  5980  001CD2  0012               	return		;funcret
  5981  001CD4                     __end_of_TeInit:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function _Sinit *****************
  5985 ;; Defined at:
  5986 ;;		line 18 in file "Ssms.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1
  6000 ;;      Params:         0       0       0
  6001 ;;      Locals:         0       0       0
  6002 ;;      Temps:          0       0       0
  6003 ;;      Totals:         0       0       0
  6004 ;;Total ram usage:        0 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; Hardware stack levels required when called: 3
  6007 ;; This function calls:
  6008 ;;		_TiGetTimer
  6009 ;; This function is called by:
  6010 ;;		_main
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text50
  6015  001CD4                     __ptext50:
  6016                           	callstack 0
  6017  001CD4                     _Sinit:
  6018                           	callstack 27
  6019                           
  6020                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  6021                           
  6022                           ;incstack = 0
  6023  001CD4  ECA7  F00C         	call	_TiGetTimer	;wreg free
  6024  001CD8  6E5A               	movwf	_timerSMS^0,c
  6025  001CDA  0012               	return		;funcret
  6026  001CDC                     __end_of_Sinit:
  6027                           	callstack 0
  6028                           
  6029 ;; *************** function _SMotor *****************
  6030 ;; Defined at:
  6031 ;;		line 22 in file "Ssms.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;		None
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      void 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1
  6045 ;;      Params:         0       0       0
  6046 ;;      Locals:         0       0       0
  6047 ;;      Temps:          2       0       0
  6048 ;;      Totals:         2       0       0
  6049 ;;Total ram usage:        2 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; Hardware stack levels required when called: 3
  6052 ;; This function calls:
  6053 ;;		_MNovaLletra
  6054 ;;		_TiGetTics
  6055 ;;		_TiResetTics
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text51
  6062  000B28                     __ptext51:
  6063                           	callstack 0
  6064  000B28                     _SMotor:
  6065                           	callstack 27
  6066                           
  6067                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  6068                           
  6069                           ;incstack = 0
  6070  000B28  D0DF               	goto	l4280
  6071  000B2A                     l4124:
  6072                           
  6073                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  6074  000B2A  285B               	incf	_novaTecla^0,w,c
  6075  000B2C  A4D8               	btfss	status,2,c
  6076  000B2E  A879               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6077  000B30  D006               	goto	l4132
  6078                           
  6079                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  6080  000B32  505A               	movf	_timerSMS^0,w,c
  6081  000B34  ECD6  F00D         	call	_TiResetTics
  6082                           
  6083                           ;Ssms.c: 29:     state = 3;
  6084  000B38  0E03               	movlw	3
  6085  000B3A  6E2E               	movwf	SMotor@state^0,c
  6086                           
  6087                           ;Ssms.c: 30:    }
  6088  000B3C  0012               	return	
  6089  000B3E                     l4132:
  6090  000B3E  285B               	incf	_novaTecla^0,w,c
  6091  000B40  A4D8               	btfss	status,2,c
  6092  000B42  0012               	return	
  6093  000B44  505A               	movf	_timerSMS^0,w,c
  6094  000B46  EC5A  F00D         	call	_TiGetTics
  6095  000B4A  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  6096  000B4C  0012               	return	
  6097  000B4E  0E5A               	movlw	90
  6098  000B50  5C68               	subwf	?_TiGetTics^0,w,c
  6099  000B52  0E02               	movlw	2
  6100  000B54  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  6101  000B56  A0D8               	btfss	status,0,c
  6102  000B58  0012               	return	
  6103  000B5A  285C               	incf	_lletraASCII^0,w,c
  6104  000B5C  B4D8               	btfsc	status,2,c
  6105  000B5E  0012               	return	
  6106  000B60  A879               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  6107  000B62  0012               	return	
  6108                           
  6109                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  6110  000B64  505C               	movf	_lletraASCII^0,w,c
  6111  000B66  EC6E  F00E         	call	_MNovaLletra
  6112                           
  6113                           ;Ssms.c: 33:     lletraASCII = -1;
  6114  000B6A  685C               	setf	_lletraASCII^0,c
  6115                           
  6116                           ;Ssms.c: 34:     ultimaTecla = -1;
  6117  000B6C  6859               	setf	_ultimaTecla^0,c
  6118                           
  6119                           ;Ssms.c: 35:     zeroTecla = 0;
  6120  000B6E  0E00               	movlw	0
  6121  000B70  6E2F               	movwf	_zeroTecla^0,c
  6122  000B72                     l4148:
  6123                           
  6124                           ;Ssms.c: 36:     state = 0;
  6125  000B72  0E00               	movlw	0
  6126  000B74  6E2E               	movwf	SMotor@state^0,c
  6127  000B76  0012               	return	
  6128  000B78                     l4150:
  6129                           
  6130                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  6131  000B78  5059               	movf	_ultimaTecla^0,w,c
  6132  000B7A  185B               	xorwf	_novaTecla^0,w,c
  6133  000B7C  A4D8               	btfss	status,2,c
  6134  000B7E  D011               	goto	l4160
  6135  000B80  505A               	movf	_timerSMS^0,w,c
  6136  000B82  EC5A  F00D         	call	_TiGetTics
  6137  000B86  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  6138  000B88  D006               	goto	u3210
  6139  000B8A  0E5A               	movlw	90
  6140  000B8C  5C68               	subwf	?_TiGetTics^0,w,c
  6141  000B8E  0E02               	movlw	2
  6142  000B90  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  6143  000B92  B0D8               	btfsc	status,0,c
  6144  000B94  D006               	goto	l4160
  6145  000B96                     u3210:
  6146                           
  6147                           ;Ssms.c: 41:     novaTecla = -1;
  6148  000B96  685B               	setf	_novaTecla^0,c
  6149                           
  6150                           ;Ssms.c: 42:     sumaPulsacions++;
  6151  000B98  2A30               	incf	_sumaPulsacions^0,f,c
  6152                           
  6153                           ;Ssms.c: 43:     lletraASCII++;
  6154  000B9A  2A5C               	incf	_lletraASCII^0,f,c
  6155                           
  6156                           ;Ssms.c: 44:     state = 2;
  6157  000B9C  0E02               	movlw	2
  6158  000B9E  6E2E               	movwf	SMotor@state^0,c
  6159                           
  6160                           ;Ssms.c: 45:    }
  6161  000BA0  0012               	return	
  6162  000BA2                     l4160:
  6163  000BA2  285B               	incf	_novaTecla^0,w,c
  6164  000BA4  B4D8               	btfsc	status,2,c
  6165  000BA6  0012               	return	
  6166  000BA8  5059               	movf	_ultimaTecla^0,w,c
  6167  000BAA  185B               	xorwf	_novaTecla^0,w,c
  6168  000BAC  B4D8               	btfsc	status,2,c
  6169  000BAE  0012               	return	
  6170                           
  6171                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  6172  000BB0  505C               	movf	_lletraASCII^0,w,c
  6173  000BB2  EC6E  F00E         	call	_MNovaLletra
  6174                           
  6175                           ;Ssms.c: 48:     if(novaTecla != 0){
  6176  000BB6  505B               	movf	_novaTecla^0,w,c
  6177  000BB8  B4D8               	btfsc	status,2,c
  6178  000BBA  D006               	goto	l4172
  6179                           
  6180                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  6181  000BBC  505B               	movf	_novaTecla^0,w,c
  6182  000BBE  0F41               	addlw	low (_lletraInici+254)
  6183  000BC0  6ED9               	movwf	fsr2l,c
  6184  000BC2  6ADA               	clrf	fsr2h,c
  6185  000BC4  50DF               	movf	indf2,w,c
  6186  000BC6  D001               	goto	L10
  6187  000BC8                     l4172:
  6188                           
  6189                           ;Ssms.c: 52:       lletraASCII = '0';
  6190  000BC8  0E30               	movlw	48
  6191  000BCA                     L10:
  6192  000BCA  6E5C               	movwf	_lletraASCII^0,c
  6193                           
  6194                           ;Ssms.c: 53:       zeroTecla=0;
  6195  000BCC  0E00               	movlw	0
  6196  000BCE  6E2F               	movwf	_zeroTecla^0,c
  6197                           
  6198                           ;Ssms.c: 55:     ultimaTecla = novaTecla;
  6199  000BD0  C05B  F059         	movff	_novaTecla,_ultimaTecla
  6200                           
  6201                           ;Ssms.c: 56:     sumaPulsacions = 0;
  6202  000BD4  0E00               	movlw	0
  6203  000BD6  6E30               	movwf	_sumaPulsacions^0,c
  6204                           
  6205                           ;Ssms.c: 57:     novaTecla = -1;
  6206  000BD8  685B               	setf	_novaTecla^0,c
  6207                           
  6208                           ;Ssms.c: 58:     state = 0;
  6209  000BDA  0E00               	movlw	0
  6210  000BDC  6E2E               	movwf	SMotor@state^0,c
  6211  000BDE  0012               	return	
  6212  000BE0                     l4178:
  6213                           
  6214                           ;Ssms.c: 62:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  6215  000BE0  0E07               	movlw	7
  6216  000BE2  1859               	xorwf	_ultimaTecla^0,w,c
  6217  000BE4  B4D8               	btfsc	status,2,c
  6218  000BE6  D00A               	goto	l4186
  6219  000BE8  0E09               	movlw	9
  6220  000BEA  1859               	xorwf	_ultimaTecla^0,w,c
  6221  000BEC  B4D8               	btfsc	status,2,c
  6222  000BEE  D006               	goto	l4186
  6223  000BF0  5059               	movf	_ultimaTecla^0,w,c
  6224  000BF2  B4D8               	btfsc	status,2,c
  6225  000BF4  D003               	goto	l4186
  6226                           
  6227                           ;Ssms.c: 63:     state = 5;
  6228  000BF6  0E05               	movlw	5
  6229  000BF8  6E2E               	movwf	SMotor@state^0,c
  6230                           
  6231                           ;Ssms.c: 64:    }
  6232  000BFA  0012               	return	
  6233  000BFC                     l4186:
  6234  000BFC  0E07               	movlw	7
  6235  000BFE  1859               	xorwf	_ultimaTecla^0,w,c
  6236  000C00  B4D8               	btfsc	status,2,c
  6237  000C02  D004               	goto	u3290
  6238  000C04  0E09               	movlw	9
  6239  000C06  1859               	xorwf	_ultimaTecla^0,w,c
  6240  000C08  A4D8               	btfss	status,2,c
  6241  000C0A  D003               	goto	l4192
  6242  000C0C                     u3290:
  6243                           
  6244                           ;Ssms.c: 66:     state = 6;
  6245  000C0C  0E06               	movlw	6
  6246  000C0E  6E2E               	movwf	SMotor@state^0,c
  6247                           
  6248                           ;Ssms.c: 67:    }
  6249  000C10  0012               	return	
  6250  000C12                     l4192:
  6251  000C12  5059               	movf	_ultimaTecla^0,w,c
  6252  000C14  A4D8               	btfss	status,2,c
  6253  000C16  0012               	return	
  6254                           
  6255                           ;Ssms.c: 69:     zeroTecla++;
  6256  000C18  2A2F               	incf	_zeroTecla^0,f,c
  6257                           
  6258                           ;Ssms.c: 70:     if(zeroTecla == 2) zeroTecla = 0;
  6259  000C1A  0E02               	movlw	2
  6260  000C1C  182F               	xorwf	_zeroTecla^0,w,c
  6261  000C1E  A4D8               	btfss	status,2,c
  6262  000C20  D002               	goto	l4200
  6263  000C22  0E00               	movlw	0
  6264  000C24  6E2F               	movwf	_zeroTecla^0,c
  6265  000C26                     l4200:
  6266                           
  6267                           ;Ssms.c: 71:     lletraASCII = arrayZero[zeroTecla];
  6268  000C26  502F               	movf	_zeroTecla^0,w,c
  6269  000C28  0F4C               	addlw	low _arrayZero
  6270  000C2A  6ED9               	movwf	fsr2l,c
  6271  000C2C  6ADA               	clrf	fsr2h,c
  6272  000C2E  50DF               	movf	indf2,w,c
  6273  000C30  D04B               	goto	L5
  6274  000C32                     l4204:
  6275                           
  6276                           ;Ssms.c: 76:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  6277  000C32  505B               	movf	_novaTecla^0,w,c
  6278  000C34  0A80               	xorlw	128
  6279  000C36  0F7E               	addlw	-130
  6280  000C38  B0D8               	btfsc	status,0,c
  6281  000C3A  D003               	goto	u3330
  6282  000C3C  505B               	movf	_novaTecla^0,w,c
  6283  000C3E  A4D8               	btfss	status,2,c
  6284  000C40  D008               	goto	l4212
  6285  000C42                     u3330:
  6286  000C42  505B               	movf	_novaTecla^0,w,c
  6287  000C44  0A80               	xorlw	128
  6288  000C46  0F76               	addlw	-138
  6289  000C48  B0D8               	btfsc	status,0,c
  6290  000C4A  D003               	goto	l4212
  6291                           
  6292                           ;Ssms.c: 77:     state = 1;
  6293  000C4C  0E01               	movlw	1
  6294  000C4E  6E2E               	movwf	SMotor@state^0,c
  6295                           
  6296                           ;Ssms.c: 78:    }
  6297  000C50  0012               	return	
  6298  000C52                     l4212:
  6299  000C52  505B               	movf	_novaTecla^0,w,c
  6300  000C54  B4D8               	btfsc	status,2,c
  6301  000C56  D00E               	goto	l4224
  6302  000C58  505B               	movf	_novaTecla^0,w,c
  6303  000C5A  0A80               	xorlw	128
  6304  000C5C  0F7E               	addlw	-130
  6305  000C5E  B0D8               	btfsc	status,0,c
  6306  000C60  D009               	goto	l4224
  6307  000C62  285C               	incf	_lletraASCII^0,w,c
  6308  000C64  A4D8               	btfss	status,2,c
  6309  000C66  D006               	goto	l4224
  6310                           
  6311                           ;Ssms.c: 80:     MNovaLletra(novaTecla+48);
  6312  000C68  505B               	movf	_novaTecla^0,w,c
  6313  000C6A  0F30               	addlw	48
  6314  000C6C  EC6E  F00E         	call	_MNovaLletra
  6315  000C70                     l4220:
  6316                           
  6317                           ;Ssms.c: 81:     novaTecla = -1;
  6318  000C70  685B               	setf	_novaTecla^0,c
  6319  000C72  D77F               	goto	l4148
  6320  000C74                     l4224:
  6321  000C74  505B               	movf	_novaTecla^0,w,c
  6322  000C76  B4D8               	btfsc	status,2,c
  6323  000C78  0012               	return	
  6324  000C7A  505B               	movf	_novaTecla^0,w,c
  6325  000C7C  0A80               	xorlw	128
  6326  000C7E  0F7E               	addlw	-130
  6327  000C80  B0D8               	btfsc	status,0,c
  6328  000C82  0012               	return	
  6329  000C84  285C               	incf	_lletraASCII^0,w,c
  6330  000C86  B4D8               	btfsc	status,2,c
  6331  000C88  0012               	return	
  6332                           
  6333                           ;Ssms.c: 85:     MNovaLletra(lletraASCII);
  6334  000C8A  505C               	movf	_lletraASCII^0,w,c
  6335  000C8C  EC6E  F00E         	call	_MNovaLletra
  6336                           
  6337                           ;Ssms.c: 86:     lletraASCII = -1;
  6338  000C90  685C               	setf	_lletraASCII^0,c
  6339                           
  6340                           ;Ssms.c: 87:     state = 4;
  6341  000C92  0E04               	movlw	4
  6342  000C94  6E2E               	movwf	SMotor@state^0,c
  6343  000C96  0012               	return	
  6344  000C98                     l4236:
  6345                           
  6346                           ;Ssms.c: 91:    MNovaLletra(novaTecla+48);
  6347  000C98  505B               	movf	_novaTecla^0,w,c
  6348  000C9A  0F30               	addlw	48
  6349  000C9C  EC6E  F00E         	call	_MNovaLletra
  6350  000CA0  D7E7               	goto	l4220
  6351  000CA2                     l4242:
  6352                           
  6353                           ;Ssms.c: 96:    if (sumaPulsacions == 4) {
  6354  000CA2  0E04               	movlw	4
  6355  000CA4  1830               	xorwf	_sumaPulsacions^0,w,c
  6356  000CA6  A4D8               	btfss	status,2,c
  6357  000CA8  D009               	goto	l4250
  6358  000CAA                     u3410:
  6359                           
  6360                           ;Ssms.c: 97:     lletraASCII = lletraInici[ultimaTecla-2];
  6361  000CAA  5059               	movf	_ultimaTecla^0,w,c
  6362  000CAC  0F41               	addlw	low (_lletraInici+254)
  6363  000CAE  6ED9               	movwf	fsr2l,c
  6364  000CB0  6ADA               	clrf	fsr2h,c
  6365  000CB2  50DF               	movf	indf2,w,c
  6366  000CB4  6E5C               	movwf	_lletraASCII^0,c
  6367                           
  6368                           ;Ssms.c: 98:     sumaPulsacions = 0;
  6369  000CB6  0E00               	movlw	0
  6370  000CB8  6E30               	movwf	_sumaPulsacions^0,c
  6371  000CBA  D75B               	goto	l4148
  6372  000CBC                     l4250:
  6373  000CBC  0E03               	movlw	3
  6374  000CBE  1830               	xorwf	_sumaPulsacions^0,w,c
  6375  000CC0  A4D8               	btfss	status,2,c
  6376  000CC2  D004               	goto	l4256
  6377  000CC4                     u3420:
  6378                           
  6379                           ;Ssms.c: 102:     lletraASCII = ultimaTecla+48;
  6380  000CC4  5059               	movf	_ultimaTecla^0,w,c
  6381  000CC6  0F30               	addlw	48
  6382  000CC8                     L5:
  6383  000CC8  6E5C               	movwf	_lletraASCII^0,c
  6384  000CCA  D753               	goto	l4148
  6385  000CCC                     l4256:
  6386  000CCC  0E03               	movlw	3
  6387  000CCE  6030               	cpfslt	_sumaPulsacions^0,c
  6388  000CD0  0012               	return	
  6389  000CD2  D74F               	goto	l4148
  6390  000CD4                     l4260:
  6391                           
  6392                           ;Ssms.c: 110:    if (sumaPulsacions == 4) {
  6393  000CD4  0E04               	movlw	4
  6394  000CD6  1830               	xorwf	_sumaPulsacions^0,w,c
  6395  000CD8  B4D8               	btfsc	status,2,c
  6396  000CDA  D7F4               	goto	u3420
  6397  000CDC  0E05               	movlw	5
  6398  000CDE  1830               	xorwf	_sumaPulsacions^0,w,c
  6399  000CE0  B4D8               	btfsc	status,2,c
  6400  000CE2  D7E3               	goto	u3410
  6401  000CE4  0E04               	movlw	4
  6402  000CE6  D7F3               	goto	L6
  6403  000CE8                     l4280:
  6404  000CE8  502E               	movf	SMotor@state^0,w,c
  6405  000CEA  6E6F               	movwf	??_SMotor^0,c
  6406  000CEC  6A70               	clrf	(??_SMotor+1)^0,c
  6407                           
  6408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6409                           ; Switch size 1, requested type "simple"
  6410                           ; Number of cases is 1, Range of values is 0 to 0
  6411                           ; switch strategies available:
  6412                           ; Name         Instructions Cycles
  6413                           ; simple_byte            4     3 (average)
  6414                           ;	Chosen strategy is simple_byte
  6415  000CEE  5070               	movf	(??_SMotor+1)^0,w,c
  6416  000CF0  0A00               	xorlw	0	; case 0
  6417  000CF2  A4D8               	btfss	status,2,c
  6418  000CF4  0012               	return	
  6419                           
  6420                           ; Switch size 1, requested type "simple"
  6421                           ; Number of cases is 7, Range of values is 0 to 6
  6422                           ; switch strategies available:
  6423                           ; Name         Instructions Cycles
  6424                           ; simple_byte           22    12 (average)
  6425                           ;	Chosen strategy is simple_byte
  6426  000CF6  506F               	movf	??_SMotor^0,w,c
  6427  000CF8  0A00               	xorlw	0	; case 0
  6428  000CFA  B4D8               	btfsc	status,2,c
  6429  000CFC  D716               	goto	l4124
  6430  000CFE  0A01               	xorlw	1	; case 1
  6431  000D00  B4D8               	btfsc	status,2,c
  6432  000D02  D73A               	goto	l4150
  6433  000D04  0A03               	xorlw	3	; case 2
  6434  000D06  B4D8               	btfsc	status,2,c
  6435  000D08  D76B               	goto	l4178
  6436  000D0A  0A01               	xorlw	1	; case 3
  6437  000D0C  B4D8               	btfsc	status,2,c
  6438  000D0E  D791               	goto	l4204
  6439  000D10  0A07               	xorlw	7	; case 4
  6440  000D12  B4D8               	btfsc	status,2,c
  6441  000D14  D7C1               	goto	l4236
  6442  000D16  0A01               	xorlw	1	; case 5
  6443  000D18  B4D8               	btfsc	status,2,c
  6444  000D1A  D7C3               	goto	l4242
  6445  000D1C  0A03               	xorlw	3	; case 6
  6446  000D1E  A4D8               	btfss	status,2,c
  6447  000D20  0012               	return	
  6448  000D22  D7D8               	goto	l4260
  6449  000D24                     __end_of_SMotor:
  6450                           	callstack 0
  6451                           
  6452 ;; *************** function _MNovaLletra *****************
  6453 ;; Defined at:
  6454 ;;		line 32 in file "Menu.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  lletra          1    wreg     unsigned char 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  lletra          1    5[COMRAM] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1
  6468 ;;      Params:         0       0       0
  6469 ;;      Locals:         1       0       0
  6470 ;;      Temps:          0       0       0
  6471 ;;      Totals:         1       0       0
  6472 ;;Total ram usage:        1 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 2
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_SMotor
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text52
  6483  001CDC                     __ptext52:
  6484                           	callstack 0
  6485  001CDC                     _MNovaLletra:
  6486                           	callstack 27
  6487                           
  6488                           ;incstack = 0
  6489                           ;MNovaLletra@lletra stored from wreg
  6490  001CDC  6E68               	movwf	MNovaLletra@lletra^0,c
  6491                           
  6492                           ;Menu.c: 33:     novaLletra = lletra;
  6493  001CDE  C068  F057         	movff	MNovaLletra@lletra,_novaLletra
  6494  001CE2  0012               	return		;funcret
  6495  001CE4                     __end_of_MNovaLletra:
  6496                           	callstack 0
  6497                           
  6498 ;; *************** function _Minit *****************
  6499 ;; Defined at:
  6500 ;;		line 25 in file "Menu.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;		None
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1    wreg      void 
  6507 ;; Registers used:
  6508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1
  6514 ;;      Params:         0       0       0
  6515 ;;      Locals:         0       0       0
  6516 ;;      Temps:          0       0       0
  6517 ;;      Totals:         0       0       0
  6518 ;;Total ram usage:        0 bytes
  6519 ;; Hardware stack levels used: 1
  6520 ;; Hardware stack levels required when called: 3
  6521 ;; This function calls:
  6522 ;;		_TiGetTimer
  6523 ;; This function is called by:
  6524 ;;		_main
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text53
  6529  001CE4                     __ptext53:
  6530                           	callstack 0
  6531  001CE4                     _Minit:
  6532                           	callstack 27
  6533                           
  6534                           ;Menu.c: 26:     timerMenu = TiGetTimer();
  6535                           
  6536                           ;incstack = 0
  6537  001CE4  ECA7  F00C         	call	_TiGetTimer	;wreg free
  6538  001CE8  6E27               	movwf	_timerMenu^0,c
  6539  001CEA  0012               	return		;funcret
  6540  001CEC                     __end_of_Minit:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function _LcLCD *****************
  6544 ;; Defined at:
  6545 ;;		line 246 in file "LcTLCD.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;		None
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;		None
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  1    wreg      void 
  6552 ;; Registers used:
  6553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/1
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1
  6559 ;;      Params:         0       0       0
  6560 ;;      Locals:         0       0       0
  6561 ;;      Temps:          0       0       0
  6562 ;;      Totals:         0       0       0
  6563 ;;Total ram usage:        0 bytes
  6564 ;; Hardware stack levels used: 1
  6565 ;; Hardware stack levels required when called: 6
  6566 ;; This function calls:
  6567 ;;		_LcPutChar
  6568 ;; This function is called by:
  6569 ;;		_main
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text54
  6574  001784                     __ptext54:
  6575                           	callstack 0
  6576  001784                     _LcLCD:
  6577                           	callstack 24
  6578                           
  6579                           ;LcTLCD.c: 247:     if(nou_s == 1){
  6580                           
  6581                           ;incstack = 0
  6582  001784  AA79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6583  001786  0012               	return	
  6584                           
  6585                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  6586  001788  C005  FFF6         	movff	_s_ptr,tblptrl
  6587  00178C  C006  FFF7         	movff	_s_ptr+1,tblptrh
  6588  001790  6AF8               	clrf	tblptru,c
  6589  001792  0E01               	movlw	(high __ramtop+-1)
  6590  001794  64F7               	cpfsgt	tblptrh,c
  6591  001796  D003               	bra	u3077
  6592  001798  0008               	tblrd		*
  6593  00179A  50F5               	movf	tablat,w,c
  6594  00179C  D005               	bra	u3070
  6595  00179E                     u3077:
  6596  00179E  CFF6 FFE1          	movff	tblptrl,fsr1l
  6597  0017A2  CFF7 FFE2          	movff	tblptrh,fsr1h
  6598  0017A6  50E7               	movf	indf1,w,c
  6599  0017A8                     u3070:
  6600  0017A8  EC1E  F00C         	call	_LcPutChar
  6601                           
  6602                           ;LcTLCD.c: 249:         s_ptr++;
  6603  0017AC  4A05               	infsnz	_s_ptr^0,f,c
  6604  0017AE  2A06               	incf	(_s_ptr+1)^0,f,c
  6605                           
  6606                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  6607  0017B0  C005  FFF6         	movff	_s_ptr,tblptrl
  6608  0017B4  C006  FFF7         	movff	_s_ptr+1,tblptrh
  6609  0017B8  6AF8               	clrf	tblptru,c
  6610  0017BA  0E01               	movlw	(high __ramtop+-1)
  6611  0017BC  64F7               	cpfsgt	tblptrh,c
  6612  0017BE  D003               	bra	u3087
  6613  0017C0  0008               	tblrd		*
  6614  0017C2  50F5               	movf	tablat,w,c
  6615  0017C4  D005               	bra	u3080
  6616  0017C6                     u3087:
  6617  0017C6  CFF6 FFE1          	movff	tblptrl,fsr1l
  6618  0017CA  CFF7 FFE2          	movff	tblptrh,fsr1h
  6619  0017CE  50E7               	movf	indf1,w,c
  6620  0017D0                     u3080:
  6621  0017D0  0900               	iorlw	0
  6622  0017D2  A4D8               	btfss	status,2,c
  6623  0017D4  0012               	return	
  6624                           
  6625                           ;LcTLCD.c: 251:             nou_s = 0;
  6626  0017D6  9A79               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  6627                           
  6628                           ;LcTLCD.c: 252:             s_ptr=0;
  6629  0017D8  0E00               	movlw	0
  6630  0017DA  6E05               	movwf	_s_ptr^0,c
  6631  0017DC  0E00               	movlw	0
  6632  0017DE  6E06               	movwf	(_s_ptr+1)^0,c
  6633  0017E0  0012               	return		;funcret
  6634  0017E2                     __end_of_LcLCD:
  6635                           	callstack 0
  6636                           
  6637 ;; *************** function _LcInit *****************
  6638 ;; Defined at:
  6639 ;;		line 41 in file "LcTLCD.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  rows            1    wreg     unsigned char 
  6642 ;;  columns         1   16[COMRAM] unsigned char 
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;  rows            1   17[COMRAM] unsigned char 
  6645 ;;  i               2   18[COMRAM] int 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1
  6655 ;;      Params:         1       0       0
  6656 ;;      Locals:         3       0       0
  6657 ;;      Temps:          0       0       0
  6658 ;;      Totals:         4       0       0
  6659 ;;Total ram usage:        4 bytes
  6660 ;; Hardware stack levels used: 1
  6661 ;; Hardware stack levels required when called: 4
  6662 ;; This function calls:
  6663 ;;		_CantaIR
  6664 ;;		_EscriuPrimeraOrdre
  6665 ;;		_Espera
  6666 ;;		_TiGetTimer
  6667 ;;		_WaitForBusy
  6668 ;; This function is called by:
  6669 ;;		_main
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text55
  6674  0011DC                     __ptext55:
  6675                           	callstack 0
  6676  0011DC                     _LcInit:
  6677                           	callstack 26
  6678                           
  6679                           ;incstack = 0
  6680                           ;LcInit@rows stored from wreg
  6681  0011DC  6E74               	movwf	LcInit@rows^0,c
  6682                           
  6683                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  6684  0011DE  ECA7  F00C         	call	_TiGetTimer	;wreg free
  6685  0011E2  6E31               	movwf	_Timer^0,c
  6686                           
  6687                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  6688  0011E4  C074  F035         	movff	LcInit@rows,_Rows
  6689  0011E8  C073  F034         	movff	LcInit@columns,_Columns
  6690                           
  6691                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  6692  0011EC  0E00               	movlw	0
  6693  0011EE  6E32               	movwf	_ColumnAct^0,c
  6694  0011F0  C032  F033         	movff	_ColumnAct,_RowAct
  6695                           
  6696                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  6697  0011F4  9894               	bcf	148,4,c	;volatile
  6698  0011F6  9E95               	bcf	149,7,c	;volatile
  6699  0011F8  9A94               	bcf	148,5,c	;volatile
  6700                           
  6701                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  6702  0011FA  0E00               	movlw	0
  6703  0011FC  6E76               	movwf	(LcInit@i+1)^0,c
  6704  0011FE  0E00               	movlw	0
  6705  001200  6E75               	movwf	LcInit@i^0,c
  6706  001202                     l4030:
  6707                           
  6708                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  6709  001202  0E00               	movlw	0
  6710  001204  6E70               	movwf	(Espera@ms+1)^0,c
  6711  001206  0E64               	movlw	100
  6712  001208  6E6F               	movwf	Espera@ms^0,c
  6713  00120A  5031               	movf	_Timer^0,w,c
  6714  00120C  EC94  F00D         	call	_Espera
  6715                           
  6716                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  6717  001210  0E03               	movlw	3
  6718  001212  ECAA  F00A         	call	_EscriuPrimeraOrdre
  6719                           
  6720                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  6721  001216  0E00               	movlw	0
  6722  001218  6E70               	movwf	(Espera@ms+1)^0,c
  6723  00121A  0E05               	movlw	5
  6724  00121C  6E6F               	movwf	Espera@ms^0,c
  6725  00121E  5031               	movf	_Timer^0,w,c
  6726  001220  EC94  F00D         	call	_Espera
  6727                           
  6728                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  6729  001224  0E03               	movlw	3
  6730  001226  ECAA  F00A         	call	_EscriuPrimeraOrdre
  6731                           
  6732                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  6733  00122A  0E00               	movlw	0
  6734  00122C  6E70               	movwf	(Espera@ms+1)^0,c
  6735  00122E  0E01               	movlw	1
  6736  001230  6E6F               	movwf	Espera@ms^0,c
  6737  001232  5031               	movf	_Timer^0,w,c
  6738  001234  EC94  F00D         	call	_Espera
  6739                           
  6740                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  6741  001238  0E03               	movlw	3
  6742  00123A  ECAA  F00A         	call	_EscriuPrimeraOrdre
  6743                           
  6744                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  6745  00123E  0E00               	movlw	0
  6746  001240  6E70               	movwf	(Espera@ms+1)^0,c
  6747  001242  0E01               	movlw	1
  6748  001244  6E6F               	movwf	Espera@ms^0,c
  6749  001246  5031               	movf	_Timer^0,w,c
  6750  001248  EC94  F00D         	call	_Espera
  6751                           
  6752                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  6753  00124C  0E02               	movlw	2
  6754  00124E  ECAA  F00A         	call	_EscriuPrimeraOrdre
  6755                           
  6756                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  6757  001252  0E00               	movlw	0
  6758  001254  6E70               	movwf	(Espera@ms+1)^0,c
  6759  001256  0E04               	movlw	4
  6760  001258  6E6F               	movwf	Espera@ms^0,c
  6761  00125A  5031               	movf	_Timer^0,w,c
  6762  00125C  EC94  F00D         	call	_Espera
  6763                           
  6764                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  6765  001260  0E28               	movlw	40
  6766  001262  EC14  F00D         	call	_CantaIR
  6767                           
  6768                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  6769  001266  EC6A  F00C         	call	_WaitForBusy	;wreg free
  6770  00126A  0E08               	movlw	8
  6771  00126C  EC14  F00D         	call	_CantaIR
  6772                           
  6773                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  6774  001270  EC6A  F00C         	call	_WaitForBusy	;wreg free
  6775  001274  0E01               	movlw	1
  6776  001276  EC14  F00D         	call	_CantaIR
  6777                           
  6778                           ;LcTLCD.c: 71:   Espera(Timer,3);
  6779  00127A  0E00               	movlw	0
  6780  00127C  6E70               	movwf	(Espera@ms+1)^0,c
  6781  00127E  0E03               	movlw	3
  6782  001280  6E6F               	movwf	Espera@ms^0,c
  6783  001282  5031               	movf	_Timer^0,w,c
  6784  001284  EC94  F00D         	call	_Espera
  6785                           
  6786                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  6787  001288  EC6A  F00C         	call	_WaitForBusy	;wreg free
  6788  00128C  0E06               	movlw	6
  6789  00128E  EC14  F00D         	call	_CantaIR
  6790                           
  6791                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  6792  001292  EC6A  F00C         	call	_WaitForBusy	;wreg free
  6793  001296  0E0F               	movlw	15
  6794  001298  EC14  F00D         	call	_CantaIR
  6795                           
  6796                           ;LcTLCD.c: 74:  }
  6797  00129C  4A75               	infsnz	LcInit@i^0,f,c
  6798  00129E  2A76               	incf	(LcInit@i+1)^0,f,c
  6799  0012A0  BE76               	btfsc	(LcInit@i+1)^0,7,c
  6800  0012A2  D7AF               	goto	l4030
  6801  0012A4  5076               	movf	(LcInit@i+1)^0,w,c
  6802  0012A6  E104               	bnz	u3050
  6803  0012A8  0E02               	movlw	2
  6804  0012AA  5C75               	subwf	LcInit@i^0,w,c
  6805  0012AC  A0D8               	btfss	status,0,c
  6806  0012AE  D7A9               	goto	l4030
  6807  0012B0                     u3050:
  6808                           
  6809                           ;LcTLCD.c: 80:     WaitForBusy();
  6810  0012B0  EC6A  F00C         	call	_WaitForBusy	;wreg free
  6811                           
  6812                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  6813  0012B4  0E0C               	movlw	12
  6814  0012B6  EC14  F00D         	call	_CantaIR
  6815  0012BA  0012               	return		;funcret
  6816  0012BC                     __end_of_LcInit:
  6817                           	callstack 0
  6818                           
  6819 ;; *************** function _EscriuPrimeraOrdre *****************
  6820 ;; Defined at:
  6821 ;;		line 230 in file "LcTLCD.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;  ordre           1    wreg     unsigned char 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  ordre           1    6[COMRAM] unsigned char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      void 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1
  6835 ;;      Params:         0       0       0
  6836 ;;      Locals:         1       0       0
  6837 ;;      Temps:          1       0       0
  6838 ;;      Totals:         2       0       0
  6839 ;;Total ram usage:        2 bytes
  6840 ;; Hardware stack levels used: 1
  6841 ;; Hardware stack levels required when called: 2
  6842 ;; This function calls:
  6843 ;;		Nothing
  6844 ;; This function is called by:
  6845 ;;		_LcInit
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text56
  6850  001554                     __ptext56:
  6851                           	callstack 0
  6852  001554                     _EscriuPrimeraOrdre:
  6853                           	callstack 27
  6854                           
  6855                           ;incstack = 0
  6856                           ;EscriuPrimeraOrdre@ordre stored from wreg
  6857  001554  6E69               	movwf	EscriuPrimeraOrdre@ordre^0,c
  6858                           
  6859                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  6860  001556  9694               	bcf	148,3,c	;volatile
  6861  001558  9494               	bcf	148,2,c	;volatile
  6862  00155A  9294               	bcf	148,1,c	;volatile
  6863  00155C  9094               	bcf	148,0,c	;volatile
  6864  00155E  9A8B               	bcf	139,5,c	;volatile
  6865  001560  9E8C               	bcf	140,7,c	;volatile
  6866                           
  6867                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  6868  001562  888B               	bsf	139,4,c	;volatile
  6869  001564  888B               	bsf	139,4,c	;volatile
  6870                           
  6871                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  6872  001566  A669               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  6873  001568  D003               	goto	u230
  6874  00156A  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  6875  00156C  2A68               	incf	??_EscriuPrimeraOrdre^0,f,c
  6876  00156E  D001               	goto	u248
  6877  001570                     u230:
  6878  001570  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  6879  001572                     u248:
  6880  001572  4668               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6881  001574  4668               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6882  001576  4668               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6883  001578  508B               	movf	139,w,c	;volatile
  6884  00157A  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6885  00157C  0BF7               	andlw	-9
  6886  00157E  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6887  001580  6E8B               	movwf	139,c	;volatile
  6888                           
  6889                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  6890  001582  A469               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  6891  001584  D003               	goto	u250
  6892  001586  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  6893  001588  2A68               	incf	??_EscriuPrimeraOrdre^0,f,c
  6894  00158A  D001               	goto	u268
  6895  00158C                     u250:
  6896  00158C  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  6897  00158E                     u268:
  6898  00158E  4668               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6899  001590  4668               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6900  001592  508B               	movf	139,w,c	;volatile
  6901  001594  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6902  001596  0BFB               	andlw	-5
  6903  001598  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6904  00159A  6E8B               	movwf	139,c	;volatile
  6905                           
  6906                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  6907  00159C  A269               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  6908  00159E  D003               	goto	u270
  6909  0015A0  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  6910  0015A2  2A68               	incf	??_EscriuPrimeraOrdre^0,f,c
  6911  0015A4  D001               	goto	u288
  6912  0015A6                     u270:
  6913  0015A6  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  6914  0015A8                     u288:
  6915  0015A8  4668               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6916  0015AA  508B               	movf	139,w,c	;volatile
  6917  0015AC  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6918  0015AE  0BFD               	andlw	-3
  6919  0015B0  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6920  0015B2  6E8B               	movwf	139,c	;volatile
  6921                           
  6922                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  6923  0015B4  A069               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  6924  0015B6  D003               	goto	u290
  6925  0015B8  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  6926  0015BA  2A68               	incf	??_EscriuPrimeraOrdre^0,f,c
  6927  0015BC  D001               	goto	u308
  6928  0015BE                     u290:
  6929  0015BE  6A68               	clrf	??_EscriuPrimeraOrdre^0,c
  6930  0015C0                     u308:
  6931  0015C0  508B               	movf	139,w,c	;volatile
  6932  0015C2  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6933  0015C4  0BFE               	andlw	-2
  6934  0015C6  1868               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6935  0015C8  6E8B               	movwf	139,c	;volatile
  6936                           
  6937                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  6938  0015CA  988B               	bcf	139,4,c	;volatile
  6939  0015CC  0012               	return		;funcret
  6940  0015CE                     __end_of_EscriuPrimeraOrdre:
  6941                           	callstack 0
  6942                           
  6943 ;; *************** function _JoystickMotor *****************
  6944 ;; Defined at:
  6945 ;;		line 18 in file "Joystick.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;		None
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;		None
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  1    wreg      void 
  6952 ;; Registers used:
  6953 ;;		wreg, status,2, status,0, cstack
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/1
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1
  6959 ;;      Params:         0       0       0
  6960 ;;      Locals:         0       0       0
  6961 ;;      Temps:          2       0       0
  6962 ;;      Totals:         2       0       0
  6963 ;;Total ram usage:        2 bytes
  6964 ;; Hardware stack levels used: 1
  6965 ;; Hardware stack levels required when called: 3
  6966 ;; This function calls:
  6967 ;;		_MNouJoystick
  6968 ;; This function is called by:
  6969 ;;		_main
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text57
  6974  0010F0                     __ptext57:
  6975                           	callstack 0
  6976  0010F0                     _JoystickMotor:
  6977                           	callstack 27
  6978                           
  6979                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  6980                           
  6981                           ;incstack = 0
  6982  0010F0  D05A               	goto	l2716
  6983  0010F2                     l889:
  6984                           
  6985                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  6986  0010F2  B2C2               	btfsc	194,1,c	;volatile
  6987  0010F4  D00B               	goto	l890
  6988  0010F6  0EC8               	movlw	200
  6989  0010F8  60C4               	cpfslt	196,c	;volatile
  6990  0010FA  D008               	goto	l890
  6991  0010FC  0E32               	movlw	50
  6992  0010FE  64C4               	cpfsgt	196,c	;volatile
  6993  001100  D005               	goto	l890
  6994                           
  6995                           ;Joystick.c: 23:     ADCON0 = 0x07;
  6996  001102  0E07               	movlw	7
  6997  001104  6EC2               	movwf	194,c	;volatile
  6998                           
  6999                           ;Joystick.c: 24:                 cap1 = 1;
  7000  001106  8878               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7001  001108                     l2646:
  7002                           
  7003                           ;Joystick.c: 25:     state++;
  7004  001108  2A0D               	incf	JoystickMotor@state^0,f,c
  7005                           
  7006                           ;Joystick.c: 26:    }
  7007  00110A  D05B               	goto	l897
  7008  00110C                     l890:
  7009  00110C  B2C2               	btfsc	194,1,c	;volatile
  7010  00110E  D010               	goto	l892
  7011  001110  0EC7               	movlw	199
  7012  001112  64C4               	cpfsgt	196,c	;volatile
  7013  001114  D00D               	goto	l892
  7014                           
  7015                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  7016  001116  0E02               	movlw	2
  7017  001118  180E               	xorwf	_ultimaTeclaAD^0,w,c
  7018  00111A  B4D8               	btfsc	status,2,c
  7019  00111C  D003               	goto	l2654
  7020  00111E  0E02               	movlw	2
  7021  001120  EC76  F00E         	call	_MNouJoystick
  7022  001124                     l2654:
  7023                           
  7024                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  7025  001124  0E02               	movlw	2
  7026  001126  6E0E               	movwf	_ultimaTeclaAD^0,c
  7027                           
  7028                           ;Joystick.c: 30:     ADCON0 = 0x07;
  7029  001128  0E07               	movlw	7
  7030  00112A  6EC2               	movwf	194,c	;volatile
  7031                           
  7032                           ;Joystick.c: 31:                 cap1 = 0;
  7033  00112C  9878               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  7034  00112E  D7EC               	goto	l2646
  7035  001130                     l892:
  7036  001130  B2C2               	btfsc	194,1,c	;volatile
  7037  001132  D047               	goto	l897
  7038  001134  0E33               	movlw	51
  7039  001136  60C4               	cpfslt	196,c	;volatile
  7040  001138  D044               	goto	l897
  7041                           
  7042                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  7043  00113A  0E08               	movlw	8
  7044  00113C  180E               	xorwf	_ultimaTeclaAD^0,w,c
  7045  00113E  B4D8               	btfsc	status,2,c
  7046  001140  D003               	goto	l2668
  7047  001142  0E08               	movlw	8
  7048  001144  EC76  F00E         	call	_MNouJoystick
  7049  001148                     l2668:
  7050                           
  7051                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  7052  001148  0E08               	movlw	8
  7053  00114A  D7ED               	goto	L7
  7054  00114C                     l898:
  7055                           
  7056                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  7057  00114C  B2C2               	btfsc	194,1,c	;volatile
  7058  00114E  D00B               	goto	l899
  7059  001150  0EC8               	movlw	200
  7060  001152  60C4               	cpfslt	196,c	;volatile
  7061  001154  D008               	goto	l899
  7062  001156  0E32               	movlw	50
  7063  001158  64C4               	cpfsgt	196,c	;volatile
  7064  00115A  D005               	goto	l899
  7065                           
  7066                           ;Joystick.c: 44:     ADCON0 = 0x03;
  7067  00115C  0E03               	movlw	3
  7068  00115E  6EC2               	movwf	194,c	;volatile
  7069                           
  7070                           ;Joystick.c: 45:                 cap2 = 1;
  7071  001160  8678               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7072  001162                     l2684:
  7073                           
  7074                           ;Joystick.c: 46:     state--;
  7075  001162  060D               	decf	JoystickMotor@state^0,f,c
  7076                           
  7077                           ;Joystick.c: 47:    }
  7078  001164  D02E               	goto	l897
  7079  001166                     l899:
  7080  001166  B2C2               	btfsc	194,1,c	;volatile
  7081  001168  D010               	goto	l901
  7082  00116A  0EC7               	movlw	199
  7083  00116C  64C4               	cpfsgt	196,c	;volatile
  7084  00116E  D00D               	goto	l901
  7085                           
  7086                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  7087  001170  0E06               	movlw	6
  7088  001172  180E               	xorwf	_ultimaTeclaAD^0,w,c
  7089  001174  B4D8               	btfsc	status,2,c
  7090  001176  D003               	goto	l2692
  7091  001178  0E06               	movlw	6
  7092  00117A  EC76  F00E         	call	_MNouJoystick
  7093  00117E                     l2692:
  7094                           
  7095                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  7096  00117E  0E06               	movlw	6
  7097  001180  6E0E               	movwf	_ultimaTeclaAD^0,c
  7098                           
  7099                           ;Joystick.c: 51:     ADCON0 = 0x03;
  7100  001182  0E03               	movlw	3
  7101  001184  6EC2               	movwf	194,c	;volatile
  7102                           
  7103                           ;Joystick.c: 52:                 cap2 = 0;
  7104  001186  9678               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  7105  001188  D7EC               	goto	l2684
  7106  00118A                     l901:
  7107  00118A  B2C2               	btfsc	194,1,c	;volatile
  7108  00118C  D01A               	goto	l897
  7109  00118E  0E33               	movlw	51
  7110  001190  60C4               	cpfslt	196,c	;volatile
  7111  001192  D017               	goto	l897
  7112                           
  7113                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  7114  001194  0E04               	movlw	4
  7115  001196  180E               	xorwf	_ultimaTeclaAD^0,w,c
  7116  001198  B4D8               	btfsc	status,2,c
  7117  00119A  D003               	goto	l2706
  7118  00119C  0E04               	movlw	4
  7119  00119E  EC76  F00E         	call	_MNouJoystick
  7120  0011A2                     l2706:
  7121                           
  7122                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  7123  0011A2  0E04               	movlw	4
  7124  0011A4  D7ED               	goto	L8
  7125  0011A6                     l2716:
  7126  0011A6  500D               	movf	JoystickMotor@state^0,w,c
  7127  0011A8  6E69               	movwf	??_JoystickMotor^0,c
  7128  0011AA  6A6A               	clrf	(??_JoystickMotor+1)^0,c
  7129                           
  7130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7131                           ; Switch size 1, requested type "simple"
  7132                           ; Number of cases is 1, Range of values is 0 to 0
  7133                           ; switch strategies available:
  7134                           ; Name         Instructions Cycles
  7135                           ; simple_byte            4     3 (average)
  7136                           ;	Chosen strategy is simple_byte
  7137  0011AC  506A               	movf	(??_JoystickMotor+1)^0,w,c
  7138  0011AE  0A00               	xorlw	0	; case 0
  7139  0011B0  A4D8               	btfss	status,2,c
  7140  0011B2  D007               	goto	l897
  7141                           
  7142                           ; Switch size 1, requested type "simple"
  7143                           ; Number of cases is 2, Range of values is 0 to 1
  7144                           ; switch strategies available:
  7145                           ; Name         Instructions Cycles
  7146                           ; simple_byte            7     4 (average)
  7147                           ;	Chosen strategy is simple_byte
  7148  0011B4  5069               	movf	??_JoystickMotor^0,w,c
  7149  0011B6  0A00               	xorlw	0	; case 0
  7150  0011B8  B4D8               	btfsc	status,2,c
  7151  0011BA  D79B               	goto	l889
  7152  0011BC  0A01               	xorlw	1	; case 1
  7153  0011BE  B4D8               	btfsc	status,2,c
  7154  0011C0  D7C5               	goto	l898
  7155  0011C2                     l897:
  7156                           
  7157                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  7158  0011C2  A878               	btfss	(_cap1/(0+8))^0,_cap1& (0+7),c
  7159  0011C4  0012               	return	
  7160  0011C6  A678               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  7161  0011C8  0012               	return	
  7162  0011CA  500E               	movf	_ultimaTeclaAD^0,w,c
  7163  0011CC  B4D8               	btfsc	status,2,c
  7164  0011CE  0012               	return	
  7165                           
  7166                           ;Joystick.c: 66:         MNouJoystick(0);
  7167  0011D0  0E00               	movlw	0
  7168  0011D2  EC76  F00E         	call	_MNouJoystick
  7169                           
  7170                           ;Joystick.c: 67:         ultimaTeclaAD = 0;
  7171  0011D6  0E00               	movlw	0
  7172  0011D8  6E0E               	movwf	_ultimaTeclaAD^0,c
  7173  0011DA  0012               	return		;funcret
  7174  0011DC                     __end_of_JoystickMotor:
  7175                           	callstack 0
  7176                           
  7177 ;; *************** function _MNouJoystick *****************
  7178 ;; Defined at:
  7179 ;;		line 35 in file "Menu.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;  posicio         1    wreg     char 
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  posicio         1    5[COMRAM] char 
  7184 ;; Return value:  Size  Location     Type
  7185 ;;                  1    wreg      void 
  7186 ;; Registers used:
  7187 ;;		wreg
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/1
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMRAM   BANK0   BANK1
  7193 ;;      Params:         0       0       0
  7194 ;;      Locals:         1       0       0
  7195 ;;      Temps:          0       0       0
  7196 ;;      Totals:         1       0       0
  7197 ;;Total ram usage:        1 bytes
  7198 ;; Hardware stack levels used: 1
  7199 ;; Hardware stack levels required when called: 2
  7200 ;; This function calls:
  7201 ;;		Nothing
  7202 ;; This function is called by:
  7203 ;;		_JoystickMotor
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           	psect	text58
  7208  001CEC                     __ptext58:
  7209                           	callstack 0
  7210  001CEC                     _MNouJoystick:
  7211                           	callstack 27
  7212                           
  7213                           ;incstack = 0
  7214                           ;MNouJoystick@posicio stored from wreg
  7215  001CEC  6E68               	movwf	MNouJoystick@posicio^0,c
  7216                           
  7217                           ;Menu.c: 36:     novaDireccio = posicio;
  7218  001CEE  C068  F056         	movff	MNouJoystick@posicio,_novaDireccio
  7219  001CF2  0012               	return		;funcret
  7220  001CF4                     __end_of_MNouJoystick:
  7221                           	callstack 0
  7222                           
  7223 ;; *************** function _JoystickInit *****************
  7224 ;; Defined at:
  7225 ;;		line 12 in file "Joystick.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;		None
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;		None
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      void 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1
  7239 ;;      Params:         0       0       0
  7240 ;;      Locals:         0       0       0
  7241 ;;      Temps:          0       0       0
  7242 ;;      Totals:         0       0       0
  7243 ;;Total ram usage:        0 bytes
  7244 ;; Hardware stack levels used: 1
  7245 ;; Hardware stack levels required when called: 2
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_main
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text59
  7254  001BEE                     __ptext59:
  7255                           	callstack 0
  7256  001BEE                     _JoystickInit:
  7257                           	callstack 28
  7258                           
  7259                           ;Joystick.c: 13:     ADCON0 = 0x01;
  7260                           
  7261                           ;incstack = 0
  7262  001BEE  0E01               	movlw	1
  7263  001BF0  6EC2               	movwf	194,c	;volatile
  7264                           
  7265                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  7266  001BF2  0E0D               	movlw	13
  7267  001BF4  6EC1               	movwf	193,c	;volatile
  7268                           
  7269                           ;Joystick.c: 15:     ADCON2 = 0x09;
  7270  001BF6  0E09               	movlw	9
  7271  001BF8  6EC0               	movwf	192,c	;volatile
  7272                           
  7273                           ;Joystick.c: 16:     ADRESH = 127;
  7274  001BFA  0E7F               	movlw	127
  7275  001BFC  6EC4               	movwf	196,c	;volatile
  7276  001BFE  0012               	return		;funcret
  7277  001C00                     __end_of_JoystickInit:
  7278                           	callstack 0
  7279                           
  7280 ;; *************** function _GLCDMotor *****************
  7281 ;; Defined at:
  7282 ;;		line 36 in file "GestioLCD.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;		None
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;		None
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  1    wreg      void 
  7289 ;; Registers used:
  7290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/1
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1
  7296 ;;      Params:         0       0       0
  7297 ;;      Locals:         0       0       0
  7298 ;;      Temps:          0       2       0
  7299 ;;      Totals:         0       2       0
  7300 ;;Total ram usage:        2 bytes
  7301 ;; Hardware stack levels used: 1
  7302 ;; Hardware stack levels required when called: 6
  7303 ;; This function calls:
  7304 ;;		_LcClear
  7305 ;;		_LcGotoXY
  7306 ;;		_LcLliure
  7307 ;;		_LcNewString
  7308 ;;		_LcPutChar
  7309 ;;		_TiGetTics
  7310 ;;		_TiResetTics
  7311 ;; This function is called by:
  7312 ;;		_main
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	text60
  7317  000750                     __ptext60:
  7318                           	callstack 0
  7319  000750                     _GLCDMotor:
  7320                           	callstack 24
  7321                           
  7322                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  7323                           
  7324                           ;incstack = 0
  7325  000750  D1BD               	goto	l6058
  7326  000752                     l5872:
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  7330  000752  0E11               	movlw	17
  7331  000754  6010               	cpfslt	GLCDMotor@length1^0,c
  7332  000756  D018               	goto	l5882
  7333                           
  7334                           ; BSR set to: 0
  7335  000758  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7336  00075A  D016               	goto	l5882
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  7340  00075C  0E00               	movlw	0
  7341  00075E  6E70               	movwf	LcGotoXY@Row^0,c
  7342  000760  0E00               	movlw	0
  7343  000762  EC8A  F00C         	call	_LcGotoXY
  7344                           
  7345                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  7346  000766  5017               	movf	_menuDaltGLCD^0,w,c
  7347  000768  0D1D               	mullw	29
  7348  00076A  50F3               	movf	243,w,c
  7349  00076C  0F01               	addlw	low _menuList
  7350  00076E  0100               	movlb	0	; () banked
  7351  000770  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7352  000772  C0C0  F06B         	movff	??_GLCDMotor,LcNewString@new_s
  7353  000776  506B               	movf	LcNewString@new_s^0,w,c
  7354  000778  A4D8               	btfss	status,2,c
  7355  00077A  0E02               	movlw	high __smallconst
  7356  00077C  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  7357  00077E  EC2E  F00E         	call	_LcNewString	;wreg free
  7358                           
  7359                           ;GestioLCD.c: 53:     state = 5;
  7360  000782  0E05               	movlw	5
  7361  000784  6E16               	movwf	GLCDMotor@state^0,c
  7362                           
  7363                           ;GestioLCD.c: 54:    }
  7364  000786  0012               	return	
  7365  000788                     l5882:
  7366                           
  7367                           ; BSR set to: 0
  7368  000788  0E10               	movlw	16
  7369  00078A  6410               	cpfsgt	GLCDMotor@length1^0,c
  7370  00078C  0012               	return	
  7371                           
  7372                           ; BSR set to: 0
  7373  00078E  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7374  000790  0012               	return	
  7375  000792                     u5630:
  7376                           
  7377                           ;GestioLCD.c: 56:     state++;
  7378  000792  2A16               	incf	GLCDMotor@state^0,f,c
  7379  000794  0012               	return	
  7380  000796                     l5888:
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;GestioLCD.c: 60:    if (j>=16) {
  7384  000796  0E0F               	movlw	15
  7385  000798  6415               	cpfsgt	GLCDMotor@j^0,c
  7386  00079A  D02B               	goto	l5902
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;GestioLCD.c: 61:     min1++;
  7390  00079C  2A14               	incf	GLCDMotor@min1^0,f,c
  7391                           
  7392                           ;GestioLCD.c: 62:     max1++;
  7393  00079E  2A54               	incf	GLCDMotor@max1^0,f,c
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  7397  0007A0  5017               	movf	_menuDaltGLCD^0,w,c
  7398  0007A2  0D1D               	mullw	29
  7399  0007A4  50F3               	movf	243,w,c
  7400  0007A6  0F01               	addlw	low _menuList
  7401  0007A8  2454               	addwf	GLCDMotor@max1^0,w,c
  7402  0007AA  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7403  0007AC  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  7404  0007B0                     	if	1	;There is more than 1 active tblptr byte
  7405  0007B0  0E02               	movlw	high __smallconst
  7406  0007B2  6EF7               	movwf	tblptrh,c
  7407  0007B4                     	endif
  7408  0007B4                     	if	0	;tblptru may be non-zero
  7409  0007B4                     	endif
  7410  0007B4                     	if	0	;tblptru may be non-zero
  7411  0007B4                     	endif
  7412  0007B4  0008               	tblrd		*
  7413  0007B6  50F5               	movf	tablat,w,c
  7414  0007B8  0900               	iorlw	0
  7415  0007BA  A4D8               	btfss	status,2,c
  7416  0007BC  D002               	goto	l5896
  7417                           
  7418                           ; BSR set to: 0
  7419  0007BE  0E00               	movlw	0
  7420  0007C0  6E54               	movwf	GLCDMotor@max1^0,c
  7421  0007C2                     l5896:
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  7425  0007C2  5017               	movf	_menuDaltGLCD^0,w,c
  7426  0007C4  0D1D               	mullw	29
  7427  0007C6  50F3               	movf	243,w,c
  7428  0007C8  0F01               	addlw	low _menuList
  7429  0007CA  2414               	addwf	GLCDMotor@min1^0,w,c
  7430  0007CC  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7431  0007CE  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  7432  0007D2                     	if	1	;There is more than 1 active tblptr byte
  7433  0007D2  0E02               	movlw	high __smallconst
  7434  0007D4  6EF7               	movwf	tblptrh,c
  7435  0007D6                     	endif
  7436  0007D6                     	if	0	;tblptru may be non-zero
  7437  0007D6                     	endif
  7438  0007D6                     	if	0	;tblptru may be non-zero
  7439  0007D6                     	endif
  7440  0007D6  0008               	tblrd		*
  7441  0007D8  50F5               	movf	tablat,w,c
  7442  0007DA  0900               	iorlw	0
  7443  0007DC  A4D8               	btfss	status,2,c
  7444  0007DE  D002               	goto	l820
  7445                           
  7446                           ; BSR set to: 0
  7447  0007E0  0E00               	movlw	0
  7448  0007E2  6E14               	movwf	GLCDMotor@min1^0,c
  7449  0007E4                     l820:
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;GestioLCD.c: 65:     j=0;
  7453  0007E4  0E00               	movlw	0
  7454  0007E6  6E15               	movwf	GLCDMotor@j^0,c
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;GestioLCD.c: 66:     k1=min1;
  7458  0007E8  C014  F012         	movff	GLCDMotor@min1,GLCDMotor@k1
  7459                           
  7460                           ;GestioLCD.c: 67:     state = 6;
  7461  0007EC  0E06               	movlw	6
  7462  0007EE  6E16               	movwf	GLCDMotor@state^0,c
  7463                           
  7464                           ;GestioLCD.c: 68:    }
  7465  0007F0  0012               	return	
  7466  0007F2                     l5902:
  7467                           
  7468                           ; BSR set to: 0
  7469  0007F2  0E10               	movlw	16
  7470  0007F4  6015               	cpfslt	GLCDMotor@j^0,c
  7471  0007F6  0012               	return	
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  7475  0007F8  0E00               	movlw	0
  7476  0007FA  6E70               	movwf	LcGotoXY@Row^0,c
  7477  0007FC  5015               	movf	GLCDMotor@j^0,w,c
  7478  0007FE  EC8A  F00C         	call	_LcGotoXY
  7479                           
  7480                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  7481  000802  5017               	movf	_menuDaltGLCD^0,w,c
  7482  000804  0D1D               	mullw	29
  7483  000806  50F3               	movf	243,w,c
  7484  000808  0F01               	addlw	low _menuList
  7485  00080A  2412               	addwf	GLCDMotor@k1^0,w,c
  7486  00080C  0100               	movlb	0	; () banked
  7487  00080E  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7488  000810  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  7489  000814                     	if	1	;There is more than 1 active tblptr byte
  7490  000814  0E02               	movlw	high __smallconst
  7491  000816  6EF7               	movwf	tblptrh,c
  7492  000818                     	endif
  7493  000818                     	if	0	;tblptru may be non-zero
  7494  000818                     	endif
  7495  000818                     	if	0	;tblptru may be non-zero
  7496  000818                     	endif
  7497  000818  0008               	tblrd		*
  7498  00081A  50F5               	movf	tablat,w,c
  7499  00081C  EC1E  F00C         	call	_LcPutChar
  7500                           
  7501                           ;GestioLCD.c: 72:     j++;
  7502  000820  2A15               	incf	GLCDMotor@j^0,f,c
  7503                           
  7504                           ;GestioLCD.c: 73:     k1++;
  7505  000822  2A12               	incf	GLCDMotor@k1^0,f,c
  7506                           
  7507                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  7508  000824  5017               	movf	_menuDaltGLCD^0,w,c
  7509  000826  0D1D               	mullw	29
  7510  000828  50F3               	movf	243,w,c
  7511  00082A  0F01               	addlw	low _menuList
  7512  00082C  2412               	addwf	GLCDMotor@k1^0,w,c
  7513  00082E  0100               	movlb	0	; () banked
  7514  000830  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7515  000832  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  7516  000836                     	if	1	;There is more than 1 active tblptr byte
  7517  000836  0E02               	movlw	high __smallconst
  7518  000838  6EF7               	movwf	tblptrh,c
  7519  00083A                     	endif
  7520  00083A                     	if	0	;tblptru may be non-zero
  7521  00083A                     	endif
  7522  00083A                     	if	0	;tblptru may be non-zero
  7523  00083A                     	endif
  7524  00083A  0008               	tblrd		*
  7525  00083C  50F5               	movf	tablat,w,c
  7526  00083E  0900               	iorlw	0
  7527  000840  A4D8               	btfss	status,2,c
  7528  000842  0012               	return	
  7529                           
  7530                           ; BSR set to: 0
  7531  000844  0E00               	movlw	0
  7532  000846  6E12               	movwf	GLCDMotor@k1^0,c
  7533  000848  0012               	return	
  7534  00084A                     l5916:
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  7538  00084A  0E04               	movlw	4
  7539  00084C  6017               	cpfslt	_menuDaltGLCD^0,c
  7540  00084E  D012               	goto	u5730
  7541  000850  D7A0               	goto	u5630
  7542  000852                     u5700:
  7543                           
  7544                           ;GestioLCD.c: 82:     state = 0;
  7545  000852  0E00               	movlw	0
  7546  000854  6E16               	movwf	GLCDMotor@state^0,c
  7547  000856  0012               	return	
  7548  000858                     l5924:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  7552  000858  EC34  F00E         	call	_LcLliure	;wreg free
  7553  00085C  A0D8               	btfss	status,0,c
  7554  00085E  D006               	goto	l5930
  7555  000860  0E04               	movlw	4
  7556  000862  6017               	cpfslt	_menuDaltGLCD^0,c
  7557  000864  D003               	goto	l5930
  7558                           
  7559                           ;GestioLCD.c: 87:     state = 7;
  7560  000866  0E07               	movlw	7
  7561  000868  6E16               	movwf	GLCDMotor@state^0,c
  7562                           
  7563                           ;GestioLCD.c: 88:    }
  7564  00086A  0012               	return	
  7565  00086C                     l5930:
  7566  00086C  EC34  F00E         	call	_LcLliure	;wreg free
  7567  000870  A0D8               	btfss	status,0,c
  7568  000872  0012               	return	
  7569  000874                     u5730:
  7570  000874  0E03               	movlw	3
  7571  000876  6417               	cpfsgt	_menuDaltGLCD^0,c
  7572  000878  0012               	return	
  7573  00087A  D7EB               	goto	u5700
  7574  00087C                     l832:
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  7578  00087C  AA78               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  7579  00087E  0012               	return	
  7580                           
  7581                           ; BSR set to: 0
  7582  000880  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7583  000882  0012               	return	
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;GestioLCD.c: 95:     length1 = 0;
  7587  000884  0E00               	movlw	0
  7588  000886  6E10               	movwf	GLCDMotor@length1^0,c
  7589                           
  7590                           ;GestioLCD.c: 96:     length2 = 0;
  7591  000888  0E00               	movlw	0
  7592  00088A  6E0F               	movwf	GLCDMotor@length2^0,c
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  7596  00088C  0E00               	movlw	0
  7597  00088E  6E70               	movwf	LcGotoXY@Row^0,c
  7598  000890  0E00               	movlw	0
  7599  000892  EC8A  F00C         	call	_LcGotoXY
  7600                           
  7601                           ;GestioLCD.c: 98:     min1 = 0;
  7602  000896  0E00               	movlw	0
  7603  000898  6E14               	movwf	GLCDMotor@min1^0,c
  7604                           
  7605                           ;GestioLCD.c: 99:     max1 = 15;
  7606  00089A  0E0F               	movlw	15
  7607  00089C  6E54               	movwf	GLCDMotor@max1^0,c
  7608                           
  7609                           ;GestioLCD.c: 100:     min2 = 0;
  7610  00089E  0E00               	movlw	0
  7611  0008A0  6E13               	movwf	GLCDMotor@min2^0,c
  7612                           
  7613                           ;GestioLCD.c: 101:     max2 = 15;
  7614  0008A2  0E0F               	movlw	15
  7615  0008A4  6E53               	movwf	GLCDMotor@max2^0,c
  7616                           
  7617                           ;GestioLCD.c: 102:     j = 0;
  7618  0008A6  0E00               	movlw	0
  7619  0008A8  6E15               	movwf	GLCDMotor@j^0,c
  7620                           
  7621                           ;GestioLCD.c: 103:     k1 = 0;
  7622  0008AA  0E00               	movlw	0
  7623  0008AC  6E12               	movwf	GLCDMotor@k1^0,c
  7624                           
  7625                           ;GestioLCD.c: 104:     k2 = 0;
  7626  0008AE  0E00               	movlw	0
  7627  0008B0  6E11               	movwf	GLCDMotor@k2^0,c
  7628                           
  7629                           ;GestioLCD.c: 105:     newString = 0;
  7630  0008B2  9A78               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  7631  0008B4  D76E               	goto	u5630
  7632  0008B6                     l5960:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  7636  0008B6  5017               	movf	_menuDaltGLCD^0,w,c
  7637  0008B8  0D1D               	mullw	29
  7638  0008BA  50F3               	movf	243,w,c
  7639  0008BC  0F01               	addlw	low _menuList
  7640  0008BE  2410               	addwf	GLCDMotor@length1^0,w,c
  7641  0008C0  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7642  0008C2  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  7643  0008C6                     	if	1	;There is more than 1 active tblptr byte
  7644  0008C6  0E02               	movlw	high __smallconst
  7645  0008C8  6EF7               	movwf	tblptrh,c
  7646  0008CA                     	endif
  7647  0008CA                     	if	0	;tblptru may be non-zero
  7648  0008CA                     	endif
  7649  0008CA                     	if	0	;tblptru may be non-zero
  7650  0008CA                     	endif
  7651  0008CA  0008               	tblrd		*
  7652  0008CC  50F5               	movf	tablat,w,c
  7653  0008CE  0900               	iorlw	0
  7654  0008D0  A4D8               	btfss	status,2,c
  7655  0008D2  D004               	goto	l5966
  7656                           
  7657                           ; BSR set to: 0
  7658  0008D4  0E03               	movlw	3
  7659  0008D6  6417               	cpfsgt	_menuDaltGLCD^0,c
  7660  0008D8  D001               	goto	l5966
  7661  0008DA  D75B               	goto	u5630
  7662  0008DC                     l5966:
  7663                           
  7664                           ; BSR set to: 0
  7665  0008DC  5017               	movf	_menuDaltGLCD^0,w,c
  7666  0008DE  0D1D               	mullw	29
  7667  0008E0  50F3               	movf	243,w,c
  7668  0008E2  0F01               	addlw	low _menuList
  7669  0008E4  2410               	addwf	GLCDMotor@length1^0,w,c
  7670  0008E6  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7671  0008E8  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  7672  0008EC                     	if	1	;There is more than 1 active tblptr byte
  7673  0008EC  0E02               	movlw	high __smallconst
  7674  0008EE  6EF7               	movwf	tblptrh,c
  7675  0008F0                     	endif
  7676  0008F0                     	if	0	;tblptru may be non-zero
  7677  0008F0                     	endif
  7678  0008F0                     	if	0	;tblptru may be non-zero
  7679  0008F0                     	endif
  7680  0008F0  0008               	tblrd		*
  7681  0008F2  50F5               	movf	tablat,w,c
  7682  0008F4  0900               	iorlw	0
  7683  0008F6  B4D8               	btfsc	status,2,c
  7684  0008F8  D002               	goto	l5970
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;GestioLCD.c: 114:     length1++;
  7688  0008FA  2A10               	incf	GLCDMotor@length1^0,f,c
  7689                           
  7690                           ;GestioLCD.c: 115:    }
  7691  0008FC  0012               	return	
  7692  0008FE                     l5970:
  7693                           
  7694                           ; BSR set to: 0
  7695  0008FE  0E04               	movlw	4
  7696  000900  6017               	cpfslt	_menuDaltGLCD^0,c
  7697  000902  0012               	return	
  7698                           
  7699                           ; BSR set to: 0
  7700  000904  5017               	movf	_menuDaltGLCD^0,w,c
  7701  000906  0D1D               	mullw	29
  7702  000908  50F3               	movf	243,w,c
  7703  00090A  0F01               	addlw	low _menuList
  7704  00090C  2410               	addwf	GLCDMotor@length1^0,w,c
  7705  00090E  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7706  000910  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  7707  000914                     	if	1	;There is more than 1 active tblptr byte
  7708  000914  0E02               	movlw	high __smallconst
  7709  000916  6EF7               	movwf	tblptrh,c
  7710  000918                     	endif
  7711  000918                     	if	0	;tblptru may be non-zero
  7712  000918                     	endif
  7713  000918                     	if	0	;tblptru may be non-zero
  7714  000918                     	endif
  7715  000918  0008               	tblrd		*
  7716  00091A  50F5               	movf	tablat,w,c
  7717  00091C  0900               	iorlw	0
  7718  00091E  A4D8               	btfss	status,2,c
  7719  000920  0012               	return	
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;GestioLCD.c: 117:     state = 13;
  7723  000922  0E0D               	movlw	13
  7724  000924  6E16               	movwf	GLCDMotor@state^0,c
  7725  000926  0012               	return	
  7726  000928                     l5976:
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  7730  000928  0E11               	movlw	17
  7731  00092A  600F               	cpfslt	GLCDMotor@length2^0,c
  7732  00092C  D01A               	goto	l5986
  7733                           
  7734                           ; BSR set to: 0
  7735  00092E  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7736  000930  D018               	goto	l5986
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  7740  000932  0E01               	movlw	1
  7741  000934  6E70               	movwf	LcGotoXY@Row^0,c
  7742  000936  0E00               	movlw	0
  7743  000938  EC8A  F00C         	call	_LcGotoXY
  7744                           
  7745                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  7746  00093C  5017               	movf	_menuDaltGLCD^0,w,c
  7747  00093E  0D1D               	mullw	29
  7748  000940  CFF3 F0C0          	movff	prodl,??_GLCDMotor
  7749  000944  0E1D               	movlw	29
  7750  000946  0100               	movlb	0	; () banked
  7751  000948  27C0               	addwf	??_GLCDMotor& (0+255),f,b
  7752  00094A  51C0               	movf	??_GLCDMotor& (0+255),w,b
  7753  00094C  0F01               	addlw	low _menuList
  7754  00094E  6FC1               	movwf	(??_GLCDMotor+1)& (0+255),b
  7755  000950  C0C1  F06B         	movff	??_GLCDMotor+1,LcNewString@new_s
  7756  000954  506B               	movf	LcNewString@new_s^0,w,c
  7757  000956  A4D8               	btfss	status,2,c
  7758  000958  0E02               	movlw	high __smallconst
  7759  00095A  6E6C               	movwf	(LcNewString@new_s+1)^0,c
  7760  00095C  EC2E  F00E         	call	_LcNewString	;wreg free
  7761  000960  D718               	goto	u5630
  7762  000962                     l5986:
  7763                           
  7764                           ; BSR set to: 0
  7765  000962  0E10               	movlw	16
  7766  000964  640F               	cpfsgt	GLCDMotor@length2^0,c
  7767  000966  0012               	return	
  7768                           
  7769                           ; BSR set to: 0
  7770  000968  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7771  00096A  0012               	return	
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;GestioLCD.c: 127:     state = 9;
  7775  00096C  0E09               	movlw	9
  7776  00096E  6E16               	movwf	GLCDMotor@state^0,c
  7777  000970  0012               	return	
  7778  000972                     l5992:
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;GestioLCD.c: 131:    if (j<16) {
  7782  000972  0E10               	movlw	16
  7783  000974  6015               	cpfslt	GLCDMotor@j^0,c
  7784  000976  D02D               	goto	l6006
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  7788  000978  0E01               	movlw	1
  7789  00097A  6E70               	movwf	LcGotoXY@Row^0,c
  7790  00097C  5015               	movf	GLCDMotor@j^0,w,c
  7791  00097E  EC8A  F00C         	call	_LcGotoXY
  7792                           
  7793                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  7794  000982  5017               	movf	_menuDaltGLCD^0,w,c
  7795  000984  0D1D               	mullw	29
  7796  000986  50F3               	movf	243,w,c
  7797  000988  0F01               	addlw	low _menuList
  7798  00098A  2411               	addwf	GLCDMotor@k2^0,w,c
  7799  00098C  0100               	movlb	0	; () banked
  7800  00098E  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7801  000990  0E1D               	movlw	29
  7802  000992  27C0               	addwf	??_GLCDMotor& (0+255),f,b
  7803  000994  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  7804  000998                     	if	1	;There is more than 1 active tblptr byte
  7805  000998  0E02               	movlw	high __smallconst
  7806  00099A  6EF7               	movwf	tblptrh,c
  7807  00099C                     	endif
  7808  00099C                     	if	0	;tblptru may be non-zero
  7809  00099C                     	endif
  7810  00099C                     	if	0	;tblptru may be non-zero
  7811  00099C                     	endif
  7812  00099C  0008               	tblrd		*
  7813  00099E  50F5               	movf	tablat,w,c
  7814  0009A0  EC1E  F00C         	call	_LcPutChar
  7815                           
  7816                           ;GestioLCD.c: 134:     j++;
  7817  0009A4  2A15               	incf	GLCDMotor@j^0,f,c
  7818                           
  7819                           ;GestioLCD.c: 135:     k2++;
  7820  0009A6  2A11               	incf	GLCDMotor@k2^0,f,c
  7821                           
  7822                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  7823  0009A8  5017               	movf	_menuDaltGLCD^0,w,c
  7824  0009AA  0D1D               	mullw	29
  7825  0009AC  50F3               	movf	243,w,c
  7826  0009AE  0F01               	addlw	low _menuList
  7827  0009B0  2411               	addwf	GLCDMotor@k2^0,w,c
  7828  0009B2  0100               	movlb	0	; () banked
  7829  0009B4  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7830  0009B6  0E1D               	movlw	29
  7831  0009B8  27C0               	addwf	??_GLCDMotor& (0+255),f,b
  7832  0009BA  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  7833  0009BE                     	if	1	;There is more than 1 active tblptr byte
  7834  0009BE  0E02               	movlw	high __smallconst
  7835  0009C0  6EF7               	movwf	tblptrh,c
  7836  0009C2                     	endif
  7837  0009C2                     	if	0	;tblptru may be non-zero
  7838  0009C2                     	endif
  7839  0009C2                     	if	0	;tblptru may be non-zero
  7840  0009C2                     	endif
  7841  0009C2  0008               	tblrd		*
  7842  0009C4  50F5               	movf	tablat,w,c
  7843  0009C6  0900               	iorlw	0
  7844  0009C8  A4D8               	btfss	status,2,c
  7845  0009CA  0012               	return	
  7846                           
  7847                           ; BSR set to: 0
  7848  0009CC  0E00               	movlw	0
  7849  0009CE  6E11               	movwf	GLCDMotor@k2^0,c
  7850  0009D0  0012               	return	
  7851  0009D2                     l6006:
  7852                           
  7853                           ; BSR set to: 0
  7854  0009D2  0E0F               	movlw	15
  7855  0009D4  6415               	cpfsgt	GLCDMotor@j^0,c
  7856  0009D6  0012               	return	
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;GestioLCD.c: 139:     min2++;
  7860  0009D8  2A13               	incf	GLCDMotor@min2^0,f,c
  7861                           
  7862                           ;GestioLCD.c: 140:     max2++;
  7863  0009DA  2A53               	incf	GLCDMotor@max2^0,f,c
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  7867  0009DC  5017               	movf	_menuDaltGLCD^0,w,c
  7868  0009DE  0D1D               	mullw	29
  7869  0009E0  50F3               	movf	243,w,c
  7870  0009E2  0F01               	addlw	low _menuList
  7871  0009E4  2453               	addwf	GLCDMotor@max2^0,w,c
  7872  0009E6  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7873  0009E8  0E1D               	movlw	29
  7874  0009EA  27C0               	addwf	??_GLCDMotor& (0+255),f,b
  7875  0009EC  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  7876  0009F0                     	if	1	;There is more than 1 active tblptr byte
  7877  0009F0  0E02               	movlw	high __smallconst
  7878  0009F2  6EF7               	movwf	tblptrh,c
  7879  0009F4                     	endif
  7880  0009F4                     	if	0	;tblptru may be non-zero
  7881  0009F4                     	endif
  7882  0009F4                     	if	0	;tblptru may be non-zero
  7883  0009F4                     	endif
  7884  0009F4  0008               	tblrd		*
  7885  0009F6  50F5               	movf	tablat,w,c
  7886  0009F8  0900               	iorlw	0
  7887  0009FA  A4D8               	btfss	status,2,c
  7888  0009FC  D002               	goto	l6014
  7889                           
  7890                           ; BSR set to: 0
  7891  0009FE  0E00               	movlw	0
  7892  000A00  6E53               	movwf	GLCDMotor@max2^0,c
  7893  000A02                     l6014:
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  7897  000A02  5017               	movf	_menuDaltGLCD^0,w,c
  7898  000A04  0D1D               	mullw	29
  7899  000A06  50F3               	movf	243,w,c
  7900  000A08  0F01               	addlw	low _menuList
  7901  000A0A  2413               	addwf	GLCDMotor@min2^0,w,c
  7902  000A0C  6FC0               	movwf	??_GLCDMotor& (0+255),b
  7903  000A0E  0E1D               	movlw	29
  7904  000A10  27C0               	addwf	??_GLCDMotor& (0+255),f,b
  7905  000A12  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  7906  000A16                     	if	1	;There is more than 1 active tblptr byte
  7907  000A16  0E02               	movlw	high __smallconst
  7908  000A18  6EF7               	movwf	tblptrh,c
  7909  000A1A                     	endif
  7910  000A1A                     	if	0	;tblptru may be non-zero
  7911  000A1A                     	endif
  7912  000A1A                     	if	0	;tblptru may be non-zero
  7913  000A1A                     	endif
  7914  000A1A  0008               	tblrd		*
  7915  000A1C  50F5               	movf	tablat,w,c
  7916  000A1E  0900               	iorlw	0
  7917  000A20  A4D8               	btfss	status,2,c
  7918  000A22  D002               	goto	l850
  7919                           
  7920                           ; BSR set to: 0
  7921  000A24  0E00               	movlw	0
  7922  000A26  6E13               	movwf	GLCDMotor@min2^0,c
  7923  000A28                     l850:
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;GestioLCD.c: 143:     j=0;
  7927  000A28  0E00               	movlw	0
  7928  000A2A  6E15               	movwf	GLCDMotor@j^0,c
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;GestioLCD.c: 144:     k2=min2;
  7932  000A2C  C013  F011         	movff	GLCDMotor@min2,GLCDMotor@k2
  7933  000A30  D6B0               	goto	u5630
  7934  000A32                     l6022:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  7938  000A32  5018               	movf	_timerGLCD^0,w,c
  7939  000A34  EC5A  F00D         	call	_TiGetTics
  7940  000A38  BE69               	btfsc	(?_TiGetTics+1)^0,7,c
  7941  000A3A  D00E               	goto	l852
  7942  000A3C  0EB5               	movlw	181
  7943  000A3E  5C68               	subwf	?_TiGetTics^0,w,c
  7944  000A40  0E04               	movlw	4
  7945  000A42  5869               	subwfb	(?_TiGetTics+1)^0,w,c
  7946  000A44  B0D8               	btfsc	status,0,c
  7947  000A46  BA78               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  7948  000A48  D007               	goto	l852
  7949  000A4A  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7950  000A4C  D005               	goto	l852
  7951                           
  7952                           ;GestioLCD.c: 150:     LcClear();
  7953  000A4E  EC82  F00D         	call	_LcClear	;wreg free
  7954  000A52                     l6030:
  7955                           
  7956                           ;GestioLCD.c: 151:     state = 2;
  7957  000A52  0E02               	movlw	2
  7958  000A54  6E16               	movwf	GLCDMotor@state^0,c
  7959                           
  7960                           ;GestioLCD.c: 152:    }
  7961  000A56  0012               	return	
  7962  000A58                     l852:
  7963  000A58  AA78               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  7964  000A5A  0012               	return	
  7965  000A5C  AC78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7966  000A5E  0012               	return	
  7967                           
  7968                           ;GestioLCD.c: 154:     LcClear();
  7969  000A60  EC82  F00D         	call	_LcClear	;wreg free
  7970  000A64  D6F6               	goto	u5700
  7971  000A66                     l6038:
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  7975  000A66  5018               	movf	_timerGLCD^0,w,c
  7976  000A68  ECD6  F00D         	call	_TiResetTics
  7977  000A6C  D692               	goto	u5630
  7978  000A6E                     l6042:
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;GestioLCD.c: 163:    if (LcLliure()) {
  7982  000A6E  EC34  F00E         	call	_LcLliure	;wreg free
  7983  000A72  A0D8               	btfss	status,0,c
  7984  000A74  0012               	return	
  7985                           
  7986                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  7987  000A76  5018               	movf	_timerGLCD^0,w,c
  7988  000A78  ECD6  F00D         	call	_TiResetTics
  7989                           
  7990                           ;GestioLCD.c: 165:     state = 11;
  7991  000A7C  0E0B               	movlw	11
  7992  000A7E  6E16               	movwf	GLCDMotor@state^0,c
  7993  000A80  0012               	return	
  7994  000A82                     l6048:
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  7998  000A82  5017               	movf	_menuDaltGLCD^0,w,c
  7999  000A84  0D1D               	mullw	29
  8000  000A86  50F3               	movf	243,w,c
  8001  000A88  0F01               	addlw	low _menuList
  8002  000A8A  240F               	addwf	GLCDMotor@length2^0,w,c
  8003  000A8C  6FC0               	movwf	??_GLCDMotor& (0+255),b
  8004  000A8E  0E1D               	movlw	29
  8005  000A90  27C0               	addwf	??_GLCDMotor& (0+255),f,b
  8006  000A92  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  8007  000A96                     	if	1	;There is more than 1 active tblptr byte
  8008  000A96  0E02               	movlw	high __smallconst
  8009  000A98  6EF7               	movwf	tblptrh,c
  8010  000A9A                     	endif
  8011  000A9A                     	if	0	;tblptru may be non-zero
  8012  000A9A                     	endif
  8013  000A9A                     	if	0	;tblptru may be non-zero
  8014  000A9A                     	endif
  8015  000A9A  0008               	tblrd		*
  8016  000A9C  50F5               	movf	tablat,w,c
  8017  000A9E  0900               	iorlw	0
  8018  000AA0  B4D8               	btfsc	status,2,c
  8019  000AA2  D002               	goto	l6052
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;GestioLCD.c: 170:     length2++;
  8023  000AA4  2A0F               	incf	GLCDMotor@length2^0,f,c
  8024                           
  8025                           ;GestioLCD.c: 171:    }
  8026  000AA6  0012               	return	
  8027  000AA8                     l6052:
  8028                           
  8029                           ; BSR set to: 0
  8030  000AA8  5017               	movf	_menuDaltGLCD^0,w,c
  8031  000AAA  0D1D               	mullw	29
  8032  000AAC  50F3               	movf	243,w,c
  8033  000AAE  0F01               	addlw	low _menuList
  8034  000AB0  240F               	addwf	GLCDMotor@length2^0,w,c
  8035  000AB2  6FC0               	movwf	??_GLCDMotor& (0+255),b
  8036  000AB4  0E1D               	movlw	29
  8037  000AB6  27C0               	addwf	??_GLCDMotor& (0+255),f,b
  8038  000AB8  C0C0  FFF6         	movff	??_GLCDMotor,tblptrl
  8039  000ABC                     	if	1	;There is more than 1 active tblptr byte
  8040  000ABC  0E02               	movlw	high __smallconst
  8041  000ABE  6EF7               	movwf	tblptrh,c
  8042  000AC0                     	endif
  8043  000AC0                     	if	0	;tblptru may be non-zero
  8044  000AC0                     	endif
  8045  000AC0                     	if	0	;tblptru may be non-zero
  8046  000AC0                     	endif
  8047  000AC0  0008               	tblrd		*
  8048  000AC2  50F5               	movf	tablat,w,c
  8049  000AC4  0900               	iorlw	0
  8050  000AC6  A4D8               	btfss	status,2,c
  8051  000AC8  0012               	return	
  8052  000ACA  D7C3               	goto	l6030
  8053  000ACC                     l6058:
  8054  000ACC  5016               	movf	GLCDMotor@state^0,w,c
  8055  000ACE  0100               	movlb	0	; () banked
  8056  000AD0  6FC0               	movwf	??_GLCDMotor& (0+255),b
  8057  000AD2  6BC1               	clrf	(??_GLCDMotor+1)& (0+255),b
  8058                           
  8059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8060                           ; Switch size 1, requested type "simple"
  8061                           ; Number of cases is 1, Range of values is 0 to 0
  8062                           ; switch strategies available:
  8063                           ; Name         Instructions Cycles
  8064                           ; simple_byte            4     3 (average)
  8065                           ;	Chosen strategy is simple_byte
  8066  000AD4  51C1               	movf	(??_GLCDMotor+1)& (0+255),w,b
  8067  000AD6  0A00               	xorlw	0	; case 0
  8068  000AD8  A4D8               	btfss	status,2,c
  8069  000ADA  0012               	return	
  8070                           
  8071                           ; BSR set to: 0
  8072                           ; Switch size 1, requested type "simple"
  8073                           ; Number of cases is 12, Range of values is 0 to 13
  8074                           ; switch strategies available:
  8075                           ; Name         Instructions Cycles
  8076                           ; simple_byte           37    19 (average)
  8077                           ;	Chosen strategy is simple_byte
  8078  000ADC  51C0               	movf	??_GLCDMotor& (0+255),w,b
  8079  000ADE  0A00               	xorlw	0	; case 0
  8080  000AE0  B4D8               	btfsc	status,2,c
  8081  000AE2  D6CC               	goto	l832
  8082  000AE4  0A01               	xorlw	1	; case 1
  8083  000AE6  B4D8               	btfsc	status,2,c
  8084  000AE8  D6E6               	goto	l5960
  8085  000AEA  0A03               	xorlw	3	; case 2
  8086  000AEC  B4D8               	btfsc	status,2,c
  8087  000AEE  D631               	goto	l5872
  8088  000AF0  0A01               	xorlw	1	; case 3
  8089  000AF2  B4D8               	btfsc	status,2,c
  8090  000AF4  D650               	goto	l5888
  8091  000AF6  0A06               	xorlw	6	; case 5
  8092  000AF8  B4D8               	btfsc	status,2,c
  8093  000AFA  D6AE               	goto	l5924
  8094  000AFC  0A03               	xorlw	3	; case 6
  8095  000AFE  B4D8               	btfsc	status,2,c
  8096  000B00  D6A4               	goto	l5916
  8097  000B02  0A01               	xorlw	1	; case 7
  8098  000B04  B4D8               	btfsc	status,2,c
  8099  000B06  D710               	goto	l5976
  8100  000B08  0A0F               	xorlw	15	; case 8
  8101  000B0A  B4D8               	btfsc	status,2,c
  8102  000B0C  D7B0               	goto	l6042
  8103  000B0E  0A01               	xorlw	1	; case 9
  8104  000B10  B4D8               	btfsc	status,2,c
  8105  000B12  D72F               	goto	l5992
  8106  000B14  0A03               	xorlw	3	; case 10
  8107  000B16  B4D8               	btfsc	status,2,c
  8108  000B18  D7A6               	goto	l6038
  8109  000B1A  0A01               	xorlw	1	; case 11
  8110  000B1C  B4D8               	btfsc	status,2,c
  8111  000B1E  D789               	goto	l6022
  8112  000B20  0A06               	xorlw	6	; case 13
  8113  000B22  A4D8               	btfss	status,2,c
  8114  000B24  0012               	return	
  8115  000B26  D7AD               	goto	l6048
  8116  000B28                     __end_of_GLCDMotor:
  8117                           	callstack 0
  8118                           
  8119 ;; *************** function _LcPutChar *****************
  8120 ;; Defined at:
  8121 ;;		line 134 in file "LcTLCD.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;  c               1    wreg     unsigned char 
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;  c               1   19[COMRAM] unsigned char 
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMRAM   BANK0   BANK1
  8135 ;;      Params:         0       0       0
  8136 ;;      Locals:         1       0       0
  8137 ;;      Temps:          0       0       0
  8138 ;;      Totals:         1       0       0
  8139 ;;Total ram usage:        1 bytes
  8140 ;; Hardware stack levels used: 1
  8141 ;; Hardware stack levels required when called: 5
  8142 ;; This function calls:
  8143 ;;		_CantaData
  8144 ;;		_LcGotoXY
  8145 ;;		_WaitForBusy
  8146 ;; This function is called by:
  8147 ;;		_LcLCD
  8148 ;;		_menu
  8149 ;;		_GLCDMotor
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           	psect	text61
  8154  00183C                     __ptext61:
  8155                           	callstack 0
  8156  00183C                     _LcPutChar:
  8157                           	callstack 24
  8158                           
  8159                           ;incstack = 0
  8160                           ;LcPutChar@c stored from wreg
  8161  00183C  6E76               	movwf	LcPutChar@c^0,c
  8162                           
  8163                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  8164  00183E  EC6A  F00C         	call	_WaitForBusy	;wreg free
  8165  001842  5076               	movf	LcPutChar@c^0,w,c
  8166  001844  ECFB  F00C         	call	_CantaData
  8167                           
  8168                           ;LcTLCD.c: 138:  ++ColumnAct;
  8169  001848  2A32               	incf	_ColumnAct^0,f,c
  8170                           
  8171                           ;LcTLCD.c: 140:  if (Rows == 2) {
  8172  00184A  0E02               	movlw	2
  8173  00184C  1835               	xorwf	_Rows^0,w,c
  8174  00184E  A4D8               	btfss	status,2,c
  8175  001850  D010               	goto	l3894
  8176                           
  8177                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  8178  001852  0E27               	movlw	39
  8179  001854  6432               	cpfsgt	_ColumnAct^0,c
  8180  001856  D00D               	goto	l3894
  8181                           
  8182                           ;LcTLCD.c: 142:    ColumnAct = 0;
  8183  001858  0E00               	movlw	0
  8184  00185A  6E32               	movwf	_ColumnAct^0,c
  8185                           
  8186                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  8187  00185C  2A33               	incf	_RowAct^0,f,c
  8188  00185E  0E01               	movlw	1
  8189  001860  6433               	cpfsgt	_RowAct^0,c
  8190  001862  D002               	goto	l3892
  8191  001864  0E00               	movlw	0
  8192  001866  6E33               	movwf	_RowAct^0,c
  8193  001868                     l3892:
  8194                           
  8195                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  8196  001868  C033  F070         	movff	_RowAct,LcGotoXY@Row
  8197  00186C  5032               	movf	_ColumnAct^0,w,c
  8198  00186E  EC8A  F00C         	call	_LcGotoXY
  8199  001872                     l3894:
  8200                           
  8201                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  8202  001872  0433               	decf	_RowAct^0,w,c
  8203  001874  A4D8               	btfss	status,2,c
  8204  001876  0012               	return	
  8205                           
  8206                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  8207  001878  0E27               	movlw	39
  8208  00187A  6432               	cpfsgt	_ColumnAct^0,c
  8209  00187C  D002               	goto	l3900
  8210  00187E  0E00               	movlw	0
  8211  001880  6E32               	movwf	_ColumnAct^0,c
  8212  001882                     l3900:
  8213                           
  8214                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  8215  001882  C033  F070         	movff	_RowAct,LcGotoXY@Row
  8216  001886  5032               	movf	_ColumnAct^0,w,c
  8217  001888  EC8A  F00C         	call	_LcGotoXY
  8218  00188C  0012               	return		;funcret
  8219  00188E                     __end_of_LcPutChar:
  8220                           	callstack 0
  8221                           
  8222 ;; *************** function _CantaData *****************
  8223 ;; Defined at:
  8224 ;;		line 196 in file "LcTLCD.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  Data            1    wreg     unsigned char 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  Data            1    7[COMRAM] unsigned char 
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      void 
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, status,0, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1
  8238 ;;      Params:         0       0       0
  8239 ;;      Locals:         1       0       0
  8240 ;;      Temps:          0       0       0
  8241 ;;      Totals:         1       0       0
  8242 ;;Total ram usage:        1 bytes
  8243 ;; Hardware stack levels used: 1
  8244 ;; Hardware stack levels required when called: 3
  8245 ;; This function calls:
  8246 ;;		_CantaPartAlta
  8247 ;;		_CantaPartBaixa
  8248 ;; This function is called by:
  8249 ;;		_LcPutChar
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text62
  8254  0019F6                     __ptext62:
  8255                           	callstack 0
  8256  0019F6                     _CantaData:
  8257                           	callstack 25
  8258                           
  8259                           ;incstack = 0
  8260                           ;CantaData@Data stored from wreg
  8261  0019F6  6E6A               	movwf	CantaData@Data^0,c
  8262                           
  8263                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8264  0019F8  9694               	bcf	148,3,c	;volatile
  8265  0019FA  9494               	bcf	148,2,c	;volatile
  8266  0019FC  9294               	bcf	148,1,c	;volatile
  8267  0019FE  9094               	bcf	148,0,c	;volatile
  8268                           
  8269                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  8270  001A00  8A8B               	bsf	139,5,c	;volatile
  8271                           
  8272                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  8273  001A02  9E8C               	bcf	140,7,c	;volatile
  8274                           
  8275                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  8276  001A04  888B               	bsf	139,4,c	;volatile
  8277                           
  8278                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  8279  001A06  506A               	movf	CantaData@Data^0,w,c
  8280  001A08  EC8E  F00B         	call	_CantaPartAlta
  8281                           
  8282                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  8283  001A0C  888B               	bsf	139,4,c	;volatile
  8284                           
  8285                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  8286  001A0E  988B               	bcf	139,4,c	;volatile
  8287                           
  8288                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  8289  001A10  988B               	bcf	139,4,c	;volatile
  8290                           
  8291                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  8292  001A12  888B               	bsf	139,4,c	;volatile
  8293                           
  8294                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  8295  001A14  506A               	movf	CantaData@Data^0,w,c
  8296  001A16  EC5A  F00B         	call	_CantaPartBaixa
  8297                           
  8298                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  8299  001A1A  888B               	bsf	139,4,c	;volatile
  8300                           
  8301                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  8302  001A1C  988B               	bcf	139,4,c	;volatile
  8303                           
  8304                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8305  001A1E  8694               	bsf	148,3,c	;volatile
  8306  001A20  8494               	bsf	148,2,c	;volatile
  8307  001A22  8294               	bsf	148,1,c	;volatile
  8308  001A24  8094               	bsf	148,0,c	;volatile
  8309  001A26  0012               	return		;funcret
  8310  001A28                     __end_of_CantaData:
  8311                           	callstack 0
  8312                           
  8313 ;; *************** function _LcNewString *****************
  8314 ;; Defined at:
  8315 ;;		line 241 in file "LcTLCD.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  8318 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  8319 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  8320 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;		None
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  1    wreg      void 
  8325 ;; Registers used:
  8326 ;;		wreg, status,2, status,0
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/1
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMRAM   BANK0   BANK1
  8332 ;;      Params:         2       0       0
  8333 ;;      Locals:         0       0       0
  8334 ;;      Temps:          0       0       0
  8335 ;;      Totals:         2       0       0
  8336 ;;Total ram usage:        2 bytes
  8337 ;; Hardware stack levels used: 1
  8338 ;; Hardware stack levels required when called: 2
  8339 ;; This function calls:
  8340 ;;		Nothing
  8341 ;; This function is called by:
  8342 ;;		_menu
  8343 ;;		_GLCDMotor
  8344 ;;		_motorJoc
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text63
  8349  001C5C                     __ptext63:
  8350                           	callstack 0
  8351  001C5C                     _LcNewString:
  8352                           	callstack 27
  8353                           
  8354                           ;LcTLCD.c: 242:     s_ptr = new_s;
  8355                           
  8356                           ;incstack = 0
  8357  001C5C  C06B  F005         	movff	LcNewString@new_s,_s_ptr
  8358  001C60  C06C  F006         	movff	LcNewString@new_s+1,_s_ptr+1
  8359                           
  8360                           ;LcTLCD.c: 243:     nou_s = 1;
  8361  001C64  8A79               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8362  001C66  0012               	return		;funcret
  8363  001C68                     __end_of_LcNewString:
  8364                           	callstack 0
  8365                           
  8366 ;; *************** function _LcLliure *****************
  8367 ;; Defined at:
  8368 ;;		line 257 in file "LcTLCD.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;		None
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;		None
  8373 ;; Return value:  Size  Location     Type
  8374 ;;		None               void
  8375 ;; Registers used:
  8376 ;;		status,0
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/1
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMRAM   BANK0   BANK1
  8382 ;;      Params:         0       0       0
  8383 ;;      Locals:         0       0       0
  8384 ;;      Temps:          0       0       0
  8385 ;;      Totals:         0       0       0
  8386 ;;Total ram usage:        0 bytes
  8387 ;; Hardware stack levels used: 1
  8388 ;; Hardware stack levels required when called: 2
  8389 ;; This function calls:
  8390 ;;		Nothing
  8391 ;; This function is called by:
  8392 ;;		_menu
  8393 ;;		_GLCDMotor
  8394 ;;		_motorJoc
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text64
  8399  001C68                     __ptext64:
  8400                           	callstack 0
  8401  001C68                     _LcLliure:
  8402                           	callstack 27
  8403                           
  8404                           ;LcTLCD.c: 258:     return !nou_s;
  8405                           
  8406                           ;incstack = 0
  8407  001C68  AA79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8408  001C6A  D002               	goto	l3910
  8409  001C6C  90D8               	bcf	status,0,c
  8410  001C6E  0012               	return	
  8411  001C70                     l3910:
  8412  001C70  80D8               	bsf	status,0,c
  8413  001C72  0012               	return		;funcret
  8414  001C74                     __end_of_LcLliure:
  8415                           	callstack 0
  8416                           
  8417 ;; *************** function _LcClear *****************
  8418 ;; Defined at:
  8419 ;;		line 84 in file "LcTLCD.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;		None
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1
  8433 ;;      Params:         0       0       0
  8434 ;;      Locals:         0       0       0
  8435 ;;      Temps:          0       0       0
  8436 ;;      Totals:         0       0       0
  8437 ;;Total ram usage:        0 bytes
  8438 ;; Hardware stack levels used: 1
  8439 ;; Hardware stack levels required when called: 5
  8440 ;; This function calls:
  8441 ;;		_CantaIR
  8442 ;;		_Espera
  8443 ;;		_LcGotoXY
  8444 ;;		_WaitForBusy
  8445 ;; This function is called by:
  8446 ;;		_menu
  8447 ;;		_GLCDMotor
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text65
  8452  001B04                     __ptext65:
  8453                           	callstack 0
  8454  001B04                     _LcClear:
  8455                           	callstack 24
  8456                           
  8457                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  8458                           
  8459                           ;incstack = 0
  8460  001B04  EC6A  F00C         	call	_WaitForBusy	;wreg free
  8461  001B08  0E01               	movlw	1
  8462  001B0A  EC14  F00D         	call	_CantaIR
  8463                           
  8464                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  8465  001B0E  0E00               	movlw	0
  8466  001B10  6E70               	movwf	(Espera@ms+1)^0,c
  8467  001B12  0E03               	movlw	3
  8468  001B14  6E6F               	movwf	Espera@ms^0,c
  8469  001B16  5031               	movf	_Timer^0,w,c
  8470  001B18  EC94  F00D         	call	_Espera
  8471                           
  8472                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  8473  001B1C  0E00               	movlw	0
  8474  001B1E  6E70               	movwf	LcGotoXY@Row^0,c
  8475  001B20  0E00               	movlw	0
  8476  001B22  EC8A  F00C         	call	_LcGotoXY
  8477  001B26  0012               	return		;funcret
  8478  001B28                     __end_of_LcClear:
  8479                           	callstack 0
  8480                           
  8481 ;; *************** function _LcGotoXY *****************
  8482 ;; Defined at:
  8483 ;;		line 106 in file "LcTLCD.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  Column          1    wreg     unsigned char 
  8486 ;;  Row             1   13[COMRAM] unsigned char 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;  Column          1   18[COMRAM] unsigned char 
  8489 ;;  Fisics          2   14[COMRAM] int 
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1    wreg      void 
  8492 ;; Registers used:
  8493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/1
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1
  8499 ;;      Params:         1       0       0
  8500 ;;      Locals:         5       0       0
  8501 ;;      Temps:          0       0       0
  8502 ;;      Totals:         6       0       0
  8503 ;;Total ram usage:        6 bytes
  8504 ;; Hardware stack levels used: 1
  8505 ;; Hardware stack levels required when called: 4
  8506 ;; This function calls:
  8507 ;;		_CantaIR
  8508 ;;		_WaitForBusy
  8509 ;; This function is called by:
  8510 ;;		_LcClear
  8511 ;;		_LcPutChar
  8512 ;;		_menu
  8513 ;;		_GLCDMotor
  8514 ;;		_motorJoc
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           	psect	text66
  8519  001914                     __ptext66:
  8520                           	callstack 0
  8521  001914                     _LcGotoXY:
  8522                           	callstack 25
  8523                           
  8524                           ;incstack = 0
  8525                           ;LcGotoXY@Column stored from wreg
  8526  001914  6E75               	movwf	LcGotoXY@Column^0,c
  8527                           
  8528                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  8529  001916  5070               	movf	LcGotoXY@Row^0,w,c
  8530  001918  B4D8               	btfsc	status,2,c
  8531  00191A  D004               	goto	l3820
  8532  00191C  0E00               	movlw	0
  8533  00191E  6E74               	movwf	(_LcGotoXY$336+1)^0,c
  8534  001920  0E40               	movlw	64
  8535  001922  D003               	goto	L9
  8536  001924                     l3820:
  8537  001924  0E00               	movlw	0
  8538  001926  6E74               	movwf	(_LcGotoXY$336+1)^0,c
  8539  001928  0E00               	movlw	0
  8540  00192A                     L9:
  8541  00192A  6E73               	movwf	_LcGotoXY$336^0,c
  8542  00192C  5075               	movf	LcGotoXY@Column^0,w,c
  8543  00192E  2473               	addwf	_LcGotoXY$336^0,w,c
  8544  001930  6E71               	movwf	LcGotoXY@Fisics^0,c
  8545  001932  0E00               	movlw	0
  8546  001934  2074               	addwfc	(_LcGotoXY$336+1)^0,w,c
  8547  001936  6E72               	movwf	(LcGotoXY@Fisics+1)^0,c
  8548                           
  8549                           ;LcTLCD.c: 127:  WaitForBusy();
  8550  001938  EC6A  F00C         	call	_WaitForBusy	;wreg free
  8551                           
  8552                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  8553  00193C  5071               	movf	LcGotoXY@Fisics^0,w,c
  8554  00193E  0980               	iorlw	128
  8555  001940  EC14  F00D         	call	_CantaIR
  8556                           
  8557                           ;LcTLCD.c: 130:  RowAct = Row;
  8558  001944  C070  F033         	movff	LcGotoXY@Row,_RowAct
  8559                           
  8560                           ;LcTLCD.c: 131:  ColumnAct = Column;
  8561  001948  C075  F032         	movff	LcGotoXY@Column,_ColumnAct
  8562  00194C  0012               	return		;funcret
  8563  00194E                     __end_of_LcGotoXY:
  8564                           	callstack 0
  8565                           
  8566 ;; *************** function _WaitForBusy *****************
  8567 ;; Defined at:
  8568 ;;		line 212 in file "LcTLCD.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;		None
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;  Busy            1   12[COMRAM] unsigned char 
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1    wreg      void 
  8575 ;; Registers used:
  8576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1
  8582 ;;      Params:         0       0       0
  8583 ;;      Locals:         1       0       0
  8584 ;;      Temps:          0       0       0
  8585 ;;      Totals:         1       0       0
  8586 ;;Total ram usage:        1 bytes
  8587 ;; Hardware stack levels used: 1
  8588 ;; Hardware stack levels required when called: 3
  8589 ;; This function calls:
  8590 ;;		_TiGetTics
  8591 ;;		_TiResetTics
  8592 ;; This function is called by:
  8593 ;;		_LcInit
  8594 ;;		_LcClear
  8595 ;;		_LcGotoXY
  8596 ;;		_LcPutChar
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text67
  8601  0018D4                     __ptext67:
  8602                           	callstack 0
  8603  0018D4                     _WaitForBusy:
  8604                           	callstack 25
  8605                           
  8606                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8607                           
  8608                           ;incstack = 0
  8609  0018D4  8694               	bsf	148,3,c	;volatile
  8610  0018D6  8494               	bsf	148,2,c	;volatile
  8611  0018D8  8294               	bsf	148,1,c	;volatile
  8612  0018DA  8094               	bsf	148,0,c	;volatile
  8613                           
  8614                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  8615  0018DC  9A8B               	bcf	139,5,c	;volatile
  8616                           
  8617                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  8618  0018DE  8E8C               	bsf	140,7,c	;volatile
  8619                           
  8620                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  8621  0018E0  5031               	movf	_Timer^0,w,c
  8622  0018E2  ECD6  F00D         	call	_TiResetTics
  8623  0018E6                     l3788:
  8624                           
  8625                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8626  0018E6  888B               	bsf	139,4,c	;volatile
  8627  0018E8  888B               	bsf	139,4,c	;volatile
  8628                           
  8629                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  8630  0018EA  0E00               	movlw	0
  8631  0018EC  B682               	btfsc	130,3,c	;volatile
  8632  0018EE  0E01               	movlw	1
  8633  0018F0  6E6F               	movwf	WaitForBusy@Busy^0,c
  8634                           
  8635                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  8636  0018F2  988B               	bcf	139,4,c	;volatile
  8637                           
  8638                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  8639  0018F4  988B               	bcf	139,4,c	;volatile
  8640                           
  8641                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8642  0018F6  888B               	bsf	139,4,c	;volatile
  8643  0018F8  888B               	bsf	139,4,c	;volatile
  8644                           
  8645                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  8646  0018FA  988B               	bcf	139,4,c	;volatile
  8647                           
  8648                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  8649  0018FC  988B               	bcf	139,4,c	;volatile
  8650                           
  8651                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  8652  0018FE  5031               	movf	_Timer^0,w,c
  8653  001900  EC5A  F00D         	call	_TiGetTics
  8654  001904  5068               	movf	?_TiGetTics^0,w,c
  8655  001906  1069               	iorwf	(?_TiGetTics+1)^0,w,c
  8656  001908  A4D8               	btfss	status,2,c
  8657  00190A  0012               	return	
  8658                           
  8659                           ;LcTLCD.c: 227:  } while(Busy);
  8660  00190C  506F               	movf	WaitForBusy@Busy^0,w,c
  8661  00190E  B4D8               	btfsc	status,2,c
  8662  001910  0012               	return	
  8663  001912  D7E9               	goto	l3788
  8664  001914                     __end_of_WaitForBusy:
  8665                           	callstack 0
  8666                           
  8667 ;; *************** function _CantaIR *****************
  8668 ;; Defined at:
  8669 ;;		line 180 in file "LcTLCD.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  IR              1    wreg     unsigned char 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;  IR              1    7[COMRAM] unsigned char 
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      void 
  8676 ;; Registers used:
  8677 ;;		wreg, status,2, status,0, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1
  8683 ;;      Params:         0       0       0
  8684 ;;      Locals:         1       0       0
  8685 ;;      Temps:          0       0       0
  8686 ;;      Totals:         1       0       0
  8687 ;;Total ram usage:        1 bytes
  8688 ;; Hardware stack levels used: 1
  8689 ;; Hardware stack levels required when called: 3
  8690 ;; This function calls:
  8691 ;;		_CantaPartAlta
  8692 ;;		_CantaPartBaixa
  8693 ;; This function is called by:
  8694 ;;		_LcInit
  8695 ;;		_LcClear
  8696 ;;		_LcGotoXY
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text68
  8701  001A28                     __ptext68:
  8702                           	callstack 0
  8703  001A28                     _CantaIR:
  8704                           	callstack 25
  8705                           
  8706                           ;incstack = 0
  8707                           ;CantaIR@IR stored from wreg
  8708  001A28  6E6A               	movwf	CantaIR@IR^0,c
  8709                           
  8710                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8711  001A2A  9694               	bcf	148,3,c	;volatile
  8712  001A2C  9494               	bcf	148,2,c	;volatile
  8713  001A2E  9294               	bcf	148,1,c	;volatile
  8714  001A30  9094               	bcf	148,0,c	;volatile
  8715                           
  8716                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  8717  001A32  9A8B               	bcf	139,5,c	;volatile
  8718                           
  8719                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  8720  001A34  9E8C               	bcf	140,7,c	;volatile
  8721                           
  8722                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  8723  001A36  888B               	bsf	139,4,c	;volatile
  8724                           
  8725                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  8726  001A38  506A               	movf	CantaIR@IR^0,w,c
  8727  001A3A  EC8E  F00B         	call	_CantaPartAlta
  8728                           
  8729                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  8730  001A3E  888B               	bsf	139,4,c	;volatile
  8731                           
  8732                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  8733  001A40  988B               	bcf	139,4,c	;volatile
  8734                           
  8735                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  8736  001A42  988B               	bcf	139,4,c	;volatile
  8737                           
  8738                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  8739  001A44  888B               	bsf	139,4,c	;volatile
  8740                           
  8741                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  8742  001A46  506A               	movf	CantaIR@IR^0,w,c
  8743  001A48  EC5A  F00B         	call	_CantaPartBaixa
  8744                           
  8745                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  8746  001A4C  888B               	bsf	139,4,c	;volatile
  8747                           
  8748                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  8749  001A4E  988B               	bcf	139,4,c	;volatile
  8750                           
  8751                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8752  001A50  8694               	bsf	148,3,c	;volatile
  8753  001A52  8494               	bsf	148,2,c	;volatile
  8754  001A54  8294               	bsf	148,1,c	;volatile
  8755  001A56  8094               	bsf	148,0,c	;volatile
  8756  001A58  0012               	return		;funcret
  8757  001A5A                     __end_of_CantaIR:
  8758                           	callstack 0
  8759                           
  8760 ;; *************** function _CantaPartBaixa *****************
  8761 ;; Defined at:
  8762 ;;		line 173 in file "LcTLCD.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  c               1    wreg     unsigned char 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;  c               1    6[COMRAM] unsigned char 
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  1    wreg      void 
  8769 ;; Registers used:
  8770 ;;		wreg, status,2, status,0
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMRAM   BANK0   BANK1
  8776 ;;      Params:         0       0       0
  8777 ;;      Locals:         1       0       0
  8778 ;;      Temps:          1       0       0
  8779 ;;      Totals:         2       0       0
  8780 ;;Total ram usage:        2 bytes
  8781 ;; Hardware stack levels used: 1
  8782 ;; Hardware stack levels required when called: 2
  8783 ;; This function calls:
  8784 ;;		Nothing
  8785 ;; This function is called by:
  8786 ;;		_CantaIR
  8787 ;;		_CantaData
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           	psect	text69
  8792  0016B4                     __ptext69:
  8793                           	callstack 0
  8794  0016B4                     _CantaPartBaixa:
  8795                           	callstack 25
  8796                           
  8797                           ;incstack = 0
  8798                           ;CantaPartBaixa@c stored from wreg
  8799  0016B4  6E69               	movwf	CantaPartBaixa@c^0,c
  8800                           
  8801                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  8802  0016B6  A669               	btfss	CantaPartBaixa@c^0,3,c
  8803  0016B8  D003               	goto	u2810
  8804  0016BA  6A68               	clrf	??_CantaPartBaixa^0,c
  8805  0016BC  2A68               	incf	??_CantaPartBaixa^0,f,c
  8806  0016BE  D001               	goto	u2828
  8807  0016C0                     u2810:
  8808  0016C0  6A68               	clrf	??_CantaPartBaixa^0,c
  8809  0016C2                     u2828:
  8810  0016C2  4668               	rlncf	??_CantaPartBaixa^0,f,c
  8811  0016C4  4668               	rlncf	??_CantaPartBaixa^0,f,c
  8812  0016C6  4668               	rlncf	??_CantaPartBaixa^0,f,c
  8813  0016C8  508B               	movf	139,w,c	;volatile
  8814  0016CA  1868               	xorwf	??_CantaPartBaixa^0,w,c
  8815  0016CC  0BF7               	andlw	-9
  8816  0016CE  1868               	xorwf	??_CantaPartBaixa^0,w,c
  8817  0016D0  6E8B               	movwf	139,c	;volatile
  8818                           
  8819                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  8820  0016D2  A469               	btfss	CantaPartBaixa@c^0,2,c
  8821  0016D4  D003               	goto	u2830
  8822  0016D6  6A68               	clrf	??_CantaPartBaixa^0,c
  8823  0016D8  2A68               	incf	??_CantaPartBaixa^0,f,c
  8824  0016DA  D001               	goto	u2848
  8825  0016DC                     u2830:
  8826  0016DC  6A68               	clrf	??_CantaPartBaixa^0,c
  8827  0016DE                     u2848:
  8828  0016DE  4668               	rlncf	??_CantaPartBaixa^0,f,c
  8829  0016E0  4668               	rlncf	??_CantaPartBaixa^0,f,c
  8830  0016E2  508B               	movf	139,w,c	;volatile
  8831  0016E4  1868               	xorwf	??_CantaPartBaixa^0,w,c
  8832  0016E6  0BFB               	andlw	-5
  8833  0016E8  1868               	xorwf	??_CantaPartBaixa^0,w,c
  8834  0016EA  6E8B               	movwf	139,c	;volatile
  8835                           
  8836                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  8837  0016EC  A269               	btfss	CantaPartBaixa@c^0,1,c
  8838  0016EE  D003               	goto	u2850
  8839  0016F0  6A68               	clrf	??_CantaPartBaixa^0,c
  8840  0016F2  2A68               	incf	??_CantaPartBaixa^0,f,c
  8841  0016F4  D001               	goto	u2868
  8842  0016F6                     u2850:
  8843  0016F6  6A68               	clrf	??_CantaPartBaixa^0,c
  8844  0016F8                     u2868:
  8845  0016F8  4668               	rlncf	??_CantaPartBaixa^0,f,c
  8846  0016FA  508B               	movf	139,w,c	;volatile
  8847  0016FC  1868               	xorwf	??_CantaPartBaixa^0,w,c
  8848  0016FE  0BFD               	andlw	-3
  8849  001700  1868               	xorwf	??_CantaPartBaixa^0,w,c
  8850  001702  6E8B               	movwf	139,c	;volatile
  8851                           
  8852                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  8853  001704  A069               	btfss	CantaPartBaixa@c^0,0,c
  8854  001706  D003               	goto	u2870
  8855  001708  6A68               	clrf	??_CantaPartBaixa^0,c
  8856  00170A  2A68               	incf	??_CantaPartBaixa^0,f,c
  8857  00170C  D001               	goto	u2888
  8858  00170E                     u2870:
  8859  00170E  6A68               	clrf	??_CantaPartBaixa^0,c
  8860  001710                     u2888:
  8861  001710  508B               	movf	139,w,c	;volatile
  8862  001712  1868               	xorwf	??_CantaPartBaixa^0,w,c
  8863  001714  0BFE               	andlw	-2
  8864  001716  1868               	xorwf	??_CantaPartBaixa^0,w,c
  8865  001718  6E8B               	movwf	139,c	;volatile
  8866  00171A  0012               	return		;funcret
  8867  00171C                     __end_of_CantaPartBaixa:
  8868                           	callstack 0
  8869                           
  8870 ;; *************** function _CantaPartAlta *****************
  8871 ;; Defined at:
  8872 ;;		line 166 in file "LcTLCD.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;  c               1    wreg     unsigned char 
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;  c               1    6[COMRAM] unsigned char 
  8877 ;; Return value:  Size  Location     Type
  8878 ;;                  1    wreg      void 
  8879 ;; Registers used:
  8880 ;;		wreg, status,2, status,0
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMRAM   BANK0   BANK1
  8886 ;;      Params:         0       0       0
  8887 ;;      Locals:         1       0       0
  8888 ;;      Temps:          1       0       0
  8889 ;;      Totals:         2       0       0
  8890 ;;Total ram usage:        2 bytes
  8891 ;; Hardware stack levels used: 1
  8892 ;; Hardware stack levels required when called: 2
  8893 ;; This function calls:
  8894 ;;		Nothing
  8895 ;; This function is called by:
  8896 ;;		_CantaIR
  8897 ;;		_CantaData
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901                           	psect	text70
  8902  00171C                     __ptext70:
  8903                           	callstack 0
  8904  00171C                     _CantaPartAlta:
  8905                           	callstack 25
  8906                           
  8907                           ;incstack = 0
  8908                           ;CantaPartAlta@c stored from wreg
  8909  00171C  6E69               	movwf	CantaPartAlta@c^0,c
  8910                           
  8911                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  8912  00171E  AE69               	btfss	CantaPartAlta@c^0,7,c
  8913  001720  D003               	goto	u2730
  8914  001722  6A68               	clrf	??_CantaPartAlta^0,c
  8915  001724  2A68               	incf	??_CantaPartAlta^0,f,c
  8916  001726  D001               	goto	u2748
  8917  001728                     u2730:
  8918  001728  6A68               	clrf	??_CantaPartAlta^0,c
  8919  00172A                     u2748:
  8920  00172A  4668               	rlncf	??_CantaPartAlta^0,f,c
  8921  00172C  4668               	rlncf	??_CantaPartAlta^0,f,c
  8922  00172E  4668               	rlncf	??_CantaPartAlta^0,f,c
  8923  001730  508B               	movf	139,w,c	;volatile
  8924  001732  1868               	xorwf	??_CantaPartAlta^0,w,c
  8925  001734  0BF7               	andlw	-9
  8926  001736  1868               	xorwf	??_CantaPartAlta^0,w,c
  8927  001738  6E8B               	movwf	139,c	;volatile
  8928                           
  8929                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  8930  00173A  AC69               	btfss	CantaPartAlta@c^0,6,c
  8931  00173C  D003               	goto	u2750
  8932  00173E  6A68               	clrf	??_CantaPartAlta^0,c
  8933  001740  2A68               	incf	??_CantaPartAlta^0,f,c
  8934  001742  D001               	goto	u2768
  8935  001744                     u2750:
  8936  001744  6A68               	clrf	??_CantaPartAlta^0,c
  8937  001746                     u2768:
  8938  001746  4668               	rlncf	??_CantaPartAlta^0,f,c
  8939  001748  4668               	rlncf	??_CantaPartAlta^0,f,c
  8940  00174A  508B               	movf	139,w,c	;volatile
  8941  00174C  1868               	xorwf	??_CantaPartAlta^0,w,c
  8942  00174E  0BFB               	andlw	-5
  8943  001750  1868               	xorwf	??_CantaPartAlta^0,w,c
  8944  001752  6E8B               	movwf	139,c	;volatile
  8945                           
  8946                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  8947  001754  AA69               	btfss	CantaPartAlta@c^0,5,c
  8948  001756  D003               	goto	u2770
  8949  001758  6A68               	clrf	??_CantaPartAlta^0,c
  8950  00175A  2A68               	incf	??_CantaPartAlta^0,f,c
  8951  00175C  D001               	goto	u2788
  8952  00175E                     u2770:
  8953  00175E  6A68               	clrf	??_CantaPartAlta^0,c
  8954  001760                     u2788:
  8955  001760  4668               	rlncf	??_CantaPartAlta^0,f,c
  8956  001762  508B               	movf	139,w,c	;volatile
  8957  001764  1868               	xorwf	??_CantaPartAlta^0,w,c
  8958  001766  0BFD               	andlw	-3
  8959  001768  1868               	xorwf	??_CantaPartAlta^0,w,c
  8960  00176A  6E8B               	movwf	139,c	;volatile
  8961                           
  8962                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  8963  00176C  A869               	btfss	CantaPartAlta@c^0,4,c
  8964  00176E  D003               	goto	u2790
  8965  001770  6A68               	clrf	??_CantaPartAlta^0,c
  8966  001772  2A68               	incf	??_CantaPartAlta^0,f,c
  8967  001774  D001               	goto	u2808
  8968  001776                     u2790:
  8969  001776  6A68               	clrf	??_CantaPartAlta^0,c
  8970  001778                     u2808:
  8971  001778  508B               	movf	139,w,c	;volatile
  8972  00177A  1868               	xorwf	??_CantaPartAlta^0,w,c
  8973  00177C  0BFE               	andlw	-2
  8974  00177E  1868               	xorwf	??_CantaPartAlta^0,w,c
  8975  001780  6E8B               	movwf	139,c	;volatile
  8976  001782  0012               	return		;funcret
  8977  001784                     __end_of_CantaPartAlta:
  8978                           	callstack 0
  8979                           
  8980 ;; *************** function _Espera *****************
  8981 ;; Defined at:
  8982 ;;		line 161 in file "LcTLCD.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  Timer           1    wreg     unsigned char 
  8985 ;;  ms              2   12[COMRAM] int 
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;  Timer           1   15[COMRAM] unsigned char 
  8988 ;; Return value:  Size  Location     Type
  8989 ;;                  1    wreg      void 
  8990 ;; Registers used:
  8991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8992 ;; Tracked objects:
  8993 ;;		On entry : 0/0
  8994 ;;		On exit  : 0/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMRAM   BANK0   BANK1
  8997 ;;      Params:         2       0       0
  8998 ;;      Locals:         1       0       0
  8999 ;;      Temps:          1       0       0
  9000 ;;      Totals:         4       0       0
  9001 ;;Total ram usage:        4 bytes
  9002 ;; Hardware stack levels used: 1
  9003 ;; Hardware stack levels required when called: 3
  9004 ;; This function calls:
  9005 ;;		_TiGetTics
  9006 ;;		_TiResetTics
  9007 ;; This function is called by:
  9008 ;;		_LcInit
  9009 ;;		_LcClear
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           	psect	text71
  9014  001B28                     __ptext71:
  9015                           	callstack 0
  9016  001B28                     _Espera:
  9017                           	callstack 25
  9018                           
  9019                           ;incstack = 0
  9020                           ;Espera@Timer stored from wreg
  9021  001B28  6E72               	movwf	Espera@Timer^0,c
  9022                           
  9023                           ;LcTLCD.c: 162:  TiResetTics(Timer);
  9024  001B2A  5072               	movf	Espera@Timer^0,w,c
  9025  001B2C  ECD6  F00D         	call	_TiResetTics
  9026  001B30                     l3814:
  9027  001B30  5072               	movf	Espera@Timer^0,w,c
  9028  001B32  EC5A  F00D         	call	_TiGetTics
  9029  001B36  506F               	movf	Espera@ms^0,w,c
  9030  001B38  5C68               	subwf	?_TiGetTics^0,w,c
  9031  001B3A  5069               	movf	(?_TiGetTics+1)^0,w,c
  9032  001B3C  0A80               	xorlw	128
  9033  001B3E  6E71               	movwf	??_Espera^0,c
  9034  001B40  5070               	movf	(Espera@ms+1)^0,w,c
  9035  001B42  0A80               	xorlw	128
  9036  001B44  5871               	subwfb	??_Espera^0,w,c
  9037  001B46  B0D8               	btfsc	status,0,c
  9038  001B48  0012               	return	
  9039  001B4A  D7F2               	goto	l3814
  9040  001B4C                     __end_of_Espera:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function _TiResetTics *****************
  9044 ;; Defined at:
  9045 ;;		line 55 in file "TiTTimer.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  Handle          1    wreg     unsigned char 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  Handle          1    5[COMRAM] unsigned char 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  1    wreg      void 
  9052 ;; Registers used:
  9053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/1
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1
  9059 ;;      Params:         0       0       0
  9060 ;;      Locals:         1       0       0
  9061 ;;      Temps:          0       0       0
  9062 ;;      Totals:         1       0       0
  9063 ;;Total ram usage:        1 bytes
  9064 ;; Hardware stack levels used: 1
  9065 ;; Hardware stack levels required when called: 2
  9066 ;; This function calls:
  9067 ;;		Nothing
  9068 ;; This function is called by:
  9069 ;;		_Espera
  9070 ;;		_WaitForBusy
  9071 ;;		_SMotor
  9072 ;;		_TeTeclat
  9073 ;;		_menu
  9074 ;;		_motorAltaveu
  9075 ;;		_GLCDMotor
  9076 ;;		_motorHora
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text72
  9081  001BAC                     __ptext72:
  9082                           	callstack 0
  9083  001BAC                     _TiResetTics:
  9084                           	callstack 25
  9085                           
  9086                           ;incstack = 0
  9087                           ;TiResetTics@Handle stored from wreg
  9088  001BAC  6E68               	movwf	TiResetTics@Handle^0,c
  9089                           
  9090                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  9091  001BAE  5068               	movf	TiResetTics@Handle^0,w,c
  9092  001BB0  0D03               	mullw	3
  9093  001BB2  50F3               	movf	243,w,c
  9094  001BB4  0F80               	addlw	low _s_Timers
  9095  001BB6  6ED9               	movwf	fsr2l,c
  9096  001BB8  6ADA               	clrf	fsr2h,c
  9097  001BBA  C003  FFDE         	movff	_h_Tics,postinc2
  9098  001BBE  C004  FFDD         	movff	_h_Tics+1,postdec2
  9099  001BC2  0012               	return		;funcret
  9100  001BC4                     __end_of_TiResetTics:
  9101                           	callstack 0
  9102                           
  9103 ;; *************** function _TiGetTics *****************
  9104 ;; Defined at:
  9105 ;;		line 61 in file "TiTTimer.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  Handle          1    wreg     unsigned char 
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;  Handle          1    9[COMRAM] unsigned char 
  9110 ;;  actual          2   10[COMRAM] volatile unsigned int 
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  2    5[COMRAM] int 
  9113 ;; Registers used:
  9114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/1
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMRAM   BANK0   BANK1
  9120 ;;      Params:         2       0       0
  9121 ;;      Locals:         3       0       0
  9122 ;;      Temps:          2       0       0
  9123 ;;      Totals:         7       0       0
  9124 ;;Total ram usage:        7 bytes
  9125 ;; Hardware stack levels used: 1
  9126 ;; Hardware stack levels required when called: 2
  9127 ;; This function calls:
  9128 ;;		Nothing
  9129 ;; This function is called by:
  9130 ;;		_Espera
  9131 ;;		_WaitForBusy
  9132 ;;		_SMotor
  9133 ;;		_TeTeclat
  9134 ;;		_menu
  9135 ;;		_motorAltaveu
  9136 ;;		_GLCDMotor
  9137 ;;		_motorHora
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141                           	psect	text73
  9142  001AB4                     __ptext73:
  9143                           	callstack 0
  9144  001AB4                     _TiGetTics:
  9145                           	callstack 25
  9146                           
  9147                           ;incstack = 0
  9148                           ;TiGetTics@Handle stored from wreg
  9149  001AB4  6E6C               	movwf	TiGetTics@Handle^0,c
  9150                           
  9151                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  9152  001AB6  C003  F06D         	movff	_h_Tics,TiGetTics@actual	;volatile
  9153  001ABA  C004  F06E         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  9154                           
  9155                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  9156  001ABE  506C               	movf	TiGetTics@Handle^0,w,c
  9157  001AC0  0D03               	mullw	3
  9158  001AC2  50F3               	movf	243,w,c
  9159  001AC4  0F80               	addlw	low _s_Timers
  9160  001AC6  6ED9               	movwf	fsr2l,c
  9161  001AC8  6ADA               	clrf	fsr2h,c
  9162  001ACA  CFDE F06A          	movff	postinc2,??_TiGetTics
  9163  001ACE  CFDD F06B          	movff	postdec2,??_TiGetTics+1
  9164  001AD2  506A               	movf	??_TiGetTics^0,w,c
  9165  001AD4  5C6D               	subwf	TiGetTics@actual^0,w,c	;volatile
  9166  001AD6  6E68               	movwf	?_TiGetTics^0,c
  9167  001AD8  506B               	movf	(??_TiGetTics+1)^0,w,c
  9168  001ADA  586E               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  9169  001ADC  6E69               	movwf	(?_TiGetTics+1)^0,c
  9170  001ADE  0012               	return		;funcret
  9171  001AE0                     __end_of_TiGetTics:
  9172                           	callstack 0
  9173                           
  9174 ;; *************** function _GLCDInit *****************
  9175 ;; Defined at:
  9176 ;;		line 26 in file "GestioLCD.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;		None
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;		None
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  1    wreg      void 
  9183 ;; Registers used:
  9184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1
  9190 ;;      Params:         0       0       0
  9191 ;;      Locals:         0       0       0
  9192 ;;      Temps:          0       0       0
  9193 ;;      Totals:         0       0       0
  9194 ;;Total ram usage:        0 bytes
  9195 ;; Hardware stack levels used: 1
  9196 ;; Hardware stack levels required when called: 3
  9197 ;; This function calls:
  9198 ;;		_TiGetTimer
  9199 ;; This function is called by:
  9200 ;;		_main
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text74
  9205  001CF4                     __ptext74:
  9206                           	callstack 0
  9207  001CF4                     _GLCDInit:
  9208                           	callstack 27
  9209                           
  9210                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  9211                           
  9212                           ;incstack = 0
  9213  001CF4  ECA7  F00C         	call	_TiGetTimer	;wreg free
  9214  001CF8  6E18               	movwf	_timerGLCD^0,c
  9215  001CFA  0012               	return		;funcret
  9216  001CFC                     __end_of_GLCDInit:
  9217                           	callstack 0
  9218                           
  9219 ;; *************** function _TiGetTimer *****************
  9220 ;; Defined at:
  9221 ;;		line 70 in file "TiTTimer.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;		None
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;		None
  9226 ;; Return value:  Size  Location     Type
  9227 ;;                  1    wreg      unsigned char 
  9228 ;; Registers used:
  9229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9230 ;; Tracked objects:
  9231 ;;		On entry : 0/0
  9232 ;;		On exit  : 0/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMRAM   BANK0   BANK1
  9235 ;;      Params:         0       0       0
  9236 ;;      Locals:         0       0       0
  9237 ;;      Temps:          1       0       0
  9238 ;;      Totals:         1       0       0
  9239 ;;Total ram usage:        1 bytes
  9240 ;; Hardware stack levels used: 1
  9241 ;; Hardware stack levels required when called: 2
  9242 ;; This function calls:
  9243 ;;		Nothing
  9244 ;; This function is called by:
  9245 ;;		_LcInit
  9246 ;;		_Sinit
  9247 ;;		_TeInit
  9248 ;;		_Minit
  9249 ;;		_initAltaveu
  9250 ;;		_GLCDInit
  9251 ;;		_initHora
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           	psect	text75
  9256  00194E                     __ptext75:
  9257                           	callstack 0
  9258  00194E                     _TiGetTimer:
  9259                           	callstack 27
  9260                           
  9261                           ;TiTTimer.c: 74:     counter=0;
  9262                           
  9263                           ;incstack = 0
  9264  00194E  0E00               	movlw	0
  9265  001950  6E29               	movwf	_counter^0,c
  9266                           
  9267                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9268  001952  D007               	goto	l3860
  9269  001954                     l3852:
  9270                           
  9271                           ;TiTTimer.c: 76:         counter++;
  9272  001954  2A29               	incf	_counter^0,f,c
  9273                           
  9274                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  9275  001956  0E08               	movlw	8
  9276  001958  1829               	xorwf	_counter^0,w,c
  9277  00195A  A4D8               	btfss	status,2,c
  9278  00195C  D002               	goto	l3860
  9279  00195E  0EFF               	movlw	255
  9280  001960  0012               	return	
  9281  001962                     l3860:
  9282                           
  9283                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9284  001962  5029               	movf	_counter^0,w,c
  9285  001964  0D03               	mullw	3
  9286  001966  50F3               	movf	243,w,c
  9287  001968  0F82               	addlw	low (_s_Timers+2)
  9288  00196A  6ED9               	movwf	fsr2l,c
  9289  00196C  6ADA               	clrf	fsr2h,c
  9290  00196E  04DE               	decf	postinc2,w,c
  9291  001970  B4D8               	btfsc	status,2,c
  9292  001972  D7F0               	goto	l3852
  9293                           
  9294                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  9295  001974  5029               	movf	_counter^0,w,c
  9296  001976  0D03               	mullw	3
  9297  001978  50F3               	movf	243,w,c
  9298  00197A  0F82               	addlw	low (_s_Timers+2)
  9299  00197C  6ED9               	movwf	fsr2l,c
  9300  00197E  6ADA               	clrf	fsr2h,c
  9301  001980  0E01               	movlw	1
  9302  001982  6EDF               	movwf	indf2,c
  9303                           
  9304                           ;TiTTimer.c: 80:     return (counter);
  9305  001984  5029               	movf	_counter^0,w,c
  9306  001986  0012               	return		;funcret
  9307  001988                     __end_of_TiGetTimer:
  9308                           	callstack 0
  9309                           
  9310 ;; *************** function _high_rsi *****************
  9311 ;; Defined at:
  9312 ;;		line 21 in file "main.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;		None
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;		None
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  1    wreg      void 
  9319 ;; Registers used:
  9320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMRAM   BANK0   BANK1
  9326 ;;      Params:         0       0       0
  9327 ;;      Locals:         0       0       0
  9328 ;;      Temps:          4       0       0
  9329 ;;      Totals:         4       0       0
  9330 ;;Total ram usage:        4 bytes
  9331 ;; Hardware stack levels used: 1
  9332 ;; Hardware stack levels required when called: 1
  9333 ;; This function calls:
  9334 ;;		__TiRSITimer
  9335 ;; This function is called by:
  9336 ;;		Interrupt level 2
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           	psect	intcode
  9341  000008                     __pintcode:
  9342                           	callstack 0
  9343  000008                     _high_rsi:
  9344                           	callstack 24
  9345                           
  9346                           ;incstack = 0
  9347  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9348  00000A  CFD9 F064          	movff	fsr2l,??_high_rsi
  9349  00000E  CFDA F065          	movff	fsr2h,??_high_rsi+1
  9350  000012  CFF3 F066          	movff	prodl,??_high_rsi+2
  9351  000016  CFF4 F067          	movff	prodh,??_high_rsi+3
  9352  00001A  ECF1  F00B         	call	__TiRSITimer	;wreg free
  9353  00001E  C067  FFF4         	movff	??_high_rsi+3,prodh
  9354  000022  C066  FFF3         	movff	??_high_rsi+2,prodl
  9355  000026  C065  FFDA         	movff	??_high_rsi+1,fsr2h
  9356  00002A  C064  FFD9         	movff	??_high_rsi,fsr2l
  9357  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9358  000030  0011               	retfie		f
  9359  000032                     __end_of_high_rsi:
  9360                           	callstack 0
  9361                           
  9362 ;; *************** function __TiRSITimer *****************
  9363 ;; Defined at:
  9364 ;;		line 37 in file "TiTTimer.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;		None
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;		None
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMRAM   BANK0   BANK1
  9378 ;;      Params:         0       0       0
  9379 ;;      Locals:         0       0       0
  9380 ;;      Temps:          1       0       0
  9381 ;;      Totals:         1       0       0
  9382 ;;Total ram usage:        1 bytes
  9383 ;; Hardware stack levels used: 1
  9384 ;; This function calls:
  9385 ;;		Nothing
  9386 ;; This function is called by:
  9387 ;;		_high_rsi
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           	psect	text77
  9392  0017E2                     __ptext77:
  9393                           	callstack 0
  9394  0017E2                     __TiRSITimer:
  9395                           	callstack 24
  9396                           
  9397                           ;TiTTimer.c: 39:     TMR0H = 223;
  9398                           
  9399                           ;incstack = 0
  9400  0017E2  0EDF               	movlw	223
  9401  0017E4  6ED7               	movwf	215,c	;volatile
  9402                           
  9403                           ;TiTTimer.c: 40:     TMR0L = 148;
  9404  0017E6  0E94               	movlw	148
  9405  0017E8  6ED6               	movwf	214,c	;volatile
  9406                           
  9407                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  9408  0017EA  94F2               	bcf	242,2,c	;volatile
  9409                           
  9410                           ;TiTTimer.c: 42:     h_Tics++;
  9411  0017EC  4A03               	infsnz	_h_Tics^0,f,c
  9412  0017EE  2A04               	incf	(_h_Tics+1)^0,f,c
  9413                           
  9414                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  9415  0017F0  0E48               	movlw	72
  9416  0017F2  5C03               	subwf	_h_Tics^0,w,c
  9417  0017F4  0EEE               	movlw	238
  9418  0017F6  5804               	subwfb	(_h_Tics+1)^0,w,c
  9419  0017F8  A0D8               	btfss	status,0,c
  9420  0017FA  0012               	return	
  9421                           
  9422                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  9423  0017FC  0E00               	movlw	0
  9424  0017FE  6E29               	movwf	_counter^0,c
  9425  001800                     i2l4088:
  9426  001800  0E07               	movlw	7
  9427  001802  6429               	cpfsgt	_counter^0,c
  9428  001804  D001               	goto	i2l4092
  9429  001806  D015               	goto	i2l4100
  9430  001808                     i2l4092:
  9431                           
  9432                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  9433  001808  5029               	movf	_counter^0,w,c
  9434  00180A  0D03               	mullw	3
  9435  00180C  50F3               	movf	243,w,c
  9436  00180E  0F82               	addlw	low (_s_Timers+2)
  9437  001810  6ED9               	movwf	fsr2l,c
  9438  001812  6ADA               	clrf	fsr2h,c
  9439  001814  04DE               	decf	postinc2,w,c
  9440  001816  A4D8               	btfss	status,2,c
  9441  001818  D00A               	goto	i2l4096
  9442                           
  9443                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  9444  00181A  5029               	movf	_counter^0,w,c
  9445  00181C  0D03               	mullw	3
  9446  00181E  50F3               	movf	243,w,c
  9447  001820  0F80               	addlw	low _s_Timers
  9448  001822  6ED9               	movwf	fsr2l,c
  9449  001824  6ADA               	clrf	fsr2h,c
  9450  001826  5003               	movf	_h_Tics^0,w,c
  9451  001828  5EDE               	subwf	postinc2,f,c
  9452  00182A  5004               	movf	(_h_Tics+1)^0,w,c
  9453  00182C  5ADD               	subwfb	postdec2,f,c
  9454  00182E                     i2l4096:
  9455                           
  9456                           ;TiTTimer.c: 50:         }
  9457  00182E  2A29               	incf	_counter^0,f,c
  9458  001830  D7E7               	goto	i2l4088
  9459  001832                     i2l4100:
  9460                           
  9461                           ;TiTTimer.c: 51:         h_Tics=0;
  9462  001832  0E00               	movlw	0
  9463  001834  6E04               	movwf	(_h_Tics+1)^0,c
  9464  001836  0E00               	movlw	0
  9465  001838  6E03               	movwf	_h_Tics^0,c
  9466  00183A  0012               	return		;funcret
  9467  00183C                     __end_of__TiRSITimer:
  9468                           	callstack 0
  9469                           
  9470                           	psect	rparam
  9471  0000                     
  9472                           	psect	temp
  9473  00007A                     btemp:
  9474                           	callstack 0
  9475  00007A                     	ds	1
  9476  0000                     int$flags	set	btemp
  9477  0000                     wtemp8	set	btemp+1
  9478  0000                     ttemp5	set	btemp+1
  9479  0000                     ttemp6	set	btemp+4
  9480  0000                     ttemp7	set	btemp+8
  9481                           
  9482                           	psect	idloc
  9483                           
  9484                           ;Config register IDLOC0 @ 0x200000
  9485                           ;	unspecified, using default values
  9486  200000                     	org	2097152
  9487  200000  FF                 	db	255
  9488                           
  9489                           ;Config register IDLOC1 @ 0x200001
  9490                           ;	unspecified, using default values
  9491  200001                     	org	2097153
  9492  200001  FF                 	db	255
  9493                           
  9494                           ;Config register IDLOC2 @ 0x200002
  9495                           ;	unspecified, using default values
  9496  200002                     	org	2097154
  9497  200002  FF                 	db	255
  9498                           
  9499                           ;Config register IDLOC3 @ 0x200003
  9500                           ;	unspecified, using default values
  9501  200003                     	org	2097155
  9502  200003  FF                 	db	255
  9503                           
  9504                           ;Config register IDLOC4 @ 0x200004
  9505                           ;	unspecified, using default values
  9506  200004                     	org	2097156
  9507  200004  FF                 	db	255
  9508                           
  9509                           ;Config register IDLOC5 @ 0x200005
  9510                           ;	unspecified, using default values
  9511  200005                     	org	2097157
  9512  200005  FF                 	db	255
  9513                           
  9514                           ;Config register IDLOC6 @ 0x200006
  9515                           ;	unspecified, using default values
  9516  200006                     	org	2097158
  9517  200006  FF                 	db	255
  9518                           
  9519                           ;Config register IDLOC7 @ 0x200007
  9520                           ;	unspecified, using default values
  9521  200007                     	org	2097159
  9522  200007  FF                 	db	255
  9523                           
  9524                           	psect	config
  9525                           
  9526                           ; Padding undefined space
  9527  300000                     	org	3145728
  9528  300000  FF                 	db	255
  9529                           
  9530                           ;Config register CONFIG1H @ 0x300001
  9531                           ;	Oscillator
  9532                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  9533                           ;	Fail-Safe Clock Monitor Enable bit
  9534                           ;	FCMEN = 0x0, unprogrammed default
  9535                           ;	Internal/External Oscillator Switchover bit
  9536                           ;	IESO = 0x0, unprogrammed default
  9537  300001                     	org	3145729
  9538  300001  06                 	db	6
  9539                           
  9540                           ;Config register CONFIG2L @ 0x300002
  9541                           ;	unspecified, using default values
  9542                           ;	Power-up Timer Enable bit
  9543                           ;	PWRT = 0x1, unprogrammed default
  9544                           ;	Brown-out Reset Enable bits
  9545                           ;	BOR = 0x3, unprogrammed default
  9546                           ;	Brown-out Reset Voltage bits
  9547                           ;	BORV = 0x3, unprogrammed default
  9548  300002                     	org	3145730
  9549  300002  1F                 	db	31
  9550                           
  9551                           ;Config register CONFIG2H @ 0x300003
  9552                           ;	Watchdog Timer Enable bit
  9553                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9554                           ;	Watchdog Timer Postscale Select bits
  9555                           ;	WDTPS = 0xF, unprogrammed default
  9556  300003                     	org	3145731
  9557  300003  1E                 	db	30
  9558                           
  9559                           ; Padding undefined space
  9560  300004                     	org	3145732
  9561  300004  FF                 	db	255
  9562                           
  9563                           ;Config register CONFIG3H @ 0x300005
  9564                           ;	CCP2 MUX bit
  9565                           ;	CCP2MX = 0x1, unprogrammed default
  9566                           ;	PORTB A/D Enable bit
  9567                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  9568                           ;	Low-Power Timer1 Oscillator Enable bit
  9569                           ;	LPT1OSC = 0x0, unprogrammed default
  9570                           ;	MCLR Pin Enable bit
  9571                           ;	MCLRE = 0x1, unprogrammed default
  9572  300005                     	org	3145733
  9573  300005  81                 	db	129
  9574                           
  9575                           ;Config register CONFIG4L @ 0x300006
  9576                           ;	Stack Full/Underflow Reset Enable bit
  9577                           ;	STVREN = 0x1, unprogrammed default
  9578                           ;	Single-Supply ICSP Enable bit
  9579                           ;	LVP = OFF, Single-Supply ICSP disabled
  9580                           ;	Boot Block Size Select bits
  9581                           ;	BBSIZ = 0x0, unprogrammed default
  9582                           ;	Extended Instruction Set Enable bit
  9583                           ;	XINST = 0x0, unprogrammed default
  9584                           ;	Background Debugger Enable bit
  9585                           ;	DEBUG = 0x1, unprogrammed default
  9586  300006                     	org	3145734
  9587  300006  81                 	db	129
  9588                           
  9589                           ; Padding undefined space
  9590  300007                     	org	3145735
  9591  300007  FF                 	db	255
  9592                           
  9593                           ;Config register CONFIG5L @ 0x300008
  9594                           ;	unspecified, using default values
  9595                           ;	Code Protection bit
  9596                           ;	CP0 = 0x1, unprogrammed default
  9597                           ;	Code Protection bit
  9598                           ;	CP1 = 0x1, unprogrammed default
  9599  300008                     	org	3145736
  9600  300008  03                 	db	3
  9601                           
  9602                           ;Config register CONFIG5H @ 0x300009
  9603                           ;	unspecified, using default values
  9604                           ;	Boot Block Code Protection bitProtect Boot
  9605                           ;	CPB = 0x1, unprogrammed default
  9606                           ;	Data EEPROM Code Protection bit
  9607                           ;	CPD = 0x1, unprogrammed default
  9608  300009                     	org	3145737
  9609  300009  C0                 	db	192
  9610                           
  9611                           ;Config register CONFIG6L @ 0x30000A
  9612                           ;	unspecified, using default values
  9613                           ;	Write Protection bit
  9614                           ;	WRT0 = 0x1, unprogrammed default
  9615                           ;	Write Protection bit
  9616                           ;	WRT1 = 0x1, unprogrammed default
  9617  30000A                     	org	3145738
  9618  30000A  03                 	db	3
  9619                           
  9620                           ;Config register CONFIG6H @ 0x30000B
  9621                           ;	unspecified, using default values
  9622                           ;	Configuration Register Write Protection bit
  9623                           ;	WRTC = 0x1, unprogrammed default
  9624                           ;	Boot Block Write Protection bit
  9625                           ;	WRTB = 0x1, unprogrammed default
  9626                           ;	Data EEPROM Write Protection bit
  9627                           ;	WRTD = 0x1, unprogrammed default
  9628  30000B                     	org	3145739
  9629  30000B  E0                 	db	224
  9630                           
  9631                           ;Config register CONFIG7L @ 0x30000C
  9632                           ;	unspecified, using default values
  9633                           ;	Table Read Protection bit
  9634                           ;	EBTR0 = 0x1, unprogrammed default
  9635                           ;	Table Read Protection bit
  9636                           ;	EBTR1 = 0x1, unprogrammed default
  9637  30000C                     	org	3145740
  9638  30000C  03                 	db	3
  9639                           
  9640                           ;Config register CONFIG7H @ 0x30000D
  9641                           ;	unspecified, using default values
  9642                           ;	Boot Block Table Read Protection bit
  9643                           ;	EBTRB = 0x1, unprogrammed default
  9644  30000D                     	org	3145741
  9645  30000D  40                 	db	64
  9646                           tosu	equ	0xFFF
  9647                           tosh	equ	0xFFE
  9648                           tosl	equ	0xFFD
  9649                           stkptr	equ	0xFFC
  9650                           pclatu	equ	0xFFB
  9651                           pclath	equ	0xFFA
  9652                           pcl	equ	0xFF9
  9653                           tblptru	equ	0xFF8
  9654                           tblptrh	equ	0xFF7
  9655                           tblptrl	equ	0xFF6
  9656                           tablat	equ	0xFF5
  9657                           prodh	equ	0xFF4
  9658                           prodl	equ	0xFF3
  9659                           indf0	equ	0xFEF
  9660                           postinc0	equ	0xFEE
  9661                           postdec0	equ	0xFED
  9662                           preinc0	equ	0xFEC
  9663                           plusw0	equ	0xFEB
  9664                           fsr0h	equ	0xFEA
  9665                           fsr0l	equ	0xFE9
  9666                           wreg	equ	0xFE8
  9667                           indf1	equ	0xFE7
  9668                           postinc1	equ	0xFE6
  9669                           postdec1	equ	0xFE5
  9670                           preinc1	equ	0xFE4
  9671                           plusw1	equ	0xFE3
  9672                           fsr1h	equ	0xFE2
  9673                           fsr1l	equ	0xFE1
  9674                           bsr	equ	0xFE0
  9675                           indf2	equ	0xFDF
  9676                           postinc2	equ	0xFDE
  9677                           postdec2	equ	0xFDD
  9678                           preinc2	equ	0xFDC
  9679                           plusw2	equ	0xFDB
  9680                           fsr2h	equ	0xFDA
  9681                           fsr2l	equ	0xFD9
  9682                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    145
    Data        63
    BSS         283
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     21     121
    BANK0           128      2      66
    BANK1           256      0     184

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(BANK0[11]), loginText(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_motorJoc
    _motorSIO->_UgetUserName
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_GLCDMotor
    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20627
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0      22
                                              8 COMRAM     2     2      0
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    2412
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _SIOJugant
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    7425
                                              0 BANK0      2     2      0
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                            _JUsuari
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _NoFerMenu
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JUsuari                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1841
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1201
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    6759
                                              0 BANK0      2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1841
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2     858
                                              8 COMRAM     2     0      2
                           _HGetTime (ARG)
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2484
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcGotoXY                                             6     5      1    1509
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (3) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (4) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _HGetTime (ARG)
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JUsuari
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _NoFerMenu
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIOJugant
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
   _motorSIO
     _UgetUserName

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      2      42       4       51.6%
BITCOMRAM           7E      0       2       0        1.6%
COMRAM              7E     15      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     173       7        0.0%
DATA                 0      0     173       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed May 04 13:25:48 2022

               TiResetTics@Handle 0068                  _loginNOTRegister 03CB  
                               _i 001F                                 _j 001E  
                UgetUserName@quin 006A         ??_UcheckExistsNotFinished 0068  
          __end_of_compareStrings 18D4                               l820 07E4  
                             l660 13E0                               l708 1A78  
                             l901 118A                               l653 139E  
                             l645 137C                               l655 13A4  
                             l639 1AFC                               l487 0326  
                             l832 087C                               l648 138A  
                             l680 0D26                               l681 0D36  
                             l850 0A28                               l658 13DA  
                             l683 0D42                               l739 12BE  
                             l852 0A58                               l890 110C  
                             l892 1130                               l897 11C2  
                             l889 10F2                               l898 114C  
                             l899 1166                               u230 1570  
                             u250 158C                               u308 15C0  
                             u270 15A6                               u248 1572  
                             u290 15BE                               u268 158E  
                             u288 15A8                               _tmp 0028  
                ??_CantaPartBaixa 0068                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 0059  
              __size_of_GLCDMotor 03D8                              l2048 1C40  
                            l2080 1C28                              l2410 139A  
                            l4004 18AC                              l2068 1C34  
                            l4030 1202                              l4200 0C26  
                            l4112 19AC                              l2440 141C  
                            l2192 1A5E                              l4220 0C70  
                            l4212 0C52                              l4204 0C32  
                            l4132 0B3E                              l4124 0B2A  
                            l4108 19A4                              l4150 0B78  
                            l4310 144E                              l4302 143A  
                            l4224 0C74                              l4160 0BA2  
                            l5200 0F26                              l2706 11A2  
                            l4250 0CBC                              l4242 0CA2  
                            l4330 1490                              l2716 11A6  
                            l4260 0CD4                              l4236 0C98  
                            l4172 0BC8                              l4148 0B72  
                            l5220 0F62                              l5212 0F4A  
                            l4316 145A                              l4404 10A8  
                            l6030 0A52                              l6022 0A32  
                            l6014 0A02                              l6006 09D2  
                            l2654 1124                              l2646 1108  
                            l5206 0F3C                              l4422 14D8  
                            l4318 1460                              l4414 10C4  
                            l4256 0CCC                              l4192 0C12  
                            l4280 0CE8                              l5240 0FB4  
                            l5232 0FA0                              l5216 0F56  
                            l6042 0A6E                              l4186 0BFC  
                            l4178 0BE0                              l5226 0F92  
                            l4450 1526                              l4338 14A4  
                            l4346 14B2                              l4354 1004  
                            l3820 1924                              l3900 1882  
                            l6052 0AA8                              l2692 117E  
                            l2684 1162                              l2668 1148  
                            l5236 0FA8                              l5180 0EF6  
                            l5172 0EE2                              l4444 1518  
                            l4380 1064                              l4372 1040  
                            l4364 1020                              l3814 1B30  
                            l3910 1C70                              l6038 0A66  
                            l5246 0FC0                              l5502 02CA  
                            l4438 150A                              l4470 153C  
                            l6048 0A82                              l5184 0F02  
                            l4296 1428                              l4384 106E  
                            l6058 0ACC                              l5194 0F18  
                            l5186 0F08                              l5178 0EF2  
                            l4466 1536                              l4394 1084  
                            l4386 1074                              l3852 1954  
                            l3860 1962                              l5612 043A  
                            l5524 0314                              l5508 02DE  
                            l4902 0D4C                              l5606 042A  
                            l5526 031A                              l5518 0302  
                            l4912 0D7C                              l3936 1C4C  
                            l5720 0544                              l5624 0452  
                            l5608 0430                              l6096 1686  
                            l4930 0DD8                              l5802 062E  
                            l5706 0516                              l5642 0482  
                            l5570 03BE                              l5554 0386  
                            l5546 036C                              l5538 0344  
                            l4850 12D6                              l3788 18E6  
                            l3892 1868                              l4916 0D86  
                            l4908 0D78                              l5564 03AE  
                            l5556 038C                              l3894 1872  
                            l5902 07F2                              l4934 0DEA  
                            l4918 0D8C                              l5830 066C  
                            l5814 064E                              l5734 0572  
                            l5654 04A6                              l5582 03D6  
                            l5566 03B4                              l5840 0690  
                            l5744 059E                              l5736 0578  
                            l5648 04A0                              l4872 1322  
                            l4864 12F4                              l4856 12E4  
                            l4848 12D0                              l5930 086C  
                            l4962 0E68                              l4946 0E42  
                            l4970 0E74                              l5850 06A8  
                            l5818 0658                              l5666 04AC  
                            l5924 0858                              l5916 084A  
                            l4956 0E5A                              l5748 05B6  
                            l5596 0402                              l5860 06B6  
                            l4884 134E                              l3998 1890  
                            l5694 04E8                              l5686 04D6  
                            l5678 04C4                              l5598 0408  
                            l5960 08B6                              l5872 0752  
                            l5768 05E8                              l5970 08FE  
                            l5882 0788                              l4898 0D3C  
                            l5786 060E                              l5966 08DC  
                            l5992 0972                              l5976 0928  
                            l5896 07C2                              l5888 0796  
                            l5986 0962                              STR_1 02BF  
                            STR_2 02B8                              STR_3 02AF  
                            STR_4 02A2                              STR_5 0292  
                            u3040 18B8                              _LATD 000F8C  
                            u3050 12B0                              u3210 0B96  
                            u3070 17A8                              u3080 17D0  
                            u3410 0CAA                              u3330 0C42  
                            u3420 0CC4                              u3077 179E  
                            u3087 17C6                              u2730 1728  
                            u2810 16C0                              u3290 0C0C  
                            u2750 1744                              u2830 16DC  
                            u5230 0462                              u2808 1778  
                            u5160 03E6                              u2770 175E  
                            u2850 16F6                              u4370 0D46  
                            u5250 0496                              u2748 172A  
                            u2828 16C2                              u5260 0498  
                            u2790 1776                              u2870 170E  
                            u2768 1746                              u2848 16DE  
                            u2788 1760                              u2868 16F8  
                            u5700 0852                              u4900 0ED2  
                            u5630 0792                              u2888 1710  
                            u5730 0874                              u4906 0ED4  
                            u4870 0EA8                              u4880 0EB2  
                            u4890 0EC2                              u4886 0EB4  
                            u4878 0EAA                              u4896 0EC4  
                 ??_SsetNovaTecla 0068            __end_of_SIOcheckKrebut 1C2C  
                            _cap1 03C4                              _Rows 0035  
                            _cap2 03C3                              _main 1644  
                            _hora 005D                              _menu 02C8  
                            _nota 001C                   __end_of_HJugant 1D10  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 007A                   __end_of_JJuguem 1CAC  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 1B28                              start 0032  
                 __end_of_CantaIR 1A5A                   __end_of_JUsuari 1D34  
                    ?_initAltaveu 0063                     LcInit@columns 0073  
                    ___param_bank 000000                  __end_of_GLCDInit 1CFC  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 1D14  
                     Espera@Timer 0072                             ?_main 0063  
         __size_of_escriureEEPROM 002E                             ?_menu 0063  
                           _EEADR 000FA9                     ??_TiInitTimer 0068  
                           _T0CON 000FD5                   ?_compareStrings 0068  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 1784  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 0063                             _TXREG 000FAD  
                           _SMSon 1CFC                             _TXSTA 000FAC  
                     _MNovaLletra 1CDC                             _Minit 1CE4  
                __end_of_HGetTime 1D14                             _Sinit 1CD4  
                           _Timer 0031                             _Uinit 1372  
                           _rebut 0008                             _s_ptr 0005  
                           _nou_s 03CD             __end_of_JoystickMotor 11DC  
              __size_of_SIOJugant 000C                   _HActualitzaHora 19C0  
     __size_of_escriureCharEEPROM 0024                    __pbitbssCOMRAM 03C0  
                           tablat 000FF5                       _LcNewString 1C5C  
                   ??_TiResetTics 0068                   ?_SIOcheckKrebut 0063  
                           ttemp5 007B                             ttemp6 007E  
                           ttemp7 0082                             status 000FD8  
                           wtemp8 007B     __size_of_UcheckExistsGetError 0008  
              __size_of_HNouSegon 000C                  __end_of_LcGotoXY 194E  
                __end_of_LcLliure 1C74                     ??__TiRSITimer 0063  
                      _TiGetTimer 194E           EscriuPrimeraOrdre@ordre 0069  
                 __initialization 15CE                __size_of_CantaData 0032  
                    __end_of_main 16B4            __end_of_HClearNouSegon 1D18  
                    __end_of_menu 0750             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 0063                 __end_of_GLCDMotor 0B28  
                __end_of_TeTeclat 1002                     _indexNextUser 0021  
                          ??_main 0078                            ??_menu 00C0  
              __size_of_LcPutChar 0052                     __activetblptr 000002  
                   _ultimaTeclaAD 000E            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 0010                  GLCDMotor@length2 000F  
                      _JnovaTecla 1C94                            ?_LcLCD 0063  
                          ?_SMSon 0063                            ?_Minit 0063  
                          ?_Sinit 0063                            ?_Uinit 0063  
              __size_of_NoFerMenu 0004                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
             __end_of_TiInitTimer 19C0                            _ADRESH 000FC4  
                          _EEDATA 000FA8                         ??_HJugant 0068  
                          _EECON2 000FA7                __size_of_URegister 0004  
              __size_of_HnoJugant 0004                         ??_JJuguem 0068  
              __size_of_SiFerMenu 0004          ??_escriure2usuarisStruct 0068  
                       ??_LcClear 0076                         ??_CantaIR 006A  
                          i2l4100 1832                            i2l4092 1808  
                          i2l4096 182E                            i2l4088 1800  
                  LcGotoXY@Fisics 0071                    LcGotoXY@Column 0075  
                       ??_JUsuari 0068                     ??_WaitForBusy 006F  
              __size_of_TiGetTics 002C                            _SPBRGH 000FB0  
                  _sumaPulsacions 0030                            _SMSoff 1D02  
              SIONovaDireccio@num 0068                            _LcInit 11DC  
                    _MNouJoystick 1CEC                    _UgetNumUsuaris 1D1C  
                          _SMotor 0B28               escriureCharEEPROM@c 0069  
                          _TeInit 1CCC                            _Espera 1B28  
                    _LcGotoXY$336 0073                            _Krebut 03C0  
                          _RowAct 0033               __end_of_TiResetTics 1BC4  
                          Uinit@i 006A                            Uinit@j 006B  
                __end_of_high_rsi 0032                            _h_Tics 0003  
                 ?_HClearNouSegon 0063                  __end_of_initHora 1CB4  
                          _borram 03C8                 __end_of_SIOJugant 1C38  
             __end_of__TiRSITimer 183C                  __end_of_menuList 0292  
                          clear_0 1614                            clear_1 1620  
                          clear_2 1630                            _jugant 03C2  
                          _segons 000B                        _UenviaChar 1C10  
                          isa$std 000001                        UenviaPas@c 0069  
     __size_of_EscriuPrimeraOrdre 007A                 __end_of_HNouSegon 1C44  
                    __pdataCOMRAM 0043            __size_of_CantaPartAlta 0068  
                __end_of_motorSIO 10F0                __size_of_UenviaPas 0010  
         __end_of_HActualitzaHora 19F6                 ??_SIONovaDireccio 0068  
                __end_of_motorJoc 14D6                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentUsrIndex 0023  
               __end_of_CantaData 1A28                      TeTeclat@cols 002B  
                       ?_GLCDInit 0063                     ?_UcheckExists 0063  
                      __accesstop 0080           __end_of__initialization 1636  
          __end_of_UgetNumUsuaris 1D20                 __end_of_LcPutChar 188E  
                   _JnovaDireccio 1C9C                  JnovaDireccio@dir 0068  
                   ___rparam_used 000001                     __end_of_LcLCD 17E2  
                     ?_TiGetTimer 0063                     __end_of_SMSon 1D02  
               SIONovaTecla@tecla 0068                    __pcstackCOMRAM 0063  
                   __end_of_Minit 1CEC               __end_of_WaitForBusy 1914  
                   __end_of_Sinit 1CDC                     __end_of_Uinit 1426  
               __end_of_NoFerMenu 1D30                         ?_HGetTime 0068  
                    __pidataBANK0 1B8C              __size_of_initAltaveu 0008  
               __end_of_URegister 1D28                 __end_of_HnoJugant 1D0C  
               __end_of_SiFerMenu 1D2C                    _escriureEEPROM 1A5A  
               __end_of_TiGetTics 1AE0                       _TiInitTimer 1988  
                     ?_JnovaTecla 0063                           ??_LcLCD 0077  
                         ??_SMSon 0068                         ?_LcGotoXY 0070  
                       ?_LcLliure 0063                           ??_Minit 0069  
                         ??_Sinit 0069                   JnovaTecla@tecla 0068  
                         ??_Uinit 0068              __size_of_init_eusart 0016  
                  ??_UcheckExists 0068               MNouJoystick@posicio 0068  
                      ??_GLCDInit 0069           __size_of_GLCDMostraMenu 000C  
                      __pbssBANK0 0080                        __pbssBANK1 0100  
 __size_of_escriure2usuarisStruct 002C                         ?_TeTeclat 0063  
                     _TiResetTics 1BAC                   ?_UgetNumUsuaris 0063  
                  ?_JnovaDireccio 0063                     ??_UmotorUsers 006D  
                   ?_JoystickInit 0063                           ?_SMSoff 0063  
                         ?_LcInit 0073                     _CantaPartAlta 171C  
                         ?_SMotor 0063                           ?_TeInit 0063  
                         ?_Espera 006F                 __end_of_UenviaPas 1C10  
                     __TiRSITimer 17E2               _indexNextUserStruct 0020  
                      ??_HGetTime 006A                     ?_UgetUserName 0068  
                ??_compareStrings 006B            __end_of_escriureEEPROM 1A88  
                         _BAUDCON 000FB8                       ?_UenviaChar 0068  
            __size_of_playAltaveu 0004                __size_of_motorHora 007E  
          __size_of_MsetNovaTecla 0008                           LcInit@i 0075  
                ?_HActualitzaHora 0068                        ??_LcGotoXY 0071  
                    ?_MNovaLletra 0063                        ??_LcLliure 0068  
                ??_SIOcheckKrebut 0068               __size_of_TiGetTimer 003A  
                         _HJugant 1D0C                         ?_high_rsi 0063  
                         _JJuguem 1CA4                           _LcClear 1B04  
                         _CantaIR 1A28                      ?_LcNewString 006B  
                  ??_JoystickInit 0068                           _JUsuari 1D30  
                       ?_initHora 0063                        ??_TeTeclat 006F  
                     _WaitForBusy 18D4                    ?_CantaPartAlta 0063  
                         _Columns 0034             __end_of_SsetNovaTecla 1CC4  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00E0  
                         __Hparam 0000                   __size_of_SMotor 01FC  
             __size_of_JnovaTecla 0008                   __size_of_TeInit 0008  
                 __size_of_Espera 0024                           __Lparam 0000  
                       ?_motorSIO 0063                         ?_motorJoc 0063  
                  ??_UgetUserName 006A               __end_of_UmotorUsers 0E9E  
        ?_UcheckExistsNotFinished 0063                   ?_escriureEEPROM 0063  
                   ?_motorAltaveu 0063                      __psmallconst 0200  
          _escriure2usuarisStruct 1A88                           __pcinit 15CE  
    __end_of_UcheckExistsGetError 1C94                           _ferMenu 03C6  
                      _init_ports 1B6C                           __ramtop 0200  
                         __ptext0 1644                           __ptext1 1002  
                         __ptext2 1426                           __ptext3 1C20  
                         __ptext4 1C74                           __ptext5 1C7C  
                         __ptext6 1C84                           __ptext7 1C2C  
                         __ptext8 1D08                           __ptext9 1C38  
                       _T0CONbits 000FD5                         _GLCDMotor 0750  
                       CantaIR@IR 006A                           _counter 0029  
                         _horaTmp 003F                       UenviaChar@c 0069  
      __end_of_escriureCharEEPROM 1B04                  LcNewString@new_s 006B  
                 WaitForBusy@Busy 006F                       Uinit@j_1140 006C  
                         _userPtr 0001                 GLCDMostraMenu@num 0068  
                      ??_high_rsi 0064              end_of_initialization 1636  
                         _usuaris 0100                   ??_JnovaDireccio 0068  
                      ??_initHora 0069           __size_of_CantaPartBaixa 0068  
                   __Lmediumconst 0000                   TiGetTics@Handle 006C  
                   _MsetNovaTecla 1CC4               __size_of_UenviaChar 0010  
               __end_of_motorHora 1554                  ??_HClearNouSegon 0068  
                      _novaLletra 0057                   _usuariActualSIO 0051  
                      ??_motorSIO 006B                        ??_motorJoc 0076  
                 TiGetTics@actual 006D                     ?_SIONovaTecla 0063  
                      GLCDMotor@j 0015                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 1C84  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 006F  
                      _numUsuaris 0022              __end_of_UcheckExists 1D24  
                   TeTeclat@files 002A                SIOStartGame@usuari 0068  
          __size_of_JoystickMotor 00EC                     TeTeclat@state 002C  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 0063                         _SIOJugant 1C2C  
                   ?_SIOStartGame 0063                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _HNouSegon 1C38  
                  _GLCDMostraMenu 1C50                   ??_CantaPartAlta 0068  
                  ?_MsetNovaTecla 0063                         _CantaData 19F6  
               __size_of_GLCDInit 0008                       _UmotorUsers 0D24  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 1C50  
                  __end_of_SMSoff 1D08                      ??_TiGetTimer 0068  
                  __end_of_LcInit 12BC                    ??_SIONovaTecla 0068  
                  __end_of_SMotor 0D24                         _LcPutChar 183C  
                  __end_of_TeInit 1CD4                 motorAltaveu@state 0019  
                  __end_of_Espera 1B4C                    GLCDMotor@state 0016  
      __end_of_EscriuPrimeraOrdre 15CE                 __size_of_HGetTime 0004  
                   __pidataCOMRAM 1B4C                       ?_init_ports 0063  
                       _NoFerMenu 1D2C                         _ColumnAct 0032  
            __end_of_JoystickInit 1C00                    ??_SIOStartGame 0068  
                       _URegister 1D24                         _HnoJugant 1D08  
                    ?_TiInitTimer 0063                        ?_SIOJugant 0063  
                    ??_JnovaTecla 0068                         _SiFerMenu 1D28  
             start_initialization 15CE                         _TiGetTics 1AB4  
          __end_of_GLCDMostraMenu 1C5C                        ?_HNouSegon 0063  
                ??_UgetNumUsuaris 0068                  UmotorUsers@state 001D  
               __size_of_LcGotoXY 003A              __end_of_UgetUserName 1BEE  
              __end_of_TiGetTimer 1988                     JJuguem@usuari 0068  
            __size_of_MNovaLletra 0008                 __size_of_LcLliure 000C  
                   _JoystickMotor 10F0                      ?_TiResetTics 0063  
                      ?_CantaData 0063              _UcheckExistsGetError 1C8C  
         __end_of_SIONovaDireccio 1C8C              __size_of_LcNewString 000C  
                        ??_SMSoff 0068                          ??_LcInit 0074  
                       _NovaTecla 0058                 __size_of_TeTeclat 0164  
                        ??_SMotor 006F                          ??_TeInit 0069  
                    ?__TiRSITimer 0063                     ??_initAltaveu 0069  
                        ??_Espera 0071                __end_of_JnovaTecla 1C9C  
                      ?_LcPutChar 0063                         _UenviaPas 1C00  
                     __pdataBANK0 00A1                    motorHora@state 000A  
                    _menuDaltGLCD 0017                      ??_UenviaChar 0069  
                      ?_NoFerMenu 0063                       ??_GLCDMotor 00C0  
                      ?_URegister 0063                        ?_HnoJugant 0063  
                   ??_init_eusart 0068                        ?_SiFerMenu 0063  
                     __pbssCOMRAM 0001                     __pcstackBANK0 00C0  
                      ?_TiGetTics 0068                   ?_GLCDMostraMenu 0063  
                        ?_HJugant 0063                    ?_JoystickMotor 0063  
                 ??_MsetNovaTecla 0068              __end_of_motorAltaveu 1372  
                        ?_JJuguem 0063                          ?_LcClear 0063  
                        ?_CantaIR 0063                    _CantaPartBaixa 16B4  
                        ?_JUsuari 0063             ?_UcheckExistsGetError 0063  
               __size_of_high_rsi 002A                      ?_WaitForBusy 0063  
             __size_of_init_ports 0020                MsetNovaTecla@tecla 0068  
              SsetNovaTecla@tecla 0068                __end_of_UenviaChar 1C20  
               __size_of_initHora 0008                  ??_escriureEEPROM 0068  
           __size_of_UcheckExists 0004           ?_escriure2usuarisStruct 0063  
                       __pintcode 0008                     ??_playAltaveu 0068  
                      ?_UenviaPas 0068                 __size_of_motorSIO 00EE  
               __size_of_motorJoc 00B0                   CantaPartBaixa@c 0069  
             __end_of_initAltaveu 1CBC                         _arrayZero 004C  
                     ??_SIOJugant 0068                       __smallconst 0200  
                  __size_of_LcLCD 005E                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 1C84                    __size_of_Sinit 0008  
                     ??_HNouSegon 0068                    __size_of_Uinit 00B4  
          __end_of_CantaPartBaixa 171C                JoystickMotor@state 000D  
                        _GLCDInit 1CF4                escriureEEPROM@caca 0068  
                     _do_register 03C9               __end_of_init_eusart 1BDA  
                       _newString 03C5                      _UcheckExists 1D20  
                       _loginText 00B8          __size_of_HActualitzaHora 0036  
                     ??_CantaData 006A                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   ?_MNouJoystick 0063                  ?_SIONovaDireccio 0063  
            __end_of_SIOStartGame 1C7C                     UenviaChar@pos 0068  
  __end_of_escriure2usuarisStruct 1AB4                _escriureCharEEPROM 1AE0  
                       _novaTecla 005B                     motorSIO@state 0007  
                     ??_LcPutChar 0076                         _timerGLCD 0018  
                       _motorHora 14D6                          _RCONbits 000FD0  
                       _reproduir 03C7                          _HGetTime 1D10  
           __size_of_JoystickInit 0012                         _timerHora 000C  
                       _timerMenu 0027               ?_escriureCharEEPROM 0068  
                     ??_NoFerMenu 0068                        _ADCON0bits 000FC2  
                     ??_URegister 0068                       ??_HnoJugant 0068  
                     ??_SiFerMenu 0068             __size_of_UgetUserName 0014  
             __end_of_playAltaveu 1D1C            __size_of_SsetNovaTecla 0008  
                        Espera@ms 006F                         _zeroTecla 002F  
                        _LcGotoXY 1914                    _usuariLoguejat 0055  
                        _LcLliure 1C68                       ??_TiGetTics 006A  
         __size_of_compareStrings 0046              __size_of_TiInitTimer 0038  
                 ??_JoystickMotor 0069                     GLCDMotor@max1 0054  
                   GLCDMotor@max2 0053                     GLCDMotor@min1 0014  
                   GLCDMotor@min2 0013                      _teclaPremuda 00A1  
                       _usuariJoc 0052                       LcGotoXY@Row 0070  
                       copy_data0 15E2                         copy_data1 1602  
            ??_escriureCharEEPROM 0069                   ?_CantaPartBaixa 0063  
                __size_of_HJugant 0004            ??_UcheckExistsGetError 0068  
           escriureCharEEPROM@pos 0068                  __size_of_JJuguem 0008  
                __size_of_LcClear 0024                  __size_of_CantaIR 0032  
                        _TeTeclat 0E9E             __end_of_JnovaDireccio 1CA4  
                  ??_MNouJoystick 0068                      ?_UmotorUsers 0063  
                __size_of_JUsuari 0004                      _JoystickInit 1BEE  
                      _EECON1bits 000FA6                      _registerText 00AD  
                     _indexUsuari 0025           __size_of_SIOcheckKrebut 000C  
            __size_of_TiResetTics 0018                     motorJoc@state 0009  
                        __Hrparam 0000                       _initAltaveu 1CB4  
                       menu@state 0024                          __Lrparam 0000  
                      ?_motorHora 0063              __size_of__TiRSITimer 005A  
                    _UgetUserName 1BDA                       ??_UenviaPas 0069  
                    _novaDireccio 0056                      ??_init_ports 0068  
             HActualitzaHora@nova 0068                       _init_eusart 1BC4  
           __size_of_motorAltaveu 00B6                      _novaTeclaSIO 004F  
                 _do_check_exists 03CA                          __ptext10 1D0C  
                        __ptext11 1D10                _EscriuPrimeraOrdre 1554  
                        __ptext20 1C10                          __ptext12 1D14  
                        __ptext21 1C44                          __ptext13 14D6  
                        __ptext30 1C9C                          __ptext22 1C8C  
                        __ptext14 1D18                          __ptext31 1D30  
                        __ptext23 1D20                          __ptext15 12BC  
                        __ptext40 1A88                          __ptext32 1CA4  
                        __ptext24 1D24                          __ptext16 02C8  
                        __ptext41 0D24                          __ptext33 19C0  
                        __ptext25 1D28                          __ptext17 1BDA  
                        __ptext50 1CD4                          __ptext42 1AE0  
                        __ptext34 1C50                          __ptext26 1CFC  
                        __ptext18 1D1C                          __ptext51 0B28  
                        __ptext43 188E                          __ptext35 1B6C  
                        __ptext27 1D02                          __ptext19 1C00  
                        __ptext60 0750                          __ptext52 1CDC  
                        __ptext44 1372                          __ptext36 1BC4  
                        __ptext28 1D2C                          __ptext61 183C  
                        __ptext53 1CE4                          __ptext45 1988  
                        __ptext37 1CAC                          __ptext29 1C94  
                        __ptext70 171C                          __ptext62 19F6  
                        __ptext54 1784                          __ptext46 0E9E  
                        __ptext38 1CB4                          __ptext71 1B28  
                        __ptext63 1C5C                          __ptext55 11DC  
                        __ptext47 1CBC                          __ptext39 1A5A  
                        __ptext72 1BAC                          __ptext64 1C68  
                        __ptext56 1554                          __ptext48 1CC4  
                        __ptext73 1AB4                          __ptext65 1B04  
                        __ptext57 10F0                          __ptext49 1CCC  
                        __ptext74 1CF4                          __ptext66 1914  
                        __ptext58 1CEC                          __ptext75 194E  
                        __ptext67 18D4                          __ptext59 1BEE  
                        __ptext68 1A28                          __ptext77 17E2  
                        __ptext69 16B4                          _direccio 0050  
                  CantaPartAlta@c 0069                       _lletraASCII 005C  
                        _high_rsi 0008                          _copsNota 001A  
                        _s_Timers 0080                          _initHora 1CAC  
                     _lletraInici 0043                          _menuDalt 0026  
                        _menuList 0201               ?_EscriuPrimeraOrdre 0063  
                   __size_of_main 0070                     __size_of_menu 0488  
           __end_of_CantaPartAlta 1784                     CantaData@Data 006A  
                        _tiTeclat 002D                __end_of_init_ports 1B8C  
                        _setSMSon 03CC                     _SsetNovaTecla 1CBC  
            __size_of_WaitForBusy 0040                          _nouSegon 03C1  
                        _motorSIO 1002                 ??_HActualitzaHora 0069  
                        _motorJoc 1426                          _timerSMS 005A  
                        isa$xinst 000000                          int$flags 007A  
                    UenviaPas@pos 0068                       _playAltaveu 1D18  
                    _motorAltaveu 12BC           __size_of_HClearNouSegon 0004  
            ??_EscriuPrimeraOrdre 0068                        LcInit@rows 0074  
                ??_GLCDMostraMenu 0068             __size_of_SIONovaTecla 0008  
         _UcheckExistsNotFinished 1C44                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0068             __size_of_SIOStartGame 0008  
                   ??_LcNewString 006D                          intlevel2 0000  
                    _timerAltaveu 001B                        LcPutChar@c 0076  
                  ?_SsetNovaTecla 0063                 MNovaLletra@lletra 0068  
                 compareStrings@a 0068                   compareStrings@b 0069  
                     ??_motorHora 006F                      _SIONovaTecla 1C7C  
                     GLCDMotor@k1 0012                       GLCDMotor@k2 0011  
            __end_of_MNouJoystick 1CF4                      _SIOStartGame 1C74  
                  _compareStrings 188E                       _tmpPassword 0098  
             __end_of_MNovaLletra 1CE4             __end_of_MsetNovaTecla 1CCC  
                     _tmpUsername 0036                    _SIOcheckKrebut 1C20  
                     SMotor@state 002E           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 1C68              __size_of_UmotorUsers 017A  
