

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 29 17:22:22 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.32
    75                           ; Generated 02/02/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4321 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataCOMRAM
   111  0015A2                     __pidataCOMRAM:
   112                           	callstack 0
   113                           
   114                           ;initializer for _lletraInici
   115  0015A2  41                 	db	65
   116  0015A3  44                 	db	68
   117  0015A4  47                 	db	71
   118  0015A5  4A                 	db	74
   119  0015A6  4D                 	db	77
   120  0015A7  50                 	db	80
   121  0015A8  54                 	db	84
   122  0015A9  57                 	db	87
   123  0015AA  00                 	db	0
   124                           
   125                           ;initializer for GLCDMotor@max2
   126  0015AB  0F                 	db	15
   127                           
   128                           ;initializer for GLCDMotor@max1
   129  0015AC  0F                 	db	15
   130                           
   131                           ;initializer for _novaLletra
   132  0015AD  FF                 	db	255
   133                           
   134                           ;initializer for _NovaTecla
   135  0015AE  FF                 	db	255
   136                           
   137                           ;initializer for _ultimaTecla
   138  0015AF  FF                 	db	255
   139                           
   140                           ;initializer for _timerSMS
   141  0015B0  FF                 	db	255
   142                           
   143                           ;initializer for _novaTecla
   144  0015B1  FF                 	db	255
   145                           
   146                           ;initializer for _lletraASCII
   147  0015B2  FF                 	db	255
   148                           
   149                           	psect	idataBANK0
   150  0015D4                     __pidataBANK0:
   151                           	callstack 0
   152                           
   153                           ;initializer for _teclaPremuda
   154  0015D4  01                 	db	1
   155  0015D5  02                 	db	2
   156  0015D6  03                 	db	3
   157  0015D7  04                 	db	4
   158  0015D8  05                 	db	5
   159  0015D9  06                 	db	6
   160  0015DA  07                 	db	7
   161  0015DB  08                 	db	8
   162  0015DC  09                 	db	9
   163  0015DD  0A                 	db	10
   164  0015DE  00                 	db	0
   165  0015DF  0B                 	db	11
   166                           
   167                           	psect	smallconst
   168  000200                     __psmallconst:
   169                           	callstack 0
   170  000200  00                 	db	0
   171  000201                     _menuList:
   172                           	callstack 0
   173  000201  31                 	db	49
   174  000202  2E                 	db	46
   175  000203  20                 	db	32
   176  000204  50                 	db	80
   177  000205  6C                 	db	108
   178  000206  61                 	db	97
   179  000207  79                 	db	121
   180  000208  20                 	db	32
   181  000209  61                 	db	97
   182  00020A  20                 	db	32
   183  00020B  47                 	db	71
   184  00020C  61                 	db	97
   185  00020D  6D                 	db	109
   186  00020E  65                 	db	101
   187  00020F  00                 	db	0
   188  000210  00                 	db	0
   189  000211  00                 	db	0
   190  000212  00                 	db	0
   191  000213  00                 	db	0
   192  000214  00                 	db	0
   193  000215  00                 	db	0
   194  000216  00                 	db	0
   195  000217  32                 	db	50
   196  000218  2E                 	db	46
   197  000219  20                 	db	32
   198  00021A  4D                 	db	77
   199  00021B  6F                 	db	111
   200  00021C  64                 	db	100
   201  00021D  69                 	db	105
   202  00021E  66                 	db	102
   203  00021F  79                 	db	121
   204  000220  20                 	db	32
   205  000221  54                 	db	84
   206  000222  69                 	db	105
   207  000223  6D                 	db	109
   208  000224  65                 	db	101
   209  000225  00                 	db	0
   210  000226  00                 	db	0
   211  000227  00                 	db	0
   212  000228  00                 	db	0
   213  000229  00                 	db	0
   214  00022A  00                 	db	0
   215  00022B  00                 	db	0
   216  00022C  00                 	db	0
   217  00022D  33                 	db	51
   218  00022E  2E                 	db	46
   219  00022F  20                 	db	32
   220  000230  53                 	db	83
   221  000231  68                 	db	104
   222  000232  6F                 	db	111
   223  000233  77                 	db	119
   224  000234  20                 	db	32
   225  000235  47                 	db	71
   226  000236  65                 	db	101
   227  000237  6E                 	db	110
   228  000238  65                 	db	101
   229  000239  72                 	db	114
   230  00023A  61                 	db	97
   231  00023B  6C                 	db	108
   232  00023C  20                 	db	32
   233  00023D  54                 	db	84
   234  00023E  6F                 	db	111
   235  00023F  70                 	db	112
   236  000240  20                 	db	32
   237  000241  35                 	db	53
   238  000242  20                 	db	32
   239  000243  34                 	db	52
   240  000244  2E                 	db	46
   241  000245  20                 	db	32
   242  000246  4C                 	db	76
   243  000247  6F                 	db	111
   244  000248  67                 	db	103
   245  000249  6F                 	db	111
   246  00024A  75                 	db	117
   247  00024B  74                 	db	116
   248  00024C  00                 	db	0
   249  00024D  00                 	db	0
   250  00024E  00                 	db	0
   251  00024F  00                 	db	0
   252  000250  00                 	db	0
   253  000251  00                 	db	0
   254  000252  00                 	db	0
   255  000253  00                 	db	0
   256  000254  00                 	db	0
   257  000255  00                 	db	0
   258  000256  00                 	db	0
   259  000257  00                 	db	0
   260  000258  00                 	db	0
   261  000259  35                 	db	53
   262  00025A  2E                 	db	46
   263  00025B  20                 	db	32
   264  00025C  53                 	db	83
   265  00025D  68                 	db	104
   266  00025E  6F                 	db	111
   267  00025F  77                 	db	119
   268  000260  20                 	db	32
   269  000261  41                 	db	65
   270  000262  6C                 	db	108
   271  000263  6C                 	db	108
   272  000264  20                 	db	32
   273  000265  55                 	db	85
   274  000266  73                 	db	115
   275  000267  65                 	db	101
   276  000268  72                 	db	114
   277  000269  73                 	db	115
   278  00026A  00                 	db	0
   279  00026B  00                 	db	0
   280  00026C  00                 	db	0
   281  00026D  00                 	db	0
   282  00026E  00                 	db	0
   283  00026F                     __end_of_menuList:
   284                           	callstack 0
   285  0000                     _EECON2	set	4007
   286  0000                     _EEDATA	set	4008
   287  0000                     _EEADR	set	4009
   288  0000                     _T0CONbits	set	4053
   289  0000                     _TMR0L	set	4054
   290  0000                     _TMR0H	set	4055
   291  0000                     _T0CON	set	4053
   292  0000                     _INTCONbits	set	4082
   293  0000                     _RCONbits	set	4048
   294  0000                     _PORTDbits	set	3971
   295  0000                     _EECON1bits	set	4006
   296  0000                     _LATD	set	3980
   297  0000                     _TRISD	set	3989
   298  0000                     _TRISC	set	3988
   299  0000                     _LATBbits	set	3978
   300  0000                     _TRISB	set	3987
   301  0000                     _TRISA	set	3986
   302  0000                     _PORTCbits	set	3970
   303  0000                     _LATDbits	set	3980
   304  0000                     _LATCbits	set	3979
   305  0000                     _TRISDbits	set	3989
   306  0000                     _TRISCbits	set	3988
   307  00026F                     STR_2:
   308  00026F  32                 	db	50	;'2'
   309  000270  2E                 	db	46
   310  000271  52                 	db	82	;'R'
   311  000272  45                 	db	69	;'E'
   312  000273  47                 	db	71	;'G'
   313  000274  49                 	db	73	;'I'
   314  000275  53                 	db	83	;'S'
   315  000276  54                 	db	84	;'T'
   316  000277  45                 	db	69	;'E'
   317  000278  52                 	db	82	;'R'
   318  000279  00                 	db	0
   319  00027A                     STR_1:
   320  00027A  31                 	db	49	;'1'
   321  00027B  2E                 	db	46
   322  00027C  4C                 	db	76	;'L'
   323  00027D  4F                 	db	79	;'O'
   324  00027E  47                 	db	71	;'G'
   325  00027F  49                 	db	73	;'I'
   326  000280  4E                 	db	78	;'N'
   327  000281  00                 	db	0
   328  000282                     STR_4:
   329  000282  50                 	db	80	;'P'
   330  000283  53                 	db	83	;'S'
   331  000284  57                 	db	87	;'W'
   332  000285  44                 	db	68	;'D'
   333  000286  3A                 	db	58	;':'
   334  000287  20                 	db	32
   335  000288  00                 	db	0
   336  000289                     STR_3:
   337  000289  55                 	db	85	;'U'
   338  00028A  53                 	db	83	;'S'
   339  00028B  45                 	db	69	;'E'
   340  00028C  52                 	db	82	;'R'
   341  00028D  3A                 	db	58	;':'
   342  00028E  20                 	db	32
   343  00028F  00                 	db	0
   344  000290  00                 	db	0	; dummy byte at the end
   345  0000                     
   346                           ; #config settings
   347                           
   348                           	psect	cinit
   349  0010AA                     __pcinit:
   350                           	callstack 0
   351  0010AA                     start_initialization:
   352                           	callstack 0
   353  0010AA                     __initialization:
   354                           	callstack 0
   355                           
   356                           ; Initialize objects allocated to BANK0 (12 bytes)
   357                           ; load TBLPTR registers with __pidataBANK0
   358  0010AA  0ED4               	movlw	low __pidataBANK0
   359  0010AC  6EF6               	movwf	tblptrl,c
   360  0010AE  0E15               	movlw	high __pidataBANK0
   361  0010B0  6EF7               	movwf	tblptrh,c
   362  0010B2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   363  0010B4  6EF8               	movwf	tblptru,c
   364  0010B6  EE00  F080         	lfsr	0,__pdataBANK0
   365  0010BA  EE10 F00C          	lfsr	1,12
   366  0010BE                     copy_data0:
   367  0010BE  0009               	tblrd		*+
   368  0010C0  CFF5 FFEE          	movff	tablat,postinc0
   369  0010C4  50E5               	movf	postdec1,w,c
   370  0010C6  50E1               	movf	fsr1l,w,c
   371  0010C8  E1FA               	bnz	copy_data0
   372                           
   373                           ; Initialize objects allocated to COMRAM (17 bytes)
   374                           ; load TBLPTR registers with __pidataCOMRAM
   375  0010CA  0EA2               	movlw	low __pidataCOMRAM
   376  0010CC  6EF6               	movwf	tblptrl,c
   377  0010CE  0E15               	movlw	high __pidataCOMRAM
   378  0010D0  6EF7               	movwf	tblptrh,c
   379  0010D2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   380  0010D4  6EF8               	movwf	tblptru,c
   381  0010D6  EE00  F068         	lfsr	0,__pdataCOMRAM
   382  0010DA  EE10 F011          	lfsr	1,17
   383  0010DE                     copy_data1:
   384  0010DE  0009               	tblrd		*+
   385  0010E0  CFF5 FFEE          	movff	tablat,postinc0
   386  0010E4  50E5               	movf	postdec1,w,c
   387  0010E6  50E1               	movf	fsr1l,w,c
   388  0010E8  E1FA               	bnz	copy_data1
   389                           
   390                           ; Clear objects allocated to BANK1 (184 bytes)
   391  0010EA  EE01  F000         	lfsr	0,__pbssBANK1
   392  0010EE  0EB8               	movlw	184
   393  0010F0                     clear_0:
   394  0010F0  6AEE               	clrf	postinc0,c
   395  0010F2  06E8               	decf	wreg,f,c
   396  0010F4  E1FD               	bnz	clear_0
   397                           
   398                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   399  0010F6  6A79               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   400                           
   401                           ; Clear objects allocated to COMRAM (83 bytes)
   402  0010F8  EE00  F001         	lfsr	0,__pbssCOMRAM
   403  0010FC  0E53               	movlw	83
   404  0010FE                     clear_1:
   405  0010FE  6AEE               	clrf	postinc0,c
   406  001100  06E8               	decf	wreg,f,c
   407  001102  E1FD               	bnz	clear_1
   408  001104                     end_of_initialization:
   409                           	callstack 0
   410  001104                     __end_of__initialization:
   411                           	callstack 0
   412  001104  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   413  001106  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   414  001108  0E00               	movlw	low (__Lmediumconst shr (0+16))
   415  00110A  6EF8               	movwf	tblptru,c
   416  00110C  0100               	movlb	0
   417  00110E  EF47  F009         	goto	_main	;jump to C main() function
   418                           
   419                           	psect	bitbssCOMRAM
   420  0003C8                     __pbitbssCOMRAM:
   421                           	callstack 0
   422  0003C8                     _newString:
   423                           	callstack 0
   424  0003C8                     	ds	1
   425  0003C9                     _ferMenu:
   426                           	callstack 0
   427  0003C9                     	ds	1
   428  0003CA                     _reproduir:
   429                           	callstack 0
   430  0003CA                     	ds	1
   431  0003CB                     _do_register:
   432                           	callstack 0
   433  0003CB                     	ds	1
   434  0003CC                     _do_check_exists:
   435                           	callstack 0
   436  0003CC                     	ds	1
   437  0003CD                     _loginNOTRegister:
   438                           	callstack 0
   439  0003CD                     	ds	1
   440  0003CE                     _setSMSon:
   441                           	callstack 0
   442  0003CE                     	ds	1
   443  0003CF                     _nou_s:
   444                           	callstack 0
   445  0003CF                     	ds	1
   446                           
   447                           	psect	bssCOMRAM
   448  000001                     __pbssCOMRAM:
   449                           	callstack 0
   450  000001                     _s_Timers:
   451                           	callstack 0
   452  000001                     	ds	24
   453  000019                     _tmpPassword:
   454                           	callstack 0
   455  000019                     	ds	9
   456  000022                     _h_Tics:
   457                           	callstack 0
   458  000022                     	ds	2
   459  000024                     GLCDMotor@length2:
   460                           	callstack 0
   461  000024                     	ds	1
   462  000025                     GLCDMotor@length1:
   463                           	callstack 0
   464  000025                     	ds	1
   465  000026                     GLCDMotor@k2:
   466                           	callstack 0
   467  000026                     	ds	1
   468  000027                     GLCDMotor@k1:
   469                           	callstack 0
   470  000027                     	ds	1
   471  000028                     GLCDMotor@min2:
   472                           	callstack 0
   473  000028                     	ds	1
   474  000029                     GLCDMotor@min1:
   475                           	callstack 0
   476  000029                     	ds	1
   477  00002A                     GLCDMotor@j:
   478                           	callstack 0
   479  00002A                     	ds	1
   480  00002B                     GLCDMotor@state:
   481                           	callstack 0
   482  00002B                     	ds	1
   483  00002C                     _menuDaltGLCD:
   484                           	callstack 0
   485  00002C                     	ds	1
   486  00002D                     _timerGLCD:
   487                           	callstack 0
   488  00002D                     	ds	1
   489  00002E                     motorAltaveu@state:
   490                           	callstack 0
   491  00002E                     	ds	1
   492  00002F                     _copsNota:
   493                           	callstack 0
   494  00002F                     	ds	1
   495  000030                     _timerAltaveu:
   496                           	callstack 0
   497  000030                     	ds	1
   498  000031                     _nota:
   499                           	callstack 0
   500  000031                     	ds	1
   501  000032                     UmotorUsers@state:
   502                           	callstack 0
   503  000032                     	ds	1
   504  000033                     _usuariLoguejat:
   505                           	callstack 0
   506  000033                     	ds	1
   507  000034                     _j:
   508                           	callstack 0
   509  000034                     	ds	1
   510  000035                     _i:
   511                           	callstack 0
   512  000035                     	ds	1
   513  000036                     _indexNextUserStruct:
   514                           	callstack 0
   515  000036                     	ds	1
   516  000037                     _indexNextUser:
   517                           	callstack 0
   518  000037                     	ds	1
   519  000038                     _numUsuaris:
   520                           	callstack 0
   521  000038                     	ds	1
   522  000039                     _currentUsrIndex:
   523                           	callstack 0
   524  000039                     	ds	1
   525  00003A                     menu@state:
   526                           	callstack 0
   527  00003A                     	ds	1
   528  00003B                     _menuDalt:
   529                           	callstack 0
   530  00003B                     	ds	1
   531  00003C                     _timerMenu:
   532                           	callstack 0
   533  00003C                     	ds	1
   534  00003D                     _tmp:
   535                           	callstack 0
   536  00003D                     	ds	1
   537  00003E                     _counter:
   538                           	callstack 0
   539  00003E                     	ds	1
   540  00003F                     TeTeclat@files:
   541                           	callstack 0
   542  00003F                     	ds	1
   543  000040                     TeTeclat@cols:
   544                           	callstack 0
   545  000040                     	ds	1
   546  000041                     TeTeclat@state:
   547                           	callstack 0
   548  000041                     	ds	1
   549  000042                     _tiTeclat:
   550                           	callstack 0
   551  000042                     	ds	1
   552  000043                     SMotor@state:
   553                           	callstack 0
   554  000043                     	ds	1
   555  000044                     _sumaPulsacions:
   556                           	callstack 0
   557  000044                     	ds	1
   558  000045                     _s_ptr:
   559                           	callstack 0
   560  000045                     	ds	1
   561  000046                     _Timer:
   562                           	callstack 0
   563  000046                     	ds	1
   564  000047                     _ColumnAct:
   565                           	callstack 0
   566  000047                     	ds	1
   567  000048                     _RowAct:
   568                           	callstack 0
   569  000048                     	ds	1
   570  000049                     _Columns:
   571                           	callstack 0
   572  000049                     	ds	1
   573  00004A                     _Rows:
   574                           	callstack 0
   575  00004A                     	ds	1
   576  00004B                     _tmpUsername:
   577                           	callstack 0
   578  00004B                     	ds	9
   579                           
   580                           	psect	dataCOMRAM
   581  000068                     __pdataCOMRAM:
   582                           	callstack 0
   583  000068                     _lletraInici:
   584                           	callstack 0
   585  000068                     	ds	9
   586  000071                     GLCDMotor@max2:
   587                           	callstack 0
   588  000071                     	ds	1
   589  000072                     GLCDMotor@max1:
   590                           	callstack 0
   591  000072                     	ds	1
   592  000073                     _novaLletra:
   593                           	callstack 0
   594  000073                     	ds	1
   595  000074                     _NovaTecla:
   596                           	callstack 0
   597  000074                     	ds	1
   598  000075                     _ultimaTecla:
   599                           	callstack 0
   600  000075                     	ds	1
   601  000076                     _timerSMS:
   602                           	callstack 0
   603  000076                     	ds	1
   604  000077                     _novaTecla:
   605                           	callstack 0
   606  000077                     	ds	1
   607  000078                     _lletraASCII:
   608                           	callstack 0
   609  000078                     	ds	1
   610                           
   611                           	psect	dataBANK0
   612  000080                     __pdataBANK0:
   613                           	callstack 0
   614  000080                     _teclaPremuda:
   615                           	callstack 0
   616  000080                     	ds	12
   617                           
   618                           	psect	bssBANK1
   619  000100                     __pbssBANK1:
   620                           	callstack 0
   621  000100                     _usuaris:
   622                           	callstack 0
   623  000100                     	ds	184
   624                           
   625                           	psect	cstackBANK0
   626  00008C                     __pcstackBANK0:
   627                           	callstack 0
   628  00008C                     ??_menu:
   629  00008C                     ??_GLCDMotor:
   630                           
   631                           ; 1 bytes @ 0x0
   632  00008C                     	ds	2
   633                           
   634                           	psect	cstackCOMRAM
   635  000054                     __pcstackCOMRAM:
   636                           	callstack 0
   637  000054                     
   638                           ; 1 bytes @ 0x0
   639  000054                     	ds	1
   640  000055                     ??_high_rsi:
   641                           
   642                           ; 1 bytes @ 0x1
   643  000055                     	ds	4
   644  000059                     ??_EscriuPrimeraOrdre:
   645  000059                     ??_Uinit:
   646  000059                     ??_UcheckExistsGetError:
   647  000059                     ??_CantaPartAlta:
   648  000059                     ??_CantaPartBaixa:
   649  000059                     ?_TiGetTics:
   650                           	callstack 0
   651  000059                     LcNewString@new_s:
   652                           	callstack 0
   653  000059                     SsetNovaTecla@tecla:
   654                           	callstack 0
   655  000059                     TiResetTics@Handle:
   656                           	callstack 0
   657  000059                     MsetNovaTecla@tecla:
   658                           	callstack 0
   659  000059                     MNovaLletra@lletra:
   660                           	callstack 0
   661  000059                     UenviaChar@pos:
   662                           	callstack 0
   663  000059                     UenviaPas@pos:
   664                           	callstack 0
   665  000059                     escriureCharEEPROM@pos:
   666                           	callstack 0
   667  000059                     compareStrings@a:
   668                           	callstack 0
   669  000059                     escriureEEPROM@caca:
   670                           	callstack 0
   671  000059                     GLCDMostraMenu@num:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x5
   675  000059                     	ds	1
   676  00005A                     CantaPartAlta@c:
   677                           	callstack 0
   678  00005A                     CantaPartBaixa@c:
   679                           	callstack 0
   680  00005A                     EscriuPrimeraOrdre@ordre:
   681                           	callstack 0
   682  00005A                     UenviaChar@c:
   683                           	callstack 0
   684  00005A                     UenviaPas@c:
   685                           	callstack 0
   686  00005A                     escriureCharEEPROM@c:
   687                           	callstack 0
   688  00005A                     compareStrings@b:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x6
   692  00005A                     	ds	1
   693  00005B                     ??_TiGetTics:
   694  00005B                     CantaIR@IR:
   695                           	callstack 0
   696  00005B                     CantaData@Data:
   697                           	callstack 0
   698  00005B                     Uinit@i:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x7
   702  00005B                     	ds	1
   703  00005C                     ??_compareStrings:
   704  00005C                     Uinit@j:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x8
   708  00005C                     	ds	1
   709  00005D                     TiGetTics@Handle:
   710                           	callstack 0
   711  00005D                     Uinit@j_1041:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x9
   715  00005D                     	ds	1
   716  00005E                     ??_UmotorUsers:
   717  00005E                     TiGetTics@actual:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0xA
   721  00005E                     	ds	2
   722  000060                     ??_SMotor:
   723  000060                     ??_motorAltaveu:
   724  000060                     ??_TeTeclat:
   725  000060                     WaitForBusy@Busy:
   726                           	callstack 0
   727  000060                     Espera@ms:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0xC
   731  000060                     	ds	1
   732  000061                     LcGotoXY@Row:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0xD
   736  000061                     	ds	1
   737  000062                     ??_Espera:
   738  000062                     LcGotoXY@Fisics:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0xE
   742  000062                     	ds	1
   743  000063                     Espera@Timer:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0xF
   747  000063                     	ds	1
   748  000064                     LcInit@columns:
   749                           	callstack 0
   750  000064                     _LcGotoXY$342:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x10
   754  000064                     	ds	1
   755  000065                     LcInit@rows:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x11
   759  000065                     	ds	1
   760  000066                     LcGotoXY@Column:
   761                           	callstack 0
   762  000066                     LcInit@i:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x12
   766  000066                     	ds	1
   767  000067                     LcPutChar@c:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x13
   771  000067                     	ds	1
   772  000068                     
   773                           ; 1 bytes @ 0x14
   774 ;;
   775 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   776 ;;
   777 ;; *************** function _main *****************
   778 ;; Defined at:
   779 ;;		line 71 in file "main.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1
   793 ;;      Params:         0       0       0
   794 ;;      Locals:         0       0       0
   795 ;;      Temps:          0       0       0
   796 ;;      Totals:         0       0       0
   797 ;;Total ram usage:        0 bytes
   798 ;; Hardware stack levels required when called: 7
   799 ;; This function calls:
   800 ;;		_GLCDInit
   801 ;;		_GLCDMotor
   802 ;;		_LcInit
   803 ;;		_LcLCD
   804 ;;		_Minit
   805 ;;		_SMotor
   806 ;;		_Sinit
   807 ;;		_TeInit
   808 ;;		_TeTeclat
   809 ;;		_TiInitTimer
   810 ;;		_Uinit
   811 ;;		_UmotorUsers
   812 ;;		_escriureEEPROM
   813 ;;		_initAltaveu
   814 ;;		_init_ports
   815 ;;		_menu
   816 ;;		_motorAltaveu
   817 ;; This function is called by:
   818 ;;		Startup code after reset
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text0
   823  00128E                     __ptext0:
   824                           	callstack 0
   825  00128E                     _main:
   826                           	callstack 24
   827                           
   828                           ;main.c: 72:     init_ports();
   829                           
   830                           ;incstack = 0
   831  00128E  ECB5  F00A         	call	_init_ports	;wreg free
   832                           
   833                           ;main.c: 73:     escriureEEPROM();
   834  001292  EC52  F00A         	call	_escriureEEPROM	;wreg free
   835                           
   836                           ;main.c: 74:     TiInitTimer();
   837  001296  ECEC  F009         	call	_TiInitTimer	;wreg free
   838                           
   839                           ;main.c: 75:     TeInit();
   840  00129A  EC18  F00B         	call	_TeInit	;wreg free
   841                           
   842                           ;main.c: 76:     Sinit();
   843  00129E  EC1C  F00B         	call	_Sinit	;wreg free
   844                           
   845                           ;main.c: 77:     SMotor();
   846  0012A2  EC7A  F004         	call	_SMotor	;wreg free
   847                           
   848                           ;main.c: 78:     Uinit();
   849  0012A6  ECBE  F007         	call	_Uinit	;wreg free
   850                           
   851                           ;main.c: 79:     initAltaveu();
   852  0012AA  EC0C  F00B         	call	_initAltaveu	;wreg free
   853                           
   854                           ;main.c: 80:     GLCDInit();
   855  0012AE  EC2C  F00B         	call	_GLCDInit	;wreg free
   856                           
   857                           ;main.c: 82:     LcInit(2,16);
   858  0012B2  0E10               	movlw	16
   859  0012B4  6E64               	movwf	LcInit@columns^0,c
   860  0012B6  0E02               	movlw	2
   861  0012B8  ECF6  F006         	call	_LcInit
   862                           
   863                           ;main.c: 83:     Minit();
   864  0012BC  EC24  F00B         	call	_Minit	;wreg free
   865  0012C0                     l4213:
   866                           
   867                           ;main.c: 88:         menu();
   868  0012C0  EC28  F003         	call	_menu	;wreg free
   869                           
   870                           ;main.c: 89:         motorAltaveu();
   871  0012C4  EC63  F007         	call	_motorAltaveu	;wreg free
   872                           
   873                           ;main.c: 90:         UmotorUsers();
   874  0012C8  EC86  F005         	call	_UmotorUsers	;wreg free
   875                           
   876                           ;main.c: 91:         GLCDMotor();
   877  0012CC  EC49  F001         	call	_GLCDMotor	;wreg free
   878                           
   879                           ;main.c: 92:         TeTeclat();
   880  0012D0  EC44  F006         	call	_TeTeclat	;wreg free
   881                           
   882                           ;main.c: 93:         SMotor();
   883  0012D4  EC7A  F004         	call	_SMotor	;wreg free
   884                           
   885                           ;main.c: 94:         LcLCD();
   886  0012D8  EC3A  F00A         	call	_LcLCD	;wreg free
   887  0012DC  D7F1               	goto	l4213
   888  0012DE                     __end_of_main:
   889                           	callstack 0
   890                           
   891 ;; *************** function _motorAltaveu *****************
   892 ;; Defined at:
   893 ;;		line 17 in file "Altaveu.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1
   907 ;;      Params:         0       0       0
   908 ;;      Locals:         0       0       0
   909 ;;      Temps:          3       0       0
   910 ;;      Totals:         3       0       0
   911 ;;Total ram usage:        3 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 3
   914 ;; This function calls:
   915 ;;		_TiGetTics
   916 ;;		_TiResetTics
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text1
   923  000EC6                     __ptext1:
   924                           	callstack 0
   925  000EC6                     _motorAltaveu:
   926                           	callstack 27
   927                           
   928                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
   929                           
   930                           ;incstack = 0
   931  000EC6  D048               	goto	l3371
   932  000EC8                     l640:
   933                           
   934                           ;Altaveu.c: 22:    if (reproduir) {
   935  000EC8  A479               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
   936  000ECA  0012               	return	
   937                           
   938                           ;Altaveu.c: 23:     nota = 1;
   939  000ECC  0E01               	movlw	1
   940  000ECE  6E31               	movwf	_nota^0,c
   941                           
   942                           ;Altaveu.c: 24:     copsNota = 0;
   943  000ED0  0E00               	movlw	0
   944  000ED2  6E2F               	movwf	_copsNota^0,c
   945                           
   946                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
   947  000ED4  5030               	movf	_timerAltaveu^0,w,c
   948  000ED6  ECC5  F00A         	call	_TiResetTics
   949  000EDA                     l3335:
   950                           
   951                           ;Altaveu.c: 26:     state = 1;
   952  000EDA  0E01               	movlw	1
   953  000EDC  6E2E               	movwf	motorAltaveu@state^0,c
   954  000EDE  0012               	return	
   955  000EE0                     l3337:
   956                           
   957                           ;Altaveu.c: 30:    if (nota > 5) {
   958  000EE0  0E05               	movlw	5
   959  000EE2  6431               	cpfsgt	_nota^0,c
   960  000EE4  D004               	goto	l3343
   961                           
   962                           ;Altaveu.c: 31:     reproduir = 0;
   963  000EE6  9479               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
   964                           
   965                           ;Altaveu.c: 32:     state = 0;
   966  000EE8  0E00               	movlw	0
   967  000EEA  6E2E               	movwf	motorAltaveu@state^0,c
   968                           
   969                           ;Altaveu.c: 33:    }
   970  000EEC  0012               	return	
   971  000EEE                     l3343:
   972  000EEE  0EA8               	movlw	168
   973  000EF0  182F               	xorwf	_copsNota^0,w,c
   974  000EF2  A4D8               	btfss	status,2,c
   975  000EF4  D004               	goto	l3351
   976                           
   977                           ;Altaveu.c: 35:     nota++;
   978  000EF6  2A31               	incf	_nota^0,f,c
   979                           
   980                           ;Altaveu.c: 36:     copsNota = 0;
   981  000EF8  0E00               	movlw	0
   982  000EFA  6E2F               	movwf	_copsNota^0,c
   983  000EFC  D7EE               	goto	l3335
   984  000EFE                     l3351:
   985  000EFE  5030               	movf	_timerAltaveu^0,w,c
   986  000F00  EC69  F00A         	call	_TiGetTics
   987  000F04  5031               	movf	_nota^0,w,c
   988  000F06  6E60               	movwf	??_motorAltaveu^0,c
   989  000F08  6A61               	clrf	(??_motorAltaveu+1)^0,c
   990  000F0A  5059               	movf	?_TiGetTics^0,w,c
   991  000F0C  5C60               	subwf	??_motorAltaveu^0,w,c
   992  000F0E  5061               	movf	(??_motorAltaveu+1)^0,w,c
   993  000F10  0A80               	xorlw	128
   994  000F12  6E62               	movwf	(??_motorAltaveu+2)^0,c
   995  000F14  505A               	movf	(?_TiGetTics+1)^0,w,c
   996  000F16  0A80               	xorlw	128
   997  000F18  5862               	subwfb	(??_motorAltaveu+2)^0,w,c
   998  000F1A  B0D8               	btfsc	status,0,c
   999  000F1C  0012               	return	
  1000                           
  1001                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  1002  000F1E  808A               	bsf	138,0,c	;volatile
  1003                           
  1004                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  1005  000F20  5030               	movf	_timerAltaveu^0,w,c
  1006  000F22  ECC5  F00A         	call	_TiResetTics
  1007                           
  1008                           ;Altaveu.c: 42:     state = 2;
  1009  000F26  0E02               	movlw	2
  1010  000F28  6E2E               	movwf	motorAltaveu@state^0,c
  1011  000F2A  0012               	return	
  1012  000F2C                     l3359:
  1013                           
  1014                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  1015  000F2C  5030               	movf	_timerAltaveu^0,w,c
  1016  000F2E  EC69  F00A         	call	_TiGetTics
  1017  000F32  5031               	movf	_nota^0,w,c
  1018  000F34  6E60               	movwf	??_motorAltaveu^0,c
  1019  000F36  6A61               	clrf	(??_motorAltaveu+1)^0,c
  1020  000F38  5059               	movf	?_TiGetTics^0,w,c
  1021  000F3A  5C60               	subwf	??_motorAltaveu^0,w,c
  1022  000F3C  5061               	movf	(??_motorAltaveu+1)^0,w,c
  1023  000F3E  0A80               	xorlw	128
  1024  000F40  6E62               	movwf	(??_motorAltaveu+2)^0,c
  1025  000F42  505A               	movf	(?_TiGetTics+1)^0,w,c
  1026  000F44  0A80               	xorlw	128
  1027  000F46  5862               	subwfb	(??_motorAltaveu+2)^0,w,c
  1028  000F48  B0D8               	btfsc	status,0,c
  1029  000F4A  0012               	return	
  1030                           
  1031                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  1032  000F4C  908A               	bcf	138,0,c	;volatile
  1033                           
  1034                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  1035  000F4E  5030               	movf	_timerAltaveu^0,w,c
  1036  000F50  ECC5  F00A         	call	_TiResetTics
  1037                           
  1038                           ;Altaveu.c: 49:     copsNota++;
  1039  000F54  2A2F               	incf	_copsNota^0,f,c
  1040  000F56  D7C1               	goto	l3335
  1041  000F58                     l3371:
  1042  000F58  502E               	movf	motorAltaveu@state^0,w,c
  1043  000F5A  6E60               	movwf	??_motorAltaveu^0,c
  1044  000F5C  6A61               	clrf	(??_motorAltaveu+1)^0,c
  1045                           
  1046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1047                           ; Switch size 1, requested type "simple"
  1048                           ; Number of cases is 1, Range of values is 0 to 0
  1049                           ; switch strategies available:
  1050                           ; Name         Instructions Cycles
  1051                           ; simple_byte            4     3 (average)
  1052                           ;	Chosen strategy is simple_byte
  1053  000F5E  5061               	movf	(??_motorAltaveu+1)^0,w,c
  1054  000F60  0A00               	xorlw	0	; case 0
  1055  000F62  A4D8               	btfss	status,2,c
  1056  000F64  0012               	return	
  1057                           
  1058                           ; Switch size 1, requested type "simple"
  1059                           ; Number of cases is 3, Range of values is 0 to 2
  1060                           ; switch strategies available:
  1061                           ; Name         Instructions Cycles
  1062                           ; simple_byte           10     6 (average)
  1063                           ;	Chosen strategy is simple_byte
  1064  000F66  5060               	movf	??_motorAltaveu^0,w,c
  1065  000F68  0A00               	xorlw	0	; case 0
  1066  000F6A  B4D8               	btfsc	status,2,c
  1067  000F6C  D7AD               	goto	l640
  1068  000F6E  0A01               	xorlw	1	; case 1
  1069  000F70  B4D8               	btfsc	status,2,c
  1070  000F72  D7B6               	goto	l3337
  1071  000F74  0A03               	xorlw	3	; case 2
  1072  000F76  A4D8               	btfss	status,2,c
  1073  000F78  0012               	return	
  1074  000F7A  D7D8               	goto	l3359
  1075  000F7C                     __end_of_motorAltaveu:
  1076                           	callstack 0
  1077                           
  1078 ;; *************** function _menu *****************
  1079 ;; Defined at:
  1080 ;;		line 27 in file "Menu.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;		None
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1
  1094 ;;      Params:         0       0       0
  1095 ;;      Locals:         0       0       0
  1096 ;;      Temps:          0       2       0
  1097 ;;      Totals:         0       2       0
  1098 ;;Total ram usage:        2 bytes
  1099 ;; Hardware stack levels used: 1
  1100 ;; Hardware stack levels required when called: 6
  1101 ;; This function calls:
  1102 ;;		_GLCDMostraMenu
  1103 ;;		_LcClear
  1104 ;;		_LcGotoXY
  1105 ;;		_LcLliure
  1106 ;;		_LcNewString
  1107 ;;		_LcPutChar
  1108 ;;		_SMSoff
  1109 ;;		_SMSon
  1110 ;;		_SiFerMenu
  1111 ;;		_URegister
  1112 ;;		_UcheckExists
  1113 ;;		_UcheckExistsGetError
  1114 ;;		_UcheckExistsNotFinished
  1115 ;;		_UenviaChar
  1116 ;;		_UenviaPas
  1117 ;;		_UgetNumUsuaris
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text2
  1124  000650                     __ptext2:
  1125                           	callstack 0
  1126  000650                     _menu:
  1127                           	callstack 24
  1128                           
  1129                           ;Menu.c: 28:  static char state = 0;;Menu.c: 30:  switch(state) {
  1130                           
  1131                           ;incstack = 0
  1132  000650  D11D               	goto	l3987
  1133  000652                     l3799:
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;Menu.c: 32:    LcClear();
  1137  000652  EC91  F00A         	call	_LcClear	;wreg free
  1138                           
  1139                           ;Menu.c: 33:    LcNewString("1.LOGIN");
  1140  000656  0E7A               	movlw	low STR_1
  1141  000658  6E59               	movwf	LcNewString@new_s^0,c
  1142  00065A  EC28  F00B         	call	_LcNewString	;wreg free
  1143                           
  1144                           ;Menu.c: 34:    state = 1;
  1145  00065E  0E01               	movlw	1
  1146  000660  6E3A               	movwf	menu@state^0,c
  1147                           
  1148                           ;Menu.c: 35:   break;
  1149  000662  0012               	return	
  1150  000664                     l3805:
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;Menu.c: 37:    if (LcLliure()) {
  1154  000664  EC02  F00B         	call	_LcLliure	;wreg free
  1155  000668  A0D8               	btfss	status,0,c
  1156  00066A  0012               	return	
  1157                           
  1158                           ;Menu.c: 38:     LcGotoXY(0,1);
  1159  00066C  0E01               	movlw	1
  1160  00066E  6E61               	movwf	LcGotoXY@Row^0,c
  1161  000670  0E00               	movlw	0
  1162  000672  ECB2  F009         	call	_LcGotoXY
  1163                           
  1164                           ;Menu.c: 39:     LcNewString("2.REGISTER");
  1165  000676  0E6F               	movlw	low STR_2
  1166  000678  6E59               	movwf	LcNewString@new_s^0,c
  1167  00067A  EC28  F00B         	call	_LcNewString	;wreg free
  1168                           
  1169                           ;Menu.c: 40:     NovaTecla = -1;
  1170  00067E  6874               	setf	_NovaTecla^0,c
  1171                           
  1172                           ;Menu.c: 41:     state = 2;
  1173  000680  0E02               	movlw	2
  1174  000682  6E3A               	movwf	menu@state^0,c
  1175  000684  0012               	return	
  1176  000686                     l3815:
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;Menu.c: 45:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  1180  000686  0474               	decf	_NovaTecla^0,w,c
  1181  000688  A4D8               	btfss	status,2,c
  1182  00068A  D009               	goto	l3823
  1183                           
  1184                           ; BSR set to: 0
  1185  00068C  EC36  F00B         	call	_UgetNumUsuaris	;wreg free
  1186  000690  0900               	iorlw	0
  1187  000692  B4D8               	btfsc	status,2,c
  1188  000694  D004               	goto	l3823
  1189  000696                     u3760:
  1190                           
  1191                           ;Menu.c: 46:     loginNOTRegister = 1;
  1192  000696  8A79               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1193  000698                     l3821:
  1194                           
  1195                           ;Menu.c: 47:     state = 3;
  1196  000698  0E03               	movlw	3
  1197  00069A  6E3A               	movwf	menu@state^0,c
  1198                           
  1199                           ;Menu.c: 48:    }
  1200  00069C  0012               	return	
  1201  00069E                     l3823:
  1202  00069E  0E02               	movlw	2
  1203  0006A0  1874               	xorwf	_NovaTecla^0,w,c
  1204  0006A2  A4D8               	btfss	status,2,c
  1205  0006A4  0012               	return	
  1206                           
  1207                           ;Menu.c: 50:     loginNOTRegister = 0;
  1208  0006A6  9A79               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1209  0006A8  D7F7               	goto	l3821
  1210  0006AA                     l441:
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;Menu.c: 55:    NovaTecla = -1;
  1214  0006AA  6874               	setf	_NovaTecla^0,c
  1215                           
  1216                           ;Menu.c: 56:    novaLletra = -1;
  1217  0006AC  6873               	setf	_novaLletra^0,c
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;Menu.c: 57:    LcClear();
  1221  0006AE  EC91  F00A         	call	_LcClear	;wreg free
  1222                           
  1223                           ;Menu.c: 58:    LcNewString("USER: ");
  1224  0006B2  0E89               	movlw	low STR_3
  1225  0006B4  6E59               	movwf	LcNewString@new_s^0,c
  1226  0006B6  EC28  F00B         	call	_LcNewString	;wreg free
  1227                           
  1228                           ;Menu.c: 59:    state = 4;
  1229  0006BA  0E04               	movlw	4
  1230  0006BC  6E3A               	movwf	menu@state^0,c
  1231                           
  1232                           ;Menu.c: 60:   break;
  1233  0006BE  0012               	return	
  1234  0006C0                     l3835:
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;Menu.c: 62:    if (LcLliure()) {
  1238  0006C0  EC02  F00B         	call	_LcLliure	;wreg free
  1239  0006C4  A0D8               	btfss	status,0,c
  1240  0006C6  0012               	return	
  1241                           
  1242                           ;Menu.c: 63:     LcGotoXY(0,1);
  1243  0006C8  0E01               	movlw	1
  1244  0006CA  6E61               	movwf	LcGotoXY@Row^0,c
  1245  0006CC  0E00               	movlw	0
  1246  0006CE  ECB2  F009         	call	_LcGotoXY
  1247                           
  1248                           ;Menu.c: 64:     LcNewString("PSWD: ");
  1249  0006D2  0E82               	movlw	low STR_4
  1250  0006D4  6E59               	movwf	LcNewString@new_s^0,c
  1251  0006D6  EC28  F00B         	call	_LcNewString	;wreg free
  1252                           
  1253                           ;Menu.c: 65:     state = 5;
  1254  0006DA  0E05               	movlw	5
  1255  0006DC  6E3A               	movwf	menu@state^0,c
  1256  0006DE  0012               	return	
  1257  0006E0                     l3843:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;Menu.c: 69:    if (LcLliure()) {
  1261  0006E0  EC02  F00B         	call	_LcLliure	;wreg free
  1262  0006E4  A0D8               	btfss	status,0,c
  1263  0006E6  0012               	return	
  1264                           
  1265                           ;Menu.c: 70:     LcGotoXY(6,0);
  1266  0006E8  0E00               	movlw	0
  1267  0006EA  6E61               	movwf	LcGotoXY@Row^0,c
  1268  0006EC  0E06               	movlw	6
  1269  0006EE  ECB2  F009         	call	_LcGotoXY
  1270                           
  1271                           ;Menu.c: 71:     SMSon();
  1272  0006F2  EC30  F00B         	call	_SMSon	;wreg free
  1273                           
  1274                           ;Menu.c: 72:     tmp =0;
  1275  0006F6  0E00               	movlw	0
  1276  0006F8  6E3D               	movwf	_tmp^0,c
  1277  0006FA                     l3851:
  1278                           
  1279                           ;Menu.c: 73:     state = 6;
  1280  0006FA  0E06               	movlw	6
  1281  0006FC  6E3A               	movwf	menu@state^0,c
  1282  0006FE  0012               	return	
  1283  000700                     l3853:
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;Menu.c: 77:    if (novaLletra > 47 && NovaTecla != 10) {
  1287  000700  5073               	movf	_novaLletra^0,w,c
  1288  000702  0A80               	xorlw	128
  1289  000704  0F50               	addlw	-176
  1290  000706  A0D8               	btfss	status,0,c
  1291  000708  D00F               	goto	l3863
  1292                           
  1293                           ; BSR set to: 0
  1294  00070A  0E0A               	movlw	10
  1295  00070C  1874               	xorwf	_NovaTecla^0,w,c
  1296  00070E  B4D8               	btfsc	status,2,c
  1297  000710  D00B               	goto	l3863
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;Menu.c: 78:     LcPutChar(novaLletra);
  1301  000712  5073               	movf	_novaLletra^0,w,c
  1302  000714  EC1E  F009         	call	_LcPutChar
  1303                           
  1304                           ;Menu.c: 79:     UenviaChar(novaLletra,tmp);
  1305  000718  C03D  F059         	movff	_tmp,UenviaChar@pos
  1306  00071C  5073               	movf	_novaLletra^0,w,c
  1307  00071E  ECE2  F00A         	call	_UenviaChar
  1308  000722                     l3861:
  1309                           
  1310                           ;Menu.c: 80:     state = 7;
  1311  000722  0E07               	movlw	7
  1312  000724  6E3A               	movwf	menu@state^0,c
  1313                           
  1314                           ;Menu.c: 81:    }
  1315  000726  0012               	return	
  1316  000728                     l3863:
  1317                           
  1318                           ; BSR set to: 0
  1319  000728  0E0B               	movlw	11
  1320  00072A  1874               	xorwf	_NovaTecla^0,w,c
  1321  00072C  A4D8               	btfss	status,2,c
  1322  00072E  0012               	return	
  1323  000730  D7F8               	goto	l3861
  1324  000732                     l3867:
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;Menu.c: 87:    if (tmp != 7 && NovaTecla != 11) {
  1328  000732  0E07               	movlw	7
  1329  000734  183D               	xorwf	_tmp^0,w,c
  1330  000736  B4D8               	btfsc	status,2,c
  1331  000738  D008               	goto	l3879
  1332                           
  1333                           ; BSR set to: 0
  1334  00073A  0E0B               	movlw	11
  1335  00073C  1874               	xorwf	_NovaTecla^0,w,c
  1336  00073E  B4D8               	btfsc	status,2,c
  1337  000740  D004               	goto	l3879
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;Menu.c: 88:     tmp++;
  1341  000742  2A3D               	incf	_tmp^0,f,c
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;Menu.c: 89:     NovaTecla = -1;
  1345  000744  6874               	setf	_NovaTecla^0,c
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;Menu.c: 90:     novaLletra = -1;
  1349  000746  6873               	setf	_novaLletra^0,c
  1350  000748  D7D8               	goto	l3851
  1351  00074A                     l3879:
  1352                           
  1353                           ; BSR set to: 0
  1354  00074A  0E07               	movlw	7
  1355  00074C  183D               	xorwf	_tmp^0,w,c
  1356  00074E  B4D8               	btfsc	status,2,c
  1357  000750  D004               	goto	u3860
  1358                           
  1359                           ; BSR set to: 0
  1360  000752  0E0B               	movlw	11
  1361  000754  1874               	xorwf	_NovaTecla^0,w,c
  1362  000756  A4D8               	btfss	status,2,c
  1363  000758  0012               	return	
  1364  00075A                     u3860:
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;Menu.c: 94:     LcGotoXY(6,1);
  1368  00075A  0E01               	movlw	1
  1369  00075C  6E61               	movwf	LcGotoXY@Row^0,c
  1370  00075E  0E06               	movlw	6
  1371  000760  ECB2  F009         	call	_LcGotoXY
  1372                           
  1373                           ;Menu.c: 95:     UenviaChar('\0',tmp);
  1374  000764  C03D  F059         	movff	_tmp,UenviaChar@pos
  1375  000768  0E00               	movlw	0
  1376  00076A  ECE2  F00A         	call	_UenviaChar
  1377                           
  1378                           ;Menu.c: 96:     NovaTecla = -1;
  1379  00076E  6874               	setf	_NovaTecla^0,c
  1380                           
  1381                           ;Menu.c: 97:     novaLletra = -1;
  1382  000770  6873               	setf	_novaLletra^0,c
  1383                           
  1384                           ;Menu.c: 98:     tmp = 0;
  1385  000772  0E00               	movlw	0
  1386  000774  6E3D               	movwf	_tmp^0,c
  1387  000776                     l3893:
  1388                           
  1389                           ;Menu.c: 99:     state = 8;
  1390  000776  0E08               	movlw	8
  1391  000778  6E3A               	movwf	menu@state^0,c
  1392  00077A  0012               	return	
  1393  00077C                     l3895:
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;Menu.c: 103:    if (novaLletra > 47 && NovaTecla != 10) {
  1397  00077C  5073               	movf	_novaLletra^0,w,c
  1398  00077E  0A80               	xorlw	128
  1399  000780  0F50               	addlw	-176
  1400  000782  A0D8               	btfss	status,0,c
  1401  000784  D00F               	goto	l3905
  1402                           
  1403                           ; BSR set to: 0
  1404  000786  0E0A               	movlw	10
  1405  000788  1874               	xorwf	_NovaTecla^0,w,c
  1406  00078A  B4D8               	btfsc	status,2,c
  1407  00078C  D00B               	goto	l3905
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;Menu.c: 104:     LcPutChar(novaLletra);
  1411  00078E  5073               	movf	_novaLletra^0,w,c
  1412  000790  EC1E  F009         	call	_LcPutChar
  1413                           
  1414                           ;Menu.c: 105:     UenviaPas(novaLletra,tmp);
  1415  000794  C03D  F059         	movff	_tmp,UenviaPas@pos
  1416  000798  5073               	movf	_novaLletra^0,w,c
  1417  00079A  ECDA  F00A         	call	_UenviaPas
  1418  00079E                     l3903:
  1419                           
  1420                           ;Menu.c: 106:     state = 9;
  1421  00079E  0E09               	movlw	9
  1422  0007A0  6E3A               	movwf	menu@state^0,c
  1423                           
  1424                           ;Menu.c: 107:    }
  1425  0007A2  0012               	return	
  1426  0007A4                     l3905:
  1427                           
  1428                           ; BSR set to: 0
  1429  0007A4  0E0B               	movlw	11
  1430  0007A6  1874               	xorwf	_NovaTecla^0,w,c
  1431  0007A8  A4D8               	btfss	status,2,c
  1432  0007AA  0012               	return	
  1433  0007AC  D7F8               	goto	l3903
  1434  0007AE                     l3909:
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;Menu.c: 113:    if (tmp != 7 && NovaTecla != 11) {
  1438  0007AE  0E07               	movlw	7
  1439  0007B0  183D               	xorwf	_tmp^0,w,c
  1440  0007B2  B4D8               	btfsc	status,2,c
  1441  0007B4  D008               	goto	l3921
  1442                           
  1443                           ; BSR set to: 0
  1444  0007B6  0E0B               	movlw	11
  1445  0007B8  1874               	xorwf	_NovaTecla^0,w,c
  1446  0007BA  B4D8               	btfsc	status,2,c
  1447  0007BC  D004               	goto	l3921
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;Menu.c: 114:     tmp++;
  1451  0007BE  2A3D               	incf	_tmp^0,f,c
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;Menu.c: 115:     NovaTecla = -1;
  1455  0007C0  6874               	setf	_NovaTecla^0,c
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;Menu.c: 116:     novaLletra = -1;
  1459  0007C2  6873               	setf	_novaLletra^0,c
  1460  0007C4  D7D8               	goto	l3893
  1461  0007C6                     l3921:
  1462                           
  1463                           ; BSR set to: 0
  1464  0007C6  0E07               	movlw	7
  1465  0007C8  183D               	xorwf	_tmp^0,w,c
  1466  0007CA  B4D8               	btfsc	status,2,c
  1467  0007CC  D004               	goto	u3930
  1468                           
  1469                           ; BSR set to: 0
  1470  0007CE  0E0B               	movlw	11
  1471  0007D0  1874               	xorwf	_NovaTecla^0,w,c
  1472  0007D2  A4D8               	btfss	status,2,c
  1473  0007D4  0012               	return	
  1474  0007D6                     u3930:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;Menu.c: 120:     UenviaPas('\0',tmp);
  1478  0007D6  C03D  F059         	movff	_tmp,UenviaPas@pos
  1479  0007DA  0E00               	movlw	0
  1480  0007DC  ECDA  F00A         	call	_UenviaPas
  1481                           
  1482                           ;Menu.c: 121:     NovaTecla = -1;
  1483  0007E0  6874               	setf	_NovaTecla^0,c
  1484                           
  1485                           ;Menu.c: 122:     novaLletra = -1;
  1486  0007E2  6873               	setf	_novaLletra^0,c
  1487                           
  1488                           ;Menu.c: 123:     tmp = 0;
  1489  0007E4  0E00               	movlw	0
  1490  0007E6  6E3D               	movwf	_tmp^0,c
  1491                           
  1492                           ;Menu.c: 124:     UcheckExists();
  1493  0007E8  EC38  F00B         	call	_UcheckExists	;wreg free
  1494                           
  1495                           ;Menu.c: 125:     SMSoff();
  1496  0007EC  EC33  F00B         	call	_SMSoff	;wreg free
  1497                           
  1498                           ;Menu.c: 126:     state = 10;
  1499  0007F0  0E0A               	movlw	10
  1500  0007F2  6E3A               	movwf	menu@state^0,c
  1501  0007F4  0012               	return	
  1502  0007F6                     l3939:
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;Menu.c: 130:    if (!UcheckExistsNotFinished()) {
  1506  0007F6  ECF0  F00A         	call	_UcheckExistsNotFinished	;wreg free
  1507  0007FA  B0D8               	btfsc	status,0,c
  1508  0007FC  0012               	return	
  1509                           
  1510                           ;Menu.c: 131:     state = 11;
  1511  0007FE  0E0B               	movlw	11
  1512  000800  6E3A               	movwf	menu@state^0,c
  1513  000802  0012               	return	
  1514  000804                     l468:
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;Menu.c: 135:    if (loginNOTRegister == 0 && UcheckExistsGetError() == 0) {
  1518  000804  BA79               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1519  000806  D007               	goto	l469
  1520                           
  1521                           ; BSR set to: 0
  1522  000808  EC08  F00B         	call	_UcheckExistsGetError	;wreg free
  1523  00080C  B0D8               	btfsc	status,0,c
  1524  00080E  D003               	goto	l469
  1525                           
  1526                           ;Menu.c: 136:     URegister();
  1527  000810  EC3A  F00B         	call	_URegister	;wreg free
  1528  000814  D740               	goto	u3760
  1529  000816                     l469:
  1530  000816  AA79               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1531  000818  D007               	goto	l3955
  1532  00081A  EC08  F00B         	call	_UcheckExistsGetError	;wreg free
  1533  00081E  A0D8               	btfss	status,0,c
  1534  000820  D003               	goto	l3955
  1535  000822                     u3980:
  1536                           
  1537                           ;Menu.c: 141:     state = 12;
  1538  000822  0E0C               	movlw	12
  1539  000824  6E3A               	movwf	menu@state^0,c
  1540                           
  1541                           ;Menu.c: 142:    }
  1542  000826  0012               	return	
  1543  000828                     l3955:
  1544  000828  AA79               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  1545  00082A  D002               	goto	u3990
  1546  00082C  0E01               	movlw	1
  1547  00082E  D001               	goto	u3992
  1548  000830                     u3990:
  1549  000830  0E00               	movlw	0
  1550  000832                     u3992:
  1551  000832  0100               	movlb	0	; () banked
  1552  000834  6F8C               	movwf	??_menu& (0+255),b
  1553  000836  EC08  F00B         	call	_UcheckExistsGetError	;wreg free
  1554  00083A  A0D8               	btfss	status,0,c
  1555  00083C  D002               	goto	u4000
  1556  00083E  0E01               	movlw	1
  1557  000840  D001               	goto	u4002
  1558  000842                     u4000:
  1559  000842  0E00               	movlw	0
  1560  000844                     u4002:
  1561  000844  0100               	movlb	0	; () banked
  1562  000846  1B8C               	xorwf	??_menu& (0+255),f,b
  1563  000848  B4D8               	btfsc	status,2,c
  1564  00084A  0012               	return	
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;Menu.c: 144:     state = 0;
  1568  00084C  0E00               	movlw	0
  1569  00084E  6E3A               	movwf	menu@state^0,c
  1570  000850  0012               	return	
  1571  000852                     l3959:
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;Menu.c: 148:    LcClear();
  1575  000852  EC91  F00A         	call	_LcClear	;wreg free
  1576                           
  1577                           ;Menu.c: 149:    SiFerMenu();
  1578  000856  EC3C  F00B         	call	_SiFerMenu	;wreg free
  1579                           
  1580                           ;Menu.c: 150:    GLCDMostraMenu(menuDalt);
  1581  00085A  503B               	movf	_menuDalt^0,w,c
  1582  00085C  ECF6  F00A         	call	_GLCDMostraMenu
  1583                           
  1584                           ;Menu.c: 151:    NovaTecla = -1;
  1585  000860  6874               	setf	_NovaTecla^0,c
  1586                           
  1587                           ;Menu.c: 152:    state = 13;
  1588  000862  0E0D               	movlw	13
  1589  000864  6E3A               	movwf	menu@state^0,c
  1590                           
  1591                           ;Menu.c: 153:   break;
  1592  000866  0012               	return	
  1593  000868                     l3969:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;Menu.c: 155:    if (NovaTecla == 8) {
  1597  000868  0E08               	movlw	8
  1598  00086A  1874               	xorwf	_NovaTecla^0,w,c
  1599  00086C  A4D8               	btfss	status,2,c
  1600  00086E  D005               	goto	l3977
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;Menu.c: 156:     if(menuDalt < 4) menuDalt++;
  1604  000870  0E04               	movlw	4
  1605  000872  603B               	cpfslt	_menuDalt^0,c
  1606  000874  D7D6               	goto	u3980
  1607                           
  1608                           ; BSR set to: 0
  1609  000876  2A3B               	incf	_menuDalt^0,f,c
  1610  000878  D7D4               	goto	u3980
  1611  00087A                     l3977:
  1612                           
  1613                           ; BSR set to: 0
  1614  00087A  0E02               	movlw	2
  1615  00087C  1874               	xorwf	_NovaTecla^0,w,c
  1616  00087E  A4D8               	btfss	status,2,c
  1617  000880  0012               	return	
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;Menu.c: 160:     if(menuDalt > 0) menuDalt--;
  1621  000882  503B               	movf	_menuDalt^0,w,c
  1622  000884  B4D8               	btfsc	status,2,c
  1623  000886  D7CD               	goto	u3980
  1624                           
  1625                           ; BSR set to: 0
  1626  000888  063B               	decf	_menuDalt^0,f,c
  1627  00088A  D7CB               	goto	u3980
  1628  00088C                     l3987:
  1629  00088C  503A               	movf	menu@state^0,w,c
  1630  00088E  0100               	movlb	0	; () banked
  1631  000890  6F8C               	movwf	??_menu& (0+255),b
  1632  000892  6B8D               	clrf	(??_menu+1)& (0+255),b
  1633                           
  1634                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1635                           ; Switch size 1, requested type "simple"
  1636                           ; Number of cases is 1, Range of values is 0 to 0
  1637                           ; switch strategies available:
  1638                           ; Name         Instructions Cycles
  1639                           ; simple_byte            4     3 (average)
  1640                           ;	Chosen strategy is simple_byte
  1641  000894  518D               	movf	(??_menu+1)& (0+255),w,b
  1642  000896  0A00               	xorlw	0	; case 0
  1643  000898  A4D8               	btfss	status,2,c
  1644  00089A  0012               	return	
  1645                           
  1646                           ; BSR set to: 0
  1647                           ; Switch size 1, requested type "simple"
  1648                           ; Number of cases is 14, Range of values is 0 to 13
  1649                           ; switch strategies available:
  1650                           ; Name         Instructions Cycles
  1651                           ; simple_byte           43    22 (average)
  1652                           ;	Chosen strategy is simple_byte
  1653  00089C  518C               	movf	??_menu& (0+255),w,b
  1654  00089E  0A00               	xorlw	0	; case 0
  1655  0008A0  B4D8               	btfsc	status,2,c
  1656  0008A2  D6D7               	goto	l3799
  1657  0008A4  0A01               	xorlw	1	; case 1
  1658  0008A6  B4D8               	btfsc	status,2,c
  1659  0008A8  D6DD               	goto	l3805
  1660  0008AA  0A03               	xorlw	3	; case 2
  1661  0008AC  B4D8               	btfsc	status,2,c
  1662  0008AE  D6EB               	goto	l3815
  1663  0008B0  0A01               	xorlw	1	; case 3
  1664  0008B2  B4D8               	btfsc	status,2,c
  1665  0008B4  D6FA               	goto	l441
  1666  0008B6  0A07               	xorlw	7	; case 4
  1667  0008B8  B4D8               	btfsc	status,2,c
  1668  0008BA  D702               	goto	l3835
  1669  0008BC  0A01               	xorlw	1	; case 5
  1670  0008BE  B4D8               	btfsc	status,2,c
  1671  0008C0  D70F               	goto	l3843
  1672  0008C2  0A03               	xorlw	3	; case 6
  1673  0008C4  B4D8               	btfsc	status,2,c
  1674  0008C6  D71C               	goto	l3853
  1675  0008C8  0A01               	xorlw	1	; case 7
  1676  0008CA  B4D8               	btfsc	status,2,c
  1677  0008CC  D732               	goto	l3867
  1678  0008CE  0A0F               	xorlw	15	; case 8
  1679  0008D0  B4D8               	btfsc	status,2,c
  1680  0008D2  D754               	goto	l3895
  1681  0008D4  0A01               	xorlw	1	; case 9
  1682  0008D6  B4D8               	btfsc	status,2,c
  1683  0008D8  D76A               	goto	l3909
  1684  0008DA  0A03               	xorlw	3	; case 10
  1685  0008DC  B4D8               	btfsc	status,2,c
  1686  0008DE  D78B               	goto	l3939
  1687  0008E0  0A01               	xorlw	1	; case 11
  1688  0008E2  B4D8               	btfsc	status,2,c
  1689  0008E4  D78F               	goto	l468
  1690  0008E6  0A07               	xorlw	7	; case 12
  1691  0008E8  B4D8               	btfsc	status,2,c
  1692  0008EA  D7B3               	goto	l3959
  1693  0008EC  0A01               	xorlw	1	; case 13
  1694  0008EE  A4D8               	btfss	status,2,c
  1695  0008F0  0012               	return	
  1696  0008F2  D7BA               	goto	l3969
  1697  0008F4                     __end_of_menu:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _UgetNumUsuaris *****************
  1701 ;; Defined at:
  1702 ;;		line 26 in file "Usuaris.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      unsigned char 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1
  1716 ;;      Params:         0       0       0
  1717 ;;      Locals:         0       0       0
  1718 ;;      Temps:          0       0       0
  1719 ;;      Totals:         0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 2
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_menu
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text3
  1731  00166C                     __ptext3:
  1732                           	callstack 0
  1733  00166C                     _UgetNumUsuaris:
  1734                           	callstack 27
  1735                           
  1736                           ;Usuaris.c: 27:     return numUsuaris;
  1737                           
  1738                           ;incstack = 0
  1739  00166C  5038               	movf	_numUsuaris^0,w,c
  1740  00166E  0012               	return		;funcret
  1741  001670                     __end_of_UgetNumUsuaris:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _UenviaPas *****************
  1745 ;; Defined at:
  1746 ;;		line 42 in file "Usuaris.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  c               1    wreg     unsigned char 
  1749 ;;  pos             1    5[COMRAM] unsigned char 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  c               1    6[COMRAM] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1
  1761 ;;      Params:         1       0       0
  1762 ;;      Locals:         1       0       0
  1763 ;;      Temps:          0       0       0
  1764 ;;      Totals:         2       0       0
  1765 ;;Total ram usage:        2 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 2
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_menu
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text4
  1776  0015B4                     __ptext4:
  1777                           	callstack 0
  1778  0015B4                     _UenviaPas:
  1779                           	callstack 27
  1780                           
  1781                           ;incstack = 0
  1782                           ;UenviaPas@c stored from wreg
  1783  0015B4  6E5A               	movwf	UenviaPas@c^0,c
  1784                           
  1785                           ;Usuaris.c: 43:     tmpPassword[pos] = c;
  1786  0015B6  5059               	movf	UenviaPas@pos^0,w,c
  1787  0015B8  0F19               	addlw	low _tmpPassword
  1788  0015BA  6ED9               	movwf	fsr2l,c
  1789  0015BC  6ADA               	clrf	fsr2h,c
  1790  0015BE  C05A  FFDF         	movff	UenviaPas@c,indf2
  1791  0015C2  0012               	return		;funcret
  1792  0015C4                     __end_of_UenviaPas:
  1793                           	callstack 0
  1794                           
  1795 ;; *************** function _UenviaChar *****************
  1796 ;; Defined at:
  1797 ;;		line 39 in file "Usuaris.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  c               1    wreg     unsigned char 
  1800 ;;  pos             1    5[COMRAM] unsigned char 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  c               1    6[COMRAM] unsigned char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1
  1812 ;;      Params:         1       0       0
  1813 ;;      Locals:         1       0       0
  1814 ;;      Temps:          0       0       0
  1815 ;;      Totals:         2       0       0
  1816 ;;Total ram usage:        2 bytes
  1817 ;; Hardware stack levels used: 1
  1818 ;; Hardware stack levels required when called: 2
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_menu
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text5
  1827  0015C4                     __ptext5:
  1828                           	callstack 0
  1829  0015C4                     _UenviaChar:
  1830                           	callstack 27
  1831                           
  1832                           ;incstack = 0
  1833                           ;UenviaChar@c stored from wreg
  1834  0015C4  6E5A               	movwf	UenviaChar@c^0,c
  1835                           
  1836                           ;Usuaris.c: 40:     tmpUsername[pos] = c;
  1837  0015C6  5059               	movf	UenviaChar@pos^0,w,c
  1838  0015C8  0F4B               	addlw	low _tmpUsername
  1839  0015CA  6ED9               	movwf	fsr2l,c
  1840  0015CC  6ADA               	clrf	fsr2h,c
  1841  0015CE  C05A  FFDF         	movff	UenviaChar@c,indf2
  1842  0015D2  0012               	return		;funcret
  1843  0015D4                     __end_of_UenviaChar:
  1844                           	callstack 0
  1845                           
  1846 ;; *************** function _UcheckExistsNotFinished *****************
  1847 ;; Defined at:
  1848 ;;		line 33 in file "Usuaris.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;		None               void
  1855 ;; Registers used:
  1856 ;;		status,0
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1
  1862 ;;      Params:         0       0       0
  1863 ;;      Locals:         0       0       0
  1864 ;;      Temps:          0       0       0
  1865 ;;      Totals:         0       0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; Hardware stack levels required when called: 2
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_menu
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text6
  1877  0015E0                     __ptext6:
  1878                           	callstack 0
  1879  0015E0                     _UcheckExistsNotFinished:
  1880                           	callstack 27
  1881                           
  1882                           ;Usuaris.c: 34:     return do_check_exists;
  1883                           
  1884                           ;incstack = 0
  1885  0015E0  B879               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1886  0015E2  D002               	goto	l1633
  1887  0015E4  90D8               	bcf	status,0,c
  1888  0015E6  0012               	return	
  1889  0015E8                     l1633:
  1890  0015E8  80D8               	bsf	status,0,c
  1891  0015EA  0012               	return		;funcret
  1892  0015EC                     __end_of_UcheckExistsNotFinished:
  1893                           	callstack 0
  1894                           
  1895 ;; *************** function _UcheckExistsGetError *****************
  1896 ;; Defined at:
  1897 ;;		line 36 in file "Usuaris.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;		None               void
  1904 ;; Registers used:
  1905 ;;		wreg, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1
  1911 ;;      Params:         0       0       0
  1912 ;;      Locals:         0       0       0
  1913 ;;      Temps:          1       0       0
  1914 ;;      Totals:         1       0       0
  1915 ;;Total ram usage:        1 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; Hardware stack levels required when called: 2
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_menu
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text7
  1926  001610                     __ptext7:
  1927                           	callstack 0
  1928  001610                     _UcheckExistsGetError:
  1929                           	callstack 27
  1930                           
  1931                           ;Usuaris.c: 37:     return usuariLoguejat;
  1932                           
  1933                           ;incstack = 0
  1934  001610  C033  F059         	movff	_usuariLoguejat,??_UcheckExistsGetError
  1935  001614  3059               	rrcf	??_UcheckExistsGetError^0,w,c
  1936  001616  0012               	return		;funcret
  1937  001618                     __end_of_UcheckExistsGetError:
  1938                           	callstack 0
  1939                           
  1940 ;; *************** function _UcheckExists *****************
  1941 ;; Defined at:
  1942 ;;		line 30 in file "Usuaris.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		None
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1
  1956 ;;      Params:         0       0       0
  1957 ;;      Locals:         0       0       0
  1958 ;;      Temps:          0       0       0
  1959 ;;      Totals:         0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 2
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_menu
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text8
  1971  001670                     __ptext8:
  1972                           	callstack 0
  1973  001670                     _UcheckExists:
  1974                           	callstack 27
  1975                           
  1976                           ;Usuaris.c: 31:     do_check_exists = 1;
  1977                           
  1978                           ;incstack = 0
  1979  001670  8879               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  1980  001672  0012               	return		;funcret
  1981  001674                     __end_of_UcheckExists:
  1982                           	callstack 0
  1983                           
  1984 ;; *************** function _URegister *****************
  1985 ;; Defined at:
  1986 ;;		line 50 in file "Usuaris.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		None
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1
  2000 ;;      Params:         0       0       0
  2001 ;;      Locals:         0       0       0
  2002 ;;      Temps:          0       0       0
  2003 ;;      Totals:         0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 2
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_menu
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text9
  2015  001674                     __ptext9:
  2016                           	callstack 0
  2017  001674                     _URegister:
  2018                           	callstack 27
  2019                           
  2020                           ;Usuaris.c: 51:     do_register = 1;
  2021                           
  2022                           ;incstack = 0
  2023  001674  8679               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2024  001676  0012               	return		;funcret
  2025  001678                     __end_of_URegister:
  2026                           	callstack 0
  2027                           
  2028 ;; *************** function _SiFerMenu *****************
  2029 ;; Defined at:
  2030 ;;		line 19 in file "GestioLCD.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		None
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1
  2044 ;;      Params:         0       0       0
  2045 ;;      Locals:         0       0       0
  2046 ;;      Temps:          0       0       0
  2047 ;;      Totals:         0       0       0
  2048 ;;Total ram usage:        0 bytes
  2049 ;; Hardware stack levels used: 1
  2050 ;; Hardware stack levels required when called: 2
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_menu
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text10
  2059  001678                     __ptext10:
  2060                           	callstack 0
  2061  001678                     _SiFerMenu:
  2062                           	callstack 27
  2063                           
  2064                           ;GestioLCD.c: 20:     ferMenu = 1;
  2065                           
  2066                           ;incstack = 0
  2067  001678  8279               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2068  00167A  0012               	return		;funcret
  2069  00167C                     __end_of_SiFerMenu:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function _SMSon *****************
  2073 ;; Defined at:
  2074 ;;		line 139 in file "Ssms.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		None
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1
  2088 ;;      Params:         0       0       0
  2089 ;;      Locals:         0       0       0
  2090 ;;      Temps:          0       0       0
  2091 ;;      Totals:         0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 2
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_menu
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text11
  2103  001660                     __ptext11:
  2104                           	callstack 0
  2105  001660                     _SMSon:
  2106                           	callstack 27
  2107                           
  2108                           ;Ssms.c: 140:     setSMSon = 1;
  2109                           
  2110                           ;incstack = 0
  2111  001660  8C79               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2112                           
  2113                           ;Ssms.c: 141:     novaTecla = -1;
  2114  001662  6877               	setf	_novaTecla^0,c
  2115  001664  0012               	return		;funcret
  2116  001666                     __end_of_SMSon:
  2117                           	callstack 0
  2118                           
  2119 ;; *************** function _SMSoff *****************
  2120 ;; Defined at:
  2121 ;;		line 144 in file "Ssms.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		None
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1
  2135 ;;      Params:         0       0       0
  2136 ;;      Locals:         0       0       0
  2137 ;;      Temps:          0       0       0
  2138 ;;      Totals:         0       0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 2
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_menu
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text12
  2150  001666                     __ptext12:
  2151                           	callstack 0
  2152  001666                     _SMSoff:
  2153                           	callstack 27
  2154                           
  2155                           ;Ssms.c: 145:     setSMSon = 0;
  2156                           
  2157                           ;incstack = 0
  2158  001666  9C79               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2159                           
  2160                           ;Ssms.c: 146:     novaTecla = -1;
  2161  001668  6877               	setf	_novaTecla^0,c
  2162  00166A  0012               	return		;funcret
  2163  00166C                     __end_of_SMSoff:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _GLCDMostraMenu *****************
  2167 ;; Defined at:
  2168 ;;		line 30 in file "GestioLCD.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  num             1    wreg     unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  num             1    5[COMRAM] unsigned char 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1
  2182 ;;      Params:         0       0       0
  2183 ;;      Locals:         1       0       0
  2184 ;;      Temps:          0       0       0
  2185 ;;      Totals:         1       0       0
  2186 ;;Total ram usage:        1 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 2
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_menu
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text13
  2197  0015EC                     __ptext13:
  2198                           	callstack 0
  2199  0015EC                     _GLCDMostraMenu:
  2200                           	callstack 27
  2201                           
  2202                           ;incstack = 0
  2203                           ;GLCDMostraMenu@num stored from wreg
  2204  0015EC  6E59               	movwf	GLCDMostraMenu@num^0,c
  2205                           
  2206                           ;GestioLCD.c: 31:     newString = 1;
  2207  0015EE  8079               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  2208                           
  2209                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  2210  0015F0  C059  F02C         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  2211                           
  2212                           ;GestioLCD.c: 33:     ferMenu = 1;
  2213  0015F4  8279               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  2214  0015F6  0012               	return		;funcret
  2215  0015F8                     __end_of_GLCDMostraMenu:
  2216                           	callstack 0
  2217                           
  2218 ;; *************** function _init_ports *****************
  2219 ;; Defined at:
  2220 ;;		line 21 in file "main.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;		None
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1
  2234 ;;      Params:         0       0       0
  2235 ;;      Locals:         0       0       0
  2236 ;;      Temps:          0       0       0
  2237 ;;      Totals:         0       0       0
  2238 ;;Total ram usage:        0 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; Hardware stack levels required when called: 2
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text14
  2249  00156A                     __ptext14:
  2250                           	callstack 0
  2251  00156A                     _init_ports:
  2252                           	callstack 28
  2253                           
  2254                           ;incstack = 0
  2255  00156A  0E03               	movlw	3
  2256  00156C  6E92               	movwf	146,c	;volatile
  2257  00156E  0EE0               	movlw	224
  2258  001570  6E93               	movwf	147,c	;volatile
  2259  001572  968A               	bcf	138,3,c	;volatile
  2260  001574  908A               	bcf	138,0,c	;volatile
  2261  001576  928A               	bcf	138,1,c	;volatile
  2262                           
  2263                           ;main.c: 44:     TRISC = 0xC0;
  2264  001578  0EC0               	movlw	192
  2265  00157A  6E94               	movwf	148,c	;volatile
  2266                           
  2267                           ;main.c: 54:     TRISD = 0x8F;
  2268  00157C  0E8F               	movlw	143
  2269  00157E  6E95               	movwf	149,c	;volatile
  2270                           
  2271                           ;main.c: 55:     LATD = 0x00;
  2272  001580  0E00               	movlw	0
  2273  001582  6E8C               	movwf	140,c	;volatile
  2274                           
  2275                           ;main.c: 58:     EECON1bits.EEPGD = 1;
  2276  001584  8EA6               	bsf	166,7,c	;volsfr
  2277                           
  2278                           ;main.c: 59:     EECON1bits.CFGS = 0;
  2279  001586  9CA6               	bcf	166,6,c	;volsfr
  2280  001588  0012               	return		;funcret
  2281  00158A                     __end_of_init_ports:
  2282                           	callstack 0
  2283                           
  2284 ;; *************** function _initAltaveu *****************
  2285 ;; Defined at:
  2286 ;;		line 10 in file "Altaveu.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;		None
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;		None
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1
  2300 ;;      Params:         0       0       0
  2301 ;;      Locals:         0       0       0
  2302 ;;      Temps:          0       0       0
  2303 ;;      Totals:         0       0       0
  2304 ;;Total ram usage:        0 bytes
  2305 ;; Hardware stack levels used: 1
  2306 ;; Hardware stack levels required when called: 3
  2307 ;; This function calls:
  2308 ;;		_TiGetTimer
  2309 ;; This function is called by:
  2310 ;;		_main
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text15
  2315  001618                     __ptext15:
  2316                           	callstack 0
  2317  001618                     _initAltaveu:
  2318                           	callstack 27
  2319                           
  2320                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  2321                           
  2322                           ;incstack = 0
  2323  001618  ECCF  F009         	call	_TiGetTimer	;wreg free
  2324  00161C  6E30               	movwf	_timerAltaveu^0,c
  2325  00161E  0012               	return		;funcret
  2326  001620                     __end_of_initAltaveu:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _escriureEEPROM *****************
  2330 ;; Defined at:
  2331 ;;		line 183 in file "Usuaris.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  caca            1    5[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1
  2345 ;;      Params:         0       0       0
  2346 ;;      Locals:         1       0       0
  2347 ;;      Temps:          0       0       0
  2348 ;;      Totals:         1       0       0
  2349 ;;Total ram usage:        1 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 2
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text16
  2360  0014A4                     __ptext16:
  2361                           	callstack 0
  2362  0014A4                     _escriureEEPROM:
  2363                           	callstack 28
  2364                           
  2365                           ;Usuaris.c: 184:     for(unsigned char caca = 0; caca < 160; caca++){
  2366                           
  2367                           ;incstack = 0
  2368  0014A4  0E00               	movlw	0
  2369  0014A6  6E59               	movwf	escriureEEPROM@caca^0,c
  2370  0014A8                     l1787:
  2371                           
  2372                           ;Usuaris.c: 185:         EEADR = 0;
  2373  0014A8  0E00               	movlw	0
  2374  0014AA  6EA9               	movwf	169,c	;volatile
  2375                           
  2376                           ;Usuaris.c: 186:         EEDATA = 0;
  2377  0014AC  0E00               	movlw	0
  2378  0014AE  6EA8               	movwf	168,c	;volatile
  2379                           
  2380                           ;Usuaris.c: 187:         EECON1bits.EEPGD = 0;
  2381  0014B0  9EA6               	bcf	166,7,c	;volsfr
  2382                           
  2383                           ;Usuaris.c: 188:         EECON1bits.CFGS = 0;
  2384  0014B2  9CA6               	bcf	166,6,c	;volsfr
  2385                           
  2386                           ;Usuaris.c: 189:         EECON1bits.WREN = 1;
  2387  0014B4  84A6               	bsf	166,2,c	;volsfr
  2388                           
  2389                           ;Usuaris.c: 190:         INTCONbits.GIE = 0;
  2390  0014B6  9EF2               	bcf	242,7,c	;volatile
  2391                           
  2392                           ;Usuaris.c: 191:         EECON2 = 85;
  2393  0014B8  0E55               	movlw	85
  2394  0014BA  6EA7               	movwf	167,c	;volsfr
  2395                           
  2396                           ;Usuaris.c: 192:         EECON2 = 170;
  2397  0014BC  0EAA               	movlw	170
  2398  0014BE  6EA7               	movwf	167,c	;volsfr
  2399                           
  2400                           ;Usuaris.c: 193:          EECON1bits.WR = 1;
  2401  0014C0  82A6               	bsf	166,1,c	;volsfr
  2402  0014C2                     l609:
  2403                           
  2404                           ;Usuaris.c: 194:         while(EECON1bits.WR){
  2405  0014C2  B2A6               	btfsc	166,1,c	;volsfr
  2406  0014C4  D7FE               	goto	l609
  2407                           
  2408                           ;Usuaris.c: 199:     }
  2409  0014C6  2A59               	incf	escriureEEPROM@caca^0,f,c
  2410  0014C8  0E9F               	movlw	159
  2411  0014CA  6459               	cpfsgt	escriureEEPROM@caca^0,c
  2412  0014CC  D7ED               	goto	l1787
  2413                           
  2414                           ;Usuaris.c: 200:    INTCONbits.GIE = 1;
  2415  0014CE  8EF2               	bsf	242,7,c	;volatile
  2416  0014D0  0012               	return		;funcret
  2417  0014D2                     __end_of_escriureEEPROM:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _UmotorUsers *****************
  2421 ;; Defined at:
  2422 ;;		line 119 in file "Usuaris.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1
  2436 ;;      Params:         0       0       0
  2437 ;;      Locals:         0       0       0
  2438 ;;      Temps:          2       0       0
  2439 ;;      Totals:         2       0       0
  2440 ;;Total ram usage:        2 bytes
  2441 ;; Hardware stack levels used: 1
  2442 ;; Hardware stack levels required when called: 3
  2443 ;; This function calls:
  2444 ;;		_compareStrings
  2445 ;;		_escriureCharEEPROM
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text17
  2452  000B0C                     __ptext17:
  2453                           	callstack 0
  2454  000B0C                     _UmotorUsers:
  2455                           	callstack 27
  2456                           
  2457                           ;Usuaris.c: 120: static char state = 0;;Usuaris.c: 122:  switch(state) {
  2458                           
  2459                           ;incstack = 0
  2460  000B0C  D0A8               	goto	l3455
  2461  000B0E                     l581:
  2462                           
  2463                           ;Usuaris.c: 124:    if (!do_check_exists && !do_register) {
  2464  000B0E  A879               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2465  000B10  B679               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  2466  000B12  D005               	goto	l582
  2467                           
  2468                           ;Usuaris.c: 125:     i = 0;
  2469  000B14  0E00               	movlw	0
  2470  000B16  6E35               	movwf	_i^0,c
  2471                           
  2472                           ;Usuaris.c: 126:     j = 0;
  2473  000B18  0E00               	movlw	0
  2474  000B1A  6E34               	movwf	_j^0,c
  2475                           
  2476                           ;Usuaris.c: 127:    }
  2477  000B1C  0012               	return	
  2478  000B1E                     l582:
  2479  000B1E  A879               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2480  000B20  D005               	goto	l584
  2481                           
  2482                           ;Usuaris.c: 129:     usuariLoguejat = 0;
  2483  000B22  0E00               	movlw	0
  2484  000B24  6E33               	movwf	_usuariLoguejat^0,c
  2485                           
  2486                           ;Usuaris.c: 130:     state = 1;
  2487  000B26  0E01               	movlw	1
  2488  000B28  6E32               	movwf	UmotorUsers@state^0,c
  2489                           
  2490                           ;Usuaris.c: 131:    }
  2491  000B2A  0012               	return	
  2492  000B2C                     l584:
  2493  000B2C  A679               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  2494  000B2E  0012               	return	
  2495  000B30                     u3070:
  2496                           
  2497                           ;Usuaris.c: 133:     state = 2;
  2498  000B30  0E02               	movlw	2
  2499  000B32  6E32               	movwf	UmotorUsers@state^0,c
  2500                           
  2501                           ;Usuaris.c: 135:   break;
  2502  000B34  0012               	return	
  2503  000B36                     l3387:
  2504                           
  2505                           ;Usuaris.c: 137:    if (i < numUsuaris) {
  2506  000B36  5038               	movf	_numUsuaris^0,w,c
  2507  000B38  5C35               	subwf	_i^0,w,c
  2508  000B3A  B0D8               	btfsc	status,0,c
  2509  000B3C  D014               	goto	l3397
  2510                           
  2511                           ;Usuaris.c: 138:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  2512  000B3E  0E4B               	movlw	low _tmpUsername
  2513  000B40  6E59               	movwf	compareStrings@a^0,c
  2514  000B42  5035               	movf	_i^0,w,c
  2515  000B44  0D17               	mullw	23
  2516  000B46  0E00               	movlw	low _usuaris
  2517  000B48  24F3               	addwf	243,w,c
  2518  000B4A  6E5A               	movwf	compareStrings@b^0,c
  2519  000B4C  0E01               	movlw	high _usuaris
  2520  000B4E  20F4               	addwfc	prodh,w,c
  2521  000B50  6E5B               	movwf	(compareStrings@b+1)^0,c
  2522  000B52  EC6F  F009         	call	_compareStrings	;wreg free
  2523  000B56  0900               	iorlw	0
  2524  000B58  B4D8               	btfsc	status,2,c
  2525                           
  2526                           ;Usuaris.c: 139:      usuariLoguejat = i;
  2527  000B5A  C035  F033         	movff	_i,_usuariLoguejat
  2528                           
  2529                           ;Usuaris.c: 142:     i++;
  2530  000B5E  2A35               	incf	_i^0,f,c
  2531                           
  2532                           ;Usuaris.c: 143:     state = 1;
  2533  000B60  0E01               	movlw	1
  2534  000B62  6E32               	movwf	UmotorUsers@state^0,c
  2535                           
  2536                           ;Usuaris.c: 144:    }
  2537  000B64  0012               	return	
  2538  000B66                     l3397:
  2539  000B66  5038               	movf	_numUsuaris^0,w,c
  2540  000B68  1835               	xorwf	_i^0,w,c
  2541  000B6A  A4D8               	btfss	status,2,c
  2542  000B6C  0012               	return	
  2543                           
  2544                           ;Usuaris.c: 146:     do_check_exists = 0;
  2545  000B6E  9879               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  2546  000B70                     l3401:
  2547                           
  2548                           ;Usuaris.c: 147:     state = 0;
  2549  000B70  0E00               	movlw	0
  2550  000B72  6E32               	movwf	UmotorUsers@state^0,c
  2551  000B74  0012               	return	
  2552  000B76                     l3403:
  2553                           
  2554                           ;Usuaris.c: 151:    if (i != 8) {
  2555  000B76  0E08               	movlw	8
  2556  000B78  1835               	xorwf	_i^0,w,c
  2557  000B7A  B4D8               	btfsc	status,2,c
  2558  000B7C  D022               	goto	l3415
  2559                           
  2560                           ;Usuaris.c: 152:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  2561  000B7E  C037  F059         	movff	_indexNextUser,escriureCharEEPROM@pos
  2562  000B82  5035               	movf	_i^0,w,c
  2563  000B84  0F4B               	addlw	low _tmpUsername
  2564  000B86  6ED9               	movwf	fsr2l,c
  2565  000B88  6ADA               	clrf	fsr2h,c
  2566  000B8A  50DF               	movf	indf2,w,c
  2567  000B8C  EC7F  F00A         	call	_escriureCharEEPROM
  2568  000B90  2A37               	incf	_indexNextUser^0,f,c
  2569                           
  2570                           ;Usuaris.c: 153:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  2571  000B92  5035               	movf	_i^0,w,c
  2572  000B94  0F4B               	addlw	low _tmpUsername
  2573  000B96  6ED9               	movwf	fsr2l,c
  2574  000B98  6ADA               	clrf	fsr2h,c
  2575  000B9A  5036               	movf	_indexNextUserStruct^0,w,c
  2576  000B9C  0D17               	mullw	23
  2577  000B9E  0E00               	movlw	low _usuaris
  2578  000BA0  6E5E               	movwf	??_UmotorUsers^0,c
  2579  000BA2  0E01               	movlw	high _usuaris
  2580  000BA4  6E5F               	movwf	(??_UmotorUsers+1)^0,c
  2581  000BA6  50F3               	movf	243,w,c
  2582  000BA8  265E               	addwf	??_UmotorUsers^0,f,c
  2583  000BAA  50F4               	movf	244,w,c
  2584  000BAC  225F               	addwfc	(??_UmotorUsers+1)^0,f,c
  2585  000BAE  5035               	movf	_i^0,w,c
  2586  000BB0  245E               	addwf	??_UmotorUsers^0,w,c
  2587  000BB2  6EE1               	movwf	fsr1l,c
  2588  000BB4  0E00               	movlw	0
  2589  000BB6  205F               	addwfc	(??_UmotorUsers+1)^0,w,c
  2590  000BB8  6EE2               	movwf	fsr1h,c
  2591  000BBA  CFDF FFE7          	movff	indf2,indf1
  2592                           
  2593                           ;Usuaris.c: 154:     i++;
  2594  000BBE  2A35               	incf	_i^0,f,c
  2595  000BC0  D7B7               	goto	u3070
  2596  000BC2                     l3415:
  2597  000BC2  0E08               	movlw	8
  2598  000BC4  1835               	xorwf	_i^0,w,c
  2599  000BC6  A4D8               	btfss	status,2,c
  2600  000BC8  0012               	return	
  2601                           
  2602                           ;Usuaris.c: 158:     i = 0;
  2603  000BCA  0E00               	movlw	0
  2604  000BCC  6E35               	movwf	_i^0,c
  2605                           
  2606                           ;Usuaris.c: 159:     state = 3;
  2607  000BCE  0E03               	movlw	3
  2608  000BD0  6E32               	movwf	UmotorUsers@state^0,c
  2609  000BD2  0012               	return	
  2610  000BD4                     l3419:
  2611                           
  2612                           ;Usuaris.c: 163:    if (i != 8) {
  2613  000BD4  0E08               	movlw	8
  2614  000BD6  1835               	xorwf	_i^0,w,c
  2615  000BD8  B4D8               	btfsc	status,2,c
  2616  000BDA  D028               	goto	l3431
  2617                           
  2618                           ;Usuaris.c: 164:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  2619  000BDC  C037  F059         	movff	_indexNextUser,escriureCharEEPROM@pos
  2620  000BE0  5035               	movf	_i^0,w,c
  2621  000BE2  0F19               	addlw	low _tmpPassword
  2622  000BE4  6ED9               	movwf	fsr2l,c
  2623  000BE6  6ADA               	clrf	fsr2h,c
  2624  000BE8  50DF               	movf	indf2,w,c
  2625  000BEA  EC7F  F00A         	call	_escriureCharEEPROM
  2626  000BEE  2A37               	incf	_indexNextUser^0,f,c
  2627                           
  2628                           ;Usuaris.c: 165:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  2629  000BF0  5035               	movf	_i^0,w,c
  2630  000BF2  0F19               	addlw	low _tmpPassword
  2631  000BF4  6ED9               	movwf	fsr2l,c
  2632  000BF6  6ADA               	clrf	fsr2h,c
  2633  000BF8  5036               	movf	_indexNextUserStruct^0,w,c
  2634  000BFA  0D17               	mullw	23
  2635  000BFC  0E00               	movlw	low _usuaris
  2636  000BFE  6E5E               	movwf	??_UmotorUsers^0,c
  2637  000C00  0E01               	movlw	high _usuaris
  2638  000C02  6E5F               	movwf	(??_UmotorUsers+1)^0,c
  2639  000C04  0E09               	movlw	9
  2640  000C06  265E               	addwf	??_UmotorUsers^0,f,c
  2641  000C08  0E00               	movlw	0
  2642  000C0A  225F               	addwfc	(??_UmotorUsers+1)^0,f,c
  2643  000C0C  50F3               	movf	243,w,c
  2644  000C0E  265E               	addwf	??_UmotorUsers^0,f,c
  2645  000C10  50F4               	movf	244,w,c
  2646  000C12  225F               	addwfc	(??_UmotorUsers+1)^0,f,c
  2647  000C14  5035               	movf	_i^0,w,c
  2648  000C16  245E               	addwf	??_UmotorUsers^0,w,c
  2649  000C18  6EE1               	movwf	fsr1l,c
  2650  000C1A  0E00               	movlw	0
  2651  000C1C  205F               	addwfc	(??_UmotorUsers+1)^0,w,c
  2652  000C1E  6EE2               	movwf	fsr1h,c
  2653  000C20  CFDF FFE7          	movff	indf2,indf1
  2654                           
  2655                           ;Usuaris.c: 166:     i++;
  2656  000C24  2A35               	incf	_i^0,f,c
  2657                           
  2658                           ;Usuaris.c: 167:     state = 3;
  2659  000C26  0E03               	movlw	3
  2660  000C28  6E32               	movwf	UmotorUsers@state^0,c
  2661                           
  2662                           ;Usuaris.c: 168:    }
  2663  000C2A  0012               	return	
  2664  000C2C                     l3431:
  2665  000C2C  0E08               	movlw	8
  2666  000C2E  1835               	xorwf	_i^0,w,c
  2667  000C30  A4D8               	btfss	status,2,c
  2668  000C32  0012               	return	
  2669                           
  2670                           ;Usuaris.c: 170:     do_register = 0;
  2671  000C34  9679               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  2672                           
  2673                           ;Usuaris.c: 171:     indexNextUser++;
  2674  000C36  2A37               	incf	_indexNextUser^0,f,c
  2675                           
  2676                           ;Usuaris.c: 172:     if(indexNextUser == 159) indexNextUser = 16;
  2677  000C38  0E9F               	movlw	159
  2678  000C3A  1837               	xorwf	_indexNextUser^0,w,c
  2679  000C3C  A4D8               	btfss	status,2,c
  2680  000C3E  D002               	goto	l3441
  2681  000C40  0E10               	movlw	16
  2682  000C42  6E37               	movwf	_indexNextUser^0,c
  2683  000C44                     l3441:
  2684                           
  2685                           ;Usuaris.c: 173:     indexNextUserStruct++;
  2686  000C44  2A36               	incf	_indexNextUserStruct^0,f,c
  2687                           
  2688                           ;Usuaris.c: 174:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  2689  000C46  0E08               	movlw	8
  2690  000C48  1836               	xorwf	_indexNextUserStruct^0,w,c
  2691  000C4A  A4D8               	btfss	status,2,c
  2692  000C4C  D002               	goto	l3447
  2693  000C4E  0E00               	movlw	0
  2694  000C50  6E36               	movwf	_indexNextUserStruct^0,c
  2695  000C52                     l3447:
  2696                           
  2697                           ;Usuaris.c: 175:     if(numUsuaris != 8) numUsuaris++;
  2698  000C52  0E08               	movlw	8
  2699  000C54  1838               	xorwf	_numUsuaris^0,w,c
  2700  000C56  B4D8               	btfsc	status,2,c
  2701  000C58  D78B               	goto	l3401
  2702  000C5A  2A38               	incf	_numUsuaris^0,f,c
  2703  000C5C  D789               	goto	l3401
  2704  000C5E                     l3455:
  2705  000C5E  5032               	movf	UmotorUsers@state^0,w,c
  2706  000C60  6E5E               	movwf	??_UmotorUsers^0,c
  2707  000C62  6A5F               	clrf	(??_UmotorUsers+1)^0,c
  2708                           
  2709                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2710                           ; Switch size 1, requested type "simple"
  2711                           ; Number of cases is 1, Range of values is 0 to 0
  2712                           ; switch strategies available:
  2713                           ; Name         Instructions Cycles
  2714                           ; simple_byte            4     3 (average)
  2715                           ;	Chosen strategy is simple_byte
  2716  000C64  505F               	movf	(??_UmotorUsers+1)^0,w,c
  2717  000C66  0A00               	xorlw	0	; case 0
  2718  000C68  A4D8               	btfss	status,2,c
  2719  000C6A  0012               	return	
  2720                           
  2721                           ; Switch size 1, requested type "simple"
  2722                           ; Number of cases is 4, Range of values is 0 to 3
  2723                           ; switch strategies available:
  2724                           ; Name         Instructions Cycles
  2725                           ; simple_byte           13     7 (average)
  2726                           ;	Chosen strategy is simple_byte
  2727  000C6C  505E               	movf	??_UmotorUsers^0,w,c
  2728  000C6E  0A00               	xorlw	0	; case 0
  2729  000C70  B4D8               	btfsc	status,2,c
  2730  000C72  D74D               	goto	l581
  2731  000C74  0A01               	xorlw	1	; case 1
  2732  000C76  B4D8               	btfsc	status,2,c
  2733  000C78  D75E               	goto	l3387
  2734  000C7A  0A03               	xorlw	3	; case 2
  2735  000C7C  B4D8               	btfsc	status,2,c
  2736  000C7E  D77B               	goto	l3403
  2737  000C80  0A01               	xorlw	1	; case 3
  2738  000C82  A4D8               	btfss	status,2,c
  2739  000C84  0012               	return	
  2740  000C86  D7A6               	goto	l3419
  2741  000C88                     __end_of_UmotorUsers:
  2742                           	callstack 0
  2743                           
  2744 ;; *************** function _escriureCharEEPROM *****************
  2745 ;; Defined at:
  2746 ;;		line 53 in file "Usuaris.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  c               1    wreg     unsigned char 
  2749 ;;  pos             1    5[COMRAM] unsigned char 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  c               1    6[COMRAM] unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1
  2761 ;;      Params:         1       0       0
  2762 ;;      Locals:         1       0       0
  2763 ;;      Temps:          0       0       0
  2764 ;;      Totals:         2       0       0
  2765 ;;Total ram usage:        2 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; Hardware stack levels required when called: 2
  2768 ;; This function calls:
  2769 ;;		Nothing
  2770 ;; This function is called by:
  2771 ;;		_UmotorUsers
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text18
  2776  0014FE                     __ptext18:
  2777                           	callstack 0
  2778  0014FE                     _escriureCharEEPROM:
  2779                           	callstack 27
  2780                           
  2781                           ;incstack = 0
  2782                           ;escriureCharEEPROM@c stored from wreg
  2783  0014FE  6E5A               	movwf	escriureCharEEPROM@c^0,c
  2784                           
  2785                           ;Usuaris.c: 54:     EEADR = c;
  2786  001500  C05A  FFA9         	movff	escriureCharEEPROM@c,4009	;volatile
  2787                           
  2788                           ;Usuaris.c: 55:     EEDATA = pos;
  2789  001504  C059  FFA8         	movff	escriureCharEEPROM@pos,4008	;volatile
  2790                           
  2791                           ;Usuaris.c: 56:     EECON1bits.EEPGD = 0;
  2792  001508  9EA6               	bcf	166,7,c	;volsfr
  2793                           
  2794                           ;Usuaris.c: 57:     EECON1bits.CFGS = 0;
  2795  00150A  9CA6               	bcf	166,6,c	;volsfr
  2796                           
  2797                           ;Usuaris.c: 58:     EECON1bits.WREN = 1;
  2798  00150C  84A6               	bsf	166,2,c	;volsfr
  2799                           
  2800                           ;Usuaris.c: 59:     INTCONbits.GIE = 0;
  2801  00150E  9EF2               	bcf	242,7,c	;volatile
  2802                           
  2803                           ;Usuaris.c: 60:     EECON2 = 85;
  2804  001510  0E55               	movlw	85
  2805  001512  6EA7               	movwf	167,c	;volsfr
  2806                           
  2807                           ;Usuaris.c: 61:     EECON2 = 170;
  2808  001514  0EAA               	movlw	170
  2809  001516  6EA7               	movwf	167,c	;volsfr
  2810                           
  2811                           ;Usuaris.c: 62:      EECON1bits.WR = 1;
  2812  001518  82A6               	bsf	166,1,c	;volsfr
  2813  00151A                     l543:
  2814  00151A  B2A6               	btfsc	166,1,c	;volsfr
  2815  00151C  D7FE               	goto	l543
  2816                           
  2817                           ;Usuaris.c: 64:    INTCONbits.GIE = 1;
  2818  00151E  8EF2               	bsf	242,7,c	;volatile
  2819  001520  0012               	return		;funcret
  2820  001522                     __end_of_escriureCharEEPROM:
  2821                           	callstack 0
  2822                           
  2823 ;; *************** function _compareStrings *****************
  2824 ;; Defined at:
  2825 ;;		line 109 in file "Usuaris.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  a               1    5[COMRAM] PTR const unsigned char 
  2828 ;;		 -> tmpUsername(9), 
  2829 ;;  b               2    6[COMRAM] PTR const unsigned char 
  2830 ;;		 -> usuaris.username(9), usuaris(184), 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      unsigned char 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1
  2842 ;;      Params:         3       0       0
  2843 ;;      Locals:         0       0       0
  2844 ;;      Temps:          2       0       0
  2845 ;;      Totals:         5       0       0
  2846 ;;Total ram usage:        5 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; Hardware stack levels required when called: 2
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_UmotorUsers
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text19
  2857  0012DE                     __ptext19:
  2858                           	callstack 0
  2859  0012DE                     _compareStrings:
  2860                           	callstack 27
  2861                           
  2862                           ;Usuaris.c: 110:     while (*a){
  2863                           
  2864                           ;incstack = 0
  2865  0012DE  D00E               	goto	l2891
  2866  0012E0                     l2885:
  2867                           
  2868                           ;Usuaris.c: 111:         if (*a != *b)break;
  2869  0012E0  C05A  FFD9         	movff	compareStrings@b,fsr2l
  2870  0012E4  C05B  FFDA         	movff	compareStrings@b+1,fsr2h
  2871  0012E8  5059               	movf	compareStrings@a^0,w,c
  2872  0012EA  6EE1               	movwf	fsr1l,c
  2873  0012EC  6AE2               	clrf	fsr1h,c
  2874  0012EE  50DE               	movf	postinc2,w,c
  2875  0012F0  18E6               	xorwf	postinc1,w,c
  2876  0012F2  A4D8               	btfss	status,2,c
  2877  0012F4  D009               	goto	u2270
  2878                           
  2879                           ;Usuaris.c: 112:         a++;
  2880  0012F6  2A59               	incf	compareStrings@a^0,f,c
  2881                           
  2882                           ;Usuaris.c: 113:         b++;
  2883  0012F8  4A5A               	infsnz	compareStrings@b^0,f,c
  2884  0012FA  2A5B               	incf	(compareStrings@b+1)^0,f,c
  2885  0012FC                     l2891:
  2886                           
  2887                           ;Usuaris.c: 110:     while (*a){
  2888  0012FC  5059               	movf	compareStrings@a^0,w,c
  2889  0012FE  6ED9               	movwf	fsr2l,c
  2890  001300  6ADA               	clrf	fsr2h,c
  2891  001302  50DF               	movf	indf2,w,c
  2892  001304  A4D8               	btfss	status,2,c
  2893  001306  D7EC               	goto	l2885
  2894  001308                     u2270:
  2895                           
  2896                           ;Usuaris.c: 115:     return *(const unsigned char*)a - *(const unsigned char*)b;
  2897  001308  C05A  FFD9         	movff	compareStrings@b,fsr2l
  2898  00130C  C05B  FFDA         	movff	compareStrings@b+1,fsr2h
  2899  001310  50DF               	movf	indf2,w,c
  2900  001312  6E5C               	movwf	??_compareStrings^0,c
  2901  001314  5059               	movf	compareStrings@a^0,w,c
  2902  001316  6ED9               	movwf	fsr2l,c
  2903  001318  6ADA               	clrf	fsr2h,c
  2904  00131A  50DF               	movf	indf2,w,c
  2905  00131C  6E5D               	movwf	(??_compareStrings+1)^0,c
  2906  00131E  505C               	movf	??_compareStrings^0,w,c
  2907  001320  5C5D               	subwf	(??_compareStrings+1)^0,w,c
  2908  001322  0012               	return		;funcret
  2909  001324                     __end_of_compareStrings:
  2910                           	callstack 0
  2911                           
  2912 ;; *************** function _Uinit *****************
  2913 ;; Defined at:
  2914 ;;		line 66 in file "Usuaris.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  j               1    9[COMRAM] unsigned char 
  2919 ;;  j               1    8[COMRAM] unsigned char 
  2920 ;;  i               1    7[COMRAM] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1
  2930 ;;      Params:         0       0       0
  2931 ;;      Locals:         3       0       0
  2932 ;;      Temps:          2       0       0
  2933 ;;      Totals:         5       0       0
  2934 ;;Total ram usage:        5 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 2
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text20
  2945  000F7C                     __ptext20:
  2946                           	callstack 0
  2947  000F7C                     _Uinit:
  2948                           	callstack 28
  2949                           
  2950                           ;Usuaris.c: 71:     EEADR = 0;
  2951                           
  2952                           ;incstack = 0
  2953  000F7C  0E00               	movlw	0
  2954  000F7E  6EA9               	movwf	169,c	;volatile
  2955                           
  2956                           ;Usuaris.c: 72:     EECON1bits.EEPGD = 0;
  2957  000F80  9EA6               	bcf	166,7,c	;volsfr
  2958                           
  2959                           ;Usuaris.c: 73:     EECON1bits.CFGS = 0;
  2960  000F82  9CA6               	bcf	166,6,c	;volsfr
  2961                           
  2962                           ;Usuaris.c: 74:     EECON1bits.RD = 1;
  2963  000F84  80A6               	bsf	166,0,c	;volsfr
  2964  000F86                     l549:
  2965  000F86  B0A6               	btfsc	166,0,c	;volsfr
  2966  000F88  D7FE               	goto	l549
  2967                           
  2968                           ;Usuaris.c: 76:     numUsuaris = EEDATA;
  2969  000F8A  CFA8 F038          	movff	4008,_numUsuaris	;volatile
  2970                           
  2971                           ;Usuaris.c: 80:     EEADR++;
  2972  000F8E  2AA9               	incf	169,f,c	;volatile
  2973                           
  2974                           ;Usuaris.c: 81:     EECON1bits.EEPGD = 0;
  2975  000F90  9EA6               	bcf	166,7,c	;volsfr
  2976                           
  2977                           ;Usuaris.c: 82:     EECON1bits.CFGS = 0;
  2978  000F92  9CA6               	bcf	166,6,c	;volsfr
  2979  000F94                     l552:
  2980  000F94  B0A6               	btfsc	166,0,c	;volsfr
  2981  000F96  D7FE               	goto	l552
  2982                           
  2983                           ;Usuaris.c: 85:     indexNextUser = EEDATA;
  2984  000F98  CFA8 F037          	movff	4008,_indexNextUser	;volatile
  2985                           
  2986                           ;Usuaris.c: 86:     EEADR++;
  2987  000F9C  2AA9               	incf	169,f,c	;volatile
  2988                           
  2989                           ;Usuaris.c: 88:     for(char i = 0; i< numUsuaris; i++){
  2990  000F9E  0E00               	movlw	0
  2991  000FA0  6E5B               	movwf	Uinit@i^0,c
  2992  000FA2  D041               	goto	l2045
  2993  000FA4                     l2015:
  2994                           
  2995                           ;Usuaris.c: 89:         for(char j = 0; j<9; j++){
  2996  000FA4  0E00               	movlw	0
  2997  000FA6  6E5C               	movwf	Uinit@j^0,c
  2998  000FA8                     l557:
  2999                           
  3000                           ;Usuaris.c: 90:             EECON1bits.EEPGD = 0;
  3001  000FA8  9EA6               	bcf	166,7,c	;volsfr
  3002                           
  3003                           ;Usuaris.c: 91:             EECON1bits.CFGS = 0;
  3004  000FAA  9CA6               	bcf	166,6,c	;volsfr
  3005                           
  3006                           ;Usuaris.c: 92:             EECON1bits.RD = 1;
  3007  000FAC  80A6               	bsf	166,0,c	;volsfr
  3008  000FAE                     l559:
  3009  000FAE  B0A6               	btfsc	166,0,c	;volsfr
  3010  000FB0  D7FE               	goto	l559
  3011                           
  3012                           ;Usuaris.c: 94:             usuaris[i].username[j] = EEDATA;
  3013  000FB2  505B               	movf	Uinit@i^0,w,c
  3014  000FB4  0D17               	mullw	23
  3015  000FB6  0E00               	movlw	low _usuaris
  3016  000FB8  6E59               	movwf	??_Uinit^0,c
  3017  000FBA  0E01               	movlw	high _usuaris
  3018  000FBC  6E5A               	movwf	(??_Uinit+1)^0,c
  3019  000FBE  50F3               	movf	243,w,c
  3020  000FC0  2659               	addwf	??_Uinit^0,f,c
  3021  000FC2  50F4               	movf	244,w,c
  3022  000FC4  225A               	addwfc	(??_Uinit+1)^0,f,c
  3023  000FC6  505C               	movf	Uinit@j^0,w,c
  3024  000FC8  2459               	addwf	??_Uinit^0,w,c
  3025  000FCA  6ED9               	movwf	fsr2l,c
  3026  000FCC  0E00               	movlw	0
  3027  000FCE  205A               	addwfc	(??_Uinit+1)^0,w,c
  3028  000FD0  6EDA               	movwf	fsr2h,c
  3029  000FD2  CFA8 FFDF          	movff	4008,indf2	;volatile
  3030                           
  3031                           ;Usuaris.c: 95:             EEADR++;
  3032  000FD6  2AA9               	incf	169,f,c	;volatile
  3033                           
  3034                           ;Usuaris.c: 96:         }
  3035  000FD8  2A5C               	incf	Uinit@j^0,f,c
  3036  000FDA  0E08               	movlw	8
  3037  000FDC  645C               	cpfsgt	Uinit@j^0,c
  3038  000FDE  D7E4               	goto	l557
  3039                           
  3040                           ;Usuaris.c: 97:         for(char j = 0; j<9; j++){
  3041  000FE0  0E00               	movlw	0
  3042  000FE2  6E5D               	movwf	Uinit@j_1041^0,c
  3043  000FE4                     l562:
  3044                           
  3045                           ;Usuaris.c: 98:             EECON1bits.EEPGD = 0;
  3046  000FE4  9EA6               	bcf	166,7,c	;volsfr
  3047                           
  3048                           ;Usuaris.c: 99:             EECON1bits.CFGS = 0;
  3049  000FE6  9CA6               	bcf	166,6,c	;volsfr
  3050                           
  3051                           ;Usuaris.c: 100:             EECON1bits.RD = 1;
  3052  000FE8  80A6               	bsf	166,0,c	;volsfr
  3053  000FEA                     l564:
  3054  000FEA  B0A6               	btfsc	166,0,c	;volsfr
  3055  000FEC  D7FE               	goto	l564
  3056                           
  3057                           ;Usuaris.c: 102:             usuaris[i].password[j] = EEDATA;
  3058  000FEE  505B               	movf	Uinit@i^0,w,c
  3059  000FF0  0D17               	mullw	23
  3060  000FF2  0E00               	movlw	low _usuaris
  3061  000FF4  6E59               	movwf	??_Uinit^0,c
  3062  000FF6  0E01               	movlw	high _usuaris
  3063  000FF8  6E5A               	movwf	(??_Uinit+1)^0,c
  3064  000FFA  0E09               	movlw	9
  3065  000FFC  2659               	addwf	??_Uinit^0,f,c
  3066  000FFE  0E00               	movlw	0
  3067  001000  225A               	addwfc	(??_Uinit+1)^0,f,c
  3068  001002  50F3               	movf	243,w,c
  3069  001004  2659               	addwf	??_Uinit^0,f,c
  3070  001006  50F4               	movf	244,w,c
  3071  001008  225A               	addwfc	(??_Uinit+1)^0,f,c
  3072  00100A  505D               	movf	Uinit@j_1041^0,w,c
  3073  00100C  2459               	addwf	??_Uinit^0,w,c
  3074  00100E  6ED9               	movwf	fsr2l,c
  3075  001010  0E00               	movlw	0
  3076  001012  205A               	addwfc	(??_Uinit+1)^0,w,c
  3077  001014  6EDA               	movwf	fsr2h,c
  3078  001016  CFA8 FFDF          	movff	4008,indf2	;volatile
  3079                           
  3080                           ;Usuaris.c: 103:             EEADR++;
  3081  00101A  2AA9               	incf	169,f,c	;volatile
  3082                           
  3083                           ;Usuaris.c: 104:         }
  3084  00101C  2A5D               	incf	Uinit@j_1041^0,f,c
  3085  00101E  0E08               	movlw	8
  3086  001020  645D               	cpfsgt	Uinit@j_1041^0,c
  3087  001022  D7E0               	goto	l562
  3088                           
  3089                           ;Usuaris.c: 105:     }
  3090  001024  2A5B               	incf	Uinit@i^0,f,c
  3091  001026                     l2045:
  3092  001026  5038               	movf	_numUsuaris^0,w,c
  3093  001028  5C5B               	subwf	Uinit@i^0,w,c
  3094  00102A  B0D8               	btfsc	status,0,c
  3095  00102C  0012               	return	
  3096  00102E  D7BA               	goto	l2015
  3097  001030                     __end_of_Uinit:
  3098                           	callstack 0
  3099                           
  3100 ;; *************** function _TiInitTimer *****************
  3101 ;; Defined at:
  3102 ;;		line 18 in file "TiTTimer.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;		None
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1
  3116 ;;      Params:         0       0       0
  3117 ;;      Locals:         0       0       0
  3118 ;;      Temps:          0       0       0
  3119 ;;      Totals:         0       0       0
  3120 ;;Total ram usage:        0 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 2
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_main
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text21
  3131  0013D8                     __ptext21:
  3132                           	callstack 0
  3133  0013D8                     _TiInitTimer:
  3134                           	callstack 28
  3135                           
  3136                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  3137                           
  3138                           ;incstack = 0
  3139  0013D8  9ED0               	bcf	208,7,c	;volatile
  3140                           
  3141                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  3142  0013DA  8EF2               	bsf	242,7,c	;volatile
  3143                           
  3144                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  3145  0013DC  8CF2               	bsf	242,6,c	;volatile
  3146                           
  3147                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  3148  0013DE  8AF2               	bsf	242,5,c	;volatile
  3149                           
  3150                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  3151  0013E0  94F2               	bcf	242,2,c	;volatile
  3152                           
  3153                           ;TiTTimer.c: 25:     T0CON = 136;
  3154  0013E2  0E88               	movlw	136
  3155  0013E4  6ED5               	movwf	213,c	;volatile
  3156                           
  3157                           ;TiTTimer.c: 27:     TMR0H = 223;
  3158  0013E6  0EDF               	movlw	223
  3159  0013E8  6ED7               	movwf	215,c	;volatile
  3160                           
  3161                           ;TiTTimer.c: 28:     TMR0L = 148;
  3162  0013EA  0E94               	movlw	148
  3163  0013EC  6ED6               	movwf	214,c	;volatile
  3164                           
  3165                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  3166  0013EE  8ED5               	bsf	213,7,c	;volatile
  3167                           
  3168                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  3169  0013F0  0E00               	movlw	0
  3170  0013F2  6E3E               	movwf	_counter^0,c
  3171  0013F4                     l1809:
  3172  0013F4  0E07               	movlw	7
  3173  0013F6  643E               	cpfsgt	_counter^0,c
  3174  0013F8  D001               	goto	l1813
  3175  0013FA  0012               	return	
  3176  0013FC                     l1813:
  3177                           
  3178                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  3179  0013FC  503E               	movf	_counter^0,w,c
  3180  0013FE  0D03               	mullw	3
  3181  001400  50F3               	movf	243,w,c
  3182  001402  0F03               	addlw	low (_s_Timers+2)
  3183  001404  6ED9               	movwf	fsr2l,c
  3184  001406  6ADA               	clrf	fsr2h,c
  3185  001408  0E00               	movlw	0
  3186  00140A  6EDF               	movwf	indf2,c
  3187                           
  3188                           ;TiTTimer.c: 33:     }
  3189  00140C  2A3E               	incf	_counter^0,f,c
  3190  00140E  D7F2               	goto	l1809
  3191  001410                     __end_of_TiInitTimer:
  3192                           	callstack 0
  3193                           
  3194 ;; *************** function _TeTeclat *****************
  3195 ;; Defined at:
  3196 ;;		line 22 in file "TeTeclat.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1
  3210 ;;      Params:         0       0       0
  3211 ;;      Locals:         0       0       0
  3212 ;;      Temps:          3       0       0
  3213 ;;      Totals:         3       0       0
  3214 ;;Total ram usage:        3 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; Hardware stack levels required when called: 3
  3217 ;; This function calls:
  3218 ;;		_MsetNovaTecla
  3219 ;;		_SsetNovaTecla
  3220 ;;		_TiGetTics
  3221 ;;		_TiResetTics
  3222 ;; This function is called by:
  3223 ;;		_main
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text22
  3228  000C88                     __ptext22:
  3229                           	callstack 0
  3230  000C88                     _TeTeclat:
  3231                           	callstack 27
  3232                           
  3233                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  3234                           
  3235                           ;incstack = 0
  3236  000C88  A083               	btfss	131,0,c	;volatile
  3237  000C8A  D003               	goto	u3570
  3238  000C8C  6A60               	clrf	??_TeTeclat^0,c
  3239  000C8E  2A60               	incf	??_TeTeclat^0,f,c
  3240  000C90  D001               	goto	u3578
  3241  000C92                     u3570:
  3242  000C92  6A60               	clrf	??_TeTeclat^0,c
  3243  000C94                     u3578:
  3244  000C94  A283               	btfss	131,1,c	;volatile
  3245  000C96  D002               	goto	u3580
  3246  000C98  0E01               	movlw	1
  3247  000C9A  D001               	goto	u3586
  3248  000C9C                     u3580:
  3249  000C9C  0E00               	movlw	0
  3250  000C9E                     u3586:
  3251  000C9E  0D02               	mullw	2
  3252  000CA0  CFF3 F061          	movff	prodl,??_TeTeclat+1
  3253  000CA4  A483               	btfss	131,2,c	;volatile
  3254  000CA6  D002               	goto	u3590
  3255  000CA8  0E01               	movlw	1
  3256  000CAA  D001               	goto	u3596
  3257  000CAC                     u3590:
  3258  000CAC  0E00               	movlw	0
  3259  000CAE                     u3596:
  3260  000CAE  0D03               	mullw	3
  3261  000CB0  CFF3 F062          	movff	prodl,??_TeTeclat+2
  3262  000CB4  A683               	btfss	131,3,c	;volatile
  3263  000CB6  D002               	goto	u3600
  3264  000CB8  0E01               	movlw	1
  3265  000CBA  D001               	goto	u3606
  3266  000CBC                     u3600:
  3267  000CBC  0E00               	movlw	0
  3268  000CBE                     u3606:
  3269  000CBE  0D04               	mullw	4
  3270  000CC0  50F3               	movf	243,w,c
  3271  000CC2  2462               	addwf	(??_TeTeclat+2)^0,w,c
  3272  000CC4  2461               	addwf	(??_TeTeclat+1)^0,w,c
  3273  000CC6  2460               	addwf	??_TeTeclat^0,w,c
  3274  000CC8  6E3F               	movwf	TeTeclat@files^0,c
  3275                           
  3276                           ;TeTeclat.c: 27:  switch(state) {
  3277  000CCA  D06F               	goto	l3731
  3278  000CCC                     l3657:
  3279                           
  3280                           ;TeTeclat.c: 29:    if (files==0) {
  3281  000CCC  503F               	movf	TeTeclat@files^0,w,c
  3282  000CCE  A4D8               	btfss	status,2,c
  3283  000CD0  D007               	goto	l3665
  3284                           
  3285                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  3286  000CD2  888C               	bsf	140,4,c	;volatile
  3287                           
  3288                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  3289  000CD4  9A8C               	bcf	140,5,c	;volatile
  3290                           
  3291                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  3292  000CD6  9C8C               	bcf	140,6,c	;volatile
  3293                           
  3294                           ;TeTeclat.c: 33:     cols=0;
  3295  000CD8  0E00               	movlw	0
  3296  000CDA  6E40               	movwf	TeTeclat@cols^0,c
  3297  000CDC                     l3663:
  3298                           
  3299                           ;TeTeclat.c: 34:     state++;
  3300  000CDC  2A41               	incf	TeTeclat@state^0,f,c
  3301                           
  3302                           ;TeTeclat.c: 35:    }
  3303  000CDE  0012               	return	
  3304  000CE0                     l3665:
  3305  000CE0  503F               	movf	TeTeclat@files^0,w,c
  3306  000CE2  B4D8               	btfsc	status,2,c
  3307  000CE4  0012               	return	
  3308                           
  3309                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  3310  000CE6  5042               	movf	_tiTeclat^0,w,c
  3311  000CE8  ECC5  F00A         	call	_TiResetTics
  3312  000CEC                     l3669:
  3313                           
  3314                           ;TeTeclat.c: 38:     state = 3;
  3315  000CEC  0E03               	movlw	3
  3316  000CEE  6E41               	movwf	TeTeclat@state^0,c
  3317  000CF0  0012               	return	
  3318  000CF2                     l3671:
  3319                           
  3320                           ;TeTeclat.c: 42:    if (files==0) {
  3321  000CF2  503F               	movf	TeTeclat@files^0,w,c
  3322  000CF4  A4D8               	btfss	status,2,c
  3323  000CF6  D005               	goto	l3679
  3324                           
  3325                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  3326  000CF8  988C               	bcf	140,4,c	;volatile
  3327                           
  3328                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  3329  000CFA  8A8C               	bsf	140,5,c	;volatile
  3330                           
  3331                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  3332  000CFC  9C8C               	bcf	140,6,c	;volatile
  3333                           
  3334                           ;TeTeclat.c: 46:     cols=1;
  3335  000CFE  0E01               	movlw	1
  3336  000D00  D7EC               	goto	L1
  3337  000D02                     l3679:
  3338  000D02  503F               	movf	TeTeclat@files^0,w,c
  3339  000D04  B4D8               	btfsc	status,2,c
  3340  000D06  0012               	return	
  3341                           
  3342                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  3343  000D08  5042               	movf	_tiTeclat^0,w,c
  3344  000D0A  ECC5  F00A         	call	_TiResetTics
  3345  000D0E  D7EE               	goto	l3669
  3346  000D10                     l3685:
  3347                           
  3348                           ;TeTeclat.c: 55:    if (files==0) {
  3349  000D10  503F               	movf	TeTeclat@files^0,w,c
  3350  000D12  A4D8               	btfss	status,2,c
  3351  000D14  D008               	goto	l3691
  3352                           
  3353                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  3354  000D16  988C               	bcf	140,4,c	;volatile
  3355                           
  3356                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  3357  000D18  9A8C               	bcf	140,5,c	;volatile
  3358                           
  3359                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  3360  000D1A  8C8C               	bsf	140,6,c	;volatile
  3361                           
  3362                           ;TeTeclat.c: 59:     cols=2;
  3363  000D1C  0E02               	movlw	2
  3364  000D1E  6E40               	movwf	TeTeclat@cols^0,c
  3365                           
  3366                           ;TeTeclat.c: 60:     state = 0;
  3367  000D20  0E00               	movlw	0
  3368  000D22  6E41               	movwf	TeTeclat@state^0,c
  3369                           
  3370                           ;TeTeclat.c: 61:    }
  3371  000D24  0012               	return	
  3372  000D26                     l3691:
  3373  000D26  503F               	movf	TeTeclat@files^0,w,c
  3374  000D28  B4D8               	btfsc	status,2,c
  3375  000D2A  0012               	return	
  3376                           
  3377                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  3378  000D2C  5042               	movf	_tiTeclat^0,w,c
  3379  000D2E  ECC5  F00A         	call	_TiResetTics
  3380  000D32  D7D4               	goto	l3663
  3381  000D34                     l3697:
  3382                           
  3383                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  3384  000D34  5042               	movf	_tiTeclat^0,w,c
  3385  000D36  EC69  F00A         	call	_TiGetTics
  3386  000D3A  BE5A               	btfsc	(?_TiGetTics+1)^0,7,c
  3387  000D3C  0012               	return	
  3388  000D3E  D7CE               	goto	l3663
  3389  000D40                     l3701:
  3390                           
  3391                           ;TeTeclat.c: 73:    if (files==0) {
  3392  000D40  503F               	movf	TeTeclat@files^0,w,c
  3393  000D42  A4D8               	btfss	status,2,c
  3394  000D44  D003               	goto	l3705
  3395                           
  3396                           ;TeTeclat.c: 74:     state = 1;
  3397  000D46  0E01               	movlw	1
  3398  000D48  6E41               	movwf	TeTeclat@state^0,c
  3399                           
  3400                           ;TeTeclat.c: 75:    }
  3401  000D4A  0012               	return	
  3402  000D4C                     l3705:
  3403  000D4C  503F               	movf	TeTeclat@files^0,w,c
  3404  000D4E  B4D8               	btfsc	status,2,c
  3405  000D50  0012               	return	
  3406                           
  3407                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  3408  000D52  503F               	movf	TeTeclat@files^0,w,c
  3409  000D54  0D03               	mullw	3
  3410  000D56  50F3               	movf	243,w,c
  3411  000D58  0F7D               	addlw	low (_teclaPremuda+253)
  3412  000D5A  2440               	addwf	TeTeclat@cols^0,w,c
  3413  000D5C  6ED9               	movwf	fsr2l,c
  3414  000D5E  6ADA               	clrf	fsr2h,c
  3415  000D60  50DF               	movf	indf2,w,c
  3416  000D62  EC14  F00B         	call	_MsetNovaTecla
  3417                           
  3418                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  3419  000D66  503F               	movf	TeTeclat@files^0,w,c
  3420  000D68  0D03               	mullw	3
  3421  000D6A  50F3               	movf	243,w,c
  3422  000D6C  0F7D               	addlw	low (_teclaPremuda+253)
  3423  000D6E  2440               	addwf	TeTeclat@cols^0,w,c
  3424  000D70  6ED9               	movwf	fsr2l,c
  3425  000D72  6ADA               	clrf	fsr2h,c
  3426  000D74  50DF               	movf	indf2,w,c
  3427  000D76  EC10  F00B         	call	_SsetNovaTecla
  3428  000D7A  D7B0               	goto	l3663
  3429  000D7C                     l3711:
  3430                           
  3431                           ;TeTeclat.c: 84:    if (files==0) {
  3432  000D7C  503F               	movf	TeTeclat@files^0,w,c
  3433  000D7E  A4D8               	btfss	status,2,c
  3434  000D80  0012               	return	
  3435                           
  3436                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  3437  000D82  5042               	movf	_tiTeclat^0,w,c
  3438  000D84  ECC5  F00A         	call	_TiResetTics
  3439  000D88  D7A9               	goto	l3663
  3440  000D8A                     l3717:
  3441                           
  3442                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  3443  000D8A  5042               	movf	_tiTeclat^0,w,c
  3444  000D8C  EC69  F00A         	call	_TiGetTics
  3445  000D90  D7D4               	goto	L2
  3446  000D92                     l3721:
  3447                           
  3448                           ;TeTeclat.c: 95:    if (files!=0) {
  3449  000D92  503F               	movf	TeTeclat@files^0,w,c
  3450  000D94  B4D8               	btfsc	status,2,c
  3451  000D96  D003               	goto	l3725
  3452                           
  3453                           ;TeTeclat.c: 96:     state = 5;
  3454  000D98  0E05               	movlw	5
  3455  000D9A  6E41               	movwf	TeTeclat@state^0,c
  3456                           
  3457                           ;TeTeclat.c: 97:    }
  3458  000D9C  0012               	return	
  3459  000D9E                     l3725:
  3460  000D9E  503F               	movf	TeTeclat@files^0,w,c
  3461  000DA0  A4D8               	btfss	status,2,c
  3462  000DA2  0012               	return	
  3463                           
  3464                           ;TeTeclat.c: 99:     state = 0;
  3465  000DA4  0E00               	movlw	0
  3466  000DA6  6E41               	movwf	TeTeclat@state^0,c
  3467  000DA8  0012               	return	
  3468  000DAA                     l3731:
  3469  000DAA  5041               	movf	TeTeclat@state^0,w,c
  3470  000DAC  6E60               	movwf	??_TeTeclat^0,c
  3471  000DAE  6A61               	clrf	(??_TeTeclat+1)^0,c
  3472                           
  3473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3474                           ; Switch size 1, requested type "simple"
  3475                           ; Number of cases is 1, Range of values is 0 to 0
  3476                           ; switch strategies available:
  3477                           ; Name         Instructions Cycles
  3478                           ; simple_byte            4     3 (average)
  3479                           ;	Chosen strategy is simple_byte
  3480  000DB0  5061               	movf	(??_TeTeclat+1)^0,w,c
  3481  000DB2  0A00               	xorlw	0	; case 0
  3482  000DB4  A4D8               	btfss	status,2,c
  3483  000DB6  0012               	return	
  3484                           
  3485                           ; Switch size 1, requested type "simple"
  3486                           ; Number of cases is 8, Range of values is 0 to 7
  3487                           ; switch strategies available:
  3488                           ; Name         Instructions Cycles
  3489                           ; simple_byte           25    13 (average)
  3490                           ;	Chosen strategy is simple_byte
  3491  000DB8  5060               	movf	??_TeTeclat^0,w,c
  3492  000DBA  0A00               	xorlw	0	; case 0
  3493  000DBC  B4D8               	btfsc	status,2,c
  3494  000DBE  D786               	goto	l3657
  3495  000DC0  0A01               	xorlw	1	; case 1
  3496  000DC2  B4D8               	btfsc	status,2,c
  3497  000DC4  D796               	goto	l3671
  3498  000DC6  0A03               	xorlw	3	; case 2
  3499  000DC8  B4D8               	btfsc	status,2,c
  3500  000DCA  D7A2               	goto	l3685
  3501  000DCC  0A01               	xorlw	1	; case 3
  3502  000DCE  B4D8               	btfsc	status,2,c
  3503  000DD0  D7B1               	goto	l3697
  3504  000DD2  0A07               	xorlw	7	; case 4
  3505  000DD4  B4D8               	btfsc	status,2,c
  3506  000DD6  D7B4               	goto	l3701
  3507  000DD8  0A01               	xorlw	1	; case 5
  3508  000DDA  B4D8               	btfsc	status,2,c
  3509  000DDC  D7CF               	goto	l3711
  3510  000DDE  0A03               	xorlw	3	; case 6
  3511  000DE0  B4D8               	btfsc	status,2,c
  3512  000DE2  D7D3               	goto	l3717
  3513  000DE4  0A01               	xorlw	1	; case 7
  3514  000DE6  A4D8               	btfss	status,2,c
  3515  000DE8  0012               	return	
  3516  000DEA  D7D3               	goto	l3721
  3517  000DEC                     __end_of_TeTeclat:
  3518                           	callstack 0
  3519                           
  3520 ;; *************** function _SsetNovaTecla *****************
  3521 ;; Defined at:
  3522 ;;		line 135 in file "Ssms.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  tecla           1    wreg     unsigned char 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  tecla           1    5[COMRAM] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1
  3536 ;;      Params:         0       0       0
  3537 ;;      Locals:         1       0       0
  3538 ;;      Temps:          0       0       0
  3539 ;;      Totals:         1       0       0
  3540 ;;Total ram usage:        1 bytes
  3541 ;; Hardware stack levels used: 1
  3542 ;; Hardware stack levels required when called: 2
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_TeTeclat
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text23
  3551  001620                     __ptext23:
  3552                           	callstack 0
  3553  001620                     _SsetNovaTecla:
  3554                           	callstack 27
  3555                           
  3556                           ;incstack = 0
  3557                           ;SsetNovaTecla@tecla stored from wreg
  3558  001620  6E59               	movwf	SsetNovaTecla@tecla^0,c
  3559                           
  3560                           ;Ssms.c: 136:     novaTecla = tecla;
  3561  001622  C059  F077         	movff	SsetNovaTecla@tecla,_novaTecla
  3562  001626  0012               	return		;funcret
  3563  001628                     __end_of_SsetNovaTecla:
  3564                           	callstack 0
  3565                           
  3566 ;; *************** function _MsetNovaTecla *****************
  3567 ;; Defined at:
  3568 ;;		line 19 in file "Menu.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  tecla           1    wreg     unsigned char 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  tecla           1    5[COMRAM] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1
  3582 ;;      Params:         0       0       0
  3583 ;;      Locals:         1       0       0
  3584 ;;      Temps:          0       0       0
  3585 ;;      Totals:         1       0       0
  3586 ;;Total ram usage:        1 bytes
  3587 ;; Hardware stack levels used: 1
  3588 ;; Hardware stack levels required when called: 2
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_TeTeclat
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text24
  3597  001628                     __ptext24:
  3598                           	callstack 0
  3599  001628                     _MsetNovaTecla:
  3600                           	callstack 27
  3601                           
  3602                           ;incstack = 0
  3603                           ;MsetNovaTecla@tecla stored from wreg
  3604  001628  6E59               	movwf	MsetNovaTecla@tecla^0,c
  3605                           
  3606                           ;Menu.c: 20:     NovaTecla = tecla;
  3607  00162A  C059  F074         	movff	MsetNovaTecla@tecla,_NovaTecla
  3608  00162E  0012               	return		;funcret
  3609  001630                     __end_of_MsetNovaTecla:
  3610                           	callstack 0
  3611                           
  3612 ;; *************** function _TeInit *****************
  3613 ;; Defined at:
  3614 ;;		line 18 in file "TeTeclat.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1
  3628 ;;      Params:         0       0       0
  3629 ;;      Locals:         0       0       0
  3630 ;;      Temps:          0       0       0
  3631 ;;      Totals:         0       0       0
  3632 ;;Total ram usage:        0 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 3
  3635 ;; This function calls:
  3636 ;;		_TiGetTimer
  3637 ;; This function is called by:
  3638 ;;		_main
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text25
  3643  001630                     __ptext25:
  3644                           	callstack 0
  3645  001630                     _TeInit:
  3646                           	callstack 27
  3647                           
  3648                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  3649                           
  3650                           ;incstack = 0
  3651  001630  ECCF  F009         	call	_TiGetTimer	;wreg free
  3652  001634  6E42               	movwf	_tiTeclat^0,c
  3653  001636  0012               	return		;funcret
  3654  001638                     __end_of_TeInit:
  3655                           	callstack 0
  3656                           
  3657 ;; *************** function _Sinit *****************
  3658 ;; Defined at:
  3659 ;;		line 16 in file "Ssms.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1
  3673 ;;      Params:         0       0       0
  3674 ;;      Locals:         0       0       0
  3675 ;;      Temps:          0       0       0
  3676 ;;      Totals:         0       0       0
  3677 ;;Total ram usage:        0 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 3
  3680 ;; This function calls:
  3681 ;;		_TiGetTimer
  3682 ;; This function is called by:
  3683 ;;		_main
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text26
  3688  001638                     __ptext26:
  3689                           	callstack 0
  3690  001638                     _Sinit:
  3691                           	callstack 27
  3692                           
  3693                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  3694                           
  3695                           ;incstack = 0
  3696  001638  ECCF  F009         	call	_TiGetTimer	;wreg free
  3697  00163C  6E76               	movwf	_timerSMS^0,c
  3698  00163E  0012               	return		;funcret
  3699  001640                     __end_of_Sinit:
  3700                           	callstack 0
  3701                           
  3702 ;; *************** function _SMotor *****************
  3703 ;; Defined at:
  3704 ;;		line 20 in file "Ssms.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1
  3718 ;;      Params:         0       0       0
  3719 ;;      Locals:         0       0       0
  3720 ;;      Temps:          2       0       0
  3721 ;;      Totals:         2       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; Hardware stack levels required when called: 3
  3725 ;; This function calls:
  3726 ;;		_MNovaLletra
  3727 ;;		_TiGetTics
  3728 ;;		_TiResetTics
  3729 ;; This function is called by:
  3730 ;;		_main
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text27
  3735  0008F4                     __ptext27:
  3736                           	callstack 0
  3737  0008F4                     _SMotor:
  3738                           	callstack 27
  3739                           
  3740                           ;Ssms.c: 21:  static char state = 0;;Ssms.c: 23:  switch(state) {
  3741                           
  3742                           ;incstack = 0
  3743  0008F4  D0EA               	goto	l3127
  3744  0008F6                     l2961:
  3745                           
  3746                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  3747  0008F6  2877               	incf	_novaTecla^0,w,c
  3748  0008F8  A4D8               	btfss	status,2,c
  3749  0008FA  AC79               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3750  0008FC  D006               	goto	l2969
  3751                           
  3752                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  3753  0008FE  5076               	movf	_timerSMS^0,w,c
  3754  000900  ECC5  F00A         	call	_TiResetTics
  3755                           
  3756                           ;Ssms.c: 27:     state = 3;
  3757  000904  0E03               	movlw	3
  3758  000906  6E43               	movwf	SMotor@state^0,c
  3759                           
  3760                           ;Ssms.c: 28:    }
  3761  000908  0012               	return	
  3762  00090A                     l2969:
  3763  00090A  2877               	incf	_novaTecla^0,w,c
  3764  00090C  A4D8               	btfss	status,2,c
  3765  00090E  0012               	return	
  3766  000910  5076               	movf	_timerSMS^0,w,c
  3767  000912  EC69  F00A         	call	_TiGetTics
  3768  000916  BE5A               	btfsc	(?_TiGetTics+1)^0,7,c
  3769  000918  0012               	return	
  3770  00091A  0E5A               	movlw	90
  3771  00091C  5C59               	subwf	?_TiGetTics^0,w,c
  3772  00091E  0E02               	movlw	2
  3773  000920  585A               	subwfb	(?_TiGetTics+1)^0,w,c
  3774  000922  A0D8               	btfss	status,0,c
  3775  000924  0012               	return	
  3776  000926  2878               	incf	_lletraASCII^0,w,c
  3777  000928  B4D8               	btfsc	status,2,c
  3778  00092A  0012               	return	
  3779  00092C  AC79               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  3780  00092E  0012               	return	
  3781                           
  3782                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  3783  000930  5078               	movf	_lletraASCII^0,w,c
  3784  000932  EC20  F00B         	call	_MNovaLletra
  3785                           
  3786                           ;Ssms.c: 31:     lletraASCII = -1;
  3787  000936  6878               	setf	_lletraASCII^0,c
  3788                           
  3789                           ;Ssms.c: 32:     ultimaTecla = -1;
  3790  000938  6875               	setf	_ultimaTecla^0,c
  3791  00093A                     l2983:
  3792                           
  3793                           ;Ssms.c: 33:     state = 0;
  3794  00093A  0E00               	movlw	0
  3795  00093C  6E43               	movwf	SMotor@state^0,c
  3796  00093E  0012               	return	
  3797  000940                     l2985:
  3798                           
  3799                           ;Ssms.c: 37:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  3800  000940  5075               	movf	_ultimaTecla^0,w,c
  3801  000942  1877               	xorwf	_novaTecla^0,w,c
  3802  000944  A4D8               	btfss	status,2,c
  3803  000946  D018               	goto	l3001
  3804  000948  5076               	movf	_timerSMS^0,w,c
  3805  00094A  EC69  F00A         	call	_TiGetTics
  3806  00094E  BE5A               	btfsc	(?_TiGetTics+1)^0,7,c
  3807  000950  D006               	goto	u2380
  3808  000952  0E5A               	movlw	90
  3809  000954  5C59               	subwf	?_TiGetTics^0,w,c
  3810  000956  0E02               	movlw	2
  3811  000958  585A               	subwfb	(?_TiGetTics+1)^0,w,c
  3812  00095A  B0D8               	btfsc	status,0,c
  3813  00095C  D00D               	goto	l3001
  3814  00095E                     u2380:
  3815                           
  3816                           ;Ssms.c: 38:     novaTecla = -1;
  3817  00095E  6877               	setf	_novaTecla^0,c
  3818                           
  3819                           ;Ssms.c: 39:     sumaPulsacions++;
  3820  000960  2A44               	incf	_sumaPulsacions^0,f,c
  3821                           
  3822                           ;Ssms.c: 40:     if(!(lletraASCII == '0' || lletraASCII == ' ')){
  3823  000962  0E30               	movlw	48
  3824  000964  1878               	xorwf	_lletraASCII^0,w,c
  3825  000966  B4D8               	btfsc	status,2,c
  3826  000968  D004               	goto	l2999
  3827  00096A  0E20               	movlw	32
  3828  00096C  1878               	xorwf	_lletraASCII^0,w,c
  3829  00096E  A4D8               	btfss	status,2,c
  3830                           
  3831                           ;Ssms.c: 41:       lletraASCII++;
  3832  000970  2A78               	incf	_lletraASCII^0,f,c
  3833  000972                     l2999:
  3834                           
  3835                           ;Ssms.c: 43:     state = 2;
  3836  000972  0E02               	movlw	2
  3837  000974  6E43               	movwf	SMotor@state^0,c
  3838                           
  3839                           ;Ssms.c: 44:    }
  3840  000976  0012               	return	
  3841  000978                     l3001:
  3842  000978  2877               	incf	_novaTecla^0,w,c
  3843  00097A  B4D8               	btfsc	status,2,c
  3844  00097C  0012               	return	
  3845  00097E  5075               	movf	_ultimaTecla^0,w,c
  3846  000980  1877               	xorwf	_novaTecla^0,w,c
  3847  000982  B4D8               	btfsc	status,2,c
  3848  000984  0012               	return	
  3849                           
  3850                           ;Ssms.c: 46:     MNovaLletra(lletraASCII);
  3851  000986  5078               	movf	_lletraASCII^0,w,c
  3852  000988  EC20  F00B         	call	_MNovaLletra
  3853                           
  3854                           ;Ssms.c: 47:     if(novaTecla == 0){
  3855  00098C  5077               	movf	_novaTecla^0,w,c
  3856  00098E  A4D8               	btfss	status,2,c
  3857  000990  D007               	goto	l3015
  3858                           
  3859                           ;Ssms.c: 48:      if(sumaPulsacions == 1) lletraASCII = '0';
  3860  000992  0444               	decf	_sumaPulsacions^0,w,c
  3861  000994  A4D8               	btfss	status,2,c
  3862  000996  D002               	goto	l3013
  3863  000998  0E30               	movlw	48
  3864  00099A  D007               	goto	L3
  3865  00099C                     l3013:
  3866  00099C  0E20               	movlw	32
  3867  00099E  D005               	goto	L3
  3868  0009A0                     l3015:
  3869                           
  3870                           ;Ssms.c: 51:       lletraASCII = lletraInici[novaTecla-2];
  3871  0009A0  5077               	movf	_novaTecla^0,w,c
  3872  0009A2  0F66               	addlw	low (_lletraInici+254)
  3873  0009A4  6ED9               	movwf	fsr2l,c
  3874  0009A6  6ADA               	clrf	fsr2h,c
  3875  0009A8  50DF               	movf	indf2,w,c
  3876  0009AA                     L3:
  3877  0009AA  6E78               	movwf	_lletraASCII^0,c
  3878                           
  3879                           ;Ssms.c: 53:     ultimaTecla = novaTecla;
  3880  0009AC  C077  F075         	movff	_novaTecla,_ultimaTecla
  3881                           
  3882                           ;Ssms.c: 54:     sumaPulsacions = 0;
  3883  0009B0  0E00               	movlw	0
  3884  0009B2  6E44               	movwf	_sumaPulsacions^0,c
  3885  0009B4                     l3021:
  3886                           
  3887                           ;Ssms.c: 55:     novaTecla = -1;
  3888  0009B4  6877               	setf	_novaTecla^0,c
  3889  0009B6  D7C1               	goto	l2983
  3890  0009B8                     l3025:
  3891                           
  3892                           ;Ssms.c: 60:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  3893  0009B8  0E07               	movlw	7
  3894  0009BA  1875               	xorwf	_ultimaTecla^0,w,c
  3895  0009BC  B4D8               	btfsc	status,2,c
  3896  0009BE  D00A               	goto	l3033
  3897  0009C0  0E09               	movlw	9
  3898  0009C2  1875               	xorwf	_ultimaTecla^0,w,c
  3899  0009C4  B4D8               	btfsc	status,2,c
  3900  0009C6  D006               	goto	l3033
  3901  0009C8  5075               	movf	_ultimaTecla^0,w,c
  3902  0009CA  B4D8               	btfsc	status,2,c
  3903  0009CC  D003               	goto	l3033
  3904                           
  3905                           ;Ssms.c: 61:     state = 5;
  3906  0009CE  0E05               	movlw	5
  3907  0009D0  6E43               	movwf	SMotor@state^0,c
  3908                           
  3909                           ;Ssms.c: 62:    }
  3910  0009D2  0012               	return	
  3911  0009D4                     l3033:
  3912  0009D4  0E07               	movlw	7
  3913  0009D6  1875               	xorwf	_ultimaTecla^0,w,c
  3914  0009D8  B4D8               	btfsc	status,2,c
  3915  0009DA  D004               	goto	u2490
  3916  0009DC  0E09               	movlw	9
  3917  0009DE  1875               	xorwf	_ultimaTecla^0,w,c
  3918  0009E0  A4D8               	btfss	status,2,c
  3919  0009E2  D003               	goto	l3039
  3920  0009E4                     u2490:
  3921                           
  3922                           ;Ssms.c: 64:     state = 6;
  3923  0009E4  0E06               	movlw	6
  3924  0009E6  6E43               	movwf	SMotor@state^0,c
  3925                           
  3926                           ;Ssms.c: 65:    }
  3927  0009E8  0012               	return	
  3928  0009EA                     l3039:
  3929  0009EA  5075               	movf	_ultimaTecla^0,w,c
  3930  0009EC  A4D8               	btfss	status,2,c
  3931  0009EE  0012               	return	
  3932                           
  3933                           ;Ssms.c: 67:     state = 7;
  3934  0009F0  0E07               	movlw	7
  3935  0009F2  6E43               	movwf	SMotor@state^0,c
  3936  0009F4  0012               	return	
  3937  0009F6                     l3043:
  3938                           
  3939                           ;Ssms.c: 71:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  3940  0009F6  5077               	movf	_novaTecla^0,w,c
  3941  0009F8  0A80               	xorlw	128
  3942  0009FA  0F7E               	addlw	-130
  3943  0009FC  B0D8               	btfsc	status,0,c
  3944  0009FE  D003               	goto	u2520
  3945  000A00  5077               	movf	_novaTecla^0,w,c
  3946  000A02  A4D8               	btfss	status,2,c
  3947  000A04  D008               	goto	l3051
  3948  000A06                     u2520:
  3949  000A06  5077               	movf	_novaTecla^0,w,c
  3950  000A08  0A80               	xorlw	128
  3951  000A0A  0F76               	addlw	-138
  3952  000A0C  B0D8               	btfsc	status,0,c
  3953  000A0E  D003               	goto	l3051
  3954                           
  3955                           ;Ssms.c: 72:     state = 1;
  3956  000A10  0E01               	movlw	1
  3957  000A12  6E43               	movwf	SMotor@state^0,c
  3958                           
  3959                           ;Ssms.c: 73:    }
  3960  000A14  0012               	return	
  3961  000A16                     l3051:
  3962  000A16  5077               	movf	_novaTecla^0,w,c
  3963  000A18  0A80               	xorlw	128
  3964  000A1A  0F7E               	addlw	-130
  3965  000A1C  B0D8               	btfsc	status,0,c
  3966  000A1E  D008               	goto	l3061
  3967  000A20  2878               	incf	_lletraASCII^0,w,c
  3968  000A22  A4D8               	btfss	status,2,c
  3969  000A24  D005               	goto	l3061
  3970                           
  3971                           ;Ssms.c: 75:     MNovaLletra(novaTecla+48);
  3972  000A26  5077               	movf	_novaTecla^0,w,c
  3973  000A28  0F30               	addlw	48
  3974  000A2A  EC20  F00B         	call	_MNovaLletra
  3975  000A2E  D7C2               	goto	l3021
  3976  000A30                     l3061:
  3977  000A30  5077               	movf	_novaTecla^0,w,c
  3978  000A32  0A80               	xorlw	128
  3979  000A34  0F7E               	addlw	-130
  3980  000A36  B0D8               	btfsc	status,0,c
  3981  000A38  0012               	return	
  3982  000A3A  2878               	incf	_lletraASCII^0,w,c
  3983  000A3C  B4D8               	btfsc	status,2,c
  3984  000A3E  0012               	return	
  3985                           
  3986                           ;Ssms.c: 80:     MNovaLletra(lletraASCII);
  3987  000A40  5078               	movf	_lletraASCII^0,w,c
  3988  000A42  EC20  F00B         	call	_MNovaLletra
  3989                           
  3990                           ;Ssms.c: 81:     lletraASCII = -1;
  3991  000A46  6878               	setf	_lletraASCII^0,c
  3992                           
  3993                           ;Ssms.c: 82:     state = 4;
  3994  000A48  0E04               	movlw	4
  3995  000A4A  6E43               	movwf	SMotor@state^0,c
  3996  000A4C  0012               	return	
  3997  000A4E                     l3071:
  3998                           
  3999                           ;Ssms.c: 86:    MNovaLletra(novaTecla+48);
  4000  000A4E  5077               	movf	_novaTecla^0,w,c
  4001  000A50  0F30               	addlw	48
  4002  000A52  EC20  F00B         	call	_MNovaLletra
  4003  000A56  D7AE               	goto	l3021
  4004  000A58                     l3077:
  4005                           
  4006                           ;Ssms.c: 91:    if (sumaPulsacions == 4) {
  4007  000A58  0E04               	movlw	4
  4008  000A5A  1844               	xorwf	_sumaPulsacions^0,w,c
  4009  000A5C  A4D8               	btfss	status,2,c
  4010  000A5E  D009               	goto	l3085
  4011  000A60                     u2580:
  4012                           
  4013                           ;Ssms.c: 92:     lletraASCII = lletraInici[ultimaTecla-2];
  4014  000A60  5075               	movf	_ultimaTecla^0,w,c
  4015  000A62  0F66               	addlw	low (_lletraInici+254)
  4016  000A64  6ED9               	movwf	fsr2l,c
  4017  000A66  6ADA               	clrf	fsr2h,c
  4018  000A68  50DF               	movf	indf2,w,c
  4019  000A6A  6E78               	movwf	_lletraASCII^0,c
  4020                           
  4021                           ;Ssms.c: 93:     sumaPulsacions = 0;
  4022  000A6C  0E00               	movlw	0
  4023  000A6E  6E44               	movwf	_sumaPulsacions^0,c
  4024  000A70  D764               	goto	l2983
  4025  000A72                     l3085:
  4026  000A72  0E03               	movlw	3
  4027  000A74  1844               	xorwf	_sumaPulsacions^0,w,c
  4028  000A76  A4D8               	btfss	status,2,c
  4029  000A78  D004               	goto	l3091
  4030  000A7A                     u2590:
  4031                           
  4032                           ;Ssms.c: 97:     lletraASCII = ultimaTecla+48;
  4033  000A7A  5075               	movf	_ultimaTecla^0,w,c
  4034  000A7C  0F30               	addlw	48
  4035  000A7E  6E78               	movwf	_lletraASCII^0,c
  4036  000A80  D75C               	goto	l2983
  4037  000A82                     l3091:
  4038  000A82  0E03               	movlw	3
  4039  000A84                     L4:
  4040  000A84  6044               	cpfslt	_sumaPulsacions^0,c
  4041  000A86  0012               	return	
  4042  000A88  D758               	goto	l2983
  4043  000A8A                     l3095:
  4044                           
  4045                           ;Ssms.c: 105:    if (sumaPulsacions == 4) {
  4046  000A8A  0E04               	movlw	4
  4047  000A8C  1844               	xorwf	_sumaPulsacions^0,w,c
  4048  000A8E  B4D8               	btfsc	status,2,c
  4049  000A90  D7F4               	goto	u2590
  4050  000A92  0E05               	movlw	5
  4051  000A94  1844               	xorwf	_sumaPulsacions^0,w,c
  4052  000A96  B4D8               	btfsc	status,2,c
  4053  000A98  D7E3               	goto	u2580
  4054  000A9A  0E04               	movlw	4
  4055  000A9C  D7F3               	goto	L4
  4056  000A9E                     l3113:
  4057                           
  4058                           ;Ssms.c: 119:    if (sumaPulsacions == 2) {
  4059  000A9E  0E02               	movlw	2
  4060  000AA0  1844               	xorwf	_sumaPulsacions^0,w,c
  4061  000AA2  A4D8               	btfss	status,2,c
  4062  000AA4  D005               	goto	l3117
  4063                           
  4064                           ;Ssms.c: 120:     lletraASCII = ' ';
  4065  000AA6  0E20               	movlw	32
  4066  000AA8  6E78               	movwf	_lletraASCII^0,c
  4067                           
  4068                           ;Ssms.c: 121:     state = 0;
  4069  000AAA  0E00               	movlw	0
  4070  000AAC  6E43               	movwf	SMotor@state^0,c
  4071                           
  4072                           ;Ssms.c: 122:    }
  4073  000AAE  0012               	return	
  4074  000AB0                     l3117:
  4075  000AB0  0E03               	movlw	3
  4076  000AB2  1844               	xorwf	_sumaPulsacions^0,w,c
  4077  000AB4  A4D8               	btfss	status,2,c
  4078  000AB6  D007               	goto	l3121
  4079                           
  4080                           ;Ssms.c: 124:     lletraASCII = '0';
  4081  000AB8  0E30               	movlw	48
  4082  000ABA  6E78               	movwf	_lletraASCII^0,c
  4083                           
  4084                           ;Ssms.c: 125:     sumaPulsacions = 0;
  4085  000ABC  0E00               	movlw	0
  4086  000ABE  6E44               	movwf	_sumaPulsacions^0,c
  4087                           
  4088                           ;Ssms.c: 126:     state = 0;
  4089  000AC0  0E00               	movlw	0
  4090  000AC2  6E43               	movwf	SMotor@state^0,c
  4091                           
  4092                           ;Ssms.c: 127:    }
  4093  000AC4  0012               	return	
  4094  000AC6                     l3121:
  4095  000AC6  0E02               	movlw	2
  4096  000AC8  D7DD               	goto	L4
  4097  000ACA                     l3127:
  4098  000ACA  5043               	movf	SMotor@state^0,w,c
  4099  000ACC  6E60               	movwf	??_SMotor^0,c
  4100  000ACE  6A61               	clrf	(??_SMotor+1)^0,c
  4101                           
  4102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4103                           ; Switch size 1, requested type "simple"
  4104                           ; Number of cases is 1, Range of values is 0 to 0
  4105                           ; switch strategies available:
  4106                           ; Name         Instructions Cycles
  4107                           ; simple_byte            4     3 (average)
  4108                           ;	Chosen strategy is simple_byte
  4109  000AD0  5061               	movf	(??_SMotor+1)^0,w,c
  4110  000AD2  0A00               	xorlw	0	; case 0
  4111  000AD4  A4D8               	btfss	status,2,c
  4112  000AD6  0012               	return	
  4113                           
  4114                           ; Switch size 1, requested type "simple"
  4115                           ; Number of cases is 8, Range of values is 0 to 7
  4116                           ; switch strategies available:
  4117                           ; Name         Instructions Cycles
  4118                           ; simple_byte           25    13 (average)
  4119                           ;	Chosen strategy is simple_byte
  4120  000AD8  5060               	movf	??_SMotor^0,w,c
  4121  000ADA  0A00               	xorlw	0	; case 0
  4122  000ADC  B4D8               	btfsc	status,2,c
  4123  000ADE  D70B               	goto	l2961
  4124  000AE0  0A01               	xorlw	1	; case 1
  4125  000AE2  B4D8               	btfsc	status,2,c
  4126  000AE4  D72D               	goto	l2985
  4127  000AE6  0A03               	xorlw	3	; case 2
  4128  000AE8  B4D8               	btfsc	status,2,c
  4129  000AEA  D766               	goto	l3025
  4130  000AEC  0A01               	xorlw	1	; case 3
  4131  000AEE  B4D8               	btfsc	status,2,c
  4132  000AF0  D782               	goto	l3043
  4133  000AF2  0A07               	xorlw	7	; case 4
  4134  000AF4  B4D8               	btfsc	status,2,c
  4135  000AF6  D7AB               	goto	l3071
  4136  000AF8  0A01               	xorlw	1	; case 5
  4137  000AFA  B4D8               	btfsc	status,2,c
  4138  000AFC  D7AD               	goto	l3077
  4139  000AFE  0A03               	xorlw	3	; case 6
  4140  000B00  B4D8               	btfsc	status,2,c
  4141  000B02  D7C3               	goto	l3095
  4142  000B04  0A01               	xorlw	1	; case 7
  4143  000B06  A4D8               	btfss	status,2,c
  4144  000B08  0012               	return	
  4145  000B0A  D7C9               	goto	l3113
  4146  000B0C                     __end_of_SMotor:
  4147                           	callstack 0
  4148                           
  4149 ;; *************** function _MNovaLletra *****************
  4150 ;; Defined at:
  4151 ;;		line 23 in file "Menu.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  lletra          1    wreg     unsigned char 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  lletra          1    5[COMRAM] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1
  4165 ;;      Params:         0       0       0
  4166 ;;      Locals:         1       0       0
  4167 ;;      Temps:          0       0       0
  4168 ;;      Totals:         1       0       0
  4169 ;;Total ram usage:        1 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; Hardware stack levels required when called: 2
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_SMotor
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text28
  4180  001640                     __ptext28:
  4181                           	callstack 0
  4182  001640                     _MNovaLletra:
  4183                           	callstack 27
  4184                           
  4185                           ;incstack = 0
  4186                           ;MNovaLletra@lletra stored from wreg
  4187  001640  6E59               	movwf	MNovaLletra@lletra^0,c
  4188                           
  4189                           ;Menu.c: 24:     novaLletra = lletra;
  4190  001642  C059  F073         	movff	MNovaLletra@lletra,_novaLletra
  4191  001646  0012               	return		;funcret
  4192  001648                     __end_of_MNovaLletra:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function _Minit *****************
  4196 ;; Defined at:
  4197 ;;		line 16 in file "Menu.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;		None
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1
  4211 ;;      Params:         0       0       0
  4212 ;;      Locals:         0       0       0
  4213 ;;      Temps:          0       0       0
  4214 ;;      Totals:         0       0       0
  4215 ;;Total ram usage:        0 bytes
  4216 ;; Hardware stack levels used: 1
  4217 ;; Hardware stack levels required when called: 3
  4218 ;; This function calls:
  4219 ;;		_TiGetTimer
  4220 ;; This function is called by:
  4221 ;;		_main
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text29
  4226  001648                     __ptext29:
  4227                           	callstack 0
  4228  001648                     _Minit:
  4229                           	callstack 27
  4230                           
  4231                           ;Menu.c: 17:     timerMenu = TiGetTimer();
  4232                           
  4233                           ;incstack = 0
  4234  001648  ECCF  F009         	call	_TiGetTimer	;wreg free
  4235  00164C  6E3C               	movwf	_timerMenu^0,c
  4236  00164E  0012               	return		;funcret
  4237  001650                     __end_of_Minit:
  4238                           	callstack 0
  4239                           
  4240 ;; *************** function _LcLCD *****************
  4241 ;; Defined at:
  4242 ;;		line 244 in file "LcTLCD.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1
  4256 ;;      Params:         0       0       0
  4257 ;;      Locals:         0       0       0
  4258 ;;      Temps:          0       0       0
  4259 ;;      Totals:         0       0       0
  4260 ;;Total ram usage:        0 bytes
  4261 ;; Hardware stack levels used: 1
  4262 ;; Hardware stack levels required when called: 6
  4263 ;; This function calls:
  4264 ;;		_LcPutChar
  4265 ;; This function is called by:
  4266 ;;		_main
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text30
  4271  001474                     __ptext30:
  4272                           	callstack 0
  4273  001474                     _LcLCD:
  4274                           	callstack 24
  4275                           
  4276                           ;LcTLCD.c: 245:     if(nou_s == 1){
  4277                           
  4278                           ;incstack = 0
  4279  001474  AE79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  4280  001476  0012               	return	
  4281                           
  4282                           ;LcTLCD.c: 246:         LcPutChar(*s_ptr);
  4283  001478  C045  FFF6         	movff	_s_ptr,tblptrl
  4284  00147C                     	if	1	;There is more than 1 active tblptr byte
  4285  00147C  0E02               	movlw	high __smallconst
  4286  00147E  6EF7               	movwf	tblptrh,c
  4287  001480                     	endif
  4288  001480                     	if	0	;tblptru may be non-zero
  4289  001480                     	endif
  4290  001480                     	if	0	;tblptru may be non-zero
  4291  001480                     	endif
  4292  001480  0008               	tblrd		*
  4293  001482  50F5               	movf	tablat,w,c
  4294  001484  EC1E  F009         	call	_LcPutChar
  4295                           
  4296                           ;LcTLCD.c: 247:         s_ptr++;
  4297  001488  2A45               	incf	_s_ptr^0,f,c
  4298                           
  4299                           ;LcTLCD.c: 248:         if(*s_ptr == '\0'){
  4300  00148A  C045  FFF6         	movff	_s_ptr,tblptrl
  4301  00148E                     	if	1	;There is more than 1 active tblptr byte
  4302  00148E  0E02               	movlw	high __smallconst
  4303  001490  6EF7               	movwf	tblptrh,c
  4304  001492                     	endif
  4305  001492                     	if	0	;tblptru may be non-zero
  4306  001492                     	endif
  4307  001492                     	if	0	;tblptru may be non-zero
  4308  001492                     	endif
  4309  001492  0008               	tblrd		*
  4310  001494  50F5               	movf	tablat,w,c
  4311  001496  0900               	iorlw	0
  4312  001498  A4D8               	btfss	status,2,c
  4313  00149A  0012               	return	
  4314                           
  4315                           ;LcTLCD.c: 249:             nou_s = 0;
  4316  00149C  9E79               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  4317                           
  4318                           ;LcTLCD.c: 250:             s_ptr=0;
  4319  00149E  0E00               	movlw	0
  4320  0014A0  6E45               	movwf	_s_ptr^0,c
  4321  0014A2  0012               	return		;funcret
  4322  0014A4                     __end_of_LcLCD:
  4323                           	callstack 0
  4324                           
  4325 ;; *************** function _LcInit *****************
  4326 ;; Defined at:
  4327 ;;		line 41 in file "LcTLCD.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  rows            1    wreg     unsigned char 
  4330 ;;  columns         1   16[COMRAM] unsigned char 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  rows            1   17[COMRAM] unsigned char 
  4333 ;;  i               2   18[COMRAM] int 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1
  4343 ;;      Params:         1       0       0
  4344 ;;      Locals:         3       0       0
  4345 ;;      Temps:          0       0       0
  4346 ;;      Totals:         4       0       0
  4347 ;;Total ram usage:        4 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 5
  4350 ;; This function calls:
  4351 ;;		_CantaIR
  4352 ;;		_EscriuPrimeraOrdre
  4353 ;;		_Espera
  4354 ;;		_LcCursorOff
  4355 ;;		_TiGetTimer
  4356 ;;		_WaitForBusy
  4357 ;; This function is called by:
  4358 ;;		_main
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text31
  4363  000DEC                     __ptext31:
  4364                           	callstack 0
  4365  000DEC                     _LcInit:
  4366                           	callstack 25
  4367                           
  4368                           ;incstack = 0
  4369                           ;LcInit@rows stored from wreg
  4370  000DEC  6E65               	movwf	LcInit@rows^0,c
  4371                           
  4372                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  4373  000DEE  ECCF  F009         	call	_TiGetTimer	;wreg free
  4374  000DF2  6E46               	movwf	_Timer^0,c
  4375                           
  4376                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  4377  000DF4  C065  F04A         	movff	LcInit@rows,_Rows
  4378  000DF8  C064  F049         	movff	LcInit@columns,_Columns
  4379                           
  4380                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  4381  000DFC  0E00               	movlw	0
  4382  000DFE  6E47               	movwf	_ColumnAct^0,c
  4383  000E00  C047  F048         	movff	_ColumnAct,_RowAct
  4384                           
  4385                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  4386  000E04  9894               	bcf	148,4,c	;volatile
  4387  000E06  9E95               	bcf	149,7,c	;volatile
  4388  000E08  9A94               	bcf	148,5,c	;volatile
  4389                           
  4390                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  4391  000E0A  0E00               	movlw	0
  4392  000E0C  6E67               	movwf	(LcInit@i+1)^0,c
  4393  000E0E  0E00               	movlw	0
  4394  000E10  6E66               	movwf	LcInit@i^0,c
  4395  000E12                     l2913:
  4396                           
  4397                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  4398  000E12  0E00               	movlw	0
  4399  000E14  6E61               	movwf	(Espera@ms+1)^0,c
  4400  000E16  0E64               	movlw	100
  4401  000E18  6E60               	movwf	Espera@ms^0,c
  4402  000E1A  5046               	movf	_Timer^0,w,c
  4403  000E1C  ECA3  F00A         	call	_Espera
  4404                           
  4405                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  4406  000E20  0E03               	movlw	3
  4407  000E22  EC18  F008         	call	_EscriuPrimeraOrdre
  4408                           
  4409                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  4410  000E26  0E00               	movlw	0
  4411  000E28  6E61               	movwf	(Espera@ms+1)^0,c
  4412  000E2A  0E05               	movlw	5
  4413  000E2C  6E60               	movwf	Espera@ms^0,c
  4414  000E2E  5046               	movf	_Timer^0,w,c
  4415  000E30  ECA3  F00A         	call	_Espera
  4416                           
  4417                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  4418  000E34  0E03               	movlw	3
  4419  000E36  EC18  F008         	call	_EscriuPrimeraOrdre
  4420                           
  4421                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  4422  000E3A  0E00               	movlw	0
  4423  000E3C  6E61               	movwf	(Espera@ms+1)^0,c
  4424  000E3E  0E01               	movlw	1
  4425  000E40  6E60               	movwf	Espera@ms^0,c
  4426  000E42  5046               	movf	_Timer^0,w,c
  4427  000E44  ECA3  F00A         	call	_Espera
  4428                           
  4429                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  4430  000E48  0E03               	movlw	3
  4431  000E4A  EC18  F008         	call	_EscriuPrimeraOrdre
  4432                           
  4433                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  4434  000E4E  0E00               	movlw	0
  4435  000E50  6E61               	movwf	(Espera@ms+1)^0,c
  4436  000E52  0E01               	movlw	1
  4437  000E54  6E60               	movwf	Espera@ms^0,c
  4438  000E56  5046               	movf	_Timer^0,w,c
  4439  000E58  ECA3  F00A         	call	_Espera
  4440                           
  4441                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  4442  000E5C  0E02               	movlw	2
  4443  000E5E  EC18  F008         	call	_EscriuPrimeraOrdre
  4444                           
  4445                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  4446  000E62  0E00               	movlw	0
  4447  000E64  6E61               	movwf	(Espera@ms+1)^0,c
  4448  000E66  0E04               	movlw	4
  4449  000E68  6E60               	movwf	Espera@ms^0,c
  4450  000E6A  5046               	movf	_Timer^0,w,c
  4451  000E6C  ECA3  F00A         	call	_Espera
  4452                           
  4453                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  4454  000E70  0E28               	movlw	40
  4455  000E72  EC21  F00A         	call	_CantaIR
  4456                           
  4457                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  4458  000E76  EC92  F009         	call	_WaitForBusy	;wreg free
  4459  000E7A  0E08               	movlw	8
  4460  000E7C  EC21  F00A         	call	_CantaIR
  4461                           
  4462                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  4463  000E80  EC92  F009         	call	_WaitForBusy	;wreg free
  4464  000E84  0E01               	movlw	1
  4465  000E86  EC21  F00A         	call	_CantaIR
  4466                           
  4467                           ;LcTLCD.c: 71:   Espera(Timer,3);
  4468  000E8A  0E00               	movlw	0
  4469  000E8C  6E61               	movwf	(Espera@ms+1)^0,c
  4470  000E8E  0E03               	movlw	3
  4471  000E90  6E60               	movwf	Espera@ms^0,c
  4472  000E92  5046               	movf	_Timer^0,w,c
  4473  000E94  ECA3  F00A         	call	_Espera
  4474                           
  4475                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  4476  000E98  EC92  F009         	call	_WaitForBusy	;wreg free
  4477  000E9C  0E06               	movlw	6
  4478  000E9E  EC21  F00A         	call	_CantaIR
  4479                           
  4480                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  4481  000EA2  EC92  F009         	call	_WaitForBusy	;wreg free
  4482  000EA6  0E0F               	movlw	15
  4483  000EA8  EC21  F00A         	call	_CantaIR
  4484                           
  4485                           ;LcTLCD.c: 74:  }
  4486  000EAC  4A66               	infsnz	LcInit@i^0,f,c
  4487  000EAE  2A67               	incf	(LcInit@i+1)^0,f,c
  4488  000EB0  BE67               	btfsc	(LcInit@i+1)^0,7,c
  4489  000EB2  D7AF               	goto	l2913
  4490  000EB4  5067               	movf	(LcInit@i+1)^0,w,c
  4491  000EB6  E104               	bnz	u2280
  4492  000EB8  0E02               	movlw	2
  4493  000EBA  5C66               	subwf	LcInit@i^0,w,c
  4494  000EBC  A0D8               	btfss	status,0,c
  4495  000EBE  D7A9               	goto	l2913
  4496  000EC0                     u2280:
  4497                           
  4498                           ;LcTLCD.c: 79:     LcCursorOff();
  4499  000EC0  ECFC  F00A         	call	_LcCursorOff	;wreg free
  4500  000EC4  0012               	return		;funcret
  4501  000EC6                     __end_of_LcInit:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function _LcCursorOff *****************
  4505 ;; Defined at:
  4506 ;;		line 97 in file "LcTLCD.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1
  4520 ;;      Params:         0       0       0
  4521 ;;      Locals:         0       0       0
  4522 ;;      Temps:          0       0       0
  4523 ;;      Totals:         0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; Hardware stack levels required when called: 4
  4527 ;; This function calls:
  4528 ;;		_CantaIR
  4529 ;;		_WaitForBusy
  4530 ;; This function is called by:
  4531 ;;		_LcInit
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text32
  4536  0015F8                     __ptext32:
  4537                           	callstack 0
  4538  0015F8                     _LcCursorOff:
  4539                           	callstack 25
  4540                           
  4541                           ;LcTLCD.c: 100:  WaitForBusy();
  4542                           
  4543                           ;incstack = 0
  4544  0015F8  EC92  F009         	call	_WaitForBusy	;wreg free
  4545                           
  4546                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  4547  0015FC  0E0C               	movlw	12
  4548  0015FE  EC21  F00A         	call	_CantaIR
  4549  001602  0012               	return		;funcret
  4550  001604                     __end_of_LcCursorOff:
  4551                           	callstack 0
  4552                           
  4553 ;; *************** function _EscriuPrimeraOrdre *****************
  4554 ;; Defined at:
  4555 ;;		line 228 in file "LcTLCD.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  ordre           1    wreg     unsigned char 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  ordre           1    6[COMRAM] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1
  4569 ;;      Params:         0       0       0
  4570 ;;      Locals:         1       0       0
  4571 ;;      Temps:          1       0       0
  4572 ;;      Totals:         2       0       0
  4573 ;;Total ram usage:        2 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; Hardware stack levels required when called: 2
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_LcInit
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text33
  4584  001030                     __ptext33:
  4585                           	callstack 0
  4586  001030                     _EscriuPrimeraOrdre:
  4587                           	callstack 27
  4588                           
  4589                           ;incstack = 0
  4590                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4591  001030  6E5A               	movwf	EscriuPrimeraOrdre@ordre^0,c
  4592                           
  4593                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  4594  001032  9694               	bcf	148,3,c	;volatile
  4595  001034  9494               	bcf	148,2,c	;volatile
  4596  001036  9294               	bcf	148,1,c	;volatile
  4597  001038  9094               	bcf	148,0,c	;volatile
  4598  00103A  9A8B               	bcf	139,5,c	;volatile
  4599  00103C  9E8C               	bcf	140,7,c	;volatile
  4600                           
  4601                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  4602  00103E  888B               	bsf	139,4,c	;volatile
  4603  001040  888B               	bsf	139,4,c	;volatile
  4604                           
  4605                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  4606  001042  A65A               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4607  001044  D003               	goto	u230
  4608  001046  6A59               	clrf	??_EscriuPrimeraOrdre^0,c
  4609  001048  2A59               	incf	??_EscriuPrimeraOrdre^0,f,c
  4610  00104A  D001               	goto	u248
  4611  00104C                     u230:
  4612  00104C  6A59               	clrf	??_EscriuPrimeraOrdre^0,c
  4613  00104E                     u248:
  4614  00104E  4659               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4615  001050  4659               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4616  001052  4659               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4617  001054  508B               	movf	139,w,c	;volatile
  4618  001056  1859               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4619  001058  0BF7               	andlw	-9
  4620  00105A  1859               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4621  00105C  6E8B               	movwf	139,c	;volatile
  4622                           
  4623                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  4624  00105E  A45A               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4625  001060  D003               	goto	u250
  4626  001062  6A59               	clrf	??_EscriuPrimeraOrdre^0,c
  4627  001064  2A59               	incf	??_EscriuPrimeraOrdre^0,f,c
  4628  001066  D001               	goto	u268
  4629  001068                     u250:
  4630  001068  6A59               	clrf	??_EscriuPrimeraOrdre^0,c
  4631  00106A                     u268:
  4632  00106A  4659               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4633  00106C  4659               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4634  00106E  508B               	movf	139,w,c	;volatile
  4635  001070  1859               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4636  001072  0BFB               	andlw	-5
  4637  001074  1859               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4638  001076  6E8B               	movwf	139,c	;volatile
  4639                           
  4640                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  4641  001078  A25A               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4642  00107A  D003               	goto	u270
  4643  00107C  6A59               	clrf	??_EscriuPrimeraOrdre^0,c
  4644  00107E  2A59               	incf	??_EscriuPrimeraOrdre^0,f,c
  4645  001080  D001               	goto	u288
  4646  001082                     u270:
  4647  001082  6A59               	clrf	??_EscriuPrimeraOrdre^0,c
  4648  001084                     u288:
  4649  001084  4659               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4650  001086  508B               	movf	139,w,c	;volatile
  4651  001088  1859               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4652  00108A  0BFD               	andlw	-3
  4653  00108C  1859               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4654  00108E  6E8B               	movwf	139,c	;volatile
  4655                           
  4656                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  4657  001090  A05A               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4658  001092  D003               	goto	u290
  4659  001094  6A59               	clrf	??_EscriuPrimeraOrdre^0,c
  4660  001096  2A59               	incf	??_EscriuPrimeraOrdre^0,f,c
  4661  001098  D001               	goto	u308
  4662  00109A                     u290:
  4663  00109A  6A59               	clrf	??_EscriuPrimeraOrdre^0,c
  4664  00109C                     u308:
  4665  00109C  508B               	movf	139,w,c	;volatile
  4666  00109E  1859               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4667  0010A0  0BFE               	andlw	-2
  4668  0010A2  1859               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4669  0010A4  6E8B               	movwf	139,c	;volatile
  4670                           
  4671                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  4672  0010A6  988B               	bcf	139,4,c	;volatile
  4673  0010A8  0012               	return		;funcret
  4674  0010AA                     __end_of_EscriuPrimeraOrdre:
  4675                           	callstack 0
  4676                           
  4677 ;; *************** function _GLCDMotor *****************
  4678 ;; Defined at:
  4679 ;;		line 36 in file "GestioLCD.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;		None
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;		None
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMRAM   BANK0   BANK1
  4693 ;;      Params:         0       0       0
  4694 ;;      Locals:         0       0       0
  4695 ;;      Temps:          0       2       0
  4696 ;;      Totals:         0       2       0
  4697 ;;Total ram usage:        2 bytes
  4698 ;; Hardware stack levels used: 1
  4699 ;; Hardware stack levels required when called: 6
  4700 ;; This function calls:
  4701 ;;		_LcClear
  4702 ;;		_LcGotoXY
  4703 ;;		_LcLliure
  4704 ;;		_LcNewString
  4705 ;;		_LcPutChar
  4706 ;;		_TiGetTics
  4707 ;;		_TiResetTics
  4708 ;; This function is called by:
  4709 ;;		_main
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text34
  4714  000292                     __ptext34:
  4715                           	callstack 0
  4716  000292                     _GLCDMotor:
  4717                           	callstack 24
  4718                           
  4719                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  4720                           
  4721                           ;incstack = 0
  4722  000292  D1B0               	goto	l4183
  4723  000294                     l3997:
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  4727  000294  0E11               	movlw	17
  4728  000296  6025               	cpfslt	GLCDMotor@length1^0,c
  4729  000298  D011               	goto	l4007
  4730                           
  4731                           ; BSR set to: 0
  4732  00029A  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4733  00029C  D00F               	goto	l4007
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  4737  00029E  0E00               	movlw	0
  4738  0002A0  6E61               	movwf	LcGotoXY@Row^0,c
  4739  0002A2  0E00               	movlw	0
  4740  0002A4  ECB2  F009         	call	_LcGotoXY
  4741                           
  4742                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  4743  0002A8  502C               	movf	_menuDaltGLCD^0,w,c
  4744  0002AA  0D16               	mullw	22
  4745  0002AC  50F3               	movf	243,w,c
  4746  0002AE  0F01               	addlw	low _menuList
  4747  0002B0  6E59               	movwf	LcNewString@new_s^0,c
  4748  0002B2  EC28  F00B         	call	_LcNewString	;wreg free
  4749                           
  4750                           ;GestioLCD.c: 53:     state = 5;
  4751  0002B6  0E05               	movlw	5
  4752  0002B8  6E2B               	movwf	GLCDMotor@state^0,c
  4753                           
  4754                           ;GestioLCD.c: 54:    }
  4755  0002BA  0012               	return	
  4756  0002BC                     l4007:
  4757                           
  4758                           ; BSR set to: 0
  4759  0002BC  0E10               	movlw	16
  4760  0002BE  6425               	cpfsgt	GLCDMotor@length1^0,c
  4761  0002C0  0012               	return	
  4762                           
  4763                           ; BSR set to: 0
  4764  0002C2  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4765  0002C4  0012               	return	
  4766  0002C6                     u4090:
  4767                           
  4768                           ;GestioLCD.c: 56:     state++;
  4769  0002C6  2A2B               	incf	GLCDMotor@state^0,f,c
  4770  0002C8  0012               	return	
  4771  0002CA                     l4013:
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;GestioLCD.c: 60:    if (j>=16) {
  4775  0002CA  0E0F               	movlw	15
  4776  0002CC  642A               	cpfsgt	GLCDMotor@j^0,c
  4777  0002CE  D02B               	goto	l4027
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;GestioLCD.c: 61:     min1++;
  4781  0002D0  2A29               	incf	GLCDMotor@min1^0,f,c
  4782                           
  4783                           ;GestioLCD.c: 62:     max1++;
  4784  0002D2  2A72               	incf	GLCDMotor@max1^0,f,c
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  4788  0002D4  502C               	movf	_menuDaltGLCD^0,w,c
  4789  0002D6  0D16               	mullw	22
  4790  0002D8  50F3               	movf	243,w,c
  4791  0002DA  0F01               	addlw	low _menuList
  4792  0002DC  2472               	addwf	GLCDMotor@max1^0,w,c
  4793  0002DE  6F8C               	movwf	??_GLCDMotor& (0+255),b
  4794  0002E0  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  4795  0002E4                     	if	1	;There is more than 1 active tblptr byte
  4796  0002E4  0E02               	movlw	high __smallconst
  4797  0002E6  6EF7               	movwf	tblptrh,c
  4798  0002E8                     	endif
  4799  0002E8                     	if	0	;tblptru may be non-zero
  4800  0002E8                     	endif
  4801  0002E8                     	if	0	;tblptru may be non-zero
  4802  0002E8                     	endif
  4803  0002E8  0008               	tblrd		*
  4804  0002EA  50F5               	movf	tablat,w,c
  4805  0002EC  0900               	iorlw	0
  4806  0002EE  A4D8               	btfss	status,2,c
  4807  0002F0  D002               	goto	l4021
  4808                           
  4809                           ; BSR set to: 0
  4810  0002F2  0E00               	movlw	0
  4811  0002F4  6E72               	movwf	GLCDMotor@max1^0,c
  4812  0002F6                     l4021:
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  4816  0002F6  502C               	movf	_menuDaltGLCD^0,w,c
  4817  0002F8  0D16               	mullw	22
  4818  0002FA  50F3               	movf	243,w,c
  4819  0002FC  0F01               	addlw	low _menuList
  4820  0002FE  2429               	addwf	GLCDMotor@min1^0,w,c
  4821  000300  6F8C               	movwf	??_GLCDMotor& (0+255),b
  4822  000302  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  4823  000306                     	if	1	;There is more than 1 active tblptr byte
  4824  000306  0E02               	movlw	high __smallconst
  4825  000308  6EF7               	movwf	tblptrh,c
  4826  00030A                     	endif
  4827  00030A                     	if	0	;tblptru may be non-zero
  4828  00030A                     	endif
  4829  00030A                     	if	0	;tblptru may be non-zero
  4830  00030A                     	endif
  4831  00030A  0008               	tblrd		*
  4832  00030C  50F5               	movf	tablat,w,c
  4833  00030E  0900               	iorlw	0
  4834  000310  A4D8               	btfss	status,2,c
  4835  000312  D002               	goto	l721
  4836                           
  4837                           ; BSR set to: 0
  4838  000314  0E00               	movlw	0
  4839  000316  6E29               	movwf	GLCDMotor@min1^0,c
  4840  000318                     l721:
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;GestioLCD.c: 65:     j=0;
  4844  000318  0E00               	movlw	0
  4845  00031A  6E2A               	movwf	GLCDMotor@j^0,c
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;GestioLCD.c: 66:     k1=min1;
  4849  00031C  C029  F027         	movff	GLCDMotor@min1,GLCDMotor@k1
  4850                           
  4851                           ;GestioLCD.c: 67:     state = 6;
  4852  000320  0E06               	movlw	6
  4853  000322  6E2B               	movwf	GLCDMotor@state^0,c
  4854                           
  4855                           ;GestioLCD.c: 68:    }
  4856  000324  0012               	return	
  4857  000326                     l4027:
  4858                           
  4859                           ; BSR set to: 0
  4860  000326  0E10               	movlw	16
  4861  000328  602A               	cpfslt	GLCDMotor@j^0,c
  4862  00032A  0012               	return	
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  4866  00032C  0E00               	movlw	0
  4867  00032E  6E61               	movwf	LcGotoXY@Row^0,c
  4868  000330  502A               	movf	GLCDMotor@j^0,w,c
  4869  000332  ECB2  F009         	call	_LcGotoXY
  4870                           
  4871                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  4872  000336  502C               	movf	_menuDaltGLCD^0,w,c
  4873  000338  0D16               	mullw	22
  4874  00033A  50F3               	movf	243,w,c
  4875  00033C  0F01               	addlw	low _menuList
  4876  00033E  2427               	addwf	GLCDMotor@k1^0,w,c
  4877  000340  0100               	movlb	0	; () banked
  4878  000342  6F8C               	movwf	??_GLCDMotor& (0+255),b
  4879  000344  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  4880  000348                     	if	1	;There is more than 1 active tblptr byte
  4881  000348  0E02               	movlw	high __smallconst
  4882  00034A  6EF7               	movwf	tblptrh,c
  4883  00034C                     	endif
  4884  00034C                     	if	0	;tblptru may be non-zero
  4885  00034C                     	endif
  4886  00034C                     	if	0	;tblptru may be non-zero
  4887  00034C                     	endif
  4888  00034C  0008               	tblrd		*
  4889  00034E  50F5               	movf	tablat,w,c
  4890  000350  EC1E  F009         	call	_LcPutChar
  4891                           
  4892                           ;GestioLCD.c: 72:     j++;
  4893  000354  2A2A               	incf	GLCDMotor@j^0,f,c
  4894                           
  4895                           ;GestioLCD.c: 73:     k1++;
  4896  000356  2A27               	incf	GLCDMotor@k1^0,f,c
  4897                           
  4898                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  4899  000358  502C               	movf	_menuDaltGLCD^0,w,c
  4900  00035A  0D16               	mullw	22
  4901  00035C  50F3               	movf	243,w,c
  4902  00035E  0F01               	addlw	low _menuList
  4903  000360  2427               	addwf	GLCDMotor@k1^0,w,c
  4904  000362  0100               	movlb	0	; () banked
  4905  000364  6F8C               	movwf	??_GLCDMotor& (0+255),b
  4906  000366  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  4907  00036A                     	if	1	;There is more than 1 active tblptr byte
  4908  00036A  0E02               	movlw	high __smallconst
  4909  00036C  6EF7               	movwf	tblptrh,c
  4910  00036E                     	endif
  4911  00036E                     	if	0	;tblptru may be non-zero
  4912  00036E                     	endif
  4913  00036E                     	if	0	;tblptru may be non-zero
  4914  00036E                     	endif
  4915  00036E  0008               	tblrd		*
  4916  000370  50F5               	movf	tablat,w,c
  4917  000372  0900               	iorlw	0
  4918  000374  A4D8               	btfss	status,2,c
  4919  000376  0012               	return	
  4920                           
  4921                           ; BSR set to: 0
  4922  000378  0E00               	movlw	0
  4923  00037A  6E27               	movwf	GLCDMotor@k1^0,c
  4924  00037C  0012               	return	
  4925  00037E                     l4041:
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;GestioLCD.c: 78:    if (menuDaltGLCD<5) {
  4929  00037E  0E05               	movlw	5
  4930  000380  602C               	cpfslt	_menuDaltGLCD^0,c
  4931  000382  D012               	goto	u4190
  4932  000384  D7A0               	goto	u4090
  4933  000386                     u4160:
  4934                           
  4935                           ;GestioLCD.c: 82:     state = 0;
  4936  000386  0E00               	movlw	0
  4937  000388  6E2B               	movwf	GLCDMotor@state^0,c
  4938  00038A  0012               	return	
  4939  00038C                     l4049:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<5) {
  4943  00038C  EC02  F00B         	call	_LcLliure	;wreg free
  4944  000390  A0D8               	btfss	status,0,c
  4945  000392  D006               	goto	l4055
  4946  000394  0E05               	movlw	5
  4947  000396  602C               	cpfslt	_menuDaltGLCD^0,c
  4948  000398  D003               	goto	l4055
  4949                           
  4950                           ;GestioLCD.c: 87:     state = 7;
  4951  00039A  0E07               	movlw	7
  4952  00039C  6E2B               	movwf	GLCDMotor@state^0,c
  4953                           
  4954                           ;GestioLCD.c: 88:    }
  4955  00039E  0012               	return	
  4956  0003A0                     l4055:
  4957  0003A0  EC02  F00B         	call	_LcLliure	;wreg free
  4958  0003A4  A0D8               	btfss	status,0,c
  4959  0003A6  0012               	return	
  4960  0003A8                     u4190:
  4961  0003A8  0E04               	movlw	4
  4962  0003AA  642C               	cpfsgt	_menuDaltGLCD^0,c
  4963  0003AC  0012               	return	
  4964  0003AE  D7EB               	goto	u4160
  4965  0003B0                     l733:
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  4969  0003B0  A079               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  4970  0003B2  0012               	return	
  4971                           
  4972                           ; BSR set to: 0
  4973  0003B4  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4974  0003B6  0012               	return	
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;GestioLCD.c: 95:     length1 = 0;
  4978  0003B8  0E00               	movlw	0
  4979  0003BA  6E25               	movwf	GLCDMotor@length1^0,c
  4980                           
  4981                           ;GestioLCD.c: 96:     length2 = 0;
  4982  0003BC  0E00               	movlw	0
  4983  0003BE  6E24               	movwf	GLCDMotor@length2^0,c
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  4987  0003C0  0E00               	movlw	0
  4988  0003C2  6E61               	movwf	LcGotoXY@Row^0,c
  4989  0003C4  0E00               	movlw	0
  4990  0003C6  ECB2  F009         	call	_LcGotoXY
  4991                           
  4992                           ;GestioLCD.c: 98:     min1 = 0;
  4993  0003CA  0E00               	movlw	0
  4994  0003CC  6E29               	movwf	GLCDMotor@min1^0,c
  4995                           
  4996                           ;GestioLCD.c: 99:     max1 = 15;
  4997  0003CE  0E0F               	movlw	15
  4998  0003D0  6E72               	movwf	GLCDMotor@max1^0,c
  4999                           
  5000                           ;GestioLCD.c: 100:     min2 = 0;
  5001  0003D2  0E00               	movlw	0
  5002  0003D4  6E28               	movwf	GLCDMotor@min2^0,c
  5003                           
  5004                           ;GestioLCD.c: 101:     max2 = 15;
  5005  0003D6  0E0F               	movlw	15
  5006  0003D8  6E71               	movwf	GLCDMotor@max2^0,c
  5007                           
  5008                           ;GestioLCD.c: 102:     j = 0;
  5009  0003DA  0E00               	movlw	0
  5010  0003DC  6E2A               	movwf	GLCDMotor@j^0,c
  5011                           
  5012                           ;GestioLCD.c: 103:     k1 = 0;
  5013  0003DE  0E00               	movlw	0
  5014  0003E0  6E27               	movwf	GLCDMotor@k1^0,c
  5015                           
  5016                           ;GestioLCD.c: 104:     k2 = 0;
  5017  0003E2  0E00               	movlw	0
  5018  0003E4  6E26               	movwf	GLCDMotor@k2^0,c
  5019                           
  5020                           ;GestioLCD.c: 105:     newString = 0;
  5021  0003E6  9079               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  5022  0003E8  D76E               	goto	u4090
  5023  0003EA                     l4085:
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=5) {
  5027  0003EA  502C               	movf	_menuDaltGLCD^0,w,c
  5028  0003EC  0D16               	mullw	22
  5029  0003EE  50F3               	movf	243,w,c
  5030  0003F0  0F01               	addlw	low _menuList
  5031  0003F2  2425               	addwf	GLCDMotor@length1^0,w,c
  5032  0003F4  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5033  0003F6  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5034  0003FA                     	if	1	;There is more than 1 active tblptr byte
  5035  0003FA  0E02               	movlw	high __smallconst
  5036  0003FC  6EF7               	movwf	tblptrh,c
  5037  0003FE                     	endif
  5038  0003FE                     	if	0	;tblptru may be non-zero
  5039  0003FE                     	endif
  5040  0003FE                     	if	0	;tblptru may be non-zero
  5041  0003FE                     	endif
  5042  0003FE  0008               	tblrd		*
  5043  000400  50F5               	movf	tablat,w,c
  5044  000402  0900               	iorlw	0
  5045  000404  A4D8               	btfss	status,2,c
  5046  000406  D004               	goto	l4091
  5047                           
  5048                           ; BSR set to: 0
  5049  000408  0E04               	movlw	4
  5050  00040A  642C               	cpfsgt	_menuDaltGLCD^0,c
  5051  00040C  D001               	goto	l4091
  5052  00040E  D75B               	goto	u4090
  5053  000410                     l4091:
  5054                           
  5055                           ; BSR set to: 0
  5056  000410  502C               	movf	_menuDaltGLCD^0,w,c
  5057  000412  0D16               	mullw	22
  5058  000414  50F3               	movf	243,w,c
  5059  000416  0F01               	addlw	low _menuList
  5060  000418  2425               	addwf	GLCDMotor@length1^0,w,c
  5061  00041A  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5062  00041C  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5063  000420                     	if	1	;There is more than 1 active tblptr byte
  5064  000420  0E02               	movlw	high __smallconst
  5065  000422  6EF7               	movwf	tblptrh,c
  5066  000424                     	endif
  5067  000424                     	if	0	;tblptru may be non-zero
  5068  000424                     	endif
  5069  000424                     	if	0	;tblptru may be non-zero
  5070  000424                     	endif
  5071  000424  0008               	tblrd		*
  5072  000426  50F5               	movf	tablat,w,c
  5073  000428  0900               	iorlw	0
  5074  00042A  B4D8               	btfsc	status,2,c
  5075  00042C  D002               	goto	l4095
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;GestioLCD.c: 114:     length1++;
  5079  00042E  2A25               	incf	GLCDMotor@length1^0,f,c
  5080                           
  5081                           ;GestioLCD.c: 115:    }
  5082  000430  0012               	return	
  5083  000432                     l4095:
  5084                           
  5085                           ; BSR set to: 0
  5086  000432  0E05               	movlw	5
  5087  000434  602C               	cpfslt	_menuDaltGLCD^0,c
  5088  000436  0012               	return	
  5089                           
  5090                           ; BSR set to: 0
  5091  000438  502C               	movf	_menuDaltGLCD^0,w,c
  5092  00043A  0D16               	mullw	22
  5093  00043C  50F3               	movf	243,w,c
  5094  00043E  0F01               	addlw	low _menuList
  5095  000440  2425               	addwf	GLCDMotor@length1^0,w,c
  5096  000442  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5097  000444  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5098  000448                     	if	1	;There is more than 1 active tblptr byte
  5099  000448  0E02               	movlw	high __smallconst
  5100  00044A  6EF7               	movwf	tblptrh,c
  5101  00044C                     	endif
  5102  00044C                     	if	0	;tblptru may be non-zero
  5103  00044C                     	endif
  5104  00044C                     	if	0	;tblptru may be non-zero
  5105  00044C                     	endif
  5106  00044C  0008               	tblrd		*
  5107  00044E  50F5               	movf	tablat,w,c
  5108  000450  0900               	iorlw	0
  5109  000452  A4D8               	btfss	status,2,c
  5110  000454  0012               	return	
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;GestioLCD.c: 117:     state = 13;
  5114  000456  0E0D               	movlw	13
  5115  000458  6E2B               	movwf	GLCDMotor@state^0,c
  5116  00045A  0012               	return	
  5117  00045C                     l4101:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  5121  00045C  0E11               	movlw	17
  5122  00045E  6024               	cpfslt	GLCDMotor@length2^0,c
  5123  000460  D014               	goto	l4111
  5124                           
  5125                           ; BSR set to: 0
  5126  000462  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5127  000464  D012               	goto	l4111
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  5131  000466  0E01               	movlw	1
  5132  000468  6E61               	movwf	LcGotoXY@Row^0,c
  5133  00046A  0E00               	movlw	0
  5134  00046C  ECB2  F009         	call	_LcGotoXY
  5135                           
  5136                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  5137  000470  502C               	movf	_menuDaltGLCD^0,w,c
  5138  000472  0D16               	mullw	22
  5139  000474  CFF3 F08C          	movff	prodl,??_GLCDMotor
  5140  000478  0E16               	movlw	22
  5141  00047A  0100               	movlb	0	; () banked
  5142  00047C  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5143  00047E  518C               	movf	??_GLCDMotor& (0+255),w,b
  5144  000480  0F01               	addlw	low _menuList
  5145  000482  6E59               	movwf	LcNewString@new_s^0,c
  5146  000484  EC28  F00B         	call	_LcNewString	;wreg free
  5147  000488  D71E               	goto	u4090
  5148  00048A                     l4111:
  5149                           
  5150                           ; BSR set to: 0
  5151  00048A  0E10               	movlw	16
  5152  00048C  6424               	cpfsgt	GLCDMotor@length2^0,c
  5153  00048E  0012               	return	
  5154                           
  5155                           ; BSR set to: 0
  5156  000490  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5157  000492  0012               	return	
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;GestioLCD.c: 127:     state = 9;
  5161  000494  0E09               	movlw	9
  5162  000496  6E2B               	movwf	GLCDMotor@state^0,c
  5163  000498  0012               	return	
  5164  00049A                     l4117:
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;GestioLCD.c: 131:    if (j<16) {
  5168  00049A  0E10               	movlw	16
  5169  00049C  602A               	cpfslt	GLCDMotor@j^0,c
  5170  00049E  D02D               	goto	l4131
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  5174  0004A0  0E01               	movlw	1
  5175  0004A2  6E61               	movwf	LcGotoXY@Row^0,c
  5176  0004A4  502A               	movf	GLCDMotor@j^0,w,c
  5177  0004A6  ECB2  F009         	call	_LcGotoXY
  5178                           
  5179                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  5180  0004AA  502C               	movf	_menuDaltGLCD^0,w,c
  5181  0004AC  0D16               	mullw	22
  5182  0004AE  50F3               	movf	243,w,c
  5183  0004B0  0F01               	addlw	low _menuList
  5184  0004B2  2426               	addwf	GLCDMotor@k2^0,w,c
  5185  0004B4  0100               	movlb	0	; () banked
  5186  0004B6  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5187  0004B8  0E16               	movlw	22
  5188  0004BA  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5189  0004BC  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5190  0004C0                     	if	1	;There is more than 1 active tblptr byte
  5191  0004C0  0E02               	movlw	high __smallconst
  5192  0004C2  6EF7               	movwf	tblptrh,c
  5193  0004C4                     	endif
  5194  0004C4                     	if	0	;tblptru may be non-zero
  5195  0004C4                     	endif
  5196  0004C4                     	if	0	;tblptru may be non-zero
  5197  0004C4                     	endif
  5198  0004C4  0008               	tblrd		*
  5199  0004C6  50F5               	movf	tablat,w,c
  5200  0004C8  EC1E  F009         	call	_LcPutChar
  5201                           
  5202                           ;GestioLCD.c: 134:     j++;
  5203  0004CC  2A2A               	incf	GLCDMotor@j^0,f,c
  5204                           
  5205                           ;GestioLCD.c: 135:     k2++;
  5206  0004CE  2A26               	incf	GLCDMotor@k2^0,f,c
  5207                           
  5208                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  5209  0004D0  502C               	movf	_menuDaltGLCD^0,w,c
  5210  0004D2  0D16               	mullw	22
  5211  0004D4  50F3               	movf	243,w,c
  5212  0004D6  0F01               	addlw	low _menuList
  5213  0004D8  2426               	addwf	GLCDMotor@k2^0,w,c
  5214  0004DA  0100               	movlb	0	; () banked
  5215  0004DC  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5216  0004DE  0E16               	movlw	22
  5217  0004E0  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5218  0004E2  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5219  0004E6                     	if	1	;There is more than 1 active tblptr byte
  5220  0004E6  0E02               	movlw	high __smallconst
  5221  0004E8  6EF7               	movwf	tblptrh,c
  5222  0004EA                     	endif
  5223  0004EA                     	if	0	;tblptru may be non-zero
  5224  0004EA                     	endif
  5225  0004EA                     	if	0	;tblptru may be non-zero
  5226  0004EA                     	endif
  5227  0004EA  0008               	tblrd		*
  5228  0004EC  50F5               	movf	tablat,w,c
  5229  0004EE  0900               	iorlw	0
  5230  0004F0  A4D8               	btfss	status,2,c
  5231  0004F2  0012               	return	
  5232                           
  5233                           ; BSR set to: 0
  5234  0004F4  0E00               	movlw	0
  5235  0004F6  6E26               	movwf	GLCDMotor@k2^0,c
  5236  0004F8  0012               	return	
  5237  0004FA                     l4131:
  5238                           
  5239                           ; BSR set to: 0
  5240  0004FA  0E0F               	movlw	15
  5241  0004FC  642A               	cpfsgt	GLCDMotor@j^0,c
  5242  0004FE  0012               	return	
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;GestioLCD.c: 139:     min2++;
  5246  000500  2A28               	incf	GLCDMotor@min2^0,f,c
  5247                           
  5248                           ;GestioLCD.c: 140:     max2++;
  5249  000502  2A71               	incf	GLCDMotor@max2^0,f,c
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  5253  000504  502C               	movf	_menuDaltGLCD^0,w,c
  5254  000506  0D16               	mullw	22
  5255  000508  50F3               	movf	243,w,c
  5256  00050A  0F01               	addlw	low _menuList
  5257  00050C  2471               	addwf	GLCDMotor@max2^0,w,c
  5258  00050E  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5259  000510  0E16               	movlw	22
  5260  000512  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5261  000514  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5262  000518                     	if	1	;There is more than 1 active tblptr byte
  5263  000518  0E02               	movlw	high __smallconst
  5264  00051A  6EF7               	movwf	tblptrh,c
  5265  00051C                     	endif
  5266  00051C                     	if	0	;tblptru may be non-zero
  5267  00051C                     	endif
  5268  00051C                     	if	0	;tblptru may be non-zero
  5269  00051C                     	endif
  5270  00051C  0008               	tblrd		*
  5271  00051E  50F5               	movf	tablat,w,c
  5272  000520  0900               	iorlw	0
  5273  000522  A4D8               	btfss	status,2,c
  5274  000524  D002               	goto	l4139
  5275                           
  5276                           ; BSR set to: 0
  5277  000526  0E00               	movlw	0
  5278  000528  6E71               	movwf	GLCDMotor@max2^0,c
  5279  00052A                     l4139:
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  5283  00052A  502C               	movf	_menuDaltGLCD^0,w,c
  5284  00052C  0D16               	mullw	22
  5285  00052E  50F3               	movf	243,w,c
  5286  000530  0F01               	addlw	low _menuList
  5287  000532  2428               	addwf	GLCDMotor@min2^0,w,c
  5288  000534  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5289  000536  0E16               	movlw	22
  5290  000538  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5291  00053A  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5292  00053E                     	if	1	;There is more than 1 active tblptr byte
  5293  00053E  0E02               	movlw	high __smallconst
  5294  000540  6EF7               	movwf	tblptrh,c
  5295  000542                     	endif
  5296  000542                     	if	0	;tblptru may be non-zero
  5297  000542                     	endif
  5298  000542                     	if	0	;tblptru may be non-zero
  5299  000542                     	endif
  5300  000542  0008               	tblrd		*
  5301  000544  50F5               	movf	tablat,w,c
  5302  000546  0900               	iorlw	0
  5303  000548  A4D8               	btfss	status,2,c
  5304  00054A  D002               	goto	l751
  5305                           
  5306                           ; BSR set to: 0
  5307  00054C  0E00               	movlw	0
  5308  00054E  6E28               	movwf	GLCDMotor@min2^0,c
  5309  000550                     l751:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;GestioLCD.c: 143:     j=0;
  5313  000550  0E00               	movlw	0
  5314  000552  6E2A               	movwf	GLCDMotor@j^0,c
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;GestioLCD.c: 144:     k2=min2;
  5318  000554  C028  F026         	movff	GLCDMotor@min2,GLCDMotor@k2
  5319  000558  D6B6               	goto	u4090
  5320  00055A                     l4147:
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 2000 && newString == 0 && ferMenu == 1)
      +                           {
  5324  00055A  502D               	movf	_timerGLCD^0,w,c
  5325  00055C  EC69  F00A         	call	_TiGetTics
  5326  000560  BE5A               	btfsc	(?_TiGetTics+1)^0,7,c
  5327  000562  D00E               	goto	l753
  5328  000564  0ED0               	movlw	208
  5329  000566  5C59               	subwf	?_TiGetTics^0,w,c
  5330  000568  0E07               	movlw	7
  5331  00056A  585A               	subwfb	(?_TiGetTics+1)^0,w,c
  5332  00056C  B0D8               	btfsc	status,0,c
  5333  00056E  B079               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  5334  000570  D007               	goto	l753
  5335  000572  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5336  000574  D005               	goto	l753
  5337                           
  5338                           ;GestioLCD.c: 150:     LcClear();
  5339  000576  EC91  F00A         	call	_LcClear	;wreg free
  5340  00057A                     l4155:
  5341                           
  5342                           ;GestioLCD.c: 151:     state = 2;
  5343  00057A  0E02               	movlw	2
  5344  00057C  6E2B               	movwf	GLCDMotor@state^0,c
  5345                           
  5346                           ;GestioLCD.c: 152:    }
  5347  00057E  0012               	return	
  5348  000580                     l753:
  5349  000580  A079               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  5350  000582  0012               	return	
  5351  000584  A279               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5352  000586  0012               	return	
  5353                           
  5354                           ;GestioLCD.c: 154:     LcClear();
  5355  000588  EC91  F00A         	call	_LcClear	;wreg free
  5356  00058C  D6FC               	goto	u4160
  5357  00058E                     l4163:
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  5361  00058E  502D               	movf	_timerGLCD^0,w,c
  5362  000590  ECC5  F00A         	call	_TiResetTics
  5363  000594  D698               	goto	u4090
  5364  000596                     l4167:
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;GestioLCD.c: 163:    if (LcLliure()) {
  5368  000596  EC02  F00B         	call	_LcLliure	;wreg free
  5369  00059A  A0D8               	btfss	status,0,c
  5370  00059C  0012               	return	
  5371                           
  5372                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  5373  00059E  502D               	movf	_timerGLCD^0,w,c
  5374  0005A0  ECC5  F00A         	call	_TiResetTics
  5375                           
  5376                           ;GestioLCD.c: 165:     state = 11;
  5377  0005A4  0E0B               	movlw	11
  5378  0005A6  6E2B               	movwf	GLCDMotor@state^0,c
  5379  0005A8  0012               	return	
  5380  0005AA                     l4173:
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  5384  0005AA  502C               	movf	_menuDaltGLCD^0,w,c
  5385  0005AC  0D16               	mullw	22
  5386  0005AE  50F3               	movf	243,w,c
  5387  0005B0  0F01               	addlw	low _menuList
  5388  0005B2  2424               	addwf	GLCDMotor@length2^0,w,c
  5389  0005B4  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5390  0005B6  0E16               	movlw	22
  5391  0005B8  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5392  0005BA  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5393  0005BE                     	if	1	;There is more than 1 active tblptr byte
  5394  0005BE  0E02               	movlw	high __smallconst
  5395  0005C0  6EF7               	movwf	tblptrh,c
  5396  0005C2                     	endif
  5397  0005C2                     	if	0	;tblptru may be non-zero
  5398  0005C2                     	endif
  5399  0005C2                     	if	0	;tblptru may be non-zero
  5400  0005C2                     	endif
  5401  0005C2  0008               	tblrd		*
  5402  0005C4  50F5               	movf	tablat,w,c
  5403  0005C6  0900               	iorlw	0
  5404  0005C8  B4D8               	btfsc	status,2,c
  5405  0005CA  D002               	goto	l4177
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;GestioLCD.c: 170:     length2++;
  5409  0005CC  2A24               	incf	GLCDMotor@length2^0,f,c
  5410                           
  5411                           ;GestioLCD.c: 171:    }
  5412  0005CE  0012               	return	
  5413  0005D0                     l4177:
  5414                           
  5415                           ; BSR set to: 0
  5416  0005D0  502C               	movf	_menuDaltGLCD^0,w,c
  5417  0005D2  0D16               	mullw	22
  5418  0005D4  50F3               	movf	243,w,c
  5419  0005D6  0F01               	addlw	low _menuList
  5420  0005D8  2424               	addwf	GLCDMotor@length2^0,w,c
  5421  0005DA  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5422  0005DC  0E16               	movlw	22
  5423  0005DE  278C               	addwf	??_GLCDMotor& (0+255),f,b
  5424  0005E0  C08C  FFF6         	movff	??_GLCDMotor,tblptrl
  5425  0005E4                     	if	1	;There is more than 1 active tblptr byte
  5426  0005E4  0E02               	movlw	high __smallconst
  5427  0005E6  6EF7               	movwf	tblptrh,c
  5428  0005E8                     	endif
  5429  0005E8                     	if	0	;tblptru may be non-zero
  5430  0005E8                     	endif
  5431  0005E8                     	if	0	;tblptru may be non-zero
  5432  0005E8                     	endif
  5433  0005E8  0008               	tblrd		*
  5434  0005EA  50F5               	movf	tablat,w,c
  5435  0005EC  0900               	iorlw	0
  5436  0005EE  A4D8               	btfss	status,2,c
  5437  0005F0  0012               	return	
  5438  0005F2  D7C3               	goto	l4155
  5439  0005F4                     l4183:
  5440  0005F4  502B               	movf	GLCDMotor@state^0,w,c
  5441  0005F6  0100               	movlb	0	; () banked
  5442  0005F8  6F8C               	movwf	??_GLCDMotor& (0+255),b
  5443  0005FA  6B8D               	clrf	(??_GLCDMotor+1)& (0+255),b
  5444                           
  5445                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5446                           ; Switch size 1, requested type "simple"
  5447                           ; Number of cases is 1, Range of values is 0 to 0
  5448                           ; switch strategies available:
  5449                           ; Name         Instructions Cycles
  5450                           ; simple_byte            4     3 (average)
  5451                           ;	Chosen strategy is simple_byte
  5452  0005FC  518D               	movf	(??_GLCDMotor+1)& (0+255),w,b
  5453  0005FE  0A00               	xorlw	0	; case 0
  5454  000600  A4D8               	btfss	status,2,c
  5455  000602  0012               	return	
  5456                           
  5457                           ; BSR set to: 0
  5458                           ; Switch size 1, requested type "simple"
  5459                           ; Number of cases is 12, Range of values is 0 to 13
  5460                           ; switch strategies available:
  5461                           ; Name         Instructions Cycles
  5462                           ; simple_byte           37    19 (average)
  5463                           ;	Chosen strategy is simple_byte
  5464  000604  518C               	movf	??_GLCDMotor& (0+255),w,b
  5465  000606  0A00               	xorlw	0	; case 0
  5466  000608  B4D8               	btfsc	status,2,c
  5467  00060A  D6D2               	goto	l733
  5468  00060C  0A01               	xorlw	1	; case 1
  5469  00060E  B4D8               	btfsc	status,2,c
  5470  000610  D6EC               	goto	l4085
  5471  000612  0A03               	xorlw	3	; case 2
  5472  000614  B4D8               	btfsc	status,2,c
  5473  000616  D63E               	goto	l3997
  5474  000618  0A01               	xorlw	1	; case 3
  5475  00061A  B4D8               	btfsc	status,2,c
  5476  00061C  D656               	goto	l4013
  5477  00061E  0A06               	xorlw	6	; case 5
  5478  000620  B4D8               	btfsc	status,2,c
  5479  000622  D6B4               	goto	l4049
  5480  000624  0A03               	xorlw	3	; case 6
  5481  000626  B4D8               	btfsc	status,2,c
  5482  000628  D6AA               	goto	l4041
  5483  00062A  0A01               	xorlw	1	; case 7
  5484  00062C  B4D8               	btfsc	status,2,c
  5485  00062E  D716               	goto	l4101
  5486  000630  0A0F               	xorlw	15	; case 8
  5487  000632  B4D8               	btfsc	status,2,c
  5488  000634  D7B0               	goto	l4167
  5489  000636  0A01               	xorlw	1	; case 9
  5490  000638  B4D8               	btfsc	status,2,c
  5491  00063A  D72F               	goto	l4117
  5492  00063C  0A03               	xorlw	3	; case 10
  5493  00063E  B4D8               	btfsc	status,2,c
  5494  000640  D7A6               	goto	l4163
  5495  000642  0A01               	xorlw	1	; case 11
  5496  000644  B4D8               	btfsc	status,2,c
  5497  000646  D789               	goto	l4147
  5498  000648  0A06               	xorlw	6	; case 13
  5499  00064A  A4D8               	btfss	status,2,c
  5500  00064C  0012               	return	
  5501  00064E  D7AD               	goto	l4173
  5502  000650                     __end_of_GLCDMotor:
  5503                           	callstack 0
  5504                           
  5505 ;; *************** function _LcPutChar *****************
  5506 ;; Defined at:
  5507 ;;		line 132 in file "LcTLCD.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  c               1    wreg     unsigned char 
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  c               1   19[COMRAM] unsigned char 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1
  5521 ;;      Params:         0       0       0
  5522 ;;      Locals:         1       0       0
  5523 ;;      Temps:          0       0       0
  5524 ;;      Totals:         1       0       0
  5525 ;;Total ram usage:        1 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; Hardware stack levels required when called: 5
  5528 ;; This function calls:
  5529 ;;		_CantaData
  5530 ;;		_LcGotoXY
  5531 ;;		_WaitForBusy
  5532 ;; This function is called by:
  5533 ;;		_LcLCD
  5534 ;;		_menu
  5535 ;;		_GLCDMotor
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text35
  5540  00123C                     __ptext35:
  5541                           	callstack 0
  5542  00123C                     _LcPutChar:
  5543                           	callstack 24
  5544                           
  5545                           ;incstack = 0
  5546                           ;LcPutChar@c stored from wreg
  5547  00123C  6E67               	movwf	LcPutChar@c^0,c
  5548                           
  5549                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  5550  00123E  EC92  F009         	call	_WaitForBusy	;wreg free
  5551  001242  5067               	movf	LcPutChar@c^0,w,c
  5552  001244  EC08  F00A         	call	_CantaData
  5553                           
  5554                           ;LcTLCD.c: 136:  ++ColumnAct;
  5555  001248  2A47               	incf	_ColumnAct^0,f,c
  5556                           
  5557                           ;LcTLCD.c: 138:  if (Rows == 2) {
  5558  00124A  0E02               	movlw	2
  5559  00124C  184A               	xorwf	_Rows^0,w,c
  5560  00124E  A4D8               	btfss	status,2,c
  5561  001250  D010               	goto	l2845
  5562                           
  5563                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  5564  001252  0E27               	movlw	39
  5565  001254  6447               	cpfsgt	_ColumnAct^0,c
  5566  001256  D00D               	goto	l2845
  5567                           
  5568                           ;LcTLCD.c: 140:    ColumnAct = 0;
  5569  001258  0E00               	movlw	0
  5570  00125A  6E47               	movwf	_ColumnAct^0,c
  5571                           
  5572                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  5573  00125C  2A48               	incf	_RowAct^0,f,c
  5574  00125E  0E01               	movlw	1
  5575  001260  6448               	cpfsgt	_RowAct^0,c
  5576  001262  D002               	goto	l2843
  5577  001264  0E00               	movlw	0
  5578  001266  6E48               	movwf	_RowAct^0,c
  5579  001268                     l2843:
  5580                           
  5581                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  5582  001268  C048  F061         	movff	_RowAct,LcGotoXY@Row
  5583  00126C  5047               	movf	_ColumnAct^0,w,c
  5584  00126E  ECB2  F009         	call	_LcGotoXY
  5585  001272                     l2845:
  5586                           
  5587                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  5588  001272  0448               	decf	_RowAct^0,w,c
  5589  001274  A4D8               	btfss	status,2,c
  5590  001276  0012               	return	
  5591                           
  5592                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  5593  001278  0E27               	movlw	39
  5594  00127A  6447               	cpfsgt	_ColumnAct^0,c
  5595  00127C  D002               	goto	l2851
  5596  00127E  0E00               	movlw	0
  5597  001280  6E47               	movwf	_ColumnAct^0,c
  5598  001282                     l2851:
  5599                           
  5600                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  5601  001282  C048  F061         	movff	_RowAct,LcGotoXY@Row
  5602  001286  5047               	movf	_ColumnAct^0,w,c
  5603  001288  ECB2  F009         	call	_LcGotoXY
  5604  00128C  0012               	return		;funcret
  5605  00128E                     __end_of_LcPutChar:
  5606                           	callstack 0
  5607                           
  5608 ;; *************** function _CantaData *****************
  5609 ;; Defined at:
  5610 ;;		line 194 in file "LcTLCD.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  Data            1    wreg     unsigned char 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  Data            1    7[COMRAM] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1
  5624 ;;      Params:         0       0       0
  5625 ;;      Locals:         1       0       0
  5626 ;;      Temps:          0       0       0
  5627 ;;      Totals:         1       0       0
  5628 ;;Total ram usage:        1 bytes
  5629 ;; Hardware stack levels used: 1
  5630 ;; Hardware stack levels required when called: 3
  5631 ;; This function calls:
  5632 ;;		_CantaPartAlta
  5633 ;;		_CantaPartBaixa
  5634 ;; This function is called by:
  5635 ;;		_LcPutChar
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text36
  5640  001410                     __ptext36:
  5641                           	callstack 0
  5642  001410                     _CantaData:
  5643                           	callstack 25
  5644                           
  5645                           ;incstack = 0
  5646                           ;CantaData@Data stored from wreg
  5647  001410  6E5B               	movwf	CantaData@Data^0,c
  5648                           
  5649                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  5650  001412  9694               	bcf	148,3,c	;volatile
  5651  001414  9494               	bcf	148,2,c	;volatile
  5652  001416  9294               	bcf	148,1,c	;volatile
  5653  001418  9094               	bcf	148,0,c	;volatile
  5654                           
  5655                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  5656  00141A  8A8B               	bsf	139,5,c	;volatile
  5657                           
  5658                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  5659  00141C  9E8C               	bcf	140,7,c	;volatile
  5660                           
  5661                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  5662  00141E  888B               	bsf	139,4,c	;volatile
  5663                           
  5664                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  5665  001420  505B               	movf	CantaData@Data^0,w,c
  5666  001422  ECBD  F008         	call	_CantaPartAlta
  5667                           
  5668                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  5669  001426  888B               	bsf	139,4,c	;volatile
  5670                           
  5671                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  5672  001428  988B               	bcf	139,4,c	;volatile
  5673                           
  5674                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  5675  00142A  988B               	bcf	139,4,c	;volatile
  5676                           
  5677                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  5678  00142C  888B               	bsf	139,4,c	;volatile
  5679                           
  5680                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  5681  00142E  505B               	movf	CantaData@Data^0,w,c
  5682  001430  EC89  F008         	call	_CantaPartBaixa
  5683                           
  5684                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  5685  001434  888B               	bsf	139,4,c	;volatile
  5686                           
  5687                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  5688  001436  988B               	bcf	139,4,c	;volatile
  5689                           
  5690                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  5691  001438  8694               	bsf	148,3,c	;volatile
  5692  00143A  8494               	bsf	148,2,c	;volatile
  5693  00143C  8294               	bsf	148,1,c	;volatile
  5694  00143E  8094               	bsf	148,0,c	;volatile
  5695  001440  0012               	return		;funcret
  5696  001442                     __end_of_CantaData:
  5697                           	callstack 0
  5698                           
  5699 ;; *************** function _LcNewString *****************
  5700 ;; Defined at:
  5701 ;;		line 239 in file "LcTLCD.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  new_s           1    5[COMRAM] PTR unsigned char 
  5704 ;;		 -> menuList(110), STR_4(7), STR_3(7), STR_2(11), 
  5705 ;;		 -> STR_1(8), 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;		None
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1
  5717 ;;      Params:         1       0       0
  5718 ;;      Locals:         0       0       0
  5719 ;;      Temps:          0       0       0
  5720 ;;      Totals:         1       0       0
  5721 ;;Total ram usage:        1 bytes
  5722 ;; Hardware stack levels used: 1
  5723 ;; Hardware stack levels required when called: 2
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_menu
  5728 ;;		_GLCDMotor
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text37
  5733  001650                     __ptext37:
  5734                           	callstack 0
  5735  001650                     _LcNewString:
  5736                           	callstack 27
  5737                           
  5738                           ;LcTLCD.c: 240:     s_ptr = new_s;
  5739                           
  5740                           ;incstack = 0
  5741  001650  C059  F045         	movff	LcNewString@new_s,_s_ptr
  5742                           
  5743                           ;LcTLCD.c: 241:     nou_s = 1;
  5744  001654  8E79               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5745  001656  0012               	return		;funcret
  5746  001658                     __end_of_LcNewString:
  5747                           	callstack 0
  5748                           
  5749 ;; *************** function _LcLliure *****************
  5750 ;; Defined at:
  5751 ;;		line 255 in file "LcTLCD.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;		None
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;		None               void
  5758 ;; Registers used:
  5759 ;;		status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1
  5765 ;;      Params:         0       0       0
  5766 ;;      Locals:         0       0       0
  5767 ;;      Temps:          0       0       0
  5768 ;;      Totals:         0       0       0
  5769 ;;Total ram usage:        0 bytes
  5770 ;; Hardware stack levels used: 1
  5771 ;; Hardware stack levels required when called: 2
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_menu
  5776 ;;		_GLCDMotor
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text38
  5781  001604                     __ptext38:
  5782                           	callstack 0
  5783  001604                     _LcLliure:
  5784                           	callstack 27
  5785                           
  5786                           ;LcTLCD.c: 256:     return !nou_s;
  5787                           
  5788                           ;incstack = 0
  5789  001604  AE79               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5790  001606  D002               	goto	l1605
  5791  001608  90D8               	bcf	status,0,c
  5792  00160A  0012               	return	
  5793  00160C                     l1605:
  5794  00160C  80D8               	bsf	status,0,c
  5795  00160E  0012               	return		;funcret
  5796  001610                     __end_of_LcLliure:
  5797                           	callstack 0
  5798                           
  5799 ;; *************** function _LcClear *****************
  5800 ;; Defined at:
  5801 ;;		line 82 in file "LcTLCD.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;		None
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMRAM   BANK0   BANK1
  5815 ;;      Params:         0       0       0
  5816 ;;      Locals:         0       0       0
  5817 ;;      Temps:          0       0       0
  5818 ;;      Totals:         0       0       0
  5819 ;;Total ram usage:        0 bytes
  5820 ;; Hardware stack levels used: 1
  5821 ;; Hardware stack levels required when called: 5
  5822 ;; This function calls:
  5823 ;;		_CantaIR
  5824 ;;		_Espera
  5825 ;;		_LcGotoXY
  5826 ;;		_WaitForBusy
  5827 ;; This function is called by:
  5828 ;;		_menu
  5829 ;;		_GLCDMotor
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text39
  5834  001522                     __ptext39:
  5835                           	callstack 0
  5836  001522                     _LcClear:
  5837                           	callstack 24
  5838                           
  5839                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  5840                           
  5841                           ;incstack = 0
  5842  001522  EC92  F009         	call	_WaitForBusy	;wreg free
  5843  001526  0E01               	movlw	1
  5844  001528  EC21  F00A         	call	_CantaIR
  5845                           
  5846                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  5847  00152C  0E00               	movlw	0
  5848  00152E  6E61               	movwf	(Espera@ms+1)^0,c
  5849  001530  0E03               	movlw	3
  5850  001532  6E60               	movwf	Espera@ms^0,c
  5851  001534  5046               	movf	_Timer^0,w,c
  5852  001536  ECA3  F00A         	call	_Espera
  5853                           
  5854                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  5855  00153A  0E00               	movlw	0
  5856  00153C  6E61               	movwf	LcGotoXY@Row^0,c
  5857  00153E  0E00               	movlw	0
  5858  001540  ECB2  F009         	call	_LcGotoXY
  5859  001544  0012               	return		;funcret
  5860  001546                     __end_of_LcClear:
  5861                           	callstack 0
  5862                           
  5863 ;; *************** function _LcGotoXY *****************
  5864 ;; Defined at:
  5865 ;;		line 104 in file "LcTLCD.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  Column          1    wreg     unsigned char 
  5868 ;;  Row             1   13[COMRAM] unsigned char 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  Column          1   18[COMRAM] unsigned char 
  5871 ;;  Fisics          2   14[COMRAM] int 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1
  5881 ;;      Params:         1       0       0
  5882 ;;      Locals:         5       0       0
  5883 ;;      Temps:          0       0       0
  5884 ;;      Totals:         6       0       0
  5885 ;;Total ram usage:        6 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 4
  5888 ;; This function calls:
  5889 ;;		_CantaIR
  5890 ;;		_WaitForBusy
  5891 ;; This function is called by:
  5892 ;;		_LcClear
  5893 ;;		_LcPutChar
  5894 ;;		_menu
  5895 ;;		_GLCDMotor
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text40
  5900  001364                     __ptext40:
  5901                           	callstack 0
  5902  001364                     _LcGotoXY:
  5903                           	callstack 24
  5904                           
  5905                           ;incstack = 0
  5906                           ;LcGotoXY@Column stored from wreg
  5907  001364  6E66               	movwf	LcGotoXY@Column^0,c
  5908                           
  5909                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  5910  001366  5061               	movf	LcGotoXY@Row^0,w,c
  5911  001368  B4D8               	btfsc	status,2,c
  5912  00136A  D004               	goto	l2785
  5913  00136C  0E00               	movlw	0
  5914  00136E  6E65               	movwf	(_LcGotoXY$342+1)^0,c
  5915  001370  0E40               	movlw	64
  5916  001372  D003               	goto	L5
  5917  001374                     l2785:
  5918  001374  0E00               	movlw	0
  5919  001376  6E65               	movwf	(_LcGotoXY$342+1)^0,c
  5920  001378  0E00               	movlw	0
  5921  00137A                     L5:
  5922  00137A  6E64               	movwf	_LcGotoXY$342^0,c
  5923  00137C  5066               	movf	LcGotoXY@Column^0,w,c
  5924  00137E  2464               	addwf	_LcGotoXY$342^0,w,c
  5925  001380  6E62               	movwf	LcGotoXY@Fisics^0,c
  5926  001382  0E00               	movlw	0
  5927  001384  2065               	addwfc	(_LcGotoXY$342+1)^0,w,c
  5928  001386  6E63               	movwf	(LcGotoXY@Fisics+1)^0,c
  5929                           
  5930                           ;LcTLCD.c: 125:  WaitForBusy();
  5931  001388  EC92  F009         	call	_WaitForBusy	;wreg free
  5932                           
  5933                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  5934  00138C  5062               	movf	LcGotoXY@Fisics^0,w,c
  5935  00138E  0980               	iorlw	128
  5936  001390  EC21  F00A         	call	_CantaIR
  5937                           
  5938                           ;LcTLCD.c: 128:  RowAct = Row;
  5939  001394  C061  F048         	movff	LcGotoXY@Row,_RowAct
  5940                           
  5941                           ;LcTLCD.c: 129:  ColumnAct = Column;
  5942  001398  C066  F047         	movff	LcGotoXY@Column,_ColumnAct
  5943  00139C  0012               	return		;funcret
  5944  00139E                     __end_of_LcGotoXY:
  5945                           	callstack 0
  5946                           
  5947 ;; *************** function _WaitForBusy *****************
  5948 ;; Defined at:
  5949 ;;		line 210 in file "LcTLCD.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  Busy            1   12[COMRAM] unsigned char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1
  5963 ;;      Params:         0       0       0
  5964 ;;      Locals:         1       0       0
  5965 ;;      Temps:          0       0       0
  5966 ;;      Totals:         1       0       0
  5967 ;;Total ram usage:        1 bytes
  5968 ;; Hardware stack levels used: 1
  5969 ;; Hardware stack levels required when called: 3
  5970 ;; This function calls:
  5971 ;;		_TiGetTics
  5972 ;;		_TiResetTics
  5973 ;; This function is called by:
  5974 ;;		_LcInit
  5975 ;;		_LcClear
  5976 ;;		_LcCursorOff
  5977 ;;		_LcGotoXY
  5978 ;;		_LcPutChar
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           	psect	text41
  5983  001324                     __ptext41:
  5984                           	callstack 0
  5985  001324                     _WaitForBusy:
  5986                           	callstack 25
  5987                           
  5988                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  5989                           
  5990                           ;incstack = 0
  5991  001324  8694               	bsf	148,3,c	;volatile
  5992  001326  8494               	bsf	148,2,c	;volatile
  5993  001328  8294               	bsf	148,1,c	;volatile
  5994  00132A  8094               	bsf	148,0,c	;volatile
  5995                           
  5996                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  5997  00132C  9A8B               	bcf	139,5,c	;volatile
  5998                           
  5999                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  6000  00132E  8E8C               	bsf	140,7,c	;volatile
  6001                           
  6002                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  6003  001330  5046               	movf	_Timer^0,w,c
  6004  001332  ECC5  F00A         	call	_TiResetTics
  6005  001336                     l2753:
  6006                           
  6007                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  6008  001336  888B               	bsf	139,4,c	;volatile
  6009  001338  888B               	bsf	139,4,c	;volatile
  6010                           
  6011                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  6012  00133A  0E00               	movlw	0
  6013  00133C  B682               	btfsc	130,3,c	;volatile
  6014  00133E  0E01               	movlw	1
  6015  001340  6E60               	movwf	WaitForBusy@Busy^0,c
  6016                           
  6017                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  6018  001342  988B               	bcf	139,4,c	;volatile
  6019                           
  6020                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  6021  001344  988B               	bcf	139,4,c	;volatile
  6022                           
  6023                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  6024  001346  888B               	bsf	139,4,c	;volatile
  6025  001348  888B               	bsf	139,4,c	;volatile
  6026                           
  6027                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  6028  00134A  988B               	bcf	139,4,c	;volatile
  6029                           
  6030                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  6031  00134C  988B               	bcf	139,4,c	;volatile
  6032                           
  6033                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  6034  00134E  5046               	movf	_Timer^0,w,c
  6035  001350  EC69  F00A         	call	_TiGetTics
  6036  001354  5059               	movf	?_TiGetTics^0,w,c
  6037  001356  105A               	iorwf	(?_TiGetTics+1)^0,w,c
  6038  001358  A4D8               	btfss	status,2,c
  6039  00135A  0012               	return	
  6040                           
  6041                           ;LcTLCD.c: 225:  } while(Busy);
  6042  00135C  5060               	movf	WaitForBusy@Busy^0,w,c
  6043  00135E  B4D8               	btfsc	status,2,c
  6044  001360  0012               	return	
  6045  001362  D7E9               	goto	l2753
  6046  001364                     __end_of_WaitForBusy:
  6047                           	callstack 0
  6048                           
  6049 ;; *************** function _CantaIR *****************
  6050 ;; Defined at:
  6051 ;;		line 178 in file "LcTLCD.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  IR              1    wreg     unsigned char 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  IR              1    7[COMRAM] unsigned char 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1
  6065 ;;      Params:         0       0       0
  6066 ;;      Locals:         1       0       0
  6067 ;;      Temps:          0       0       0
  6068 ;;      Totals:         1       0       0
  6069 ;;Total ram usage:        1 bytes
  6070 ;; Hardware stack levels used: 1
  6071 ;; Hardware stack levels required when called: 3
  6072 ;; This function calls:
  6073 ;;		_CantaPartAlta
  6074 ;;		_CantaPartBaixa
  6075 ;; This function is called by:
  6076 ;;		_LcInit
  6077 ;;		_LcClear
  6078 ;;		_LcCursorOff
  6079 ;;		_LcGotoXY
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text42
  6084  001442                     __ptext42:
  6085                           	callstack 0
  6086  001442                     _CantaIR:
  6087                           	callstack 24
  6088                           
  6089                           ;incstack = 0
  6090                           ;CantaIR@IR stored from wreg
  6091  001442  6E5B               	movwf	CantaIR@IR^0,c
  6092                           
  6093                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  6094  001444  9694               	bcf	148,3,c	;volatile
  6095  001446  9494               	bcf	148,2,c	;volatile
  6096  001448  9294               	bcf	148,1,c	;volatile
  6097  00144A  9094               	bcf	148,0,c	;volatile
  6098                           
  6099                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  6100  00144C  9A8B               	bcf	139,5,c	;volatile
  6101                           
  6102                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  6103  00144E  9E8C               	bcf	140,7,c	;volatile
  6104                           
  6105                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  6106  001450  888B               	bsf	139,4,c	;volatile
  6107                           
  6108                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  6109  001452  505B               	movf	CantaIR@IR^0,w,c
  6110  001454  ECBD  F008         	call	_CantaPartAlta
  6111                           
  6112                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  6113  001458  888B               	bsf	139,4,c	;volatile
  6114                           
  6115                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  6116  00145A  988B               	bcf	139,4,c	;volatile
  6117                           
  6118                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  6119  00145C  988B               	bcf	139,4,c	;volatile
  6120                           
  6121                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  6122  00145E  888B               	bsf	139,4,c	;volatile
  6123                           
  6124                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  6125  001460  505B               	movf	CantaIR@IR^0,w,c
  6126  001462  EC89  F008         	call	_CantaPartBaixa
  6127                           
  6128                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  6129  001466  888B               	bsf	139,4,c	;volatile
  6130                           
  6131                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  6132  001468  988B               	bcf	139,4,c	;volatile
  6133                           
  6134                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  6135  00146A  8694               	bsf	148,3,c	;volatile
  6136  00146C  8494               	bsf	148,2,c	;volatile
  6137  00146E  8294               	bsf	148,1,c	;volatile
  6138  001470  8094               	bsf	148,0,c	;volatile
  6139  001472  0012               	return		;funcret
  6140  001474                     __end_of_CantaIR:
  6141                           	callstack 0
  6142                           
  6143 ;; *************** function _CantaPartBaixa *****************
  6144 ;; Defined at:
  6145 ;;		line 171 in file "LcTLCD.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  c               1    wreg     unsigned char 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  c               1    6[COMRAM] unsigned char 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2, status,0
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1
  6159 ;;      Params:         0       0       0
  6160 ;;      Locals:         1       0       0
  6161 ;;      Temps:          1       0       0
  6162 ;;      Totals:         2       0       0
  6163 ;;Total ram usage:        2 bytes
  6164 ;; Hardware stack levels used: 1
  6165 ;; Hardware stack levels required when called: 2
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_CantaIR
  6170 ;;		_CantaData
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text43
  6175  001112                     __ptext43:
  6176                           	callstack 0
  6177  001112                     _CantaPartBaixa:
  6178                           	callstack 24
  6179                           
  6180                           ;incstack = 0
  6181                           ;CantaPartBaixa@c stored from wreg
  6182  001112  6E5A               	movwf	CantaPartBaixa@c^0,c
  6183                           
  6184                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  6185  001114  A65A               	btfss	CantaPartBaixa@c^0,3,c
  6186  001116  D003               	goto	u2080
  6187  001118  6A59               	clrf	??_CantaPartBaixa^0,c
  6188  00111A  2A59               	incf	??_CantaPartBaixa^0,f,c
  6189  00111C  D001               	goto	u2098
  6190  00111E                     u2080:
  6191  00111E  6A59               	clrf	??_CantaPartBaixa^0,c
  6192  001120                     u2098:
  6193  001120  4659               	rlncf	??_CantaPartBaixa^0,f,c
  6194  001122  4659               	rlncf	??_CantaPartBaixa^0,f,c
  6195  001124  4659               	rlncf	??_CantaPartBaixa^0,f,c
  6196  001126  508B               	movf	139,w,c	;volatile
  6197  001128  1859               	xorwf	??_CantaPartBaixa^0,w,c
  6198  00112A  0BF7               	andlw	-9
  6199  00112C  1859               	xorwf	??_CantaPartBaixa^0,w,c
  6200  00112E  6E8B               	movwf	139,c	;volatile
  6201                           
  6202                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  6203  001130  A45A               	btfss	CantaPartBaixa@c^0,2,c
  6204  001132  D003               	goto	u2100
  6205  001134  6A59               	clrf	??_CantaPartBaixa^0,c
  6206  001136  2A59               	incf	??_CantaPartBaixa^0,f,c
  6207  001138  D001               	goto	u2118
  6208  00113A                     u2100:
  6209  00113A  6A59               	clrf	??_CantaPartBaixa^0,c
  6210  00113C                     u2118:
  6211  00113C  4659               	rlncf	??_CantaPartBaixa^0,f,c
  6212  00113E  4659               	rlncf	??_CantaPartBaixa^0,f,c
  6213  001140  508B               	movf	139,w,c	;volatile
  6214  001142  1859               	xorwf	??_CantaPartBaixa^0,w,c
  6215  001144  0BFB               	andlw	-5
  6216  001146  1859               	xorwf	??_CantaPartBaixa^0,w,c
  6217  001148  6E8B               	movwf	139,c	;volatile
  6218                           
  6219                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  6220  00114A  A25A               	btfss	CantaPartBaixa@c^0,1,c
  6221  00114C  D003               	goto	u2120
  6222  00114E  6A59               	clrf	??_CantaPartBaixa^0,c
  6223  001150  2A59               	incf	??_CantaPartBaixa^0,f,c
  6224  001152  D001               	goto	u2138
  6225  001154                     u2120:
  6226  001154  6A59               	clrf	??_CantaPartBaixa^0,c
  6227  001156                     u2138:
  6228  001156  4659               	rlncf	??_CantaPartBaixa^0,f,c
  6229  001158  508B               	movf	139,w,c	;volatile
  6230  00115A  1859               	xorwf	??_CantaPartBaixa^0,w,c
  6231  00115C  0BFD               	andlw	-3
  6232  00115E  1859               	xorwf	??_CantaPartBaixa^0,w,c
  6233  001160  6E8B               	movwf	139,c	;volatile
  6234                           
  6235                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  6236  001162  A05A               	btfss	CantaPartBaixa@c^0,0,c
  6237  001164  D003               	goto	u2140
  6238  001166  6A59               	clrf	??_CantaPartBaixa^0,c
  6239  001168  2A59               	incf	??_CantaPartBaixa^0,f,c
  6240  00116A  D001               	goto	u2158
  6241  00116C                     u2140:
  6242  00116C  6A59               	clrf	??_CantaPartBaixa^0,c
  6243  00116E                     u2158:
  6244  00116E  508B               	movf	139,w,c	;volatile
  6245  001170  1859               	xorwf	??_CantaPartBaixa^0,w,c
  6246  001172  0BFE               	andlw	-2
  6247  001174  1859               	xorwf	??_CantaPartBaixa^0,w,c
  6248  001176  6E8B               	movwf	139,c	;volatile
  6249  001178  0012               	return		;funcret
  6250  00117A                     __end_of_CantaPartBaixa:
  6251                           	callstack 0
  6252                           
  6253 ;; *************** function _CantaPartAlta *****************
  6254 ;; Defined at:
  6255 ;;		line 164 in file "LcTLCD.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  c               1    wreg     unsigned char 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  c               1    6[COMRAM] unsigned char 
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      void 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, status,0
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1
  6269 ;;      Params:         0       0       0
  6270 ;;      Locals:         1       0       0
  6271 ;;      Temps:          1       0       0
  6272 ;;      Totals:         2       0       0
  6273 ;;Total ram usage:        2 bytes
  6274 ;; Hardware stack levels used: 1
  6275 ;; Hardware stack levels required when called: 2
  6276 ;; This function calls:
  6277 ;;		Nothing
  6278 ;; This function is called by:
  6279 ;;		_CantaIR
  6280 ;;		_CantaData
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           	psect	text44
  6285  00117A                     __ptext44:
  6286                           	callstack 0
  6287  00117A                     _CantaPartAlta:
  6288                           	callstack 24
  6289                           
  6290                           ;incstack = 0
  6291                           ;CantaPartAlta@c stored from wreg
  6292  00117A  6E5A               	movwf	CantaPartAlta@c^0,c
  6293                           
  6294                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  6295  00117C  AE5A               	btfss	CantaPartAlta@c^0,7,c
  6296  00117E  D003               	goto	u2000
  6297  001180  6A59               	clrf	??_CantaPartAlta^0,c
  6298  001182  2A59               	incf	??_CantaPartAlta^0,f,c
  6299  001184  D001               	goto	u2018
  6300  001186                     u2000:
  6301  001186  6A59               	clrf	??_CantaPartAlta^0,c
  6302  001188                     u2018:
  6303  001188  4659               	rlncf	??_CantaPartAlta^0,f,c
  6304  00118A  4659               	rlncf	??_CantaPartAlta^0,f,c
  6305  00118C  4659               	rlncf	??_CantaPartAlta^0,f,c
  6306  00118E  508B               	movf	139,w,c	;volatile
  6307  001190  1859               	xorwf	??_CantaPartAlta^0,w,c
  6308  001192  0BF7               	andlw	-9
  6309  001194  1859               	xorwf	??_CantaPartAlta^0,w,c
  6310  001196  6E8B               	movwf	139,c	;volatile
  6311                           
  6312                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  6313  001198  AC5A               	btfss	CantaPartAlta@c^0,6,c
  6314  00119A  D003               	goto	u2020
  6315  00119C  6A59               	clrf	??_CantaPartAlta^0,c
  6316  00119E  2A59               	incf	??_CantaPartAlta^0,f,c
  6317  0011A0  D001               	goto	u2038
  6318  0011A2                     u2020:
  6319  0011A2  6A59               	clrf	??_CantaPartAlta^0,c
  6320  0011A4                     u2038:
  6321  0011A4  4659               	rlncf	??_CantaPartAlta^0,f,c
  6322  0011A6  4659               	rlncf	??_CantaPartAlta^0,f,c
  6323  0011A8  508B               	movf	139,w,c	;volatile
  6324  0011AA  1859               	xorwf	??_CantaPartAlta^0,w,c
  6325  0011AC  0BFB               	andlw	-5
  6326  0011AE  1859               	xorwf	??_CantaPartAlta^0,w,c
  6327  0011B0  6E8B               	movwf	139,c	;volatile
  6328                           
  6329                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  6330  0011B2  AA5A               	btfss	CantaPartAlta@c^0,5,c
  6331  0011B4  D003               	goto	u2040
  6332  0011B6  6A59               	clrf	??_CantaPartAlta^0,c
  6333  0011B8  2A59               	incf	??_CantaPartAlta^0,f,c
  6334  0011BA  D001               	goto	u2058
  6335  0011BC                     u2040:
  6336  0011BC  6A59               	clrf	??_CantaPartAlta^0,c
  6337  0011BE                     u2058:
  6338  0011BE  4659               	rlncf	??_CantaPartAlta^0,f,c
  6339  0011C0  508B               	movf	139,w,c	;volatile
  6340  0011C2  1859               	xorwf	??_CantaPartAlta^0,w,c
  6341  0011C4  0BFD               	andlw	-3
  6342  0011C6  1859               	xorwf	??_CantaPartAlta^0,w,c
  6343  0011C8  6E8B               	movwf	139,c	;volatile
  6344                           
  6345                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  6346  0011CA  A85A               	btfss	CantaPartAlta@c^0,4,c
  6347  0011CC  D003               	goto	u2060
  6348  0011CE  6A59               	clrf	??_CantaPartAlta^0,c
  6349  0011D0  2A59               	incf	??_CantaPartAlta^0,f,c
  6350  0011D2  D001               	goto	u2078
  6351  0011D4                     u2060:
  6352  0011D4  6A59               	clrf	??_CantaPartAlta^0,c
  6353  0011D6                     u2078:
  6354  0011D6  508B               	movf	139,w,c	;volatile
  6355  0011D8  1859               	xorwf	??_CantaPartAlta^0,w,c
  6356  0011DA  0BFE               	andlw	-2
  6357  0011DC  1859               	xorwf	??_CantaPartAlta^0,w,c
  6358  0011DE  6E8B               	movwf	139,c	;volatile
  6359  0011E0  0012               	return		;funcret
  6360  0011E2                     __end_of_CantaPartAlta:
  6361                           	callstack 0
  6362                           
  6363 ;; *************** function _Espera *****************
  6364 ;; Defined at:
  6365 ;;		line 159 in file "LcTLCD.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  Timer           1    wreg     unsigned char 
  6368 ;;  ms              2   12[COMRAM] int 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  Timer           1   15[COMRAM] unsigned char 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  1    wreg      void 
  6373 ;; Registers used:
  6374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1
  6380 ;;      Params:         2       0       0
  6381 ;;      Locals:         1       0       0
  6382 ;;      Temps:          1       0       0
  6383 ;;      Totals:         4       0       0
  6384 ;;Total ram usage:        4 bytes
  6385 ;; Hardware stack levels used: 1
  6386 ;; Hardware stack levels required when called: 3
  6387 ;; This function calls:
  6388 ;;		_TiGetTics
  6389 ;;		_TiResetTics
  6390 ;; This function is called by:
  6391 ;;		_LcInit
  6392 ;;		_LcClear
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text45
  6397  001546                     __ptext45:
  6398                           	callstack 0
  6399  001546                     _Espera:
  6400                           	callstack 25
  6401                           
  6402                           ;incstack = 0
  6403                           ;Espera@Timer stored from wreg
  6404  001546  6E63               	movwf	Espera@Timer^0,c
  6405                           
  6406                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  6407  001548  5063               	movf	Espera@Timer^0,w,c
  6408  00154A  ECC5  F00A         	call	_TiResetTics
  6409  00154E                     l2779:
  6410  00154E  5063               	movf	Espera@Timer^0,w,c
  6411  001550  EC69  F00A         	call	_TiGetTics
  6412  001554  5060               	movf	Espera@ms^0,w,c
  6413  001556  5C59               	subwf	?_TiGetTics^0,w,c
  6414  001558  505A               	movf	(?_TiGetTics+1)^0,w,c
  6415  00155A  0A80               	xorlw	128
  6416  00155C  6E62               	movwf	??_Espera^0,c
  6417  00155E  5061               	movf	(Espera@ms+1)^0,w,c
  6418  001560  0A80               	xorlw	128
  6419  001562  5862               	subwfb	??_Espera^0,w,c
  6420  001564  B0D8               	btfsc	status,0,c
  6421  001566  0012               	return	
  6422  001568  D7F2               	goto	l2779
  6423  00156A                     __end_of_Espera:
  6424                           	callstack 0
  6425                           
  6426 ;; *************** function _TiResetTics *****************
  6427 ;; Defined at:
  6428 ;;		line 55 in file "TiTTimer.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  Handle          1    wreg     unsigned char 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;  Handle          1    5[COMRAM] unsigned char 
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  1    wreg      void 
  6435 ;; Registers used:
  6436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMRAM   BANK0   BANK1
  6442 ;;      Params:         0       0       0
  6443 ;;      Locals:         1       0       0
  6444 ;;      Temps:          0       0       0
  6445 ;;      Totals:         1       0       0
  6446 ;;Total ram usage:        1 bytes
  6447 ;; Hardware stack levels used: 1
  6448 ;; Hardware stack levels required when called: 2
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_Espera
  6453 ;;		_WaitForBusy
  6454 ;;		_SMotor
  6455 ;;		_TeTeclat
  6456 ;;		_motorAltaveu
  6457 ;;		_GLCDMotor
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text46
  6462  00158A                     __ptext46:
  6463                           	callstack 0
  6464  00158A                     _TiResetTics:
  6465                           	callstack 27
  6466                           
  6467                           ;incstack = 0
  6468                           ;TiResetTics@Handle stored from wreg
  6469  00158A  6E59               	movwf	TiResetTics@Handle^0,c
  6470                           
  6471                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  6472  00158C  5059               	movf	TiResetTics@Handle^0,w,c
  6473  00158E  0D03               	mullw	3
  6474  001590  50F3               	movf	243,w,c
  6475  001592  0F01               	addlw	low _s_Timers
  6476  001594  6ED9               	movwf	fsr2l,c
  6477  001596  6ADA               	clrf	fsr2h,c
  6478  001598  C022  FFDE         	movff	_h_Tics,postinc2
  6479  00159C  C023  FFDD         	movff	_h_Tics+1,postdec2
  6480  0015A0  0012               	return		;funcret
  6481  0015A2                     __end_of_TiResetTics:
  6482                           	callstack 0
  6483                           
  6484 ;; *************** function _TiGetTics *****************
  6485 ;; Defined at:
  6486 ;;		line 61 in file "TiTTimer.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  Handle          1    wreg     unsigned char 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  Handle          1    9[COMRAM] unsigned char 
  6491 ;;  actual          2   10[COMRAM] volatile unsigned int 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  2    5[COMRAM] int 
  6494 ;; Registers used:
  6495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1
  6501 ;;      Params:         2       0       0
  6502 ;;      Locals:         3       0       0
  6503 ;;      Temps:          2       0       0
  6504 ;;      Totals:         7       0       0
  6505 ;;Total ram usage:        7 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; Hardware stack levels required when called: 2
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_Espera
  6512 ;;		_WaitForBusy
  6513 ;;		_SMotor
  6514 ;;		_TeTeclat
  6515 ;;		_motorAltaveu
  6516 ;;		_GLCDMotor
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text47
  6521  0014D2                     __ptext47:
  6522                           	callstack 0
  6523  0014D2                     _TiGetTics:
  6524                           	callstack 27
  6525                           
  6526                           ;incstack = 0
  6527                           ;TiGetTics@Handle stored from wreg
  6528  0014D2  6E5D               	movwf	TiGetTics@Handle^0,c
  6529                           
  6530                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  6531  0014D4  C022  F05E         	movff	_h_Tics,TiGetTics@actual	;volatile
  6532  0014D8  C023  F05F         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  6533                           
  6534                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  6535  0014DC  505D               	movf	TiGetTics@Handle^0,w,c
  6536  0014DE  0D03               	mullw	3
  6537  0014E0  50F3               	movf	243,w,c
  6538  0014E2  0F01               	addlw	low _s_Timers
  6539  0014E4  6ED9               	movwf	fsr2l,c
  6540  0014E6  6ADA               	clrf	fsr2h,c
  6541  0014E8  CFDE F05B          	movff	postinc2,??_TiGetTics
  6542  0014EC  CFDD F05C          	movff	postdec2,??_TiGetTics+1
  6543  0014F0  505B               	movf	??_TiGetTics^0,w,c
  6544  0014F2  5C5E               	subwf	TiGetTics@actual^0,w,c	;volatile
  6545  0014F4  6E59               	movwf	?_TiGetTics^0,c
  6546  0014F6  505C               	movf	(??_TiGetTics+1)^0,w,c
  6547  0014F8  585F               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  6548  0014FA  6E5A               	movwf	(?_TiGetTics+1)^0,c
  6549  0014FC  0012               	return		;funcret
  6550  0014FE                     __end_of_TiGetTics:
  6551                           	callstack 0
  6552                           
  6553 ;; *************** function _GLCDInit *****************
  6554 ;; Defined at:
  6555 ;;		line 26 in file "GestioLCD.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      void 
  6562 ;; Registers used:
  6563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1
  6569 ;;      Params:         0       0       0
  6570 ;;      Locals:         0       0       0
  6571 ;;      Temps:          0       0       0
  6572 ;;      Totals:         0       0       0
  6573 ;;Total ram usage:        0 bytes
  6574 ;; Hardware stack levels used: 1
  6575 ;; Hardware stack levels required when called: 3
  6576 ;; This function calls:
  6577 ;;		_TiGetTimer
  6578 ;; This function is called by:
  6579 ;;		_main
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text48
  6584  001658                     __ptext48:
  6585                           	callstack 0
  6586  001658                     _GLCDInit:
  6587                           	callstack 27
  6588                           
  6589                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  6590                           
  6591                           ;incstack = 0
  6592  001658  ECCF  F009         	call	_TiGetTimer	;wreg free
  6593  00165C  6E2D               	movwf	_timerGLCD^0,c
  6594  00165E  0012               	return		;funcret
  6595  001660                     __end_of_GLCDInit:
  6596                           	callstack 0
  6597                           
  6598 ;; *************** function _TiGetTimer *****************
  6599 ;; Defined at:
  6600 ;;		line 70 in file "TiTTimer.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;		None
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;		None
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  1    wreg      unsigned char 
  6607 ;; Registers used:
  6608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1
  6614 ;;      Params:         0       0       0
  6615 ;;      Locals:         0       0       0
  6616 ;;      Temps:          1       0       0
  6617 ;;      Totals:         1       0       0
  6618 ;;Total ram usage:        1 bytes
  6619 ;; Hardware stack levels used: 1
  6620 ;; Hardware stack levels required when called: 2
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		_LcInit
  6625 ;;		_Sinit
  6626 ;;		_TeInit
  6627 ;;		_Minit
  6628 ;;		_initAltaveu
  6629 ;;		_GLCDInit
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text49
  6634  00139E                     __ptext49:
  6635                           	callstack 0
  6636  00139E                     _TiGetTimer:
  6637                           	callstack 27
  6638                           
  6639                           ;TiTTimer.c: 74:     counter=0;
  6640                           
  6641                           ;incstack = 0
  6642  00139E  0E00               	movlw	0
  6643  0013A0  6E3E               	movwf	_counter^0,c
  6644                           
  6645                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  6646  0013A2  D007               	goto	l1545
  6647  0013A4                     l1537:
  6648                           
  6649                           ;TiTTimer.c: 76:         counter++;
  6650  0013A4  2A3E               	incf	_counter^0,f,c
  6651                           
  6652                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  6653  0013A6  0E08               	movlw	8
  6654  0013A8  183E               	xorwf	_counter^0,w,c
  6655  0013AA  A4D8               	btfss	status,2,c
  6656  0013AC  D002               	goto	l1545
  6657  0013AE  0EFF               	movlw	255
  6658  0013B0  0012               	return	
  6659  0013B2                     l1545:
  6660                           
  6661                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  6662  0013B2  503E               	movf	_counter^0,w,c
  6663  0013B4  0D03               	mullw	3
  6664  0013B6  50F3               	movf	243,w,c
  6665  0013B8  0F03               	addlw	low (_s_Timers+2)
  6666  0013BA  6ED9               	movwf	fsr2l,c
  6667  0013BC  6ADA               	clrf	fsr2h,c
  6668  0013BE  04DE               	decf	postinc2,w,c
  6669  0013C0  B4D8               	btfsc	status,2,c
  6670  0013C2  D7F0               	goto	l1537
  6671                           
  6672                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  6673  0013C4  503E               	movf	_counter^0,w,c
  6674  0013C6  0D03               	mullw	3
  6675  0013C8  50F3               	movf	243,w,c
  6676  0013CA  0F03               	addlw	low (_s_Timers+2)
  6677  0013CC  6ED9               	movwf	fsr2l,c
  6678  0013CE  6ADA               	clrf	fsr2h,c
  6679  0013D0  0E01               	movlw	1
  6680  0013D2  6EDF               	movwf	indf2,c
  6681                           
  6682                           ;TiTTimer.c: 80:     return (counter);
  6683  0013D4  503E               	movf	_counter^0,w,c
  6684  0013D6  0012               	return		;funcret
  6685  0013D8                     __end_of_TiGetTimer:
  6686                           	callstack 0
  6687                           
  6688 ;; *************** function _high_rsi *****************
  6689 ;; Defined at:
  6690 ;;		line 17 in file "main.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;		None
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;		None
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  1    wreg      void 
  6697 ;; Registers used:
  6698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1
  6704 ;;      Params:         0       0       0
  6705 ;;      Locals:         0       0       0
  6706 ;;      Temps:          4       0       0
  6707 ;;      Totals:         4       0       0
  6708 ;;Total ram usage:        4 bytes
  6709 ;; Hardware stack levels used: 1
  6710 ;; Hardware stack levels required when called: 1
  6711 ;; This function calls:
  6712 ;;		__TiRSITimer
  6713 ;; This function is called by:
  6714 ;;		Interrupt level 2
  6715 ;; This function uses a non-reentrant model
  6716 ;;
  6717                           
  6718                           	psect	intcode
  6719  000008                     __pintcode:
  6720                           	callstack 0
  6721  000008                     _high_rsi:
  6722                           	callstack 24
  6723                           
  6724                           ;incstack = 0
  6725  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6726  00000A  CFD9 F055          	movff	fsr2l,??_high_rsi
  6727  00000E  CFDA F056          	movff	fsr2h,??_high_rsi+1
  6728  000012  CFF3 F057          	movff	prodl,??_high_rsi+2
  6729  000016  CFF4 F058          	movff	prodh,??_high_rsi+3
  6730  00001A  ECF1  F008         	call	__TiRSITimer	;wreg free
  6731  00001E  C058  FFF4         	movff	??_high_rsi+3,prodh
  6732  000022  C057  FFF3         	movff	??_high_rsi+2,prodl
  6733  000026  C056  FFDA         	movff	??_high_rsi+1,fsr2h
  6734  00002A  C055  FFD9         	movff	??_high_rsi,fsr2l
  6735  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6736  000030  0011               	retfie		f
  6737  000032                     __end_of_high_rsi:
  6738                           	callstack 0
  6739                           
  6740 ;; *************** function __TiRSITimer *****************
  6741 ;; Defined at:
  6742 ;;		line 37 in file "TiTTimer.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;		None
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;		None
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      void 
  6749 ;; Registers used:
  6750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1
  6756 ;;      Params:         0       0       0
  6757 ;;      Locals:         0       0       0
  6758 ;;      Temps:          1       0       0
  6759 ;;      Totals:         1       0       0
  6760 ;;Total ram usage:        1 bytes
  6761 ;; Hardware stack levels used: 1
  6762 ;; This function calls:
  6763 ;;		Nothing
  6764 ;; This function is called by:
  6765 ;;		_high_rsi
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text51
  6770  0011E2                     __ptext51:
  6771                           	callstack 0
  6772  0011E2                     __TiRSITimer:
  6773                           	callstack 24
  6774                           
  6775                           ;TiTTimer.c: 39:     TMR0H = 223;
  6776                           
  6777                           ;incstack = 0
  6778  0011E2  0EDF               	movlw	223
  6779  0011E4  6ED7               	movwf	215,c	;volatile
  6780                           
  6781                           ;TiTTimer.c: 40:     TMR0L = 148;
  6782  0011E6  0E94               	movlw	148
  6783  0011E8  6ED6               	movwf	214,c	;volatile
  6784                           
  6785                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  6786  0011EA  94F2               	bcf	242,2,c	;volatile
  6787                           
  6788                           ;TiTTimer.c: 42:     h_Tics++;
  6789  0011EC  4A22               	infsnz	_h_Tics^0,f,c
  6790  0011EE  2A23               	incf	(_h_Tics+1)^0,f,c
  6791                           
  6792                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  6793  0011F0  0E48               	movlw	72
  6794  0011F2  5C22               	subwf	_h_Tics^0,w,c
  6795  0011F4  0EEE               	movlw	238
  6796  0011F6  5823               	subwfb	(_h_Tics+1)^0,w,c
  6797  0011F8  A0D8               	btfss	status,0,c
  6798  0011FA  0012               	return	
  6799                           
  6800                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  6801  0011FC  0E00               	movlw	0
  6802  0011FE  6E3E               	movwf	_counter^0,c
  6803  001200                     i2l1755:
  6804  001200  0E07               	movlw	7
  6805  001202  643E               	cpfsgt	_counter^0,c
  6806  001204  D001               	goto	i2l1759
  6807  001206  D015               	goto	i2l1767
  6808  001208                     i2l1759:
  6809                           
  6810                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  6811  001208  503E               	movf	_counter^0,w,c
  6812  00120A  0D03               	mullw	3
  6813  00120C  50F3               	movf	243,w,c
  6814  00120E  0F03               	addlw	low (_s_Timers+2)
  6815  001210  6ED9               	movwf	fsr2l,c
  6816  001212  6ADA               	clrf	fsr2h,c
  6817  001214  04DE               	decf	postinc2,w,c
  6818  001216  A4D8               	btfss	status,2,c
  6819  001218  D00A               	goto	i2l1763
  6820                           
  6821                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  6822  00121A  503E               	movf	_counter^0,w,c
  6823  00121C  0D03               	mullw	3
  6824  00121E  50F3               	movf	243,w,c
  6825  001220  0F01               	addlw	low _s_Timers
  6826  001222  6ED9               	movwf	fsr2l,c
  6827  001224  6ADA               	clrf	fsr2h,c
  6828  001226  5022               	movf	_h_Tics^0,w,c
  6829  001228  5EDE               	subwf	postinc2,f,c
  6830  00122A  5023               	movf	(_h_Tics+1)^0,w,c
  6831  00122C  5ADD               	subwfb	postdec2,f,c
  6832  00122E                     i2l1763:
  6833                           
  6834                           ;TiTTimer.c: 50:         }
  6835  00122E  2A3E               	incf	_counter^0,f,c
  6836  001230  D7E7               	goto	i2l1755
  6837  001232                     i2l1767:
  6838                           
  6839                           ;TiTTimer.c: 51:         h_Tics=0;
  6840  001232  0E00               	movlw	0
  6841  001234  6E23               	movwf	(_h_Tics+1)^0,c
  6842  001236  0E00               	movlw	0
  6843  001238  6E22               	movwf	_h_Tics^0,c
  6844  00123A  0012               	return		;funcret
  6845  00123C                     __end_of__TiRSITimer:
  6846                           	callstack 0
  6847                           
  6848                           	psect	rparam
  6849  0000                     
  6850                           	psect	temp
  6851  00007A                     btemp:
  6852                           	callstack 0
  6853  00007A                     	ds	1
  6854  0000                     int$flags	set	btemp
  6855  0000                     wtemp8	set	btemp+1
  6856  0000                     ttemp5	set	btemp+1
  6857  0000                     ttemp6	set	btemp+4
  6858  0000                     ttemp7	set	btemp+8
  6859                           
  6860                           	psect	idloc
  6861                           
  6862                           ;Config register IDLOC0 @ 0x200000
  6863                           ;	unspecified, using default values
  6864  200000                     	org	2097152
  6865  200000  FF                 	db	255
  6866                           
  6867                           ;Config register IDLOC1 @ 0x200001
  6868                           ;	unspecified, using default values
  6869  200001                     	org	2097153
  6870  200001  FF                 	db	255
  6871                           
  6872                           ;Config register IDLOC2 @ 0x200002
  6873                           ;	unspecified, using default values
  6874  200002                     	org	2097154
  6875  200002  FF                 	db	255
  6876                           
  6877                           ;Config register IDLOC3 @ 0x200003
  6878                           ;	unspecified, using default values
  6879  200003                     	org	2097155
  6880  200003  FF                 	db	255
  6881                           
  6882                           ;Config register IDLOC4 @ 0x200004
  6883                           ;	unspecified, using default values
  6884  200004                     	org	2097156
  6885  200004  FF                 	db	255
  6886                           
  6887                           ;Config register IDLOC5 @ 0x200005
  6888                           ;	unspecified, using default values
  6889  200005                     	org	2097157
  6890  200005  FF                 	db	255
  6891                           
  6892                           ;Config register IDLOC6 @ 0x200006
  6893                           ;	unspecified, using default values
  6894  200006                     	org	2097158
  6895  200006  FF                 	db	255
  6896                           
  6897                           ;Config register IDLOC7 @ 0x200007
  6898                           ;	unspecified, using default values
  6899  200007                     	org	2097159
  6900  200007  FF                 	db	255
  6901                           
  6902                           	psect	config
  6903                           
  6904                           ; Padding undefined space
  6905  300000                     	org	3145728
  6906  300000  FF                 	db	255
  6907                           
  6908                           ;Config register CONFIG1H @ 0x300001
  6909                           ;	Oscillator
  6910                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  6911                           ;	Fail-Safe Clock Monitor Enable bit
  6912                           ;	FCMEN = 0x0, unprogrammed default
  6913                           ;	Internal/External Oscillator Switchover bit
  6914                           ;	IESO = 0x0, unprogrammed default
  6915  300001                     	org	3145729
  6916  300001  06                 	db	6
  6917                           
  6918                           ;Config register CONFIG2L @ 0x300002
  6919                           ;	unspecified, using default values
  6920                           ;	Power-up Timer Enable bit
  6921                           ;	PWRT = 0x1, unprogrammed default
  6922                           ;	Brown-out Reset Enable bits
  6923                           ;	BOR = 0x3, unprogrammed default
  6924                           ;	Brown-out Reset Voltage bits
  6925                           ;	BORV = 0x3, unprogrammed default
  6926  300002                     	org	3145730
  6927  300002  1F                 	db	31
  6928                           
  6929                           ;Config register CONFIG2H @ 0x300003
  6930                           ;	Watchdog Timer Enable bit
  6931                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6932                           ;	Watchdog Timer Postscale Select bits
  6933                           ;	WDTPS = 0xF, unprogrammed default
  6934  300003                     	org	3145731
  6935  300003  1E                 	db	30
  6936                           
  6937                           ; Padding undefined space
  6938  300004                     	org	3145732
  6939  300004  FF                 	db	255
  6940                           
  6941                           ;Config register CONFIG3H @ 0x300005
  6942                           ;	CCP2 MUX bit
  6943                           ;	CCP2MX = 0x1, unprogrammed default
  6944                           ;	PORTB A/D Enable bit
  6945                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  6946                           ;	Low-Power Timer1 Oscillator Enable bit
  6947                           ;	LPT1OSC = 0x0, unprogrammed default
  6948                           ;	MCLR Pin Enable bit
  6949                           ;	MCLRE = 0x1, unprogrammed default
  6950  300005                     	org	3145733
  6951  300005  81                 	db	129
  6952                           
  6953                           ;Config register CONFIG4L @ 0x300006
  6954                           ;	Stack Full/Underflow Reset Enable bit
  6955                           ;	STVREN = 0x1, unprogrammed default
  6956                           ;	Single-Supply ICSP Enable bit
  6957                           ;	LVP = OFF, Single-Supply ICSP disabled
  6958                           ;	Boot Block Size Select bits
  6959                           ;	BBSIZ = 0x0, unprogrammed default
  6960                           ;	Extended Instruction Set Enable bit
  6961                           ;	XINST = 0x0, unprogrammed default
  6962                           ;	Background Debugger Enable bit
  6963                           ;	DEBUG = 0x1, unprogrammed default
  6964  300006                     	org	3145734
  6965  300006  81                 	db	129
  6966                           
  6967                           ; Padding undefined space
  6968  300007                     	org	3145735
  6969  300007  FF                 	db	255
  6970                           
  6971                           ;Config register CONFIG5L @ 0x300008
  6972                           ;	unspecified, using default values
  6973                           ;	Code Protection bit
  6974                           ;	CP0 = 0x1, unprogrammed default
  6975                           ;	Code Protection bit
  6976                           ;	CP1 = 0x1, unprogrammed default
  6977  300008                     	org	3145736
  6978  300008  03                 	db	3
  6979                           
  6980                           ;Config register CONFIG5H @ 0x300009
  6981                           ;	unspecified, using default values
  6982                           ;	Boot Block Code Protection bitProtect Boot
  6983                           ;	CPB = 0x1, unprogrammed default
  6984                           ;	Data EEPROM Code Protection bit
  6985                           ;	CPD = 0x1, unprogrammed default
  6986  300009                     	org	3145737
  6987  300009  C0                 	db	192
  6988                           
  6989                           ;Config register CONFIG6L @ 0x30000A
  6990                           ;	unspecified, using default values
  6991                           ;	Write Protection bit
  6992                           ;	WRT0 = 0x1, unprogrammed default
  6993                           ;	Write Protection bit
  6994                           ;	WRT1 = 0x1, unprogrammed default
  6995  30000A                     	org	3145738
  6996  30000A  03                 	db	3
  6997                           
  6998                           ;Config register CONFIG6H @ 0x30000B
  6999                           ;	unspecified, using default values
  7000                           ;	Configuration Register Write Protection bit
  7001                           ;	WRTC = 0x1, unprogrammed default
  7002                           ;	Boot Block Write Protection bit
  7003                           ;	WRTB = 0x1, unprogrammed default
  7004                           ;	Data EEPROM Write Protection bit
  7005                           ;	WRTD = 0x1, unprogrammed default
  7006  30000B                     	org	3145739
  7007  30000B  E0                 	db	224
  7008                           
  7009                           ;Config register CONFIG7L @ 0x30000C
  7010                           ;	unspecified, using default values
  7011                           ;	Table Read Protection bit
  7012                           ;	EBTR0 = 0x1, unprogrammed default
  7013                           ;	Table Read Protection bit
  7014                           ;	EBTR1 = 0x1, unprogrammed default
  7015  30000C                     	org	3145740
  7016  30000C  03                 	db	3
  7017                           
  7018                           ;Config register CONFIG7H @ 0x30000D
  7019                           ;	unspecified, using default values
  7020                           ;	Boot Block Table Read Protection bit
  7021                           ;	EBTRB = 0x1, unprogrammed default
  7022  30000D                     	org	3145741
  7023  30000D  40                 	db	64
  7024                           tosu	equ	0xFFF
  7025                           tosh	equ	0xFFE
  7026                           tosl	equ	0xFFD
  7027                           stkptr	equ	0xFFC
  7028                           pclatu	equ	0xFFB
  7029                           pclath	equ	0xFFA
  7030                           pcl	equ	0xFF9
  7031                           tblptru	equ	0xFF8
  7032                           tblptrh	equ	0xFF7
  7033                           tblptrl	equ	0xFF6
  7034                           tablat	equ	0xFF5
  7035                           prodh	equ	0xFF4
  7036                           prodl	equ	0xFF3
  7037                           indf0	equ	0xFEF
  7038                           postinc0	equ	0xFEE
  7039                           postdec0	equ	0xFED
  7040                           preinc0	equ	0xFEC
  7041                           plusw0	equ	0xFEB
  7042                           fsr0h	equ	0xFEA
  7043                           fsr0l	equ	0xFE9
  7044                           wreg	equ	0xFE8
  7045                           indf1	equ	0xFE7
  7046                           postinc1	equ	0xFE6
  7047                           postdec1	equ	0xFE5
  7048                           preinc1	equ	0xFE4
  7049                           plusw1	equ	0xFE3
  7050                           fsr1h	equ	0xFE2
  7051                           fsr1l	equ	0xFE1
  7052                           bsr	equ	0xFE0
  7053                           indf2	equ	0xFDF
  7054                           postinc2	equ	0xFDE
  7055                           postdec2	equ	0xFDD
  7056                           preinc2	equ	0xFDC
  7057                           plusw2	equ	0xFDB
  7058                           fsr2h	equ	0xFDA
  7059                           fsr2l	equ	0xFD9
  7060                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    110
    Data        29
    BSS         267
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20     121
    BANK0           128      2      14
    BANK1           256      0     184

Pointer List with Targets:

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(COMRAM[9]), 

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 110
		 -> menuList(CODE[110]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 110
		 -> menuList(CODE[110]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_LcInit
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_GLCDMotor
    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16271
                           _GLCDInit
                          _GLCDMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                     _escriureEEPROM
                        _initAltaveu
                         _init_ports
                               _menu
                       _motorAltaveu
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    6263
                                              0 BANK0      2     2      0
                     _GLCDMostraMenu
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1689
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    5923
                                              0 BANK0      2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1689
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     478
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2332
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1357
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _LcCursorOff
       _CantaIR
       _WaitForBusy
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _init_ports
   _menu
     _GLCDMostraMenu
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _SMSoff
     _SMSon
     _SiFerMenu
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
   _motorAltaveu
     _TiGetTics
     _TiResetTics

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      2       E       4       10.9%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     14      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13F       7        0.0%
DATA                 0      0     13F       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 29 17:22:22 2022

               TiResetTics@Handle 0059                  _loginNOTRegister 03CD  
                               _i 0035                                 _j 0034  
       ??_UcheckExistsNotFinished 0059            __end_of_compareStrings 1324  
                             l441 06AA                               l543 151A  
                             l552 0F94                               l640 0EC8  
                             l721 0318                               l609 14C2  
                             l562 0FE4                               l564 0FEA  
                             l468 0804                               l733 03B0  
                             l557 0FA8                               l549 0F86  
                             l581 0B0E                               l469 0816  
                             l582 0B1E                               l751 0550  
                             l559 0FAE                               l584 0B2C  
                             l753 0580                               u230 104C  
                             u250 1068                               u308 109C  
                             u270 1082                               u248 104E  
                             u290 109A                               u268 106A  
                             u288 1084                               _tmp 003D  
                ??_CantaPartBaixa 0059                               prod 000FF3  
                             wreg 000FE8                       _ultimaTecla 0075  
              __size_of_GLCDMotor 03BE                              l2015 0FA4  
                            l3001 0978                              l3021 09B4  
                            l3013 099C                              l2045 1026  
                            l3015 09A0                              l3121 0AC6  
                            l3113 0A9E                              l3033 09D4  
                            l3025 09B8                              l3051 0A16  
                            l3043 09F6                              l1605 160C  
                            l4101 045C                              l4021 02F6  
                            l4013 02CA                              l3117 0AB0  
                            l3061 0A30                              l4111 048A  
                            l4007 02BC                              l3071 0A4E  
                            l3039 09EA                              l3127 0ACA  
                            l1537 13A4                              l1545 13B2  
                            l4041 037E                              l3401 0B70  
                            l1633 15E8                              l4131 04FA  
                            l4027 0326                              l3091 0A82  
                            l3403 0B76                              l4117 049A  
                            l3085 0A72                              l3077 0A58  
                            l1813 13FC                              l4213 12C0  
                            l4055 03A0                              l3095 0A8A  
                            l3431 0C2C                              l3415 0BC2  
                            l3351 0EFE                              l3343 0EEE  
                            l3335 0EDA                              l4049 038C  
                            l1809 13F4                              l3441 0C44  
                            l3337 0EE0                              l4163 058E  
                            l4155 057A                              l4147 055A  
                            l4139 052A                              l4091 0410  
                            l3419 0BD4                              l3371 0F58  
                            l4173 05AA                              l4085 03EA  
                            l3701 0D40                              l4167 0596  
                            l4095 0432                              l4183 05F4  
                            l3711 0D7C                              l3447 0C52  
                            l3455 0C5E                              l3359 0F2C  
                            l2753 1336                              l4177 05D0  
                            l2913 0E12                              l3721 0D92  
                            l3705 0D4C                              l2851 1282  
                            l2843 1268                              l3731 0DAA  
                            l3387 0B36                              l1787 14A8  
                            l2845 1272                              l3725 0D9E  
                            l3717 0D8A                              l3397 0B66  
                            l3821 0698                              l3805 0664  
                            l3671 0CF2                              l3663 0CDC  
                            l3903 079E                              l3823 069E  
                            l3815 0686                              l2785 1374  
                            l2961 08F6                              l3665 0CE0  
                            l3657 0CCC                              l3921 07C6  
                            l3905 07A4                              l2779 154E  
                            l3691 0D26                              l2891 12FC  
                            l3851 06FA                              l3843 06E0  
                            l3835 06C0                              l3685 0D10  
                            l3669 0CEC                              l2885 12E0  
                            l3909 07AE                              l3861 0722  
                            l3853 0700                              l2983 093A  
                            l3679 0D02                              l3863 0728  
                            l2985 0940                              l2969 090A  
                            l3697 0D34                              l3955 0828  
                            l3939 07F6                              l3867 0732  
                            l3893 0776                              l2999 0972  
                            l3959 0852                              l3895 077C  
                            l3879 074A                              l3799 0652  
                            l3977 087A                              l3969 0868  
                            l3987 088C                              l3997 0294  
                            STR_1 027A                              STR_2 026F  
                            STR_3 0289                              STR_4 0282  
                            u2000 1186                              u2020 11A2  
                            u2100 113A                              u2040 11BC  
                            u2120 1154                              u2018 1188  
                            u2060 11D4                              u2140 116C  
                            u2038 11A4                              u2118 113C  
                            u2080 111E                              u4000 0842  
                            _LATD 000F8C                              u2058 11BE  
                            u2138 1156                              u4002 0844  
                            u2078 11D6                              u2158 116E  
                            u2270 1308                              u3070 0B30  
                            u2280 0EC0                              u2520 0A06  
                            u2098 1120                              u2380 095E  
                            u4160 0386                              u3600 0CBC  
                            u4090 02C6                              u2490 09E4  
                            u2580 0A60                              u4190 03A8  
                            u2590 0A7A                              u3606 0CBE  
                            u3570 0C92                              u3580 0C9C  
                            u3590 0CAC                              u3760 0696  
                            u3586 0C9E                              u3578 0C94  
                            u3930 07D6                              u3596 0CAE  
                            u3860 075A                              u3980 0822  
                            u3990 0830                              u3992 0832  
                 ??_SsetNovaTecla 0059                              _Rows 004A  
                            _main 128E                              _menu 0650  
                            _nota 0031                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 007A  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 1546                              start 0032  
                 __end_of_CantaIR 1474                      ?_initAltaveu 0054  
                   LcInit@columns 0064                      ___param_bank 000000  
                __end_of_GLCDInit 1660                       Espera@Timer 0063  
                           ?_main 0054           __size_of_escriureEEPROM 002E  
                           ?_menu 0054                             _EEADR 000FA9  
                   ??_TiInitTimer 0059                             _T0CON 000FD5  
                 ?_compareStrings 0059                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _LcLCD 1474  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _SMSon 1660                       _MNovaLletra 1640  
                           _Minit 1648                             _Sinit 1638  
                           _Timer 0046                             _Uinit 0F7C  
                           _s_ptr 0045                             _nou_s 03CF  
                     _LcCursorOff 15F8       __size_of_escriureCharEEPROM 0024  
                  __pbitbssCOMRAM 03C8                             tablat 000FF5  
                     _LcNewString 1650                     ??_TiResetTics 0059  
                           ttemp5 007B                             ttemp6 007E  
                           ttemp7 0082                             status 000FD8  
                           wtemp8 007B     __size_of_UcheckExistsGetError 0008  
                __end_of_LcGotoXY 139E                  __end_of_LcLliure 1610  
                   ??__TiRSITimer 0054                        _TiGetTimer 139E  
         EscriuPrimeraOrdre@ordre 005A                   __initialization 10AA  
              __size_of_CantaData 0032                      __end_of_main 12DE  
                    __end_of_menu 08F4                 __end_of_GLCDMotor 0650  
                __end_of_TeTeclat 0DEC                     _indexNextUser 0037  
                          ??_main 0068                            ??_menu 008C  
              __size_of_LcPutChar 0052                     __activetblptr 000002  
                GLCDMotor@length1 0025                  GLCDMotor@length2 0024  
                          ?_LcLCD 0054                            ?_SMSon 0054  
                          ?_Minit 0054                            ?_Sinit 0054  
                          ?_Uinit 0054               __end_of_TiInitTimer 1410  
                          _EEDATA 000FA8                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_SiFerMenu 0004  
                       ??_LcClear 0067                         ??_CantaIR 005B  
                          i2l1763 122E                            i2l1755 1200  
                          i2l1767 1232                            i2l1759 1208  
                  LcGotoXY@Fisics 0062                    LcGotoXY@Column 0066  
                   ??_WaitForBusy 0060                __size_of_TiGetTics 002C  
                  _sumaPulsacions 0044                            _SMSoff 1666  
                          _LcInit 0DEC                    _UgetNumUsuaris 166C  
                          _SMotor 08F4               escriureCharEEPROM@c 005A  
                          _TeInit 1630                            _Espera 1546  
                    _LcGotoXY$342 0064                            _RowAct 0048  
             __end_of_TiResetTics 15A2                            Uinit@i 005B  
                          Uinit@j 005C                  __end_of_high_rsi 0032  
                          _h_Tics 0022               __end_of__TiRSITimer 123C  
                __end_of_menuList 026F                            clear_0 10F0  
                          clear_1 10FE                        _UenviaChar 15C4  
                          isa$std 000001                        UenviaPas@c 005A  
     __size_of_EscriuPrimeraOrdre 007A                      __pdataCOMRAM 0068  
          __size_of_CantaPartAlta 0068                __size_of_UenviaPas 0010  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentUsrIndex 0039                 __end_of_CantaData 1442  
                    TeTeclat@cols 0040                         ?_GLCDInit 0054  
                   ?_UcheckExists 0054                        __accesstop 0080  
         __end_of__initialization 1104            __end_of_UgetNumUsuaris 1670  
               __end_of_LcPutChar 128E                     ___rparam_used 000001  
                   __end_of_LcLCD 14A4                       ?_TiGetTimer 0054  
                   __end_of_SMSon 1666                    __pcstackCOMRAM 0054  
                   __end_of_Minit 1650               __end_of_WaitForBusy 1364  
                   __end_of_Sinit 1640                     __end_of_Uinit 1030  
                    __pidataBANK0 15D4              __size_of_initAltaveu 0008  
               __end_of_URegister 1678                 __end_of_SiFerMenu 167C  
                  _escriureEEPROM 14A4                 __end_of_TiGetTics 14FE  
                     _TiInitTimer 13D8                           ??_LcLCD 0068  
                         ??_SMSon 0059                         ?_LcGotoXY 0061  
                       ?_LcLliure 0054                           ??_Minit 005A  
                         ??_Sinit 005A                           ??_Uinit 0059  
                  ??_UcheckExists 0059                        ??_GLCDInit 005A  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK1 0100  
                       ?_TeTeclat 0054                       _TiResetTics 158A  
                 ?_UgetNumUsuaris 0054                     ??_UmotorUsers 005E  
                         ?_SMSoff 0054                           ?_LcInit 0064  
                   _CantaPartAlta 117A                           ?_SMotor 0054  
                         ?_TeInit 0054                           ?_Espera 0060  
               __end_of_UenviaPas 15C4                       __TiRSITimer 11E2  
             _indexNextUserStruct 0036                  ??_compareStrings 005C  
          __end_of_escriureEEPROM 14D2                       ?_UenviaChar 0059  
          __size_of_MsetNovaTecla 0008                           LcInit@i 0066  
                      ??_LcGotoXY 0062                      ?_MNovaLletra 0054  
                      ??_LcLliure 0059               __size_of_TiGetTimer 003A  
                    ?_LcCursorOff 0054                         ?_high_rsi 0054  
                         _LcClear 1522                           _CantaIR 1442  
                    ?_LcNewString 0059                        ??_TeTeclat 0060  
                     _WaitForBusy 1324                    ?_CantaPartAlta 0054  
                         _Columns 0049             __end_of_SsetNovaTecla 1628  
                 __size_of_SMSoff 0006                   __size_of_LcInit 00DA  
                         __Hparam 0000                   __size_of_SMotor 0218  
                 __size_of_TeInit 0008                   __size_of_Espera 0024  
                         __Lparam 0000               __end_of_UmotorUsers 0C88  
        ?_UcheckExistsNotFinished 0054                   ?_escriureEEPROM 0054  
                   ?_motorAltaveu 0054                      __psmallconst 0200  
                         __pcinit 10AA      __end_of_UcheckExistsGetError 1618  
                         _ferMenu 03C9                        _init_ports 156A  
                         __ramtop 0200                           __ptext0 128E  
                         __ptext1 0EC6                           __ptext2 0650  
                         __ptext3 166C                           __ptext4 15B4  
                         __ptext5 15C4                           __ptext6 15E0  
                         __ptext7 1610                           __ptext8 1670  
                         __ptext9 1674                         _T0CONbits 000FD5  
                       _GLCDMotor 0292                         CantaIR@IR 005B  
                         _counter 003E                       UenviaChar@c 005A  
      __end_of_escriureCharEEPROM 1522                  LcNewString@new_s 0059  
                 WaitForBusy@Busy 0060                       Uinit@j_1041 005D  
               GLCDMostraMenu@num 0059                        ??_high_rsi 0055  
            end_of_initialization 1104                           _usuaris 0100  
         __size_of_CantaPartBaixa 0068                     __Lmediumconst 0000  
                 TiGetTics@Handle 005D                     _MsetNovaTecla 1628  
             __size_of_UenviaChar 0010                        _novaLletra 0073  
                 TiGetTics@actual 005E                        GLCDMotor@j 002A  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 0060  
                      _numUsuaris 0038              __end_of_UcheckExists 1674  
                   TeTeclat@files 003F                     TeTeclat@state 0041  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 0054                         _TRISCbits 000F94  
                       _TRISDbits 000F95                    _GLCDMostraMenu 15EC  
                 ??_CantaPartAlta 0059                    ?_MsetNovaTecla 0054  
                       _CantaData 1410                 __size_of_GLCDInit 0008  
                     _UmotorUsers 0B0C   __end_of_UcheckExistsNotFinished 15EC  
                  __end_of_SMSoff 166C                      ??_TiGetTimer 0059  
                  __end_of_LcInit 0EC6                    __end_of_SMotor 0B0C  
                       _LcPutChar 123C                    __end_of_TeInit 1638  
               motorAltaveu@state 002E                    __end_of_Espera 156A  
                  GLCDMotor@state 002B        __end_of_EscriuPrimeraOrdre 10AA  
                   __pidataCOMRAM 15A2                       ?_init_ports 0054  
                       _ColumnAct 0047                         _URegister 1674  
                    ?_TiInitTimer 0054                         _SiFerMenu 1678  
             start_initialization 10AA                         _TiGetTics 14D2  
          __end_of_GLCDMostraMenu 15F8                  ??_UgetNumUsuaris 0059  
                UmotorUsers@state 0032                 __size_of_LcGotoXY 003A  
              __end_of_TiGetTimer 13D8              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                      ?_TiResetTics 0054  
            __size_of_LcCursorOff 000C                        ?_CantaData 0054  
            _UcheckExistsGetError 1610              __size_of_LcNewString 0008  
                        ??_SMSoff 0059                          ??_LcInit 0065  
                       _NovaTecla 0074                 __size_of_TeTeclat 0164  
                        ??_SMotor 0060                          ??_TeInit 005A  
                    ?__TiRSITimer 0054                     ??_initAltaveu 005A  
                        ??_Espera 0062                        ?_LcPutChar 0054  
                       _UenviaPas 15B4                       __pdataBANK0 0080  
                    _menuDaltGLCD 002C                      ??_UenviaChar 005A  
                     ??_GLCDMotor 008C                        ?_URegister 0054  
                      ?_SiFerMenu 0054                       __pbssCOMRAM 0001  
                   __pcstackBANK0 008C                        ?_TiGetTics 0059  
                 ?_GLCDMostraMenu 0054                   ??_MsetNovaTecla 0059  
            __end_of_motorAltaveu 0F7C                          ?_LcClear 0054  
                        ?_CantaIR 0054                    _CantaPartBaixa 1112  
           ?_UcheckExistsGetError 0054                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 0054               __size_of_init_ports 0020  
              MsetNovaTecla@tecla 0059                SsetNovaTecla@tecla 0059  
              __end_of_UenviaChar 15D4                  ??_escriureEEPROM 0059  
           __size_of_UcheckExists 0004                         __pintcode 0008  
                      ?_UenviaPas 0059                   CantaPartBaixa@c 005A  
             __end_of_initAltaveu 1620                       __smallconst 0200  
                  __size_of_LcLCD 0030                    __size_of_SMSon 0006  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
                  __size_of_Sinit 0008                    __size_of_Uinit 00B4  
          __end_of_CantaPartBaixa 117A                          _GLCDInit 1658  
              escriureEEPROM@caca 0059                       _do_register 03CB  
                       _newString 03C8                      _UcheckExists 1670  
                     ??_CantaData 005B                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                   UenviaChar@pos 0059                _escriureCharEEPROM 14FE  
                       _novaTecla 0077                       ??_LcPutChar 0067  
                       _timerGLCD 002D                          _RCONbits 000FD0  
                       _reproduir 03CA                         _timerMenu 003C  
             ?_escriureCharEEPROM 0059                       ??_URegister 0059  
                     ??_SiFerMenu 0059            __size_of_SsetNovaTecla 0008  
                        Espera@ms 0060                          _LcGotoXY 1364  
                  _usuariLoguejat 0033                          _LcLliure 1604  
                     ??_TiGetTics 005B           __size_of_compareStrings 0046  
            __size_of_TiInitTimer 0038                     GLCDMotor@max1 0072  
                   GLCDMotor@max2 0071                     GLCDMotor@min1 0029  
                   GLCDMotor@min2 0028                      _teclaPremuda 0080  
                     LcGotoXY@Row 0061                         copy_data0 10BE  
                       copy_data1 10DE              ??_escriureCharEEPROM 005A  
                 ?_CantaPartBaixa 0054            ??_UcheckExistsGetError 0059  
           escriureCharEEPROM@pos 0059                  __size_of_LcClear 0024  
                __size_of_CantaIR 0032                          _TeTeclat 0C88  
                    ?_UmotorUsers 0054                        _EECON1bits 000FA6  
            __size_of_TiResetTics 0018                          __Hrparam 0000  
                     _initAltaveu 1618                         menu@state 003A  
                        __Lrparam 0000              __size_of__TiRSITimer 005A  
                     ??_UenviaPas 005A                      ??_init_ports 0059  
           __size_of_motorAltaveu 00B6                   _do_check_exists 03CC  
                        __ptext10 1678                          __ptext11 1660  
              _EscriuPrimeraOrdre 1030                          __ptext20 0F7C  
                        __ptext12 1666                          __ptext21 13D8  
                        __ptext13 15EC                          __ptext30 1474  
                        __ptext22 0C88                          __ptext14 156A  
                        __ptext31 0DEC                          __ptext23 1620  
                        __ptext15 1618                          __ptext40 1364  
                        __ptext32 15F8                          __ptext24 1628  
                        __ptext16 14A4                          __ptext41 1324  
                        __ptext33 1030                          __ptext25 1630  
                        __ptext17 0B0C                          __ptext42 1442  
                        __ptext34 0292                          __ptext26 1638  
                        __ptext18 14FE                          __ptext51 11E2  
                        __ptext43 1112                          __ptext35 123C  
                        __ptext27 08F4                          __ptext19 12DE  
                        __ptext44 117A                          __ptext36 1410  
                        __ptext28 1640                          __ptext45 1546  
                        __ptext37 1650                          __ptext29 1648  
                        __ptext46 158A                          __ptext38 1604  
                        __ptext47 14D2                          __ptext39 1522  
                        __ptext48 1658                          __ptext49 139E  
                  CantaPartAlta@c 005A                       _lletraASCII 0078  
                        _high_rsi 0008                          _copsNota 002F  
                        _s_Timers 0001                       _lletraInici 0068  
                        _menuDalt 003B                          _menuList 0201  
             ?_EscriuPrimeraOrdre 0054                     __size_of_main 0050  
                   __size_of_menu 02A4             __end_of_CantaPartAlta 11E2  
                   CantaData@Data 005B                          _tiTeclat 0042  
              __end_of_init_ports 158A                          _setSMSon 03CE  
                   _SsetNovaTecla 1620              __size_of_WaitForBusy 0040  
                        _timerSMS 0076                          isa$xinst 000000  
                        int$flags 007A                      UenviaPas@pos 0059  
                    _motorAltaveu 0EC6              ??_EscriuPrimeraOrdre 0059  
                      LcInit@rows 0065                  ??_GLCDMostraMenu 0059  
         _UcheckExistsNotFinished 15E0                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0059                     ??_LcCursorOff 0061  
                   ??_LcNewString 005A                          intlevel2 0000  
                    _timerAltaveu 0030                        LcPutChar@c 0067  
                  ?_SsetNovaTecla 0054                 MNovaLletra@lletra 0059  
                 compareStrings@a 0059                   compareStrings@b 005A  
                     GLCDMotor@k1 0027                       GLCDMotor@k2 0026  
                  _compareStrings 12DE                       _tmpPassword 0019  
             __end_of_MNovaLletra 1648             __end_of_MsetNovaTecla 1630  
                     _tmpUsername 004B               __end_of_LcCursorOff 1604  
                     SMotor@state 0043           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 1658              __size_of_UmotorUsers 017C  
