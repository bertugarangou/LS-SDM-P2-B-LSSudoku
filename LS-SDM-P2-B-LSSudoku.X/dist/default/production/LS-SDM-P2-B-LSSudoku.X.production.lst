

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 22 11:55:42 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.32
    55                           ; Generated 02/02/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4321 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  000D34                     __pidataCOMRAM:
    92                           	callstack 0
    93                           
    94                           ;initializer for _lletraInici
    95  000D34  41                 	db	65
    96  000D35  44                 	db	68
    97  000D36  47                 	db	71
    98  000D37  4A                 	db	74
    99  000D38  4D                 	db	77
   100  000D39  50                 	db	80
   101  000D3A  54                 	db	84
   102  000D3B  57                 	db	87
   103  000D3C  00                 	db	0
   104                           
   105                           ;initializer for _novaLletra
   106  000D3D  FF                 	db	255
   107                           
   108                           ;initializer for _NovaTecla
   109  000D3E  FF                 	db	255
   110                           
   111                           ;initializer for _ultimaTecla
   112  000D3F  FF                 	db	255
   113                           
   114                           ;initializer for _timerSMS
   115  000D40  FF                 	db	255
   116                           
   117                           ;initializer for _novaTecla
   118  000D41  FF                 	db	255
   119                           
   120                           ;initializer for _lletraASCII
   121  000D42  FF                 	db	255
   122                           
   123                           ;initializer for _teclaPremuda
   124  000D43  01                 	db	1
   125  000D44  02                 	db	2
   126  000D45  03                 	db	3
   127  000D46  04                 	db	4
   128  000D47  05                 	db	5
   129  000D48  06                 	db	6
   130  000D49  07                 	db	7
   131  000D4A  08                 	db	8
   132  000D4B  09                 	db	9
   133  000D4C  0A                 	db	10
   134  000D4D  00                 	db	0
   135  000D4E  0B                 	db	11
   136  0000                     _EEDATA	set	4008
   137  0000                     _EEADR	set	4009
   138  0000                     _T0CONbits	set	4053
   139  0000                     _TMR0L	set	4054
   140  0000                     _TMR0H	set	4055
   141  0000                     _T0CON	set	4053
   142  0000                     _INTCONbits	set	4082
   143  0000                     _RCONbits	set	4048
   144  0000                     _PORTDbits	set	3971
   145  0000                     _EECON1bits	set	4006
   146  0000                     _LATD	set	3980
   147  0000                     _TRISD	set	3989
   148  0000                     _TRISC	set	3988
   149  0000                     _LATBbits	set	3978
   150  0000                     _TRISB	set	3987
   151  0000                     _TRISA	set	3986
   152  0000                     _PORTCbits	set	3970
   153  0000                     _LATDbits	set	3980
   154  0000                     _LATCbits	set	3979
   155  0000                     _TRISDbits	set	3989
   156  0000                     _TRISCbits	set	3988
   157                           
   158                           	psect	smallconst
   159  000200                     __psmallconst:
   160                           	callstack 0
   161  000200  00                 	db	0
   162  000201                     STR_2:
   163  000201  32                 	db	50	;'2'
   164  000202  2E                 	db	46
   165  000203  52                 	db	82	;'R'
   166  000204  45                 	db	69	;'E'
   167  000205  47                 	db	71	;'G'
   168  000206  49                 	db	73	;'I'
   169  000207  53                 	db	83	;'S'
   170  000208  54                 	db	84	;'T'
   171  000209  45                 	db	69	;'E'
   172  00020A  52                 	db	82	;'R'
   173  00020B  00                 	db	0
   174  00020C                     STR_1:
   175  00020C  31                 	db	49	;'1'
   176  00020D  2E                 	db	46
   177  00020E  4C                 	db	76	;'L'
   178  00020F  4F                 	db	79	;'O'
   179  000210  47                 	db	71	;'G'
   180  000211  49                 	db	73	;'I'
   181  000212  4E                 	db	78	;'N'
   182  000213  00                 	db	0
   183  000214                     STR_4:
   184  000214  50                 	db	80	;'P'
   185  000215  53                 	db	83	;'S'
   186  000216  57                 	db	87	;'W'
   187  000217  44                 	db	68	;'D'
   188  000218  3A                 	db	58	;':'
   189  000219  20                 	db	32
   190  00021A  00                 	db	0
   191  00021B                     STR_3:
   192  00021B  55                 	db	85	;'U'
   193  00021C  53                 	db	83	;'S'
   194  00021D  45                 	db	69	;'E'
   195  00021E  52                 	db	82	;'R'
   196  00021F  3A                 	db	58	;':'
   197  000220  20                 	db	32
   198  000221  00                 	db	0
   199  000222  00                 	db	0	; dummy byte at the end
   200  0000                     
   201                           ; #config settings
   202                           
   203                           	psect	cinit
   204  000AA0                     __pcinit:
   205                           	callstack 0
   206  000AA0                     start_initialization:
   207                           	callstack 0
   208  000AA0                     __initialization:
   209                           	callstack 0
   210                           
   211                           ; Initialize objects allocated to COMRAM (27 bytes)
   212                           ; load TBLPTR registers with __pidataCOMRAM
   213  000AA0  0E34               	movlw	low __pidataCOMRAM
   214  000AA2  6EF6               	movwf	tblptrl,c
   215  000AA4  0E0D               	movlw	high __pidataCOMRAM
   216  000AA6  6EF7               	movwf	tblptrh,c
   217  000AA8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   218  000AAA  6EF8               	movwf	tblptru,c
   219  000AAC  EE00  F044         	lfsr	0,__pdataCOMRAM
   220  000AB0  EE10 F01B          	lfsr	1,27
   221  000AB4                     copy_data0:
   222  000AB4  0009               	tblrd		*+
   223  000AB6  CFF5 FFEE          	movff	tablat,postinc0
   224  000ABA  50E5               	movf	postdec1,w,c
   225  000ABC  50E1               	movf	fsr1l,w,c
   226  000ABE  E1FA               	bnz	copy_data0
   227                           
   228                           ; Clear objects allocated to BANK1 (144 bytes)
   229  000AC0  EE01  F000         	lfsr	0,__pbssBANK1
   230  000AC4  0E90               	movlw	144
   231  000AC6                     clear_0:
   232  000AC6  6AEE               	clrf	postinc0,c
   233  000AC8  06E8               	decf	wreg,f,c
   234  000ACA  E1FD               	bnz	clear_0
   235                           
   236                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   237  000ACC  6A75               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   238                           
   239                           ; Clear objects allocated to COMRAM (67 bytes)
   240  000ACE  EE00  F001         	lfsr	0,__pbssCOMRAM
   241  000AD2  0E43               	movlw	67
   242  000AD4                     clear_1:
   243  000AD4  6AEE               	clrf	postinc0,c
   244  000AD6  06E8               	decf	wreg,f,c
   245  000AD8  E1FD               	bnz	clear_1
   246  000ADA                     end_of_initialization:
   247                           	callstack 0
   248  000ADA                     __end_of__initialization:
   249                           	callstack 0
   250  000ADA  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   251  000ADC  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   252  000ADE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   253  000AE0  6EF8               	movwf	tblptru,c
   254  000AE2  0100               	movlb	0
   255  000AE4  EFCE  F005         	goto	_main	;jump to C main() function
   256                           
   257                           	psect	bitbssCOMRAM
   258  0003A8                     __pbitbssCOMRAM:
   259                           	callstack 0
   260  0003A8                     _createUser:
   261                           	callstack 0
   262  0003A8                     	ds	1
   263  0003A9                     _loginNOTRegister:
   264                           	callstack 0
   265  0003A9                     	ds	1
   266  0003AA                     _setSMSon:
   267                           	callstack 0
   268  0003AA                     	ds	1
   269  0003AB                     _nou_s:
   270                           	callstack 0
   271  0003AB                     	ds	1
   272                           
   273                           	psect	bssCOMRAM
   274  000001                     __pbssCOMRAM:
   275                           	callstack 0
   276  000001                     _s_Timers:
   277                           	callstack 0
   278  000001                     	ds	24
   279  000019                     _password:
   280                           	callstack 0
   281  000019                     	ds	9
   282  000022                     _username:
   283                           	callstack 0
   284  000022                     	ds	9
   285  00002B                     _tmpPassword:
   286                           	callstack 0
   287  00002B                     	ds	2
   288  00002D                     _tmpUsername:
   289                           	callstack 0
   290  00002D                     	ds	2
   291  00002F                     _h_Tics:
   292                           	callstack 0
   293  00002F                     	ds	2
   294  000031                     _indexLastUser:
   295                           	callstack 0
   296  000031                     	ds	1
   297  000032                     _numUsuaris:
   298                           	callstack 0
   299  000032                     	ds	1
   300  000033                     _currentUsrIndex:
   301                           	callstack 0
   302  000033                     	ds	1
   303  000034                     menu@state:
   304                           	callstack 0
   305  000034                     	ds	1
   306  000035                     _timerMenu:
   307                           	callstack 0
   308  000035                     	ds	1
   309  000036                     _j:
   310                           	callstack 0
   311  000036                     	ds	1
   312  000037                     _counter:
   313                           	callstack 0
   314  000037                     	ds	1
   315  000038                     TeTeclat@files:
   316                           	callstack 0
   317  000038                     	ds	1
   318  000039                     TeTeclat@cols:
   319                           	callstack 0
   320  000039                     	ds	1
   321  00003A                     TeTeclat@state:
   322                           	callstack 0
   323  00003A                     	ds	1
   324  00003B                     _tiTeclat:
   325                           	callstack 0
   326  00003B                     	ds	1
   327  00003C                     SMotor@state:
   328                           	callstack 0
   329  00003C                     	ds	1
   330  00003D                     _sumaPulsacions:
   331                           	callstack 0
   332  00003D                     	ds	1
   333  00003E                     _s_ptr:
   334                           	callstack 0
   335  00003E                     	ds	1
   336  00003F                     _Timer:
   337                           	callstack 0
   338  00003F                     	ds	1
   339  000040                     _ColumnAct:
   340                           	callstack 0
   341  000040                     	ds	1
   342  000041                     _RowAct:
   343                           	callstack 0
   344  000041                     	ds	1
   345  000042                     _Columns:
   346                           	callstack 0
   347  000042                     	ds	1
   348  000043                     _Rows:
   349                           	callstack 0
   350  000043                     	ds	1
   351                           
   352                           	psect	dataCOMRAM
   353  000044                     __pdataCOMRAM:
   354                           	callstack 0
   355  000044                     _lletraInici:
   356                           	callstack 0
   357  000044                     	ds	9
   358  00004D                     _novaLletra:
   359                           	callstack 0
   360  00004D                     	ds	1
   361  00004E                     _NovaTecla:
   362                           	callstack 0
   363  00004E                     	ds	1
   364  00004F                     _ultimaTecla:
   365                           	callstack 0
   366  00004F                     	ds	1
   367  000050                     _timerSMS:
   368                           	callstack 0
   369  000050                     	ds	1
   370  000051                     _novaTecla:
   371                           	callstack 0
   372  000051                     	ds	1
   373  000052                     _lletraASCII:
   374                           	callstack 0
   375  000052                     	ds	1
   376  000053                     _teclaPremuda:
   377                           	callstack 0
   378  000053                     	ds	12
   379                           
   380                           	psect	bssBANK1
   381  000100                     __pbssBANK1:
   382                           	callstack 0
   383  000100                     _usuaris:
   384                           	callstack 0
   385  000100                     	ds	144
   386                           
   387                           	psect	cstackCOMRAM
   388  00005F                     __pcstackCOMRAM:
   389                           	callstack 0
   390  00005F                     
   391                           ; 1 bytes @ 0x0
   392  00005F                     	ds	1
   393  000060                     ??_high_rsi:
   394                           
   395                           ; 1 bytes @ 0x1
   396  000060                     	ds	4
   397  000064                     ??_EscriuPrimeraOrdre:
   398  000064                     ??_Uinit:
   399  000064                     ??_CantaPartAlta:
   400  000064                     ??_CantaPartBaixa:
   401  000064                     ?_TiGetTics:
   402                           	callstack 0
   403  000064                     LcNewString@new_s:
   404                           	callstack 0
   405  000064                     SsetNovaTecla@tecla:
   406                           	callstack 0
   407  000064                     TiResetTics@Handle:
   408                           	callstack 0
   409  000064                     MsetNovaTecla@tecla:
   410                           	callstack 0
   411  000064                     MNovaLletra@lletra:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x5
   415  000064                     	ds	1
   416  000065                     CantaPartAlta@c:
   417                           	callstack 0
   418  000065                     CantaPartBaixa@c:
   419                           	callstack 0
   420  000065                     EscriuPrimeraOrdre@ordre:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x6
   424  000065                     	ds	1
   425  000066                     ??_TiGetTics:
   426  000066                     CantaIR@IR:
   427                           	callstack 0
   428  000066                     CantaData@Data:
   429                           	callstack 0
   430  000066                     Uinit@i:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x7
   434  000066                     	ds	1
   435  000067                     Uinit@j:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x8
   439  000067                     	ds	1
   440  000068                     TiGetTics@Handle:
   441                           	callstack 0
   442  000068                     Uinit@j_932:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x9
   446  000068                     	ds	1
   447  000069                     TiGetTics@actual:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0xA
   451  000069                     	ds	2
   452  00006B                     ??_SMotor:
   453  00006B                     ??_TeTeclat:
   454  00006B                     WaitForBusy@Busy:
   455                           	callstack 0
   456  00006B                     Espera@ms:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0xC
   460  00006B                     	ds	1
   461  00006C                     LcGotoXY@Row:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0xD
   465  00006C                     	ds	1
   466  00006D                     ??_Espera:
   467  00006D                     LcGotoXY@Fisics:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xE
   471  00006D                     	ds	1
   472  00006E                     Espera@Timer:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0xF
   476  00006E                     	ds	1
   477  00006F                     LcInit@columns:
   478                           	callstack 0
   479  00006F                     _LcGotoXY$342:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x10
   483  00006F                     	ds	1
   484  000070                     LcInit@rows:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x11
   488  000070                     	ds	1
   489  000071                     LcGotoXY@Column:
   490                           	callstack 0
   491  000071                     LcInit@i:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x12
   495  000071                     	ds	1
   496  000072                     LcPutChar@c:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x13
   500  000072                     	ds	1
   501  000073                     ??_menu:
   502  000073                     
   503                           ; 1 bytes @ 0x14
   504  000073                     	ds	2
   505  000075                     
   506                           ; 1 bytes @ 0x16
   507 ;;
   508 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   509 ;;
   510 ;; *************** function _main *****************
   511 ;; Defined at:
   512 ;;		line 69 in file "main.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1
   526 ;;      Params:         0       0       0
   527 ;;      Locals:         0       0       0
   528 ;;      Temps:          0       0       0
   529 ;;      Totals:         0       0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels required when called: 7
   532 ;; This function calls:
   533 ;;		_LcInit
   534 ;;		_LcLCD
   535 ;;		_Minit
   536 ;;		_SMotor
   537 ;;		_Sinit
   538 ;;		_TeInit
   539 ;;		_TeTeclat
   540 ;;		_TiInitTimer
   541 ;;		_Uinit
   542 ;;		_init_ports
   543 ;;		_menu
   544 ;; This function is called by:
   545 ;;		Startup code after reset
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text0
   550  000B9C                     __ptext0:
   551                           	callstack 0
   552  000B9C                     _main:
   553                           	callstack 24
   554                           
   555                           ;main.c: 70:     init_ports();
   556                           
   557                           ;incstack = 0
   558  000B9C  EC8A  F006         	call	_init_ports	;wreg free
   559                           
   560                           ;main.c: 71:     TiInitTimer();
   561  000BA0  ECEA  F005         	call	_TiInitTimer	;wreg free
   562                           
   563                           ;main.c: 72:     TeInit();
   564  000BA4  ECCC  F006         	call	_TeInit	;wreg free
   565                           
   566                           ;main.c: 73:     Sinit();
   567  000BA8  ECD0  F006         	call	_Sinit	;wreg free
   568                           
   569                           ;main.c: 74:     SMotor();
   570  000BAC  EC0C  F002         	call	_SMotor	;wreg free
   571                           
   572                           ;main.c: 75:     Uinit();
   573  000BB0  EC01  F004         	call	_Uinit	;wreg free
   574                           
   575                           ;main.c: 77:     LcInit(2,16);
   576  000BB4  0E10               	movlw	16
   577  000BB6  6E6F               	movwf	LcInit@columns^0,c
   578  000BB8  0E02               	movlw	2
   579  000BBA  EC94  F003         	call	_LcInit
   580                           
   581                           ;main.c: 78:     Minit();
   582  000BBE  ECD8  F006         	call	_Minit	;wreg free
   583  000BC2                     l2478:
   584                           
   585                           ;main.c: 82:         menu();
   586  000BC2  EC12  F001         	call	_menu	;wreg free
   587                           
   588                           ;main.c: 85:         TeTeclat();
   589  000BC6  ECE2  F002         	call	_TeTeclat	;wreg free
   590                           
   591                           ;main.c: 86:         SMotor();
   592  000BCA  EC0C  F002         	call	_SMotor	;wreg free
   593                           
   594                           ;main.c: 87:         LcLCD();
   595  000BCE  EC38  F006         	call	_LcLCD	;wreg free
   596  000BD2  D7F7               	goto	l2478
   597  000BD4                     __end_of_main:
   598                           	callstack 0
   599                           
   600 ;; *************** function _menu *****************
   601 ;; Defined at:
   602 ;;		line 27 in file "Menu.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1
   616 ;;      Params:         0       0       0
   617 ;;      Locals:         0       0       0
   618 ;;      Temps:          2       0       0
   619 ;;      Totals:         2       0       0
   620 ;;Total ram usage:        2 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 6
   623 ;; This function calls:
   624 ;;		_LcClear
   625 ;;		_LcGotoXY
   626 ;;		_LcLliure
   627 ;;		_LcNewString
   628 ;;		_LcPutChar
   629 ;;		_SMSon
   630 ;;		_UgetNumUsuaris
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text1
   637  000224                     __ptext1:
   638                           	callstack 0
   639  000224                     _menu:
   640                           	callstack 24
   641                           
   642                           ;Menu.c: 28:  static char state = 0;;Menu.c: 30:  switch(state) {
   643                           
   644                           ;incstack = 0
   645  000224  D0D1               	goto	l2374
   646  000226                     l2240:
   647                           
   648                           ;Menu.c: 32:    LcClear();
   649  000226  EC66  F006         	call	_LcClear	;wreg free
   650                           
   651                           ;Menu.c: 33:    LcNewString("1.LOGIN");
   652  00022A  0E0C               	movlw	low STR_1
   653  00022C  6E64               	movwf	LcNewString@new_s^0,c
   654  00022E  ECC0  F006         	call	_LcNewString	;wreg free
   655                           
   656                           ;Menu.c: 34:    state = 1;
   657  000232  0E01               	movlw	1
   658  000234  6E34               	movwf	menu@state^0,c
   659                           
   660                           ;Menu.c: 35:   break;
   661  000236  0012               	return	
   662  000238                     l2246:
   663                           
   664                           ;Menu.c: 37:    if (LcLliure()) {
   665  000238  ECB4  F006         	call	_LcLliure	;wreg free
   666  00023C  A0D8               	btfss	status,0,c
   667  00023E  0012               	return	
   668                           
   669                           ;Menu.c: 38:     LcGotoXY(0,1);
   670  000240  0E01               	movlw	1
   671  000242  6E6C               	movwf	LcGotoXY@Row^0,c
   672  000244  0E00               	movlw	0
   673  000246  EC94  F005         	call	_LcGotoXY
   674                           
   675                           ;Menu.c: 39:     LcNewString("2.REGISTER");
   676  00024A  0E01               	movlw	low STR_2
   677  00024C  6E64               	movwf	LcNewString@new_s^0,c
   678  00024E  ECC0  F006         	call	_LcNewString	;wreg free
   679                           
   680                           ;Menu.c: 40:     NovaTecla = -1;
   681  000252  684E               	setf	_NovaTecla^0,c
   682                           
   683                           ;Menu.c: 41:     state = 2;
   684  000254  0E02               	movlw	2
   685  000256  6E34               	movwf	menu@state^0,c
   686  000258  0012               	return	
   687  00025A                     l2256:
   688                           
   689                           ;Menu.c: 45:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
   690  00025A  044E               	decf	_NovaTecla^0,w,c
   691  00025C  A4D8               	btfss	status,2,c
   692  00025E  D009               	goto	l2264
   693  000260  ECDF  F006         	call	_UgetNumUsuaris	;wreg free
   694  000264  0900               	iorlw	0
   695  000266  B4D8               	btfsc	status,2,c
   696  000268  D004               	goto	l2264
   697                           
   698                           ;Menu.c: 46:     loginNOTRegister = 1;
   699  00026A  8275               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   700  00026C                     l2262:
   701                           
   702                           ;Menu.c: 47:     state = 3;
   703  00026C  0E03               	movlw	3
   704  00026E  6E34               	movwf	menu@state^0,c
   705                           
   706                           ;Menu.c: 48:    }
   707  000270  0012               	return	
   708  000272                     l2264:
   709  000272  0E02               	movlw	2
   710  000274  184E               	xorwf	_NovaTecla^0,w,c
   711  000276  A4D8               	btfss	status,2,c
   712  000278  0012               	return	
   713  00027A  ECDF  F006         	call	_UgetNumUsuaris	;wreg free
   714  00027E  6E73               	movwf	??_menu^0,c
   715  000280  0E08               	movlw	8
   716  000282  6073               	cpfslt	??_menu^0,c
   717  000284  0012               	return	
   718                           
   719                           ;Menu.c: 50:     loginNOTRegister = 0;
   720  000286  9275               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
   721  000288  D7F1               	goto	l2262
   722  00028A                     l407:
   723                           
   724                           ;Menu.c: 55:    NovaTecla = -1;
   725  00028A  684E               	setf	_NovaTecla^0,c
   726                           
   727                           ;Menu.c: 56:    LcClear();
   728  00028C  EC66  F006         	call	_LcClear	;wreg free
   729                           
   730                           ;Menu.c: 57:    LcNewString("USER: ");
   731  000290  0E1B               	movlw	low STR_3
   732  000292  6E64               	movwf	LcNewString@new_s^0,c
   733  000294  ECC0  F006         	call	_LcNewString	;wreg free
   734                           
   735                           ;Menu.c: 58:    state = 4;
   736  000298  0E04               	movlw	4
   737  00029A  6E34               	movwf	menu@state^0,c
   738                           
   739                           ;Menu.c: 59:   break;
   740  00029C  0012               	return	
   741  00029E                     l2278:
   742                           
   743                           ;Menu.c: 61:    if (LcLliure()) {
   744  00029E  ECB4  F006         	call	_LcLliure	;wreg free
   745  0002A2  A0D8               	btfss	status,0,c
   746  0002A4  0012               	return	
   747                           
   748                           ;Menu.c: 62:     LcGotoXY(0,1);
   749  0002A6  0E01               	movlw	1
   750  0002A8  6E6C               	movwf	LcGotoXY@Row^0,c
   751  0002AA  0E00               	movlw	0
   752  0002AC  EC94  F005         	call	_LcGotoXY
   753                           
   754                           ;Menu.c: 63:     LcNewString("PSWD: ");
   755  0002B0  0E14               	movlw	low STR_4
   756  0002B2  6E64               	movwf	LcNewString@new_s^0,c
   757  0002B4  ECC0  F006         	call	_LcNewString	;wreg free
   758                           
   759                           ;Menu.c: 64:     state = 5;
   760  0002B8  0E05               	movlw	5
   761  0002BA  6E34               	movwf	menu@state^0,c
   762  0002BC  0012               	return	
   763  0002BE                     l2286:
   764                           
   765                           ;Menu.c: 68:    if (LcLliure()) {
   766  0002BE  ECB4  F006         	call	_LcLliure	;wreg free
   767  0002C2  A0D8               	btfss	status,0,c
   768  0002C4  0012               	return	
   769                           
   770                           ;Menu.c: 69:     LcGotoXY(6,0);
   771  0002C6  0E00               	movlw	0
   772  0002C8  6E6C               	movwf	LcGotoXY@Row^0,c
   773  0002CA  0E06               	movlw	6
   774  0002CC  EC94  F005         	call	_LcGotoXY
   775                           
   776                           ;Menu.c: 70:     SMSon();
   777  0002D0  ECDC  F006         	call	_SMSon	;wreg free
   778                           
   779                           ;Menu.c: 71:     j =0;
   780  0002D4  0E00               	movlw	0
   781  0002D6  6E36               	movwf	_j^0,c
   782  0002D8                     l2294:
   783                           
   784                           ;Menu.c: 72:     state = 6;
   785  0002D8  0E06               	movlw	6
   786  0002DA  6E34               	movwf	menu@state^0,c
   787  0002DC  0012               	return	
   788  0002DE                     l2296:
   789                           
   790                           ;Menu.c: 76:    if (novaLletra > 47 && NovaTecla < 11) {
   791  0002DE  504D               	movf	_novaLletra^0,w,c
   792  0002E0  0A80               	xorlw	128
   793  0002E2  0F50               	addlw	-176
   794  0002E4  A0D8               	btfss	status,0,c
   795  0002E6  D014               	goto	l2312
   796  0002E8  504E               	movf	_NovaTecla^0,w,c
   797  0002EA  0A80               	xorlw	128
   798  0002EC  0F75               	addlw	-139
   799  0002EE  B0D8               	btfsc	status,0,c
   800  0002F0  D00F               	goto	l2312
   801                           
   802                           ;Menu.c: 77:     LcPutChar(novaLletra);
   803  0002F2  504D               	movf	_novaLletra^0,w,c
   804  0002F4  EC27  F005         	call	_LcPutChar
   805                           
   806                           ;Menu.c: 78:     username[j] = novaLletra;
   807  0002F8  5036               	movf	_j^0,w,c
   808  0002FA  0F22               	addlw	low _username
   809  0002FC  6ED9               	movwf	fsr2l,c
   810  0002FE  6ADA               	clrf	fsr2h,c
   811  000300  C04D  FFDF         	movff	_novaLletra,indf2
   812                           
   813                           ;Menu.c: 79:     NovaTecla = -1;
   814  000304  684E               	setf	_NovaTecla^0,c
   815                           
   816                           ;Menu.c: 80:     novaLletra = -1;
   817  000306  684D               	setf	_novaLletra^0,c
   818                           
   819                           ;Menu.c: 81:     j++;
   820  000308  2A36               	incf	_j^0,f,c
   821                           
   822                           ;Menu.c: 82:     state = 7;
   823  00030A  0E07               	movlw	7
   824  00030C  6E34               	movwf	menu@state^0,c
   825                           
   826                           ;Menu.c: 83:    }
   827  00030E  0012               	return	
   828  000310                     l2312:
   829  000310  0E0B               	movlw	11
   830  000312  184E               	xorwf	_NovaTecla^0,w,c
   831  000314  A4D8               	btfss	status,2,c
   832  000316  0012               	return	
   833                           
   834                           ;Menu.c: 85:     j = 8;
   835  000318  0E08               	movlw	8
   836  00031A  6E36               	movwf	_j^0,c
   837                           
   838                           ;Menu.c: 86:     state = 7;
   839  00031C  0E07               	movlw	7
   840  00031E  6E34               	movwf	menu@state^0,c
   841  000320  0012               	return	
   842  000322                     l2316:
   843                           
   844                           ;Menu.c: 90:    if (j != 8) {
   845  000322  0E08               	movlw	8
   846  000324  1836               	xorwf	_j^0,w,c
   847  000326  A4D8               	btfss	status,2,c
   848  000328  D7D7               	goto	l2294
   849  00032A  0E08               	movlw	8
   850  00032C  1836               	xorwf	_j^0,w,c
   851  00032E  A4D8               	btfss	status,2,c
   852  000330  0012               	return	
   853                           
   854                           ;Menu.c: 94:     LcGotoXY(6,1);
   855  000332  0E01               	movlw	1
   856  000334  6E6C               	movwf	LcGotoXY@Row^0,c
   857  000336  0E06               	movlw	6
   858  000338  EC94  F005         	call	_LcGotoXY
   859                           
   860                           ;Menu.c: 95:     username[j] = novaLletra;
   861  00033C  5036               	movf	_j^0,w,c
   862  00033E  0F22               	addlw	low _username
   863  000340  6ED9               	movwf	fsr2l,c
   864  000342  6ADA               	clrf	fsr2h,c
   865  000344  C04D  FFDF         	movff	_novaLletra,indf2
   866                           
   867                           ;Menu.c: 96:     NovaTecla = -1;
   868  000348  684E               	setf	_NovaTecla^0,c
   869                           
   870                           ;Menu.c: 97:     novaLletra = -1;
   871  00034A  684D               	setf	_novaLletra^0,c
   872                           
   873                           ;Menu.c: 98:     j = 0;
   874  00034C  0E00               	movlw	0
   875  00034E  6E36               	movwf	_j^0,c
   876  000350                     l2332:
   877                           
   878                           ;Menu.c: 99:     state = 8;
   879  000350  0E08               	movlw	8
   880  000352  6E34               	movwf	menu@state^0,c
   881  000354  0012               	return	
   882  000356                     l2334:
   883                           
   884                           ;Menu.c: 103:    if (novaLletra > 47 && NovaTecla < 11) {
   885  000356  504D               	movf	_novaLletra^0,w,c
   886  000358  0A80               	xorlw	128
   887  00035A  0F50               	addlw	-176
   888  00035C  A0D8               	btfss	status,0,c
   889  00035E  D014               	goto	l2350
   890  000360  504E               	movf	_NovaTecla^0,w,c
   891  000362  0A80               	xorlw	128
   892  000364  0F75               	addlw	-139
   893  000366  B0D8               	btfsc	status,0,c
   894  000368  D00F               	goto	l2350
   895                           
   896                           ;Menu.c: 104:     LcPutChar(novaLletra);
   897  00036A  504D               	movf	_novaLletra^0,w,c
   898  00036C  EC27  F005         	call	_LcPutChar
   899                           
   900                           ;Menu.c: 105:     password[j] = novaLletra;
   901  000370  5036               	movf	_j^0,w,c
   902  000372  0F19               	addlw	low _password
   903  000374  6ED9               	movwf	fsr2l,c
   904  000376  6ADA               	clrf	fsr2h,c
   905  000378  C04D  FFDF         	movff	_novaLletra,indf2
   906                           
   907                           ;Menu.c: 106:     NovaTecla = -1;
   908  00037C  684E               	setf	_NovaTecla^0,c
   909                           
   910                           ;Menu.c: 107:     novaLletra = -1;
   911  00037E  684D               	setf	_novaLletra^0,c
   912                           
   913                           ;Menu.c: 108:     j++;
   914  000380  2A36               	incf	_j^0,f,c
   915                           
   916                           ;Menu.c: 109:     state = 9;
   917  000382  0E09               	movlw	9
   918  000384  6E34               	movwf	menu@state^0,c
   919                           
   920                           ;Menu.c: 110:    }
   921  000386  0012               	return	
   922  000388                     l2350:
   923  000388  0E0B               	movlw	11
   924  00038A  184E               	xorwf	_NovaTecla^0,w,c
   925  00038C  A4D8               	btfss	status,2,c
   926  00038E  0012               	return	
   927                           
   928                           ;Menu.c: 112:     j = 8;
   929  000390  0E08               	movlw	8
   930  000392  6E36               	movwf	_j^0,c
   931                           
   932                           ;Menu.c: 113:     state = 9;
   933  000394  0E09               	movlw	9
   934  000396  6E34               	movwf	menu@state^0,c
   935  000398  0012               	return	
   936  00039A                     l2354:
   937                           
   938                           ;Menu.c: 117:    if (j != 8) {
   939  00039A  0E08               	movlw	8
   940  00039C  1836               	xorwf	_j^0,w,c
   941  00039E  A4D8               	btfss	status,2,c
   942  0003A0  D7D7               	goto	l2332
   943  0003A2  0E08               	movlw	8
   944  0003A4  1836               	xorwf	_j^0,w,c
   945  0003A6  A4D8               	btfss	status,2,c
   946  0003A8  0012               	return	
   947                           
   948                           ;Menu.c: 121:     password[j] = novaLletra;
   949  0003AA  5036               	movf	_j^0,w,c
   950  0003AC  0F19               	addlw	low _password
   951  0003AE  6ED9               	movwf	fsr2l,c
   952  0003B0  6ADA               	clrf	fsr2h,c
   953  0003B2  C04D  FFDF         	movff	_novaLletra,indf2
   954                           
   955                           ;Menu.c: 122:     NovaTecla = -1;
   956  0003B6  684E               	setf	_NovaTecla^0,c
   957                           
   958                           ;Menu.c: 123:     novaLletra = -1;
   959  0003B8  684D               	setf	_novaLletra^0,c
   960                           
   961                           ;Menu.c: 124:     j = 0;
   962  0003BA  0E00               	movlw	0
   963  0003BC  6E36               	movwf	_j^0,c
   964                           
   965                           ;Menu.c: 125:     LcClear();
   966  0003BE  EC66  F006         	call	_LcClear	;wreg free
   967                           
   968                           ;Menu.c: 126:     state = 10;
   969  0003C2  0E0A               	movlw	10
   970  0003C4  6E34               	movwf	menu@state^0,c
   971  0003C6  0012               	return	
   972  0003C8                     l2374:
   973  0003C8  5034               	movf	menu@state^0,w,c
   974  0003CA  6E73               	movwf	??_menu^0,c
   975  0003CC  6A74               	clrf	(??_menu+1)^0,c
   976                           
   977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 1, Range of values is 0 to 0
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte            4     3 (average)
   983                           ;	Chosen strategy is simple_byte
   984  0003CE  5074               	movf	(??_menu+1)^0,w,c
   985  0003D0  0A00               	xorlw	0	; case 0
   986  0003D2  A4D8               	btfss	status,2,c
   987  0003D4  0012               	return	
   988                           
   989                           ; Switch size 1, requested type "simple"
   990                           ; Number of cases is 11, Range of values is 0 to 10
   991                           ; switch strategies available:
   992                           ; Name         Instructions Cycles
   993                           ; simple_byte           34    18 (average)
   994                           ;	Chosen strategy is simple_byte
   995  0003D6  5073               	movf	??_menu^0,w,c
   996  0003D8  0A00               	xorlw	0	; case 0
   997  0003DA  B4D8               	btfsc	status,2,c
   998  0003DC  D724               	goto	l2240
   999  0003DE  0A01               	xorlw	1	; case 1
  1000  0003E0  B4D8               	btfsc	status,2,c
  1001  0003E2  D72A               	goto	l2246
  1002  0003E4  0A03               	xorlw	3	; case 2
  1003  0003E6  B4D8               	btfsc	status,2,c
  1004  0003E8  D738               	goto	l2256
  1005  0003EA  0A01               	xorlw	1	; case 3
  1006  0003EC  B4D8               	btfsc	status,2,c
  1007  0003EE  D74D               	goto	l407
  1008  0003F0  0A07               	xorlw	7	; case 4
  1009  0003F2  B4D8               	btfsc	status,2,c
  1010  0003F4  D754               	goto	l2278
  1011  0003F6  0A01               	xorlw	1	; case 5
  1012  0003F8  B4D8               	btfsc	status,2,c
  1013  0003FA  D761               	goto	l2286
  1014  0003FC  0A03               	xorlw	3	; case 6
  1015  0003FE  B4D8               	btfsc	status,2,c
  1016  000400  D76E               	goto	l2296
  1017  000402  0A01               	xorlw	1	; case 7
  1018  000404  B4D8               	btfsc	status,2,c
  1019  000406  D78D               	goto	l2316
  1020  000408  0A0F               	xorlw	15	; case 8
  1021  00040A  B4D8               	btfsc	status,2,c
  1022  00040C  D7A4               	goto	l2334
  1023  00040E  0A01               	xorlw	1	; case 9
  1024  000410  B4D8               	btfsc	status,2,c
  1025  000412  D7C3               	goto	l2354
  1026  000414  0A03               	xorlw	3	; case 10
  1027  000416  0012               	return	
  1028  000418                     __end_of_menu:
  1029                           	callstack 0
  1030                           
  1031 ;; *************** function _UgetNumUsuaris *****************
  1032 ;; Defined at:
  1033 ;;		line 19 in file "Usuaris.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      unsigned char 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1
  1047 ;;      Params:         0       0       0
  1048 ;;      Locals:         0       0       0
  1049 ;;      Temps:          0       0       0
  1050 ;;      Totals:         0       0       0
  1051 ;;Total ram usage:        0 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; Hardware stack levels required when called: 2
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_menu
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text2
  1062  000DBE                     __ptext2:
  1063                           	callstack 0
  1064  000DBE                     _UgetNumUsuaris:
  1065                           	callstack 27
  1066                           
  1067                           ;Usuaris.c: 20:     return numUsuaris;
  1068                           
  1069                           ;incstack = 0
  1070  000DBE  5032               	movf	_numUsuaris^0,w,c
  1071  000DC0  0012               	return		;funcret
  1072  000DC2                     __end_of_UgetNumUsuaris:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _SMSon *****************
  1076 ;; Defined at:
  1077 ;;		line 114 in file "Ssms.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		None
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1
  1091 ;;      Params:         0       0       0
  1092 ;;      Locals:         0       0       0
  1093 ;;      Temps:          0       0       0
  1094 ;;      Totals:         0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 2
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_menu
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text3
  1106  000DB8                     __ptext3:
  1107                           	callstack 0
  1108  000DB8                     _SMSon:
  1109                           	callstack 27
  1110                           
  1111                           ;Ssms.c: 115:     setSMSon = 1;
  1112                           
  1113                           ;incstack = 0
  1114  000DB8  8475               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  1115                           
  1116                           ;Ssms.c: 116:     novaTecla = -1;
  1117  000DBA  6851               	setf	_novaTecla^0,c
  1118  000DBC  0012               	return		;funcret
  1119  000DBE                     __end_of_SMSon:
  1120                           	callstack 0
  1121                           
  1122 ;; *************** function _LcNewString *****************
  1123 ;; Defined at:
  1124 ;;		line 239 in file "LcTLCD.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  new_s           1    5[COMRAM] PTR unsigned char 
  1127 ;;		 -> STR_4(7), STR_3(7), STR_2(11), STR_1(8), 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1
  1139 ;;      Params:         1       0       0
  1140 ;;      Locals:         0       0       0
  1141 ;;      Temps:          0       0       0
  1142 ;;      Totals:         1       0       0
  1143 ;;Total ram usage:        1 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; Hardware stack levels required when called: 2
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_menu
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text4
  1154  000D80                     __ptext4:
  1155                           	callstack 0
  1156  000D80                     _LcNewString:
  1157                           	callstack 27
  1158                           
  1159                           ;LcTLCD.c: 240:     s_ptr = new_s;
  1160                           
  1161                           ;incstack = 0
  1162  000D80  C064  F03E         	movff	LcNewString@new_s,_s_ptr
  1163                           
  1164                           ;LcTLCD.c: 241:     nou_s = 1;
  1165  000D84  8675               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1166  000D86  0012               	return		;funcret
  1167  000D88                     __end_of_LcNewString:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _LcLliure *****************
  1171 ;; Defined at:
  1172 ;;		line 265 in file "LcTLCD.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;		None               void
  1179 ;; Registers used:
  1180 ;;		status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1
  1186 ;;      Params:         0       0       0
  1187 ;;      Locals:         0       0       0
  1188 ;;      Temps:          0       0       0
  1189 ;;      Totals:         0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 2
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_menu
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text5
  1201  000D68                     __ptext5:
  1202                           	callstack 0
  1203  000D68                     _LcLliure:
  1204                           	callstack 27
  1205                           
  1206                           ;LcTLCD.c: 266:     return !nou_s;
  1207                           
  1208                           ;incstack = 0
  1209  000D68  A675               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  1210  000D6A  D002               	goto	l1322
  1211  000D6C  90D8               	bcf	status,0,c
  1212  000D6E  0012               	return	
  1213  000D70                     l1322:
  1214  000D70  80D8               	bsf	status,0,c
  1215  000D72  0012               	return		;funcret
  1216  000D74                     __end_of_LcLliure:
  1217                           	callstack 0
  1218                           
  1219 ;; *************** function _LcClear *****************
  1220 ;; Defined at:
  1221 ;;		line 82 in file "LcTLCD.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1
  1235 ;;      Params:         0       0       0
  1236 ;;      Locals:         0       0       0
  1237 ;;      Temps:          0       0       0
  1238 ;;      Totals:         0       0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; Hardware stack levels required when called: 5
  1242 ;; This function calls:
  1243 ;;		_CantaIR
  1244 ;;		_Espera
  1245 ;;		_LcGotoXY
  1246 ;;		_WaitForBusy
  1247 ;; This function is called by:
  1248 ;;		_menu
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text6
  1253  000CCC                     __ptext6:
  1254                           	callstack 0
  1255  000CCC                     _LcClear:
  1256                           	callstack 24
  1257                           
  1258                           ;LcTLCD.c: 85:  WaitForBusy(); CantaIR(0x01);
  1259                           
  1260                           ;incstack = 0
  1261  000CCC  EC74  F005         	call	_WaitForBusy	;wreg free
  1262  000CD0  0E01               	movlw	1
  1263  000CD2  EC1F  F006         	call	_CantaIR
  1264                           
  1265                           ;LcTLCD.c: 86:  Espera(Timer, 3);
  1266  000CD6  0E00               	movlw	0
  1267  000CD8  6E6C               	movwf	(Espera@ms+1)^0,c
  1268  000CDA  0E03               	movlw	3
  1269  000CDC  6E6B               	movwf	Espera@ms^0,c
  1270  000CDE  503F               	movf	_Timer^0,w,c
  1271  000CE0  EC78  F006         	call	_Espera
  1272                           
  1273                           ;LcTLCD.c: 87:     LcGotoXY(0,0);
  1274  000CE4  0E00               	movlw	0
  1275  000CE6  6E6C               	movwf	LcGotoXY@Row^0,c
  1276  000CE8  0E00               	movlw	0
  1277  000CEA  EC94  F005         	call	_LcGotoXY
  1278  000CEE  0012               	return		;funcret
  1279  000CF0                     __end_of_LcClear:
  1280                           	callstack 0
  1281                           
  1282 ;; *************** function _init_ports *****************
  1283 ;; Defined at:
  1284 ;;		line 19 in file "main.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1
  1298 ;;      Params:         0       0       0
  1299 ;;      Locals:         0       0       0
  1300 ;;      Temps:          0       0       0
  1301 ;;      Totals:         0       0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; Hardware stack levels required when called: 2
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text7
  1313  000D14                     __ptext7:
  1314                           	callstack 0
  1315  000D14                     _init_ports:
  1316                           	callstack 28
  1317                           
  1318                           ;incstack = 0
  1319  000D14  0E03               	movlw	3
  1320  000D16  6E92               	movwf	146,c	;volatile
  1321  000D18  0EE0               	movlw	224
  1322  000D1A  6E93               	movwf	147,c	;volatile
  1323  000D1C  968A               	bcf	138,3,c	;volatile
  1324  000D1E  908A               	bcf	138,0,c	;volatile
  1325  000D20  928A               	bcf	138,1,c	;volatile
  1326                           
  1327                           ;main.c: 42:     TRISC = 0xC0;
  1328  000D22  0EC0               	movlw	192
  1329  000D24  6E94               	movwf	148,c	;volatile
  1330                           
  1331                           ;main.c: 52:     TRISD = 0x8F;
  1332  000D26  0E8F               	movlw	143
  1333  000D28  6E95               	movwf	149,c	;volatile
  1334                           
  1335                           ;main.c: 53:     LATD = 0x00;
  1336  000D2A  0E00               	movlw	0
  1337  000D2C  6E8C               	movwf	140,c	;volatile
  1338                           
  1339                           ;main.c: 56:     EECON1bits.EEPGD = 1;
  1340  000D2E  8EA6               	bsf	166,7,c	;volsfr
  1341                           
  1342                           ;main.c: 57:     EECON1bits.CFGS = 0;
  1343  000D30  9CA6               	bcf	166,6,c	;volsfr
  1344  000D32  0012               	return		;funcret
  1345  000D34                     __end_of_init_ports:
  1346                           	callstack 0
  1347                           
  1348 ;; *************** function _Uinit *****************
  1349 ;; Defined at:
  1350 ;;		line 30 in file "Usuaris.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  j               1    9[COMRAM] unsigned char 
  1355 ;;  j               1    8[COMRAM] unsigned char 
  1356 ;;  i               1    7[COMRAM] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1
  1366 ;;      Params:         0       0       0
  1367 ;;      Locals:         3       0       0
  1368 ;;      Temps:          2       0       0
  1369 ;;      Totals:         5       0       0
  1370 ;;Total ram usage:        5 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 2
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text8
  1381  000802                     __ptext8:
  1382                           	callstack 0
  1383  000802                     _Uinit:
  1384                           	callstack 28
  1385                           
  1386                           ;Usuaris.c: 34:     EEADR = 0;
  1387                           
  1388                           ;incstack = 0
  1389  000802  0E00               	movlw	0
  1390  000804  6EA9               	movwf	169,c	;volatile
  1391                           
  1392                           ;Usuaris.c: 35:     EECON1bits.EEPGD = 0;
  1393  000806  9EA6               	bcf	166,7,c	;volsfr
  1394                           
  1395                           ;Usuaris.c: 36:     EECON1bits.CFGS = 0;
  1396  000808  9CA6               	bcf	166,6,c	;volsfr
  1397                           
  1398                           ;Usuaris.c: 37:     EECON1bits.RD = 1;
  1399  00080A  80A6               	bsf	166,0,c	;volsfr
  1400  00080C                     l461:
  1401  00080C  B0A6               	btfsc	166,0,c	;volsfr
  1402  00080E  D7FE               	goto	l461
  1403                           
  1404                           ;Usuaris.c: 39:     numUsuaris = EEDATA;
  1405  000810  CFA8 F032          	movff	4008,_numUsuaris	;volatile
  1406                           
  1407                           ;Usuaris.c: 41:     EEADR++;
  1408  000814  2AA9               	incf	169,f,c	;volatile
  1409  000816                     l464:
  1410  000816  B0A6               	btfsc	166,0,c	;volsfr
  1411  000818  D7FE               	goto	l464
  1412                           
  1413                           ;Usuaris.c: 43:     indexLastUser = EEDATA;
  1414  00081A  CFA8 F031          	movff	4008,_indexLastUser	;volatile
  1415                           
  1416                           ;Usuaris.c: 44:     EEADR++;
  1417  00081E  2AA9               	incf	169,f,c	;volatile
  1418                           
  1419                           ;Usuaris.c: 46:     for(char i = 0; i< numUsuaris; i++){
  1420  000820  0E00               	movlw	0
  1421  000822  6E66               	movwf	Uinit@i^0,c
  1422  000824  D03D               	goto	l1636
  1423  000826                     l1606:
  1424                           
  1425                           ;Usuaris.c: 47:         for(char j = 0; j<9; j++){
  1426  000826  0E00               	movlw	0
  1427  000828  6E67               	movwf	Uinit@j^0,c
  1428  00082A                     l469:
  1429                           
  1430                           ;Usuaris.c: 48:             EECON1bits.RD = 1;
  1431  00082A  80A6               	bsf	166,0,c	;volsfr
  1432  00082C                     l471:
  1433  00082C  B0A6               	btfsc	166,0,c	;volsfr
  1434  00082E  D7FE               	goto	l471
  1435                           
  1436                           ;Usuaris.c: 50:             usuaris[i].username[j] = EEDATA;
  1437  000830  5066               	movf	Uinit@i^0,w,c
  1438  000832  0D12               	mullw	18
  1439  000834  0E00               	movlw	low _usuaris
  1440  000836  6E64               	movwf	??_Uinit^0,c
  1441  000838  0E01               	movlw	high _usuaris
  1442  00083A  6E65               	movwf	(??_Uinit+1)^0,c
  1443  00083C  50F3               	movf	243,w,c
  1444  00083E  2664               	addwf	??_Uinit^0,f,c
  1445  000840  50F4               	movf	244,w,c
  1446  000842  2265               	addwfc	(??_Uinit+1)^0,f,c
  1447  000844  5067               	movf	Uinit@j^0,w,c
  1448  000846  2464               	addwf	??_Uinit^0,w,c
  1449  000848  6ED9               	movwf	fsr2l,c
  1450  00084A  0E00               	movlw	0
  1451  00084C  2065               	addwfc	(??_Uinit+1)^0,w,c
  1452  00084E  6EDA               	movwf	fsr2h,c
  1453  000850  CFA8 FFDF          	movff	4008,indf2	;volatile
  1454                           
  1455                           ;Usuaris.c: 51:             EEADR++;
  1456  000854  2AA9               	incf	169,f,c	;volatile
  1457                           
  1458                           ;Usuaris.c: 52:         }
  1459  000856  2A67               	incf	Uinit@j^0,f,c
  1460  000858  0E08               	movlw	8
  1461  00085A  6467               	cpfsgt	Uinit@j^0,c
  1462  00085C  D7E6               	goto	l469
  1463                           
  1464                           ;Usuaris.c: 53:         for(char j = 0; j<9; j++){
  1465  00085E  0E00               	movlw	0
  1466  000860  6E68               	movwf	Uinit@j_932^0,c
  1467  000862                     l474:
  1468                           
  1469                           ;Usuaris.c: 54:             EECON1bits.RD = 1;
  1470  000862  80A6               	bsf	166,0,c	;volsfr
  1471  000864                     l476:
  1472  000864  B0A6               	btfsc	166,0,c	;volsfr
  1473  000866  D7FE               	goto	l476
  1474                           
  1475                           ;Usuaris.c: 56:             usuaris[i].password[j] = EEDATA;
  1476  000868  5066               	movf	Uinit@i^0,w,c
  1477  00086A  0D12               	mullw	18
  1478  00086C  0E00               	movlw	low _usuaris
  1479  00086E  6E64               	movwf	??_Uinit^0,c
  1480  000870  0E01               	movlw	high _usuaris
  1481  000872  6E65               	movwf	(??_Uinit+1)^0,c
  1482  000874  0E09               	movlw	9
  1483  000876  2664               	addwf	??_Uinit^0,f,c
  1484  000878  0E00               	movlw	0
  1485  00087A  2265               	addwfc	(??_Uinit+1)^0,f,c
  1486  00087C  50F3               	movf	243,w,c
  1487  00087E  2664               	addwf	??_Uinit^0,f,c
  1488  000880  50F4               	movf	244,w,c
  1489  000882  2265               	addwfc	(??_Uinit+1)^0,f,c
  1490  000884  5068               	movf	Uinit@j_932^0,w,c
  1491  000886  2464               	addwf	??_Uinit^0,w,c
  1492  000888  6ED9               	movwf	fsr2l,c
  1493  00088A  0E00               	movlw	0
  1494  00088C  2065               	addwfc	(??_Uinit+1)^0,w,c
  1495  00088E  6EDA               	movwf	fsr2h,c
  1496  000890  CFA8 FFDF          	movff	4008,indf2	;volatile
  1497                           
  1498                           ;Usuaris.c: 57:             EEADR++;
  1499  000894  2AA9               	incf	169,f,c	;volatile
  1500                           
  1501                           ;Usuaris.c: 58:         }
  1502  000896  2A68               	incf	Uinit@j_932^0,f,c
  1503  000898  0E08               	movlw	8
  1504  00089A  6468               	cpfsgt	Uinit@j_932^0,c
  1505  00089C  D7E2               	goto	l474
  1506                           
  1507                           ;Usuaris.c: 59:     }
  1508  00089E  2A66               	incf	Uinit@i^0,f,c
  1509  0008A0                     l1636:
  1510  0008A0  5032               	movf	_numUsuaris^0,w,c
  1511  0008A2  5C66               	subwf	Uinit@i^0,w,c
  1512  0008A4  B0D8               	btfsc	status,0,c
  1513  0008A6  0012               	return	
  1514  0008A8  D7BE               	goto	l1606
  1515  0008AA                     __end_of_Uinit:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function _TiInitTimer *****************
  1519 ;; Defined at:
  1520 ;;		line 18 in file "TiTTimer.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;		None
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1
  1534 ;;      Params:         0       0       0
  1535 ;;      Locals:         0       0       0
  1536 ;;      Temps:          0       0       0
  1537 ;;      Totals:         0       0       0
  1538 ;;Total ram usage:        0 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 2
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text9
  1549  000BD4                     __ptext9:
  1550                           	callstack 0
  1551  000BD4                     _TiInitTimer:
  1552                           	callstack 28
  1553                           
  1554                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  1555                           
  1556                           ;incstack = 0
  1557  000BD4  9ED0               	bcf	208,7,c	;volatile
  1558                           
  1559                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  1560  000BD6  8EF2               	bsf	242,7,c	;volatile
  1561                           
  1562                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  1563  000BD8  8CF2               	bsf	242,6,c	;volatile
  1564                           
  1565                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  1566  000BDA  8AF2               	bsf	242,5,c	;volatile
  1567                           
  1568                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  1569  000BDC  94F2               	bcf	242,2,c	;volatile
  1570                           
  1571                           ;TiTTimer.c: 25:     T0CON = 136;
  1572  000BDE  0E88               	movlw	136
  1573  000BE0  6ED5               	movwf	213,c	;volatile
  1574                           
  1575                           ;TiTTimer.c: 27:     TMR0H = 223;
  1576  000BE2  0EDF               	movlw	223
  1577  000BE4  6ED7               	movwf	215,c	;volatile
  1578                           
  1579                           ;TiTTimer.c: 28:     TMR0L = 148;
  1580  000BE6  0E94               	movlw	148
  1581  000BE8  6ED6               	movwf	214,c	;volatile
  1582                           
  1583                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  1584  000BEA  8ED5               	bsf	213,7,c	;volatile
  1585                           
  1586                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  1587  000BEC  0E00               	movlw	0
  1588  000BEE  6E37               	movwf	_counter^0,c
  1589  000BF0                     l1442:
  1590  000BF0  0E07               	movlw	7
  1591  000BF2  6437               	cpfsgt	_counter^0,c
  1592  000BF4  D001               	goto	l1446
  1593  000BF6  0012               	return	
  1594  000BF8                     l1446:
  1595                           
  1596                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  1597  000BF8  5037               	movf	_counter^0,w,c
  1598  000BFA  0D03               	mullw	3
  1599  000BFC  50F3               	movf	243,w,c
  1600  000BFE  0F03               	addlw	low (_s_Timers+2)
  1601  000C00  6ED9               	movwf	fsr2l,c
  1602  000C02  6ADA               	clrf	fsr2h,c
  1603  000C04  0E00               	movlw	0
  1604  000C06  6EDF               	movwf	indf2,c
  1605                           
  1606                           ;TiTTimer.c: 33:     }
  1607  000C08  2A37               	incf	_counter^0,f,c
  1608  000C0A  D7F2               	goto	l1442
  1609  000C0C                     __end_of_TiInitTimer:
  1610                           	callstack 0
  1611                           
  1612 ;; *************** function _TeTeclat *****************
  1613 ;; Defined at:
  1614 ;;		line 22 in file "TeTeclat.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1
  1628 ;;      Params:         0       0       0
  1629 ;;      Locals:         0       0       0
  1630 ;;      Temps:          3       0       0
  1631 ;;      Totals:         3       0       0
  1632 ;;Total ram usage:        3 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 3
  1635 ;; This function calls:
  1636 ;;		_MsetNovaTecla
  1637 ;;		_SsetNovaTecla
  1638 ;;		_TiGetTics
  1639 ;;		_TiResetTics
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text10
  1646  0005C4                     __ptext10:
  1647                           	callstack 0
  1648  0005C4                     _TeTeclat:
  1649                           	callstack 27
  1650                           
  1651                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  1652                           
  1653                           ;incstack = 0
  1654  0005C4  A083               	btfss	131,0,c	;volatile
  1655  0005C6  D003               	goto	u1820
  1656  0005C8  6A6B               	clrf	??_TeTeclat^0,c
  1657  0005CA  2A6B               	incf	??_TeTeclat^0,f,c
  1658  0005CC  D001               	goto	u1828
  1659  0005CE                     u1820:
  1660  0005CE  6A6B               	clrf	??_TeTeclat^0,c
  1661  0005D0                     u1828:
  1662  0005D0  A283               	btfss	131,1,c	;volatile
  1663  0005D2  D002               	goto	u1830
  1664  0005D4  0E01               	movlw	1
  1665  0005D6  D001               	goto	u1836
  1666  0005D8                     u1830:
  1667  0005D8  0E00               	movlw	0
  1668  0005DA                     u1836:
  1669  0005DA  0D02               	mullw	2
  1670  0005DC  CFF3 F06C          	movff	prodl,??_TeTeclat+1
  1671  0005E0  A483               	btfss	131,2,c	;volatile
  1672  0005E2  D002               	goto	u1840
  1673  0005E4  0E01               	movlw	1
  1674  0005E6  D001               	goto	u1846
  1675  0005E8                     u1840:
  1676  0005E8  0E00               	movlw	0
  1677  0005EA                     u1846:
  1678  0005EA  0D03               	mullw	3
  1679  0005EC  CFF3 F06D          	movff	prodl,??_TeTeclat+2
  1680  0005F0  A683               	btfss	131,3,c	;volatile
  1681  0005F2  D002               	goto	u1850
  1682  0005F4  0E01               	movlw	1
  1683  0005F6  D001               	goto	u1856
  1684  0005F8                     u1850:
  1685  0005F8  0E00               	movlw	0
  1686  0005FA                     u1856:
  1687  0005FA  0D04               	mullw	4
  1688  0005FC  50F3               	movf	243,w,c
  1689  0005FE  246D               	addwf	(??_TeTeclat+2)^0,w,c
  1690  000600  246C               	addwf	(??_TeTeclat+1)^0,w,c
  1691  000602  246B               	addwf	??_TeTeclat^0,w,c
  1692  000604  6E38               	movwf	TeTeclat@files^0,c
  1693                           
  1694                           ;TeTeclat.c: 27:  switch(state) {
  1695  000606  D06F               	goto	l2456
  1696  000608                     l2382:
  1697                           
  1698                           ;TeTeclat.c: 29:    if (files==0) {
  1699  000608  5038               	movf	TeTeclat@files^0,w,c
  1700  00060A  A4D8               	btfss	status,2,c
  1701  00060C  D007               	goto	l2390
  1702                           
  1703                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  1704  00060E  888C               	bsf	140,4,c	;volatile
  1705                           
  1706                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  1707  000610  9A8C               	bcf	140,5,c	;volatile
  1708                           
  1709                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  1710  000612  9C8C               	bcf	140,6,c	;volatile
  1711                           
  1712                           ;TeTeclat.c: 33:     cols=0;
  1713  000614  0E00               	movlw	0
  1714  000616  6E39               	movwf	TeTeclat@cols^0,c
  1715  000618                     l2388:
  1716                           
  1717                           ;TeTeclat.c: 34:     state++;
  1718  000618  2A3A               	incf	TeTeclat@state^0,f,c
  1719                           
  1720                           ;TeTeclat.c: 35:    }
  1721  00061A  0012               	return	
  1722  00061C                     l2390:
  1723  00061C  5038               	movf	TeTeclat@files^0,w,c
  1724  00061E  B4D8               	btfsc	status,2,c
  1725  000620  0012               	return	
  1726                           
  1727                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  1728  000622  503B               	movf	_tiTeclat^0,w,c
  1729  000624  ECA8  F006         	call	_TiResetTics
  1730  000628                     l2394:
  1731                           
  1732                           ;TeTeclat.c: 38:     state = 3;
  1733  000628  0E03               	movlw	3
  1734  00062A  6E3A               	movwf	TeTeclat@state^0,c
  1735  00062C  0012               	return	
  1736  00062E                     l2396:
  1737                           
  1738                           ;TeTeclat.c: 42:    if (files==0) {
  1739  00062E  5038               	movf	TeTeclat@files^0,w,c
  1740  000630  A4D8               	btfss	status,2,c
  1741  000632  D005               	goto	l2404
  1742                           
  1743                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  1744  000634  988C               	bcf	140,4,c	;volatile
  1745                           
  1746                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  1747  000636  8A8C               	bsf	140,5,c	;volatile
  1748                           
  1749                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  1750  000638  9C8C               	bcf	140,6,c	;volatile
  1751                           
  1752                           ;TeTeclat.c: 46:     cols=1;
  1753  00063A  0E01               	movlw	1
  1754  00063C  D7EC               	goto	L1
  1755  00063E                     l2404:
  1756  00063E  5038               	movf	TeTeclat@files^0,w,c
  1757  000640  B4D8               	btfsc	status,2,c
  1758  000642  0012               	return	
  1759                           
  1760                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  1761  000644  503B               	movf	_tiTeclat^0,w,c
  1762  000646  ECA8  F006         	call	_TiResetTics
  1763  00064A  D7EE               	goto	l2394
  1764  00064C                     l2410:
  1765                           
  1766                           ;TeTeclat.c: 55:    if (files==0) {
  1767  00064C  5038               	movf	TeTeclat@files^0,w,c
  1768  00064E  A4D8               	btfss	status,2,c
  1769  000650  D008               	goto	l2416
  1770                           
  1771                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  1772  000652  988C               	bcf	140,4,c	;volatile
  1773                           
  1774                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  1775  000654  9A8C               	bcf	140,5,c	;volatile
  1776                           
  1777                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  1778  000656  8C8C               	bsf	140,6,c	;volatile
  1779                           
  1780                           ;TeTeclat.c: 59:     cols=2;
  1781  000658  0E02               	movlw	2
  1782  00065A  6E39               	movwf	TeTeclat@cols^0,c
  1783                           
  1784                           ;TeTeclat.c: 60:     state = 0;
  1785  00065C  0E00               	movlw	0
  1786  00065E  6E3A               	movwf	TeTeclat@state^0,c
  1787                           
  1788                           ;TeTeclat.c: 61:    }
  1789  000660  0012               	return	
  1790  000662                     l2416:
  1791  000662  5038               	movf	TeTeclat@files^0,w,c
  1792  000664  B4D8               	btfsc	status,2,c
  1793  000666  0012               	return	
  1794                           
  1795                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  1796  000668  503B               	movf	_tiTeclat^0,w,c
  1797  00066A  ECA8  F006         	call	_TiResetTics
  1798  00066E  D7D4               	goto	l2388
  1799  000670                     l2422:
  1800                           
  1801                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  1802  000670  503B               	movf	_tiTeclat^0,w,c
  1803  000672  EC50  F006         	call	_TiGetTics
  1804  000676  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  1805  000678  0012               	return	
  1806  00067A  D7CE               	goto	l2388
  1807  00067C                     l2426:
  1808                           
  1809                           ;TeTeclat.c: 73:    if (files==0) {
  1810  00067C  5038               	movf	TeTeclat@files^0,w,c
  1811  00067E  A4D8               	btfss	status,2,c
  1812  000680  D003               	goto	l2430
  1813                           
  1814                           ;TeTeclat.c: 74:     state = 1;
  1815  000682  0E01               	movlw	1
  1816  000684  6E3A               	movwf	TeTeclat@state^0,c
  1817                           
  1818                           ;TeTeclat.c: 75:    }
  1819  000686  0012               	return	
  1820  000688                     l2430:
  1821  000688  5038               	movf	TeTeclat@files^0,w,c
  1822  00068A  B4D8               	btfsc	status,2,c
  1823  00068C  0012               	return	
  1824                           
  1825                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  1826  00068E  5038               	movf	TeTeclat@files^0,w,c
  1827  000690  0D03               	mullw	3
  1828  000692  50F3               	movf	243,w,c
  1829  000694  0F50               	addlw	low (_teclaPremuda+253)
  1830  000696  2439               	addwf	TeTeclat@cols^0,w,c
  1831  000698  6ED9               	movwf	fsr2l,c
  1832  00069A  6ADA               	clrf	fsr2h,c
  1833  00069C  50DF               	movf	indf2,w,c
  1834  00069E  ECC8  F006         	call	_MsetNovaTecla
  1835                           
  1836                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  1837  0006A2  5038               	movf	TeTeclat@files^0,w,c
  1838  0006A4  0D03               	mullw	3
  1839  0006A6  50F3               	movf	243,w,c
  1840  0006A8  0F50               	addlw	low (_teclaPremuda+253)
  1841  0006AA  2439               	addwf	TeTeclat@cols^0,w,c
  1842  0006AC  6ED9               	movwf	fsr2l,c
  1843  0006AE  6ADA               	clrf	fsr2h,c
  1844  0006B0  50DF               	movf	indf2,w,c
  1845  0006B2  ECC4  F006         	call	_SsetNovaTecla
  1846  0006B6  D7B0               	goto	l2388
  1847  0006B8                     l2436:
  1848                           
  1849                           ;TeTeclat.c: 84:    if (files==0) {
  1850  0006B8  5038               	movf	TeTeclat@files^0,w,c
  1851  0006BA  A4D8               	btfss	status,2,c
  1852  0006BC  0012               	return	
  1853                           
  1854                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  1855  0006BE  503B               	movf	_tiTeclat^0,w,c
  1856  0006C0  ECA8  F006         	call	_TiResetTics
  1857  0006C4  D7A9               	goto	l2388
  1858  0006C6                     l2442:
  1859                           
  1860                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  1861  0006C6  503B               	movf	_tiTeclat^0,w,c
  1862  0006C8  EC50  F006         	call	_TiGetTics
  1863  0006CC  D7D4               	goto	L2
  1864  0006CE                     l2446:
  1865                           
  1866                           ;TeTeclat.c: 95:    if (files!=0) {
  1867  0006CE  5038               	movf	TeTeclat@files^0,w,c
  1868  0006D0  B4D8               	btfsc	status,2,c
  1869  0006D2  D003               	goto	l2450
  1870                           
  1871                           ;TeTeclat.c: 96:     state = 5;
  1872  0006D4  0E05               	movlw	5
  1873  0006D6  6E3A               	movwf	TeTeclat@state^0,c
  1874                           
  1875                           ;TeTeclat.c: 97:    }
  1876  0006D8  0012               	return	
  1877  0006DA                     l2450:
  1878  0006DA  5038               	movf	TeTeclat@files^0,w,c
  1879  0006DC  A4D8               	btfss	status,2,c
  1880  0006DE  0012               	return	
  1881                           
  1882                           ;TeTeclat.c: 99:     state = 0;
  1883  0006E0  0E00               	movlw	0
  1884  0006E2  6E3A               	movwf	TeTeclat@state^0,c
  1885  0006E4  0012               	return	
  1886  0006E6                     l2456:
  1887  0006E6  503A               	movf	TeTeclat@state^0,w,c
  1888  0006E8  6E6B               	movwf	??_TeTeclat^0,c
  1889  0006EA  6A6C               	clrf	(??_TeTeclat+1)^0,c
  1890                           
  1891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1892                           ; Switch size 1, requested type "simple"
  1893                           ; Number of cases is 1, Range of values is 0 to 0
  1894                           ; switch strategies available:
  1895                           ; Name         Instructions Cycles
  1896                           ; simple_byte            4     3 (average)
  1897                           ;	Chosen strategy is simple_byte
  1898  0006EC  506C               	movf	(??_TeTeclat+1)^0,w,c
  1899  0006EE  0A00               	xorlw	0	; case 0
  1900  0006F0  A4D8               	btfss	status,2,c
  1901  0006F2  0012               	return	
  1902                           
  1903                           ; Switch size 1, requested type "simple"
  1904                           ; Number of cases is 8, Range of values is 0 to 7
  1905                           ; switch strategies available:
  1906                           ; Name         Instructions Cycles
  1907                           ; simple_byte           25    13 (average)
  1908                           ;	Chosen strategy is simple_byte
  1909  0006F4  506B               	movf	??_TeTeclat^0,w,c
  1910  0006F6  0A00               	xorlw	0	; case 0
  1911  0006F8  B4D8               	btfsc	status,2,c
  1912  0006FA  D786               	goto	l2382
  1913  0006FC  0A01               	xorlw	1	; case 1
  1914  0006FE  B4D8               	btfsc	status,2,c
  1915  000700  D796               	goto	l2396
  1916  000702  0A03               	xorlw	3	; case 2
  1917  000704  B4D8               	btfsc	status,2,c
  1918  000706  D7A2               	goto	l2410
  1919  000708  0A01               	xorlw	1	; case 3
  1920  00070A  B4D8               	btfsc	status,2,c
  1921  00070C  D7B1               	goto	l2422
  1922  00070E  0A07               	xorlw	7	; case 4
  1923  000710  B4D8               	btfsc	status,2,c
  1924  000712  D7B4               	goto	l2426
  1925  000714  0A01               	xorlw	1	; case 5
  1926  000716  B4D8               	btfsc	status,2,c
  1927  000718  D7CF               	goto	l2436
  1928  00071A  0A03               	xorlw	3	; case 6
  1929  00071C  B4D8               	btfsc	status,2,c
  1930  00071E  D7D3               	goto	l2442
  1931  000720  0A01               	xorlw	1	; case 7
  1932  000722  A4D8               	btfss	status,2,c
  1933  000724  0012               	return	
  1934  000726  D7D3               	goto	l2446
  1935  000728                     __end_of_TeTeclat:
  1936                           	callstack 0
  1937                           
  1938 ;; *************** function _SsetNovaTecla *****************
  1939 ;; Defined at:
  1940 ;;		line 110 in file "Ssms.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  tecla           1    wreg     unsigned char 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  tecla           1    5[COMRAM] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1
  1954 ;;      Params:         0       0       0
  1955 ;;      Locals:         1       0       0
  1956 ;;      Temps:          0       0       0
  1957 ;;      Totals:         1       0       0
  1958 ;;Total ram usage:        1 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; Hardware stack levels required when called: 2
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_TeTeclat
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text11
  1969  000D88                     __ptext11:
  1970                           	callstack 0
  1971  000D88                     _SsetNovaTecla:
  1972                           	callstack 27
  1973                           
  1974                           ;incstack = 0
  1975                           ;SsetNovaTecla@tecla stored from wreg
  1976  000D88  6E64               	movwf	SsetNovaTecla@tecla^0,c
  1977                           
  1978                           ;Ssms.c: 111:     novaTecla = tecla;
  1979  000D8A  C064  F051         	movff	SsetNovaTecla@tecla,_novaTecla
  1980  000D8E  0012               	return		;funcret
  1981  000D90                     __end_of_SsetNovaTecla:
  1982                           	callstack 0
  1983                           
  1984 ;; *************** function _MsetNovaTecla *****************
  1985 ;; Defined at:
  1986 ;;		line 19 in file "Menu.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  tecla           1    wreg     unsigned char 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  tecla           1    5[COMRAM] unsigned char 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1
  2000 ;;      Params:         0       0       0
  2001 ;;      Locals:         1       0       0
  2002 ;;      Temps:          0       0       0
  2003 ;;      Totals:         1       0       0
  2004 ;;Total ram usage:        1 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 2
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_TeTeclat
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text12
  2015  000D90                     __ptext12:
  2016                           	callstack 0
  2017  000D90                     _MsetNovaTecla:
  2018                           	callstack 27
  2019                           
  2020                           ;incstack = 0
  2021                           ;MsetNovaTecla@tecla stored from wreg
  2022  000D90  6E64               	movwf	MsetNovaTecla@tecla^0,c
  2023                           
  2024                           ;Menu.c: 20:     NovaTecla = tecla;
  2025  000D92  C064  F04E         	movff	MsetNovaTecla@tecla,_NovaTecla
  2026  000D96  0012               	return		;funcret
  2027  000D98                     __end_of_MsetNovaTecla:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _TeInit *****************
  2031 ;; Defined at:
  2032 ;;		line 18 in file "TeTeclat.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1
  2046 ;;      Params:         0       0       0
  2047 ;;      Locals:         0       0       0
  2048 ;;      Temps:          0       0       0
  2049 ;;      Totals:         0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 3
  2053 ;; This function calls:
  2054 ;;		_TiGetTimer
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text13
  2061  000D98                     __ptext13:
  2062                           	callstack 0
  2063  000D98                     _TeInit:
  2064                           	callstack 27
  2065                           
  2066                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  2067                           
  2068                           ;incstack = 0
  2069  000D98  ECB1  F005         	call	_TiGetTimer	;wreg free
  2070  000D9C  6E3B               	movwf	_tiTeclat^0,c
  2071  000D9E  0012               	return		;funcret
  2072  000DA0                     __end_of_TeInit:
  2073                           	callstack 0
  2074                           
  2075 ;; *************** function _Sinit *****************
  2076 ;; Defined at:
  2077 ;;		line 16 in file "Ssms.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1
  2091 ;;      Params:         0       0       0
  2092 ;;      Locals:         0       0       0
  2093 ;;      Temps:          0       0       0
  2094 ;;      Totals:         0       0       0
  2095 ;;Total ram usage:        0 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 3
  2098 ;; This function calls:
  2099 ;;		_TiGetTimer
  2100 ;; This function is called by:
  2101 ;;		_main
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text14
  2106  000DA0                     __ptext14:
  2107                           	callstack 0
  2108  000DA0                     _Sinit:
  2109                           	callstack 27
  2110                           
  2111                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  2112                           
  2113                           ;incstack = 0
  2114  000DA0  ECB1  F005         	call	_TiGetTimer	;wreg free
  2115  000DA4  6E50               	movwf	_timerSMS^0,c
  2116  000DA6  0012               	return		;funcret
  2117  000DA8                     __end_of_Sinit:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _SMotor *****************
  2121 ;; Defined at:
  2122 ;;		line 21 in file "Ssms.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1
  2136 ;;      Params:         0       0       0
  2137 ;;      Locals:         0       0       0
  2138 ;;      Temps:          2       0       0
  2139 ;;      Totals:         2       0       0
  2140 ;;Total ram usage:        2 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 3
  2143 ;; This function calls:
  2144 ;;		_MNovaLletra
  2145 ;;		_TiGetTics
  2146 ;;		_TiResetTics
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text15
  2153  000418                     __ptext15:
  2154                           	callstack 0
  2155  000418                     _SMotor:
  2156                           	callstack 27
  2157                           
  2158                           ;Ssms.c: 22:  static char state = 0;;Ssms.c: 23:  switch(state) {
  2159                           
  2160                           ;incstack = 0
  2161  000418  D0B7               	goto	l2232
  2162  00041A                     l2104:
  2163                           
  2164                           ;Ssms.c: 25:    if (novaTecla != -1 && setSMSon == 1) {
  2165  00041A  2851               	incf	_novaTecla^0,w,c
  2166  00041C  A4D8               	btfss	status,2,c
  2167  00041E  A475               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2168  000420  D006               	goto	l2112
  2169                           
  2170                           ;Ssms.c: 26:     TiResetTics(timerSMS);
  2171  000422  5050               	movf	_timerSMS^0,w,c
  2172  000424  ECA8  F006         	call	_TiResetTics
  2173                           
  2174                           ;Ssms.c: 27:     state = 3;
  2175  000428  0E03               	movlw	3
  2176  00042A  6E3C               	movwf	SMotor@state^0,c
  2177                           
  2178                           ;Ssms.c: 28:    }
  2179  00042C  0012               	return	
  2180  00042E                     l2112:
  2181  00042E  2851               	incf	_novaTecla^0,w,c
  2182  000430  A4D8               	btfss	status,2,c
  2183  000432  0012               	return	
  2184  000434  5050               	movf	_timerSMS^0,w,c
  2185  000436  EC50  F006         	call	_TiGetTics
  2186  00043A  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  2187  00043C  0012               	return	
  2188  00043E  0E5A               	movlw	90
  2189  000440  5C64               	subwf	?_TiGetTics^0,w,c
  2190  000442  0E02               	movlw	2
  2191  000444  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  2192  000446  A0D8               	btfss	status,0,c
  2193  000448  0012               	return	
  2194  00044A  2852               	incf	_lletraASCII^0,w,c
  2195  00044C  B4D8               	btfsc	status,2,c
  2196  00044E  0012               	return	
  2197  000450  A475               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2198  000452  0012               	return	
  2199                           
  2200                           ;Ssms.c: 30:     MNovaLletra(lletraASCII);
  2201  000454  5052               	movf	_lletraASCII^0,w,c
  2202  000456  ECD4  F006         	call	_MNovaLletra
  2203                           
  2204                           ;Ssms.c: 31:     lletraASCII = -1;
  2205  00045A  6852               	setf	_lletraASCII^0,c
  2206                           
  2207                           ;Ssms.c: 32:     ultimaTecla = -1;
  2208  00045C  684F               	setf	_ultimaTecla^0,c
  2209  00045E  0012               	return	
  2210  000460                     l2126:
  2211                           
  2212                           ;Ssms.c: 36:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  2213  000460  504F               	movf	_ultimaTecla^0,w,c
  2214  000462  1851               	xorwf	_novaTecla^0,w,c
  2215  000464  A4D8               	btfss	status,2,c
  2216  000466  D010               	goto	l2134
  2217  000468  5050               	movf	_timerSMS^0,w,c
  2218  00046A  EC50  F006         	call	_TiGetTics
  2219  00046E  BE65               	btfsc	(?_TiGetTics+1)^0,7,c
  2220  000470  D006               	goto	u1460
  2221  000472  0E5A               	movlw	90
  2222  000474  5C64               	subwf	?_TiGetTics^0,w,c
  2223  000476  0E02               	movlw	2
  2224  000478  5865               	subwfb	(?_TiGetTics+1)^0,w,c
  2225  00047A  B0D8               	btfsc	status,0,c
  2226  00047C  D005               	goto	l2134
  2227  00047E                     u1460:
  2228                           
  2229                           ;Ssms.c: 37:     novaTecla = -1;
  2230  00047E  6851               	setf	_novaTecla^0,c
  2231                           
  2232                           ;Ssms.c: 38:     sumaPulsacions++;
  2233  000480  2A3D               	incf	_sumaPulsacions^0,f,c
  2234                           
  2235                           ;Ssms.c: 39:     lletraASCII++;
  2236  000482  2A52               	incf	_lletraASCII^0,f,c
  2237                           
  2238                           ;Ssms.c: 40:     state++;
  2239  000484  2A3C               	incf	SMotor@state^0,f,c
  2240                           
  2241                           ;Ssms.c: 41:    }
  2242  000486  0012               	return	
  2243  000488                     l2134:
  2244  000488  2851               	incf	_novaTecla^0,w,c
  2245  00048A  B4D8               	btfsc	status,2,c
  2246  00048C  0012               	return	
  2247  00048E  504F               	movf	_ultimaTecla^0,w,c
  2248  000490  1851               	xorwf	_novaTecla^0,w,c
  2249  000492  B4D8               	btfsc	status,2,c
  2250  000494  0012               	return	
  2251                           
  2252                           ;Ssms.c: 43:     MNovaLletra(lletraASCII);
  2253  000496  5052               	movf	_lletraASCII^0,w,c
  2254  000498  ECD4  F006         	call	_MNovaLletra
  2255                           
  2256                           ;Ssms.c: 44:     lletraASCII = lletraInici[novaTecla-2];
  2257  00049C  5051               	movf	_novaTecla^0,w,c
  2258  00049E  0F42               	addlw	low (_lletraInici+254)
  2259  0004A0  6ED9               	movwf	fsr2l,c
  2260  0004A2  6ADA               	clrf	fsr2h,c
  2261  0004A4  50DF               	movf	indf2,w,c
  2262  0004A6  6E52               	movwf	_lletraASCII^0,c
  2263                           
  2264                           ;Ssms.c: 45:     ultimaTecla = novaTecla;
  2265  0004A8  C051  F04F         	movff	_novaTecla,_ultimaTecla
  2266                           
  2267                           ;Ssms.c: 46:     sumaPulsacions = 0;
  2268  0004AC  0E00               	movlw	0
  2269  0004AE  6E3D               	movwf	_sumaPulsacions^0,c
  2270                           
  2271                           ;Ssms.c: 47:     novaTecla = -1;
  2272  0004B0  6851               	setf	_novaTecla^0,c
  2273                           
  2274                           ;Ssms.c: 48:     state--;
  2275  0004B2  063C               	decf	SMotor@state^0,f,c
  2276  0004B4  0012               	return	
  2277  0004B6                     l2150:
  2278                           
  2279                           ;Ssms.c: 52:    if (ultimaTecla != 7 && ultimaTecla != 9) {
  2280  0004B6  0E07               	movlw	7
  2281  0004B8  184F               	xorwf	_ultimaTecla^0,w,c
  2282  0004BA  B4D8               	btfsc	status,2,c
  2283  0004BC  D007               	goto	l2156
  2284  0004BE  0E09               	movlw	9
  2285  0004C0  184F               	xorwf	_ultimaTecla^0,w,c
  2286  0004C2  B4D8               	btfsc	status,2,c
  2287  0004C4  D003               	goto	l2156
  2288                           
  2289                           ;Ssms.c: 53:     state = 5;
  2290  0004C6  0E05               	movlw	5
  2291  0004C8  6E3C               	movwf	SMotor@state^0,c
  2292                           
  2293                           ;Ssms.c: 54:    }
  2294  0004CA  0012               	return	
  2295  0004CC                     l2156:
  2296  0004CC  0E07               	movlw	7
  2297  0004CE  184F               	xorwf	_ultimaTecla^0,w,c
  2298  0004D0  B4D8               	btfsc	status,2,c
  2299  0004D2  D004               	goto	u1520
  2300  0004D4  0E09               	movlw	9
  2301  0004D6  184F               	xorwf	_ultimaTecla^0,w,c
  2302  0004D8  A4D8               	btfss	status,2,c
  2303  0004DA  0012               	return	
  2304  0004DC                     u1520:
  2305                           
  2306                           ;Ssms.c: 56:     state = 6;
  2307  0004DC  0E06               	movlw	6
  2308  0004DE  6E3C               	movwf	SMotor@state^0,c
  2309  0004E0  0012               	return	
  2310  0004E2                     l2162:
  2311                           
  2312                           ;Ssms.c: 60:    if (novaTecla > 1 && novaTecla < 10) {
  2313  0004E2  5051               	movf	_novaTecla^0,w,c
  2314  0004E4  0A80               	xorlw	128
  2315  0004E6  0F7E               	addlw	-130
  2316  0004E8  A0D8               	btfss	status,0,c
  2317  0004EA  D008               	goto	l2168
  2318  0004EC  5051               	movf	_novaTecla^0,w,c
  2319  0004EE  0A80               	xorlw	128
  2320  0004F0  0F76               	addlw	-138
  2321  0004F2  B0D8               	btfsc	status,0,c
  2322  0004F4  D003               	goto	l2168
  2323                           
  2324                           ;Ssms.c: 61:     state = 1;
  2325  0004F6  0E01               	movlw	1
  2326  0004F8  6E3C               	movwf	SMotor@state^0,c
  2327                           
  2328                           ;Ssms.c: 62:    }
  2329  0004FA  0012               	return	
  2330  0004FC                     l2168:
  2331  0004FC  5051               	movf	_novaTecla^0,w,c
  2332  0004FE  0A80               	xorlw	128
  2333  000500  0F7E               	addlw	-130
  2334  000502  B0D8               	btfsc	status,0,c
  2335  000504  D00B               	goto	l2178
  2336  000506  2852               	incf	_lletraASCII^0,w,c
  2337  000508  A4D8               	btfss	status,2,c
  2338  00050A  D008               	goto	l2178
  2339                           
  2340                           ;Ssms.c: 64:     MNovaLletra(novaTecla+48);
  2341  00050C  5051               	movf	_novaTecla^0,w,c
  2342  00050E  0F30               	addlw	48
  2343  000510  ECD4  F006         	call	_MNovaLletra
  2344  000514                     l2174:
  2345                           
  2346                           ;Ssms.c: 65:     novaTecla = -1;
  2347  000514  6851               	setf	_novaTecla^0,c
  2348  000516                     l2176:
  2349                           
  2350                           ;Ssms.c: 66:     state = 0;
  2351  000516  0E00               	movlw	0
  2352  000518  6E3C               	movwf	SMotor@state^0,c
  2353                           
  2354                           ;Ssms.c: 67:    }
  2355  00051A  0012               	return	
  2356  00051C                     l2178:
  2357  00051C  5051               	movf	_novaTecla^0,w,c
  2358  00051E  0A80               	xorlw	128
  2359  000520  0F7E               	addlw	-130
  2360  000522  B0D8               	btfsc	status,0,c
  2361  000524  0012               	return	
  2362  000526  2852               	incf	_lletraASCII^0,w,c
  2363  000528  B4D8               	btfsc	status,2,c
  2364  00052A  0012               	return	
  2365                           
  2366                           ;Ssms.c: 69:     MNovaLletra(lletraASCII);
  2367  00052C  5052               	movf	_lletraASCII^0,w,c
  2368  00052E  ECD4  F006         	call	_MNovaLletra
  2369                           
  2370                           ;Ssms.c: 70:     lletraASCII = -1;
  2371  000532  6852               	setf	_lletraASCII^0,c
  2372                           
  2373                           ;Ssms.c: 71:     state++;
  2374  000534  2A3C               	incf	SMotor@state^0,f,c
  2375  000536  0012               	return	
  2376  000538                     l2188:
  2377                           
  2378                           ;Ssms.c: 75:    MNovaLletra(novaTecla+48);
  2379  000538  5051               	movf	_novaTecla^0,w,c
  2380  00053A  0F30               	addlw	48
  2381  00053C  ECD4  F006         	call	_MNovaLletra
  2382  000540  D7E9               	goto	l2174
  2383  000542                     l2194:
  2384                           
  2385                           ;Ssms.c: 80:    if (sumaPulsacions == 4) {
  2386  000542  0E04               	movlw	4
  2387  000544  183D               	xorwf	_sumaPulsacions^0,w,c
  2388  000546  A4D8               	btfss	status,2,c
  2389  000548  D009               	goto	l2202
  2390  00054A                     u1590:
  2391                           
  2392                           ;Ssms.c: 81:     lletraASCII = lletraInici[ultimaTecla-2];
  2393  00054A  504F               	movf	_ultimaTecla^0,w,c
  2394  00054C  0F42               	addlw	low (_lletraInici+254)
  2395  00054E  6ED9               	movwf	fsr2l,c
  2396  000550  6ADA               	clrf	fsr2h,c
  2397  000552  50DF               	movf	indf2,w,c
  2398  000554  6E52               	movwf	_lletraASCII^0,c
  2399                           
  2400                           ;Ssms.c: 82:     sumaPulsacions = 0;
  2401  000556  0E00               	movlw	0
  2402  000558  6E3D               	movwf	_sumaPulsacions^0,c
  2403  00055A  D7DD               	goto	l2176
  2404  00055C                     l2202:
  2405  00055C  0E03               	movlw	3
  2406  00055E  183D               	xorwf	_sumaPulsacions^0,w,c
  2407  000560  A4D8               	btfss	status,2,c
  2408  000562  D004               	goto	l2208
  2409  000564                     u1600:
  2410                           
  2411                           ;Ssms.c: 86:     lletraASCII = ultimaTecla+48;
  2412  000564  504F               	movf	_ultimaTecla^0,w,c
  2413  000566  0F30               	addlw	48
  2414  000568  6E52               	movwf	_lletraASCII^0,c
  2415  00056A  D7D5               	goto	l2176
  2416  00056C                     l2208:
  2417  00056C  0E03               	movlw	3
  2418  00056E  603D               	cpfslt	_sumaPulsacions^0,c
  2419  000570  0012               	return	
  2420  000572  D7D1               	goto	l2176
  2421  000574                     l2212:
  2422                           
  2423                           ;Ssms.c: 94:    if (sumaPulsacions == 4) {
  2424  000574  0E04               	movlw	4
  2425  000576  183D               	xorwf	_sumaPulsacions^0,w,c
  2426  000578  B4D8               	btfsc	status,2,c
  2427  00057A  D7F4               	goto	u1600
  2428  00057C  0E05               	movlw	5
  2429  00057E  183D               	xorwf	_sumaPulsacions^0,w,c
  2430  000580  B4D8               	btfsc	status,2,c
  2431  000582  D7E3               	goto	u1590
  2432  000584  0E04               	movlw	4
  2433  000586  D7F3               	goto	L3
  2434  000588                     l2232:
  2435  000588  503C               	movf	SMotor@state^0,w,c
  2436  00058A  6E6B               	movwf	??_SMotor^0,c
  2437  00058C  6A6C               	clrf	(??_SMotor+1)^0,c
  2438                           
  2439                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2440                           ; Switch size 1, requested type "simple"
  2441                           ; Number of cases is 1, Range of values is 0 to 0
  2442                           ; switch strategies available:
  2443                           ; Name         Instructions Cycles
  2444                           ; simple_byte            4     3 (average)
  2445                           ;	Chosen strategy is simple_byte
  2446  00058E  506C               	movf	(??_SMotor+1)^0,w,c
  2447  000590  0A00               	xorlw	0	; case 0
  2448  000592  A4D8               	btfss	status,2,c
  2449  000594  0012               	return	
  2450                           
  2451                           ; Switch size 1, requested type "simple"
  2452                           ; Number of cases is 7, Range of values is 0 to 6
  2453                           ; switch strategies available:
  2454                           ; Name         Instructions Cycles
  2455                           ; simple_byte           22    12 (average)
  2456                           ;	Chosen strategy is simple_byte
  2457  000596  506B               	movf	??_SMotor^0,w,c
  2458  000598  0A00               	xorlw	0	; case 0
  2459  00059A  B4D8               	btfsc	status,2,c
  2460  00059C  D73E               	goto	l2104
  2461  00059E  0A01               	xorlw	1	; case 1
  2462  0005A0  B4D8               	btfsc	status,2,c
  2463  0005A2  D75E               	goto	l2126
  2464  0005A4  0A03               	xorlw	3	; case 2
  2465  0005A6  B4D8               	btfsc	status,2,c
  2466  0005A8  D786               	goto	l2150
  2467  0005AA  0A01               	xorlw	1	; case 3
  2468  0005AC  B4D8               	btfsc	status,2,c
  2469  0005AE  D799               	goto	l2162
  2470  0005B0  0A07               	xorlw	7	; case 4
  2471  0005B2  B4D8               	btfsc	status,2,c
  2472  0005B4  D7C1               	goto	l2188
  2473  0005B6  0A01               	xorlw	1	; case 5
  2474  0005B8  B4D8               	btfsc	status,2,c
  2475  0005BA  D7C3               	goto	l2194
  2476  0005BC  0A03               	xorlw	3	; case 6
  2477  0005BE  A4D8               	btfss	status,2,c
  2478  0005C0  0012               	return	
  2479  0005C2  D7D8               	goto	l2212
  2480  0005C4                     __end_of_SMotor:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _MNovaLletra *****************
  2484 ;; Defined at:
  2485 ;;		line 23 in file "Menu.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  lletra          1    wreg     unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  lletra          1    5[COMRAM] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1
  2499 ;;      Params:         0       0       0
  2500 ;;      Locals:         1       0       0
  2501 ;;      Temps:          0       0       0
  2502 ;;      Totals:         1       0       0
  2503 ;;Total ram usage:        1 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 2
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_SMotor
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text16
  2514  000DA8                     __ptext16:
  2515                           	callstack 0
  2516  000DA8                     _MNovaLletra:
  2517                           	callstack 27
  2518                           
  2519                           ;incstack = 0
  2520                           ;MNovaLletra@lletra stored from wreg
  2521  000DA8  6E64               	movwf	MNovaLletra@lletra^0,c
  2522                           
  2523                           ;Menu.c: 24:     novaLletra = lletra;
  2524  000DAA  C064  F04D         	movff	MNovaLletra@lletra,_novaLletra
  2525  000DAE  0012               	return		;funcret
  2526  000DB0                     __end_of_MNovaLletra:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _Minit *****************
  2530 ;; Defined at:
  2531 ;;		line 16 in file "Menu.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1
  2545 ;;      Params:         0       0       0
  2546 ;;      Locals:         0       0       0
  2547 ;;      Temps:          0       0       0
  2548 ;;      Totals:         0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 3
  2552 ;; This function calls:
  2553 ;;		_TiGetTimer
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text17
  2560  000DB0                     __ptext17:
  2561                           	callstack 0
  2562  000DB0                     _Minit:
  2563                           	callstack 27
  2564                           
  2565                           ;Menu.c: 17:     timerMenu = TiGetTimer();
  2566                           
  2567                           ;incstack = 0
  2568  000DB0  ECB1  F005         	call	_TiGetTimer	;wreg free
  2569  000DB4  6E35               	movwf	_timerMenu^0,c
  2570  000DB6  0012               	return		;funcret
  2571  000DB8                     __end_of_Minit:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _LcLCD *****************
  2575 ;; Defined at:
  2576 ;;		line 254 in file "LcTLCD.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1
  2590 ;;      Params:         0       0       0
  2591 ;;      Locals:         0       0       0
  2592 ;;      Temps:          0       0       0
  2593 ;;      Totals:         0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 6
  2597 ;; This function calls:
  2598 ;;		_LcPutChar
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text18
  2605  000C70                     __ptext18:
  2606                           	callstack 0
  2607  000C70                     _LcLCD:
  2608                           	callstack 24
  2609                           
  2610                           ;LcTLCD.c: 255:     if(nou_s == 1){
  2611                           
  2612                           ;incstack = 0
  2613  000C70  A675               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  2614  000C72  0012               	return	
  2615                           
  2616                           ;LcTLCD.c: 256:         LcPutChar(*s_ptr);
  2617  000C74  C03E  FFF6         	movff	_s_ptr,tblptrl
  2618  000C78                     	if	1	;There is more than 1 active tblptr byte
  2619  000C78  0E02               	movlw	high __smallconst
  2620  000C7A  6EF7               	movwf	tblptrh,c
  2621  000C7C                     	endif
  2622  000C7C                     	if	0	;tblptru may be non-zero
  2623  000C7C                     	endif
  2624  000C7C                     	if	0	;tblptru may be non-zero
  2625  000C7C                     	endif
  2626  000C7C  0008               	tblrd		*
  2627  000C7E  50F5               	movf	tablat,w,c
  2628  000C80  EC27  F005         	call	_LcPutChar
  2629                           
  2630                           ;LcTLCD.c: 257:         s_ptr++;
  2631  000C84  2A3E               	incf	_s_ptr^0,f,c
  2632                           
  2633                           ;LcTLCD.c: 258:         if(*s_ptr == '\0'){
  2634  000C86  C03E  FFF6         	movff	_s_ptr,tblptrl
  2635  000C8A                     	if	1	;There is more than 1 active tblptr byte
  2636  000C8A  0E02               	movlw	high __smallconst
  2637  000C8C  6EF7               	movwf	tblptrh,c
  2638  000C8E                     	endif
  2639  000C8E                     	if	0	;tblptru may be non-zero
  2640  000C8E                     	endif
  2641  000C8E                     	if	0	;tblptru may be non-zero
  2642  000C8E                     	endif
  2643  000C8E  0008               	tblrd		*
  2644  000C90  50F5               	movf	tablat,w,c
  2645  000C92  0900               	iorlw	0
  2646  000C94  A4D8               	btfss	status,2,c
  2647  000C96  0012               	return	
  2648                           
  2649                           ;LcTLCD.c: 259:             nou_s = 0;
  2650  000C98  9675               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  2651                           
  2652                           ;LcTLCD.c: 260:             s_ptr=0;
  2653  000C9A  0E00               	movlw	0
  2654  000C9C  6E3E               	movwf	_s_ptr^0,c
  2655  000C9E  0012               	return		;funcret
  2656  000CA0                     __end_of_LcLCD:
  2657                           	callstack 0
  2658                           
  2659 ;; *************** function _LcPutChar *****************
  2660 ;; Defined at:
  2661 ;;		line 132 in file "LcTLCD.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  c               1    wreg     unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  c               1   19[COMRAM] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1
  2675 ;;      Params:         0       0       0
  2676 ;;      Locals:         1       0       0
  2677 ;;      Temps:          0       0       0
  2678 ;;      Totals:         1       0       0
  2679 ;;Total ram usage:        1 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 5
  2682 ;; This function calls:
  2683 ;;		_CantaData
  2684 ;;		_LcGotoXY
  2685 ;;		_WaitForBusy
  2686 ;; This function is called by:
  2687 ;;		_LcLCD
  2688 ;;		_menu
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text19
  2693  000A4E                     __ptext19:
  2694                           	callstack 0
  2695  000A4E                     _LcPutChar:
  2696                           	callstack 24
  2697                           
  2698                           ;incstack = 0
  2699                           ;LcPutChar@c stored from wreg
  2700  000A4E  6E72               	movwf	LcPutChar@c^0,c
  2701                           
  2702                           ;LcTLCD.c: 134:  WaitForBusy(); CantaData(c);
  2703  000A50  EC74  F005         	call	_WaitForBusy	;wreg free
  2704  000A54  5072               	movf	LcPutChar@c^0,w,c
  2705  000A56  EC06  F006         	call	_CantaData
  2706                           
  2707                           ;LcTLCD.c: 136:  ++ColumnAct;
  2708  000A5A  2A40               	incf	_ColumnAct^0,f,c
  2709                           
  2710                           ;LcTLCD.c: 138:  if (Rows == 2) {
  2711  000A5C  0E02               	movlw	2
  2712  000A5E  1843               	xorwf	_Rows^0,w,c
  2713  000A60  A4D8               	btfss	status,2,c
  2714  000A62  D010               	goto	l2028
  2715                           
  2716                           ;LcTLCD.c: 139:   if (ColumnAct >= 40) {
  2717  000A64  0E27               	movlw	39
  2718  000A66  6440               	cpfsgt	_ColumnAct^0,c
  2719  000A68  D00D               	goto	l2028
  2720                           
  2721                           ;LcTLCD.c: 140:    ColumnAct = 0;
  2722  000A6A  0E00               	movlw	0
  2723  000A6C  6E40               	movwf	_ColumnAct^0,c
  2724                           
  2725                           ;LcTLCD.c: 141:    if (++RowAct >= 2) RowAct = 0;
  2726  000A6E  2A41               	incf	_RowAct^0,f,c
  2727  000A70  0E01               	movlw	1
  2728  000A72  6441               	cpfsgt	_RowAct^0,c
  2729  000A74  D002               	goto	l2026
  2730  000A76  0E00               	movlw	0
  2731  000A78  6E41               	movwf	_RowAct^0,c
  2732  000A7A                     l2026:
  2733                           
  2734                           ;LcTLCD.c: 142:    LcGotoXY(ColumnAct, RowAct);
  2735  000A7A  C041  F06C         	movff	_RowAct,LcGotoXY@Row
  2736  000A7E  5040               	movf	_ColumnAct^0,w,c
  2737  000A80  EC94  F005         	call	_LcGotoXY
  2738  000A84                     l2028:
  2739                           
  2740                           ;LcTLCD.c: 153:  if (RowAct == 1) {
  2741  000A84  0441               	decf	_RowAct^0,w,c
  2742  000A86  A4D8               	btfss	status,2,c
  2743  000A88  0012               	return	
  2744                           
  2745                           ;LcTLCD.c: 154:   if (ColumnAct >= 40) ColumnAct = 0;
  2746  000A8A  0E27               	movlw	39
  2747  000A8C  6440               	cpfsgt	_ColumnAct^0,c
  2748  000A8E  D002               	goto	l2034
  2749  000A90  0E00               	movlw	0
  2750  000A92  6E40               	movwf	_ColumnAct^0,c
  2751  000A94                     l2034:
  2752                           
  2753                           ;LcTLCD.c: 155:   LcGotoXY(ColumnAct, RowAct);
  2754  000A94  C041  F06C         	movff	_RowAct,LcGotoXY@Row
  2755  000A98  5040               	movf	_ColumnAct^0,w,c
  2756  000A9A  EC94  F005         	call	_LcGotoXY
  2757  000A9E  0012               	return		;funcret
  2758  000AA0                     __end_of_LcPutChar:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _LcGotoXY *****************
  2762 ;; Defined at:
  2763 ;;		line 104 in file "LcTLCD.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  Column          1    wreg     unsigned char 
  2766 ;;  Row             1   13[COMRAM] unsigned char 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  Column          1   18[COMRAM] unsigned char 
  2769 ;;  Fisics          2   14[COMRAM] int 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1
  2779 ;;      Params:         1       0       0
  2780 ;;      Locals:         5       0       0
  2781 ;;      Temps:          0       0       0
  2782 ;;      Totals:         6       0       0
  2783 ;;Total ram usage:        6 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 4
  2786 ;; This function calls:
  2787 ;;		_CantaIR
  2788 ;;		_WaitForBusy
  2789 ;; This function is called by:
  2790 ;;		_LcClear
  2791 ;;		_LcPutChar
  2792 ;;		_menu
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text20
  2797  000B28                     __ptext20:
  2798                           	callstack 0
  2799  000B28                     _LcGotoXY:
  2800                           	callstack 24
  2801                           
  2802                           ;incstack = 0
  2803                           ;LcGotoXY@Column stored from wreg
  2804  000B28  6E71               	movwf	LcGotoXY@Column^0,c
  2805                           
  2806                           ;LcTLCD.c: 108:  int Fisics;;LcTLCD.c: 112:    Fisics = Column + (!Row ? 0 : 0x40);
  2807  000B2A  506C               	movf	LcGotoXY@Row^0,w,c
  2808  000B2C  B4D8               	btfsc	status,2,c
  2809  000B2E  D004               	goto	l1968
  2810  000B30  0E00               	movlw	0
  2811  000B32  6E70               	movwf	(_LcGotoXY$342+1)^0,c
  2812  000B34  0E40               	movlw	64
  2813  000B36  D003               	goto	L4
  2814  000B38                     l1968:
  2815  000B38  0E00               	movlw	0
  2816  000B3A  6E70               	movwf	(_LcGotoXY$342+1)^0,c
  2817  000B3C  0E00               	movlw	0
  2818  000B3E                     L4:
  2819  000B3E  6E6F               	movwf	_LcGotoXY$342^0,c
  2820  000B40  5071               	movf	LcGotoXY@Column^0,w,c
  2821  000B42  246F               	addwf	_LcGotoXY$342^0,w,c
  2822  000B44  6E6D               	movwf	LcGotoXY@Fisics^0,c
  2823  000B46  0E00               	movlw	0
  2824  000B48  2070               	addwfc	(_LcGotoXY$342+1)^0,w,c
  2825  000B4A  6E6E               	movwf	(LcGotoXY@Fisics+1)^0,c
  2826                           
  2827                           ;LcTLCD.c: 125:  WaitForBusy();
  2828  000B4C  EC74  F005         	call	_WaitForBusy	;wreg free
  2829                           
  2830                           ;LcTLCD.c: 126:  CantaIR(0x80 | Fisics);
  2831  000B50  506D               	movf	LcGotoXY@Fisics^0,w,c
  2832  000B52  0980               	iorlw	128
  2833  000B54  EC1F  F006         	call	_CantaIR
  2834                           
  2835                           ;LcTLCD.c: 128:  RowAct = Row;
  2836  000B58  C06C  F041         	movff	LcGotoXY@Row,_RowAct
  2837                           
  2838                           ;LcTLCD.c: 129:  ColumnAct = Column;
  2839  000B5C  C071  F040         	movff	LcGotoXY@Column,_ColumnAct
  2840  000B60  0012               	return		;funcret
  2841  000B62                     __end_of_LcGotoXY:
  2842                           	callstack 0
  2843                           
  2844 ;; *************** function _CantaData *****************
  2845 ;; Defined at:
  2846 ;;		line 194 in file "LcTLCD.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  Data            1    wreg     unsigned char 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  Data            1    7[COMRAM] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1
  2860 ;;      Params:         0       0       0
  2861 ;;      Locals:         1       0       0
  2862 ;;      Temps:          0       0       0
  2863 ;;      Totals:         1       0       0
  2864 ;;Total ram usage:        1 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 3
  2867 ;; This function calls:
  2868 ;;		_CantaPartAlta
  2869 ;;		_CantaPartBaixa
  2870 ;; This function is called by:
  2871 ;;		_LcPutChar
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text21
  2876  000C0C                     __ptext21:
  2877                           	callstack 0
  2878  000C0C                     _CantaData:
  2879                           	callstack 25
  2880                           
  2881                           ;incstack = 0
  2882                           ;CantaData@Data stored from wreg
  2883  000C0C  6E66               	movwf	CantaData@Data^0,c
  2884                           
  2885                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  2886  000C0E  9694               	bcf	148,3,c	;volatile
  2887  000C10  9494               	bcf	148,2,c	;volatile
  2888  000C12  9294               	bcf	148,1,c	;volatile
  2889  000C14  9094               	bcf	148,0,c	;volatile
  2890                           
  2891                           ;LcTLCD.c: 196:  (LATCbits.LATC5 = 1);
  2892  000C16  8A8B               	bsf	139,5,c	;volatile
  2893                           
  2894                           ;LcTLCD.c: 197:  (LATDbits.LATD7 = 0);
  2895  000C18  9E8C               	bcf	140,7,c	;volatile
  2896                           
  2897                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  2898  000C1A  888B               	bsf	139,4,c	;volatile
  2899                           
  2900                           ;LcTLCD.c: 199:  CantaPartAlta(Data);
  2901  000C1C  5066               	movf	CantaData@Data^0,w,c
  2902  000C1E  ECC6  F004         	call	_CantaPartAlta
  2903                           
  2904                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  2905  000C22  888B               	bsf	139,4,c	;volatile
  2906                           
  2907                           ;LcTLCD.c: 201:  (LATCbits.LATC4 = 0);
  2908  000C24  988B               	bcf	139,4,c	;volatile
  2909                           
  2910                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 0);
  2911  000C26  988B               	bcf	139,4,c	;volatile
  2912                           
  2913                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 1);
  2914  000C28  888B               	bsf	139,4,c	;volatile
  2915                           
  2916                           ;LcTLCD.c: 204:  CantaPartBaixa(Data);
  2917  000C2A  5066               	movf	CantaData@Data^0,w,c
  2918  000C2C  EC92  F004         	call	_CantaPartBaixa
  2919                           
  2920                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  2921  000C30  888B               	bsf	139,4,c	;volatile
  2922                           
  2923                           ;LcTLCD.c: 206:  (LATCbits.LATC4 = 0);
  2924  000C32  988B               	bcf	139,4,c	;volatile
  2925                           
  2926                           ;LcTLCD.c: 207:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  2927  000C34  8694               	bsf	148,3,c	;volatile
  2928  000C36  8494               	bsf	148,2,c	;volatile
  2929  000C38  8294               	bsf	148,1,c	;volatile
  2930  000C3A  8094               	bsf	148,0,c	;volatile
  2931  000C3C  0012               	return		;funcret
  2932  000C3E                     __end_of_CantaData:
  2933                           	callstack 0
  2934                           
  2935 ;; *************** function _LcInit *****************
  2936 ;; Defined at:
  2937 ;;		line 41 in file "LcTLCD.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  rows            1    wreg     unsigned char 
  2940 ;;  columns         1   16[COMRAM] unsigned char 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  rows            1   17[COMRAM] unsigned char 
  2943 ;;  i               2   18[COMRAM] int 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1
  2953 ;;      Params:         1       0       0
  2954 ;;      Locals:         3       0       0
  2955 ;;      Temps:          0       0       0
  2956 ;;      Totals:         4       0       0
  2957 ;;Total ram usage:        4 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; Hardware stack levels required when called: 5
  2960 ;; This function calls:
  2961 ;;		_CantaIR
  2962 ;;		_EscriuPrimeraOrdre
  2963 ;;		_Espera
  2964 ;;		_LcCursorOff
  2965 ;;		_TiGetTimer
  2966 ;;		_WaitForBusy
  2967 ;; This function is called by:
  2968 ;;		_main
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text22
  2973  000728                     __ptext22:
  2974                           	callstack 0
  2975  000728                     _LcInit:
  2976                           	callstack 25
  2977                           
  2978                           ;incstack = 0
  2979                           ;LcInit@rows stored from wreg
  2980  000728  6E70               	movwf	LcInit@rows^0,c
  2981                           
  2982                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  2983  00072A  ECB1  F005         	call	_TiGetTimer	;wreg free
  2984  00072E  6E3F               	movwf	_Timer^0,c
  2985                           
  2986                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  2987  000730  C070  F043         	movff	LcInit@rows,_Rows
  2988  000734  C06F  F042         	movff	LcInit@columns,_Columns
  2989                           
  2990                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  2991  000738  0E00               	movlw	0
  2992  00073A  6E40               	movwf	_ColumnAct^0,c
  2993  00073C  C040  F041         	movff	_ColumnAct,_RowAct
  2994                           
  2995                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  2996  000740  9894               	bcf	148,4,c	;volatile
  2997  000742  9E95               	bcf	149,7,c	;volatile
  2998  000744  9A94               	bcf	148,5,c	;volatile
  2999                           
  3000                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  3001  000746  0E00               	movlw	0
  3002  000748  6E72               	movwf	(LcInit@i+1)^0,c
  3003  00074A  0E00               	movlw	0
  3004  00074C  6E71               	movwf	LcInit@i^0,c
  3005  00074E                     l2056:
  3006                           
  3007                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  3008  00074E  0E00               	movlw	0
  3009  000750  6E6C               	movwf	(Espera@ms+1)^0,c
  3010  000752  0E64               	movlw	100
  3011  000754  6E6B               	movwf	Espera@ms^0,c
  3012  000756  503F               	movf	_Timer^0,w,c
  3013  000758  EC78  F006         	call	_Espera
  3014                           
  3015                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  3016  00075C  0E03               	movlw	3
  3017  00075E  EC55  F004         	call	_EscriuPrimeraOrdre
  3018                           
  3019                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  3020  000762  0E00               	movlw	0
  3021  000764  6E6C               	movwf	(Espera@ms+1)^0,c
  3022  000766  0E05               	movlw	5
  3023  000768  6E6B               	movwf	Espera@ms^0,c
  3024  00076A  503F               	movf	_Timer^0,w,c
  3025  00076C  EC78  F006         	call	_Espera
  3026                           
  3027                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  3028  000770  0E03               	movlw	3
  3029  000772  EC55  F004         	call	_EscriuPrimeraOrdre
  3030                           
  3031                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  3032  000776  0E00               	movlw	0
  3033  000778  6E6C               	movwf	(Espera@ms+1)^0,c
  3034  00077A  0E01               	movlw	1
  3035  00077C  6E6B               	movwf	Espera@ms^0,c
  3036  00077E  503F               	movf	_Timer^0,w,c
  3037  000780  EC78  F006         	call	_Espera
  3038                           
  3039                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  3040  000784  0E03               	movlw	3
  3041  000786  EC55  F004         	call	_EscriuPrimeraOrdre
  3042                           
  3043                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  3044  00078A  0E00               	movlw	0
  3045  00078C  6E6C               	movwf	(Espera@ms+1)^0,c
  3046  00078E  0E01               	movlw	1
  3047  000790  6E6B               	movwf	Espera@ms^0,c
  3048  000792  503F               	movf	_Timer^0,w,c
  3049  000794  EC78  F006         	call	_Espera
  3050                           
  3051                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  3052  000798  0E02               	movlw	2
  3053  00079A  EC55  F004         	call	_EscriuPrimeraOrdre
  3054                           
  3055                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  3056  00079E  0E00               	movlw	0
  3057  0007A0  6E6C               	movwf	(Espera@ms+1)^0,c
  3058  0007A2  0E04               	movlw	4
  3059  0007A4  6E6B               	movwf	Espera@ms^0,c
  3060  0007A6  503F               	movf	_Timer^0,w,c
  3061  0007A8  EC78  F006         	call	_Espera
  3062                           
  3063                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  3064  0007AC  0E28               	movlw	40
  3065  0007AE  EC1F  F006         	call	_CantaIR
  3066                           
  3067                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  3068  0007B2  EC74  F005         	call	_WaitForBusy	;wreg free
  3069  0007B6  0E08               	movlw	8
  3070  0007B8  EC1F  F006         	call	_CantaIR
  3071                           
  3072                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  3073  0007BC  EC74  F005         	call	_WaitForBusy	;wreg free
  3074  0007C0  0E01               	movlw	1
  3075  0007C2  EC1F  F006         	call	_CantaIR
  3076                           
  3077                           ;LcTLCD.c: 71:   Espera(Timer,3);
  3078  0007C6  0E00               	movlw	0
  3079  0007C8  6E6C               	movwf	(Espera@ms+1)^0,c
  3080  0007CA  0E03               	movlw	3
  3081  0007CC  6E6B               	movwf	Espera@ms^0,c
  3082  0007CE  503F               	movf	_Timer^0,w,c
  3083  0007D0  EC78  F006         	call	_Espera
  3084                           
  3085                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  3086  0007D4  EC74  F005         	call	_WaitForBusy	;wreg free
  3087  0007D8  0E06               	movlw	6
  3088  0007DA  EC1F  F006         	call	_CantaIR
  3089                           
  3090                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  3091  0007DE  EC74  F005         	call	_WaitForBusy	;wreg free
  3092  0007E2  0E0F               	movlw	15
  3093  0007E4  EC1F  F006         	call	_CantaIR
  3094                           
  3095                           ;LcTLCD.c: 74:  }
  3096  0007E8  4A71               	infsnz	LcInit@i^0,f,c
  3097  0007EA  2A72               	incf	(LcInit@i+1)^0,f,c
  3098  0007EC  BE72               	btfsc	(LcInit@i+1)^0,7,c
  3099  0007EE  D7AF               	goto	l2056
  3100  0007F0  5072               	movf	(LcInit@i+1)^0,w,c
  3101  0007F2  E104               	bnz	u1360
  3102  0007F4  0E02               	movlw	2
  3103  0007F6  5C71               	subwf	LcInit@i^0,w,c
  3104  0007F8  A0D8               	btfss	status,0,c
  3105  0007FA  D7A9               	goto	l2056
  3106  0007FC                     u1360:
  3107                           
  3108                           ;LcTLCD.c: 79:     LcCursorOff();
  3109  0007FC  ECBA  F006         	call	_LcCursorOff	;wreg free
  3110  000800  0012               	return		;funcret
  3111  000802                     __end_of_LcInit:
  3112                           	callstack 0
  3113                           
  3114 ;; *************** function _TiGetTimer *****************
  3115 ;; Defined at:
  3116 ;;		line 70 in file "TiTTimer.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      unsigned char 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1
  3130 ;;      Params:         0       0       0
  3131 ;;      Locals:         0       0       0
  3132 ;;      Temps:          1       0       0
  3133 ;;      Totals:         1       0       0
  3134 ;;Total ram usage:        1 bytes
  3135 ;; Hardware stack levels used: 1
  3136 ;; Hardware stack levels required when called: 2
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_LcInit
  3141 ;;		_Sinit
  3142 ;;		_TeInit
  3143 ;;		_Minit
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text23
  3148  000B62                     __ptext23:
  3149                           	callstack 0
  3150  000B62                     _TiGetTimer:
  3151                           	callstack 27
  3152                           
  3153                           ;TiTTimer.c: 74:     counter=0;
  3154                           
  3155                           ;incstack = 0
  3156  000B62  0E00               	movlw	0
  3157  000B64  6E37               	movwf	_counter^0,c
  3158                           
  3159                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  3160  000B66  D007               	goto	l1262
  3161  000B68                     l1254:
  3162                           
  3163                           ;TiTTimer.c: 76:         counter++;
  3164  000B68  2A37               	incf	_counter^0,f,c
  3165                           
  3166                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  3167  000B6A  0E08               	movlw	8
  3168  000B6C  1837               	xorwf	_counter^0,w,c
  3169  000B6E  A4D8               	btfss	status,2,c
  3170  000B70  D002               	goto	l1262
  3171  000B72  0EFF               	movlw	255
  3172  000B74  0012               	return	
  3173  000B76                     l1262:
  3174                           
  3175                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  3176  000B76  5037               	movf	_counter^0,w,c
  3177  000B78  0D03               	mullw	3
  3178  000B7A  50F3               	movf	243,w,c
  3179  000B7C  0F03               	addlw	low (_s_Timers+2)
  3180  000B7E  6ED9               	movwf	fsr2l,c
  3181  000B80  6ADA               	clrf	fsr2h,c
  3182  000B82  04DE               	decf	postinc2,w,c
  3183  000B84  B4D8               	btfsc	status,2,c
  3184  000B86  D7F0               	goto	l1254
  3185                           
  3186                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  3187  000B88  5037               	movf	_counter^0,w,c
  3188  000B8A  0D03               	mullw	3
  3189  000B8C  50F3               	movf	243,w,c
  3190  000B8E  0F03               	addlw	low (_s_Timers+2)
  3191  000B90  6ED9               	movwf	fsr2l,c
  3192  000B92  6ADA               	clrf	fsr2h,c
  3193  000B94  0E01               	movlw	1
  3194  000B96  6EDF               	movwf	indf2,c
  3195                           
  3196                           ;TiTTimer.c: 80:     return (counter);
  3197  000B98  5037               	movf	_counter^0,w,c
  3198  000B9A  0012               	return		;funcret
  3199  000B9C                     __end_of_TiGetTimer:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function _LcCursorOff *****************
  3203 ;; Defined at:
  3204 ;;		line 97 in file "LcTLCD.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1
  3218 ;;      Params:         0       0       0
  3219 ;;      Locals:         0       0       0
  3220 ;;      Temps:          0       0       0
  3221 ;;      Totals:         0       0       0
  3222 ;;Total ram usage:        0 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; Hardware stack levels required when called: 4
  3225 ;; This function calls:
  3226 ;;		_CantaIR
  3227 ;;		_WaitForBusy
  3228 ;; This function is called by:
  3229 ;;		_LcInit
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text24
  3234  000D74                     __ptext24:
  3235                           	callstack 0
  3236  000D74                     _LcCursorOff:
  3237                           	callstack 25
  3238                           
  3239                           ;LcTLCD.c: 100:  WaitForBusy();
  3240                           
  3241                           ;incstack = 0
  3242  000D74  EC74  F005         	call	_WaitForBusy	;wreg free
  3243                           
  3244                           ;LcTLCD.c: 101:  CantaIR(0x08 | 0x04);
  3245  000D78  0E0C               	movlw	12
  3246  000D7A  EC1F  F006         	call	_CantaIR
  3247  000D7E  0012               	return		;funcret
  3248  000D80                     __end_of_LcCursorOff:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _WaitForBusy *****************
  3252 ;; Defined at:
  3253 ;;		line 210 in file "LcTLCD.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  Busy            1   12[COMRAM] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1
  3267 ;;      Params:         0       0       0
  3268 ;;      Locals:         1       0       0
  3269 ;;      Temps:          0       0       0
  3270 ;;      Totals:         1       0       0
  3271 ;;Total ram usage:        1 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 3
  3274 ;; This function calls:
  3275 ;;		_TiGetTics
  3276 ;;		_TiResetTics
  3277 ;; This function is called by:
  3278 ;;		_LcInit
  3279 ;;		_LcClear
  3280 ;;		_LcCursorOff
  3281 ;;		_LcGotoXY
  3282 ;;		_LcPutChar
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text25
  3287  000AE8                     __ptext25:
  3288                           	callstack 0
  3289  000AE8                     _WaitForBusy:
  3290                           	callstack 25
  3291                           
  3292                           ;LcTLCD.c: 211:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3293                           
  3294                           ;incstack = 0
  3295  000AE8  8694               	bsf	148,3,c	;volatile
  3296  000AEA  8494               	bsf	148,2,c	;volatile
  3297  000AEC  8294               	bsf	148,1,c	;volatile
  3298  000AEE  8094               	bsf	148,0,c	;volatile
  3299                           
  3300                           ;LcTLCD.c: 212:  (LATCbits.LATC5 = 0);
  3301  000AF0  9A8B               	bcf	139,5,c	;volatile
  3302                           
  3303                           ;LcTLCD.c: 213:  (LATDbits.LATD7 = 1);
  3304  000AF2  8E8C               	bsf	140,7,c	;volatile
  3305                           
  3306                           ;LcTLCD.c: 214:  TiResetTics(Timer);
  3307  000AF4  503F               	movf	_Timer^0,w,c
  3308  000AF6  ECA8  F006         	call	_TiResetTics
  3309  000AFA                     l1936:
  3310                           
  3311                           ;LcTLCD.c: 216:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  3312  000AFA  888B               	bsf	139,4,c	;volatile
  3313  000AFC  888B               	bsf	139,4,c	;volatile
  3314                           
  3315                           ;LcTLCD.c: 217:   Busy = (PORTCbits.RC3);
  3316  000AFE  0E00               	movlw	0
  3317  000B00  B682               	btfsc	130,3,c	;volatile
  3318  000B02  0E01               	movlw	1
  3319  000B04  6E6B               	movwf	WaitForBusy@Busy^0,c
  3320                           
  3321                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 0);
  3322  000B06  988B               	bcf	139,4,c	;volatile
  3323                           
  3324                           ;LcTLCD.c: 219:   (LATCbits.LATC4 = 0);
  3325  000B08  988B               	bcf	139,4,c	;volatile
  3326                           
  3327                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  3328  000B0A  888B               	bsf	139,4,c	;volatile
  3329  000B0C  888B               	bsf	139,4,c	;volatile
  3330                           
  3331                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 0);
  3332  000B0E  988B               	bcf	139,4,c	;volatile
  3333                           
  3334                           ;LcTLCD.c: 223:   (LATCbits.LATC4 = 0);
  3335  000B10  988B               	bcf	139,4,c	;volatile
  3336                           
  3337                           ;LcTLCD.c: 224:   if (TiGetTics(Timer)) break;
  3338  000B12  503F               	movf	_Timer^0,w,c
  3339  000B14  EC50  F006         	call	_TiGetTics
  3340  000B18  5064               	movf	?_TiGetTics^0,w,c
  3341  000B1A  1065               	iorwf	(?_TiGetTics+1)^0,w,c
  3342  000B1C  A4D8               	btfss	status,2,c
  3343  000B1E  0012               	return	
  3344                           
  3345                           ;LcTLCD.c: 225:  } while(Busy);
  3346  000B20  506B               	movf	WaitForBusy@Busy^0,w,c
  3347  000B22  B4D8               	btfsc	status,2,c
  3348  000B24  0012               	return	
  3349  000B26  D7E9               	goto	l1936
  3350  000B28                     __end_of_WaitForBusy:
  3351                           	callstack 0
  3352                           
  3353 ;; *************** function _CantaIR *****************
  3354 ;; Defined at:
  3355 ;;		line 178 in file "LcTLCD.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  IR              1    wreg     unsigned char 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  IR              1    7[COMRAM] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1
  3369 ;;      Params:         0       0       0
  3370 ;;      Locals:         1       0       0
  3371 ;;      Temps:          0       0       0
  3372 ;;      Totals:         1       0       0
  3373 ;;Total ram usage:        1 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 3
  3376 ;; This function calls:
  3377 ;;		_CantaPartAlta
  3378 ;;		_CantaPartBaixa
  3379 ;; This function is called by:
  3380 ;;		_LcInit
  3381 ;;		_LcClear
  3382 ;;		_LcCursorOff
  3383 ;;		_LcGotoXY
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text26
  3388  000C3E                     __ptext26:
  3389                           	callstack 0
  3390  000C3E                     _CantaIR:
  3391                           	callstack 24
  3392                           
  3393                           ;incstack = 0
  3394                           ;CantaIR@IR stored from wreg
  3395  000C3E  6E66               	movwf	CantaIR@IR^0,c
  3396                           
  3397                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  3398  000C40  9694               	bcf	148,3,c	;volatile
  3399  000C42  9494               	bcf	148,2,c	;volatile
  3400  000C44  9294               	bcf	148,1,c	;volatile
  3401  000C46  9094               	bcf	148,0,c	;volatile
  3402                           
  3403                           ;LcTLCD.c: 180:  (LATCbits.LATC5 = 0);
  3404  000C48  9A8B               	bcf	139,5,c	;volatile
  3405                           
  3406                           ;LcTLCD.c: 181:  (LATDbits.LATD7 = 0);
  3407  000C4A  9E8C               	bcf	140,7,c	;volatile
  3408                           
  3409                           ;LcTLCD.c: 182:  (LATCbits.LATC4 = 1);
  3410  000C4C  888B               	bsf	139,4,c	;volatile
  3411                           
  3412                           ;LcTLCD.c: 183:  CantaPartAlta(IR);
  3413  000C4E  5066               	movf	CantaIR@IR^0,w,c
  3414  000C50  ECC6  F004         	call	_CantaPartAlta
  3415                           
  3416                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  3417  000C54  888B               	bsf	139,4,c	;volatile
  3418                           
  3419                           ;LcTLCD.c: 185:  (LATCbits.LATC4 = 0);
  3420  000C56  988B               	bcf	139,4,c	;volatile
  3421                           
  3422                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 0);
  3423  000C58  988B               	bcf	139,4,c	;volatile
  3424                           
  3425                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 1);
  3426  000C5A  888B               	bsf	139,4,c	;volatile
  3427                           
  3428                           ;LcTLCD.c: 188:  CantaPartBaixa(IR);
  3429  000C5C  5066               	movf	CantaIR@IR^0,w,c
  3430  000C5E  EC92  F004         	call	_CantaPartBaixa
  3431                           
  3432                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  3433  000C62  888B               	bsf	139,4,c	;volatile
  3434                           
  3435                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  3436  000C64  988B               	bcf	139,4,c	;volatile
  3437                           
  3438                           ;LcTLCD.c: 191:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  3439  000C66  8694               	bsf	148,3,c	;volatile
  3440  000C68  8494               	bsf	148,2,c	;volatile
  3441  000C6A  8294               	bsf	148,1,c	;volatile
  3442  000C6C  8094               	bsf	148,0,c	;volatile
  3443  000C6E  0012               	return		;funcret
  3444  000C70                     __end_of_CantaIR:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _CantaPartBaixa *****************
  3448 ;; Defined at:
  3449 ;;		line 171 in file "LcTLCD.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  c               1    wreg     unsigned char 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  c               1    6[COMRAM] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1
  3463 ;;      Params:         0       0       0
  3464 ;;      Locals:         1       0       0
  3465 ;;      Temps:          1       0       0
  3466 ;;      Totals:         2       0       0
  3467 ;;Total ram usage:        2 bytes
  3468 ;; Hardware stack levels used: 1
  3469 ;; Hardware stack levels required when called: 2
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_CantaIR
  3474 ;;		_CantaData
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text27
  3479  000924                     __ptext27:
  3480                           	callstack 0
  3481  000924                     _CantaPartBaixa:
  3482                           	callstack 24
  3483                           
  3484                           ;incstack = 0
  3485                           ;CantaPartBaixa@c stored from wreg
  3486  000924  6E65               	movwf	CantaPartBaixa@c^0,c
  3487                           
  3488                           ;LcTLCD.c: 172:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  3489  000926  A665               	btfss	CantaPartBaixa@c^0,3,c
  3490  000928  D003               	goto	u1190
  3491  00092A  6A64               	clrf	??_CantaPartBaixa^0,c
  3492  00092C  2A64               	incf	??_CantaPartBaixa^0,f,c
  3493  00092E  D001               	goto	u1208
  3494  000930                     u1190:
  3495  000930  6A64               	clrf	??_CantaPartBaixa^0,c
  3496  000932                     u1208:
  3497  000932  4664               	rlncf	??_CantaPartBaixa^0,f,c
  3498  000934  4664               	rlncf	??_CantaPartBaixa^0,f,c
  3499  000936  4664               	rlncf	??_CantaPartBaixa^0,f,c
  3500  000938  508B               	movf	139,w,c	;volatile
  3501  00093A  1864               	xorwf	??_CantaPartBaixa^0,w,c
  3502  00093C  0BF7               	andlw	-9
  3503  00093E  1864               	xorwf	??_CantaPartBaixa^0,w,c
  3504  000940  6E8B               	movwf	139,c	;volatile
  3505                           
  3506                           ;LcTLCD.c: 173:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  3507  000942  A465               	btfss	CantaPartBaixa@c^0,2,c
  3508  000944  D003               	goto	u1210
  3509  000946  6A64               	clrf	??_CantaPartBaixa^0,c
  3510  000948  2A64               	incf	??_CantaPartBaixa^0,f,c
  3511  00094A  D001               	goto	u1228
  3512  00094C                     u1210:
  3513  00094C  6A64               	clrf	??_CantaPartBaixa^0,c
  3514  00094E                     u1228:
  3515  00094E  4664               	rlncf	??_CantaPartBaixa^0,f,c
  3516  000950  4664               	rlncf	??_CantaPartBaixa^0,f,c
  3517  000952  508B               	movf	139,w,c	;volatile
  3518  000954  1864               	xorwf	??_CantaPartBaixa^0,w,c
  3519  000956  0BFB               	andlw	-5
  3520  000958  1864               	xorwf	??_CantaPartBaixa^0,w,c
  3521  00095A  6E8B               	movwf	139,c	;volatile
  3522                           
  3523                           ;LcTLCD.c: 174:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  3524  00095C  A265               	btfss	CantaPartBaixa@c^0,1,c
  3525  00095E  D003               	goto	u1230
  3526  000960  6A64               	clrf	??_CantaPartBaixa^0,c
  3527  000962  2A64               	incf	??_CantaPartBaixa^0,f,c
  3528  000964  D001               	goto	u1248
  3529  000966                     u1230:
  3530  000966  6A64               	clrf	??_CantaPartBaixa^0,c
  3531  000968                     u1248:
  3532  000968  4664               	rlncf	??_CantaPartBaixa^0,f,c
  3533  00096A  508B               	movf	139,w,c	;volatile
  3534  00096C  1864               	xorwf	??_CantaPartBaixa^0,w,c
  3535  00096E  0BFD               	andlw	-3
  3536  000970  1864               	xorwf	??_CantaPartBaixa^0,w,c
  3537  000972  6E8B               	movwf	139,c	;volatile
  3538                           
  3539                           ;LcTLCD.c: 175:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  3540  000974  A065               	btfss	CantaPartBaixa@c^0,0,c
  3541  000976  D003               	goto	u1250
  3542  000978  6A64               	clrf	??_CantaPartBaixa^0,c
  3543  00097A  2A64               	incf	??_CantaPartBaixa^0,f,c
  3544  00097C  D001               	goto	u1268
  3545  00097E                     u1250:
  3546  00097E  6A64               	clrf	??_CantaPartBaixa^0,c
  3547  000980                     u1268:
  3548  000980  508B               	movf	139,w,c	;volatile
  3549  000982  1864               	xorwf	??_CantaPartBaixa^0,w,c
  3550  000984  0BFE               	andlw	-2
  3551  000986  1864               	xorwf	??_CantaPartBaixa^0,w,c
  3552  000988  6E8B               	movwf	139,c	;volatile
  3553  00098A  0012               	return		;funcret
  3554  00098C                     __end_of_CantaPartBaixa:
  3555                           	callstack 0
  3556                           
  3557 ;; *************** function _CantaPartAlta *****************
  3558 ;; Defined at:
  3559 ;;		line 164 in file "LcTLCD.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  c               1    wreg     unsigned char 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  c               1    6[COMRAM] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      void 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1
  3573 ;;      Params:         0       0       0
  3574 ;;      Locals:         1       0       0
  3575 ;;      Temps:          1       0       0
  3576 ;;      Totals:         2       0       0
  3577 ;;Total ram usage:        2 bytes
  3578 ;; Hardware stack levels used: 1
  3579 ;; Hardware stack levels required when called: 2
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_CantaIR
  3584 ;;		_CantaData
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text28
  3589  00098C                     __ptext28:
  3590                           	callstack 0
  3591  00098C                     _CantaPartAlta:
  3592                           	callstack 24
  3593                           
  3594                           ;incstack = 0
  3595                           ;CantaPartAlta@c stored from wreg
  3596  00098C  6E65               	movwf	CantaPartAlta@c^0,c
  3597                           
  3598                           ;LcTLCD.c: 165:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  3599  00098E  AE65               	btfss	CantaPartAlta@c^0,7,c
  3600  000990  D003               	goto	u1110
  3601  000992  6A64               	clrf	??_CantaPartAlta^0,c
  3602  000994  2A64               	incf	??_CantaPartAlta^0,f,c
  3603  000996  D001               	goto	u1128
  3604  000998                     u1110:
  3605  000998  6A64               	clrf	??_CantaPartAlta^0,c
  3606  00099A                     u1128:
  3607  00099A  4664               	rlncf	??_CantaPartAlta^0,f,c
  3608  00099C  4664               	rlncf	??_CantaPartAlta^0,f,c
  3609  00099E  4664               	rlncf	??_CantaPartAlta^0,f,c
  3610  0009A0  508B               	movf	139,w,c	;volatile
  3611  0009A2  1864               	xorwf	??_CantaPartAlta^0,w,c
  3612  0009A4  0BF7               	andlw	-9
  3613  0009A6  1864               	xorwf	??_CantaPartAlta^0,w,c
  3614  0009A8  6E8B               	movwf	139,c	;volatile
  3615                           
  3616                           ;LcTLCD.c: 166:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  3617  0009AA  AC65               	btfss	CantaPartAlta@c^0,6,c
  3618  0009AC  D003               	goto	u1130
  3619  0009AE  6A64               	clrf	??_CantaPartAlta^0,c
  3620  0009B0  2A64               	incf	??_CantaPartAlta^0,f,c
  3621  0009B2  D001               	goto	u1148
  3622  0009B4                     u1130:
  3623  0009B4  6A64               	clrf	??_CantaPartAlta^0,c
  3624  0009B6                     u1148:
  3625  0009B6  4664               	rlncf	??_CantaPartAlta^0,f,c
  3626  0009B8  4664               	rlncf	??_CantaPartAlta^0,f,c
  3627  0009BA  508B               	movf	139,w,c	;volatile
  3628  0009BC  1864               	xorwf	??_CantaPartAlta^0,w,c
  3629  0009BE  0BFB               	andlw	-5
  3630  0009C0  1864               	xorwf	??_CantaPartAlta^0,w,c
  3631  0009C2  6E8B               	movwf	139,c	;volatile
  3632                           
  3633                           ;LcTLCD.c: 167:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  3634  0009C4  AA65               	btfss	CantaPartAlta@c^0,5,c
  3635  0009C6  D003               	goto	u1150
  3636  0009C8  6A64               	clrf	??_CantaPartAlta^0,c
  3637  0009CA  2A64               	incf	??_CantaPartAlta^0,f,c
  3638  0009CC  D001               	goto	u1168
  3639  0009CE                     u1150:
  3640  0009CE  6A64               	clrf	??_CantaPartAlta^0,c
  3641  0009D0                     u1168:
  3642  0009D0  4664               	rlncf	??_CantaPartAlta^0,f,c
  3643  0009D2  508B               	movf	139,w,c	;volatile
  3644  0009D4  1864               	xorwf	??_CantaPartAlta^0,w,c
  3645  0009D6  0BFD               	andlw	-3
  3646  0009D8  1864               	xorwf	??_CantaPartAlta^0,w,c
  3647  0009DA  6E8B               	movwf	139,c	;volatile
  3648                           
  3649                           ;LcTLCD.c: 168:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  3650  0009DC  A865               	btfss	CantaPartAlta@c^0,4,c
  3651  0009DE  D003               	goto	u1170
  3652  0009E0  6A64               	clrf	??_CantaPartAlta^0,c
  3653  0009E2  2A64               	incf	??_CantaPartAlta^0,f,c
  3654  0009E4  D001               	goto	u1188
  3655  0009E6                     u1170:
  3656  0009E6  6A64               	clrf	??_CantaPartAlta^0,c
  3657  0009E8                     u1188:
  3658  0009E8  508B               	movf	139,w,c	;volatile
  3659  0009EA  1864               	xorwf	??_CantaPartAlta^0,w,c
  3660  0009EC  0BFE               	andlw	-2
  3661  0009EE  1864               	xorwf	??_CantaPartAlta^0,w,c
  3662  0009F0  6E8B               	movwf	139,c	;volatile
  3663  0009F2  0012               	return		;funcret
  3664  0009F4                     __end_of_CantaPartAlta:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function _Espera *****************
  3668 ;; Defined at:
  3669 ;;		line 159 in file "LcTLCD.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  Timer           1    wreg     unsigned char 
  3672 ;;  ms              2   12[COMRAM] int 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  Timer           1   15[COMRAM] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1
  3684 ;;      Params:         2       0       0
  3685 ;;      Locals:         1       0       0
  3686 ;;      Temps:          1       0       0
  3687 ;;      Totals:         4       0       0
  3688 ;;Total ram usage:        4 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 3
  3691 ;; This function calls:
  3692 ;;		_TiGetTics
  3693 ;;		_TiResetTics
  3694 ;; This function is called by:
  3695 ;;		_LcInit
  3696 ;;		_LcClear
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text29
  3701  000CF0                     __ptext29:
  3702                           	callstack 0
  3703  000CF0                     _Espera:
  3704                           	callstack 25
  3705                           
  3706                           ;incstack = 0
  3707                           ;Espera@Timer stored from wreg
  3708  000CF0  6E6E               	movwf	Espera@Timer^0,c
  3709                           
  3710                           ;LcTLCD.c: 160:  TiResetTics(Timer);
  3711  000CF2  506E               	movf	Espera@Timer^0,w,c
  3712  000CF4  ECA8  F006         	call	_TiResetTics
  3713  000CF8                     l1962:
  3714  000CF8  506E               	movf	Espera@Timer^0,w,c
  3715  000CFA  EC50  F006         	call	_TiGetTics
  3716  000CFE  506B               	movf	Espera@ms^0,w,c
  3717  000D00  5C64               	subwf	?_TiGetTics^0,w,c
  3718  000D02  5065               	movf	(?_TiGetTics+1)^0,w,c
  3719  000D04  0A80               	xorlw	128
  3720  000D06  6E6D               	movwf	??_Espera^0,c
  3721  000D08  506C               	movf	(Espera@ms+1)^0,w,c
  3722  000D0A  0A80               	xorlw	128
  3723  000D0C  586D               	subwfb	??_Espera^0,w,c
  3724  000D0E  B0D8               	btfsc	status,0,c
  3725  000D10  0012               	return	
  3726  000D12  D7F2               	goto	l1962
  3727  000D14                     __end_of_Espera:
  3728                           	callstack 0
  3729                           
  3730 ;; *************** function _TiResetTics *****************
  3731 ;; Defined at:
  3732 ;;		line 55 in file "TiTTimer.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  Handle          1    wreg     unsigned char 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  Handle          1    5[COMRAM] unsigned char 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      void 
  3739 ;; Registers used:
  3740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1
  3746 ;;      Params:         0       0       0
  3747 ;;      Locals:         1       0       0
  3748 ;;      Temps:          0       0       0
  3749 ;;      Totals:         1       0       0
  3750 ;;Total ram usage:        1 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; Hardware stack levels required when called: 2
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_Espera
  3757 ;;		_WaitForBusy
  3758 ;;		_SMotor
  3759 ;;		_TeTeclat
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text30
  3764  000D50                     __ptext30:
  3765                           	callstack 0
  3766  000D50                     _TiResetTics:
  3767                           	callstack 25
  3768                           
  3769                           ;incstack = 0
  3770                           ;TiResetTics@Handle stored from wreg
  3771  000D50  6E64               	movwf	TiResetTics@Handle^0,c
  3772                           
  3773                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  3774  000D52  5064               	movf	TiResetTics@Handle^0,w,c
  3775  000D54  0D03               	mullw	3
  3776  000D56  50F3               	movf	243,w,c
  3777  000D58  0F01               	addlw	low _s_Timers
  3778  000D5A  6ED9               	movwf	fsr2l,c
  3779  000D5C  6ADA               	clrf	fsr2h,c
  3780  000D5E  C02F  FFDE         	movff	_h_Tics,postinc2
  3781  000D62  C030  FFDD         	movff	_h_Tics+1,postdec2
  3782  000D66  0012               	return		;funcret
  3783  000D68                     __end_of_TiResetTics:
  3784                           	callstack 0
  3785                           
  3786 ;; *************** function _TiGetTics *****************
  3787 ;; Defined at:
  3788 ;;		line 61 in file "TiTTimer.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  Handle          1    wreg     unsigned char 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  Handle          1    9[COMRAM] unsigned char 
  3793 ;;  actual          2   10[COMRAM] volatile unsigned int 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  2    5[COMRAM] int 
  3796 ;; Registers used:
  3797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1
  3803 ;;      Params:         2       0       0
  3804 ;;      Locals:         3       0       0
  3805 ;;      Temps:          2       0       0
  3806 ;;      Totals:         7       0       0
  3807 ;;Total ram usage:        7 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 2
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_Espera
  3814 ;;		_WaitForBusy
  3815 ;;		_SMotor
  3816 ;;		_TeTeclat
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text31
  3821  000CA0                     __ptext31:
  3822                           	callstack 0
  3823  000CA0                     _TiGetTics:
  3824                           	callstack 25
  3825                           
  3826                           ;incstack = 0
  3827                           ;TiGetTics@Handle stored from wreg
  3828  000CA0  6E68               	movwf	TiGetTics@Handle^0,c
  3829                           
  3830                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  3831  000CA2  C02F  F069         	movff	_h_Tics,TiGetTics@actual	;volatile
  3832  000CA6  C030  F06A         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  3833                           
  3834                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  3835  000CAA  5068               	movf	TiGetTics@Handle^0,w,c
  3836  000CAC  0D03               	mullw	3
  3837  000CAE  50F3               	movf	243,w,c
  3838  000CB0  0F01               	addlw	low _s_Timers
  3839  000CB2  6ED9               	movwf	fsr2l,c
  3840  000CB4  6ADA               	clrf	fsr2h,c
  3841  000CB6  CFDE F066          	movff	postinc2,??_TiGetTics
  3842  000CBA  CFDD F067          	movff	postdec2,??_TiGetTics+1
  3843  000CBE  5066               	movf	??_TiGetTics^0,w,c
  3844  000CC0  5C69               	subwf	TiGetTics@actual^0,w,c	;volatile
  3845  000CC2  6E64               	movwf	?_TiGetTics^0,c
  3846  000CC4  5067               	movf	(??_TiGetTics+1)^0,w,c
  3847  000CC6  586A               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  3848  000CC8  6E65               	movwf	(?_TiGetTics+1)^0,c
  3849  000CCA  0012               	return		;funcret
  3850  000CCC                     __end_of_TiGetTics:
  3851                           	callstack 0
  3852                           
  3853 ;; *************** function _EscriuPrimeraOrdre *****************
  3854 ;; Defined at:
  3855 ;;		line 228 in file "LcTLCD.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  ordre           1    wreg     unsigned char 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  ordre           1    6[COMRAM] unsigned char 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2, status,0
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1
  3869 ;;      Params:         0       0       0
  3870 ;;      Locals:         1       0       0
  3871 ;;      Temps:          1       0       0
  3872 ;;      Totals:         2       0       0
  3873 ;;Total ram usage:        2 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; Hardware stack levels required when called: 2
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_LcInit
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text32
  3884  0008AA                     __ptext32:
  3885                           	callstack 0
  3886  0008AA                     _EscriuPrimeraOrdre:
  3887                           	callstack 27
  3888                           
  3889                           ;incstack = 0
  3890                           ;EscriuPrimeraOrdre@ordre stored from wreg
  3891  0008AA  6E65               	movwf	EscriuPrimeraOrdre@ordre^0,c
  3892                           
  3893                           ;LcTLCD.c: 230:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  3894  0008AC  9694               	bcf	148,3,c	;volatile
  3895  0008AE  9494               	bcf	148,2,c	;volatile
  3896  0008B0  9294               	bcf	148,1,c	;volatile
  3897  0008B2  9094               	bcf	148,0,c	;volatile
  3898  0008B4  9A8B               	bcf	139,5,c	;volatile
  3899  0008B6  9E8C               	bcf	140,7,c	;volatile
  3900                           
  3901                           ;LcTLCD.c: 231:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  3902  0008B8  888B               	bsf	139,4,c	;volatile
  3903  0008BA  888B               	bsf	139,4,c	;volatile
  3904                           
  3905                           ;LcTLCD.c: 232:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  3906  0008BC  A665               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  3907  0008BE  D003               	goto	u230
  3908  0008C0  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  3909  0008C2  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  3910  0008C4  D001               	goto	u248
  3911  0008C6                     u230:
  3912  0008C6  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  3913  0008C8                     u248:
  3914  0008C8  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3915  0008CA  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3916  0008CC  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3917  0008CE  508B               	movf	139,w,c	;volatile
  3918  0008D0  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3919  0008D2  0BF7               	andlw	-9
  3920  0008D4  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3921  0008D6  6E8B               	movwf	139,c	;volatile
  3922                           
  3923                           ;LcTLCD.c: 233:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  3924  0008D8  A465               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  3925  0008DA  D003               	goto	u250
  3926  0008DC  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  3927  0008DE  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  3928  0008E0  D001               	goto	u268
  3929  0008E2                     u250:
  3930  0008E2  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  3931  0008E4                     u268:
  3932  0008E4  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3933  0008E6  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3934  0008E8  508B               	movf	139,w,c	;volatile
  3935  0008EA  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3936  0008EC  0BFB               	andlw	-5
  3937  0008EE  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3938  0008F0  6E8B               	movwf	139,c	;volatile
  3939                           
  3940                           ;LcTLCD.c: 234:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  3941  0008F2  A265               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  3942  0008F4  D003               	goto	u270
  3943  0008F6  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  3944  0008F8  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  3945  0008FA  D001               	goto	u288
  3946  0008FC                     u270:
  3947  0008FC  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  3948  0008FE                     u288:
  3949  0008FE  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  3950  000900  508B               	movf	139,w,c	;volatile
  3951  000902  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3952  000904  0BFD               	andlw	-3
  3953  000906  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3954  000908  6E8B               	movwf	139,c	;volatile
  3955                           
  3956                           ;LcTLCD.c: 235:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  3957  00090A  A065               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  3958  00090C  D003               	goto	u290
  3959  00090E  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  3960  000910  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  3961  000912  D001               	goto	u308
  3962  000914                     u290:
  3963  000914  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  3964  000916                     u308:
  3965  000916  508B               	movf	139,w,c	;volatile
  3966  000918  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3967  00091A  0BFE               	andlw	-2
  3968  00091C  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  3969  00091E  6E8B               	movwf	139,c	;volatile
  3970                           
  3971                           ;LcTLCD.c: 236:  (LATCbits.LATC4 = 0);
  3972  000920  988B               	bcf	139,4,c	;volatile
  3973  000922  0012               	return		;funcret
  3974  000924                     __end_of_EscriuPrimeraOrdre:
  3975                           	callstack 0
  3976                           
  3977 ;; *************** function _high_rsi *****************
  3978 ;; Defined at:
  3979 ;;		line 15 in file "main.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1
  3993 ;;      Params:         0       0       0
  3994 ;;      Locals:         0       0       0
  3995 ;;      Temps:          4       0       0
  3996 ;;      Totals:         4       0       0
  3997 ;;Total ram usage:        4 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; Hardware stack levels required when called: 1
  4000 ;; This function calls:
  4001 ;;		__TiRSITimer
  4002 ;; This function is called by:
  4003 ;;		Interrupt level 2
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	intcode
  4008  000008                     __pintcode:
  4009                           	callstack 0
  4010  000008                     _high_rsi:
  4011                           	callstack 24
  4012                           
  4013                           ;incstack = 0
  4014  000008  8276               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4015  00000A  CFD9 F060          	movff	fsr2l,??_high_rsi
  4016  00000E  CFDA F061          	movff	fsr2h,??_high_rsi+1
  4017  000012  CFF3 F062          	movff	prodl,??_high_rsi+2
  4018  000016  CFF4 F063          	movff	prodh,??_high_rsi+3
  4019                           
  4020                           ;main.c: 16:     LATBbits.LATB0 = 0;
  4021  00001A  ECFA  F004         	call	__TiRSITimer	;wreg free
  4022  00001E  C063  FFF4         	movff	??_high_rsi+3,prodh
  4023  000022  C062  FFF3         	movff	??_high_rsi+2,prodl
  4024  000026  C061  FFDA         	movff	??_high_rsi+1,fsr2h
  4025  00002A  C060  FFD9         	movff	??_high_rsi,fsr2l
  4026  00002E  9276               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4027  000030  0011               	retfie		f
  4028  000032                     __end_of_high_rsi:
  4029                           	callstack 0
  4030                           
  4031 ;; *************** function __TiRSITimer *****************
  4032 ;; Defined at:
  4033 ;;		line 37 in file "TiTTimer.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;		None
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1
  4047 ;;      Params:         0       0       0
  4048 ;;      Locals:         0       0       0
  4049 ;;      Temps:          1       0       0
  4050 ;;      Totals:         1       0       0
  4051 ;;Total ram usage:        1 bytes
  4052 ;; Hardware stack levels used: 1
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_high_rsi
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text34
  4061  0009F4                     __ptext34:
  4062                           	callstack 0
  4063  0009F4                     __TiRSITimer:
  4064                           	callstack 24
  4065                           
  4066                           ;TiTTimer.c: 39:     TMR0H = 223;
  4067                           
  4068                           ;incstack = 0
  4069  0009F4  0EDF               	movlw	223
  4070  0009F6  6ED7               	movwf	215,c	;volatile
  4071                           
  4072                           ;TiTTimer.c: 40:     TMR0L = 148;
  4073  0009F8  0E94               	movlw	148
  4074  0009FA  6ED6               	movwf	214,c	;volatile
  4075                           
  4076                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  4077  0009FC  94F2               	bcf	242,2,c	;volatile
  4078                           
  4079                           ;TiTTimer.c: 42:     h_Tics++;
  4080  0009FE  4A2F               	infsnz	_h_Tics^0,f,c
  4081  000A00  2A30               	incf	(_h_Tics+1)^0,f,c
  4082                           
  4083                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  4084  000A02  0E48               	movlw	72
  4085  000A04  5C2F               	subwf	_h_Tics^0,w,c
  4086  000A06  0EEE               	movlw	238
  4087  000A08  5830               	subwfb	(_h_Tics+1)^0,w,c
  4088  000A0A  A0D8               	btfss	status,0,c
  4089  000A0C  0012               	return	
  4090                           
  4091                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  4092  000A0E  0E00               	movlw	0
  4093  000A10  6E37               	movwf	_counter^0,c
  4094  000A12                     i2l1410:
  4095  000A12  0E07               	movlw	7
  4096  000A14  6437               	cpfsgt	_counter^0,c
  4097  000A16  D001               	goto	i2l1414
  4098  000A18  D015               	goto	i2l1422
  4099  000A1A                     i2l1414:
  4100                           
  4101                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  4102  000A1A  5037               	movf	_counter^0,w,c
  4103  000A1C  0D03               	mullw	3
  4104  000A1E  50F3               	movf	243,w,c
  4105  000A20  0F03               	addlw	low (_s_Timers+2)
  4106  000A22  6ED9               	movwf	fsr2l,c
  4107  000A24  6ADA               	clrf	fsr2h,c
  4108  000A26  04DE               	decf	postinc2,w,c
  4109  000A28  A4D8               	btfss	status,2,c
  4110  000A2A  D00A               	goto	i2l1418
  4111                           
  4112                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  4113  000A2C  5037               	movf	_counter^0,w,c
  4114  000A2E  0D03               	mullw	3
  4115  000A30  50F3               	movf	243,w,c
  4116  000A32  0F01               	addlw	low _s_Timers
  4117  000A34  6ED9               	movwf	fsr2l,c
  4118  000A36  6ADA               	clrf	fsr2h,c
  4119  000A38  502F               	movf	_h_Tics^0,w,c
  4120  000A3A  5EDE               	subwf	postinc2,f,c
  4121  000A3C  5030               	movf	(_h_Tics+1)^0,w,c
  4122  000A3E  5ADD               	subwfb	postdec2,f,c
  4123  000A40                     i2l1418:
  4124                           
  4125                           ;TiTTimer.c: 50:         }
  4126  000A40  2A37               	incf	_counter^0,f,c
  4127  000A42  D7E7               	goto	i2l1410
  4128  000A44                     i2l1422:
  4129                           
  4130                           ;TiTTimer.c: 51:         h_Tics=0;
  4131  000A44  0E00               	movlw	0
  4132  000A46  6E30               	movwf	(_h_Tics+1)^0,c
  4133  000A48  0E00               	movlw	0
  4134  000A4A  6E2F               	movwf	_h_Tics^0,c
  4135  000A4C  0012               	return		;funcret
  4136  000A4E                     __end_of__TiRSITimer:
  4137                           	callstack 0
  4138                           
  4139                           	psect	rparam
  4140  0000                     
  4141                           	psect	temp
  4142  000076                     btemp:
  4143                           	callstack 0
  4144  000076                     	ds	1
  4145  0000                     int$flags	set	btemp
  4146  0000                     wtemp8	set	btemp+1
  4147  0000                     ttemp5	set	btemp+1
  4148  0000                     ttemp6	set	btemp+4
  4149  0000                     ttemp7	set	btemp+8
  4150                           
  4151                           	psect	idloc
  4152                           
  4153                           ;Config register IDLOC0 @ 0x200000
  4154                           ;	unspecified, using default values
  4155  200000                     	org	2097152
  4156  200000  FF                 	db	255
  4157                           
  4158                           ;Config register IDLOC1 @ 0x200001
  4159                           ;	unspecified, using default values
  4160  200001                     	org	2097153
  4161  200001  FF                 	db	255
  4162                           
  4163                           ;Config register IDLOC2 @ 0x200002
  4164                           ;	unspecified, using default values
  4165  200002                     	org	2097154
  4166  200002  FF                 	db	255
  4167                           
  4168                           ;Config register IDLOC3 @ 0x200003
  4169                           ;	unspecified, using default values
  4170  200003                     	org	2097155
  4171  200003  FF                 	db	255
  4172                           
  4173                           ;Config register IDLOC4 @ 0x200004
  4174                           ;	unspecified, using default values
  4175  200004                     	org	2097156
  4176  200004  FF                 	db	255
  4177                           
  4178                           ;Config register IDLOC5 @ 0x200005
  4179                           ;	unspecified, using default values
  4180  200005                     	org	2097157
  4181  200005  FF                 	db	255
  4182                           
  4183                           ;Config register IDLOC6 @ 0x200006
  4184                           ;	unspecified, using default values
  4185  200006                     	org	2097158
  4186  200006  FF                 	db	255
  4187                           
  4188                           ;Config register IDLOC7 @ 0x200007
  4189                           ;	unspecified, using default values
  4190  200007                     	org	2097159
  4191  200007  FF                 	db	255
  4192                           
  4193                           	psect	config
  4194                           
  4195                           ; Padding undefined space
  4196  300000                     	org	3145728
  4197  300000  FF                 	db	255
  4198                           
  4199                           ;Config register CONFIG1H @ 0x300001
  4200                           ;	Oscillator
  4201                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  4202                           ;	Fail-Safe Clock Monitor Enable bit
  4203                           ;	FCMEN = 0x0, unprogrammed default
  4204                           ;	Internal/External Oscillator Switchover bit
  4205                           ;	IESO = 0x0, unprogrammed default
  4206  300001                     	org	3145729
  4207  300001  06                 	db	6
  4208                           
  4209                           ;Config register CONFIG2L @ 0x300002
  4210                           ;	unspecified, using default values
  4211                           ;	Power-up Timer Enable bit
  4212                           ;	PWRT = 0x1, unprogrammed default
  4213                           ;	Brown-out Reset Enable bits
  4214                           ;	BOR = 0x3, unprogrammed default
  4215                           ;	Brown-out Reset Voltage bits
  4216                           ;	BORV = 0x3, unprogrammed default
  4217  300002                     	org	3145730
  4218  300002  1F                 	db	31
  4219                           
  4220                           ;Config register CONFIG2H @ 0x300003
  4221                           ;	Watchdog Timer Enable bit
  4222                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4223                           ;	Watchdog Timer Postscale Select bits
  4224                           ;	WDTPS = 0xF, unprogrammed default
  4225  300003                     	org	3145731
  4226  300003  1E                 	db	30
  4227                           
  4228                           ; Padding undefined space
  4229  300004                     	org	3145732
  4230  300004  FF                 	db	255
  4231                           
  4232                           ;Config register CONFIG3H @ 0x300005
  4233                           ;	CCP2 MUX bit
  4234                           ;	CCP2MX = 0x1, unprogrammed default
  4235                           ;	PORTB A/D Enable bit
  4236                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  4237                           ;	Low-Power Timer1 Oscillator Enable bit
  4238                           ;	LPT1OSC = 0x0, unprogrammed default
  4239                           ;	MCLR Pin Enable bit
  4240                           ;	MCLRE = 0x1, unprogrammed default
  4241  300005                     	org	3145733
  4242  300005  81                 	db	129
  4243                           
  4244                           ;Config register CONFIG4L @ 0x300006
  4245                           ;	Stack Full/Underflow Reset Enable bit
  4246                           ;	STVREN = 0x1, unprogrammed default
  4247                           ;	Single-Supply ICSP Enable bit
  4248                           ;	LVP = OFF, Single-Supply ICSP disabled
  4249                           ;	Boot Block Size Select bits
  4250                           ;	BBSIZ = 0x0, unprogrammed default
  4251                           ;	Extended Instruction Set Enable bit
  4252                           ;	XINST = 0x0, unprogrammed default
  4253                           ;	Background Debugger Enable bit
  4254                           ;	DEBUG = 0x1, unprogrammed default
  4255  300006                     	org	3145734
  4256  300006  81                 	db	129
  4257                           
  4258                           ; Padding undefined space
  4259  300007                     	org	3145735
  4260  300007  FF                 	db	255
  4261                           
  4262                           ;Config register CONFIG5L @ 0x300008
  4263                           ;	unspecified, using default values
  4264                           ;	Code Protection bit
  4265                           ;	CP0 = 0x1, unprogrammed default
  4266                           ;	Code Protection bit
  4267                           ;	CP1 = 0x1, unprogrammed default
  4268  300008                     	org	3145736
  4269  300008  03                 	db	3
  4270                           
  4271                           ;Config register CONFIG5H @ 0x300009
  4272                           ;	unspecified, using default values
  4273                           ;	Boot Block Code Protection bitProtect Boot
  4274                           ;	CPB = 0x1, unprogrammed default
  4275                           ;	Data EEPROM Code Protection bit
  4276                           ;	CPD = 0x1, unprogrammed default
  4277  300009                     	org	3145737
  4278  300009  C0                 	db	192
  4279                           
  4280                           ;Config register CONFIG6L @ 0x30000A
  4281                           ;	unspecified, using default values
  4282                           ;	Write Protection bit
  4283                           ;	WRT0 = 0x1, unprogrammed default
  4284                           ;	Write Protection bit
  4285                           ;	WRT1 = 0x1, unprogrammed default
  4286  30000A                     	org	3145738
  4287  30000A  03                 	db	3
  4288                           
  4289                           ;Config register CONFIG6H @ 0x30000B
  4290                           ;	unspecified, using default values
  4291                           ;	Configuration Register Write Protection bit
  4292                           ;	WRTC = 0x1, unprogrammed default
  4293                           ;	Boot Block Write Protection bit
  4294                           ;	WRTB = 0x1, unprogrammed default
  4295                           ;	Data EEPROM Write Protection bit
  4296                           ;	WRTD = 0x1, unprogrammed default
  4297  30000B                     	org	3145739
  4298  30000B  E0                 	db	224
  4299                           
  4300                           ;Config register CONFIG7L @ 0x30000C
  4301                           ;	unspecified, using default values
  4302                           ;	Table Read Protection bit
  4303                           ;	EBTR0 = 0x1, unprogrammed default
  4304                           ;	Table Read Protection bit
  4305                           ;	EBTR1 = 0x1, unprogrammed default
  4306  30000C                     	org	3145740
  4307  30000C  03                 	db	3
  4308                           
  4309                           ;Config register CONFIG7H @ 0x30000D
  4310                           ;	unspecified, using default values
  4311                           ;	Boot Block Table Read Protection bit
  4312                           ;	EBTRB = 0x1, unprogrammed default
  4313  30000D                     	org	3145741
  4314  30000D  40                 	db	64
  4315                           tosu	equ	0xFFF
  4316                           tosh	equ	0xFFE
  4317                           tosl	equ	0xFFD
  4318                           stkptr	equ	0xFFC
  4319                           pclatu	equ	0xFFB
  4320                           pclath	equ	0xFFA
  4321                           pcl	equ	0xFF9
  4322                           tblptru	equ	0xFF8
  4323                           tblptrh	equ	0xFF7
  4324                           tblptrl	equ	0xFF6
  4325                           tablat	equ	0xFF5
  4326                           prodh	equ	0xFF4
  4327                           prodl	equ	0xFF3
  4328                           indf0	equ	0xFEF
  4329                           postinc0	equ	0xFEE
  4330                           postdec0	equ	0xFED
  4331                           preinc0	equ	0xFEC
  4332                           plusw0	equ	0xFEB
  4333                           fsr0h	equ	0xFEA
  4334                           fsr0l	equ	0xFE9
  4335                           wreg	equ	0xFE8
  4336                           indf1	equ	0xFE7
  4337                           postinc1	equ	0xFE6
  4338                           postdec1	equ	0xFE5
  4339                           preinc1	equ	0xFE4
  4340                           plusw1	equ	0xFE3
  4341                           fsr1h	equ	0xFE2
  4342                           fsr1l	equ	0xFE1
  4343                           bsr	equ	0xFE0
  4344                           indf2	equ	0xFDF
  4345                           postinc2	equ	0xFDE
  4346                           postdec2	equ	0xFDD
  4347                           preinc2	equ	0xFDC
  4348                           plusw2	equ	0xFDB
  4349                           fsr2h	equ	0xFDA
  4350                           fsr2l	equ	0xFD9
  4351                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        27
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     117
    BANK0           128      0       0
    BANK1           256      0     144

Pointer List with Targets:

    tmpPassword	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tmpUsername	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LcNewString@new_s	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(1) Largest target is 11
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _menu->_LcPutChar
    _LcClear->_LcGotoXY
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7950
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                         _init_ports
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0    4753
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                              _SMSon
                     _UgetNumUsuaris
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          1     0      1     326
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2015
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0      97
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    1372
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    1372
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1040
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _LcCursorOff
       _CantaIR
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _WaitForBusy
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _init_ports
   _menu
     _LcClear
       _CantaIR
       _Espera
       _LcGotoXY
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _SMSon
     _UgetNumUsuaris

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      90       6       56.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     16      75       1       92.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     105       7        0.0%
DATA                 0      0     105       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 22 11:55:42 2022

          TiResetTics@Handle 0064             _loginNOTRegister 03A9                            _j 0036  
                        l407 028A                          l461 080C                          l471 082C  
                        l464 0816                          l474 0862                          l476 0864  
                        l469 082A                          u230 08C6                          u250 08E2  
                        u308 0916                          u270 08FC                          u248 08C8  
                        u290 0914                          u268 08E4                          u288 08FE  
           ??_CantaPartBaixa 0064                          wreg 000FE8                  _ultimaTecla 004F  
                       l2112 042E                         l2104 041A                         l2034 0A94  
                       l2026 0A7A                         l2202 055C                         l1322 0D70  
                       l2028 0A84                         l2212 0574                         l1254 0B68  
                       l1262 0B76                         l2150 04B6                         l2134 0488  
                       l2126 0460                         l2056 074E                         l2208 056C  
                       l2232 0588                         l2312 0310                         l2240 0226  
                       l2162 04E2                         l2410 064C                         l1442 0BF0  
                       l2156 04CC                         l2404 063E                         l2332 0350  
                       l2316 0322                         l2174 0514                         l2430 0688  
                       l2422 0670                         l1446 0BF8                         l1606 0826  
                       l2350 0388                         l2334 0356                         l2262 026C  
                       l2246 0238                         l2176 0516                         l2168 04FC  
                       l2416 0662                         l2264 0272                         l2256 025A  
                       l2194 0542                         l2178 051C                         l2450 06DA  
                       l2442 06C6                         l2426 067C                         l2354 039A  
                       l2188 0538                         l2436 06B8                         l1636 08A0  
                       l2446 06CE                         l2390 061C                         l2382 0608  
                       l2294 02D8                         l2286 02BE                         l2278 029E  
                       l2374 03C8                         l2456 06E6                         l2296 02DE  
                       l2394 0628                         l2396 062E                         l2388 0618  
                       l2478 0BC2                         l1936 0AFA                         l1962 0CF8  
                       l1968 0B38                         STR_1 020C                         STR_2 0201  
                       STR_3 021B                         STR_4 0214                         u1110 0998  
                       u1130 09B4                         u1210 094C                         u1150 09CE  
                       u1230 0966                         u1128 099A                         u1208 0932  
                       u1170 09E6                         u1250 097E                         u1148 09B6  
                       u1228 094E                         u1190 0930                         u1168 09D0  
                       u1248 0968                         u1360 07FC                         u1600 0564  
                       u1520 04DC                         _LATD 000F8C                         u1188 09E8  
                       u1268 0980                         u1460 047E                         u1820 05CE  
                       u1590 054A                         u1830 05D8                         u1840 05E8  
                       u1850 05F8                         u1836 05DA                         u1828 05D0  
                       u1846 05EA                         u1856 05FA              ??_SsetNovaTecla 0064  
                       _Rows 0043                         _main 0B9C                         _menu 0224  
                       fsr2h 000FDA                         indf2 000FDF                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 0076                         prodh 000FF4  
                       prodl 000FF3              __end_of_LcClear 0CF0                         start 0032  
            __end_of_CantaIR 0C70                LcInit@columns 006F                 ___param_bank 000000  
                Espera@Timer 006E                        ?_main 005F                        ?_menu 005F  
                      _EEADR 000FA9                ??_TiInitTimer 0064                        _T0CON 000FD5  
                      _TMR0H 000FD7                        _TMR0L 000FD6                        _LcLCD 0C70  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _SMSon 0DB8                  _MNovaLletra 0DA8  
                      _Minit 0DB0                        _Sinit 0DA0                        _Timer 003F  
                      _Uinit 0802                        _s_ptr 003E                        _nou_s 03AB  
                _LcCursorOff 0D74               __pbitbssCOMRAM 03A8                        tablat 000FF5  
                _LcNewString 0D80                ??_TiResetTics 0064                        ttemp5 0077  
                      ttemp6 007A                        ttemp7 007E                        status 000FD8  
                      wtemp8 0077             __end_of_LcGotoXY 0B62             __end_of_LcLliure 0D74  
              ??__TiRSITimer 005F                   _TiGetTimer 0B62      EscriuPrimeraOrdre@ordre 0065  
            __initialization 0AA0                _indexLastUser 0031           __size_of_CantaData 0032  
               __end_of_main 0BD4                 __end_of_menu 0418             __end_of_TeTeclat 0728  
                     ??_main 0075                       ??_menu 0073           __size_of_LcPutChar 0052  
              __activetblptr 000002                       ?_LcLCD 005F                       ?_SMSon 005F  
                     ?_Minit 005F                       ?_Sinit 005F                       ?_Uinit 005F  
        __end_of_TiInitTimer 0C0C                       _EEDATA 000FA8                    ??_LcClear 0072  
                  ??_CantaIR 0066                       i2l1410 0A12                       i2l1422 0A44  
                     i2l1414 0A1A                       i2l1418 0A40               LcGotoXY@Fisics 006D  
             LcGotoXY@Column 0071                ??_WaitForBusy 006B           __size_of_TiGetTics 002C  
             _sumaPulsacions 003D                       _LcInit 0728               _UgetNumUsuaris 0DBE  
                     _SMotor 0418                       _TeInit 0D98                       _Espera 0CF0  
               _LcGotoXY$342 006F                       _RowAct 0041          __end_of_TiResetTics 0D68  
                     Uinit@i 0066                       Uinit@j 0067             __end_of_high_rsi 0032  
                     _h_Tics 002F          __end_of__TiRSITimer 0A4E                       clear_0 0AC6  
                     clear_1 0AD4                       isa$std 000001                   Uinit@j_932 0068  
__size_of_EscriuPrimeraOrdre 007A                 __pdataCOMRAM 0044       __size_of_CantaPartAlta 0068  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8              _currentUsrIndex 0033            __end_of_CantaData 0C3E  
               TeTeclat@cols 0039                   __accesstop 0080      __end_of__initialization 0ADA  
     __end_of_UgetNumUsuaris 0DC2            __end_of_LcPutChar 0AA0                ___rparam_used 000001  
              __end_of_LcLCD 0CA0                  ?_TiGetTimer 005F                __end_of_SMSon 0DBE  
             __pcstackCOMRAM 005F                __end_of_Minit 0DB8          __end_of_WaitForBusy 0B28  
              __end_of_Sinit 0DA8                __end_of_Uinit 08AA            __end_of_TiGetTics 0CCC  
                _TiInitTimer 0BD4                      ??_LcLCD 0073                      ??_SMSon 0064  
                  ?_LcGotoXY 006C                    ?_LcLliure 005F                      ??_Minit 0065  
                    ??_Sinit 0065                      ??_Uinit 0064                   __pbssBANK1 0100  
                  ?_TeTeclat 005F                  _TiResetTics 0D50              ?_UgetNumUsuaris 005F  
                    ?_LcInit 006F                _CantaPartAlta 098C                      ?_SMotor 005F  
                    ?_TeInit 005F                      ?_Espera 006B                  __TiRSITimer 09F4  
     __size_of_MsetNovaTecla 0008                   _createUser 03A8                      LcInit@i 0071  
                 ??_LcGotoXY 006D                 ?_MNovaLletra 005F                   ??_LcLliure 0064  
        __size_of_TiGetTimer 003A                 ?_LcCursorOff 005F                    ?_high_rsi 005F  
                    _LcClear 0CCC                      _CantaIR 0C3E                 ?_LcNewString 0064  
                 ??_TeTeclat 006B                  _WaitForBusy 0AE8               ?_CantaPartAlta 005F  
                    _Columns 0042        __end_of_SsetNovaTecla 0D90              __size_of_LcInit 00DA  
                    __Hparam 0000              __size_of_SMotor 01AC              __size_of_TeInit 0008  
            __size_of_Espera 0024                      __Lparam 0000                 __psmallconst 0200  
                    __pcinit 0AA0                   _init_ports 0D14                      __ramtop 0200  
                    __ptext0 0B9C                      __ptext1 0224                      __ptext2 0DBE  
                    __ptext3 0DB8                      __ptext4 0D80                      __ptext5 0D68  
                    __ptext6 0CCC                      __ptext7 0D14                      __ptext8 0802  
                    __ptext9 0BD4                    _T0CONbits 000FD5                    CantaIR@IR 0066  
                    _counter 0037             LcNewString@new_s 0064              WaitForBusy@Busy 006B  
                 ??_high_rsi 0060         end_of_initialization 0ADA                      _usuaris 0100  
    __size_of_CantaPartBaixa 0068                __Lmediumconst 0000              TiGetTics@Handle 0068  
              _MsetNovaTecla 0D90                   _novaLletra 004D              TiGetTics@actual 0069  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE                   _numUsuaris 0032                TeTeclat@files 0038  
              TeTeclat@state 003A                    _PORTCbits 000F82                    _PORTDbits 000F83  
                  _TRISCbits 000F94                    _TRISDbits 000F95              ??_CantaPartAlta 0064  
             ?_MsetNovaTecla 005F                    _CantaData 0C0C                 ??_TiGetTimer 0064  
             __end_of_LcInit 0802               __end_of_SMotor 05C4                    _LcPutChar 0A4E  
             __end_of_TeInit 0DA0               __end_of_Espera 0D14   __end_of_EscriuPrimeraOrdre 0924  
              __pidataCOMRAM 0D34                  ?_init_ports 005F                    _ColumnAct 0040  
               ?_TiInitTimer 005F          start_initialization 0AA0                    _TiGetTics 0CA0  
           ??_UgetNumUsuaris 0064            __size_of_LcGotoXY 003A           __end_of_TiGetTimer 0B9C  
       __size_of_MNovaLletra 0008            __size_of_LcLliure 000C                 ?_TiResetTics 005F  
       __size_of_LcCursorOff 000C                   ?_CantaData 005F         __size_of_LcNewString 0008  
                   ??_LcInit 0070                    _NovaTecla 004E            __size_of_TeTeclat 0164  
                   ??_SMotor 006B                     ??_TeInit 0065                 ?__TiRSITimer 005F  
                   ??_Espera 006D                   ?_LcPutChar 005F                  __pbssCOMRAM 0001  
                 ?_TiGetTics 0064              ??_MsetNovaTecla 0064                     ?_LcClear 005F  
                   ?_CantaIR 005F               _CantaPartBaixa 0924            __size_of_high_rsi 002A  
               ?_WaitForBusy 005F          __size_of_init_ports 0020           MsetNovaTecla@tecla 0064  
         SsetNovaTecla@tecla 0064                    __pintcode 0008              CantaPartBaixa@c 0065  
                __smallconst 0200               __size_of_LcLCD 0030               __size_of_SMSon 0006  
             __size_of_Minit 0008               __size_of_Sinit 0008               __size_of_Uinit 00A8  
     __end_of_CantaPartBaixa 098C                  ??_CantaData 0066                     _LATBbits 000F8A  
                   _LATCbits 000F8B                     _LATDbits 000F8C                    _novaTecla 0051  
                ??_LcPutChar 0072                     _RCONbits 000FD0                    _timerMenu 0035  
     __size_of_SsetNovaTecla 0008                     Espera@ms 006B                     _LcGotoXY 0B28  
                   _LcLliure 0D68                  ??_TiGetTics 0066         __size_of_TiInitTimer 0038  
               _teclaPremuda 0053                  LcGotoXY@Row 006C                    copy_data0 0AB4  
            ?_CantaPartBaixa 005F             __size_of_LcClear 0024             __size_of_CantaIR 0032  
                   _TeTeclat 05C4                   _EECON1bits 000FA6         __size_of_TiResetTics 0018  
                   __Hrparam 0000                    menu@state 0034                     __Lrparam 0000  
       __size_of__TiRSITimer 005A                 ??_init_ports 0064                     __ptext10 05C4  
                   __ptext11 0D88           _EscriuPrimeraOrdre 08AA                     __ptext20 0B28  
                   __ptext12 0D90                     __ptext21 0C0C                     __ptext13 0D98  
                   __ptext30 0D50                     __ptext22 0728                     __ptext14 0DA0  
                   __ptext31 0CA0                     __ptext23 0B62                     __ptext15 0418  
                   __ptext32 08AA                     __ptext24 0D74                     __ptext16 0DA8  
                   __ptext25 0AE8                     __ptext17 0DB0                     __ptext34 09F4  
                   __ptext26 0C3E                     __ptext18 0C70                     __ptext27 0924  
                   __ptext19 0A4E                     __ptext28 098C                     __ptext29 0CF0  
             CantaPartAlta@c 0065                  _lletraASCII 0052                     _high_rsi 0008  
                   _s_Timers 0001                  _lletraInici 0044          ?_EscriuPrimeraOrdre 005F  
              __size_of_main 0038                __size_of_menu 01F4        __end_of_CantaPartAlta 09F4  
              CantaData@Data 0066                     _tiTeclat 003B           __end_of_init_ports 0D34  
                   _setSMSon 03AA                _SsetNovaTecla 0D88         __size_of_WaitForBusy 0040  
                   _password 0019                     _timerSMS 0050                     isa$xinst 000000  
                   int$flags 0076                     _username 0022         ??_EscriuPrimeraOrdre 0064  
                 LcInit@rows 0070                   _INTCONbits 000FF2                ??_MNovaLletra 0064  
              ??_LcCursorOff 006C                ??_LcNewString 0065                     intlevel2 0000  
                 LcPutChar@c 0072               ?_SsetNovaTecla 005F            MNovaLletra@lletra 0064  
                _tmpPassword 002B          __end_of_MNovaLletra 0DB0        __end_of_MsetNovaTecla 0D98  
                _tmpUsername 002D          __end_of_LcCursorOff 0D80                  SMotor@state 003C  
    __size_of_UgetNumUsuaris 0004          __end_of_LcNewString 0D88  
