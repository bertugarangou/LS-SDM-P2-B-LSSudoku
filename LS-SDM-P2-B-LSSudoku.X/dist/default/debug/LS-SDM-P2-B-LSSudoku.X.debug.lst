

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 07 16:39:02 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   110                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   112                           	psect	pa_nodes0,global,class=CODE,delta=1
   113  0000                     
   114                           ; Version 2.32
   115                           ; Generated 02/02/2021 GMT
   116                           ; 
   117                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution. Publication is not required when
   131                           ;        this file is used in an embedded application.
   132                           ; 
   133                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   134                           ;        software without specific prior written permission.
   135                           ; 
   136                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   137                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   138                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   139                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   140                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   141                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   142                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   143                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   144                           ; 
   145                           ; 
   146                           ; Code-generator required, PIC18F4321 Definitions
   147                           ; 
   148                           ; SFR Addresses
   149  0000                     
   150                           	psect	idataCOMRAM
   151  001A5E                     __pidataCOMRAM:
   152                           	callstack 0
   153                           
   154                           ;initializer for _convertir
   155  001A5E  FA                 	db	250
   156                           
   157                           ;initializer for _novaTeclaSIO
   158  001A5F  FF                 	db	255
   159                           
   160                           ;initializer for _direccioSIO
   161  001A60  FF                 	db	255
   162                           
   163                           ;initializer for _usuariActualSIO
   164  001A61  FF                 	db	255
   165                           
   166                           ;initializer for _novaTeclaJOC
   167  001A62  FF                 	db	255
   168                           
   169                           ;initializer for _usuariJoc
   170  001A63  FF                 	db	255
   171                           
   172                           ;initializer for GLCDMotor@max2
   173  001A64  0F                 	db	15
   174                           
   175                           ;initializer for GLCDMotor@max1
   176  001A65  0F                 	db	15
   177                           
   178                           ;initializer for _usuariLoguejat
   179  001A66  FF                 	db	255
   180                           
   181                           ;initializer for _novaDireccio
   182  001A67  FF                 	db	255
   183                           
   184                           ;initializer for _novaLletra
   185  001A68  FF                 	db	255
   186                           
   187                           ;initializer for _NovaTecla
   188  001A69  FF                 	db	255
   189                           
   190                           ;initializer for _hora
   191  001A6A  33                 	db	51
   192  001A6B  30                 	db	48
   193  001A6C  3A                 	db	58
   194  001A6D  30                 	db	48
   195  001A6E  30                 	db	48
   196  001A6F  00                 	db	0
   197                           
   198                           ;initializer for _stringScore
   199  001A70  30                 	db	48
   200  001A71  30                 	db	48
   201  001A72  00                 	db	0
   202                           
   203                           	psect	mediumconst
   204  001CBE                     __pmediumconst:
   205                           	callstack 0
   206  001CBE  00                 	db	0
   207  001CBF                     _menuList:
   208                           	callstack 0
   209  001CBF  31                 	db	49
   210  001CC0  2E                 	db	46
   211  001CC1  50                 	db	80
   212  001CC2  6C                 	db	108
   213  001CC3  61                 	db	97
   214  001CC4  79                 	db	121
   215  001CC5  20                 	db	32
   216  001CC6  61                 	db	97
   217  001CC7  20                 	db	32
   218  001CC8  47                 	db	71
   219  001CC9  61                 	db	97
   220  001CCA  6D                 	db	109
   221  001CCB  65                 	db	101
   222  001CCC  00                 	db	0
   223  001CCD  00                 	db	0
   224  001CCE  00                 	db	0
   225  001CCF  00                 	db	0
   226  001CD0  00                 	db	0
   227  001CD1  00                 	db	0
   228  001CD2  00                 	db	0
   229  001CD3  00                 	db	0
   230  001CD4  00                 	db	0
   231  001CD5  00                 	db	0
   232  001CD6  00                 	db	0
   233  001CD7  00                 	db	0
   234  001CD8  00                 	db	0
   235  001CD9  00                 	db	0
   236  001CDA  00                 	db	0
   237  001CDB  00                 	db	0
   238  001CDC  32                 	db	50
   239  001CDD  2E                 	db	46
   240  001CDE  4D                 	db	77
   241  001CDF  6F                 	db	111
   242  001CE0  64                 	db	100
   243  001CE1  69                 	db	105
   244  001CE2  66                 	db	102
   245  001CE3  79                 	db	121
   246  001CE4  20                 	db	32
   247  001CE5  54                 	db	84
   248  001CE6  69                 	db	105
   249  001CE7  6D                 	db	109
   250  001CE8  65                 	db	101
   251  001CE9  00                 	db	0
   252  001CEA  00                 	db	0
   253  001CEB  00                 	db	0
   254  001CEC  00                 	db	0
   255  001CED  00                 	db	0
   256  001CEE  00                 	db	0
   257  001CEF  00                 	db	0
   258  001CF0  00                 	db	0
   259  001CF1  00                 	db	0
   260  001CF2  00                 	db	0
   261  001CF3  00                 	db	0
   262  001CF4  00                 	db	0
   263  001CF5  00                 	db	0
   264  001CF6  00                 	db	0
   265  001CF7  00                 	db	0
   266  001CF8  00                 	db	0
   267  001CF9  33                 	db	51
   268  001CFA  2E                 	db	46
   269  001CFB  53                 	db	83
   270  001CFC  68                 	db	104
   271  001CFD  6F                 	db	111
   272  001CFE  77                 	db	119
   273  001CFF  20                 	db	32
   274  001D00  47                 	db	71
   275  001D01  65                 	db	101
   276  001D02  6E                 	db	110
   277  001D03  65                 	db	101
   278  001D04  72                 	db	114
   279  001D05  61                 	db	97
   280  001D06  6C                 	db	108
   281  001D07  20                 	db	32
   282  001D08  54                 	db	84
   283  001D09  6F                 	db	111
   284  001D0A  70                 	db	112
   285  001D0B  20                 	db	32
   286  001D0C  35                 	db	53
   287  001D0D  20                 	db	32
   288  001D0E  53                 	db	83
   289  001D0F  63                 	db	99
   290  001D10  6F                 	db	111
   291  001D11  72                 	db	114
   292  001D12  65                 	db	101
   293  001D13  73                 	db	115
   294  001D14  20                 	db	32
   295  001D15  00                 	db	0
   296  001D16  34                 	db	52
   297  001D17  2E                 	db	46
   298  001D18  4C                 	db	76
   299  001D19  6F                 	db	111
   300  001D1A  67                 	db	103
   301  001D1B  6F                 	db	111
   302  001D1C  75                 	db	117
   303  001D1D  74                 	db	116
   304  001D1E  00                 	db	0
   305  001D1F  00                 	db	0
   306  001D20  00                 	db	0
   307  001D21  00                 	db	0
   308  001D22  00                 	db	0
   309  001D23  00                 	db	0
   310  001D24  00                 	db	0
   311  001D25  00                 	db	0
   312  001D26  00                 	db	0
   313  001D27  00                 	db	0
   314  001D28  00                 	db	0
   315  001D29  00                 	db	0
   316  001D2A  00                 	db	0
   317  001D2B  00                 	db	0
   318  001D2C  00                 	db	0
   319  001D2D  00                 	db	0
   320  001D2E  00                 	db	0
   321  001D2F  00                 	db	0
   322  001D30  00                 	db	0
   323  001D31  00                 	db	0
   324  001D32  00                 	db	0
   325  001D33  35                 	db	53
   326  001D34  2E                 	db	46
   327  001D35  53                 	db	83
   328  001D36  68                 	db	104
   329  001D37  6F                 	db	111
   330  001D38  77                 	db	119
   331  001D39  20                 	db	32
   332  001D3A  41                 	db	65
   333  001D3B  6C                 	db	108
   334  001D3C  6C                 	db	108
   335  001D3D  20                 	db	32
   336  001D3E  55                 	db	85
   337  001D3F  73                 	db	115
   338  001D40  65                 	db	101
   339  001D41  72                 	db	114
   340  001D42  73                 	db	115
   341  001D43  00                 	db	0
   342  001D44  00                 	db	0
   343  001D45  00                 	db	0
   344  001D46  00                 	db	0
   345  001D47  00                 	db	0
   346  001D48  00                 	db	0
   347  001D49  00                 	db	0
   348  001D4A  00                 	db	0
   349  001D4B  00                 	db	0
   350  001D4C  00                 	db	0
   351  001D4D  00                 	db	0
   352  001D4E  00                 	db	0
   353  001D4F  00                 	db	0
   354  001D50                     __end_of_menuList:
   355                           	callstack 0
   356  001D50                     _teclaPremuda:
   357                           	callstack 0
   358  001D50  01                 	db	1
   359  001D51  02                 	db	2
   360  001D52  03                 	db	3
   361  001D53  04                 	db	4
   362  001D54  05                 	db	5
   363  001D55  06                 	db	6
   364  001D56  07                 	db	7
   365  001D57  08                 	db	8
   366  001D58  09                 	db	9
   367  001D59  0A                 	db	10
   368  001D5A  00                 	db	0
   369  001D5B  0B                 	db	11
   370  001D5C                     __end_of_teclaPremuda:
   371                           	callstack 0
   372  001D5C                     _registerText:
   373                           	callstack 0
   374  001D5C  32                 	db	50
   375  001D5D  2E                 	db	46
   376  001D5E  52                 	db	82
   377  001D5F  45                 	db	69
   378  001D60  47                 	db	71
   379  001D61  49                 	db	73
   380  001D62  53                 	db	83
   381  001D63  54                 	db	84
   382  001D64  45                 	db	69
   383  001D65  52                 	db	82
   384  001D66  00                 	db	0
   385  001D67                     __end_of_registerText:
   386                           	callstack 0
   387  001D67                     _loginText:
   388                           	callstack 0
   389  001D67  31                 	db	49
   390  001D68  2E                 	db	46
   391  001D69  4C                 	db	76
   392  001D6A  4F                 	db	79
   393  001D6B  47                 	db	71
   394  001D6C  49                 	db	73
   395  001D6D  4E                 	db	78
   396  001D6E  00                 	db	0
   397  001D6F                     __end_of_loginText:
   398                           	callstack 0
   399  0000                     _PORTDbits	set	3971
   400  0000                     _LATD	set	3980
   401  0000                     _TRISD	set	3989
   402  0000                     _TRISC	set	3988
   403  0000                     _LATBbits	set	3978
   404  0000                     _TRISB	set	3987
   405  0000                     _TRISA	set	3986
   406  0000                     _PORTCbits	set	3970
   407  0000                     _LATDbits	set	3980
   408  0000                     _LATCbits	set	3979
   409  0000                     _TRISDbits	set	3989
   410  0000                     _TRISCbits	set	3988
   411  0000                     _PIR1bits	set	3998
   412  0000                     _RCREG	set	4014
   413  0000                     _TXREG	set	4013
   414  0000                     _TXSTAbits	set	4012
   415  0000                     _ADCON0bits	set	4034
   416  0000                     _ADRESH	set	4036
   417  0000                     _ADCON2	set	4032
   418  0000                     _ADCON1	set	4033
   419  0000                     _ADCON0	set	4034
   420  0000                     _EECON2	set	4007
   421  0000                     _EEDATA	set	4008
   422  0000                     _EEADR	set	4009
   423  0000                     _RCONbits	set	4048
   424  0000                     _SPBRG	set	4015
   425  0000                     _SPBRGH	set	4016
   426  0000                     _BAUDCON	set	4024
   427  0000                     _RCSTA	set	4011
   428  0000                     _TXSTA	set	4012
   429  0000                     _EECON1bits	set	4006
   430  0000                     _T0CONbits	set	4053
   431  0000                     _TMR0L	set	4054
   432  0000                     _TMR0H	set	4055
   433  0000                     _T0CON	set	4053
   434  0000                     _INTCONbits	set	4082
   435  001D6F                     STR_5:
   436  001D6F  54                 	db	84	;'T'
   437  001D70  49                 	db	73	;'I'
   438  001D71  4D                 	db	77	;'M'
   439  001D72  45                 	db	69	;'E'
   440  001D73  20                 	db	32
   441  001D74  52                 	db	82	;'R'
   442  001D75  45                 	db	69	;'E'
   443  001D76  4D                 	db	77	;'M'
   444  001D77  41                 	db	65	;'A'
   445  001D78  49                 	db	73	;'I'
   446  001D79  4E                 	db	78	;'N'
   447  001D7A  49                 	db	73	;'I'
   448  001D7B  4E                 	db	78	;'N'
   449  001D7C  47                 	db	71	;'G'
   450  001D7D  3A                 	db	58	;':'
   451  001D7E  00                 	db	0
   452  001D7F                     STR_4:
   453  001D7F  4D                 	db	77	;'M'
   454  001D80  6F                 	db	111	;'o'
   455  001D81  64                 	db	100	;'d'
   456  001D82  69                 	db	105	;'i'
   457  001D83  66                 	db	102	;'f'
   458  001D84  79                 	db	121	;'y'
   459  001D85  20                 	db	32
   460  001D86  54                 	db	84	;'T'
   461  001D87  69                 	db	105	;'i'
   462  001D88  6D                 	db	109	;'m'
   463  001D89  65                 	db	101	;'e'
   464  001D8A  3A                 	db	58	;':'
   465  001D8B  00                 	db	0
   466  001D8C                     STR_7:
   467  001D8C  54                 	db	84	;'T'
   468  001D8D  49                 	db	73	;'I'
   469  001D8E  4D                 	db	77	;'M'
   470  001D8F  45                 	db	69	;'E'
   471  001D90  20                 	db	32
   472  001D91  4C                 	db	76	;'L'
   473  001D92  45                 	db	69	;'E'
   474  001D93  46                 	db	70	;'F'
   475  001D94  54                 	db	84	;'T'
   476  001D95  3A                 	db	58	;':'
   477  001D96  20                 	db	32
   478  001D97  00                 	db	0
   479  001D98                     STR_3:
   480  001D98  42                 	db	66	;'B'
   481  001D99  59                 	db	89	;'Y'
   482  001D9A  45                 	db	69	;'E'
   483  001D9B  20                 	db	32
   484  001D9C  42                 	db	66	;'B'
   485  001D9D  59                 	db	89	;'Y'
   486  001D9E  45                 	db	69	;'E'
   487  001D9F  20                 	db	32
   488  001DA0  00                 	db	0
   489  001DA1                     STR_8:
   490  001DA1  53                 	db	83	;'S'
   491  001DA2  43                 	db	67	;'C'
   492  001DA3  4F                 	db	79	;'O'
   493  001DA4  52                 	db	82	;'R'
   494  001DA5  45                 	db	69	;'E'
   495  001DA6  3A                 	db	58	;':'
   496  001DA7  20                 	db	32
   497  001DA8  00                 	db	0
   498  001DA9                     STR_6:
   499  001DA9  45                 	db	69	;'E'
   500  001DAA  52                 	db	82	;'R'
   501  001DAB  52                 	db	82	;'R'
   502  001DAC  4F                 	db	79	;'O'
   503  001DAD  52                 	db	82	;'R'
   504  001DAE  53                 	db	83	;'S'
   505  001DAF  3A                 	db	58	;':'
   506  001DB0  00                 	db	0
   507  001DB1                     STR_2:
   508  001DB1  50                 	db	80	;'P'
   509  001DB2  53                 	db	83	;'S'
   510  001DB3  57                 	db	87	;'W'
   511  001DB4  44                 	db	68	;'D'
   512  001DB5  3A                 	db	58	;':'
   513  001DB6  20                 	db	32
   514  001DB7  00                 	db	0
   515  001DB8                     STR_1:
   516  001DB8  55                 	db	85	;'U'
   517  001DB9  53                 	db	83	;'S'
   518  001DBA  45                 	db	69	;'E'
   519  001DBB  52                 	db	82	;'R'
   520  001DBC  3A                 	db	58	;':'
   521  001DBD  20                 	db	32
   522  001DBE  00                 	db	0
   523  001DBF  00                 	db	0	; dummy byte at the end
   524  0000                     
   525                           ; #config settings
   526                           
   527                           	psect	cinit
   528  001622                     __pcinit:
   529                           	callstack 0
   530  001622                     start_initialization:
   531                           	callstack 0
   532  001622                     __initialization:
   533                           	callstack 0
   534                           
   535                           ; Initialize objects allocated to COMRAM (21 bytes)
   536                           ; load TBLPTR registers with __pidataCOMRAM
   537  001622  0E5E               	movlw	low __pidataCOMRAM
   538  001624  6EF6               	movwf	tblptrl,c
   539  001626  0E1A               	movlw	high __pidataCOMRAM
   540  001628  6EF7               	movwf	tblptrh,c
   541  00162A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   542  00162C  6EF8               	movwf	tblptru,c
   543  00162E  EE00  F061         	lfsr	0,__pdataCOMRAM
   544  001632  EE10 F015          	lfsr	1,21
   545  001636                     copy_data0:
   546  001636  0009               	tblrd		*+
   547  001638  CFF5 FFEE          	movff	tablat,postinc0
   548  00163C  50E5               	movf	postdec1,w,c
   549  00163E  50E1               	movf	fsr1l,w,c
   550  001640  E1FA               	bnz	copy_data0
   551                           
   552                           ; Clear objects allocated to BANK1 (144 bytes)
   553  001642  EE01  F000         	lfsr	0,__pbssBANK1
   554  001646  0E90               	movlw	144
   555  001648                     clear_0:
   556  001648  6AEE               	clrf	postinc0,c
   557  00164A  06E8               	decf	wreg,f,c
   558  00164C  E1FD               	bnz	clear_0
   559                           
   560                           ; Clear objects allocated to BANK0 (42 bytes)
   561  00164E  EE00  F080         	lfsr	0,__pbssBANK0
   562  001652  0E2A               	movlw	42
   563  001654                     clear_1:
   564  001654  6AEE               	clrf	postinc0,c
   565  001656  06E8               	decf	wreg,f,c
   566  001658  E1FD               	bnz	clear_1
   567                           
   568                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   569  00165A  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   570  00165C  6A77               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   571  00165E  6A76               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   572                           
   573                           ; Clear objects allocated to COMRAM (74 bytes)
   574  001660  EE00  F001         	lfsr	0,__pbssCOMRAM
   575  001664  0E4A               	movlw	74
   576  001666                     clear_2:
   577  001666  6AEE               	clrf	postinc0,c
   578  001668  06E8               	decf	wreg,f,c
   579  00166A  E1FD               	bnz	clear_2
   580  00166C                     end_of_initialization:
   581                           	callstack 0
   582  00166C                     __end_of__initialization:
   583                           	callstack 0
   584  00166C  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   585  00166E  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   586  001670  0E00               	movlw	low (__Lmediumconst shr (0+16))
   587  001672  6EF8               	movwf	tblptru,c
   588  001674  0100               	movlb	0
   589  001676  EFDF  F00A         	goto	_main	;jump to C main() function
   590                           
   591                           	psect	bitbssCOMRAM
   592  0003B0                     __pbitbssCOMRAM:
   593                           	callstack 0
   594  0003B0                     _Krebut:
   595                           	callstack 0
   596  0003B0                     	ds	1
   597  0003B1                     _jugantSIO:
   598                           	callstack 0
   599  0003B1                     	ds	1
   600  0003B2                     _jugantJoc:
   601                           	callstack 0
   602  0003B2                     	ds	1
   603  0003B3                     _tempsAcabat:
   604                           	callstack 0
   605  0003B3                     	ds	1
   606  0003B4                     _nouSegon:
   607                           	callstack 0
   608  0003B4                     	ds	1
   609  0003B5                     _jugant:
   610                           	callstack 0
   611  0003B5                     	ds	1
   612  0003B6                     _cap2:
   613                           	callstack 0
   614  0003B6                     	ds	1
   615  0003B7                     _cap1:
   616                           	callstack 0
   617  0003B7                     	ds	1
   618  0003B8                     _newString:
   619                           	callstack 0
   620  0003B8                     	ds	1
   621  0003B9                     _ferMenu:
   622                           	callstack 0
   623  0003B9                     	ds	1
   624  0003BA                     _reproduir:
   625                           	callstack 0
   626  0003BA                     	ds	1
   627  0003BB                     _do_updateScore:
   628                           	callstack 0
   629  0003BB                     	ds	1
   630  0003BC                     _do_showUsers:
   631                           	callstack 0
   632  0003BC                     	ds	1
   633  0003BD                     _do_register:
   634                           	callstack 0
   635  0003BD                     	ds	1
   636  0003BE                     _do_check_exists:
   637                           	callstack 0
   638  0003BE                     	ds	1
   639  0003BF                     _loginNOTRegister:
   640                           	callstack 0
   641  0003BF                     	ds	1
   642  0003C0                     _nou_s:
   643                           	callstack 0
   644  0003C0                     	ds	1
   645                           
   646                           	psect	bssCOMRAM
   647  000001                     __pbssCOMRAM:
   648                           	callstack 0
   649  000001                     _puntuacions:
   650                           	callstack 0
   651  000001                     	ds	10
   652  00000B                     _arrayShowUsers:
   653                           	callstack 0
   654  00000B                     	ds	8
   655  000013                     _userPtr:
   656                           	callstack 0
   657  000013                     	ds	2
   658  000015                     _h_Tics:
   659                           	callstack 0
   660  000015                     	ds	2
   661  000017                     _s_ptr:
   662                           	callstack 0
   663  000017                     	ds	2
   664  000019                     motorSIO@state:
   665                           	callstack 0
   666  000019                     	ds	1
   667  00001A                     _score:
   668                           	callstack 0
   669  00001A                     	ds	1
   670  00001B                     _timerSIO:
   671                           	callstack 0
   672  00001B                     	ds	1
   673  00001C                     motorJoc@state:
   674                           	callstack 0
   675  00001C                     	ds	1
   676  00001D                     _direccioJoc:
   677                           	callstack 0
   678  00001D                     	ds	1
   679  00001E                     motorHora@state:
   680                           	callstack 0
   681  00001E                     	ds	1
   682  00001F                     _segons:
   683                           	callstack 0
   684  00001F                     	ds	1
   685  000020                     _timerHora:
   686                           	callstack 0
   687  000020                     	ds	1
   688  000021                     JoystickMotor@state:
   689                           	callstack 0
   690  000021                     	ds	1
   691  000022                     _ultimaTeclaAD:
   692                           	callstack 0
   693  000022                     	ds	1
   694  000023                     GLCDMotor@length2:
   695                           	callstack 0
   696  000023                     	ds	1
   697  000024                     GLCDMotor@length1:
   698                           	callstack 0
   699  000024                     	ds	1
   700  000025                     GLCDMotor@k2:
   701                           	callstack 0
   702  000025                     	ds	1
   703  000026                     GLCDMotor@k1:
   704                           	callstack 0
   705  000026                     	ds	1
   706  000027                     GLCDMotor@min2:
   707                           	callstack 0
   708  000027                     	ds	1
   709  000028                     GLCDMotor@min1:
   710                           	callstack 0
   711  000028                     	ds	1
   712  000029                     GLCDMotor@j:
   713                           	callstack 0
   714  000029                     	ds	1
   715  00002A                     GLCDMotor@state:
   716                           	callstack 0
   717  00002A                     	ds	1
   718  00002B                     _menuDaltGLCD:
   719                           	callstack 0
   720  00002B                     	ds	1
   721  00002C                     _timerGLCD:
   722                           	callstack 0
   723  00002C                     	ds	1
   724  00002D                     motorAltaveu@state:
   725                           	callstack 0
   726  00002D                     	ds	1
   727  00002E                     _copsNota:
   728                           	callstack 0
   729  00002E                     	ds	1
   730  00002F                     _timerAltaveu:
   731                           	callstack 0
   732  00002F                     	ds	1
   733  000030                     _nota:
   734                           	callstack 0
   735  000030                     	ds	1
   736  000031                     UmotorUsers@state:
   737                           	callstack 0
   738  000031                     	ds	1
   739  000032                     _scoreUsr:
   740                           	callstack 0
   741  000032                     	ds	1
   742  000033                     _j:
   743                           	callstack 0
   744  000033                     	ds	1
   745  000034                     _i:
   746                           	callstack 0
   747  000034                     	ds	1
   748  000035                     _indexNextUserStruct:
   749                           	callstack 0
   750  000035                     	ds	1
   751  000036                     _indexNextUser:
   752                           	callstack 0
   753  000036                     	ds	1
   754  000037                     _numUsuaris:
   755                           	callstack 0
   756  000037                     	ds	1
   757  000038                     menu@state:
   758                           	callstack 0
   759  000038                     	ds	1
   760  000039                     _pos:
   761                           	callstack 0
   762  000039                     	ds	1
   763  00003A                     _indexUsuari:
   764                           	callstack 0
   765  00003A                     	ds	1
   766  00003B                     _menuDalt:
   767                           	callstack 0
   768  00003B                     	ds	1
   769  00003C                     _timerMenu:
   770                           	callstack 0
   771  00003C                     	ds	1
   772  00003D                     _tmp:
   773                           	callstack 0
   774  00003D                     	ds	1
   775  00003E                     _counter:
   776                           	callstack 0
   777  00003E                     	ds	1
   778  00003F                     TeTeclat@files:
   779                           	callstack 0
   780  00003F                     	ds	1
   781  000040                     TeTeclat@cols:
   782                           	callstack 0
   783  000040                     	ds	1
   784  000041                     TeTeclat@state:
   785                           	callstack 0
   786  000041                     	ds	1
   787  000042                     _tiTeclat:
   788                           	callstack 0
   789  000042                     	ds	1
   790  000043                     _Timer:
   791                           	callstack 0
   792  000043                     	ds	1
   793  000044                     _ColumnAct:
   794                           	callstack 0
   795  000044                     	ds	1
   796  000045                     _RowAct:
   797                           	callstack 0
   798  000045                     	ds	1
   799  000046                     _Rows:
   800                           	callstack 0
   801  000046                     	ds	1
   802  000047                     _horaTmp:
   803                           	callstack 0
   804  000047                     	ds	4
   805                           
   806                           	psect	dataCOMRAM
   807  000061                     __pdataCOMRAM:
   808                           	callstack 0
   809  000061                     _convertir:
   810                           	callstack 0
   811  000061                     	ds	1
   812  000062                     _novaTeclaSIO:
   813                           	callstack 0
   814  000062                     	ds	1
   815  000063                     _direccioSIO:
   816                           	callstack 0
   817  000063                     	ds	1
   818  000064                     _usuariActualSIO:
   819                           	callstack 0
   820  000064                     	ds	1
   821  000065                     _novaTeclaJOC:
   822                           	callstack 0
   823  000065                     	ds	1
   824  000066                     _usuariJoc:
   825                           	callstack 0
   826  000066                     	ds	1
   827  000067                     GLCDMotor@max2:
   828                           	callstack 0
   829  000067                     	ds	1
   830  000068                     GLCDMotor@max1:
   831                           	callstack 0
   832  000068                     	ds	1
   833  000069                     _usuariLoguejat:
   834                           	callstack 0
   835  000069                     	ds	1
   836  00006A                     _novaDireccio:
   837                           	callstack 0
   838  00006A                     	ds	1
   839  00006B                     _novaLletra:
   840                           	callstack 0
   841  00006B                     	ds	1
   842  00006C                     _NovaTecla:
   843                           	callstack 0
   844  00006C                     	ds	1
   845  00006D                     _hora:
   846                           	callstack 0
   847  00006D                     	ds	6
   848  000073                     _stringScore:
   849                           	callstack 0
   850  000073                     	ds	3
   851                           
   852                           	psect	bssBANK0
   853  000080                     __pbssBANK0:
   854                           	callstack 0
   855  000080                     _s_Timers:
   856                           	callstack 0
   857  000080                     	ds	24
   858  000098                     _tmpPassword:
   859                           	callstack 0
   860  000098                     	ds	9
   861  0000A1                     _tmpUsername:
   862                           	callstack 0
   863  0000A1                     	ds	9
   864                           
   865                           	psect	bssBANK1
   866  000100                     __pbssBANK1:
   867                           	callstack 0
   868  000100                     _usuaris:
   869                           	callstack 0
   870  000100                     	ds	144
   871                           
   872                           	psect	cstackBANK0
   873  0000AA                     __pcstackBANK0:
   874                           	callstack 0
   875  0000AA                     ??_menu:
   876                           
   877                           ; 1 bytes @ 0x0
   878  0000AA                     	ds	5
   879                           
   880                           	psect	cstackCOMRAM
   881  00004B                     __pcstackCOMRAM:
   882                           	callstack 0
   883  00004B                     
   884                           ; 1 bytes @ 0x0
   885  00004B                     	ds	1
   886  00004C                     ??_high_rsi:
   887                           
   888                           ; 1 bytes @ 0x1
   889  00004C                     	ds	4
   890  000050                     ??_EscriuPrimeraOrdre:
   891  000050                     ??_CantaPartAlta:
   892  000050                     ??_CantaPartBaixa:
   893  000050                     ?_TiGetTics:
   894                           	callstack 0
   895  000050                     ?_UgetUserName:
   896                           	callstack 0
   897  000050                     ?_getArrayShowUsers:
   898                           	callstack 0
   899  000050                     SsetNovaTecla@tecla:
   900                           	callstack 0
   901  000050                     TiResetTics@Handle:
   902                           	callstack 0
   903  000050                     MsetNovaTecla@tecla:
   904                           	callstack 0
   905  000050                     MNouJoystick@posicio:
   906                           	callstack 0
   907  000050                     UenviaChar@pos:
   908                           	callstack 0
   909  000050                     UenviaPas@pos:
   910                           	callstack 0
   911  000050                     escriureCharEEPROM@pos:
   912                           	callstack 0
   913  000050                     llegirCharEEPROM@pos:
   914                           	callstack 0
   915  000050                     compareStrings@a:
   916                           	callstack 0
   917  000050                     UgetScore@quin:
   918                           	callstack 0
   919  000050                     UgetTop5@quin:
   920                           	callstack 0
   921  000050                     UnewScore@scoretmp:
   922                           	callstack 0
   923  000050                     GLCDMostraMenu@num:
   924                           	callstack 0
   925  000050                     HActualitzaHora@nova:
   926                           	callstack 0
   927  000050                     JJuguem@usuari:
   928                           	callstack 0
   929  000050                     JnovaTecla@tecla:
   930                           	callstack 0
   931  000050                     JnovaDireccio@dir:
   932                           	callstack 0
   933  000050                     conversorJoystick@direc:
   934                           	callstack 0
   935  000050                     SIONovaDireccio@num:
   936                           	callstack 0
   937  000050                     SIOStartGame@usuari:
   938                           	callstack 0
   939  000050                     SIONovaTecla@tecla:
   940                           	callstack 0
   941  000050                     CToAConverteix@numero:
   942                           	callstack 0
   943  000050                     ___lbdiv@divisor:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x5
   947  000050                     	ds	1
   948  000051                     ??_JoystickMotor:
   949  000051                     CantaPartAlta@c:
   950                           	callstack 0
   951  000051                     CantaPartBaixa@c:
   952                           	callstack 0
   953  000051                     EscriuPrimeraOrdre@ordre:
   954                           	callstack 0
   955  000051                     UenviaChar@c:
   956                           	callstack 0
   957  000051                     UenviaPas@c:
   958                           	callstack 0
   959  000051                     escriureCharEEPROM@c:
   960                           	callstack 0
   961  000051                     ___lbdiv@dividend:
   962                           	callstack 0
   963  000051                     compareStrings@b:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x6
   967  000051                     	ds	1
   968  000052                     ??_TiGetTics:
   969  000052                     CantaIR@IR:
   970                           	callstack 0
   971  000052                     CantaData@Data:
   972                           	callstack 0
   973  000052                     UgetUserName@quin:
   974                           	callstack 0
   975  000052                     getArrayShowUsers@quin:
   976                           	callstack 0
   977  000052                     ___lbdiv@counter:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x7
   981  000052                     	ds	1
   982  000053                     ??_compareStrings:
   983  000053                     ___lbdiv@quotient:
   984                           	callstack 0
   985  000053                     LcNewString@new_s:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x8
   989  000053                     	ds	1
   990  000054                     ??_Uinit:
   991  000054                     TiGetTics@Handle:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x9
   995  000054                     	ds	1
   996  000055                     ??_UmotorUsers:
   997  000055                     TiGetTics@actual:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0xA
  1001  000055                     	ds	1
  1002  000056                     Uinit@k:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0xB
  1006  000056                     	ds	1
  1007  000057                     ??_motorHora:
  1008  000057                     ??_motorAltaveu:
  1009  000057                     ??_TeTeclat:
  1010  000057                     WaitForBusy@Busy:
  1011                           	callstack 0
  1012  000057                     Uinit@k_1190:
  1013                           	callstack 0
  1014  000057                     Espera@ms:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0xC
  1018  000057                     	ds	1
  1019  000058                     LcGotoXY@Row:
  1020                           	callstack 0
  1021                           
  1022                           ; 1 bytes @ 0xD
  1023  000058                     	ds	1
  1024  000059                     ??_Espera:
  1025  000059                     LcGotoXY@Fisics:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0xE
  1029  000059                     	ds	1
  1030  00005A                     Espera@Timer:
  1031                           	callstack 0
  1032                           
  1033                           ; 1 bytes @ 0xF
  1034  00005A                     	ds	1
  1035  00005B                     LcInit@rows:
  1036                           	callstack 0
  1037  00005B                     _LcGotoXY$334:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x10
  1041  00005B                     	ds	1
  1042  00005C                     LcInit@i:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x11
  1046  00005C                     	ds	1
  1047  00005D                     LcGotoXY@Column:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x12
  1051  00005D                     	ds	1
  1052  00005E                     ??_motorJoc:
  1053  00005E                     LcPutChar@c:
  1054                           	callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x13
  1057  00005E                     	ds	1
  1058  00005F                     ??_GLCDMotor:
  1059  00005F                     ??_motorSIO:
  1060  00005F                     
  1061                           ; 1 bytes @ 0x14
  1062  00005F                     	ds	2
  1063  000061                     
  1064                           ; 1 bytes @ 0x16
  1065 ;;
  1066 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1067 ;;
  1068 ;; *************** function _main *****************
  1069 ;; Defined at:
  1070 ;;		line 76 in file "main.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1
  1084 ;;      Params:         0       0       0
  1085 ;;      Locals:         0       0       0
  1086 ;;      Temps:          0       0       0
  1087 ;;      Totals:         0       0       0
  1088 ;;Total ram usage:        0 bytes
  1089 ;; Hardware stack levels required when called: 7
  1090 ;; This function calls:
  1091 ;;		_CtoA
  1092 ;;		_GLCDInit
  1093 ;;		_GLCDMotor
  1094 ;;		_JoystickInit
  1095 ;;		_JoystickMotor
  1096 ;;		_LcInit
  1097 ;;		_LcLCD
  1098 ;;		_Minit
  1099 ;;		_Sinit
  1100 ;;		_TeInit
  1101 ;;		_TeTeclat
  1102 ;;		_TiInitTimer
  1103 ;;		_Uinit
  1104 ;;		_UmotorUsers
  1105 ;;		_initAltaveu
  1106 ;;		_initHora
  1107 ;;		_initSIO
  1108 ;;		_init_eusart
  1109 ;;		_init_ports
  1110 ;;		_menu
  1111 ;;		_motorAltaveu
  1112 ;;		_motorHora
  1113 ;;		_motorJoc
  1114 ;;		_motorSIO
  1115 ;; This function is called by:
  1116 ;;		Startup code after reset
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text0
  1121  0015BE                     __ptext0:
  1122                           	callstack 0
  1123  0015BE                     _main:
  1124                           	callstack 24
  1125                           
  1126                           ;main.c: 77:     init_ports();
  1127                           
  1128                           ;incstack = 0
  1129  0015BE  ECEB  F00C         	call	_init_ports	;wreg free
  1130                           
  1131                           ;main.c: 78:     init_eusart();
  1132  0015C2  EC24  F00D         	call	_init_eusart	;wreg free
  1133                           
  1134                           ;main.c: 79:     TiInitTimer();
  1135  0015C6  EC6B  F00C         	call	_TiInitTimer	;wreg free
  1136                           
  1137                           ;main.c: 80:     TeInit();
  1138  0015CA  ECDD  F00D         	call	_TeInit	;wreg free
  1139                           
  1140                           ;main.c: 81:     Sinit();
  1141  0015CE  EC13  F00E         	call	_Sinit	;wreg free
  1142                           
  1143                           ;main.c: 84:     initAltaveu();
  1144  0015D2  ECD5  F00D         	call	_initAltaveu	;wreg free
  1145                           
  1146                           ;main.c: 85:     GLCDInit();
  1147  0015D6  ECE9  F00D         	call	_GLCDInit	;wreg free
  1148                           
  1149                           ;main.c: 86:     JoystickInit();
  1150  0015DA  EC4E  F00D         	call	_JoystickInit	;wreg free
  1151                           
  1152                           ;main.c: 87:     initHora();
  1153  0015DE  ECD1  F00D         	call	_initHora	;wreg free
  1154                           
  1155                           ;main.c: 88:     initSIO();
  1156  0015E2  ECCD  F00D         	call	_initSIO	;wreg free
  1157                           
  1158                           ;main.c: 90:     LcInit(2);
  1159  0015E6  0E02               	movlw	2
  1160  0015E8  EC00  F009         	call	_LcInit
  1161                           
  1162                           ;main.c: 91:     Uinit();
  1163  0015EC  EC06  F008         	call	_Uinit	;wreg free
  1164                           
  1165                           ;main.c: 92:     Minit();
  1166  0015F0  ECE1  F00D         	call	_Minit	;wreg free
  1167  0015F4                     l6427:
  1168                           
  1169                           ;main.c: 94:         GLCDMotor();
  1170  0015F4  ECE1  F003         	call	_GLCDMotor	;wreg free
  1171                           
  1172                           ;main.c: 95:         motorJoc();
  1173  0015F8  EC5F  F009         	call	_motorJoc	;wreg free
  1174                           
  1175                           ;main.c: 96:         motorSIO();
  1176  0015FC  EC6B  F006         	call	_motorSIO	;wreg free
  1177                           
  1178                           ;main.c: 97:         motorHora();
  1179  001600  ECF9  F009         	call	_motorHora	;wreg free
  1180                           
  1181                           ;main.c: 98:         JoystickMotor();
  1182  001604  EC95  F008         	call	_JoystickMotor	;wreg free
  1183                           
  1184                           ;main.c: 99:         menu();
  1185  001608  EC1B  F000         	call	_menu	;wreg free
  1186                           
  1187                           ;main.c: 100:         CtoA();
  1188  00160C  ECB7  F00C         	call	_CtoA	;wreg free
  1189                           
  1190                           ;main.c: 101:         motorAltaveu();
  1191  001610  ECB0  F009         	call	_motorAltaveu	;wreg free
  1192                           
  1193                           ;main.c: 102:         UmotorUsers();
  1194  001614  EC2A  F005         	call	_UmotorUsers	;wreg free
  1195                           
  1196                           ;main.c: 104:         TeTeclat();
  1197  001618  EC5F  F007         	call	_TeTeclat	;wreg free
  1198                           
  1199                           ;main.c: 106:         LcLCD();
  1200  00161C  EC3D  F00B         	call	_LcLCD	;wreg free
  1201  001620  D7E9               	goto	l6427
  1202  001622                     __end_of_main:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function _motorSIO *****************
  1206 ;; Defined at:
  1207 ;;		line 43 in file "SIO.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1
  1221 ;;      Params:         0       0       0
  1222 ;;      Locals:         0       0       0
  1223 ;;      Temps:          2       0       0
  1224 ;;      Totals:         2       0       0
  1225 ;;Total ram usage:        2 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 6
  1228 ;; This function calls:
  1229 ;;		_CToAConverteix
  1230 ;;		_CToAHaAcabat
  1231 ;;		_CToAobtenir
  1232 ;;		_HGetTime
  1233 ;;		_LcClear
  1234 ;;		_LcGotoXY
  1235 ;;		_LcLliure
  1236 ;;		_LcNewString
  1237 ;;		_LcPutChar
  1238 ;;		_TiGetTics
  1239 ;;		_TiResetTics
  1240 ;;		_UgetUserName
  1241 ;;		_UnewScore
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text1
  1248  000CD6                     __ptext1:
  1249                           	callstack 0
  1250  000CD6                     _motorSIO:
  1251                           	callstack 24
  1252                           
  1253                           ;SIO.c: 44:     static char state = 0;;SIO.c: 46:  switch(state) {
  1254                           
  1255                           ;incstack = 0
  1256  000CD6  D0C8               	goto	l4863
  1257  000CD8                     l4745:
  1258                           
  1259                           ;SIO.c: 48:    if (usuariActualSIO > -1) {
  1260  000CD8  BE64               	btfsc	_usuariActualSIO^0,7,c
  1261  000CDA  0012               	return	
  1262                           
  1263                           ;SIO.c: 49:     userPtr = UgetUserName(usuariActualSIO);
  1264  000CDC  5064               	movf	_usuariActualSIO^0,w,c
  1265  000CDE  EC3A  F00D         	call	_UgetUserName
  1266  000CE2  C050  F013         	movff	?_UgetUserName,_userPtr
  1267  000CE6  C051  F014         	movff	?_UgetUserName+1,_userPtr+1
  1268                           
  1269                           ;SIO.c: 50:     jugantSIO = 1;
  1270  000CEA  8276               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1271                           
  1272                           ;SIO.c: 51:     Krebut = 0;
  1273  000CEC  9076               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1274                           
  1275                           ;SIO.c: 52:     state = 1;
  1276  000CEE  0E01               	movlw	1
  1277  000CF0  6E19               	movwf	motorSIO@state^0,c
  1278  000CF2  0C01               	retlw	1
  1279  000CF4                     l4755:
  1280                           
  1281                           ;SIO.c: 56:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1282  000CF4  D8D9               	call	PL22	;call to abstracted procedure
  1283  000CF6  E108               	bnz	l4763
  1284  000CF8  A2AC               	btfss	172,1,c	;volatile
  1285  000CFA  D006               	goto	l4763
  1286                           
  1287                           ;SIO.c: 57:     TXREG = '\0';
  1288  000CFC  6AAD               	clrf	173,c	;volatile
  1289                           
  1290                           ;SIO.c: 58:     novaTeclaSIO = 0;
  1291  000CFE  6A62               	clrf	_novaTeclaSIO^0,c
  1292                           
  1293                           ;SIO.c: 59:     LATBbits.LATB3 = 1;
  1294  000D00  868A               	bsf	138,3,c	;volatile
  1295                           
  1296                           ;SIO.c: 60:     state = 2;
  1297  000D02  0E02               	movlw	2
  1298  000D04  6E19               	movwf	motorSIO@state^0,c
  1299                           
  1300                           ;SIO.c: 61:    }
  1301  000D06  0C02               	retlw	2
  1302  000D08                     l4763:
  1303  000D08  D8CF               	call	PL22	;call to abstracted procedure
  1304  000D0A  A4D8               	btfss	status,2,c
  1305  000D0C  A2AC               	btfss	172,1,c	;volatile
  1306  000D0E  0012               	return	
  1307                           
  1308                           ;SIO.c: 63:     TXREG = *userPtr;
  1309  000D10  D8CB               	call	PL22	;call to abstracted procedure
  1310  000D12  6EAD               	movwf	173,c	;volatile
  1311                           
  1312                           ;SIO.c: 64:     userPtr++;
  1313  000D14  4A13               	infsnz	_userPtr^0,f,c
  1314  000D16  2A14               	incf	(_userPtr+1)^0,f,c
  1315  000D18  0012               	return	
  1316  000D1A                     l4771:
  1317                           
  1318                           ;SIO.c: 68:    if (RCREG == 'K') {
  1319  000D1A  0E4B               	movlw	75
  1320  000D1C  18AE               	xorwf	174,w,c
  1321  000D1E  A4D8               	btfss	status,2,c
  1322  000D20  0012               	return	
  1323                           
  1324                           ;SIO.c: 69:     Krebut = 1;
  1325  000D22  8076               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1326  000D24                     l4775:
  1327                           
  1328                           ;SIO.c: 70:     state = 3;
  1329  000D24  0E03               	movlw	3
  1330  000D26  6E19               	movwf	motorSIO@state^0,c
  1331  000D28  0C03               	retlw	3
  1332  000D2A                     l4777:
  1333                           
  1334                           ;SIO.c: 74:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1335  000D2A  2863               	incf	_direccioSIO^0,w,c
  1336  000D2C  E006               	bz	l4785
  1337  000D2E  A2AC               	btfss	172,1,c	;volatile
  1338  000D30  D004               	goto	l4785
  1339                           
  1340                           ;SIO.c: 75:     TXREG = direccioSIO;
  1341  000D32  C063  FFAD         	movff	_direccioSIO,4013	;volatile
  1342                           
  1343                           ;SIO.c: 76:     direccioSIO = -1;
  1344  000D36  6863               	setf	_direccioSIO^0,c
  1345  000D38  D7F5               	goto	l4775
  1346  000D3A                     l4785:
  1347  000D3A  0E30               	movlw	48
  1348  000D3C  6462               	cpfsgt	_novaTeclaSIO^0,c
  1349  000D3E  D009               	goto	l1257
  1350  000D40  0E3A               	movlw	58
  1351  000D42  6062               	cpfslt	_novaTeclaSIO^0,c
  1352  000D44  D006               	goto	l1257
  1353  000D46  A2AC               	btfss	172,1,c	;volatile
  1354  000D48  D004               	goto	l1257
  1355                           
  1356                           ;SIO.c: 80:     TXREG = novaTeclaSIO;
  1357  000D4A  C062  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1358                           
  1359                           ;SIO.c: 81:     novaTeclaSIO = 0;
  1360  000D4E  6A62               	clrf	_novaTeclaSIO^0,c
  1361  000D50  D7E9               	goto	l4775
  1362  000D52                     l1257:
  1363  000D52  B276               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1364  000D54  D002               	goto	u4300
  1365  000D56  B2AC               	btfsc	172,1,c	;volatile
  1366  000D58  D002               	goto	u4310
  1367  000D5A                     u4300:
  1368  000D5A  AA9E               	btfss	158,5,c	;volatile
  1369  000D5C  0012               	return	
  1370  000D5E                     u4310:
  1371                           
  1372                           ;SIO.c: 85:     LcClear();
  1373  000D5E  ECC9  F00C         	call	_LcClear	;wreg free
  1374                           
  1375                           ;SIO.c: 86:     LcNewString("ERRORS:");
  1376  000D62  0EA9               	movlw	low STR_6
  1377  000D64  6E53               	movwf	LcNewString@new_s^0,c
  1378  000D66  0E1D               	movlw	high STR_6
  1379  000D68  6E54               	movwf	(LcNewString@new_s+1)^0,c
  1380  000D6A  ECA0  F00D         	call	_LcNewString	;wreg free
  1381                           
  1382                           ;SIO.c: 87:     TXREG = 'F';
  1383  000D6E  0E46               	movlw	70
  1384  000D70  6EAD               	movwf	173,c	;volatile
  1385                           
  1386                           ;SIO.c: 88:     novaTeclaSIO = 0;
  1387  000D72  6A62               	clrf	_novaTeclaSIO^0,c
  1388                           
  1389                           ;SIO.c: 89:     state = 4;
  1390  000D74  0E04               	movlw	4
  1391  000D76  6E19               	movwf	motorSIO@state^0,c
  1392  000D78  0C04               	retlw	4
  1393  000D7A                     l1264:
  1394                           
  1395                           ;SIO.c: 93:    if (PIR1bits.RCIF) {
  1396  000D7A  AA9E               	btfss	158,5,c	;volatile
  1397  000D7C  0012               	return	
  1398                           
  1399                           ;SIO.c: 94:                 score = RCREG;
  1400  000D7E  CFAE F01A          	movff	4014,_score	;volatile
  1401                           
  1402                           ;SIO.c: 95:                 UnewScore(score);
  1403  000D82  501A               	movf	_score^0,w,c
  1404  000D84  ECAC  F00D         	call	_UnewScore
  1405                           
  1406                           ;SIO.c: 96:     CToAConverteix(score);
  1407  000D88  501A               	movf	_score^0,w,c
  1408  000D8A  EC9A  F00D         	call	_CToAConverteix
  1409                           
  1410                           ;SIO.c: 97:     TiResetTics(timerSIO);
  1411  000D8E  501B               	movf	_timerSIO^0,w,c
  1412  000D90  EC16  F00D         	call	_TiResetTics
  1413  000D94                     l4813:
  1414                           
  1415                           ;SIO.c: 98:     state = 5;
  1416  000D94  0E05               	movlw	5
  1417  000D96  6E19               	movwf	motorSIO@state^0,c
  1418  000D98  0C05               	retlw	5
  1419  000D9A                     l4815:
  1420                           
  1421                           ;SIO.c: 102:    if (TiGetTics(timerSIO) > 2490) {
  1422  000D9A  501B               	movf	_timerSIO^0,w,c
  1423  000D9C  EC92  F00C         	call	_TiGetTics
  1424  000DA0  BE51               	btfsc	(?_TiGetTics+1)^0,7,c
  1425  000DA2  D010               	goto	l4823
  1426  000DA4  0EBB               	movlw	187
  1427  000DA6  5C50               	subwf	?_TiGetTics^0,w,c
  1428  000DA8  0E09               	movlw	9
  1429  000DAA  5851               	subwfb	(?_TiGetTics+1)^0,w,c
  1430  000DAC  E30B               	bnc	l4823
  1431                           
  1432                           ;SIO.c: 103:     LcClear();
  1433  000DAE  ECC9  F00C         	call	_LcClear	;wreg free
  1434                           
  1435                           ;SIO.c: 104:     LcNewString("TIME LEFT: ");
  1436  000DB2  0E8C               	movlw	low STR_7
  1437  000DB4  6E53               	movwf	LcNewString@new_s^0,c
  1438  000DB6  0E1D               	movlw	high STR_7
  1439  000DB8  6E54               	movwf	(LcNewString@new_s+1)^0,c
  1440  000DBA  ECA0  F00D         	call	_LcNewString	;wreg free
  1441                           
  1442                           ;SIO.c: 105:     state = 7;
  1443  000DBE  0E07               	movlw	7
  1444  000DC0  6E19               	movwf	motorSIO@state^0,c
  1445                           
  1446                           ;SIO.c: 106:    }
  1447  000DC2  0C07               	retlw	7
  1448  000DC4                     l4823:
  1449  000DC4  501B               	movf	_timerSIO^0,w,c
  1450  000DC6  EC92  F00C         	call	_TiGetTics
  1451  000DCA  BE51               	btfsc	(?_TiGetTics+1)^0,7,c
  1452  000DCC  D006               	goto	u4340
  1453  000DCE  0EBA               	movlw	186
  1454  000DD0  5C50               	subwf	?_TiGetTics^0,w,c
  1455  000DD2  0E09               	movlw	9
  1456  000DD4  5851               	subwfb	(?_TiGetTics+1)^0,w,c
  1457  000DD6  B0D8               	btfsc	status,0,c
  1458  000DD8  0012               	return	
  1459  000DDA                     u4340:
  1460  000DDA  AA9E               	btfss	158,5,c	;volatile
  1461  000DDC  0012               	return	
  1462  000DDE  ECA6  F00D         	call	_LcLliure	;wreg free
  1463  000DE2  A0D8               	btfss	status,0,c
  1464  000DE4  0012               	return	
  1465                           
  1466                           ;SIO.c: 108:     LcGotoXY(0,1);
  1467  000DE6  ECC5  F003         	call	PL30	;call to abstracted procedure
  1468  000DEA  EC3B  F00C         	call	_LcGotoXY
  1469                           
  1470                           ;SIO.c: 109:     LcPutChar(RCREG);
  1471  000DEE  50AE               	movf	174,w,c	;volatile
  1472  000DF0  EC65  F00B         	call	_LcPutChar
  1473                           
  1474                           ;SIO.c: 110:     state = 6;
  1475  000DF4  0E06               	movlw	6
  1476  000DF6  6E19               	movwf	motorSIO@state^0,c
  1477  000DF8  0C06               	retlw	6
  1478  000DFA                     l4833:
  1479                           
  1480                           ;SIO.c: 114:    if (LcLliure()) {
  1481  000DFA  ECA6  F00D         	call	_LcLliure	;wreg free
  1482  000DFE  A0D8               	btfss	status,0,c
  1483  000E00  0012               	return	
  1484                           
  1485                           ;SIO.c: 115:     LcNewString(HGetTime());
  1486  000E02  ECF7  F00D         	call	_HGetTime	;wreg free
  1487  000E06  D856               	call	PL50	;call to abstracted procedure
  1488  000E08  ECA0  F00D         	call	_LcNewString	;wreg free
  1489                           
  1490                           ;SIO.c: 116:     state = 8;
  1491  000E0C  0E08               	movlw	8
  1492  000E0E  6E19               	movwf	motorSIO@state^0,c
  1493  000E10  0C08               	retlw	8
  1494  000E12                     l1272:
  1495                           
  1496                           ;SIO.c: 120:    if (PIR1bits.RCIF) {
  1497  000E12  AA9E               	btfss	158,5,c	;volatile
  1498  000E14  0012               	return	
  1499                           
  1500                           ;SIO.c: 121:     LcPutChar(RCREG);
  1501  000E16  50AE               	movf	174,w,c	;volatile
  1502  000E18  EC65  F00B         	call	_LcPutChar
  1503                           
  1504                           ;SIO.c: 122:                 TiResetTics(timerSIO);
  1505  000E1C  501B               	movf	_timerSIO^0,w,c
  1506  000E1E  EC16  F00D         	call	_TiResetTics
  1507  000E22  D7B8               	goto	l4813
  1508  000E24                     l4843:
  1509                           
  1510                           ;SIO.c: 127:    if (LcLliure()) {
  1511  000E24  ECA6  F00D         	call	_LcLliure	;wreg free
  1512  000E28  A0D8               	btfss	status,0,c
  1513  000E2A  0012               	return	
  1514                           
  1515                           ;SIO.c: 128:     LcGotoXY(0,1);
  1516  000E2C  ECC5  F003         	call	PL30	;call to abstracted procedure
  1517  000E30  EC3B  F00C         	call	_LcGotoXY
  1518                           
  1519                           ;SIO.c: 129:     LcNewString("SCORE: ");
  1520  000E34  0EA1               	movlw	low STR_8
  1521  000E36  6E53               	movwf	LcNewString@new_s^0,c
  1522  000E38  0E1D               	movlw	high STR_8
  1523  000E3A  6E54               	movwf	(LcNewString@new_s+1)^0,c
  1524  000E3C  ECA0  F00D         	call	_LcNewString	;wreg free
  1525                           
  1526                           ;SIO.c: 130:     state = 9;
  1527  000E40  0E09               	movlw	9
  1528  000E42  6E19               	movwf	motorSIO@state^0,c
  1529  000E44  0C09               	retlw	9
  1530  000E46                     l4851:
  1531                           
  1532                           ;SIO.c: 134:    if (LcLliure() && CToAHaAcabat() == 250) {
  1533  000E46  ECA6  F00D         	call	_LcLliure	;wreg free
  1534  000E4A  A0D8               	btfss	status,0,c
  1535  000E4C  0012               	return	
  1536  000E4E  EC11  F00E         	call	_CToAHaAcabat	;wreg free
  1537  000E52  0AFA               	xorlw	250
  1538  000E54  A4D8               	btfss	status,2,c
  1539  000E56  0012               	return	
  1540                           
  1541                           ;SIO.c: 135:     LcNewString(CToAobtenir());
  1542  000E58  EC0F  F00E         	call	_CToAobtenir	;wreg free
  1543  000E5C  D82B               	call	PL50	;call to abstracted procedure
  1544  000E5E  ECA0  F00D         	call	_LcNewString	;wreg free
  1545                           
  1546                           ;SIO.c: 136:     usuariActualSIO = -1;
  1547  000E62  6864               	setf	_usuariActualSIO^0,c
  1548                           
  1549                           ;SIO.c: 137:     state = 0;
  1550  000E64  6A19               	clrf	motorSIO@state^0,c
  1551  000E66  0012               	return	
  1552  000E68                     l4863:
  1553  000E68  5019               	movf	motorSIO@state^0,w,c
  1554  000E6A  6E5F               	movwf	??_motorSIO^0,c
  1555  000E6C  6A60               	clrf	(??_motorSIO+1)^0,c
  1556                           
  1557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1558                           ; Switch size 1, requested type "space"
  1559                           ; Number of cases is 1, Range of values is 0 to 0
  1560                           ; switch strategies available:
  1561                           ; Name         Instructions Cycles
  1562                           ; simple_byte            4     3 (average)
  1563                           ;	Chosen strategy is simple_byte
  1564  000E6E  5060               	movf	(??_motorSIO+1)^0,w,c
  1565  000E70  A4D8               	btfss	status,2,c
  1566  000E72  0012               	return	
  1567                           
  1568                           ; Switch size 1, requested type "space"
  1569                           ; Number of cases is 10, Range of values is 0 to 9
  1570                           ; switch strategies available:
  1571                           ; Name         Instructions Cycles
  1572                           ; simple_byte           31    16 (average)
  1573                           ;	Chosen strategy is simple_byte
  1574  000E74  505F               	movf	??_motorSIO^0,w,c
  1575  000E76  E101 D72F          	bz	l4745
  1576  000E7A  0A01               	xorlw	1	; case 1
  1577  000E7C  E101 D73A          	bz	l4755
  1578  000E80  0A03               	xorlw	3	; case 2
  1579  000E82  E101 D74A          	bz	l4771
  1580  000E86  0A01               	xorlw	1	; case 3
  1581  000E88  E101 D74F          	bz	l4777
  1582  000E8C  0A07               	xorlw	7	; case 4
  1583  000E8E  E101 D774          	bz	l1264
  1584  000E92  0A01               	xorlw	1	; case 5
  1585  000E94  E082               	bz	l4815
  1586  000E96  0A03               	xorlw	3	; case 6
  1587  000E98  E0BC               	bz	l1272
  1588  000E9A  0A01               	xorlw	1	; case 7
  1589  000E9C  E0AE               	bz	l4833
  1590  000E9E  0A0F               	xorlw	15	; case 8
  1591  000EA0  E0C1               	bz	l4843
  1592  000EA2  0A01               	xorlw	1	; case 9
  1593  000EA4  E0D0               	bz	l4851
  1594  000EA6  0012               	return		;funcret
  1595  000EA8                     __end_of_motorSIO:
  1596                           	callstack 0
  1597  000EA8                     PL22:
  1598                           	callstack 24
  1599  000EA8  C013  FFD9         	movff	_userPtr,fsr2l
  1600  000EAC  C014  FFDA         	movff	_userPtr+1,fsr2h
  1601  000EB0  50DF               	movf	indf2,w,c
  1602  000EB2  0012               	return	
  1603  000EB4                     __end_ofPL22:
  1604                           	callstack 0
  1605  000EB4                     PL50:
  1606                           	callstack 24
  1607  000EB4  6E5F               	movwf	??_motorSIO^0,c
  1608  000EB6  C05F  F053         	movff	??_motorSIO,LcNewString@new_s
  1609  000EBA  6A54               	clrf	(LcNewString@new_s+1)^0,c
  1610  000EBC  0012               	return	
  1611  000EBE                     __end_ofPL50:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function _UnewScore *****************
  1615 ;; Defined at:
  1616 ;;		line 300 in file "Usuaris.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  scoretmp        1    wreg     unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  scoretmp        1    5[COMRAM] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1
  1630 ;;      Params:         0       0       0
  1631 ;;      Locals:         1       0       0
  1632 ;;      Temps:          0       0       0
  1633 ;;      Totals:         1       0       0
  1634 ;;Total ram usage:        1 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 2
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_motorSIO
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text2
  1645  001B58                     __ptext2:
  1646                           	callstack 0
  1647  001B58                     _UnewScore:
  1648                           	callstack 27
  1649                           
  1650                           ;incstack = 0
  1651                           ;UnewScore@scoretmp stored from wreg
  1652  001B58  6E50               	movwf	UnewScore@scoretmp^0,c
  1653                           
  1654                           ;Usuaris.c: 301:     scoreUsr = scoretmp;
  1655  001B5A  C050  F032         	movff	UnewScore@scoretmp,_scoreUsr
  1656                           
  1657                           ;Usuaris.c: 302:     do_updateScore = 1;
  1658  001B5E  8677               	bsf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  1659  001B60  0012               	return		;funcret
  1660  001B62                     __end_of_UnewScore:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _motorJoc *****************
  1664 ;; Defined at:
  1665 ;;		line 44 in file "Joc.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1
  1679 ;;      Params:         0       0       0
  1680 ;;      Locals:         0       0       0
  1681 ;;      Temps:          2       0       0
  1682 ;;      Totals:         2       0       0
  1683 ;;Total ram usage:        2 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 5
  1686 ;; This function calls:
  1687 ;;		_HClearNouSegon
  1688 ;;		_HGetTime
  1689 ;;		_HJugant
  1690 ;;		_HNouSegon
  1691 ;;		_HnoJugant
  1692 ;;		_LcGotoXY
  1693 ;;		_LcLliure
  1694 ;;		_LcNewString
  1695 ;;		_SIONovaDireccio
  1696 ;;		_SIONovaTecla
  1697 ;;		_SIOStartGame
  1698 ;;		_SIOcheckKrebut
  1699 ;;		_SIOendGame
  1700 ;;		_conversorJoystick
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text3
  1707  0012BE                     __ptext3:
  1708                           	callstack 0
  1709  0012BE                     _motorJoc:
  1710                           	callstack 25
  1711                           
  1712                           ;Joc.c: 45:     static char state = 0;;Joc.c: 47:  switch(state) {
  1713                           
  1714                           ;incstack = 0
  1715  0012BE  D043               	goto	l4737
  1716  0012C0                     l4691:
  1717                           
  1718                           ;Joc.c: 49:    if (usuariJoc != -1) {
  1719  0012C0  2866               	incf	_usuariJoc^0,w,c
  1720  0012C2  B4D8               	btfsc	status,2,c
  1721  0012C4  0012               	return	
  1722                           
  1723                           ;Joc.c: 50:     SIOStartGame(usuariJoc);
  1724  0012C6  5066               	movf	_usuariJoc^0,w,c
  1725  0012C8  ECB1  F00D         	call	_SIOStartGame
  1726                           
  1727                           ;Joc.c: 51:     jugantJoc = 1;
  1728  0012CC  8476               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1729                           
  1730                           ;Joc.c: 52:     state = 2;
  1731  0012CE  0E02               	movlw	2
  1732  0012D0  6E1C               	movwf	motorJoc@state^0,c
  1733                           
  1734                           ;Joc.c: 54:   break;
  1735                           
  1736                           ;Joc.c: 53:    }
  1737  0012D2  0C02               	retlw	2
  1738  0012D4                     l1150:
  1739                           
  1740                           ;Joc.c: 56:    if (!jugantJoc) {
  1741  0012D4  B476               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1742  0012D6  D008               	goto	l4707
  1743                           
  1744                           ;Joc.c: 57:     usuariJoc = -1;
  1745  0012D8  6866               	setf	_usuariJoc^0,c
  1746                           
  1747                           ;Joc.c: 58:     HnoJugant();
  1748  0012DA  ECF5  F00D         	call	_HnoJugant	;wreg free
  1749                           
  1750                           ;Joc.c: 59:     SIOendGame();
  1751  0012DE  ECF3  F00D         	call	_SIOendGame	;wreg free
  1752                           
  1753                           ;Joc.c: 60:     LATBbits.LATB3 = 0;
  1754  0012E2  968A               	bcf	138,3,c	;volatile
  1755  0012E4                     l4705:
  1756                           
  1757                           ;Joc.c: 61:     state--;
  1758  0012E4  061C               	decf	motorJoc@state^0,f,c
  1759                           
  1760                           ;Joc.c: 62:    }
  1761  0012E6  0012               	return	
  1762  0012E8                     l4707:
  1763  0012E8  BE1D               	btfsc	_direccioJoc^0,7,c
  1764  0012EA  D007               	goto	l4713
  1765                           
  1766                           ;Joc.c: 64:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1767  0012EC  501D               	movf	_direccioJoc^0,w,c
  1768  0012EE  ECA5  F00C         	call	_conversorJoystick
  1769  0012F2  ECB9  F00D         	call	_SIONovaDireccio
  1770                           
  1771                           ;Joc.c: 65:     direccioJoc = -1;
  1772  0012F6  681D               	setf	_direccioJoc^0,c
  1773                           
  1774                           ;Joc.c: 66:    }
  1775  0012F8  0012               	return	
  1776  0012FA                     l4713:
  1777  0012FA  EC7C  F00D         	call	_HNouSegon	;wreg free
  1778  0012FE  E311               	bnc	l4723
  1779  001300  ECA6  F00D         	call	_LcLliure	;wreg free
  1780  001304  E30E               	bnc	l4723
  1781                           
  1782                           ;Joc.c: 68:     HClearNouSegon();
  1783  001306  ECF9  F00D         	call	_HClearNouSegon	;wreg free
  1784                           
  1785                           ;Joc.c: 69:     LcGotoXY(0,1);
  1786  00130A  ECC5  F003         	call	PL30	;call to abstracted procedure
  1787  00130E  EC3B  F00C         	call	_LcGotoXY
  1788                           
  1789                           ;Joc.c: 70:     LcNewString(HGetTime());
  1790  001312  ECF7  F00D         	call	_HGetTime	;wreg free
  1791  001316  6E5E               	movwf	??_motorJoc^0,c
  1792  001318  C05E  F053         	movff	??_motorJoc,LcNewString@new_s
  1793  00131C  6A54               	clrf	(LcNewString@new_s+1)^0,c
  1794  00131E  EFA0  F00D         	goto	_LcNewString	;wreg free
  1795  001322                     l4723:
  1796  001322  5065               	movf	_novaTeclaJOC^0,w,c
  1797  001324  0A80               	xorlw	128
  1798  001326  0F7F               	addlw	-129
  1799  001328  A0D8               	btfss	status,0,c
  1800  00132A  0012               	return	
  1801                           
  1802                           ;Joc.c: 73:     SIONovaTecla(novaTeclaJOC+48);
  1803  00132C  5065               	movf	_novaTeclaJOC^0,w,c
  1804  00132E  0F30               	addlw	48
  1805  001330  ECB5  F00D         	call	_SIONovaTecla
  1806                           
  1807                           ;Joc.c: 74:     novaTeclaJOC = -1;
  1808  001334  6865               	setf	_novaTeclaJOC^0,c
  1809  001336  0012               	return	
  1810  001338                     l4729:
  1811                           
  1812                           ;Joc.c: 78:    if (SIOcheckKrebut()) {
  1813  001338  EC76  F00D         	call	_SIOcheckKrebut	;wreg free
  1814  00133C  A0D8               	btfss	status,0,c
  1815  00133E  0012               	return	
  1816                           
  1817                           ;Joc.c: 79:     HJugant();
  1818  001340  ECED  F00D         	call	_HJugant	;wreg free
  1819  001344  D7CF               	goto	l4705
  1820  001346                     l4737:
  1821  001346  501C               	movf	motorJoc@state^0,w,c
  1822  001348  6E5E               	movwf	??_motorJoc^0,c
  1823  00134A  6A5F               	clrf	(??_motorJoc+1)^0,c
  1824                           
  1825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1826                           ; Switch size 1, requested type "space"
  1827                           ; Number of cases is 1, Range of values is 0 to 0
  1828                           ; switch strategies available:
  1829                           ; Name         Instructions Cycles
  1830                           ; simple_byte            4     3 (average)
  1831                           ;	Chosen strategy is simple_byte
  1832  00134C  505F               	movf	(??_motorJoc+1)^0,w,c
  1833  00134E  A4D8               	btfss	status,2,c
  1834  001350  0012               	return	
  1835                           
  1836                           ; Switch size 1, requested type "space"
  1837                           ; Number of cases is 3, Range of values is 0 to 2
  1838                           ; switch strategies available:
  1839                           ; Name         Instructions Cycles
  1840                           ; simple_byte           10     6 (average)
  1841                           ;	Chosen strategy is simple_byte
  1842  001352  505E               	movf	??_motorJoc^0,w,c
  1843  001354  E0B5               	bz	l4691
  1844  001356  0A01               	xorlw	1	; case 1
  1845  001358  E0BD               	bz	l1150
  1846  00135A  0A03               	xorlw	3	; case 2
  1847  00135C  E0ED               	bz	l4729
  1848  00135E  0012               	return		;funcret
  1849  001360                     __end_of_motorJoc:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function _conversorJoystick *****************
  1853 ;; Defined at:
  1854 ;;		line 27 in file "Joc.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  direc           1    wreg     unsigned char 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  direc           1    5[COMRAM] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      unsigned char 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1
  1868 ;;      Params:         0       0       0
  1869 ;;      Locals:         1       0       0
  1870 ;;      Temps:          0       0       0
  1871 ;;      Totals:         1       0       0
  1872 ;;Total ram usage:        1 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 2
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_motorJoc
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text4
  1883  00194A                     __ptext4:
  1884                           	callstack 0
  1885  00194A                     _conversorJoystick:
  1886                           	callstack 27
  1887                           
  1888                           ;incstack = 0
  1889                           ;conversorJoystick@direc stored from wreg
  1890  00194A  6E50               	movwf	conversorJoystick@direc^0,c
  1891                           
  1892                           ;Joc.c: 29:     if (direc==2) {
  1893  00194C  0E02               	movlw	2
  1894  00194E  1850               	xorwf	conversorJoystick@direc^0,w,c
  1895  001950  E101               	bnz	l2325
  1896                           
  1897                           ;Joc.c: 30:         return 'W';
  1898  001952  0C57               	retlw	87
  1899  001954                     l2325:
  1900                           
  1901                           ;Joc.c: 32:     if (direc==6) {
  1902  001954  0E06               	movlw	6
  1903  001956  1850               	xorwf	conversorJoystick@direc^0,w,c
  1904  001958  E101               	bnz	l2331
  1905                           
  1906                           ;Joc.c: 33:         return 'D';
  1907  00195A  0C44               	retlw	68
  1908  00195C                     l2331:
  1909                           
  1910                           ;Joc.c: 35:     if (direc==8) {
  1911  00195C  0E08               	movlw	8
  1912  00195E  1850               	xorwf	conversorJoystick@direc^0,w,c
  1913  001960  E101               	bnz	l2337
  1914                           
  1915                           ;Joc.c: 36:         return 'S';
  1916  001962  0C53               	retlw	83
  1917  001964                     l2337:
  1918                           
  1919                           ;Joc.c: 38:     if (direc==4) {
  1920  001964  0E04               	movlw	4
  1921  001966  1850               	xorwf	conversorJoystick@direc^0,w,c
  1922  001968  E101               	bnz	l2343
  1923                           
  1924                           ;Joc.c: 39:         return 'A';
  1925  00196A  0C41               	retlw	65
  1926  00196C                     l2343:
  1927                           
  1928                           ;Joc.c: 41:     return 0;
  1929  00196C  0C00               	retlw	0	;funcret
  1930  00196E                     __end_of_conversorJoystick:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _SIOendGame *****************
  1934 ;; Defined at:
  1935 ;;		line 23 in file "SIO.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		None
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1
  1949 ;;      Params:         0       0       0
  1950 ;;      Locals:         0       0       0
  1951 ;;      Temps:          0       0       0
  1952 ;;      Totals:         0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 2
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_motorJoc
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text5
  1964  001BE6                     __ptext5:
  1965                           	callstack 0
  1966  001BE6                     _SIOendGame:
  1967                           	callstack 27
  1968                           
  1969                           ;SIO.c: 24:     jugantSIO = 0;
  1970                           
  1971                           ;incstack = 0
  1972  001BE6  9276               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1973  001BE8  0012               	return		;funcret
  1974  001BEA                     __end_of_SIOendGame:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _SIOcheckKrebut *****************
  1978 ;; Defined at:
  1979 ;;		line 26 in file "SIO.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;		None               void
  1986 ;; Registers used:
  1987 ;;		status,0
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1
  1993 ;;      Params:         0       0       0
  1994 ;;      Locals:         0       0       0
  1995 ;;      Temps:          0       0       0
  1996 ;;      Totals:         0       0       0
  1997 ;;Total ram usage:        0 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 2
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		_motorJoc
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text6
  2008  001AEC                     __ptext6:
  2009                           	callstack 0
  2010  001AEC                     _SIOcheckKrebut:
  2011                           	callstack 27
  2012                           
  2013                           ;SIO.c: 27:     return Krebut;
  2014                           
  2015                           ;incstack = 0
  2016  001AEC  B076               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2017  001AEE  D002               	goto	l2359
  2018  001AF0  90D8               	bcf	status,0,c
  2019  001AF2  0012               	return	
  2020  001AF4                     l2359:
  2021  001AF4  80D8               	bsf	status,0,c
  2022  001AF6  0012               	return		;funcret
  2023  001AF8                     __end_of_SIOcheckKrebut:
  2024                           	callstack 0
  2025                           
  2026 ;; *************** function _SIOStartGame *****************
  2027 ;; Defined at:
  2028 ;;		line 33 in file "SIO.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  usuari          1    wreg     unsigned char 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  usuari          1    5[COMRAM] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1
  2042 ;;      Params:         0       0       0
  2043 ;;      Locals:         1       0       0
  2044 ;;      Temps:          0       0       0
  2045 ;;      Totals:         1       0       0
  2046 ;;Total ram usage:        1 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 2
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_motorJoc
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text7
  2057  001B62                     __ptext7:
  2058                           	callstack 0
  2059  001B62                     _SIOStartGame:
  2060                           	callstack 27
  2061                           
  2062                           ;incstack = 0
  2063                           ;SIOStartGame@usuari stored from wreg
  2064  001B62  6E50               	movwf	SIOStartGame@usuari^0,c
  2065                           
  2066                           ;SIO.c: 34:     usuariActualSIO = usuari;
  2067  001B64  C050  F064         	movff	SIOStartGame@usuari,_usuariActualSIO
  2068  001B68  0012               	return		;funcret
  2069  001B6A                     __end_of_SIOStartGame:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function _SIONovaTecla *****************
  2073 ;; Defined at:
  2074 ;;		line 40 in file "SIO.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  tecla           1    wreg     char 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  tecla           1    5[COMRAM] char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1
  2088 ;;      Params:         0       0       0
  2089 ;;      Locals:         1       0       0
  2090 ;;      Temps:          0       0       0
  2091 ;;      Totals:         1       0       0
  2092 ;;Total ram usage:        1 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 2
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_motorJoc
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text8
  2103  001B6A                     __ptext8:
  2104                           	callstack 0
  2105  001B6A                     _SIONovaTecla:
  2106                           	callstack 27
  2107                           
  2108                           ;incstack = 0
  2109                           ;SIONovaTecla@tecla stored from wreg
  2110  001B6A  6E50               	movwf	SIONovaTecla@tecla^0,c
  2111                           
  2112                           ;SIO.c: 41:     novaTeclaSIO = tecla;
  2113  001B6C  C050  F062         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2114  001B70  0012               	return		;funcret
  2115  001B72                     __end_of_SIONovaTecla:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _SIONovaDireccio *****************
  2119 ;; Defined at:
  2120 ;;		line 29 in file "SIO.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  num             1    wreg     unsigned char 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  num             1    5[COMRAM] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1
  2134 ;;      Params:         0       0       0
  2135 ;;      Locals:         1       0       0
  2136 ;;      Temps:          0       0       0
  2137 ;;      Totals:         1       0       0
  2138 ;;Total ram usage:        1 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 2
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_motorJoc
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text9
  2149  001B72                     __ptext9:
  2150                           	callstack 0
  2151  001B72                     _SIONovaDireccio:
  2152                           	callstack 27
  2153                           
  2154                           ;incstack = 0
  2155                           ;SIONovaDireccio@num stored from wreg
  2156  001B72  6E50               	movwf	SIONovaDireccio@num^0,c
  2157                           
  2158                           ;SIO.c: 30:     direccioSIO = num;
  2159  001B74  C050  F063         	movff	SIONovaDireccio@num,_direccioSIO
  2160  001B78  0012               	return		;funcret
  2161  001B7A                     __end_of_SIONovaDireccio:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _HnoJugant *****************
  2165 ;; Defined at:
  2166 ;;		line 35 in file "Hora.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		None
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1
  2180 ;;      Params:         0       0       0
  2181 ;;      Locals:         0       0       0
  2182 ;;      Temps:          0       0       0
  2183 ;;      Totals:         0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 2
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_motorJoc
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text10
  2195  001BEA                     __ptext10:
  2196                           	callstack 0
  2197  001BEA                     _HnoJugant:
  2198                           	callstack 27
  2199                           
  2200                           ;Hora.c: 36:     jugant = 0;
  2201                           
  2202                           ;incstack = 0
  2203  001BEA  9A76               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2204  001BEC  0012               	return		;funcret
  2205  001BEE                     __end_of_HnoJugant:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _HNouSegon *****************
  2209 ;; Defined at:
  2210 ;;		line 23 in file "Hora.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;		None               void
  2217 ;; Registers used:
  2218 ;;		status,0
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1
  2224 ;;      Params:         0       0       0
  2225 ;;      Locals:         0       0       0
  2226 ;;      Temps:          0       0       0
  2227 ;;      Totals:         0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 2
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_motorJoc
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text11
  2239  001AF8                     __ptext11:
  2240                           	callstack 0
  2241  001AF8                     _HNouSegon:
  2242                           	callstack 27
  2243                           
  2244                           ;Hora.c: 24:     return nouSegon;
  2245                           
  2246                           ;incstack = 0
  2247  001AF8  B876               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2248  001AFA  D002               	goto	l2305
  2249  001AFC  90D8               	bcf	status,0,c
  2250  001AFE  0012               	return	
  2251  001B00                     l2305:
  2252  001B00  80D8               	bsf	status,0,c
  2253  001B02  0012               	return		;funcret
  2254  001B04                     __end_of_HNouSegon:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _HJugant *****************
  2258 ;; Defined at:
  2259 ;;		line 38 in file "Hora.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		None
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1
  2273 ;;      Params:         0       0       0
  2274 ;;      Locals:         0       0       0
  2275 ;;      Temps:          0       0       0
  2276 ;;      Totals:         0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 2
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_motorJoc
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text12
  2288  001BDA                     __ptext12:
  2289                           	callstack 0
  2290  001BDA                     _HJugant:
  2291                           	callstack 27
  2292                           
  2293                           ;Hora.c: 39:     jugant = 1;
  2294                           
  2295                           ;incstack = 0
  2296  001BDA  8A76               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2297                           
  2298                           ;Hora.c: 40:     tempsAcabat = 0;
  2299  001BDC  9676               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2300  001BDE  0012               	return		;funcret
  2301  001BE0                     __end_of_HJugant:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _HGetTime *****************
  2305 ;; Defined at:
  2306 ;;		line 31 in file "Hora.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      PTR unsigned char 
  2313 ;; Registers used:
  2314 ;;		wreg
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1
  2320 ;;      Params:         2       0       0
  2321 ;;      Locals:         0       0       0
  2322 ;;      Temps:          0       0       0
  2323 ;;      Totals:         2       0       0
  2324 ;;Total ram usage:        2 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; Hardware stack levels required when called: 2
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_motorJoc
  2331 ;;		_motorSIO
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text13
  2336  001BEE                     __ptext13:
  2337                           	callstack 0
  2338  001BEE                     _HGetTime:
  2339                           	callstack 27
  2340                           
  2341                           ;Hora.c: 32:     return hora;
  2342                           
  2343                           ;incstack = 0
  2344  001BEE  0E6D               	movlw	_hora& (0+255)
  2345  001BF0  0012               	return		;funcret
  2346  001BF2                     __end_of_HGetTime:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _HClearNouSegon *****************
  2350 ;; Defined at:
  2351 ;;		line 27 in file "Hora.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		None
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1
  2365 ;;      Params:         0       0       0
  2366 ;;      Locals:         0       0       0
  2367 ;;      Temps:          0       0       0
  2368 ;;      Totals:         0       0       0
  2369 ;;Total ram usage:        0 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 2
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_motorJoc
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text14
  2380  001BF2                     __ptext14:
  2381                           	callstack 0
  2382  001BF2                     _HClearNouSegon:
  2383                           	callstack 27
  2384                           
  2385                           ;Hora.c: 28:     nouSegon = 0;
  2386                           
  2387                           ;incstack = 0
  2388  001BF2  9876               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2389  001BF4  0012               	return		;funcret
  2390  001BF6                     __end_of_HClearNouSegon:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _motorHora *****************
  2394 ;; Defined at:
  2395 ;;		line 46 in file "Hora.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1
  2409 ;;      Params:         0       0       0
  2410 ;;      Locals:         0       0       0
  2411 ;;      Temps:          2       0       0
  2412 ;;      Totals:         2       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 3
  2416 ;; This function calls:
  2417 ;;		_TiGetTics
  2418 ;;		_TiResetTics
  2419 ;;		_playAltaveu
  2420 ;; This function is called by:
  2421 ;;		_main
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text15
  2426  0013F2                     __ptext15:
  2427                           	callstack 0
  2428  0013F2                     _motorHora:
  2429                           	callstack 27
  2430                           
  2431                           ;Hora.c: 47:  static char state = 0;;Hora.c: 49:  switch(state) {
  2432                           
  2433                           ;incstack = 0
  2434  0013F2  D038               	goto	l4921
  2435  0013F4                     l4871:
  2436                           
  2437                           ;Hora.c: 51:    if (TiGetTics(timerHora) >= 1205) {
  2438  0013F4  5020               	movf	_timerHora^0,w,c
  2439  0013F6  EC92  F00C         	call	_TiGetTics
  2440  0013FA  BE51               	btfsc	(?_TiGetTics+1)^0,7,c
  2441  0013FC  0012               	return	
  2442  0013FE  EC25  F005         	call	PL64	;call to abstracted procedure
  2443  001402  A0D8               	btfss	status,0,c
  2444  001404  0012               	return	
  2445                           
  2446                           ;Hora.c: 52:     TiResetTics(timerHora);
  2447  001406  5020               	movf	_timerHora^0,w,c
  2448  001408  EC16  F00D         	call	_TiResetTics
  2449                           
  2450                           ;Hora.c: 53:     if(jugant){
  2451  00140C  AA76               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2452  00140E  D028               	goto	l4917
  2453                           
  2454                           ;Hora.c: 54:       nouSegon = 1;
  2455  001410  8876               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2456                           
  2457                           ;Hora.c: 56:      hora[4]--;
  2458  001412  0671               	decf	(_hora+4)^0,f,c
  2459                           
  2460                           ;Hora.c: 57:      if(hora[4] == ('0'-1)){
  2461  001414  0E2F               	movlw	47
  2462  001416  1871               	xorwf	(_hora+4)^0,w,c
  2463  001418  E103               	bnz	l4887
  2464                           
  2465                           ;Hora.c: 58:       hora[4] = '9';
  2466  00141A  0E39               	movlw	57
  2467  00141C  6E71               	movwf	(_hora+4)^0,c
  2468                           
  2469                           ;Hora.c: 59:       hora[3]--;
  2470  00141E  0670               	decf	(_hora+3)^0,f,c
  2471  001420                     l4887:
  2472                           
  2473                           ;Hora.c: 62:      if(hora[3] == ('0'-1)){
  2474  001420  0E2F               	movlw	47
  2475  001422  1870               	xorwf	(_hora+3)^0,w,c
  2476  001424  E103               	bnz	l4893
  2477                           
  2478                           ;Hora.c: 63:       hora[3] = '5';
  2479  001426  0E35               	movlw	53
  2480  001428  6E70               	movwf	(_hora+3)^0,c
  2481                           
  2482                           ;Hora.c: 64:       hora[1]--;
  2483  00142A  066E               	decf	(_hora+1)^0,f,c
  2484  00142C                     l4893:
  2485                           
  2486                           ;Hora.c: 67:      if(hora[1] == ('0'-1)){
  2487  00142C  0E2F               	movlw	47
  2488  00142E  186E               	xorwf	(_hora+1)^0,w,c
  2489  001430  E103               	bnz	l4899
  2490                           
  2491                           ;Hora.c: 68:       hora[1] = '9';
  2492  001432  0E39               	movlw	57
  2493  001434  6E6E               	movwf	(_hora+1)^0,c
  2494                           
  2495                           ;Hora.c: 69:       hora[0]--;
  2496  001436  066D               	decf	_hora^0,f,c
  2497  001438                     l4899:
  2498                           
  2499                           ;Hora.c: 72:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2500  001438  0E30               	movlw	48
  2501  00143A  186D               	xorwf	_hora^0,w,c
  2502  00143C  E10A               	bnz	l4909
  2503  00143E  0E30               	movlw	48
  2504  001440  186E               	xorwf	(_hora+1)^0,w,c
  2505  001442  E107               	bnz	l4909
  2506  001444  0E30               	movlw	48
  2507  001446  1870               	xorwf	(_hora+3)^0,w,c
  2508  001448  E104               	bnz	l4909
  2509  00144A  0E30               	movlw	48
  2510  00144C  1871               	xorwf	(_hora+4)^0,w,c
  2511  00144E  E101               	bnz	l4909
  2512                           
  2513                           ;Hora.c: 73:       tempsAcabat = 1;
  2514  001450  8676               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2515  001452                     l4909:
  2516                           
  2517                           ;Hora.c: 76:      segons++;
  2518  001452  2A1F               	incf	_segons^0,f,c
  2519                           
  2520                           ;Hora.c: 77:      if(segons > 59){
  2521  001454  0E3B               	movlw	59
  2522  001456  641F               	cpfsgt	_segons^0,c
  2523  001458  D003               	goto	l4917
  2524                           
  2525                           ;Hora.c: 78:       playAltaveu();
  2526  00145A  ECFB  F00D         	call	_playAltaveu	;wreg free
  2527                           
  2528                           ;Hora.c: 79:       segons = 0;
  2529  00145E  6A1F               	clrf	_segons^0,c
  2530  001460                     l4917:
  2531                           
  2532                           ;Hora.c: 82:     state = 0;
  2533  001460  6A1E               	clrf	motorHora@state^0,c
  2534  001462  0012               	return	
  2535  001464                     l4921:
  2536  001464  501E               	movf	motorHora@state^0,w,c
  2537  001466  6E57               	movwf	??_motorHora^0,c
  2538  001468  6A58               	clrf	(??_motorHora+1)^0,c
  2539                           
  2540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2541                           ; Switch size 1, requested type "space"
  2542                           ; Number of cases is 1, Range of values is 0 to 0
  2543                           ; switch strategies available:
  2544                           ; Name         Instructions Cycles
  2545                           ; simple_byte            4     3 (average)
  2546                           ;	Chosen strategy is simple_byte
  2547  00146A  5058               	movf	(??_motorHora+1)^0,w,c
  2548  00146C  A4D8               	btfss	status,2,c
  2549  00146E  0012               	return	
  2550                           
  2551                           ; Switch size 1, requested type "space"
  2552                           ; Number of cases is 1, Range of values is 0 to 0
  2553                           ; switch strategies available:
  2554                           ; Name         Instructions Cycles
  2555                           ; simple_byte            4     3 (average)
  2556                           ;	Chosen strategy is simple_byte
  2557  001470  5057               	movf	??_motorHora^0,w,c
  2558  001472  E0C0               	bz	l4871
  2559  001474  0012               	return		;funcret
  2560  001476                     __end_of_motorHora:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _playAltaveu *****************
  2564 ;; Defined at:
  2565 ;;		line 13 in file "Altaveu.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		None
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1
  2579 ;;      Params:         0       0       0
  2580 ;;      Locals:         0       0       0
  2581 ;;      Temps:          0       0       0
  2582 ;;      Totals:         0       0       0
  2583 ;;Total ram usage:        0 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 2
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_motorHora
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text16
  2594  001BF6                     __ptext16:
  2595                           	callstack 0
  2596  001BF6                     _playAltaveu:
  2597                           	callstack 27
  2598                           
  2599                           ;Altaveu.c: 14:     reproduir = 1;
  2600                           
  2601                           ;incstack = 0
  2602  001BF6  8477               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2603  001BF8  0012               	return		;funcret
  2604  001BFA                     __end_of_playAltaveu:
  2605                           	callstack 0
  2606                           
  2607 ;; *************** function _motorAltaveu *****************
  2608 ;; Defined at:
  2609 ;;		line 16 in file "Altaveu.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1
  2623 ;;      Params:         0       0       0
  2624 ;;      Locals:         0       0       0
  2625 ;;      Temps:          3       0       0
  2626 ;;      Totals:         3       0       0
  2627 ;;Total ram usage:        3 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 3
  2630 ;; This function calls:
  2631 ;;		_TiGetTics
  2632 ;;		_TiResetTics
  2633 ;; This function is called by:
  2634 ;;		_main
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text17
  2639  001360                     __ptext17:
  2640                           	callstack 0
  2641  001360                     _motorAltaveu:
  2642                           	callstack 27
  2643                           
  2644                           ;Altaveu.c: 17: static char state = 0;;Altaveu.c: 19:  switch(state) {
  2645                           
  2646                           ;incstack = 0
  2647  001360  D02F               	goto	l5521
  2648  001362                     l851:
  2649                           
  2650                           ;Altaveu.c: 21:    if (reproduir) {
  2651  001362  A477               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2652  001364  0012               	return	
  2653                           
  2654                           ;Altaveu.c: 22:     nota = 1;
  2655  001366  0E01               	movlw	1
  2656  001368  6E30               	movwf	_nota^0,c
  2657                           
  2658                           ;Altaveu.c: 23:     copsNota = 0;
  2659  00136A  6A2E               	clrf	_copsNota^0,c
  2660                           
  2661                           ;Altaveu.c: 24:     TiResetTics(timerAltaveu);
  2662  00136C  502F               	movf	_timerAltaveu^0,w,c
  2663  00136E  EC16  F00D         	call	_TiResetTics
  2664                           
  2665                           ;Altaveu.c: 25:     state = 1;
  2666  001372  0E01               	movlw	1
  2667  001374  6E2D               	movwf	motorAltaveu@state^0,c
  2668  001376  0C01               	retlw	1
  2669  001378                     l5489:
  2670                           
  2671                           ;Altaveu.c: 29:    if (nota > 5) {
  2672  001378  0E05               	movlw	5
  2673  00137A  6430               	cpfsgt	_nota^0,c
  2674  00137C  D003               	goto	l5495
  2675                           
  2676                           ;Altaveu.c: 30:     reproduir = 0;
  2677  00137E  9477               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2678                           
  2679                           ;Altaveu.c: 31:     state--;
  2680  001380  062D               	decf	motorAltaveu@state^0,f,c
  2681                           
  2682                           ;Altaveu.c: 32:    }
  2683  001382  0C05               	retlw	5
  2684  001384                     l5495:
  2685  001384  0EA8               	movlw	168
  2686  001386  182E               	xorwf	_copsNota^0,w,c
  2687  001388  E103               	bnz	l5501
  2688                           
  2689                           ;Altaveu.c: 34:     nota++;
  2690  00138A  2A30               	incf	_nota^0,f,c
  2691                           
  2692                           ;Altaveu.c: 35:     copsNota = 0;
  2693  00138C  6A2E               	clrf	_copsNota^0,c
  2694                           
  2695                           ;Altaveu.c: 36:    }
  2696  00138E  0012               	return	
  2697  001390                     l5501:
  2698  001390  502F               	movf	_timerAltaveu^0,w,c
  2699  001392  EC92  F00C         	call	_TiGetTics
  2700  001396  D821               	call	PL18	;call to abstracted procedure
  2701  001398  B0D8               	btfsc	status,0,c
  2702  00139A  0012               	return	
  2703                           
  2704                           ;Altaveu.c: 38:     LATBbits.LB0 = 1;
  2705  00139C  808A               	bsf	138,0,c	;volatile
  2706                           
  2707                           ;Altaveu.c: 39:     TiResetTics(timerAltaveu);
  2708  00139E  502F               	movf	_timerAltaveu^0,w,c
  2709  0013A0  EC16  F00D         	call	_TiResetTics
  2710  0013A4                     l5507:
  2711                           
  2712                           ;Altaveu.c: 40:     state++;
  2713  0013A4  2A2D               	incf	motorAltaveu@state^0,f,c
  2714  0013A6  0012               	return	
  2715  0013A8                     l5509:
  2716                           
  2717                           ;Altaveu.c: 44:    if (TiGetTics(timerAltaveu) > nota) {
  2718  0013A8  502F               	movf	_timerAltaveu^0,w,c
  2719  0013AA  EC92  F00C         	call	_TiGetTics
  2720  0013AE  D815               	call	PL18	;call to abstracted procedure
  2721  0013B0  B0D8               	btfsc	status,0,c
  2722  0013B2  0012               	return	
  2723                           
  2724                           ;Altaveu.c: 45:     LATBbits.LB0 = 0;
  2725  0013B4  908A               	bcf	138,0,c	;volatile
  2726                           
  2727                           ;Altaveu.c: 46:     TiResetTics(timerAltaveu);
  2728  0013B6  502F               	movf	_timerAltaveu^0,w,c
  2729  0013B8  EC16  F00D         	call	_TiResetTics
  2730                           
  2731                           ;Altaveu.c: 47:     copsNota++;
  2732  0013BC  2A2E               	incf	_copsNota^0,f,c
  2733  0013BE  D7F2               	goto	l5507
  2734  0013C0                     l5521:
  2735  0013C0  502D               	movf	motorAltaveu@state^0,w,c
  2736  0013C2  6E57               	movwf	??_motorAltaveu^0,c
  2737  0013C4  6A58               	clrf	(??_motorAltaveu+1)^0,c
  2738                           
  2739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2740                           ; Switch size 1, requested type "space"
  2741                           ; Number of cases is 1, Range of values is 0 to 0
  2742                           ; switch strategies available:
  2743                           ; Name         Instructions Cycles
  2744                           ; simple_byte            4     3 (average)
  2745                           ;	Chosen strategy is simple_byte
  2746  0013C6  5058               	movf	(??_motorAltaveu+1)^0,w,c
  2747  0013C8  A4D8               	btfss	status,2,c
  2748  0013CA  0012               	return	
  2749                           
  2750                           ; Switch size 1, requested type "space"
  2751                           ; Number of cases is 3, Range of values is 0 to 2
  2752                           ; switch strategies available:
  2753                           ; Name         Instructions Cycles
  2754                           ; simple_byte           10     6 (average)
  2755                           ;	Chosen strategy is simple_byte
  2756  0013CC  5057               	movf	??_motorAltaveu^0,w,c
  2757  0013CE  E0C9               	bz	l851
  2758  0013D0  0A01               	xorlw	1	; case 1
  2759  0013D2  E0D2               	bz	l5489
  2760  0013D4  0A03               	xorlw	3	; case 2
  2761  0013D6  E0E8               	bz	l5509
  2762  0013D8  0012               	return		;funcret
  2763  0013DA                     __end_of_motorAltaveu:
  2764                           	callstack 0
  2765  0013DA                     PL18:
  2766                           	callstack 27
  2767  0013DA  5030               	movf	_nota^0,w,c
  2768  0013DC  6E57               	movwf	??_motorAltaveu^0,c
  2769  0013DE  6A58               	clrf	(??_motorAltaveu+1)^0,c
  2770  0013E0  5050               	movf	?_TiGetTics^0,w,c
  2771  0013E2  5C57               	subwf	??_motorAltaveu^0,w,c
  2772  0013E4  5058               	movf	(??_motorAltaveu+1)^0,w,c
  2773  0013E6  0A80               	xorlw	128
  2774  0013E8  6E59               	movwf	(??_motorAltaveu+2)^0,c
  2775  0013EA  5051               	movf	(?_TiGetTics+1)^0,w,c
  2776  0013EC  0A80               	xorlw	128
  2777  0013EE  5859               	subwfb	(??_motorAltaveu+2)^0,w,c
  2778  0013F0  0012               	return	
  2779  0013F2                     __end_ofPL18:
  2780                           	callstack 0
  2781                           
  2782 ;; *************** function _menu *****************
  2783 ;; Defined at:
  2784 ;;		line 42 in file "Menu.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1
  2798 ;;      Params:         0       0       0
  2799 ;;      Locals:         0       0       0
  2800 ;;      Temps:          0       5       0
  2801 ;;      Totals:         0       5       0
  2802 ;;Total ram usage:        5 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 6
  2805 ;; This function calls:
  2806 ;;		_CToAConverteix
  2807 ;;		_CToAHaAcabat
  2808 ;;		_CToAobtenir
  2809 ;;		_GLCDMostraMenu
  2810 ;;		_HActualitzaHora
  2811 ;;		_JJuguem
  2812 ;;		_JendGame
  2813 ;;		_JnovaDireccio
  2814 ;;		_JnovaTecla
  2815 ;;		_LcClear
  2816 ;;		_LcGotoXY
  2817 ;;		_LcLliure
  2818 ;;		_LcNewString
  2819 ;;		_LcPutChar
  2820 ;;		_LcScroll
  2821 ;;		_NoFerMenu
  2822 ;;		_SIOHaAcabatPuntuacions
  2823 ;;		_SMSoff
  2824 ;;		_SMSon
  2825 ;;		_SiFerMenu
  2826 ;;		_TiGetTics
  2827 ;;		_TiResetTics
  2828 ;;		_URegister
  2829 ;;		_UcheckExists
  2830 ;;		_UcheckExistsGetError
  2831 ;;		_UcheckExistsNotFinished
  2832 ;;		_UenviaChar
  2833 ;;		_UenviaPas
  2834 ;;		_UgetNumUsuaris
  2835 ;;		_UgetScore
  2836 ;;		_UgetTop5
  2837 ;;		_UgetUserName
  2838 ;;		_UshowUsersCalculat
  2839 ;;		_calculateShowUsers
  2840 ;;		_checkHoraAcabat
  2841 ;;		_getArrayShowUsers
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text18
  2848  000036                     __ptext18:
  2849                           	callstack 0
  2850  000036                     _menu:
  2851                           	callstack 24
  2852                           
  2853                           ;Menu.c: 43:  static char state = 0;;Menu.c: 45:  switch(state) {
  2854                           
  2855                           ;incstack = 0
  2856  000036  D32D               	goto	l6405
  2857  000038                     l5861:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;Menu.c: 47:    LcClear();
  2861  000038  ECC9  F00C         	call	_LcClear	;wreg free
  2862                           
  2863                           ;Menu.c: 48:    LcNewString(loginText);
  2864  00003C  0E67               	movlw	low _loginText
  2865  00003E  6E53               	movwf	LcNewString@new_s^0,c
  2866  000040  0E1D               	movlw	high _loginText
  2867  000042  6E54               	movwf	(LcNewString@new_s+1)^0,c
  2868  000044  ECA0  F00D         	call	_LcNewString	;wreg free
  2869                           
  2870                           ;Menu.c: 49:    state = 1;
  2871  000048  0E01               	movlw	1
  2872  00004A  6E38               	movwf	menu@state^0,c
  2873                           
  2874                           ;Menu.c: 50:   break;
  2875  00004C  0C01               	retlw	1
  2876  00004E                     l5867:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;Menu.c: 52:    if (LcLliure()) {
  2880  00004E  ECA6  F00D         	call	_LcLliure	;wreg free
  2881  000052  A0D8               	btfss	status,0,c
  2882  000054  0012               	return	
  2883                           
  2884                           ;Menu.c: 53:     LcGotoXY(0,1);
  2885  000056  DB99               	call	PL30	;call to abstracted procedure
  2886  000058  EC3B  F00C         	call	_LcGotoXY
  2887                           
  2888                           ;Menu.c: 54:     LcNewString(registerText);
  2889  00005C  0E5C               	movlw	low _registerText
  2890  00005E  6E53               	movwf	LcNewString@new_s^0,c
  2891  000060  0E1D               	movlw	high _registerText
  2892  000062  6E54               	movwf	(LcNewString@new_s+1)^0,c
  2893  000064  ECA0  F00D         	call	_LcNewString	;wreg free
  2894                           
  2895                           ;Menu.c: 55:     NovaTecla = -1;
  2896  000068  686C               	setf	_NovaTecla^0,c
  2897                           
  2898                           ;Menu.c: 56:     state = 2;
  2899  00006A  0E02               	movlw	2
  2900  00006C  6E38               	movwf	menu@state^0,c
  2901                           
  2902                           ;Menu.c: 58:   break;
  2903                           
  2904                           ;Menu.c: 57:    }
  2905  00006E  0C02               	retlw	2
  2906  000070                     l5877:
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;Menu.c: 60:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  2910  000070  046C               	decf	_NovaTecla^0,w,c
  2911  000072  E108               	bnz	l5885
  2912                           
  2913                           ; BSR set to: 0
  2914  000074  ECFF  F00D         	call	_UgetNumUsuaris	;wreg free
  2915  000078  0900               	iorlw	0
  2916  00007A  E004               	bz	l5885
  2917                           
  2918                           ;Menu.c: 61:     loginNOTRegister = 1;
  2919  00007C  8E77               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2920  00007E                     l5883:
  2921                           
  2922                           ;Menu.c: 62:     state = 3;
  2923  00007E  0E03               	movlw	3
  2924  000080  6E38               	movwf	menu@state^0,c
  2925                           
  2926                           ;Menu.c: 63:    }
  2927  000082  0C03               	retlw	3
  2928  000084                     l5885:
  2929  000084  0E02               	movlw	2
  2930  000086  186C               	xorwf	_NovaTecla^0,w,c
  2931  000088  A4D8               	btfss	status,2,c
  2932  00008A  0012               	return	
  2933                           
  2934                           ;Menu.c: 65:     loginNOTRegister = 0;
  2935  00008C  9E77               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  2936  00008E  D7F7               	goto	l5883
  2937  000090                     l509:
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;Menu.c: 70:    NovaTecla = -1;
  2941  000090  686C               	setf	_NovaTecla^0,c
  2942                           
  2943                           ;Menu.c: 71:    novaLletra = -1;
  2944  000092  686B               	setf	_novaLletra^0,c
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;Menu.c: 72:    LcClear();
  2948  000094  ECC9  F00C         	call	_LcClear	;wreg free
  2949                           
  2950                           ;Menu.c: 73:    LcNewString("USER: ");
  2951  000098  0EB8               	movlw	low STR_1
  2952  00009A  6E53               	movwf	LcNewString@new_s^0,c
  2953  00009C  0E1D               	movlw	high STR_1
  2954  00009E  6E54               	movwf	(LcNewString@new_s+1)^0,c
  2955  0000A0  ECA0  F00D         	call	_LcNewString	;wreg free
  2956                           
  2957                           ;Menu.c: 74:    state = 4;
  2958  0000A4  0E04               	movlw	4
  2959  0000A6  6E38               	movwf	menu@state^0,c
  2960                           
  2961                           ;Menu.c: 75:   break;
  2962  0000A8  0C04               	retlw	4
  2963  0000AA                     l5897:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;Menu.c: 77:    if (LcLliure()) {
  2967  0000AA  ECA6  F00D         	call	_LcLliure	;wreg free
  2968  0000AE  A0D8               	btfss	status,0,c
  2969  0000B0  0012               	return	
  2970                           
  2971                           ;Menu.c: 78:     LcGotoXY(0,1);
  2972  0000B2  DB6B               	call	PL30	;call to abstracted procedure
  2973  0000B4  EC3B  F00C         	call	_LcGotoXY
  2974                           
  2975                           ;Menu.c: 79:     LcNewString("PSWD: ");
  2976  0000B8  0EB1               	movlw	low STR_2
  2977  0000BA  6E53               	movwf	LcNewString@new_s^0,c
  2978  0000BC  0E1D               	movlw	high STR_2
  2979  0000BE  6E54               	movwf	(LcNewString@new_s+1)^0,c
  2980  0000C0  ECA0  F00D         	call	_LcNewString	;wreg free
  2981                           
  2982                           ;Menu.c: 80:     state = 5;
  2983  0000C4  0E05               	movlw	5
  2984  0000C6  6E38               	movwf	menu@state^0,c
  2985  0000C8  0C05               	retlw	5
  2986  0000CA                     l5905:
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;Menu.c: 84:    if (LcLliure()) {
  2990  0000CA  ECA6  F00D         	call	_LcLliure	;wreg free
  2991  0000CE  A0D8               	btfss	status,0,c
  2992  0000D0  0012               	return	
  2993                           
  2994                           ;Menu.c: 85:     LcGotoXY(6,0);
  2995  0000D2  0E00               	movlw	0
  2996  0000D4  6E58               	movwf	LcGotoXY@Row^0,c
  2997  0000D6  0E06               	movlw	6
  2998  0000D8  EC3B  F00C         	call	_LcGotoXY
  2999                           
  3000                           ;Menu.c: 86:     SMSon();
  3001  0000DC  EC15  F00E         	call	_SMSon	;wreg free
  3002                           
  3003                           ;Menu.c: 87:     tmp =0;
  3004  0000E0  6A3D               	clrf	_tmp^0,c
  3005  0000E2                     l5913:
  3006                           
  3007                           ;Menu.c: 88:     state = 6;
  3008  0000E2  0E06               	movlw	6
  3009  0000E4  6E38               	movwf	menu@state^0,c
  3010  0000E6  0C06               	retlw	6
  3011  0000E8                     l5915:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;Menu.c: 92:    if (novaLletra > 31 && NovaTecla != 10) {
  3015  0000E8  506B               	movf	_novaLletra^0,w,c
  3016  0000EA  0A80               	xorlw	128
  3017  0000EC  0F60               	addlw	-160
  3018  0000EE  E30E               	bnc	l5925
  3019                           
  3020                           ; BSR set to: 0
  3021  0000F0  0E0A               	movlw	10
  3022  0000F2  186C               	xorwf	_NovaTecla^0,w,c
  3023  0000F4  E00B               	bz	l5925
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;Menu.c: 93:     LcPutChar(novaLletra);
  3027  0000F6  506B               	movf	_novaLletra^0,w,c
  3028  0000F8  EC65  F00B         	call	_LcPutChar
  3029                           
  3030                           ;Menu.c: 94:     UenviaChar(novaLletra,tmp);
  3031  0000FC  C03D  F050         	movff	_tmp,UenviaChar@pos
  3032  000100  506B               	movf	_novaLletra^0,w,c
  3033  000102  EC5F  F00D         	call	_UenviaChar
  3034  000106                     l5923:
  3035                           
  3036                           ;Menu.c: 95:     state = 7;
  3037  000106  0E07               	movlw	7
  3038  000108  6E38               	movwf	menu@state^0,c
  3039                           
  3040                           ;Menu.c: 96:    }
  3041  00010A  0C07               	retlw	7
  3042  00010C                     l5925:
  3043                           
  3044                           ; BSR set to: 0
  3045  00010C  0E0B               	movlw	11
  3046  00010E  186C               	xorwf	_NovaTecla^0,w,c
  3047  000110  E0FA               	bz	l5923
  3048  000112  0012               	return	
  3049  000114                     l5929:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;Menu.c: 102:    if (tmp != 7 && NovaTecla != 11) {
  3053  000114  0E07               	movlw	7
  3054  000116  183D               	xorwf	_tmp^0,w,c
  3055  000118  E005               	bz	l5941
  3056                           
  3057                           ; BSR set to: 0
  3058  00011A  0E0B               	movlw	11
  3059  00011C  186C               	xorwf	_NovaTecla^0,w,c
  3060  00011E  E002               	bz	l5941
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;Menu.c: 103:     tmp++;
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;Menu.c: 104:     NovaTecla = -1;
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;Menu.c: 105:     novaLletra = -1;
  3070  000120  DB42               	call	PL76	;call to abstracted procedure
  3071  000122  D7DF               	goto	l5913
  3072  000124                     l5941:
  3073                           
  3074                           ; BSR set to: 0
  3075  000124  0E07               	movlw	7
  3076  000126  183D               	xorwf	_tmp^0,w,c
  3077  000128  E004               	bz	u6170
  3078                           
  3079                           ; BSR set to: 0
  3080  00012A  0E0B               	movlw	11
  3081  00012C  186C               	xorwf	_NovaTecla^0,w,c
  3082  00012E  A4D8               	btfss	status,2,c
  3083  000130  0012               	return	
  3084  000132                     u6170:
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;Menu.c: 109:     LcGotoXY(6,1);
  3088  000132  0E01               	movlw	1
  3089  000134  6E58               	movwf	LcGotoXY@Row^0,c
  3090  000136  0E06               	movlw	6
  3091  000138  EC3B  F00C         	call	_LcGotoXY
  3092                           
  3093                           ;Menu.c: 110:     UenviaChar('\0',tmp);
  3094  00013C  C03D  F050         	movff	_tmp,UenviaChar@pos
  3095  000140  0E00               	movlw	0
  3096  000142  EC5F  F00D         	call	_UenviaChar
  3097                           
  3098                           ;Menu.c: 111:     NovaTecla = -1;
  3099                           
  3100                           ;Menu.c: 112:     novaLletra = -1;
  3101                           
  3102                           ;Menu.c: 113:     tmp = 0;
  3103  000146  DB39               	call	PL84	;call to abstracted procedure
  3104  000148                     l5955:
  3105                           
  3106                           ;Menu.c: 114:     state = 8;
  3107  000148  0E08               	movlw	8
  3108  00014A  6E38               	movwf	menu@state^0,c
  3109  00014C  0C08               	retlw	8
  3110  00014E                     l5957:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;Menu.c: 118:    if (novaLletra > 31 && NovaTecla != 10) {
  3114  00014E  506B               	movf	_novaLletra^0,w,c
  3115  000150  0A80               	xorlw	128
  3116  000152  0F60               	addlw	-160
  3117  000154  E30E               	bnc	l5967
  3118                           
  3119                           ; BSR set to: 0
  3120  000156  0E0A               	movlw	10
  3121  000158  186C               	xorwf	_NovaTecla^0,w,c
  3122  00015A  E00B               	bz	l5967
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;Menu.c: 119:     LcPutChar(novaLletra);
  3126  00015C  506B               	movf	_novaLletra^0,w,c
  3127  00015E  EC65  F00B         	call	_LcPutChar
  3128                           
  3129                           ;Menu.c: 120:     UenviaPas(novaLletra,tmp);
  3130  000162  C03D  F050         	movff	_tmp,UenviaPas@pos
  3131  000166  506B               	movf	_novaLletra^0,w,c
  3132  000168  EC57  F00D         	call	_UenviaPas
  3133  00016C                     l5965:
  3134                           
  3135                           ;Menu.c: 121:     state = 9;
  3136  00016C  0E09               	movlw	9
  3137  00016E  6E38               	movwf	menu@state^0,c
  3138                           
  3139                           ;Menu.c: 122:    }
  3140  000170  0C09               	retlw	9
  3141  000172                     l5967:
  3142                           
  3143                           ; BSR set to: 0
  3144  000172  0E0B               	movlw	11
  3145  000174  186C               	xorwf	_NovaTecla^0,w,c
  3146  000176  E0FA               	bz	l5965
  3147  000178  0012               	return	
  3148  00017A                     l5971:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;Menu.c: 128:    if (tmp != 7 && NovaTecla != 11) {
  3152  00017A  0E07               	movlw	7
  3153  00017C  183D               	xorwf	_tmp^0,w,c
  3154  00017E  E005               	bz	l5983
  3155                           
  3156                           ; BSR set to: 0
  3157  000180  0E0B               	movlw	11
  3158  000182  186C               	xorwf	_NovaTecla^0,w,c
  3159  000184  E002               	bz	l5983
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;Menu.c: 129:     tmp++;
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;Menu.c: 130:     NovaTecla = -1;
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;Menu.c: 131:     novaLletra = -1;
  3169  000186  DB0F               	call	PL76	;call to abstracted procedure
  3170  000188  D7DF               	goto	l5955
  3171  00018A                     l5983:
  3172                           
  3173                           ; BSR set to: 0
  3174  00018A  0E07               	movlw	7
  3175  00018C  183D               	xorwf	_tmp^0,w,c
  3176  00018E  E004               	bz	u6240
  3177                           
  3178                           ; BSR set to: 0
  3179  000190  0E0B               	movlw	11
  3180  000192  186C               	xorwf	_NovaTecla^0,w,c
  3181  000194  A4D8               	btfss	status,2,c
  3182  000196  0012               	return	
  3183  000198                     u6240:
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;Menu.c: 135:     UenviaPas('\0',tmp);
  3187  000198  C03D  F050         	movff	_tmp,UenviaPas@pos
  3188  00019C  0E00               	movlw	0
  3189  00019E  EC57  F00D         	call	_UenviaPas
  3190                           
  3191                           ;Menu.c: 136:     NovaTecla = -1;
  3192                           
  3193                           ;Menu.c: 137:     novaLletra = -1;
  3194                           
  3195                           ;Menu.c: 138:     tmp = 0;
  3196  0001A2  DB0B               	call	PL84	;call to abstracted procedure
  3197                           
  3198                           ;Menu.c: 139:     UcheckExists();
  3199  0001A4  EC03  F00E         	call	_UcheckExists	;wreg free
  3200                           
  3201                           ;Menu.c: 140:     SMSoff();
  3202  0001A8  EC16  F00E         	call	_SMSoff	;wreg free
  3203                           
  3204                           ;Menu.c: 141:     state = 10;
  3205  0001AC  0E0A               	movlw	10
  3206  0001AE  6E38               	movwf	menu@state^0,c
  3207  0001B0  0C0A               	retlw	10
  3208  0001B2                     l6001:
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;Menu.c: 145:    if (!UcheckExistsNotFinished()) {
  3212  0001B2  EC8E  F00D         	call	_UcheckExistsNotFinished	;wreg free
  3213  0001B6  B0D8               	btfsc	status,0,c
  3214  0001B8  0012               	return	
  3215                           
  3216                           ;Menu.c: 146:     indexUsuari = UcheckExistsGetError();
  3217  0001BA  EC01  F00E         	call	_UcheckExistsGetError	;wreg free
  3218  0001BE  6E3A               	movwf	_indexUsuari^0,c
  3219                           
  3220                           ;Menu.c: 147:     state = 11;
  3221  0001C0  0E0B               	movlw	11
  3222  0001C2  6E38               	movwf	menu@state^0,c
  3223  0001C4  0C0B               	retlw	11
  3224  0001C6                     l536:
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;Menu.c: 151:    if (!loginNOTRegister && indexUsuari == -1) {
  3228  0001C6  BE77               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3229  0001C8  D006               	goto	l537
  3230                           
  3231                           ; BSR set to: 0
  3232  0001CA  283A               	incf	_indexUsuari^0,w,c
  3233  0001CC  E104               	bnz	l537
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;Menu.c: 152:     URegister();
  3237  0001CE  EC05  F00E         	call	_URegister	;wreg free
  3238  0001D2                     l6011:
  3239                           
  3240                           ;Menu.c: 153:     state = 0;
  3241  0001D2  6A38               	clrf	menu@state^0,c
  3242                           
  3243                           ;Menu.c: 154:    }
  3244  0001D4  0012               	return	
  3245  0001D6                     l537:
  3246                           
  3247                           ; BSR set to: 0
  3248  0001D6  BE77               	btfsc	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3249                           
  3250                           ; BSR set to: 0
  3251  0001D8  BE3A               	btfsc	_indexUsuari^0,7,c
  3252  0001DA  D003               	goto	l539
  3253  0001DC                     u6290:
  3254                           
  3255                           ;Menu.c: 156:     state = 12;
  3256  0001DC  0E0C               	movlw	12
  3257  0001DE  6E38               	movwf	menu@state^0,c
  3258                           
  3259                           ;Menu.c: 157:    }
  3260  0001E0  0C0C               	retlw	12
  3261  0001E2                     l539:
  3262                           
  3263                           ; BSR set to: 0
  3264  0001E2  AE77               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3265  0001E4  D002               	goto	u6310
  3266                           
  3267                           ; BSR set to: 0
  3268  0001E6  283A               	incf	_indexUsuari^0,w,c
  3269  0001E8  E003               	bz	u6330
  3270  0001EA                     u6310:
  3271                           
  3272                           ; BSR set to: 0
  3273  0001EA  AE77               	btfss	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3274                           
  3275                           ; BSR set to: 0
  3276  0001EC  BE3A               	btfsc	_indexUsuari^0,7,c
  3277  0001EE  0012               	return	
  3278  0001F0                     u6330:
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;Menu.c: 159:     state = 0;
  3282  0001F0  6A38               	clrf	menu@state^0,c
  3283                           
  3284                           ;Menu.c: 160:                 LATBbits.LATB3 = 1;
  3285  0001F2  868A               	bsf	138,3,c	;volatile
  3286  0001F4  0012               	return	
  3287  0001F6                     l6021:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;Menu.c: 164:    LcClear();
  3291  0001F6  ECC9  F00C         	call	_LcClear	;wreg free
  3292                           
  3293                           ;Menu.c: 165:    SiFerMenu();
  3294  0001FA  EC07  F00E         	call	_SiFerMenu	;wreg free
  3295                           
  3296                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  3297  0001FE  503B               	movf	_menuDalt^0,w,c
  3298  000200  EC94  F00D         	call	_GLCDMostraMenu
  3299                           
  3300                           ;Menu.c: 167:    novaDireccio = -1;
  3301  000204  686A               	setf	_novaDireccio^0,c
  3302                           
  3303                           ;Menu.c: 168:    NovaTecla = -1;
  3304  000206  686C               	setf	_NovaTecla^0,c
  3305                           
  3306                           ;Menu.c: 169:    state = 13;
  3307  000208  0E0D               	movlw	13
  3308  00020A  6E38               	movwf	menu@state^0,c
  3309                           
  3310                           ;Menu.c: 170:   break;
  3311  00020C  0C0D               	retlw	13
  3312  00020E                     l6033:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;Menu.c: 172:    if (novaDireccio == 8) {
  3316  00020E  0E08               	movlw	8
  3317  000210  186A               	xorwf	_novaDireccio^0,w,c
  3318  000212  E105               	bnz	l6041
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  3322  000214  0E04               	movlw	4
  3323  000216  603B               	cpfslt	_menuDalt^0,c
  3324  000218  D7E1               	goto	u6290
  3325                           
  3326                           ; BSR set to: 0
  3327  00021A  2A3B               	incf	_menuDalt^0,f,c
  3328  00021C  D7DF               	goto	u6290
  3329  00021E                     l6041:
  3330                           
  3331                           ; BSR set to: 0
  3332  00021E  0E02               	movlw	2
  3333  000220  186A               	xorwf	_novaDireccio^0,w,c
  3334  000222  E104               	bnz	l6049
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  3338  000224  503B               	movf	_menuDalt^0,w,c
  3339  000226  E0DA               	bz	u6290
  3340                           
  3341                           ; BSR set to: 0
  3342  000228  063B               	decf	_menuDalt^0,f,c
  3343  00022A  D7D8               	goto	u6290
  3344  00022C                     l6049:
  3345                           
  3346                           ; BSR set to: 0
  3347  00022C  0E0B               	movlw	11
  3348  00022E  186C               	xorwf	_NovaTecla^0,w,c
  3349  000230  E110               	bnz	l6061
  3350                           
  3351                           ; BSR set to: 0
  3352  000232  0E03               	movlw	3
  3353  000234  183B               	xorwf	_menuDalt^0,w,c
  3354  000236  E10D               	bnz	l6061
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;Menu.c: 181:     NoFerMenu();
  3358  000238  EC0B  F00E         	call	_NoFerMenu	;wreg free
  3359                           
  3360                           ;Menu.c: 182:     LcClear();
  3361  00023C  ECC9  F00C         	call	_LcClear	;wreg free
  3362                           
  3363                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  3364  000240  0E98               	movlw	low STR_3
  3365  000242  6E53               	movwf	LcNewString@new_s^0,c
  3366  000244  0E1D               	movlw	high STR_3
  3367  000246  6E54               	movwf	(LcNewString@new_s+1)^0,c
  3368  000248  ECA0  F00D         	call	_LcNewString	;wreg free
  3369                           
  3370                           ;Menu.c: 184:     state = 14;
  3371  00024C  0E0E               	movlw	14
  3372  00024E  6E38               	movwf	menu@state^0,c
  3373                           
  3374                           ;Menu.c: 185:    }
  3375  000250  0C0E               	retlw	14
  3376  000252                     l6061:
  3377                           
  3378                           ; BSR set to: 0
  3379  000252  0E0B               	movlw	11
  3380  000254  186C               	xorwf	_NovaTecla^0,w,c
  3381  000256  E110               	bnz	l6075
  3382                           
  3383                           ; BSR set to: 0
  3384  000258  043B               	decf	_menuDalt^0,w,c
  3385  00025A  E10E               	bnz	l6075
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;Menu.c: 187:     LcClear();
  3389  00025C  ECC9  F00C         	call	_LcClear	;wreg free
  3390                           
  3391                           ;Menu.c: 188:     NoFerMenu();
  3392  000260  EC0B  F00E         	call	_NoFerMenu	;wreg free
  3393                           
  3394                           ;Menu.c: 189:     LcNewString("Modify Time:");
  3395  000264  0E7F               	movlw	low STR_4
  3396  000266  6E53               	movwf	LcNewString@new_s^0,c
  3397  000268  0E1D               	movlw	high STR_4
  3398  00026A  6E54               	movwf	(LcNewString@new_s+1)^0,c
  3399  00026C  ECA0  F00D         	call	_LcNewString	;wreg free
  3400                           
  3401                           ;Menu.c: 190:     NovaTecla = -1;
  3402  000270  686C               	setf	_NovaTecla^0,c
  3403                           
  3404                           ;Menu.c: 191:     state = 16;
  3405  000272  0E10               	movlw	16
  3406  000274  6E38               	movwf	menu@state^0,c
  3407                           
  3408                           ;Menu.c: 192:    }
  3409  000276  0C10               	retlw	16
  3410  000278                     l6075:
  3411                           
  3412                           ; BSR set to: 0
  3413  000278  503B               	movf	_menuDalt^0,w,c
  3414  00027A  E114               	bnz	l6091
  3415                           
  3416                           ; BSR set to: 0
  3417  00027C  0E0B               	movlw	11
  3418  00027E  186C               	xorwf	_NovaTecla^0,w,c
  3419  000280  E111               	bnz	l6091
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;Menu.c: 194:     NoFerMenu();
  3423  000282  EC0B  F00E         	call	_NoFerMenu	;wreg free
  3424                           
  3425                           ;Menu.c: 195:     NovaTecla = -1;
  3426  000286  686C               	setf	_NovaTecla^0,c
  3427                           
  3428                           ;Menu.c: 196:     LcClear();
  3429  000288  ECC9  F00C         	call	_LcClear	;wreg free
  3430                           
  3431                           ;Menu.c: 197:     LcNewString("TIME REMAINING:");
  3432  00028C  0E6F               	movlw	low STR_5
  3433  00028E  6E53               	movwf	LcNewString@new_s^0,c
  3434  000290  0E1D               	movlw	high STR_5
  3435  000292  6E54               	movwf	(LcNewString@new_s+1)^0,c
  3436  000294  ECA0  F00D         	call	_LcNewString	;wreg free
  3437                           
  3438                           ;Menu.c: 198:     JJuguem(indexUsuari);
  3439  000298  503A               	movf	_indexUsuari^0,w,c
  3440  00029A  ECC5  F00D         	call	_JJuguem
  3441  00029E                     l6089:
  3442                           
  3443                           ;Menu.c: 199:     state = 21;
  3444  00029E  0E15               	movlw	21
  3445  0002A0  6E38               	movwf	menu@state^0,c
  3446                           
  3447                           ;Menu.c: 200:    }
  3448  0002A2  0C15               	retlw	21
  3449  0002A4                     l6091:
  3450                           
  3451                           ; BSR set to: 0
  3452  0002A4  0E0B               	movlw	11
  3453  0002A6  186C               	xorwf	_NovaTecla^0,w,c
  3454  0002A8  E10E               	bnz	l6107
  3455                           
  3456                           ; BSR set to: 0
  3457  0002AA  0E04               	movlw	4
  3458  0002AC  183B               	xorwf	_menuDalt^0,w,c
  3459  0002AE  E10B               	bnz	l6107
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;Menu.c: 202:     NoFerMenu();
  3463  0002B0  EC0B  F00E         	call	_NoFerMenu	;wreg free
  3464                           
  3465                           ;Menu.c: 203:     LcClear();
  3466  0002B4  ECC9  F00C         	call	_LcClear	;wreg free
  3467                           
  3468                           ;Menu.c: 204:     menuDalt = 0;
  3469  0002B8  6A3B               	clrf	_menuDalt^0,c
  3470                           
  3471                           ;Menu.c: 205:     NovaTecla = -1;
  3472  0002BA  686C               	setf	_NovaTecla^0,c
  3473                           
  3474                           ;Menu.c: 206:     calculateShowUsers();
  3475  0002BC  ECFD  F00D         	call	_calculateShowUsers	;wreg free
  3476                           
  3477                           ;Menu.c: 207:     state = 30;
  3478  0002C0  0E1E               	movlw	30
  3479  0002C2  6E38               	movwf	menu@state^0,c
  3480                           
  3481                           ;Menu.c: 208:    }
  3482  0002C4  0C1E               	retlw	30
  3483  0002C6                     l6107:
  3484                           
  3485                           ; BSR set to: 0
  3486  0002C6  0E0B               	movlw	11
  3487  0002C8  186C               	xorwf	_NovaTecla^0,w,c
  3488  0002CA  A4D8               	btfss	status,2,c
  3489  0002CC  0012               	return	
  3490                           
  3491                           ; BSR set to: 0
  3492  0002CE  0E02               	movlw	2
  3493  0002D0  183B               	xorwf	_menuDalt^0,w,c
  3494  0002D2  A4D8               	btfss	status,2,c
  3495  0002D4  0012               	return	
  3496                           
  3497                           ; BSR set to: 0
  3498  0002D6  0E00               	movlw	0
  3499  0002D8  EC44  F00D         	call	_UgetTop5
  3500  0002DC  0AFF               	xorlw	255
  3501  0002DE  B4D8               	btfsc	status,2,c
  3502  0002E0  0012               	return	
  3503                           
  3504                           ;Menu.c: 210:     NoFerMenu();
  3505  0002E2  EC0B  F00E         	call	_NoFerMenu	;wreg free
  3506                           
  3507                           ;Menu.c: 211:     LcClear();
  3508  0002E6  ECC9  F00C         	call	_LcClear	;wreg free
  3509                           
  3510                           ;Menu.c: 212:     menuDalt = 0;
  3511  0002EA  6A3B               	clrf	_menuDalt^0,c
  3512                           
  3513                           ;Menu.c: 213:     NovaTecla = -1;
  3514  0002EC  686C               	setf	_NovaTecla^0,c
  3515  0002EE                     l6121:
  3516                           
  3517                           ;Menu.c: 214:     state = 31;
  3518  0002EE  0E1F               	movlw	31
  3519  0002F0  6E38               	movwf	menu@state^0,c
  3520  0002F2  0C1F               	retlw	31
  3521  0002F4                     l6123:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;Menu.c: 218:    if (LcLliure()) {
  3525  0002F4  ECA6  F00D         	call	_LcLliure	;wreg free
  3526  0002F8  A0D8               	btfss	status,0,c
  3527  0002FA  0012               	return	
  3528                           
  3529                           ;Menu.c: 219:     LcNewString(UgetUserName(indexUsuari));
  3530  0002FC  503A               	movf	_indexUsuari^0,w,c
  3531  0002FE  EC3A  F00D         	call	_UgetUserName
  3532  000302  DA46               	call	PL42	;call to abstracted procedure
  3533  000304  ECA0  F00D         	call	_LcNewString	;wreg free
  3534                           
  3535                           ;Menu.c: 220:     TiResetTics(timerMenu);
  3536  000308  503C               	movf	_timerMenu^0,w,c
  3537  00030A  EC16  F00D         	call	_TiResetTics
  3538                           
  3539                           ;Menu.c: 221:     state = 15;
  3540  00030E  0E0F               	movlw	15
  3541  000310  6E38               	movwf	menu@state^0,c
  3542  000312  0C0F               	retlw	15
  3543  000314                     l6131:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;Menu.c: 225:    if (TiGetTics(timerMenu) > 2410) {
  3547  000314  503C               	movf	_timerMenu^0,w,c
  3548  000316  EC92  F00C         	call	_TiGetTics
  3549  00031A  BE51               	btfsc	(?_TiGetTics+1)^0,7,c
  3550  00031C  0012               	return	
  3551  00031E  0E6B               	movlw	107
  3552  000320  5C50               	subwf	?_TiGetTics^0,w,c
  3553  000322  0E09               	movlw	9
  3554  000324  5851               	subwfb	(?_TiGetTics+1)^0,w,c
  3555  000326  E301 D754          	bc	l6011
  3556  00032A  0012               	return	
  3557  00032C                     l6135:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;Menu.c: 230:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3561  00032C  ECA6  F00D         	call	_LcLliure	;wreg free
  3562  000330  E347               	bnc	l6201
  3563  000332  BE6C               	btfsc	_NovaTecla^0,7,c
  3564  000334  D045               	goto	l6201
  3565  000336  506C               	movf	_NovaTecla^0,w,c
  3566  000338  0A80               	xorlw	128
  3567  00033A  0F76               	addlw	-138
  3568  00033C  E241               	bc	l6201
  3569                           
  3570                           ;Menu.c: 231:     LcGotoXY(0,1);
  3571  00033E  DA25               	call	PL30	;call to abstracted procedure
  3572  000340  EC3B  F00C         	call	_LcGotoXY
  3573                           
  3574                           ;Menu.c: 232:     horaTmp[0] = NovaTecla+48;
  3575  000344  506C               	movf	_NovaTecla^0,w,c
  3576  000346  0F30               	addlw	48
  3577  000348  6E47               	movwf	_horaTmp^0,c
  3578                           
  3579                           ;Menu.c: 233:     LcPutChar(horaTmp[0]);
  3580  00034A  5047               	movf	_horaTmp^0,w,c
  3581  00034C  EC65  F00B         	call	_LcPutChar
  3582                           
  3583                           ;Menu.c: 234:     NovaTecla = -1;
  3584  000350  686C               	setf	_NovaTecla^0,c
  3585                           
  3586                           ;Menu.c: 235:     state = 17;
  3587  000352  0E11               	movlw	17
  3588  000354                     L1:
  3589  000354  6E38               	movwf	menu@state^0,c
  3590                           
  3591                           ;Menu.c: 236:    }
  3592  000356  0012               	return	
  3593  000358                     L2:
  3594  000358  186C               	xorwf	_NovaTecla^0,w,c
  3595  00035A  E101 D73F          	bz	u6290
  3596  00035E  0012               	return	
  3597  000360                     l6155:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;Menu.c: 242:    if (NovaTecla > -1 && NovaTecla < 10) {
  3601  000360  BE6C               	btfsc	_NovaTecla^0,7,c
  3602  000362  D02E               	goto	l6201
  3603                           
  3604                           ; BSR set to: 0
  3605  000364  506C               	movf	_NovaTecla^0,w,c
  3606  000366  0A80               	xorlw	128
  3607  000368  0F76               	addlw	-138
  3608  00036A  E22A               	bc	l6201
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;Menu.c: 243:     horaTmp[1] = NovaTecla+48;
  3612  00036C  506C               	movf	_NovaTecla^0,w,c
  3613  00036E  0F30               	addlw	48
  3614  000370  6E48               	movwf	(_horaTmp+1)^0,c
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;Menu.c: 244:     LcPutChar(horaTmp[1]);
  3618  000372  5048               	movf	(_horaTmp+1)^0,w,c
  3619  000374  EC65  F00B         	call	_LcPutChar
  3620                           
  3621                           ;Menu.c: 245:     NovaTecla = -1;
  3622  000378  686C               	setf	_NovaTecla^0,c
  3623                           
  3624                           ;Menu.c: 246:     LcPutChar(':');
  3625  00037A  0E3A               	movlw	58
  3626  00037C  EC65  F00B         	call	_LcPutChar
  3627                           
  3628                           ;Menu.c: 247:     state = 18;
  3629  000380  0E12               	movlw	18
  3630  000382  D7E8               	goto	L1
  3631  000384                     l6173:
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;Menu.c: 254:    if (NovaTecla > -1 && NovaTecla < 10) {
  3635  000384  BE6C               	btfsc	_NovaTecla^0,7,c
  3636  000386  D01C               	goto	l6201
  3637                           
  3638                           ; BSR set to: 0
  3639  000388  506C               	movf	_NovaTecla^0,w,c
  3640  00038A  0A80               	xorlw	128
  3641  00038C  0F76               	addlw	-138
  3642  00038E  E218               	bc	l6201
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;Menu.c: 255:     horaTmp[2] = NovaTecla+48;
  3646  000390  506C               	movf	_NovaTecla^0,w,c
  3647  000392  0F30               	addlw	48
  3648  000394  6E49               	movwf	(_horaTmp+2)^0,c
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;Menu.c: 256:     LcPutChar(horaTmp[2]);
  3652  000396  5049               	movf	(_horaTmp+2)^0,w,c
  3653  000398  EC65  F00B         	call	_LcPutChar
  3654                           
  3655                           ;Menu.c: 257:     NovaTecla = -1;
  3656  00039C  686C               	setf	_NovaTecla^0,c
  3657                           
  3658                           ;Menu.c: 258:     state = 19;
  3659  00039E  0E13               	movlw	19
  3660  0003A0  D7D9               	goto	L1
  3661  0003A2                     l6189:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;Menu.c: 265:    if (NovaTecla > -1 && NovaTecla < 10) {
  3665  0003A2  BE6C               	btfsc	_NovaTecla^0,7,c
  3666  0003A4  D00D               	goto	l6201
  3667                           
  3668                           ; BSR set to: 0
  3669  0003A6  506C               	movf	_NovaTecla^0,w,c
  3670  0003A8  0A80               	xorlw	128
  3671  0003AA  0F76               	addlw	-138
  3672  0003AC  E209               	bc	l6201
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;Menu.c: 266:     horaTmp[3] = NovaTecla+48;
  3676  0003AE  506C               	movf	_NovaTecla^0,w,c
  3677  0003B0  0F30               	addlw	48
  3678  0003B2  6E4A               	movwf	(_horaTmp+3)^0,c
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;Menu.c: 267:     LcPutChar(horaTmp[3]);
  3682  0003B4  504A               	movf	(_horaTmp+3)^0,w,c
  3683  0003B6  EC65  F00B         	call	_LcPutChar
  3684                           
  3685                           ;Menu.c: 268:     NovaTecla = -1;
  3686  0003BA  686C               	setf	_NovaTecla^0,c
  3687                           
  3688                           ;Menu.c: 269:     state = 20;
  3689  0003BC  0E14               	movlw	20
  3690  0003BE  D7CA               	goto	L1
  3691  0003C0                     l6201:
  3692                           
  3693                           ; BSR set to: 0
  3694  0003C0  0E0A               	movlw	10
  3695  0003C2  D7CA               	goto	L2
  3696  0003C4                     l6205:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;Menu.c: 276:    if (NovaTecla == 11) {
  3700  0003C4  0E0B               	movlw	11
  3701  0003C6  186C               	xorwf	_NovaTecla^0,w,c
  3702  0003C8  E1FB               	bnz	l6201
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;Menu.c: 277:     HActualitzaHora(horaTmp);
  3706  0003CA  0E47               	movlw	low _horaTmp
  3707  0003CC  6E50               	movwf	HActualitzaHora@nova^0,c
  3708  0003CE  EC07  F00C         	call	_HActualitzaHora	;wreg free
  3709                           
  3710                           ;Menu.c: 278:     NovaTecla = -1;
  3711  0003D2  686C               	setf	_NovaTecla^0,c
  3712  0003D4  D703               	goto	u6290
  3713  0003D6                     l6217:
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;Menu.c: 286:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3717  0003D6  0E0A               	movlw	10
  3718  0003D8  186C               	xorwf	_NovaTecla^0,w,c
  3719  0003DA  E103               	bnz	u6670
  3720                           
  3721                           ; BSR set to: 0
  3722  0003DC  ECA6  F00D         	call	_LcLliure	;wreg free
  3723  0003E0  E203               	bc	u6680
  3724  0003E2                     u6670:
  3725  0003E2  EC82  F00D         	call	_checkHoraAcabat	;wreg free
  3726  0003E6  E307               	bnc	l6229
  3727  0003E8                     u6680:
  3728                           
  3729                           ;Menu.c: 287:     LcClear();
  3730  0003E8  ECC9  F00C         	call	_LcClear	;wreg free
  3731                           
  3732                           ;Menu.c: 288:     JendGame();
  3733  0003EC  EC0D  F00E         	call	_JendGame	;wreg free
  3734                           
  3735                           ;Menu.c: 289:     state = 22;
  3736  0003F0  0E16               	movlw	22
  3737  0003F2  6E38               	movwf	menu@state^0,c
  3738                           
  3739                           ;Menu.c: 290:    }
  3740  0003F4  0C16               	retlw	22
  3741  0003F6                     l6229:
  3742  0003F6  506C               	movf	_NovaTecla^0,w,c
  3743  0003F8  0A80               	xorlw	128
  3744  0003FA  0F7F               	addlw	-129
  3745  0003FC  E309               	bnc	l6239
  3746  0003FE  506C               	movf	_NovaTecla^0,w,c
  3747  000400  0A80               	xorlw	128
  3748  000402  0F76               	addlw	-138
  3749  000404  E205               	bc	l6239
  3750                           
  3751                           ;Menu.c: 292:     JnovaTecla(NovaTecla);
  3752  000406  506C               	movf	_NovaTecla^0,w,c
  3753  000408  ECBD  F00D         	call	_JnovaTecla
  3754                           
  3755                           ;Menu.c: 293:     NovaTecla = -1;
  3756  00040C  686C               	setf	_NovaTecla^0,c
  3757  00040E  D747               	goto	l6089
  3758  000410                     l6239:
  3759  000410  BE6A               	btfsc	_novaDireccio^0,7,c
  3760  000412  0012               	return	
  3761                           
  3762                           ;Menu.c: 297:     JnovaDireccio(novaDireccio);
  3763  000414  506A               	movf	_novaDireccio^0,w,c
  3764  000416  ECC1  F00D         	call	_JnovaDireccio
  3765                           
  3766                           ;Menu.c: 298:     novaDireccio = -1;
  3767  00041A  686A               	setf	_novaDireccio^0,c
  3768  00041C  D740               	goto	l6089
  3769  00041E                     l6247:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;Menu.c: 303:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3773  00041E  EC09  F00E         	call	_SIOHaAcabatPuntuacions	;wreg free
  3774  000422  0900               	iorlw	0
  3775  000424  B4D8               	btfsc	status,2,c
  3776  000426  0012               	return	
  3777  000428  0E0B               	movlw	11
  3778  00042A  D796               	goto	L2
  3779  00042C                     l6253:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;Menu.c: 308:    if (LcLliure()) {
  3783  00042C  ECA6  F00D         	call	_LcLliure	;wreg free
  3784  000430  A0D8               	btfss	status,0,c
  3785  000432  0012               	return	
  3786                           
  3787                           ;Menu.c: 309:     LcGotoXY(0,0);
  3788  000434  0E00               	movlw	0
  3789  000436  6E58               	movwf	LcGotoXY@Row^0,c
  3790  000438  EC3B  F00C         	call	_LcGotoXY
  3791                           
  3792                           ;Menu.c: 310:     LcNewString(getArrayShowUsers(menuDalt));
  3793  00043C  503B               	movf	_menuDalt^0,w,c
  3794  00043E  ECFA  F00C         	call	_getArrayShowUsers
  3795  000442  D99E               	call	PL26	;call to abstracted procedure
  3796  000444  ECA0  F00D         	call	_LcNewString	;wreg free
  3797                           
  3798                           ;Menu.c: 311:     menuDalt++;
  3799  000448  2A3B               	incf	_menuDalt^0,f,c
  3800                           
  3801                           ;Menu.c: 312:     state = 24;
  3802  00044A  0E18               	movlw	24
  3803  00044C  6E38               	movwf	menu@state^0,c
  3804  00044E  0C18               	retlw	24
  3805  000450                     l6261:
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;Menu.c: 316:    if (LcLliure()) {
  3809  000450  ECA6  F00D         	call	_LcLliure	;wreg free
  3810  000454  A0D8               	btfss	status,0,c
  3811  000456  0012               	return	
  3812                           
  3813                           ;Menu.c: 317:     if (menuDalt < UgetNumUsuaris()){
  3814  000458  ECFF  F00D         	call	_UgetNumUsuaris	;wreg free
  3815  00045C  603B               	cpfslt	_menuDalt^0,c
  3816  00045E  D00B               	goto	l603
  3817                           
  3818                           ;Menu.c: 318:       LcGotoXY(0,1);
  3819  000460  D994               	call	PL30	;call to abstracted procedure
  3820  000462  EC3B  F00C         	call	_LcGotoXY
  3821                           
  3822                           ;Menu.c: 319:       LcNewString(getArrayShowUsers(menuDalt));
  3823  000466  503B               	movf	_menuDalt^0,w,c
  3824  000468  ECFA  F00C         	call	_getArrayShowUsers
  3825  00046C  D989               	call	PL26	;call to abstracted procedure
  3826  00046E  ECA0  F00D         	call	_LcNewString	;wreg free
  3827                           
  3828                           ;Menu.c: 320:       menuDalt++;
  3829  000472  2A3B               	incf	_menuDalt^0,f,c
  3830                           
  3831                           ;Menu.c: 321:     } else {
  3832  000474  D001               	goto	l6269
  3833  000476                     l603:
  3834                           
  3835                           ;Menu.c: 322:       menuDalt = 0;
  3836  000476  6A3B               	clrf	_menuDalt^0,c
  3837  000478                     l6269:
  3838                           
  3839                           ;Menu.c: 324:     state = 25;
  3840  000478  0E19               	movlw	25
  3841  00047A  6E38               	movwf	menu@state^0,c
  3842  00047C  0C19               	retlw	25
  3843  00047E                     l6271:
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;Menu.c: 328:    if (LcLliure()) {
  3847  00047E  ECA6  F00D         	call	_LcLliure	;wreg free
  3848  000482  A0D8               	btfss	status,0,c
  3849  000484  0012               	return	
  3850                           
  3851                           ;Menu.c: 329:     if (menuDalt == UgetNumUsuaris()){
  3852  000486  ECFF  F00D         	call	_UgetNumUsuaris	;wreg free
  3853  00048A  183B               	xorwf	_menuDalt^0,w,c
  3854  00048C  E101               	bnz	l6277
  3855                           
  3856                           ;Menu.c: 330:       menuDalt = 0;
  3857  00048E  6A3B               	clrf	_menuDalt^0,c
  3858  000490                     l6277:
  3859                           
  3860                           ;Menu.c: 332:     LcGotoXY(16,0);
  3861  000490  D991               	call	PL82	;call to abstracted procedure
  3862  000492  EC3B  F00C         	call	_LcGotoXY
  3863                           
  3864                           ;Menu.c: 333:     LcNewString(getArrayShowUsers(menuDalt));
  3865  000496  503B               	movf	_menuDalt^0,w,c
  3866  000498  ECFA  F00C         	call	_getArrayShowUsers
  3867  00049C  D971               	call	PL26	;call to abstracted procedure
  3868  00049E  ECA0  F00D         	call	_LcNewString	;wreg free
  3869                           
  3870                           ;Menu.c: 334:     state = 26;
  3871  0004A2  0E1A               	movlw	26
  3872  0004A4  6E38               	movwf	menu@state^0,c
  3873  0004A6  0C1A               	retlw	26
  3874  0004A8                     l6281:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;Menu.c: 338:    if (LcLliure()) {
  3878  0004A8  ECA6  F00D         	call	_LcLliure	;wreg free
  3879  0004AC  A0D8               	btfss	status,0,c
  3880  0004AE  0012               	return	
  3881                           
  3882                           ;Menu.c: 339:     if (menuDalt+1 < UgetNumUsuaris()){
  3883  0004B0  ECFF  F00D         	call	_UgetNumUsuaris	;wreg free
  3884  0004B4  0100               	movlb	0	; () banked
  3885  0004B6  6FAA               	movwf	??_menu& (0+255),b
  3886  0004B8  6BAB               	clrf	(??_menu+1)& (0+255),b
  3887  0004BA  503B               	movf	_menuDalt^0,w,c
  3888  0004BC  6FAC               	movwf	(??_menu+2)& (0+255),b
  3889  0004BE  6BAD               	clrf	(??_menu+3)& (0+255),b
  3890  0004C0  2BAC               	incf	(??_menu+2)& (0+255),f,b
  3891  0004C2  0E00               	movlw	0
  3892  0004C4  23AD               	addwfc	(??_menu+3)& (0+255),f,b
  3893  0004C6  51AA               	movf	??_menu& (0+255),w,b
  3894  0004C8  5DAC               	subwf	(??_menu+2)& (0+255),w,b
  3895  0004CA  51AD               	movf	(??_menu+3)& (0+255),w,b
  3896  0004CC  0A80               	xorlw	128
  3897  0004CE  6FAE               	movwf	(??_menu+4)& (0+255),b
  3898  0004D0  51AB               	movf	(??_menu+1)& (0+255),w,b
  3899  0004D2  0A80               	xorlw	128
  3900  0004D4  59AE               	subwfb	(??_menu+4)& (0+255),w,b
  3901  0004D6  E209               	bc	l6287
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;Menu.c: 340:       LcGotoXY(16,1);
  3905  0004D8  D96A               	call	PL80	;call to abstracted procedure
  3906  0004DA  EC3B  F00C         	call	_LcGotoXY
  3907                           
  3908                           ;Menu.c: 341:       LcNewString(getArrayShowUsers(menuDalt+1));
  3909  0004DE  283B               	incf	_menuDalt^0,w,c
  3910  0004E0  ECFA  F00C         	call	_getArrayShowUsers
  3911  0004E4  D94D               	call	PL26	;call to abstracted procedure
  3912  0004E6  ECA0  F00D         	call	_LcNewString	;wreg free
  3913  0004EA                     l6287:
  3914                           
  3915                           ;Menu.c: 343:     state = 27;
  3916  0004EA  0E1B               	movlw	27
  3917  0004EC  6E38               	movwf	menu@state^0,c
  3918  0004EE  0C1B               	retlw	27
  3919  0004F0                     l6289:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;Menu.c: 347:    if (TiGetTics(timerMenu) > 1205) {
  3923  0004F0  503C               	movf	_timerMenu^0,w,c
  3924  0004F2  EC92  F00C         	call	_TiGetTics
  3925  0004F6  BE51               	btfsc	(?_TiGetTics+1)^0,7,c
  3926  0004F8  D008               	goto	l6293
  3927  0004FA  0EB6               	movlw	182
  3928  0004FC  5C50               	subwf	?_TiGetTics^0,w,c
  3929  0004FE  0E04               	movlw	4
  3930  000500  5851               	subwfb	(?_TiGetTics+1)^0,w,c
  3931  000502  E303               	bnc	l6293
  3932                           
  3933                           ;Menu.c: 348:     state = 29;
  3934  000504  0E1D               	movlw	29
  3935  000506  6E38               	movwf	menu@state^0,c
  3936                           
  3937                           ;Menu.c: 349:    }
  3938  000508  0C1D               	retlw	29
  3939  00050A                     l6293:
  3940  00050A  0E0B               	movlw	11
  3941  00050C  186C               	xorwf	_NovaTecla^0,w,c
  3942  00050E  A4D8               	btfss	status,2,c
  3943  000510  0012               	return	
  3944  000512                     u6820:
  3945                           
  3946                           ;Menu.c: 351:     menuDalt = 0;
  3947  000512  6A3B               	clrf	_menuDalt^0,c
  3948  000514  D663               	goto	u6290
  3949  000516                     l6299:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;Menu.c: 356:    if (pos > 15) {
  3953  000516  0E0F               	movlw	15
  3954  000518  6439               	cpfsgt	_pos^0,c
  3955  00051A  D005               	goto	l6305
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;Menu.c: 357:     LcClear();
  3959  00051C  ECC9  F00C         	call	_LcClear	;wreg free
  3960  000520                     l6303:
  3961                           
  3962                           ;Menu.c: 358:     state = 23;
  3963  000520  0E17               	movlw	23
  3964  000522  6E38               	movwf	menu@state^0,c
  3965                           
  3966                           ;Menu.c: 359:    }
  3967  000524  0C17               	retlw	23
  3968  000526                     l6305:
  3969                           
  3970                           ; BSR set to: 0
  3971  000526  0E10               	movlw	16
  3972  000528  6039               	cpfslt	_pos^0,c
  3973  00052A  0C10               	retlw	16
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;Menu.c: 361:     TiResetTics(timerMenu);
  3977  00052C  503C               	movf	_timerMenu^0,w,c
  3978  00052E  EC16  F00D         	call	_TiResetTics
  3979                           
  3980                           ;Menu.c: 362:     LcScroll();
  3981  000532  ECF0  F00D         	call	_LcScroll	;wreg free
  3982                           
  3983                           ;Menu.c: 363:     pos++;
  3984  000536  2A39               	incf	_pos^0,f,c
  3985  000538                     l6313:
  3986                           
  3987                           ;Menu.c: 364:     state = 28;
  3988  000538  0E1C               	movlw	28
  3989  00053A  6E38               	movwf	menu@state^0,c
  3990  00053C  0C1C               	retlw	28
  3991  00053E                     l6315:
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;Menu.c: 368:    if (LcLliure()) {
  3995  00053E  ECA6  F00D         	call	_LcLliure	;wreg free
  3996  000542  A0D8               	btfss	status,0,c
  3997  000544  0012               	return	
  3998                           
  3999                           ;Menu.c: 369:     TiResetTics(timerMenu);
  4000  000546  503C               	movf	_timerMenu^0,w,c
  4001  000548  EC16  F00D         	call	_TiResetTics
  4002                           
  4003                           ;Menu.c: 370:     pos = 0;
  4004  00054C  6A39               	clrf	_pos^0,c
  4005  00054E  D7F4               	goto	l6313
  4006  000550                     l6323:
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;Menu.c: 375:    if (UshowUsersCalculat()) {
  4010  000550  EC88  F00D         	call	_UshowUsersCalculat	;wreg free
  4011  000554  E2E5               	bc	l6303
  4012  000556  0012               	return	
  4013  000558                     l6327:
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;Menu.c: 380:    if (LcLliure()) {
  4017  000558  ECA6  F00D         	call	_LcLliure	;wreg free
  4018  00055C  A0D8               	btfss	status,0,c
  4019  00055E  0012               	return	
  4020                           
  4021                           ;Menu.c: 381:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4022  000560  503B               	movf	_menuDalt^0,w,c
  4023  000562  EC44  F00D         	call	_UgetTop5
  4024  000566  EC3A  F00D         	call	_UgetUserName
  4025  00056A  D912               	call	PL42	;call to abstracted procedure
  4026  00056C  ECA0  F00D         	call	_LcNewString	;wreg free
  4027                           
  4028                           ;Menu.c: 382:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4029  000570  503B               	movf	_menuDalt^0,w,c
  4030  000572  EC44  F00D         	call	_UgetTop5
  4031  000576  EC6F  F00D         	call	_UgetScore
  4032  00057A  EC9A  F00D         	call	_CToAConverteix
  4033                           
  4034                           ;Menu.c: 383:     state = 32;
  4035  00057E  0E20               	movlw	32
  4036  000580  6E38               	movwf	menu@state^0,c
  4037  000582  0C20               	retlw	32
  4038  000584                     l6333:
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;Menu.c: 387:    if (CToAHaAcabat() == 250 && LcLliure()) {
  4042  000584  EC11  F00E         	call	_CToAHaAcabat	;wreg free
  4043  000588  0AFA               	xorlw	250
  4044  00058A  A4D8               	btfss	status,2,c
  4045  00058C  0012               	return	
  4046  00058E  ECA6  F00D         	call	_LcLliure	;wreg free
  4047  000592  A0D8               	btfss	status,0,c
  4048  000594  0012               	return	
  4049                           
  4050                           ;Menu.c: 388:     LcPutChar(':');
  4051  000596  0E3A               	movlw	58
  4052  000598  EC65  F00B         	call	_LcPutChar
  4053                           
  4054                           ;Menu.c: 389:     LcGotoXY(0,1);
  4055  00059C  D8F6               	call	PL30	;call to abstracted procedure
  4056  00059E  EC3B  F00C         	call	_LcGotoXY
  4057                           
  4058                           ;Menu.c: 390:     LcNewString(CToAobtenir());
  4059  0005A2  EC0F  F00E         	call	_CToAobtenir	;wreg free
  4060  0005A6  D8F9               	call	PL46	;call to abstracted procedure
  4061  0005A8  ECA0  F00D         	call	_LcNewString	;wreg free
  4062                           
  4063                           ;Menu.c: 391:     menuDalt++;
  4064  0005AC  2A3B               	incf	_menuDalt^0,f,c
  4065                           
  4066                           ;Menu.c: 392:     if(menuDalt == 5 || UgetTop5(menuDalt) == -1) menuDalt = 0;
  4067  0005AE  0E05               	movlw	5
  4068  0005B0  183B               	xorwf	_menuDalt^0,w,c
  4069  0005B2  E005               	bz	u6910
  4070  0005B4  503B               	movf	_menuDalt^0,w,c
  4071  0005B6  EC44  F00D         	call	_UgetTop5
  4072  0005BA  0AFF               	xorlw	255
  4073  0005BC  E101               	bnz	l6347
  4074  0005BE                     u6910:
  4075  0005BE  6A3B               	clrf	_menuDalt^0,c
  4076  0005C0                     l6347:
  4077                           
  4078                           ;Menu.c: 393:     state = 34;
  4079  0005C0  0E22               	movlw	34
  4080  0005C2  6E38               	movwf	menu@state^0,c
  4081  0005C4  0C22               	retlw	34
  4082  0005C6                     l6349:
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;Menu.c: 397:    if ((UgetTop5(menuDalt) != -1 || menuDalt != 5) && LcLliure()) {
  4086  0005C6  503B               	movf	_menuDalt^0,w,c
  4087  0005C8  EC44  F00D         	call	_UgetTop5
  4088  0005CC  0AFF               	xorlw	255
  4089  0005CE  E104               	bnz	u6930
  4090  0005D0  0E05               	movlw	5
  4091  0005D2  183B               	xorwf	_menuDalt^0,w,c
  4092  0005D4  B4D8               	btfsc	status,2,c
  4093  0005D6  0012               	return	
  4094  0005D8                     u6930:
  4095  0005D8  ECA6  F00D         	call	_LcLliure	;wreg free
  4096  0005DC  A0D8               	btfss	status,0,c
  4097  0005DE  0012               	return	
  4098                           
  4099                           ;Menu.c: 398:     LcGotoXY(16,0);
  4100  0005E0  D8E9               	call	PL82	;call to abstracted procedure
  4101  0005E2  EC3B  F00C         	call	_LcGotoXY
  4102                           
  4103                           ;Menu.c: 399:     LcNewString(UgetUserName(UgetTop5(menuDalt)));
  4104  0005E6  503B               	movf	_menuDalt^0,w,c
  4105  0005E8  EC44  F00D         	call	_UgetTop5
  4106  0005EC  EC3A  F00D         	call	_UgetUserName
  4107  0005F0  D8CF               	call	PL42	;call to abstracted procedure
  4108  0005F2  ECA0  F00D         	call	_LcNewString	;wreg free
  4109                           
  4110                           ;Menu.c: 400:     CToAConverteix(UgetScore(UgetTop5(menuDalt)));
  4111  0005F6  503B               	movf	_menuDalt^0,w,c
  4112  0005F8  EC44  F00D         	call	_UgetTop5
  4113  0005FC  EC6F  F00D         	call	_UgetScore
  4114  000600  EC9A  F00D         	call	_CToAConverteix
  4115                           
  4116                           ;Menu.c: 401:     state = 35;
  4117  000604  0E23               	movlw	35
  4118  000606  6E38               	movwf	menu@state^0,c
  4119  000608  0C23               	retlw	35
  4120  00060A                     l6359:
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;Menu.c: 405:    if (LcLliure() && CToAHaAcabat() == 250) {
  4124  00060A  ECA6  F00D         	call	_LcLliure	;wreg free
  4125  00060E  A0D8               	btfss	status,0,c
  4126  000610  0012               	return	
  4127  000612  EC11  F00E         	call	_CToAHaAcabat	;wreg free
  4128  000616  0AFA               	xorlw	250
  4129  000618  A4D8               	btfss	status,2,c
  4130  00061A  0012               	return	
  4131                           
  4132                           ;Menu.c: 406:     LcPutChar(':');
  4133  00061C  0E3A               	movlw	58
  4134  00061E  EC65  F00B         	call	_LcPutChar
  4135                           
  4136                           ;Menu.c: 407:     LcGotoXY(16,1);
  4137  000622  D8C5               	call	PL80	;call to abstracted procedure
  4138  000624  EC3B  F00C         	call	_LcGotoXY
  4139                           
  4140                           ;Menu.c: 408:     LcNewString(CToAobtenir());
  4141  000628  EC0F  F00E         	call	_CToAobtenir	;wreg free
  4142  00062C  D8B6               	call	PL46	;call to abstracted procedure
  4143  00062E  ECA0  F00D         	call	_LcNewString	;wreg free
  4144                           
  4145                           ;Menu.c: 409:     pos = 0;
  4146  000632  6A39               	clrf	_pos^0,c
  4147                           
  4148                           ;Menu.c: 410:     TiResetTics(timerMenu);
  4149  000634  503C               	movf	_timerMenu^0,w,c
  4150  000636  EC16  F00D         	call	_TiResetTics
  4151  00063A                     l6371:
  4152                           
  4153                           ;Menu.c: 411:     state = 37;
  4154  00063A  0E25               	movlw	37
  4155  00063C  6E38               	movwf	menu@state^0,c
  4156  00063E  0C25               	retlw	37
  4157  000640                     l6373:
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;Menu.c: 415:    if (NovaTecla == 11 && LcLliure()) {
  4161  000640  0E0B               	movlw	11
  4162  000642  186C               	xorwf	_NovaTecla^0,w,c
  4163  000644  E104               	bnz	l6381
  4164                           
  4165                           ; BSR set to: 0
  4166  000646  ECA6  F00D         	call	_LcLliure	;wreg free
  4167  00064A  E301 D762          	bc	u6820
  4168  00064E                     l6381:
  4169  00064E  503C               	movf	_timerMenu^0,w,c
  4170  000650  EC92  F00C         	call	_TiGetTics
  4171  000654  BE51               	btfsc	(?_TiGetTics+1)^0,7,c
  4172  000656  0012               	return	
  4173  000658  0E91               	movlw	145
  4174  00065A  5C50               	subwf	?_TiGetTics^0,w,c
  4175  00065C  0E01               	movlw	1
  4176  00065E  5851               	subwfb	(?_TiGetTics+1)^0,w,c
  4177  000660  A0D8               	btfss	status,0,c
  4178  000662  0012               	return	
  4179  000664  ECA6  F00D         	call	_LcLliure	;wreg free
  4180  000668  A0D8               	btfss	status,0,c
  4181  00066A  0012               	return	
  4182                           
  4183                           ;Menu.c: 420:     state = 38;
  4184  00066C  0E26               	movlw	38
  4185  00066E  6E38               	movwf	menu@state^0,c
  4186  000670  0C26               	retlw	38
  4187  000672                     l6387:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;Menu.c: 424:    if (pos < 16) {
  4191  000672  0E10               	movlw	16
  4192  000674  6039               	cpfslt	_pos^0,c
  4193  000676  D007               	goto	l6397
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;Menu.c: 425:     TiResetTics(timerMenu);
  4197  000678  503C               	movf	_timerMenu^0,w,c
  4198  00067A  EC16  F00D         	call	_TiResetTics
  4199                           
  4200                           ;Menu.c: 426:     LcScroll();
  4201  00067E  ECF0  F00D         	call	_LcScroll	;wreg free
  4202                           
  4203                           ;Menu.c: 427:     pos++;
  4204  000682  2A39               	incf	_pos^0,f,c
  4205  000684  D7DA               	goto	l6371
  4206  000686                     l6397:
  4207                           
  4208                           ; BSR set to: 0
  4209  000686  0E0F               	movlw	15
  4210  000688  6439               	cpfsgt	_pos^0,c
  4211  00068A  0C0F               	retlw	15
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;Menu.c: 431:     LcClear();
  4215  00068C  ECC9  F00C         	call	_LcClear	;wreg free
  4216  000690  D62E               	goto	l6121
  4217  000692                     l6405:
  4218  000692  5038               	movf	menu@state^0,w,c
  4219  000694  0100               	movlb	0	; () banked
  4220  000696  6FAA               	movwf	??_menu& (0+255),b
  4221  000698  6BAB               	clrf	(??_menu+1)& (0+255),b
  4222                           
  4223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4224                           ; Switch size 1, requested type "space"
  4225                           ; Number of cases is 1, Range of values is 0 to 0
  4226                           ; switch strategies available:
  4227                           ; Name         Instructions Cycles
  4228                           ; simple_byte            4     3 (average)
  4229                           ;	Chosen strategy is simple_byte
  4230  00069A  51AB               	movf	(??_menu+1)& (0+255),w,b
  4231  00069C  A4D8               	btfss	status,2,c
  4232  00069E  0012               	return	
  4233                           
  4234                           ; BSR set to: 0
  4235                           ; Switch size 1, requested type "space"
  4236                           ; Number of cases is 37, Range of values is 0 to 38
  4237                           ; switch strategies available:
  4238                           ; Name         Instructions Cycles
  4239                           ; simple_byte          112    57 (average)
  4240                           ;	Chosen strategy is simple_byte
  4241  0006A0  51AA               	movf	??_menu& (0+255),w,b
  4242  0006A2  E101 D4C9          	bz	l5861
  4243  0006A6  0A01               	xorlw	1	; case 1
  4244  0006A8  E101 D4D1          	bz	l5867
  4245  0006AC  0A03               	xorlw	3	; case 2
  4246  0006AE  E101 D4DF          	bz	l5877
  4247  0006B2  0A01               	xorlw	1	; case 3
  4248  0006B4  E101 D4EC          	bz	l509
  4249  0006B8  0A07               	xorlw	7	; case 4
  4250  0006BA  E101 D4F6          	bz	l5897
  4251  0006BE  0A01               	xorlw	1	; case 5
  4252  0006C0  E101 D503          	bz	l5905
  4253  0006C4  0A03               	xorlw	3	; case 6
  4254  0006C6  E101 D50F          	bz	l5915
  4255  0006CA  0A01               	xorlw	1	; case 7
  4256  0006CC  E101 D522          	bz	l5929
  4257  0006D0  0A0F               	xorlw	15	; case 8
  4258  0006D2  E101 D53C          	bz	l5957
  4259  0006D6  0A01               	xorlw	1	; case 9
  4260  0006D8  E101 D54F          	bz	l5971
  4261  0006DC  0A03               	xorlw	3	; case 10
  4262  0006DE  E101 D568          	bz	l6001
  4263  0006E2  0A01               	xorlw	1	; case 11
  4264  0006E4  E101 D56F          	bz	l536
  4265  0006E8  0A07               	xorlw	7	; case 12
  4266  0006EA  E101 D584          	bz	l6021
  4267  0006EE  0A01               	xorlw	1	; case 13
  4268  0006F0  E101 D58D          	bz	l6033
  4269  0006F4  0A03               	xorlw	3	; case 14
  4270  0006F6  E101 D5FD          	bz	l6123
  4271  0006FA  0A01               	xorlw	1	; case 15
  4272  0006FC  E101 D60A          	bz	l6131
  4273  000700  0A1F               	xorlw	31	; case 16
  4274  000702  E101 D613          	bz	l6135
  4275  000706  0A01               	xorlw	1	; case 17
  4276  000708  E101 D62A          	bz	l6155
  4277  00070C  0A03               	xorlw	3	; case 18
  4278  00070E  E101 D639          	bz	l6173
  4279  000712  0A01               	xorlw	1	; case 19
  4280  000714  E101 D645          	bz	l6189
  4281  000718  0A07               	xorlw	7	; case 20
  4282  00071A  E101 D653          	bz	l6205
  4283  00071E  0A01               	xorlw	1	; case 21
  4284  000720  E101 D659          	bz	l6217
  4285  000724  0A03               	xorlw	3	; case 22
  4286  000726  E101 D67A          	bz	l6247
  4287  00072A  0A01               	xorlw	1	; case 23
  4288  00072C  E101 D67E          	bz	l6253
  4289  000730  0A0F               	xorlw	15	; case 24
  4290  000732  E101 D68D          	bz	l6261
  4291  000736  0A01               	xorlw	1	; case 25
  4292  000738  E101 D6A1          	bz	l6271
  4293  00073C  0A03               	xorlw	3	; case 26
  4294  00073E  E101 D6B3          	bz	l6281
  4295  000742  0A01               	xorlw	1	; case 27
  4296  000744  E101 D6FB          	bz	l6315
  4297  000748  0A07               	xorlw	7	; case 28
  4298  00074A  E101 D6D1          	bz	l6289
  4299  00074E  0A01               	xorlw	1	; case 29
  4300  000750  E101 D6E1          	bz	l6299
  4301  000754  0A03               	xorlw	3	; case 30
  4302  000756  E101 D6FB          	bz	l6323
  4303  00075A  0A01               	xorlw	1	; case 31
  4304  00075C  E101 D6FC          	bz	l6327
  4305  000760  0A3F               	xorlw	63	; case 32
  4306  000762  E101 D70F          	bz	l6333
  4307  000766  0A02               	xorlw	2	; case 34
  4308  000768  E101 D72D          	bz	l6349
  4309  00076C  0A01               	xorlw	1	; case 35
  4310  00076E  E101 D74C          	bz	l6359
  4311  000772  0A06               	xorlw	6	; case 37
  4312  000774  E101 D764          	bz	l6373
  4313  000778  0A03               	xorlw	3	; case 38
  4314  00077A  E101 D77A          	bz	l6387
  4315  00077E  0012               	return		;funcret
  4316  000780                     __end_of_menu:
  4317                           	callstack 0
  4318  000780                     PL26:
  4319                           	callstack 24
  4320  000780  C050  F053         	movff	?_getArrayShowUsers,LcNewString@new_s
  4321  000784  C051  F054         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4322  000788  0012               	return	
  4323  00078A                     __end_ofPL26:
  4324                           	callstack 0
  4325  00078A                     PL30:
  4326                           	callstack 24
  4327  00078A  0E01               	movlw	1
  4328  00078C  6E58               	movwf	LcGotoXY@Row^0,c
  4329  00078E  0C00               	retlw	0
  4330  000790                     __end_ofPL30:
  4331                           	callstack 0
  4332  000790                     PL42:
  4333                           	callstack 24
  4334  000790  C050  F053         	movff	?_UgetUserName,LcNewString@new_s
  4335  000794  C051  F054         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4336  000798  0012               	return	
  4337  00079A                     __end_ofPL42:
  4338                           	callstack 0
  4339  00079A                     PL46:
  4340                           	callstack 24
  4341  00079A  0100               	movlb	0	; () banked
  4342  00079C  6FAA               	movwf	??_menu& (0+255),b
  4343  00079E  C0AA  F053         	movff	??_menu,LcNewString@new_s
  4344  0007A2  6A54               	clrf	(LcNewString@new_s+1)^0,c
  4345  0007A4  0012               	return	
  4346  0007A6                     __end_ofPL46:
  4347                           	callstack 0
  4348  0007A6                     PL76:
  4349                           	callstack 24
  4350  0007A6  2A3D               	incf	_tmp^0,f,c
  4351  0007A8  686C               	setf	_NovaTecla^0,c
  4352  0007AA  686B               	setf	_novaLletra^0,c
  4353  0007AC  0012               	return	
  4354  0007AE                     __end_ofPL76:
  4355                           	callstack 0
  4356  0007AE                     PL80:
  4357                           	callstack 24
  4358  0007AE  0E01               	movlw	1
  4359  0007B0  6E58               	movwf	LcGotoXY@Row^0,c
  4360  0007B2  0C10               	retlw	16
  4361  0007B4                     __end_ofPL80:
  4362                           	callstack 0
  4363  0007B4                     PL82:
  4364                           	callstack 24
  4365  0007B4  0E00               	movlw	0
  4366  0007B6  6E58               	movwf	LcGotoXY@Row^0,c
  4367  0007B8  0C10               	retlw	16
  4368  0007BA                     __end_ofPL82:
  4369                           	callstack 0
  4370  0007BA                     PL84:
  4371                           	callstack 24
  4372  0007BA  686C               	setf	_NovaTecla^0,c
  4373  0007BC  686B               	setf	_novaLletra^0,c
  4374  0007BE  6A3D               	clrf	_tmp^0,c
  4375  0007C0  0012               	return	
  4376  0007C2                     __end_ofPL84:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function _getArrayShowUsers *****************
  4380 ;; Defined at:
  4381 ;;		line 61 in file "Usuaris.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  quin            1    wreg     unsigned char 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  quin            1    7[COMRAM] unsigned char 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  2    5[COMRAM] PTR unsigned char 
  4388 ;; Registers used:
  4389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1
  4395 ;;      Params:         2       0       0
  4396 ;;      Locals:         1       0       0
  4397 ;;      Temps:          0       0       0
  4398 ;;      Totals:         3       0       0
  4399 ;;Total ram usage:        3 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; Hardware stack levels required when called: 2
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_menu
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text19
  4410  0019F4                     __ptext19:
  4411                           	callstack 0
  4412  0019F4                     _getArrayShowUsers:
  4413                           	callstack 27
  4414                           
  4415                           ;incstack = 0
  4416                           ;getArrayShowUsers@quin stored from wreg
  4417  0019F4  6E52               	movwf	getArrayShowUsers@quin^0,c
  4418                           
  4419                           ;Usuaris.c: 62:     return usuaris[arrayShowUsers[quin]].username;
  4420  0019F6  5052               	movf	getArrayShowUsers@quin^0,w,c
  4421  0019F8  0F0B               	addlw	low _arrayShowUsers
  4422  0019FA  6ED9               	movwf	fsr2l,c
  4423  0019FC  6ADA               	clrf	fsr2h,c
  4424  0019FE  50DF               	movf	indf2,w,c
  4425  001A00  0D12               	mullw	18
  4426  001A02  0E00               	movlw	low _usuaris
  4427  001A04  24F3               	addwf	243,w,c
  4428  001A06  6E50               	movwf	?_getArrayShowUsers^0,c
  4429  001A08  0E01               	movlw	high _usuaris
  4430  001A0A  20F4               	addwfc	prodh,w,c
  4431  001A0C  6E51               	movwf	(?_getArrayShowUsers+1)^0,c
  4432  001A0E  0012               	return		;funcret
  4433  001A10                     __end_of_getArrayShowUsers:
  4434                           	callstack 0
  4435                           
  4436 ;; *************** function _checkHoraAcabat *****************
  4437 ;; Defined at:
  4438 ;;		line 42 in file "Hora.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;		None               void
  4445 ;; Registers used:
  4446 ;;		status,0
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1
  4452 ;;      Params:         0       0       0
  4453 ;;      Locals:         0       0       0
  4454 ;;      Temps:          0       0       0
  4455 ;;      Totals:         0       0       0
  4456 ;;Total ram usage:        0 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 2
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_menu
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text20
  4467  001B04                     __ptext20:
  4468                           	callstack 0
  4469  001B04                     _checkHoraAcabat:
  4470                           	callstack 27
  4471                           
  4472                           ;Hora.c: 43:     return tempsAcabat;
  4473                           
  4474                           ;incstack = 0
  4475  001B04  B676               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4476  001B06  D002               	goto	l2209
  4477  001B08  90D8               	bcf	status,0,c
  4478  001B0A  0012               	return	
  4479  001B0C                     l2209:
  4480  001B0C  80D8               	bsf	status,0,c
  4481  001B0E  0012               	return		;funcret
  4482  001B10                     __end_of_checkHoraAcabat:
  4483                           	callstack 0
  4484                           
  4485 ;; *************** function _calculateShowUsers *****************
  4486 ;; Defined at:
  4487 ;;		line 147 in file "Usuaris.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		None
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1
  4501 ;;      Params:         0       0       0
  4502 ;;      Locals:         0       0       0
  4503 ;;      Temps:          0       0       0
  4504 ;;      Totals:         0       0       0
  4505 ;;Total ram usage:        0 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 2
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_menu
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text21
  4516  001BFA                     __ptext21:
  4517                           	callstack 0
  4518  001BFA                     _calculateShowUsers:
  4519                           	callstack 27
  4520                           
  4521                           ;Usuaris.c: 148:     do_showUsers = 1;
  4522                           
  4523                           ;incstack = 0
  4524  001BFA  8877               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4525  001BFC  0012               	return		;funcret
  4526  001BFE                     __end_of_calculateShowUsers:
  4527                           	callstack 0
  4528                           
  4529 ;; *************** function _UshowUsersCalculat *****************
  4530 ;; Defined at:
  4531 ;;		line 150 in file "Usuaris.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;		None               void
  4538 ;; Registers used:
  4539 ;;		status,0
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1
  4545 ;;      Params:         0       0       0
  4546 ;;      Locals:         0       0       0
  4547 ;;      Temps:          0       0       0
  4548 ;;      Totals:         0       0       0
  4549 ;;Total ram usage:        0 bytes
  4550 ;; Hardware stack levels used: 1
  4551 ;; Hardware stack levels required when called: 2
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_menu
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text22
  4560  001B10                     __ptext22:
  4561                           	callstack 0
  4562  001B10                     _UshowUsersCalculat:
  4563                           	callstack 27
  4564                           
  4565                           ;Usuaris.c: 151:     return !do_showUsers;
  4566                           
  4567                           ;incstack = 0
  4568  001B10  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4569  001B12  D002               	goto	l2231
  4570  001B14  90D8               	bcf	status,0,c
  4571  001B16  0012               	return	
  4572  001B18                     l2231:
  4573  001B18  80D8               	bsf	status,0,c
  4574  001B1A  0012               	return		;funcret
  4575  001B1C                     __end_of_UshowUsersCalculat:
  4576                           	callstack 0
  4577                           
  4578 ;; *************** function _UgetUserName *****************
  4579 ;; Defined at:
  4580 ;;		line 57 in file "Usuaris.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;  quin            1    wreg     unsigned char 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  quin            1    7[COMRAM] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  2    5[COMRAM] PTR unsigned char 
  4587 ;; Registers used:
  4588 ;;		wreg, status,2, status,0, prodl, prodh
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1
  4594 ;;      Params:         2       0       0
  4595 ;;      Locals:         1       0       0
  4596 ;;      Temps:          0       0       0
  4597 ;;      Totals:         3       0       0
  4598 ;;Total ram usage:        3 bytes
  4599 ;; Hardware stack levels used: 1
  4600 ;; Hardware stack levels required when called: 2
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_menu
  4605 ;;		_motorSIO
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text23
  4610  001A74                     __ptext23:
  4611                           	callstack 0
  4612  001A74                     _UgetUserName:
  4613                           	callstack 27
  4614                           
  4615                           ;incstack = 0
  4616                           ;UgetUserName@quin stored from wreg
  4617  001A74  6E52               	movwf	UgetUserName@quin^0,c
  4618                           
  4619                           ;Usuaris.c: 58:     return usuaris[quin].username;
  4620  001A76  5052               	movf	UgetUserName@quin^0,w,c
  4621  001A78  0D12               	mullw	18
  4622  001A7A  0E00               	movlw	low _usuaris
  4623  001A7C  24F3               	addwf	243,w,c
  4624  001A7E  6E50               	movwf	?_UgetUserName^0,c
  4625  001A80  0E01               	movlw	high _usuaris
  4626  001A82  20F4               	addwfc	prodh,w,c
  4627  001A84  6E51               	movwf	(?_UgetUserName+1)^0,c
  4628  001A86  0012               	return		;funcret
  4629  001A88                     __end_of_UgetUserName:
  4630                           	callstack 0
  4631                           
  4632 ;; *************** function _UgetTop5 *****************
  4633 ;; Defined at:
  4634 ;;		line 297 in file "Usuaris.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  quin            1    wreg     unsigned char 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  quin            1    5[COMRAM] unsigned char 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      char 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1
  4648 ;;      Params:         0       0       0
  4649 ;;      Locals:         1       0       0
  4650 ;;      Temps:          0       0       0
  4651 ;;      Totals:         1       0       0
  4652 ;;Total ram usage:        1 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 2
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_menu
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text24
  4663  001A88                     __ptext24:
  4664                           	callstack 0
  4665  001A88                     _UgetTop5:
  4666                           	callstack 27
  4667                           
  4668                           ;incstack = 0
  4669                           ;UgetTop5@quin stored from wreg
  4670  001A88  6E50               	movwf	UgetTop5@quin^0,c
  4671                           
  4672                           ;Usuaris.c: 298:     return puntuacions[quin].indexStruct;
  4673  001A8A  5050               	movf	UgetTop5@quin^0,w,c
  4674  001A8C  0D02               	mullw	2
  4675  001A8E  50F3               	movf	243,w,c
  4676  001A90  0F01               	addlw	low _puntuacions
  4677  001A92  D000               	goto	PL72	;call to abstracted procedure
  4678  001A94                     __end_of_UgetTop5:
  4679                           	callstack 0
  4680  001A94                     PL72:
  4681                           	callstack 27
  4682  001A94  6ED9               	movwf	fsr2l,c
  4683  001A96  6ADA               	clrf	fsr2h,c
  4684  001A98  50DF               	movf	indf2,w,c
  4685  001A9A  0012               	return		;funcret
  4686  001A9C                     __end_ofPL72:
  4687                           	callstack 0
  4688                           
  4689 ;; *************** function _UgetScore *****************
  4690 ;; Defined at:
  4691 ;;		line 294 in file "Usuaris.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  quin            1    wreg     unsigned char 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  quin            1    5[COMRAM] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      unsigned char 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1
  4705 ;;      Params:         0       0       0
  4706 ;;      Locals:         1       0       0
  4707 ;;      Temps:          0       0       0
  4708 ;;      Totals:         1       0       0
  4709 ;;Total ram usage:        1 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 2
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_menu
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text25
  4720  001ADE                     __ptext25:
  4721                           	callstack 0
  4722  001ADE                     _UgetScore:
  4723                           	callstack 27
  4724                           
  4725                           ;incstack = 0
  4726                           ;UgetScore@quin stored from wreg
  4727  001ADE  6E50               	movwf	UgetScore@quin^0,c
  4728                           
  4729                           ;Usuaris.c: 295:     return puntuacions[quin].score;
  4730  001AE0  5050               	movf	UgetScore@quin^0,w,c
  4731  001AE2  0D02               	mullw	2
  4732  001AE4  50F3               	movf	243,w,c
  4733  001AE6  0F02               	addlw	low (_puntuacions+1)
  4734  001AE8  EF4A  F00D         	goto	PL72	;call to abstracted procedure
  4735  001AEC                     __end_of_UgetScore:
  4736                           	callstack 0
  4737                           
  4738 ;; *************** function _UgetNumUsuaris *****************
  4739 ;; Defined at:
  4740 ;;		line 33 in file "Usuaris.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;		None
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      unsigned char 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1
  4754 ;;      Params:         0       0       0
  4755 ;;      Locals:         0       0       0
  4756 ;;      Temps:          0       0       0
  4757 ;;      Totals:         0       0       0
  4758 ;;Total ram usage:        0 bytes
  4759 ;; Hardware stack levels used: 1
  4760 ;; Hardware stack levels required when called: 2
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_menu
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text26
  4769  001BFE                     __ptext26:
  4770                           	callstack 0
  4771  001BFE                     _UgetNumUsuaris:
  4772                           	callstack 27
  4773                           
  4774                           ;Usuaris.c: 34:     return numUsuaris;
  4775                           
  4776                           ;incstack = 0
  4777  001BFE  5037               	movf	_numUsuaris^0,w,c
  4778  001C00  0012               	return		;funcret
  4779  001C02                     __end_of_UgetNumUsuaris:
  4780                           	callstack 0
  4781                           
  4782 ;; *************** function _UenviaPas *****************
  4783 ;; Defined at:
  4784 ;;		line 49 in file "Usuaris.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  c               1    wreg     unsigned char 
  4787 ;;  pos             1    5[COMRAM] unsigned char 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  c               1    6[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1
  4799 ;;      Params:         1       0       0
  4800 ;;      Locals:         1       0       0
  4801 ;;      Temps:          0       0       0
  4802 ;;      Totals:         2       0       0
  4803 ;;Total ram usage:        2 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 2
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_menu
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text27
  4814  001AAE                     __ptext27:
  4815                           	callstack 0
  4816  001AAE                     _UenviaPas:
  4817                           	callstack 27
  4818                           
  4819                           ;incstack = 0
  4820                           ;UenviaPas@c stored from wreg
  4821  001AAE  6E51               	movwf	UenviaPas@c^0,c
  4822                           
  4823                           ;Usuaris.c: 50:     tmpPassword[pos] = c;
  4824  001AB0  5050               	movf	UenviaPas@pos^0,w,c
  4825  001AB2  0F98               	addlw	low _tmpPassword
  4826  001AB4  6ED9               	movwf	fsr2l,c
  4827  001AB6  6ADA               	clrf	fsr2h,c
  4828  001AB8  C051  FFDF         	movff	UenviaPas@c,indf2
  4829  001ABC  0012               	return		;funcret
  4830  001ABE                     __end_of_UenviaPas:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function _UenviaChar *****************
  4834 ;; Defined at:
  4835 ;;		line 46 in file "Usuaris.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  c               1    wreg     unsigned char 
  4838 ;;  pos             1    5[COMRAM] unsigned char 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  c               1    6[COMRAM] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1
  4850 ;;      Params:         1       0       0
  4851 ;;      Locals:         1       0       0
  4852 ;;      Temps:          0       0       0
  4853 ;;      Totals:         2       0       0
  4854 ;;Total ram usage:        2 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; Hardware stack levels required when called: 2
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_menu
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text28
  4865  001ABE                     __ptext28:
  4866                           	callstack 0
  4867  001ABE                     _UenviaChar:
  4868                           	callstack 27
  4869                           
  4870                           ;incstack = 0
  4871                           ;UenviaChar@c stored from wreg
  4872  001ABE  6E51               	movwf	UenviaChar@c^0,c
  4873                           
  4874                           ;Usuaris.c: 47:     tmpUsername[pos] = c;
  4875  001AC0  5050               	movf	UenviaChar@pos^0,w,c
  4876  001AC2  0FA1               	addlw	low _tmpUsername
  4877  001AC4  6ED9               	movwf	fsr2l,c
  4878  001AC6  6ADA               	clrf	fsr2h,c
  4879  001AC8  C051  FFDF         	movff	UenviaChar@c,indf2
  4880  001ACC  0012               	return		;funcret
  4881  001ACE                     __end_of_UenviaChar:
  4882                           	callstack 0
  4883                           
  4884 ;; *************** function _UcheckExistsNotFinished *****************
  4885 ;; Defined at:
  4886 ;;		line 40 in file "Usuaris.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;		None               void
  4893 ;; Registers used:
  4894 ;;		status,0
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1
  4900 ;;      Params:         0       0       0
  4901 ;;      Locals:         0       0       0
  4902 ;;      Temps:          0       0       0
  4903 ;;      Totals:         0       0       0
  4904 ;;Total ram usage:        0 bytes
  4905 ;; Hardware stack levels used: 1
  4906 ;; Hardware stack levels required when called: 2
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_menu
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	text29
  4915  001B1C                     __ptext29:
  4916                           	callstack 0
  4917  001B1C                     _UcheckExistsNotFinished:
  4918                           	callstack 27
  4919                           
  4920                           ;Usuaris.c: 41:     return do_check_exists;
  4921                           
  4922                           ;incstack = 0
  4923  001B1C  BC77               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4924  001B1E  D002               	goto	l2165
  4925  001B20  90D8               	bcf	status,0,c
  4926  001B22  0012               	return	
  4927  001B24                     l2165:
  4928  001B24  80D8               	bsf	status,0,c
  4929  001B26  0012               	return		;funcret
  4930  001B28                     __end_of_UcheckExistsNotFinished:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function _UcheckExistsGetError *****************
  4934 ;; Defined at:
  4935 ;;		line 43 in file "Usuaris.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      char 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1
  4949 ;;      Params:         0       0       0
  4950 ;;      Locals:         0       0       0
  4951 ;;      Temps:          0       0       0
  4952 ;;      Totals:         0       0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used: 1
  4955 ;; Hardware stack levels required when called: 2
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_menu
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text30
  4964  001C02                     __ptext30:
  4965                           	callstack 0
  4966  001C02                     _UcheckExistsGetError:
  4967                           	callstack 27
  4968                           
  4969                           ;Usuaris.c: 44:     return usuariLoguejat;
  4970                           
  4971                           ;incstack = 0
  4972  001C02  5069               	movf	_usuariLoguejat^0,w,c
  4973  001C04  0012               	return		;funcret
  4974  001C06                     __end_of_UcheckExistsGetError:
  4975                           	callstack 0
  4976                           
  4977 ;; *************** function _UcheckExists *****************
  4978 ;; Defined at:
  4979 ;;		line 37 in file "Usuaris.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;		None
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		None
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1
  4993 ;;      Params:         0       0       0
  4994 ;;      Locals:         0       0       0
  4995 ;;      Temps:          0       0       0
  4996 ;;      Totals:         0       0       0
  4997 ;;Total ram usage:        0 bytes
  4998 ;; Hardware stack levels used: 1
  4999 ;; Hardware stack levels required when called: 2
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_menu
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text31
  5008  001C06                     __ptext31:
  5009                           	callstack 0
  5010  001C06                     _UcheckExists:
  5011                           	callstack 27
  5012                           
  5013                           ;Usuaris.c: 38:     do_check_exists = 1;
  5014                           
  5015                           ;incstack = 0
  5016  001C06  8C77               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5017  001C08  0012               	return		;funcret
  5018  001C0A                     __end_of_UcheckExists:
  5019                           	callstack 0
  5020                           
  5021 ;; *************** function _URegister *****************
  5022 ;; Defined at:
  5023 ;;		line 53 in file "Usuaris.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;		None
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		None
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1
  5037 ;;      Params:         0       0       0
  5038 ;;      Locals:         0       0       0
  5039 ;;      Temps:          0       0       0
  5040 ;;      Totals:         0       0       0
  5041 ;;Total ram usage:        0 bytes
  5042 ;; Hardware stack levels used: 1
  5043 ;; Hardware stack levels required when called: 2
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_menu
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text32
  5052  001C0A                     __ptext32:
  5053                           	callstack 0
  5054  001C0A                     _URegister:
  5055                           	callstack 27
  5056                           
  5057                           ;Usuaris.c: 54:     do_register = 1;
  5058                           
  5059                           ;incstack = 0
  5060  001C0A  8A77               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  5061  001C0C  0012               	return		;funcret
  5062  001C0E                     __end_of_URegister:
  5063                           	callstack 0
  5064                           
  5065 ;; *************** function _SiFerMenu *****************
  5066 ;; Defined at:
  5067 ;;		line 19 in file "GestioLCD.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		None
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1
  5081 ;;      Params:         0       0       0
  5082 ;;      Locals:         0       0       0
  5083 ;;      Temps:          0       0       0
  5084 ;;      Totals:         0       0       0
  5085 ;;Total ram usage:        0 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 2
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_menu
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text33
  5096  001C0E                     __ptext33:
  5097                           	callstack 0
  5098  001C0E                     _SiFerMenu:
  5099                           	callstack 27
  5100                           
  5101                           ;GestioLCD.c: 20:     ferMenu = 1;
  5102                           
  5103                           ;incstack = 0
  5104  001C0E  8277               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5105  001C10  0012               	return		;funcret
  5106  001C12                     __end_of_SiFerMenu:
  5107                           	callstack 0
  5108                           
  5109 ;; *************** function _SMSon *****************
  5110 ;; Defined at:
  5111 ;;		line 128 in file "Ssms.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;		None
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		None
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1
  5125 ;;      Params:         0       0       0
  5126 ;;      Locals:         0       0       0
  5127 ;;      Temps:          0       0       0
  5128 ;;      Totals:         0       0       0
  5129 ;;Total ram usage:        0 bytes
  5130 ;; Hardware stack levels used: 1
  5131 ;; Hardware stack levels required when called: 2
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_menu
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text34
  5140  001C2A                     __ptext34:
  5141                           	callstack 0
  5142  001C2A                     _SMSon:
  5143                           	callstack 27
  5144                           
  5145                           ;incstack = 0
  5146  001C2A  0012               	return		;funcret
  5147  001C2C                     __end_of_SMSon:
  5148                           	callstack 0
  5149                           
  5150 ;; *************** function _SMSoff *****************
  5151 ;; Defined at:
  5152 ;;		line 133 in file "Ssms.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		None
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1
  5166 ;;      Params:         0       0       0
  5167 ;;      Locals:         0       0       0
  5168 ;;      Temps:          0       0       0
  5169 ;;      Totals:         0       0       0
  5170 ;;Total ram usage:        0 bytes
  5171 ;; Hardware stack levels used: 1
  5172 ;; Hardware stack levels required when called: 2
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_menu
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text35
  5181  001C2C                     __ptext35:
  5182                           	callstack 0
  5183  001C2C                     _SMSoff:
  5184                           	callstack 27
  5185                           
  5186                           ;incstack = 0
  5187  001C2C  0012               	return		;funcret
  5188  001C2E                     __end_of_SMSoff:
  5189                           	callstack 0
  5190                           
  5191 ;; *************** function _SIOHaAcabatPuntuacions *****************
  5192 ;; Defined at:
  5193 ;;		line 37 in file "SIO.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      char 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1
  5207 ;;      Params:         0       0       0
  5208 ;;      Locals:         0       0       0
  5209 ;;      Temps:          0       0       0
  5210 ;;      Totals:         0       0       0
  5211 ;;Total ram usage:        0 bytes
  5212 ;; Hardware stack levels used: 1
  5213 ;; Hardware stack levels required when called: 2
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_menu
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text36
  5222  001C12                     __ptext36:
  5223                           	callstack 0
  5224  001C12                     _SIOHaAcabatPuntuacions:
  5225                           	callstack 27
  5226                           
  5227                           ;SIO.c: 38:     return usuariActualSIO;
  5228                           
  5229                           ;incstack = 0
  5230  001C12  5064               	movf	_usuariActualSIO^0,w,c
  5231  001C14  0012               	return		;funcret
  5232  001C16                     __end_of_SIOHaAcabatPuntuacions:
  5233                           	callstack 0
  5234                           
  5235 ;; *************** function _NoFerMenu *****************
  5236 ;; Defined at:
  5237 ;;		line 22 in file "GestioLCD.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;		None
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		None
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1
  5251 ;;      Params:         0       0       0
  5252 ;;      Locals:         0       0       0
  5253 ;;      Temps:          0       0       0
  5254 ;;      Totals:         0       0       0
  5255 ;;Total ram usage:        0 bytes
  5256 ;; Hardware stack levels used: 1
  5257 ;; Hardware stack levels required when called: 2
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_menu
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text37
  5266  001C16                     __ptext37:
  5267                           	callstack 0
  5268  001C16                     _NoFerMenu:
  5269                           	callstack 27
  5270                           
  5271                           ;GestioLCD.c: 23:     ferMenu = 0;
  5272                           
  5273                           ;incstack = 0
  5274  001C16  9277               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5275  001C18  0012               	return		;funcret
  5276  001C1A                     __end_of_NoFerMenu:
  5277                           	callstack 0
  5278                           
  5279 ;; *************** function _LcScroll *****************
  5280 ;; Defined at:
  5281 ;;		line 37 in file "LcTLCD.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      void 
  5288 ;; Registers used:
  5289 ;;		wreg, status,2, status,0, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1
  5295 ;;      Params:         0       0       0
  5296 ;;      Locals:         0       0       0
  5297 ;;      Temps:          0       0       0
  5298 ;;      Totals:         0       0       0
  5299 ;;Total ram usage:        0 bytes
  5300 ;; Hardware stack levels used: 1
  5301 ;; Hardware stack levels required when called: 4
  5302 ;; This function calls:
  5303 ;;		_CantaIR
  5304 ;; This function is called by:
  5305 ;;		_menu
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text38
  5310  001BE0                     __ptext38:
  5311                           	callstack 0
  5312  001BE0                     _LcScroll:
  5313                           	callstack 25
  5314                           
  5315                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5316                           
  5317                           ;incstack = 0
  5318  001BE0  0E18               	movlw	24
  5319  001BE2  EF08  F00D         	goto	_CantaIR
  5320  001BE6                     __end_of_LcScroll:
  5321                           	callstack 0
  5322                           
  5323 ;; *************** function _JnovaTecla *****************
  5324 ;; Defined at:
  5325 ;;		line 16 in file "Joc.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  tecla           1    wreg     char 
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;  tecla           1    5[COMRAM] char 
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  1    wreg      void 
  5332 ;; Registers used:
  5333 ;;		wreg
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1
  5339 ;;      Params:         0       0       0
  5340 ;;      Locals:         1       0       0
  5341 ;;      Temps:          0       0       0
  5342 ;;      Totals:         1       0       0
  5343 ;;Total ram usage:        1 bytes
  5344 ;; Hardware stack levels used: 1
  5345 ;; Hardware stack levels required when called: 2
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_menu
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text39
  5354  001B7A                     __ptext39:
  5355                           	callstack 0
  5356  001B7A                     _JnovaTecla:
  5357                           	callstack 27
  5358                           
  5359                           ;incstack = 0
  5360                           ;JnovaTecla@tecla stored from wreg
  5361  001B7A  6E50               	movwf	JnovaTecla@tecla^0,c
  5362                           
  5363                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5364  001B7C  C050  F065         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5365  001B80  0012               	return		;funcret
  5366  001B82                     __end_of_JnovaTecla:
  5367                           	callstack 0
  5368                           
  5369 ;; *************** function _JnovaDireccio *****************
  5370 ;; Defined at:
  5371 ;;		line 19 in file "Joc.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  dir             1    wreg     unsigned char 
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;  dir             1    5[COMRAM] unsigned char 
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  1    wreg      void 
  5378 ;; Registers used:
  5379 ;;		wreg
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1
  5385 ;;      Params:         0       0       0
  5386 ;;      Locals:         1       0       0
  5387 ;;      Temps:          0       0       0
  5388 ;;      Totals:         1       0       0
  5389 ;;Total ram usage:        1 bytes
  5390 ;; Hardware stack levels used: 1
  5391 ;; Hardware stack levels required when called: 2
  5392 ;; This function calls:
  5393 ;;		Nothing
  5394 ;; This function is called by:
  5395 ;;		_menu
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text40
  5400  001B82                     __ptext40:
  5401                           	callstack 0
  5402  001B82                     _JnovaDireccio:
  5403                           	callstack 27
  5404                           
  5405                           ;incstack = 0
  5406                           ;JnovaDireccio@dir stored from wreg
  5407  001B82  6E50               	movwf	JnovaDireccio@dir^0,c
  5408                           
  5409                           ;Joc.c: 20:     direccioJoc = dir;
  5410  001B84  C050  F01D         	movff	JnovaDireccio@dir,_direccioJoc
  5411  001B88  0012               	return		;funcret
  5412  001B8A                     __end_of_JnovaDireccio:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function _JendGame *****************
  5416 ;; Defined at:
  5417 ;;		line 23 in file "Joc.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		None
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1
  5431 ;;      Params:         0       0       0
  5432 ;;      Locals:         0       0       0
  5433 ;;      Temps:          0       0       0
  5434 ;;      Totals:         0       0       0
  5435 ;;Total ram usage:        0 bytes
  5436 ;; Hardware stack levels used: 1
  5437 ;; Hardware stack levels required when called: 2
  5438 ;; This function calls:
  5439 ;;		Nothing
  5440 ;; This function is called by:
  5441 ;;		_menu
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text41
  5446  001C1A                     __ptext41:
  5447                           	callstack 0
  5448  001C1A                     _JendGame:
  5449                           	callstack 27
  5450                           
  5451                           ;Joc.c: 24:     jugantJoc = 0;
  5452                           
  5453                           ;incstack = 0
  5454  001C1A  9476               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5455  001C1C  0012               	return		;funcret
  5456  001C1E                     __end_of_JendGame:
  5457                           	callstack 0
  5458                           
  5459 ;; *************** function _JJuguem *****************
  5460 ;; Defined at:
  5461 ;;		line 13 in file "Joc.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  usuari          1    wreg     unsigned char 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;  usuari          1    5[COMRAM] unsigned char 
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      void 
  5468 ;; Registers used:
  5469 ;;		wreg
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1
  5475 ;;      Params:         0       0       0
  5476 ;;      Locals:         1       0       0
  5477 ;;      Temps:          0       0       0
  5478 ;;      Totals:         1       0       0
  5479 ;;Total ram usage:        1 bytes
  5480 ;; Hardware stack levels used: 1
  5481 ;; Hardware stack levels required when called: 2
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		_menu
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text42
  5490  001B8A                     __ptext42:
  5491                           	callstack 0
  5492  001B8A                     _JJuguem:
  5493                           	callstack 27
  5494                           
  5495                           ;incstack = 0
  5496                           ;JJuguem@usuari stored from wreg
  5497  001B8A  6E50               	movwf	JJuguem@usuari^0,c
  5498                           
  5499                           ;Joc.c: 14:     usuariJoc = usuari;
  5500  001B8C  C050  F066         	movff	JJuguem@usuari,_usuariJoc
  5501  001B90  0012               	return		;funcret
  5502  001B92                     __end_of_JJuguem:
  5503                           	callstack 0
  5504                           
  5505 ;; *************** function _HActualitzaHora *****************
  5506 ;; Defined at:
  5507 ;;		line 16 in file "Hora.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5510 ;;		 -> horaTmp(4), 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1
  5522 ;;      Params:         1       0       0
  5523 ;;      Locals:         0       0       0
  5524 ;;      Temps:          0       0       0
  5525 ;;      Totals:         1       0       0
  5526 ;;Total ram usage:        1 bytes
  5527 ;; Hardware stack levels used: 1
  5528 ;; Hardware stack levels required when called: 2
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		_menu
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text43
  5537  00180E                     __ptext43:
  5538                           	callstack 0
  5539  00180E                     _HActualitzaHora:
  5540                           	callstack 27
  5541                           
  5542                           ;Hora.c: 17:     hora[0] = nova[0];
  5543                           
  5544                           ;incstack = 0
  5545  00180E  5050               	movf	HActualitzaHora@nova^0,w,c
  5546  001810  6ED9               	movwf	fsr2l,c
  5547  001812  6ADA               	clrf	fsr2h,c
  5548  001814  50DF               	movf	indf2,w,c
  5549  001816  6E6D               	movwf	_hora^0,c
  5550                           
  5551                           ;Hora.c: 18:     hora[1] = nova[1];
  5552  001818  5050               	movf	HActualitzaHora@nova^0,w,c
  5553  00181A  6ED9               	movwf	fsr2l,c
  5554  00181C  6ADA               	clrf	fsr2h,c
  5555  00181E  2AD9               	incf	fsr2l,f,c
  5556  001820  50DF               	movf	indf2,w,c
  5557  001822  6E6E               	movwf	(_hora+1)^0,c
  5558                           
  5559                           ;Hora.c: 19:     hora[3] = nova[2];
  5560  001824  5050               	movf	HActualitzaHora@nova^0,w,c
  5561  001826  6ED9               	movwf	fsr2l,c
  5562  001828  6ADA               	clrf	fsr2h,c
  5563  00182A  0E02               	movlw	2
  5564  00182C  26D9               	addwf	fsr2l,f,c
  5565  00182E  50DF               	movf	indf2,w,c
  5566  001830  6E70               	movwf	(_hora+3)^0,c
  5567                           
  5568                           ;Hora.c: 20:     hora[4] = nova[3];
  5569  001832  5050               	movf	HActualitzaHora@nova^0,w,c
  5570  001834  6ED9               	movwf	fsr2l,c
  5571  001836  6ADA               	clrf	fsr2h,c
  5572  001838  0E03               	movlw	3
  5573  00183A  26D9               	addwf	fsr2l,f,c
  5574  00183C  50DF               	movf	indf2,w,c
  5575  00183E  6E71               	movwf	(_hora+4)^0,c
  5576  001840  0012               	return		;funcret
  5577  001842                     __end_of_HActualitzaHora:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function _GLCDMostraMenu *****************
  5581 ;; Defined at:
  5582 ;;		line 30 in file "GestioLCD.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  num             1    wreg     unsigned char 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  num             1    5[COMRAM] unsigned char 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		wreg
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1
  5596 ;;      Params:         0       0       0
  5597 ;;      Locals:         1       0       0
  5598 ;;      Temps:          0       0       0
  5599 ;;      Totals:         1       0       0
  5600 ;;Total ram usage:        1 bytes
  5601 ;; Hardware stack levels used: 1
  5602 ;; Hardware stack levels required when called: 2
  5603 ;; This function calls:
  5604 ;;		Nothing
  5605 ;; This function is called by:
  5606 ;;		_menu
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           	psect	text44
  5611  001B28                     __ptext44:
  5612                           	callstack 0
  5613  001B28                     _GLCDMostraMenu:
  5614                           	callstack 27
  5615                           
  5616                           ;incstack = 0
  5617                           ;GLCDMostraMenu@num stored from wreg
  5618  001B28  6E50               	movwf	GLCDMostraMenu@num^0,c
  5619                           
  5620                           ;GestioLCD.c: 31:     newString = 1;
  5621  001B2A  8077               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5622                           
  5623                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5624  001B2C  C050  F02B         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5625                           
  5626                           ;GestioLCD.c: 33:     ferMenu = 1;
  5627  001B30  8277               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5628  001B32  0012               	return		;funcret
  5629  001B34                     __end_of_GLCDMostraMenu:
  5630                           	callstack 0
  5631                           
  5632 ;; *************** function _CToAobtenir *****************
  5633 ;; Defined at:
  5634 ;;		line 7 in file "CtoA.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      PTR unsigned char 
  5641 ;; Registers used:
  5642 ;;		wreg
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1
  5648 ;;      Params:         2       0       0
  5649 ;;      Locals:         0       0       0
  5650 ;;      Temps:          0       0       0
  5651 ;;      Totals:         2       0       0
  5652 ;;Total ram usage:        2 bytes
  5653 ;; Hardware stack levels used: 1
  5654 ;; Hardware stack levels required when called: 2
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_menu
  5659 ;;		_motorSIO
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text45
  5664  001C1E                     __ptext45:
  5665                           	callstack 0
  5666  001C1E                     _CToAobtenir:
  5667                           	callstack 27
  5668                           
  5669                           ;CtoA.c: 8:     return stringScore;
  5670                           
  5671                           ;incstack = 0
  5672  001C1E  0E73               	movlw	_stringScore& (0+255)
  5673  001C20  0012               	return		;funcret
  5674  001C22                     __end_of_CToAobtenir:
  5675                           	callstack 0
  5676                           
  5677 ;; *************** function _CToAHaAcabat *****************
  5678 ;; Defined at:
  5679 ;;		line 10 in file "CtoA.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;		None
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      unsigned char 
  5686 ;; Registers used:
  5687 ;;		wreg, status,2
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1
  5693 ;;      Params:         0       0       0
  5694 ;;      Locals:         0       0       0
  5695 ;;      Temps:          0       0       0
  5696 ;;      Totals:         0       0       0
  5697 ;;Total ram usage:        0 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 2
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_menu
  5704 ;;		_motorSIO
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text46
  5709  001C22                     __ptext46:
  5710                           	callstack 0
  5711  001C22                     _CToAHaAcabat:
  5712                           	callstack 27
  5713                           
  5714                           ;CtoA.c: 11:     return convertir;
  5715                           
  5716                           ;incstack = 0
  5717  001C22  5061               	movf	_convertir^0,w,c
  5718  001C24  0012               	return		;funcret
  5719  001C26                     __end_of_CToAHaAcabat:
  5720                           	callstack 0
  5721                           
  5722 ;; *************** function _CToAConverteix *****************
  5723 ;; Defined at:
  5724 ;;		line 14 in file "CtoA.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  numero          1    wreg     unsigned char 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  numero          1    5[COMRAM] unsigned char 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, status,2, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1
  5738 ;;      Params:         0       0       0
  5739 ;;      Locals:         1       0       0
  5740 ;;      Temps:          0       0       0
  5741 ;;      Totals:         1       0       0
  5742 ;;Total ram usage:        1 bytes
  5743 ;; Hardware stack levels used: 1
  5744 ;; Hardware stack levels required when called: 3
  5745 ;; This function calls:
  5746 ;;		_CToAReset
  5747 ;; This function is called by:
  5748 ;;		_menu
  5749 ;;		_motorSIO
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text47
  5754  001B34                     __ptext47:
  5755                           	callstack 0
  5756  001B34                     _CToAConverteix:
  5757                           	callstack 26
  5758                           
  5759                           ;incstack = 0
  5760                           ;CToAConverteix@numero stored from wreg
  5761  001B34  6E50               	movwf	CToAConverteix@numero^0,c
  5762                           
  5763                           ;CtoA.c: 15:     CToAReset();
  5764  001B36  ECC9  F00D         	call	_CToAReset	;wreg free
  5765                           
  5766                           ;CtoA.c: 16:     convertir = numero;
  5767  001B3A  C050  F061         	movff	CToAConverteix@numero,_convertir
  5768  001B3E  0012               	return		;funcret
  5769  001B40                     __end_of_CToAConverteix:
  5770                           	callstack 0
  5771                           
  5772 ;; *************** function _CToAReset *****************
  5773 ;; Defined at:
  5774 ;;		line 18 in file "CtoA.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;		None
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      void 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1
  5788 ;;      Params:         0       0       0
  5789 ;;      Locals:         0       0       0
  5790 ;;      Temps:          0       0       0
  5791 ;;      Totals:         0       0       0
  5792 ;;Total ram usage:        0 bytes
  5793 ;; Hardware stack levels used: 1
  5794 ;; Hardware stack levels required when called: 2
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_CToAConverteix
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text48
  5803  001B92                     __ptext48:
  5804                           	callstack 0
  5805  001B92                     _CToAReset:
  5806                           	callstack 26
  5807                           
  5808                           ;CtoA.c: 19:     stringScore[0] = '0';
  5809                           
  5810                           ;incstack = 0
  5811  001B92  0E30               	movlw	48
  5812  001B94  6E73               	movwf	_stringScore^0,c
  5813                           
  5814                           ;CtoA.c: 20:     stringScore[1] = '0';
  5815  001B96  6E74               	movwf	(_stringScore+1)^0,c
  5816  001B98  0C30               	retlw	48	;funcret
  5817  001B9A                     __end_of_CToAReset:
  5818                           	callstack 0
  5819                           
  5820 ;; *************** function _init_ports *****************
  5821 ;; Defined at:
  5822 ;;		line 25 in file "main.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;		None
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      void 
  5829 ;; Registers used:
  5830 ;;		wreg, status,2
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1
  5836 ;;      Params:         0       0       0
  5837 ;;      Locals:         0       0       0
  5838 ;;      Temps:          0       0       0
  5839 ;;      Totals:         0       0       0
  5840 ;;Total ram usage:        0 bytes
  5841 ;; Hardware stack levels used: 1
  5842 ;; Hardware stack levels required when called: 2
  5843 ;; This function calls:
  5844 ;;		Nothing
  5845 ;; This function is called by:
  5846 ;;		_main
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text49
  5851  0019D6                     __ptext49:
  5852                           	callstack 0
  5853  0019D6                     _init_ports:
  5854                           	callstack 28
  5855                           
  5856                           ;incstack = 0
  5857  0019D6  0E03               	movlw	3
  5858  0019D8  6E92               	movwf	146,c	;volatile
  5859  0019DA  0EE0               	movlw	224
  5860  0019DC  6E93               	movwf	147,c	;volatile
  5861  0019DE  968A               	bcf	138,3,c	;volatile
  5862  0019E0  908A               	bcf	138,0,c	;volatile
  5863  0019E2  928A               	bcf	138,1,c	;volatile
  5864                           
  5865                           ;main.c: 49:     TRISC = 0xC0;
  5866  0019E4  0EC0               	movlw	192
  5867  0019E6  6E94               	movwf	148,c	;volatile
  5868                           
  5869                           ;main.c: 59:     TRISD = 0x8F;
  5870  0019E8  0E8F               	movlw	143
  5871  0019EA  6E95               	movwf	149,c	;volatile
  5872                           
  5873                           ;main.c: 60:     LATD = 0x00;
  5874  0019EC  6A8C               	clrf	140,c	;volatile
  5875                           
  5876                           ;main.c: 63:     EECON1bits.EEPGD = 1;
  5877  0019EE  8EA6               	bsf	166,7,c	;volsfr
  5878                           
  5879                           ;main.c: 64:     EECON1bits.CFGS = 0;
  5880  0019F0  9CA6               	bcf	166,6,c	;volsfr
  5881  0019F2  0012               	return		;funcret
  5882  0019F4                     __end_of_init_ports:
  5883                           	callstack 0
  5884                           
  5885 ;; *************** function _init_eusart *****************
  5886 ;; Defined at:
  5887 ;;		line 67 in file "main.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;		None
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1    wreg      void 
  5894 ;; Registers used:
  5895 ;;		wreg, status,2
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMRAM   BANK0   BANK1
  5901 ;;      Params:         0       0       0
  5902 ;;      Locals:         0       0       0
  5903 ;;      Temps:          0       0       0
  5904 ;;      Totals:         0       0       0
  5905 ;;Total ram usage:        0 bytes
  5906 ;; Hardware stack levels used: 1
  5907 ;; Hardware stack levels required when called: 2
  5908 ;; This function calls:
  5909 ;;		Nothing
  5910 ;; This function is called by:
  5911 ;;		_main
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text50
  5916  001A48                     __ptext50:
  5917                           	callstack 0
  5918  001A48                     _init_eusart:
  5919                           	callstack 28
  5920                           
  5921                           ;main.c: 68:     TXSTA = 0x24;
  5922                           
  5923                           ;incstack = 0
  5924  001A48  0E24               	movlw	36
  5925  001A4A  6EAC               	movwf	172,c	;volatile
  5926                           
  5927                           ;main.c: 69:     RCSTA = 0x90;
  5928  001A4C  0E90               	movlw	144
  5929  001A4E  6EAB               	movwf	171,c	;volatile
  5930                           
  5931                           ;main.c: 70:     BAUDCON = 0x08;
  5932  001A50  0E08               	movlw	8
  5933  001A52  6EB8               	movwf	184,c	;volatile
  5934                           
  5935                           ;main.c: 71:     SPBRGH = 0x04;
  5936  001A54  0E04               	movlw	4
  5937  001A56  6EB0               	movwf	176,c	;volatile
  5938                           
  5939                           ;main.c: 72:     SPBRG = 0x10;
  5940  001A58  0E10               	movlw	16
  5941  001A5A  6EAF               	movwf	175,c	;volatile
  5942  001A5C  0C10               	retlw	16	;funcret
  5943  001A5E                     __end_of_init_eusart:
  5944                           	callstack 0
  5945                           
  5946 ;; *************** function _initSIO *****************
  5947 ;; Defined at:
  5948 ;;		line 19 in file "SIO.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;		None
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  1    wreg      void 
  5955 ;; Registers used:
  5956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1
  5962 ;;      Params:         0       0       0
  5963 ;;      Locals:         0       0       0
  5964 ;;      Temps:          0       0       0
  5965 ;;      Totals:         0       0       0
  5966 ;;Total ram usage:        0 bytes
  5967 ;; Hardware stack levels used: 1
  5968 ;; Hardware stack levels required when called: 3
  5969 ;; This function calls:
  5970 ;;		_TiGetTimer
  5971 ;; This function is called by:
  5972 ;;		_main
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text51
  5977  001B9A                     __ptext51:
  5978                           	callstack 0
  5979  001B9A                     _initSIO:
  5980                           	callstack 27
  5981                           
  5982                           ;SIO.c: 20:     timerSIO = TiGetTimer();
  5983                           
  5984                           ;incstack = 0
  5985  001B9A  EC55  F00C         	call	_TiGetTimer	;wreg free
  5986  001B9E  6E1B               	movwf	_timerSIO^0,c
  5987  001BA0  0012               	return		;funcret
  5988  001BA2                     __end_of_initSIO:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _initHora *****************
  5992 ;; Defined at:
  5993 ;;		line 12 in file "Hora.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;		None
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;		None
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      void 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1
  6007 ;;      Params:         0       0       0
  6008 ;;      Locals:         0       0       0
  6009 ;;      Temps:          0       0       0
  6010 ;;      Totals:         0       0       0
  6011 ;;Total ram usage:        0 bytes
  6012 ;; Hardware stack levels used: 1
  6013 ;; Hardware stack levels required when called: 3
  6014 ;; This function calls:
  6015 ;;		_TiGetTimer
  6016 ;; This function is called by:
  6017 ;;		_main
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text52
  6022  001BA2                     __ptext52:
  6023                           	callstack 0
  6024  001BA2                     _initHora:
  6025                           	callstack 27
  6026                           
  6027                           ;Hora.c: 13:     timerHora = TiGetTimer();
  6028                           
  6029                           ;incstack = 0
  6030  001BA2  EC55  F00C         	call	_TiGetTimer	;wreg free
  6031  001BA6  6E20               	movwf	_timerHora^0,c
  6032  001BA8  0012               	return		;funcret
  6033  001BAA                     __end_of_initHora:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _initAltaveu *****************
  6037 ;; Defined at:
  6038 ;;		line 10 in file "Altaveu.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1
  6052 ;;      Params:         0       0       0
  6053 ;;      Locals:         0       0       0
  6054 ;;      Temps:          0       0       0
  6055 ;;      Totals:         0       0       0
  6056 ;;Total ram usage:        0 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 3
  6059 ;; This function calls:
  6060 ;;		_TiGetTimer
  6061 ;; This function is called by:
  6062 ;;		_main
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text53
  6067  001BAA                     __ptext53:
  6068                           	callstack 0
  6069  001BAA                     _initAltaveu:
  6070                           	callstack 27
  6071                           
  6072                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  6073                           
  6074                           ;incstack = 0
  6075  001BAA  EC55  F00C         	call	_TiGetTimer	;wreg free
  6076  001BAE  6E2F               	movwf	_timerAltaveu^0,c
  6077  001BB0  0012               	return		;funcret
  6078  001BB2                     __end_of_initAltaveu:
  6079                           	callstack 0
  6080                           
  6081 ;; *************** function _UmotorUsers *****************
  6082 ;; Defined at:
  6083 ;;		line 154 in file "Usuaris.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;		None
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1
  6097 ;;      Params:         0       0       0
  6098 ;;      Locals:         0       0       0
  6099 ;;      Temps:          2       0       0
  6100 ;;      Totals:         2       0       0
  6101 ;;Total ram usage:        2 bytes
  6102 ;; Hardware stack levels used: 1
  6103 ;; Hardware stack levels required when called: 3
  6104 ;; This function calls:
  6105 ;;		_compareStrings
  6106 ;;		_escriureCharEEPROM
  6107 ;; This function is called by:
  6108 ;;		_main
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text54
  6113  000A54                     __ptext54:
  6114                           	callstack 0
  6115  000A54                     _UmotorUsers:
  6116                           	callstack 27
  6117                           
  6118                           ;Usuaris.c: 155:     static char state = 0;;Usuaris.c: 157:  switch(state) {
  6119                           
  6120                           ;incstack = 0
  6121  000A54  D0FC               	goto	l5697
  6122  000A56                     l763:
  6123                           
  6124                           ;Usuaris.c: 159:    if (!do_check_exists && !do_register && !do_showUsers && !do_updateS
      +                          core) {
  6125  000A56  AC77               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6126  000A58  BA77               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  6127  000A5A  D006               	goto	l764
  6128  000A5C  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6129  000A5E  B677               	btfsc	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6130  000A60  D003               	goto	l764
  6131                           
  6132                           ;Usuaris.c: 160:     i = 0;
  6133  000A62  6A34               	clrf	_i^0,c
  6134                           
  6135                           ;Usuaris.c: 161:     j = 0;
  6136  000A64  6A33               	clrf	_j^0,c
  6137                           
  6138                           ;Usuaris.c: 162:    }
  6139  000A66  0012               	return	
  6140  000A68                     l764:
  6141  000A68  AC77               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6142  000A6A  D004               	goto	l766
  6143                           
  6144                           ;Usuaris.c: 164:     usuariLoguejat = -1;
  6145  000A6C  6869               	setf	_usuariLoguejat^0,c
  6146  000A6E                     l5539:
  6147                           
  6148                           ;Usuaris.c: 165:     state = 1;
  6149  000A6E  0E01               	movlw	1
  6150  000A70  6E31               	movwf	UmotorUsers@state^0,c
  6151                           
  6152                           ;Usuaris.c: 166:    }
  6153  000A72  0C01               	retlw	1
  6154  000A74                     l766:
  6155  000A74  AA77               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  6156  000A76  D00B               	goto	l768
  6157                           
  6158                           ;Usuaris.c: 168:     if(numUsuaris != 8) numUsuaris++;
  6159  000A78  0E08               	movlw	8
  6160  000A7A  1837               	xorwf	_numUsuaris^0,w,c
  6161  000A7C  E001               	bz	l5545
  6162  000A7E  2A37               	incf	_numUsuaris^0,f,c
  6163  000A80                     l5545:
  6164                           
  6165                           ;Usuaris.c: 170:     escriureCharEEPROM(numUsuaris,0);
  6166  000A80  6A50               	clrf	escriureCharEEPROM@pos^0,c
  6167  000A82  5037               	movf	_numUsuaris^0,w,c
  6168  000A84  EC7F  F00C         	call	_escriureCharEEPROM
  6169  000A88                     l5547:
  6170                           
  6171                           ;Usuaris.c: 171:     state = 2;
  6172  000A88  0E02               	movlw	2
  6173  000A8A  6E31               	movwf	UmotorUsers@state^0,c
  6174                           
  6175                           ;Usuaris.c: 172:    }
  6176  000A8C  0C02               	retlw	2
  6177  000A8E                     l768:
  6178  000A8E  A877               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6179  000A90  D015               	goto	l771
  6180                           
  6181                           ;Usuaris.c: 174:     arrayShowUsers[0] = usuariLoguejat;
  6182  000A92  C069  F00B         	movff	_usuariLoguejat,_arrayShowUsers
  6183                           
  6184                           ;Usuaris.c: 175:     arrayShowUsers[1] = -1;
  6185  000A96  680C               	setf	(_arrayShowUsers+1)^0,c
  6186                           
  6187                           ;Usuaris.c: 176:     arrayShowUsers[2] = -1;
  6188  000A98  680D               	setf	(_arrayShowUsers+2)^0,c
  6189                           
  6190                           ;Usuaris.c: 177:     arrayShowUsers[3] = -1;
  6191  000A9A  680E               	setf	(_arrayShowUsers+3)^0,c
  6192                           
  6193                           ;Usuaris.c: 178:     arrayShowUsers[4] = -1;
  6194  000A9C  680F               	setf	(_arrayShowUsers+4)^0,c
  6195                           
  6196                           ;Usuaris.c: 179:     arrayShowUsers[5] = -1;
  6197  000A9E  6810               	setf	(_arrayShowUsers+5)^0,c
  6198                           
  6199                           ;Usuaris.c: 180:     arrayShowUsers[6] = -1;
  6200  000AA0  6811               	setf	(_arrayShowUsers+6)^0,c
  6201                           
  6202                           ;Usuaris.c: 181:     arrayShowUsers[7] = -1;
  6203  000AA2  6812               	setf	(_arrayShowUsers+7)^0,c
  6204                           
  6205                           ;Usuaris.c: 182:     i = 1;
  6206  000AA4  0E01               	movlw	1
  6207  000AA6  6E34               	movwf	_i^0,c
  6208                           
  6209                           ;Usuaris.c: 183:     if(numUsuaris < 7) {
  6210  000AA8  0E07               	movlw	7
  6211  000AAA  6037               	cpfslt	_numUsuaris^0,c
  6212  000AAC  D002               	goto	l772
  6213  000AAE                     u5630:
  6214                           
  6215                           ;Usuaris.c: 184:       j = 0;
  6216  000AAE  6A33               	clrf	_j^0,c
  6217                           
  6218                           ;Usuaris.c: 185:     }
  6219  000AB0  D002               	goto	l5557
  6220  000AB2                     l772:
  6221                           
  6222                           ;Usuaris.c: 187:       j = indexNextUserStruct;
  6223  000AB2  C035  F033         	movff	_indexNextUserStruct,_j
  6224  000AB6                     l5557:
  6225                           
  6226                           ;Usuaris.c: 189:     state = 5;
  6227  000AB6  0E05               	movlw	5
  6228  000AB8  6E31               	movwf	UmotorUsers@state^0,c
  6229                           
  6230                           ;Usuaris.c: 190:    }
  6231  000ABA  0C05               	retlw	5
  6232  000ABC                     l771:
  6233  000ABC  A677               	btfss	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6234  000ABE  0012               	return	
  6235                           
  6236                           ;Usuaris.c: 192:     do_updateScore = 0;
  6237  000AC0  9677               	bcf	(_do_updateScore/(0+8))^0,_do_updateScore& (0+7),c
  6238  000AC2                     l5561:
  6239                           
  6240                           ;Usuaris.c: 193:     state = 6;
  6241  000AC2  0E06               	movlw	6
  6242  000AC4  6E31               	movwf	UmotorUsers@state^0,c
  6243  000AC6  0C06               	retlw	6
  6244  000AC8                     l5563:
  6245                           
  6246                           ;Usuaris.c: 197:    if (i < numUsuaris) {
  6247  000AC8  5037               	movf	_numUsuaris^0,w,c
  6248  000ACA  5C34               	subwf	_i^0,w,c
  6249  000ACC  E212               	bc	l5573
  6250                           
  6251                           ;Usuaris.c: 198:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  6252  000ACE  0EA1               	movlw	low _tmpUsername
  6253  000AD0  6E50               	movwf	compareStrings@a^0,c
  6254  000AD2  5034               	movf	_i^0,w,c
  6255  000AD4  0D12               	mullw	18
  6256  000AD6  0E00               	movlw	low _usuaris
  6257  000AD8  24F3               	addwf	243,w,c
  6258  000ADA  6E51               	movwf	compareStrings@b^0,c
  6259  000ADC  0E01               	movlw	high _usuaris
  6260  000ADE  20F4               	addwfc	prodh,w,c
  6261  000AE0  6E52               	movwf	(compareStrings@b+1)^0,c
  6262  000AE2  ECAD  F00B         	call	_compareStrings	;wreg free
  6263  000AE6  0900               	iorlw	0
  6264  000AE8  E102               	bnz	l5569
  6265                           
  6266                           ;Usuaris.c: 199:      usuariLoguejat = i;
  6267  000AEA  C034  F069         	movff	_i,_usuariLoguejat
  6268  000AEE                     l5569:
  6269                           
  6270                           ;Usuaris.c: 202:     i++;
  6271  000AEE  2A34               	incf	_i^0,f,c
  6272  000AF0  D7BE               	goto	l5539
  6273  000AF2                     l5573:
  6274  000AF2  5037               	movf	_numUsuaris^0,w,c
  6275  000AF4  1834               	xorwf	_i^0,w,c
  6276  000AF6  A4D8               	btfss	status,2,c
  6277  000AF8  0012               	return	
  6278                           
  6279                           ;Usuaris.c: 206:     do_check_exists = 0;
  6280  000AFA  9C77               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  6281                           
  6282                           ;Usuaris.c: 207:     state = 0;
  6283  000AFC  6A31               	clrf	UmotorUsers@state^0,c
  6284  000AFE  0012               	return	
  6285  000B00                     l5577:
  6286                           
  6287                           ;Usuaris.c: 211:    if (i < 9) {
  6288  000B00  0E09               	movlw	9
  6289  000B02  6034               	cpfslt	_i^0,c
  6290  000B04  D00D               	goto	l5589
  6291                           
  6292                           ;Usuaris.c: 212:     escriureCharEEPROM(tmpUsername[i],indexNextUser);
  6293  000B06  C036  F050         	movff	_indexNextUser,escriureCharEEPROM@pos
  6294  000B0A  5034               	movf	_i^0,w,c
  6295  000B0C  0FA1               	addlw	low _tmpUsername
  6296  000B0E  D8DF               	call	PL78	;call to abstracted procedure
  6297  000B10  EC7F  F00C         	call	_escriureCharEEPROM
  6298                           
  6299                           ;Usuaris.c: 213:     indexNextUser++;
  6300  000B14  2A36               	incf	_indexNextUser^0,f,c
  6301                           
  6302                           ;Usuaris.c: 214:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  6303  000B16  5034               	movf	_i^0,w,c
  6304  000B18  0FA1               	addlw	low _tmpUsername
  6305  000B1A  D8D0               	call	PL20	;call to abstracted procedure
  6306                           
  6307                           ;Usuaris.c: 215:     i++;
  6308  000B1C  D8BA               	call	PL14	;call to abstracted procedure
  6309  000B1E  D7B4               	goto	l5547
  6310  000B20                     l5589:
  6311  000B20  0E08               	movlw	8
  6312  000B22  6434               	cpfsgt	_i^0,c
  6313  000B24  0C08               	retlw	8
  6314                           
  6315                           ;Usuaris.c: 219:     i = 0;
  6316  000B26  6A34               	clrf	_i^0,c
  6317  000B28                     l5593:
  6318                           
  6319                           ;Usuaris.c: 220:     state = 3;
  6320  000B28  0E03               	movlw	3
  6321  000B2A  6E31               	movwf	UmotorUsers@state^0,c
  6322  000B2C  0C03               	retlw	3
  6323  000B2E                     l5595:
  6324                           
  6325                           ;Usuaris.c: 224:    if (i < 9) {
  6326  000B2E  0E09               	movlw	9
  6327  000B30  6034               	cpfslt	_i^0,c
  6328  000B32  D011               	goto	l5607
  6329                           
  6330                           ;Usuaris.c: 225:     escriureCharEEPROM(tmpPassword[i],indexNextUser);
  6331  000B34  C036  F050         	movff	_indexNextUser,escriureCharEEPROM@pos
  6332  000B38  5034               	movf	_i^0,w,c
  6333  000B3A  0F98               	addlw	low _tmpPassword
  6334  000B3C  D8C8               	call	PL78	;call to abstracted procedure
  6335  000B3E  EC7F  F00C         	call	_escriureCharEEPROM
  6336                           
  6337                           ;Usuaris.c: 226:     indexNextUser++;
  6338  000B42  2A36               	incf	_indexNextUser^0,f,c
  6339                           
  6340                           ;Usuaris.c: 227:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  6341  000B44  5034               	movf	_i^0,w,c
  6342  000B46  0F98               	addlw	low _tmpPassword
  6343  000B48  D8B9               	call	PL20	;call to abstracted procedure
  6344  000B4A  0E09               	movlw	9
  6345  000B4C  2655               	addwf	??_UmotorUsers^0,f,c
  6346  000B4E  0E00               	movlw	0
  6347  000B50  2256               	addwfc	(??_UmotorUsers+1)^0,f,c
  6348                           
  6349                           ;Usuaris.c: 228:     i++;
  6350  000B52  D89F               	call	PL14	;call to abstracted procedure
  6351  000B54  D7E9               	goto	l5593
  6352  000B56                     l5607:
  6353  000B56  0E08               	movlw	8
  6354  000B58  6434               	cpfsgt	_i^0,c
  6355  000B5A  0C08               	retlw	8
  6356                           
  6357                           ;Usuaris.c: 232:     do_register = 0;
  6358  000B5C  9A77               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6359                           
  6360                           ;Usuaris.c: 233:     if(indexNextUser == 159) indexNextUser = 16;
  6361  000B5E  0E9F               	movlw	159
  6362  000B60  1836               	xorwf	_indexNextUser^0,w,c
  6363  000B62  E102               	bnz	l5615
  6364  000B64  0E10               	movlw	16
  6365  000B66  6E36               	movwf	_indexNextUser^0,c
  6366  000B68                     l5615:
  6367                           
  6368                           ;Usuaris.c: 234:     indexNextUserStruct++;
  6369  000B68  2A35               	incf	_indexNextUserStruct^0,f,c
  6370                           
  6371                           ;Usuaris.c: 235:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6372  000B6A  0E08               	movlw	8
  6373  000B6C  1835               	xorwf	_indexNextUserStruct^0,w,c
  6374  000B6E  E101               	bnz	l5621
  6375  000B70  6A35               	clrf	_indexNextUserStruct^0,c
  6376  000B72                     l5621:
  6377                           
  6378                           ;Usuaris.c: 236:     escriureCharEEPROM(indexNextUser,1);
  6379  000B72  0E01               	movlw	1
  6380  000B74  6E50               	movwf	escriureCharEEPROM@pos^0,c
  6381  000B76  5036               	movf	_indexNextUser^0,w,c
  6382  000B78  EC7F  F00C         	call	_escriureCharEEPROM
  6383  000B7C                     l5623:
  6384                           
  6385                           ;Usuaris.c: 237:     state = 0;
  6386  000B7C  6A31               	clrf	UmotorUsers@state^0,c
  6387  000B7E  0012               	return	
  6388  000B80                     l5625:
  6389                           
  6390                           ;Usuaris.c: 241:    if (i < numUsuaris) {
  6391  000B80  5037               	movf	_numUsuaris^0,w,c
  6392  000B82  5C34               	subwf	_i^0,w,c
  6393  000B84  E217               	bc	l5641
  6394                           
  6395                           ;Usuaris.c: 242:     if(j != usuariLoguejat){
  6396  000B86  C069  F055         	movff	_usuariLoguejat,??_UmotorUsers
  6397  000B8A  6A56               	clrf	(??_UmotorUsers+1)^0,c
  6398  000B8C  BE55               	btfsc	??_UmotorUsers^0,7,c
  6399  000B8E  0656               	decf	(??_UmotorUsers+1)^0,f,c
  6400  000B90  5033               	movf	_j^0,w,c
  6401  000B92  1855               	xorwf	??_UmotorUsers^0,w,c
  6402  000B94  1056               	iorwf	(??_UmotorUsers+1)^0,w,c
  6403  000B96  E008               	bz	l5633
  6404                           
  6405                           ;Usuaris.c: 243:       arrayShowUsers[i] = j;
  6406  000B98  5034               	movf	_i^0,w,c
  6407  000B9A  0F0B               	addlw	low _arrayShowUsers
  6408  000B9C  6ED9               	movwf	fsr2l,c
  6409  000B9E  6ADA               	clrf	fsr2h,c
  6410  000BA0  C033  FFDF         	movff	_j,indf2
  6411                           
  6412                           ;Usuaris.c: 244:      i++;
  6413  000BA4  2A34               	incf	_i^0,f,c
  6414                           
  6415                           ;Usuaris.c: 245:     }else{
  6416  000BA6  D001               	goto	l795
  6417  000BA8                     l5633:
  6418                           
  6419                           ;Usuaris.c: 246:       j++;
  6420  000BA8  2A33               	incf	_j^0,f,c
  6421  000BAA                     l795:
  6422                           
  6423                           ;Usuaris.c: 248:     j++;
  6424  000BAA  2A33               	incf	_j^0,f,c
  6425                           
  6426                           ;Usuaris.c: 249:     if(j > 7) j=0;
  6427  000BAC  0E07               	movlw	7
  6428  000BAE  6433               	cpfsgt	_j^0,c
  6429  000BB0  D782               	goto	l5557
  6430  000BB2  D77D               	goto	u5630
  6431  000BB4                     l5641:
  6432  000BB4  5037               	movf	_numUsuaris^0,w,c
  6433  000BB6  1834               	xorwf	_i^0,w,c
  6434  000BB8  A4D8               	btfss	status,2,c
  6435  000BBA  0012               	return	
  6436                           
  6437                           ;Usuaris.c: 253:     do_showUsers = 0;
  6438  000BBC  9877               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6439                           
  6440                           ;Usuaris.c: 254:     state = 0;
  6441  000BBE  6A31               	clrf	UmotorUsers@state^0,c
  6442  000BC0  0012               	return	
  6443  000BC2                     l5645:
  6444                           
  6445                           ;Usuaris.c: 258:    if (i < 5 && puntuacions[i].indexStruct != -1) {
  6446  000BC2  0E05               	movlw	5
  6447  000BC4  6034               	cpfslt	_i^0,c
  6448  000BC6  D005               	goto	l5653
  6449  000BC8  D872               	call	PL16	;call to abstracted procedure
  6450  000BCA  28DE               	incf	postinc2,w,c
  6451  000BCC  E002               	bz	l5653
  6452                           
  6453                           ;Usuaris.c: 259:     i++;
  6454  000BCE  2A34               	incf	_i^0,f,c
  6455  000BD0  D778               	goto	l5561
  6456  000BD2                     l5653:
  6457  000BD2  0E05               	movlw	5
  6458  000BD4  6034               	cpfslt	_i^0,c
  6459  000BD6  D006               	goto	l5659
  6460  000BD8  D86A               	call	PL16	;call to abstracted procedure
  6461  000BDA  28DE               	incf	postinc2,w,c
  6462  000BDC  E103               	bnz	l5659
  6463  000BDE                     u5810:
  6464                           
  6465                           ;Usuaris.c: 263:     state = 7;
  6466  000BDE  0E07               	movlw	7
  6467  000BE0  6E31               	movwf	UmotorUsers@state^0,c
  6468                           
  6469                           ;Usuaris.c: 264:    }
  6470  000BE2  0C07               	retlw	7
  6471  000BE4                     l5659:
  6472  000BE4  0E04               	movlw	4
  6473  000BE6  6434               	cpfsgt	_i^0,c
  6474  000BE8  0C04               	retlw	4
  6475                           
  6476                           ;Usuaris.c: 266:     i = 0;
  6477  000BEA  6A34               	clrf	_i^0,c
  6478  000BEC                     l5663:
  6479                           
  6480                           ;Usuaris.c: 267:     state = 8;
  6481  000BEC  0E08               	movlw	8
  6482  000BEE  6E31               	movwf	UmotorUsers@state^0,c
  6483  000BF0  0C08               	retlw	8
  6484  000BF2                     l5665:
  6485                           
  6486                           ;Usuaris.c: 271:    puntuacions[i].score = scoreUsr;
  6487  000BF2  D848               	call	PL10	;call to abstracted procedure
  6488  000BF4  C032  FFDF         	movff	_scoreUsr,indf2
  6489                           
  6490                           ;Usuaris.c: 272:    puntuacions[i].indexStruct = usuariLoguejat;
  6491  000BF8  D85A               	call	PL16	;call to abstracted procedure
  6492  000BFA  C069  FFDF         	movff	_usuariLoguejat,indf2
  6493                           
  6494                           ;Usuaris.c: 273:    i = i+i;
  6495  000BFE  0E02               	movlw	2
  6496  000C00  0234               	mulwf	_i^0,c
  6497  000C02  50F3               	movf	prodl,w,c
  6498  000C04  6E34               	movwf	_i^0,c
  6499                           
  6500                           ;Usuaris.c: 274:    escriureCharEEPROM(usuariLoguejat,200+i);
  6501  000C06  5034               	movf	_i^0,w,c
  6502  000C08  0FC8               	addlw	200
  6503  000C0A  6E50               	movwf	escriureCharEEPROM@pos^0,c
  6504  000C0C  5069               	movf	_usuariLoguejat^0,w,c
  6505  000C0E  EC7F  F00C         	call	_escriureCharEEPROM
  6506                           
  6507                           ;Usuaris.c: 275:    i++;
  6508  000C12  2A34               	incf	_i^0,f,c
  6509                           
  6510                           ;Usuaris.c: 276:    escriureCharEEPROM(scoreUsr,200+i);
  6511  000C14  5034               	movf	_i^0,w,c
  6512  000C16  0FC8               	addlw	200
  6513  000C18  6E50               	movwf	escriureCharEEPROM@pos^0,c
  6514  000C1A  5032               	movf	_scoreUsr^0,w,c
  6515  000C1C  EC7F  F00C         	call	_escriureCharEEPROM
  6516  000C20  D7AD               	goto	l5623
  6517  000C22                     l5677:
  6518                           
  6519                           ;Usuaris.c: 280:    if (puntuacions[i].score >= scoreUsr && i < 5) {
  6520  000C22  D830               	call	PL10	;call to abstracted procedure
  6521  000C24  5032               	movf	_scoreUsr^0,w,c
  6522  000C26  5CDE               	subwf	postinc2,w,c
  6523  000C28  E305               	bnc	l5685
  6524  000C2A  0E05               	movlw	5
  6525  000C2C  6034               	cpfslt	_i^0,c
  6526  000C2E  D002               	goto	l5685
  6527                           
  6528                           ;Usuaris.c: 281:     i++;
  6529  000C30  2A34               	incf	_i^0,f,c
  6530  000C32  D7DC               	goto	l5663
  6531  000C34                     l5685:
  6532  000C34  0E04               	movlw	4
  6533  000C36  6434               	cpfsgt	_i^0,c
  6534  000C38  D001               	goto	l5689
  6535  000C3A  D7A0               	goto	l5623
  6536  000C3C                     l5689:
  6537  000C3C  D823               	call	PL10	;call to abstracted procedure
  6538  000C3E  5032               	movf	_scoreUsr^0,w,c
  6539  000C40  5CDE               	subwf	postinc2,w,c
  6540  000C42  B0D8               	btfsc	status,0,c
  6541  000C44  0012               	return	
  6542  000C46  0E05               	movlw	5
  6543  000C48  6034               	cpfslt	_i^0,c
  6544  000C4A  0C05               	retlw	5
  6545  000C4C  D7C8               	goto	u5810
  6546  000C4E                     l5697:
  6547  000C4E  5031               	movf	UmotorUsers@state^0,w,c
  6548  000C50  6E55               	movwf	??_UmotorUsers^0,c
  6549  000C52  6A56               	clrf	(??_UmotorUsers+1)^0,c
  6550                           
  6551                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6552                           ; Switch size 1, requested type "space"
  6553                           ; Number of cases is 1, Range of values is 0 to 0
  6554                           ; switch strategies available:
  6555                           ; Name         Instructions Cycles
  6556                           ; simple_byte            4     3 (average)
  6557                           ;	Chosen strategy is simple_byte
  6558  000C54  5056               	movf	(??_UmotorUsers+1)^0,w,c
  6559  000C56  A4D8               	btfss	status,2,c
  6560  000C58  0012               	return	
  6561                           
  6562                           ; Switch size 1, requested type "space"
  6563                           ; Number of cases is 8, Range of values is 0 to 8
  6564                           ; switch strategies available:
  6565                           ; Name         Instructions Cycles
  6566                           ; simple_byte           25    13 (average)
  6567                           ;	Chosen strategy is simple_byte
  6568  000C5A  5055               	movf	??_UmotorUsers^0,w,c
  6569  000C5C  E101 D6FB          	bz	l763
  6570  000C60  0A01               	xorlw	1	; case 1
  6571  000C62  E101 D731          	bz	l5563
  6572  000C66  0A03               	xorlw	3	; case 2
  6573  000C68  E101 D74A          	bz	l5577
  6574  000C6C  0A01               	xorlw	1	; case 3
  6575  000C6E  E101 D75E          	bz	l5595
  6576  000C72  0A06               	xorlw	6	; case 5
  6577  000C74  E085               	bz	l5625
  6578  000C76  0A03               	xorlw	3	; case 6
  6579  000C78  E0A4               	bz	l5645
  6580  000C7A  0A01               	xorlw	1	; case 7
  6581  000C7C  E0BA               	bz	l5665
  6582  000C7E  0A0F               	xorlw	15	; case 8
  6583  000C80  E0D0               	bz	l5677
  6584  000C82  0012               	return		;funcret
  6585  000C84                     __end_of_UmotorUsers:
  6586                           	callstack 0
  6587  000C84                     PL10:
  6588                           	callstack 27
  6589  000C84  5034               	movf	_i^0,w,c
  6590  000C86  0D02               	mullw	2
  6591  000C88  50F3               	movf	243,w,c
  6592  000C8A  0F02               	addlw	low (_puntuacions+1)
  6593  000C8C  6ED9               	movwf	fsr2l,c
  6594  000C8E  6ADA               	clrf	fsr2h,c
  6595  000C90  0012               	return	
  6596  000C92                     __end_ofPL10:
  6597                           	callstack 0
  6598  000C92                     PL14:
  6599                           	callstack 27
  6600  000C92  50F3               	movf	243,w,c
  6601  000C94  2655               	addwf	??_UmotorUsers^0,f,c
  6602  000C96  50F4               	movf	244,w,c
  6603  000C98  2256               	addwfc	(??_UmotorUsers+1)^0,f,c
  6604  000C9A  5034               	movf	_i^0,w,c
  6605  000C9C  2455               	addwf	??_UmotorUsers^0,w,c
  6606  000C9E  6EE1               	movwf	fsr1l,c
  6607  000CA0  0E00               	movlw	0
  6608  000CA2  2056               	addwfc	(??_UmotorUsers+1)^0,w,c
  6609  000CA4  6EE2               	movwf	fsr1h,c
  6610  000CA6  CFDF FFE7          	movff	indf2,indf1
  6611  000CAA  2A34               	incf	_i^0,f,c
  6612  000CAC  0012               	return	
  6613  000CAE                     __end_ofPL14:
  6614                           	callstack 0
  6615  000CAE                     PL16:
  6616                           	callstack 27
  6617  000CAE  5034               	movf	_i^0,w,c
  6618  000CB0  0D02               	mullw	2
  6619  000CB2  50F3               	movf	243,w,c
  6620  000CB4  0F01               	addlw	low _puntuacions
  6621  000CB6  6ED9               	movwf	fsr2l,c
  6622  000CB8  6ADA               	clrf	fsr2h,c
  6623  000CBA  0012               	return	
  6624  000CBC                     __end_ofPL16:
  6625                           	callstack 0
  6626  000CBC                     PL20:
  6627                           	callstack 27
  6628  000CBC  6ED9               	movwf	fsr2l,c
  6629  000CBE  6ADA               	clrf	fsr2h,c
  6630  000CC0  5035               	movf	_indexNextUserStruct^0,w,c
  6631  000CC2  0D12               	mullw	18
  6632  000CC4  0E00               	movlw	low _usuaris
  6633  000CC6  6E55               	movwf	??_UmotorUsers^0,c
  6634  000CC8  0E01               	movlw	high _usuaris
  6635  000CCA  6E56               	movwf	(??_UmotorUsers+1)^0,c
  6636  000CCC  0012               	return	
  6637  000CCE                     __end_ofPL20:
  6638                           	callstack 0
  6639  000CCE                     PL78:
  6640                           	callstack 27
  6641  000CCE  6ED9               	movwf	fsr2l,c
  6642  000CD0  6ADA               	clrf	fsr2h,c
  6643  000CD2  50DF               	movf	indf2,w,c
  6644  000CD4  0012               	return	
  6645  000CD6                     __end_ofPL78:
  6646                           	callstack 0
  6647                           
  6648 ;; *************** function _compareStrings *****************
  6649 ;; Defined at:
  6650 ;;		line 138 in file "Usuaris.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  a               1    5[COMRAM] PTR const unsigned char 
  6653 ;;		 -> tmpUsername(9), 
  6654 ;;  b               2    6[COMRAM] PTR const unsigned char 
  6655 ;;		 -> usuaris.username(9), usuaris(144), 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      unsigned char 
  6660 ;; Registers used:
  6661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1
  6667 ;;      Params:         3       0       0
  6668 ;;      Locals:         0       0       0
  6669 ;;      Temps:          2       0       0
  6670 ;;      Totals:         5       0       0
  6671 ;;Total ram usage:        5 bytes
  6672 ;; Hardware stack levels used: 1
  6673 ;; Hardware stack levels required when called: 2
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_UmotorUsers
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           	psect	text55
  6682  00175A                     __ptext55:
  6683                           	callstack 0
  6684  00175A                     _compareStrings:
  6685                           	callstack 27
  6686                           
  6687                           ;Usuaris.c: 139:     while (*a){
  6688                           
  6689                           ;incstack = 0
  6690  00175A  D00A               	goto	l4271
  6691  00175C                     l4265:
  6692                           
  6693                           ;Usuaris.c: 140:         if (*a != *b)break;
  6694  00175C  D813               	call	PL48	;call to abstracted procedure
  6695  00175E  5050               	movf	compareStrings@a^0,w,c
  6696  001760  6EE1               	movwf	fsr1l,c
  6697  001762  6AE2               	clrf	fsr1h,c
  6698  001764  50DE               	movf	postinc2,w,c
  6699  001766  18E6               	xorwf	postinc1,w,c
  6700  001768  E105               	bnz	u3530
  6701                           
  6702                           ;Usuaris.c: 141:         a++;
  6703  00176A  2A50               	incf	compareStrings@a^0,f,c
  6704                           
  6705                           ;Usuaris.c: 142:         b++;
  6706  00176C  4A51               	infsnz	compareStrings@b^0,f,c
  6707  00176E  2A52               	incf	(compareStrings@b+1)^0,f,c
  6708  001770                     l4271:
  6709                           
  6710                           ;Usuaris.c: 139:     while (*a){
  6711  001770  D80E               	call	PL66	;call to abstracted procedure
  6712  001772  E1F4               	bnz	l4265
  6713  001774                     u3530:
  6714                           
  6715                           ;Usuaris.c: 144:     return *(const unsigned char*)a - *(const unsigned char*)b;
  6716  001774  D807               	call	PL48	;call to abstracted procedure
  6717  001776  50DF               	movf	indf2,w,c
  6718  001778  6E53               	movwf	??_compareStrings^0,c
  6719  00177A  D809               	call	PL66	;call to abstracted procedure
  6720  00177C  6E54               	movwf	(??_compareStrings+1)^0,c
  6721  00177E  5053               	movf	??_compareStrings^0,w,c
  6722  001780  5C54               	subwf	(??_compareStrings+1)^0,w,c
  6723  001782  0012               	return		;funcret
  6724  001784                     __end_of_compareStrings:
  6725                           	callstack 0
  6726  001784                     PL48:
  6727                           	callstack 27
  6728  001784  C051  FFD9         	movff	compareStrings@b,fsr2l
  6729  001788  C052  FFDA         	movff	compareStrings@b+1,fsr2h
  6730  00178C  0012               	return	
  6731  00178E                     __end_ofPL48:
  6732                           	callstack 0
  6733  00178E                     PL66:
  6734                           	callstack 27
  6735  00178E  5050               	movf	compareStrings@a^0,w,c
  6736  001790  6ED9               	movwf	fsr2l,c
  6737  001792  6ADA               	clrf	fsr2h,c
  6738  001794  50DF               	movf	indf2,w,c
  6739  001796  0012               	return	
  6740  001798                     __end_ofPL66:
  6741                           	callstack 0
  6742                           
  6743 ;; *************** function _Uinit *****************
  6744 ;; Defined at:
  6745 ;;		line 85 in file "Usuaris.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;		None
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;  k               1   12[COMRAM] unsigned char 
  6750 ;;  k               1   11[COMRAM] unsigned char 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      void 
  6753 ;; Registers used:
  6754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1
  6760 ;;      Params:         0       0       0
  6761 ;;      Locals:         2       0       0
  6762 ;;      Temps:          2       0       0
  6763 ;;      Totals:         4       0       0
  6764 ;;Total ram usage:        4 bytes
  6765 ;; Hardware stack levels used: 1
  6766 ;; Hardware stack levels required when called: 3
  6767 ;; This function calls:
  6768 ;;		___lbdiv
  6769 ;;		_escriureCharEEPROM
  6770 ;;		_llegirCharEEPROM
  6771 ;; This function is called by:
  6772 ;;		_main
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text56
  6777  00100C                     __ptext56:
  6778                           	callstack 0
  6779  00100C                     _Uinit:
  6780                           	callstack 27
  6781                           
  6782                           ;Usuaris.c: 89:     i = 0;
  6783                           
  6784                           ;incstack = 0
  6785  00100C  6A34               	clrf	_i^0,c
  6786                           
  6787                           ;Usuaris.c: 94:     numUsuaris = llegirCharEEPROM(0);
  6788  00100E  0E00               	movlw	0
  6789  001010  EC67  F00D         	call	_llegirCharEEPROM
  6790  001014  6E37               	movwf	_numUsuaris^0,c
  6791                           
  6792                           ;Usuaris.c: 96:     if(numUsuaris > 8) numUsuaris = 0;
  6793  001016  0E08               	movlw	8
  6794  001018  6437               	cpfsgt	_numUsuaris^0,c
  6795  00101A  D001               	goto	l4427
  6796  00101C  6A37               	clrf	_numUsuaris^0,c
  6797  00101E                     l4427:
  6798                           
  6799                           ;Usuaris.c: 97:     numUsuaris = 7;
  6800  00101E  0E07               	movlw	7
  6801  001020  6E37               	movwf	_numUsuaris^0,c
  6802                           
  6803                           ;Usuaris.c: 99:      escriureCharEEPROM('a',2);
  6804  001022  0E02               	movlw	2
  6805  001024  6E50               	movwf	escriureCharEEPROM@pos^0,c
  6806  001026  0E61               	movlw	97
  6807  001028  EC7F  F00C         	call	_escriureCharEEPROM
  6808                           
  6809                           ;Usuaris.c: 100:      escriureCharEEPROM('b',20);
  6810  00102C  0E14               	movlw	20
  6811  00102E  6E50               	movwf	escriureCharEEPROM@pos^0,c
  6812  001030  0E62               	movlw	98
  6813  001032  EC7F  F00C         	call	_escriureCharEEPROM
  6814                           
  6815                           ;Usuaris.c: 101:      escriureCharEEPROM('c',38);
  6816  001036  0E26               	movlw	38
  6817  001038  6E50               	movwf	escriureCharEEPROM@pos^0,c
  6818  00103A  0E63               	movlw	99
  6819  00103C  EC7F  F00C         	call	_escriureCharEEPROM
  6820                           
  6821                           ;Usuaris.c: 102:      escriureCharEEPROM('d',56);
  6822  001040  0E38               	movlw	56
  6823  001042  6E50               	movwf	escriureCharEEPROM@pos^0,c
  6824  001044  0E64               	movlw	100
  6825  001046  EC7F  F00C         	call	_escriureCharEEPROM
  6826                           
  6827                           ;Usuaris.c: 103:      escriureCharEEPROM('e',74);
  6828  00104A  0E4A               	movlw	74
  6829  00104C  6E50               	movwf	escriureCharEEPROM@pos^0,c
  6830  00104E  0E65               	movlw	101
  6831  001050  EC7F  F00C         	call	_escriureCharEEPROM
  6832                           
  6833                           ;Usuaris.c: 104:      escriureCharEEPROM('f',92);
  6834  001054  0E5C               	movlw	92
  6835  001056  6E50               	movwf	escriureCharEEPROM@pos^0,c
  6836  001058  0E66               	movlw	102
  6837  00105A  EC7F  F00C         	call	_escriureCharEEPROM
  6838                           
  6839                           ;Usuaris.c: 105:      escriureCharEEPROM('g',110);
  6840  00105E  0E6E               	movlw	110
  6841  001060  6E50               	movwf	escriureCharEEPROM@pos^0,c
  6842  001062  0E67               	movlw	103
  6843  001064  EC7F  F00C         	call	_escriureCharEEPROM
  6844                           
  6845                           ;Usuaris.c: 110:     i++;
  6846  001068  2A34               	incf	_i^0,f,c
  6847                           
  6848                           ;Usuaris.c: 111:     indexNextUser = llegirCharEEPROM(1);
  6849  00106A  0E01               	movlw	1
  6850  00106C  EC67  F00D         	call	_llegirCharEEPROM
  6851  001070  6E36               	movwf	_indexNextUser^0,c
  6852                           
  6853                           ;Usuaris.c: 112:     if(indexNextUser == 255) indexNextUser = 2;
  6854  001072  2836               	incf	_indexNextUser^0,w,c
  6855  001074  E102               	bnz	l4451
  6856  001076  0E02               	movlw	2
  6857  001078  6E36               	movwf	_indexNextUser^0,c
  6858  00107A                     l4451:
  6859                           
  6860                           ;Usuaris.c: 113:     indexNextUserStruct = indexNextUser/18;
  6861  00107A  0E12               	movlw	18
  6862  00107C  6E50               	movwf	___lbdiv@divisor^0,c
  6863  00107E  5036               	movf	_indexNextUser^0,w,c
  6864  001080  EC21  F00C         	call	___lbdiv
  6865  001084  6E35               	movwf	_indexNextUserStruct^0,c
  6866                           
  6867                           ;Usuaris.c: 114:     i++;
  6868  001086  2A34               	incf	_i^0,f,c
  6869                           
  6870                           ;Usuaris.c: 115:     for(j = 0;j<numUsuaris;j++){
  6871  001088  6A33               	clrf	_j^0,c
  6872  00108A  D01F               	goto	l4483
  6873  00108C                     l732:
  6874                           
  6875                           ;Usuaris.c: 116:         for(unsigned char k = 0; k<9; k++){
  6876  00108C  6A56               	clrf	Uinit@k^0,c
  6877  00108E                     l4461:
  6878                           
  6879                           ;Usuaris.c: 117:             usuaris[j].username[k] = llegirCharEEPROM(i);
  6880  00108E  D83A               	call	PL34	;call to abstracted procedure
  6881  001090  D847               	call	PL56	;call to abstracted procedure
  6882  001092  5056               	movf	Uinit@k^0,w,c
  6883  001094  D83E               	call	PL40	;call to abstracted procedure
  6884  001096  EC67  F00D         	call	_llegirCharEEPROM
  6885  00109A  6EDF               	movwf	indf2,c
  6886                           
  6887                           ;Usuaris.c: 118:             i++;
  6888  00109C  2A34               	incf	_i^0,f,c
  6889                           
  6890                           ;Usuaris.c: 119:         }
  6891  00109E  2A56               	incf	Uinit@k^0,f,c
  6892  0010A0  0E08               	movlw	8
  6893  0010A2  6456               	cpfsgt	Uinit@k^0,c
  6894  0010A4  D7F4               	goto	l4461
  6895                           
  6896                           ;Usuaris.c: 120:         for(unsigned char k = 0; k<9;k++){
  6897  0010A6  6A57               	clrf	Uinit@k_1190^0,c
  6898  0010A8                     l4473:
  6899                           
  6900                           ;Usuaris.c: 121:             usuaris[j].password[k] = llegirCharEEPROM(i);
  6901  0010A8  D82D               	call	PL34	;call to abstracted procedure
  6902  0010AA  0E09               	movlw	9
  6903  0010AC  2654               	addwf	??_Uinit^0,f,c
  6904  0010AE  0E00               	movlw	0
  6905  0010B0  2255               	addwfc	(??_Uinit+1)^0,f,c
  6906  0010B2  D836               	call	PL56	;call to abstracted procedure
  6907  0010B4  5057               	movf	Uinit@k_1190^0,w,c
  6908  0010B6  D82D               	call	PL40	;call to abstracted procedure
  6909  0010B8  EC67  F00D         	call	_llegirCharEEPROM
  6910  0010BC  6EDF               	movwf	indf2,c
  6911                           
  6912                           ;Usuaris.c: 122:             i++;
  6913  0010BE  2A34               	incf	_i^0,f,c
  6914                           
  6915                           ;Usuaris.c: 123:         }
  6916  0010C0  2A57               	incf	Uinit@k_1190^0,f,c
  6917  0010C2  0E08               	movlw	8
  6918  0010C4  6457               	cpfsgt	Uinit@k_1190^0,c
  6919  0010C6  D7F0               	goto	l4473
  6920                           
  6921                           ;Usuaris.c: 124:     }
  6922  0010C8  2A33               	incf	_j^0,f,c
  6923  0010CA                     l4483:
  6924  0010CA  5037               	movf	_numUsuaris^0,w,c
  6925  0010CC  5C33               	subwf	_j^0,w,c
  6926  0010CE  E3DE               	bnc	l732
  6927                           
  6928                           ;Usuaris.c: 130:     puntuacions[0].indexStruct = -1;
  6929  0010D0  6801               	setf	_puntuacions^0,c
  6930                           
  6931                           ;Usuaris.c: 131:     for(i = 0; i<5; i++){
  6932  0010D2  6A34               	clrf	_i^0,c
  6933  0010D4                     l4485:
  6934  0010D4  0E04               	movlw	4
  6935  0010D6  6434               	cpfsgt	_i^0,c
  6936  0010D8  D001               	goto	l4489
  6937  0010DA  0C04               	retlw	4
  6938  0010DC                     l4489:
  6939                           
  6940                           ;Usuaris.c: 132:         puntuacions[i].indexStruct = llegirCharEEPROM(200+i+i);
  6941  0010DC  EC57  F006         	call	PL16	;call to abstracted procedure
  6942  0010E0  5034               	movf	_i^0,w,c
  6943  0010E2  0D02               	mullw	2
  6944  0010E4  50F3               	movf	243,w,c
  6945  0010E6  0FC8               	addlw	200
  6946  0010E8  EC67  F00D         	call	_llegirCharEEPROM
  6947  0010EC  6EDF               	movwf	indf2,c
  6948                           
  6949                           ;Usuaris.c: 133:         puntuacions[i].score = llegirCharEEPROM(200+i+i+1);
  6950  0010EE  EC42  F006         	call	PL10	;call to abstracted procedure
  6951  0010F2  5034               	movf	_i^0,w,c
  6952  0010F4  0D02               	mullw	2
  6953  0010F6  50F3               	movf	243,w,c
  6954  0010F8  0FC9               	addlw	201
  6955  0010FA  EC67  F00D         	call	_llegirCharEEPROM
  6956  0010FE  6EDF               	movwf	indf2,c
  6957                           
  6958                           ;Usuaris.c: 134:     }
  6959  001100  2A34               	incf	_i^0,f,c
  6960  001102  D7E8               	goto	l4485
  6961  001104                     __end_of_Uinit:
  6962                           	callstack 0
  6963  001104                     PL34:
  6964                           	callstack 27
  6965  001104  5033               	movf	_j^0,w,c
  6966  001106  0D12               	mullw	18
  6967  001108  0E00               	movlw	low _usuaris
  6968  00110A  6E54               	movwf	??_Uinit^0,c
  6969  00110C  0E01               	movlw	high _usuaris
  6970  00110E  6E55               	movwf	(??_Uinit+1)^0,c
  6971  001110  0012               	return	
  6972  001112                     __end_ofPL34:
  6973                           	callstack 0
  6974  001112                     PL40:
  6975                           	callstack 27
  6976  001112  2454               	addwf	??_Uinit^0,w,c
  6977  001114  6ED9               	movwf	fsr2l,c
  6978  001116  0E00               	movlw	0
  6979  001118  2055               	addwfc	(??_Uinit+1)^0,w,c
  6980  00111A  6EDA               	movwf	fsr2h,c
  6981  00111C  5034               	movf	_i^0,w,c
  6982  00111E  0012               	return	
  6983  001120                     __end_ofPL40:
  6984                           	callstack 0
  6985  001120                     PL56:
  6986                           	callstack 27
  6987  001120  50F3               	movf	243,w,c
  6988  001122  2654               	addwf	??_Uinit^0,f,c
  6989  001124  50F4               	movf	244,w,c
  6990  001126  2255               	addwfc	(??_Uinit+1)^0,f,c
  6991  001128  0012               	return	
  6992  00112A                     __end_ofPL56:
  6993                           	callstack 0
  6994                           
  6995 ;; *************** function _llegirCharEEPROM *****************
  6996 ;; Defined at:
  6997 ;;		line 78 in file "Usuaris.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;  pos             1    wreg     unsigned char 
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;  pos             1    5[COMRAM] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  1    wreg      unsigned char 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1
  7011 ;;      Params:         0       0       0
  7012 ;;      Locals:         1       0       0
  7013 ;;      Temps:          0       0       0
  7014 ;;      Totals:         1       0       0
  7015 ;;Total ram usage:        1 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; Hardware stack levels required when called: 2
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_Uinit
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text57
  7026  001ACE                     __ptext57:
  7027                           	callstack 0
  7028  001ACE                     _llegirCharEEPROM:
  7029                           	callstack 27
  7030                           
  7031                           ;incstack = 0
  7032                           ;llegirCharEEPROM@pos stored from wreg
  7033  001ACE  6E50               	movwf	llegirCharEEPROM@pos^0,c
  7034                           
  7035                           ;Usuaris.c: 79:     EEADR = pos;
  7036  001AD0  C050  FFA9         	movff	llegirCharEEPROM@pos,4009	;volatile
  7037                           
  7038                           ;Usuaris.c: 80:     EECON1bits.EEPGD = 0;
  7039  001AD4  9EA6               	bcf	166,7,c	;volsfr
  7040                           
  7041                           ;Usuaris.c: 81:     EECON1bits.CFGS = 0;
  7042  001AD6  9CA6               	bcf	166,6,c	;volsfr
  7043                           
  7044                           ;Usuaris.c: 82:     EECON1bits.RD = 1;
  7045  001AD8  80A6               	bsf	166,0,c	;volsfr
  7046                           
  7047                           ;Usuaris.c: 83:     return EEDATA;
  7048  001ADA  50A8               	movf	168,w,c	;volatile
  7049  001ADC  0012               	return		;funcret
  7050  001ADE                     __end_of_llegirCharEEPROM:
  7051                           	callstack 0
  7052                           
  7053 ;; *************** function _escriureCharEEPROM *****************
  7054 ;; Defined at:
  7055 ;;		line 64 in file "Usuaris.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;  c               1    wreg     unsigned char 
  7058 ;;  pos             1    5[COMRAM] unsigned char 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  c               1    6[COMRAM] unsigned char 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1
  7070 ;;      Params:         1       0       0
  7071 ;;      Locals:         1       0       0
  7072 ;;      Temps:          0       0       0
  7073 ;;      Totals:         2       0       0
  7074 ;;Total ram usage:        2 bytes
  7075 ;; Hardware stack levels used: 1
  7076 ;; Hardware stack levels required when called: 2
  7077 ;; This function calls:
  7078 ;;		Nothing
  7079 ;; This function is called by:
  7080 ;;		_Uinit
  7081 ;;		_UmotorUsers
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           	psect	text58
  7086  0018FE                     __ptext58:
  7087                           	callstack 0
  7088  0018FE                     _escriureCharEEPROM:
  7089                           	callstack 27
  7090                           
  7091                           ;incstack = 0
  7092                           ;escriureCharEEPROM@c stored from wreg
  7093  0018FE  6E51               	movwf	escriureCharEEPROM@c^0,c
  7094                           
  7095                           ;Usuaris.c: 65:     EEADR = pos;
  7096  001900  C050  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  7097                           
  7098                           ;Usuaris.c: 66:     EEDATA = c;
  7099  001904  C051  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  7100                           
  7101                           ;Usuaris.c: 67:     EECON1bits.EEPGD = 0;
  7102  001908  9EA6               	bcf	166,7,c	;volsfr
  7103                           
  7104                           ;Usuaris.c: 68:     EECON1bits.CFGS = 0;
  7105  00190A  9CA6               	bcf	166,6,c	;volsfr
  7106                           
  7107                           ;Usuaris.c: 69:     EECON1bits.WREN = 1;
  7108  00190C  84A6               	bsf	166,2,c	;volsfr
  7109                           
  7110                           ;Usuaris.c: 70:     INTCONbits.GIE = 0;
  7111  00190E  9EF2               	bcf	242,7,c	;volatile
  7112                           
  7113                           ;Usuaris.c: 71:     EECON2 = 85;
  7114  001910  0E55               	movlw	85
  7115  001912  6EA7               	movwf	167,c	;volsfr
  7116                           
  7117                           ;Usuaris.c: 72:     EECON2 = 170;
  7118  001914  0EAA               	movlw	170
  7119  001916  6EA7               	movwf	167,c	;volsfr
  7120                           
  7121                           ;Usuaris.c: 73:     EECON1bits.WR = 1;
  7122  001918  82A6               	bsf	166,1,c	;volsfr
  7123  00191A                     l720:
  7124  00191A  B2A6               	btfsc	166,1,c	;volsfr
  7125  00191C  D7FE               	goto	l720
  7126                           
  7127                           ;Usuaris.c: 75:     INTCONbits.GIE = 1;
  7128  00191E  8EF2               	bsf	242,7,c	;volatile
  7129                           
  7130                           ;Usuaris.c: 76:     EECON1bits.WREN = 0;
  7131  001920  94A6               	bcf	166,2,c	;volsfr
  7132  001922  0012               	return		;funcret
  7133  001924                     __end_of_escriureCharEEPROM:
  7134                           	callstack 0
  7135                           
  7136 ;; *************** function ___lbdiv *****************
  7137 ;; Defined at:
  7138 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lbdiv.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  dividend        1    wreg     unsigned char 
  7141 ;;  divisor         1    5[COMRAM] unsigned char 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  dividend        1    6[COMRAM] unsigned char 
  7144 ;;  quotient        1    8[COMRAM] unsigned char 
  7145 ;;  counter         1    7[COMRAM] unsigned char 
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  1    wreg      unsigned char 
  7148 ;; Registers used:
  7149 ;;		wreg, status,2, status,0
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1
  7155 ;;      Params:         1       0       0
  7156 ;;      Locals:         3       0       0
  7157 ;;      Temps:          0       0       0
  7158 ;;      Totals:         4       0       0
  7159 ;;Total ram usage:        4 bytes
  7160 ;; Hardware stack levels used: 1
  7161 ;; Hardware stack levels required when called: 2
  7162 ;; This function calls:
  7163 ;;		Nothing
  7164 ;; This function is called by:
  7165 ;;		_Uinit
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text59
  7170  001842                     __ptext59:
  7171                           	callstack 0
  7172  001842                     ___lbdiv:
  7173                           	callstack 27
  7174                           
  7175                           ;incstack = 0
  7176                           ;___lbdiv@dividend stored from wreg
  7177  001842  6E51               	movwf	___lbdiv@dividend^0,c
  7178  001844  6A53               	clrf	___lbdiv@quotient^0,c
  7179  001846  5050               	movf	___lbdiv@divisor^0,w,c
  7180  001848  E014               	bz	l4303
  7181  00184A  0E01               	movlw	1
  7182  00184C  6E52               	movwf	___lbdiv@counter^0,c
  7183  00184E  D003               	goto	l4291
  7184  001850                     l4287:
  7185  001850  90D8               	bcf	status,0,c
  7186  001852  3650               	rlcf	___lbdiv@divisor^0,f,c
  7187  001854  2A52               	incf	___lbdiv@counter^0,f,c
  7188  001856                     l4291:
  7189  001856  AE50               	btfss	___lbdiv@divisor^0,7,c
  7190  001858  D7FB               	goto	l4287
  7191  00185A                     u3550:
  7192  00185A  90D8               	bcf	status,0,c
  7193  00185C  3653               	rlcf	___lbdiv@quotient^0,f,c
  7194  00185E  5050               	movf	___lbdiv@divisor^0,w,c
  7195  001860  5C51               	subwf	___lbdiv@dividend^0,w,c
  7196  001862  E303               	bnc	l4299
  7197  001864  5050               	movf	___lbdiv@divisor^0,w,c
  7198  001866  5E51               	subwf	___lbdiv@dividend^0,f,c
  7199  001868  8053               	bsf	___lbdiv@quotient^0,0,c
  7200  00186A                     l4299:
  7201  00186A  90D8               	bcf	status,0,c
  7202  00186C  3250               	rrcf	___lbdiv@divisor^0,f,c
  7203  00186E  2E52               	decfsz	___lbdiv@counter^0,f,c
  7204  001870  D7F4               	goto	u3550
  7205  001872                     l4303:
  7206  001872  5053               	movf	___lbdiv@quotient^0,w,c
  7207  001874  0012               	return		;funcret
  7208  001876                     __end_of___lbdiv:
  7209                           	callstack 0
  7210                           
  7211 ;; *************** function _TiInitTimer *****************
  7212 ;; Defined at:
  7213 ;;		line 18 in file "TiTTimer.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;		None
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;		None
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  1    wreg      void 
  7220 ;; Registers used:
  7221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1
  7227 ;;      Params:         0       0       0
  7228 ;;      Locals:         0       0       0
  7229 ;;      Temps:          0       0       0
  7230 ;;      Totals:         0       0       0
  7231 ;;Total ram usage:        0 bytes
  7232 ;; Hardware stack levels used: 1
  7233 ;; Hardware stack levels required when called: 2
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_main
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           	psect	text60
  7242  0018D6                     __ptext60:
  7243                           	callstack 0
  7244  0018D6                     _TiInitTimer:
  7245                           	callstack 28
  7246                           
  7247                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  7248                           
  7249                           ;incstack = 0
  7250  0018D6  9ED0               	bcf	208,7,c	;volatile
  7251                           
  7252                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  7253  0018D8  8EF2               	bsf	242,7,c	;volatile
  7254                           
  7255                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  7256  0018DA  8CF2               	bsf	242,6,c	;volatile
  7257                           
  7258                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  7259  0018DC  8AF2               	bsf	242,5,c	;volatile
  7260                           
  7261                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  7262  0018DE  94F2               	bcf	242,2,c	;volatile
  7263                           
  7264                           ;TiTTimer.c: 25:     T0CON = 136;
  7265  0018E0  0E88               	movlw	136
  7266  0018E2  6ED5               	movwf	213,c	;volatile
  7267                           
  7268                           ;TiTTimer.c: 27:     TMR0H = 223;
  7269                           
  7270                           ;TiTTimer.c: 28:     TMR0L = 148;
  7271  0018E4  ECA8  F00B         	call	PL52	;call to abstracted procedure
  7272                           
  7273                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  7274  0018E8  8ED5               	bsf	213,7,c	;volatile
  7275                           
  7276                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  7277  0018EA  6A3E               	clrf	_counter^0,c
  7278  0018EC                     l4397:
  7279  0018EC  0E07               	movlw	7
  7280  0018EE  643E               	cpfsgt	_counter^0,c
  7281  0018F0  D001               	goto	l4401
  7282  0018F2  0C07               	retlw	7
  7283  0018F4                     l4401:
  7284                           
  7285                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  7286  0018F4  EC64  F00C         	call	PL12	;call to abstracted procedure
  7287  0018F8  6ADF               	clrf	indf2,c
  7288                           
  7289                           ;TiTTimer.c: 33:     }
  7290  0018FA  2A3E               	incf	_counter^0,f,c
  7291  0018FC  D7F7               	goto	l4397
  7292  0018FE                     __end_of_TiInitTimer:
  7293                           	callstack 0
  7294                           
  7295 ;; *************** function _TeTeclat *****************
  7296 ;; Defined at:
  7297 ;;		line 21 in file "TeTeclat.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1
  7311 ;;      Params:         0       0       0
  7312 ;;      Locals:         0       0       0
  7313 ;;      Temps:          4       0       0
  7314 ;;      Totals:         4       0       0
  7315 ;;Total ram usage:        4 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 3
  7318 ;; This function calls:
  7319 ;;		_MsetNovaTecla
  7320 ;;		_SsetNovaTecla
  7321 ;;		_TiGetTics
  7322 ;;		_TiResetTics
  7323 ;; This function is called by:
  7324 ;;		_main
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text61
  7329  000EBE                     __ptext61:
  7330                           	callstack 0
  7331  000EBE                     _TeTeclat:
  7332                           	callstack 27
  7333                           
  7334                           ;TeTeclat.c: 22:  static char state = 0;;TeTeclat.c: 23:     static char cols=0;;TeTecla
      +                          t.c: 24:     static char files = 0;;TeTeclat.c: 25:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  7335                           
  7336                           ;incstack = 0
  7337  000EBE  A083               	btfss	131,0,c	;volatile
  7338  000EC0  D003               	goto	u5880
  7339  000EC2  6A57               	clrf	??_TeTeclat^0,c
  7340  000EC4  2A57               	incf	??_TeTeclat^0,f,c
  7341  000EC6  D001               	goto	u5888
  7342  000EC8                     u5880:
  7343  000EC8  6A57               	clrf	??_TeTeclat^0,c
  7344  000ECA                     u5888:
  7345  000ECA  0E01               	movlw	1
  7346  000ECC  A283               	btfss	131,1,c	;volatile
  7347  000ECE  0E00               	movlw	0
  7348  000ED0  0D02               	mullw	2
  7349  000ED2  CFF3 F058          	movff	prodl,??_TeTeclat+1
  7350  000ED6  0E01               	movlw	1
  7351  000ED8  A483               	btfss	131,2,c	;volatile
  7352  000EDA  0E00               	movlw	0
  7353  000EDC  0D03               	mullw	3
  7354  000EDE  CFF3 F059          	movff	prodl,??_TeTeclat+2
  7355  000EE2  0E01               	movlw	1
  7356  000EE4  A683               	btfss	131,3,c	;volatile
  7357  000EE6  0E00               	movlw	0
  7358  000EE8  0D04               	mullw	4
  7359  000EEA  50F3               	movf	243,w,c
  7360  000EEC  2459               	addwf	(??_TeTeclat+2)^0,w,c
  7361  000EEE  2458               	addwf	(??_TeTeclat+1)^0,w,c
  7362  000EF0  2457               	addwf	??_TeTeclat^0,w,c
  7363  000EF2  6E3F               	movwf	TeTeclat@files^0,c
  7364                           
  7365                           ;TeTeclat.c: 26:  switch(state) {
  7366  000EF4  D058               	goto	l5779
  7367  000EF6                     l5705:
  7368                           
  7369                           ;TeTeclat.c: 28:    if (files==0) {
  7370  000EF6  503F               	movf	TeTeclat@files^0,w,c
  7371  000EF8  E106               	bnz	l5711
  7372                           
  7373                           ;TeTeclat.c: 29:     LATDbits.LD4=1;
  7374  000EFA  888C               	bsf	140,4,c	;volatile
  7375                           
  7376                           ;TeTeclat.c: 30:     LATDbits.LD5=0;
  7377  000EFC  9A8C               	bcf	140,5,c	;volatile
  7378                           
  7379                           ;TeTeclat.c: 31:     LATDbits.LD6=0;
  7380  000EFE  9C8C               	bcf	140,6,c	;volatile
  7381                           
  7382                           ;TeTeclat.c: 32:     cols=0;
  7383  000F00  6A40               	clrf	TeTeclat@cols^0,c
  7384  000F02                     l5709:
  7385                           
  7386                           ;TeTeclat.c: 33:     state++;
  7387  000F02  2A41               	incf	TeTeclat@state^0,f,c
  7388                           
  7389                           ;TeTeclat.c: 34:    }
  7390  000F04  0012               	return	
  7391  000F06                     l5711:
  7392  000F06  503F               	movf	TeTeclat@files^0,w,c
  7393  000F08  B4D8               	btfsc	status,2,c
  7394  000F0A  0012               	return	
  7395                           
  7396                           ;TeTeclat.c: 36:     TiResetTics(tiTeclat);
  7397  000F0C  5042               	movf	_tiTeclat^0,w,c
  7398  000F0E  EC16  F00D         	call	_TiResetTics
  7399  000F12                     l5715:
  7400                           
  7401                           ;TeTeclat.c: 37:     state = 3;
  7402  000F12  0E03               	movlw	3
  7403  000F14  6E41               	movwf	TeTeclat@state^0,c
  7404  000F16  0C03               	retlw	3
  7405  000F18                     l5717:
  7406                           
  7407                           ;TeTeclat.c: 41:    if (files==0) {
  7408  000F18  503F               	movf	TeTeclat@files^0,w,c
  7409  000F1A  E106               	bnz	l5725
  7410                           
  7411                           ;TeTeclat.c: 42:     LATDbits.LD4=0;
  7412  000F1C  988C               	bcf	140,4,c	;volatile
  7413                           
  7414                           ;TeTeclat.c: 43:     LATDbits.LD5=1;
  7415  000F1E  8A8C               	bsf	140,5,c	;volatile
  7416                           
  7417                           ;TeTeclat.c: 44:     LATDbits.LD6=0;
  7418  000F20  9C8C               	bcf	140,6,c	;volatile
  7419                           
  7420                           ;TeTeclat.c: 45:     cols=1;
  7421  000F22  0E01               	movlw	1
  7422  000F24  6E40               	movwf	TeTeclat@cols^0,c
  7423  000F26  D7ED               	goto	l5709
  7424  000F28                     l5725:
  7425  000F28  503F               	movf	TeTeclat@files^0,w,c
  7426  000F2A  B4D8               	btfsc	status,2,c
  7427  000F2C  0012               	return	
  7428                           
  7429                           ;TeTeclat.c: 49:     TiResetTics(tiTeclat);
  7430  000F2E  5042               	movf	_tiTeclat^0,w,c
  7431  000F30  EC16  F00D         	call	_TiResetTics
  7432  000F34  D7EE               	goto	l5715
  7433  000F36                     l5731:
  7434                           
  7435                           ;TeTeclat.c: 54:    if (files==0) {
  7436  000F36  503F               	movf	TeTeclat@files^0,w,c
  7437  000F38  E107               	bnz	l5739
  7438                           
  7439                           ;TeTeclat.c: 55:     LATDbits.LD4=0;
  7440  000F3A  988C               	bcf	140,4,c	;volatile
  7441                           
  7442                           ;TeTeclat.c: 56:     LATDbits.LD5=0;
  7443  000F3C  9A8C               	bcf	140,5,c	;volatile
  7444                           
  7445                           ;TeTeclat.c: 57:     LATDbits.LD6=1;
  7446  000F3E  8C8C               	bsf	140,6,c	;volatile
  7447                           
  7448                           ;TeTeclat.c: 58:     cols=2;
  7449  000F40  0E02               	movlw	2
  7450  000F42  6E40               	movwf	TeTeclat@cols^0,c
  7451  000F44                     l5737:
  7452                           
  7453                           ;TeTeclat.c: 59:     state = 0;
  7454  000F44  6A41               	clrf	TeTeclat@state^0,c
  7455                           
  7456                           ;TeTeclat.c: 60:    }
  7457  000F46  0012               	return	
  7458  000F48                     l5739:
  7459  000F48  503F               	movf	TeTeclat@files^0,w,c
  7460  000F4A  B4D8               	btfsc	status,2,c
  7461  000F4C  0012               	return	
  7462                           
  7463                           ;TeTeclat.c: 62:     TiResetTics(tiTeclat);
  7464  000F4E  5042               	movf	_tiTeclat^0,w,c
  7465  000F50  EC16  F00D         	call	_TiResetTics
  7466  000F54  D7D6               	goto	l5709
  7467  000F56                     l5745:
  7468                           
  7469                           ;TeTeclat.c: 67:    if (TiGetTics(tiTeclat)>=0) {
  7470  000F56  5042               	movf	_tiTeclat^0,w,c
  7471  000F58  EC92  F00C         	call	_TiGetTics
  7472  000F5C  BE51               	btfsc	(?_TiGetTics+1)^0,7,c
  7473  000F5E  0012               	return	
  7474  000F60  D7D0               	goto	l5709
  7475  000F62                     l5749:
  7476                           
  7477                           ;TeTeclat.c: 72:    if (files==0) {
  7478  000F62  503F               	movf	TeTeclat@files^0,w,c
  7479  000F64  E103               	bnz	l5753
  7480                           
  7481                           ;TeTeclat.c: 73:     state = 1;
  7482  000F66  0E01               	movlw	1
  7483  000F68  6E41               	movwf	TeTeclat@state^0,c
  7484                           
  7485                           ;TeTeclat.c: 74:    }
  7486  000F6A  0C01               	retlw	1
  7487  000F6C                     l5753:
  7488  000F6C  503F               	movf	TeTeclat@files^0,w,c
  7489  000F6E  B4D8               	btfsc	status,2,c
  7490  000F70  0012               	return	
  7491                           
  7492                           ;TeTeclat.c: 76:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  7493  000F72  D830               	call	PL8	;call to abstracted procedure
  7494  000F74  ECD9  F00D         	call	_MsetNovaTecla
  7495                           
  7496                           ;TeTeclat.c: 77:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  7497  000F78  D82D               	call	PL8	;call to abstracted procedure
  7498  000F7A  EC17  F00E         	call	_SsetNovaTecla
  7499  000F7E  D7C1               	goto	l5709
  7500  000F80                     l5759:
  7501                           
  7502                           ;TeTeclat.c: 82:    if (files==0) {
  7503  000F80  503F               	movf	TeTeclat@files^0,w,c
  7504  000F82  A4D8               	btfss	status,2,c
  7505  000F84  0012               	return	
  7506                           
  7507                           ;TeTeclat.c: 83:     TiResetTics(tiTeclat);
  7508  000F86  5042               	movf	_tiTeclat^0,w,c
  7509  000F88  EC16  F00D         	call	_TiResetTics
  7510  000F8C  D7BA               	goto	l5709
  7511  000F8E                     l5765:
  7512                           
  7513                           ;TeTeclat.c: 88:    if (TiGetTics(tiTeclat)>=0) {
  7514  000F8E  5042               	movf	_tiTeclat^0,w,c
  7515  000F90  EC92  F00C         	call	_TiGetTics
  7516  000F94  D7E3               	goto	L3
  7517  000F96                     l5769:
  7518                           
  7519                           ;TeTeclat.c: 93:    if (files!=0) {
  7520  000F96  503F               	movf	TeTeclat@files^0,w,c
  7521  000F98  E003               	bz	l5773
  7522                           
  7523                           ;TeTeclat.c: 94:     state = 5;
  7524  000F9A  0E05               	movlw	5
  7525  000F9C  6E41               	movwf	TeTeclat@state^0,c
  7526                           
  7527                           ;TeTeclat.c: 95:    }
  7528  000F9E  0C05               	retlw	5
  7529  000FA0                     l5773:
  7530  000FA0  503F               	movf	TeTeclat@files^0,w,c
  7531  000FA2  E0D0               	bz	l5737
  7532  000FA4  0012               	return	
  7533  000FA6                     l5779:
  7534  000FA6  5041               	movf	TeTeclat@state^0,w,c
  7535  000FA8  6E57               	movwf	??_TeTeclat^0,c
  7536  000FAA  6A58               	clrf	(??_TeTeclat+1)^0,c
  7537                           
  7538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7539                           ; Switch size 1, requested type "space"
  7540                           ; Number of cases is 1, Range of values is 0 to 0
  7541                           ; switch strategies available:
  7542                           ; Name         Instructions Cycles
  7543                           ; simple_byte            4     3 (average)
  7544                           ;	Chosen strategy is simple_byte
  7545  000FAC  5058               	movf	(??_TeTeclat+1)^0,w,c
  7546  000FAE  A4D8               	btfss	status,2,c
  7547  000FB0  0012               	return	
  7548                           
  7549                           ; Switch size 1, requested type "space"
  7550                           ; Number of cases is 8, Range of values is 0 to 7
  7551                           ; switch strategies available:
  7552                           ; Name         Instructions Cycles
  7553                           ; simple_byte           25    13 (average)
  7554                           ;	Chosen strategy is simple_byte
  7555  000FB2  5057               	movf	??_TeTeclat^0,w,c
  7556  000FB4  E0A0               	bz	l5705
  7557  000FB6  0A01               	xorlw	1	; case 1
  7558  000FB8  E0AF               	bz	l5717
  7559  000FBA  0A03               	xorlw	3	; case 2
  7560  000FBC  E0BC               	bz	l5731
  7561  000FBE  0A01               	xorlw	1	; case 3
  7562  000FC0  E0CA               	bz	l5745
  7563  000FC2  0A07               	xorlw	7	; case 4
  7564  000FC4  E0CE               	bz	l5749
  7565  000FC6  0A01               	xorlw	1	; case 5
  7566  000FC8  E0DB               	bz	l5759
  7567  000FCA  0A03               	xorlw	3	; case 6
  7568  000FCC  E0E0               	bz	l5765
  7569  000FCE  0A01               	xorlw	1	; case 7
  7570  000FD0  E0E2               	bz	l5769
  7571  000FD2  0012               	return		;funcret
  7572  000FD4                     __end_of_TeTeclat:
  7573                           	callstack 0
  7574  000FD4                     PL8:
  7575                           	callstack 27
  7576  000FD4  0EFD               	movlw	253
  7577  000FD6  6E57               	movwf	??_TeTeclat^0,c
  7578  000FD8  6858               	setf	(??_TeTeclat+1)^0,c
  7579  000FDA  503F               	movf	TeTeclat@files^0,w,c
  7580  000FDC  0D03               	mullw	3
  7581  000FDE  0E50               	movlw	low _teclaPremuda
  7582  000FE0  6E59               	movwf	(??_TeTeclat+2)^0,c
  7583  000FE2  0E1D               	movlw	high _teclaPremuda
  7584  000FE4  6E5A               	movwf	(??_TeTeclat+3)^0,c
  7585  000FE6  50F3               	movf	243,w,c
  7586  000FE8  2659               	addwf	(??_TeTeclat+2)^0,f,c
  7587  000FEA  50F4               	movf	244,w,c
  7588  000FEC  225A               	addwfc	(??_TeTeclat+3)^0,f,c
  7589  000FEE  5040               	movf	TeTeclat@cols^0,w,c
  7590  000FF0  2659               	addwf	(??_TeTeclat+2)^0,f,c
  7591  000FF2  0E00               	movlw	0
  7592  000FF4  225A               	addwfc	(??_TeTeclat+3)^0,f,c
  7593  000FF6  5057               	movf	??_TeTeclat^0,w,c
  7594  000FF8  2659               	addwf	(??_TeTeclat+2)^0,f,c
  7595  000FFA  5058               	movf	(??_TeTeclat+1)^0,w,c
  7596  000FFC  225A               	addwfc	(??_TeTeclat+3)^0,f,c
  7597  000FFE  C059  FFF6         	movff	??_TeTeclat+2,tblptrl
  7598  001002  C05A  FFF7         	movff	??_TeTeclat+3,tblptrh
  7599  001006                     	if	0	;tblptru may be non-zero
  7600  001006                     	endif
  7601  001006                     	if	0	;tblptru may be non-zero
  7602  001006                     	endif
  7603  001006  0008               	tblrd		*
  7604  001008  50F5               	movf	tablat,w,c
  7605  00100A  0012               	return	
  7606  00100C                     __end_ofPL8:
  7607                           	callstack 0
  7608                           
  7609 ;; *************** function _SsetNovaTecla *****************
  7610 ;; Defined at:
  7611 ;;		line 124 in file "Ssms.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  tecla           1    wreg     unsigned char 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;  tecla           1    5[COMRAM] unsigned char 
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  1    wreg      void 
  7618 ;; Registers used:
  7619 ;;		wreg
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMRAM   BANK0   BANK1
  7625 ;;      Params:         0       0       0
  7626 ;;      Locals:         1       0       0
  7627 ;;      Temps:          0       0       0
  7628 ;;      Totals:         1       0       0
  7629 ;;Total ram usage:        1 bytes
  7630 ;; Hardware stack levels used: 1
  7631 ;; Hardware stack levels required when called: 2
  7632 ;; This function calls:
  7633 ;;		Nothing
  7634 ;; This function is called by:
  7635 ;;		_TeTeclat
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text62
  7640  001C2E                     __ptext62:
  7641                           	callstack 0
  7642  001C2E                     _SsetNovaTecla:
  7643                           	callstack 27
  7644                           
  7645                           ;incstack = 0
  7646  001C2E  0012               	return		;funcret
  7647  001C30                     __end_of_SsetNovaTecla:
  7648                           	callstack 0
  7649                           
  7650 ;; *************** function _MsetNovaTecla *****************
  7651 ;; Defined at:
  7652 ;;		line 31 in file "Menu.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  tecla           1    wreg     unsigned char 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;  tecla           1    5[COMRAM] unsigned char 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  1    wreg      void 
  7659 ;; Registers used:
  7660 ;;		wreg
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMRAM   BANK0   BANK1
  7666 ;;      Params:         0       0       0
  7667 ;;      Locals:         1       0       0
  7668 ;;      Temps:          0       0       0
  7669 ;;      Totals:         1       0       0
  7670 ;;Total ram usage:        1 bytes
  7671 ;; Hardware stack levels used: 1
  7672 ;; Hardware stack levels required when called: 2
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_TeTeclat
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text63
  7681  001BB2                     __ptext63:
  7682                           	callstack 0
  7683  001BB2                     _MsetNovaTecla:
  7684                           	callstack 27
  7685                           
  7686                           ;incstack = 0
  7687                           ;MsetNovaTecla@tecla stored from wreg
  7688  001BB2  6E50               	movwf	MsetNovaTecla@tecla^0,c
  7689                           
  7690                           ;Menu.c: 32:     NovaTecla = tecla;
  7691  001BB4  C050  F06C         	movff	MsetNovaTecla@tecla,_NovaTecla
  7692  001BB8  0012               	return		;funcret
  7693  001BBA                     __end_of_MsetNovaTecla:
  7694                           	callstack 0
  7695                           
  7696 ;; *************** function _TeInit *****************
  7697 ;; Defined at:
  7698 ;;		line 17 in file "TeTeclat.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;		None
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;		None
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  1    wreg      void 
  7705 ;; Registers used:
  7706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7707 ;; Tracked objects:
  7708 ;;		On entry : 0/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMRAM   BANK0   BANK1
  7712 ;;      Params:         0       0       0
  7713 ;;      Locals:         0       0       0
  7714 ;;      Temps:          0       0       0
  7715 ;;      Totals:         0       0       0
  7716 ;;Total ram usage:        0 bytes
  7717 ;; Hardware stack levels used: 1
  7718 ;; Hardware stack levels required when called: 3
  7719 ;; This function calls:
  7720 ;;		_TiGetTimer
  7721 ;; This function is called by:
  7722 ;;		_main
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           	psect	text64
  7727  001BBA                     __ptext64:
  7728                           	callstack 0
  7729  001BBA                     _TeInit:
  7730                           	callstack 27
  7731                           
  7732                           ;TeTeclat.c: 18:     tiTeclat=TiGetTimer();
  7733                           
  7734                           ;incstack = 0
  7735  001BBA  EC55  F00C         	call	_TiGetTimer	;wreg free
  7736  001BBE  6E42               	movwf	_tiTeclat^0,c
  7737  001BC0  0012               	return		;funcret
  7738  001BC2                     __end_of_TeInit:
  7739                           	callstack 0
  7740                           
  7741 ;; *************** function _Sinit *****************
  7742 ;; Defined at:
  7743 ;;		line 18 in file "Ssms.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;		None
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;		None
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  1    wreg      void 
  7750 ;; Registers used:
  7751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMRAM   BANK0   BANK1
  7757 ;;      Params:         0       0       0
  7758 ;;      Locals:         0       0       0
  7759 ;;      Temps:          0       0       0
  7760 ;;      Totals:         0       0       0
  7761 ;;Total ram usage:        0 bytes
  7762 ;; Hardware stack levels used: 1
  7763 ;; Hardware stack levels required when called: 3
  7764 ;; This function calls:
  7765 ;;		_TiGetTimer
  7766 ;; This function is called by:
  7767 ;;		_main
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text65
  7772  001C26                     __ptext65:
  7773                           	callstack 0
  7774  001C26                     _Sinit:
  7775                           	callstack 27
  7776                           
  7777                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  7778                           
  7779                           ;incstack = 0
  7780  001C26  EF55  F00C         	goto	_TiGetTimer	;wreg free
  7781  001C2A                     __end_of_Sinit:
  7782                           	callstack 0
  7783                           
  7784 ;; *************** function _Minit *****************
  7785 ;; Defined at:
  7786 ;;		line 28 in file "Menu.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1    wreg      void 
  7793 ;; Registers used:
  7794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1
  7800 ;;      Params:         0       0       0
  7801 ;;      Locals:         0       0       0
  7802 ;;      Temps:          0       0       0
  7803 ;;      Totals:         0       0       0
  7804 ;;Total ram usage:        0 bytes
  7805 ;; Hardware stack levels used: 1
  7806 ;; Hardware stack levels required when called: 3
  7807 ;; This function calls:
  7808 ;;		_TiGetTimer
  7809 ;; This function is called by:
  7810 ;;		_main
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text66
  7815  001BC2                     __ptext66:
  7816                           	callstack 0
  7817  001BC2                     _Minit:
  7818                           	callstack 27
  7819                           
  7820                           ;Menu.c: 29:     timerMenu = TiGetTimer();
  7821                           
  7822                           ;incstack = 0
  7823  001BC2  EC55  F00C         	call	_TiGetTimer	;wreg free
  7824  001BC6  6E3C               	movwf	_timerMenu^0,c
  7825  001BC8  0012               	return		;funcret
  7826  001BCA                     __end_of_Minit:
  7827                           	callstack 0
  7828                           
  7829 ;; *************** function _LcLCD *****************
  7830 ;; Defined at:
  7831 ;;		line 232 in file "LcTLCD.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;		None
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;		None
  7836 ;; Return value:  Size  Location     Type
  7837 ;;                  1    wreg      void 
  7838 ;; Registers used:
  7839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7840 ;; Tracked objects:
  7841 ;;		On entry : 0/0
  7842 ;;		On exit  : 0/0
  7843 ;;		Unchanged: 0/0
  7844 ;; Data sizes:     COMRAM   BANK0   BANK1
  7845 ;;      Params:         0       0       0
  7846 ;;      Locals:         0       0       0
  7847 ;;      Temps:          0       0       0
  7848 ;;      Totals:         0       0       0
  7849 ;;Total ram usage:        0 bytes
  7850 ;; Hardware stack levels used: 1
  7851 ;; Hardware stack levels required when called: 6
  7852 ;; This function calls:
  7853 ;;		_LcPutChar
  7854 ;; This function is called by:
  7855 ;;		_main
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	text67
  7860  00167A                     __ptext67:
  7861                           	callstack 0
  7862  00167A                     _LcLCD:
  7863                           	callstack 24
  7864                           
  7865                           ;LcTLCD.c: 233:     if(nou_s == 1){
  7866                           
  7867                           ;incstack = 0
  7868  00167A  A078               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7869  00167C  0012               	return	
  7870                           
  7871                           ;LcTLCD.c: 234:         LcPutChar(*s_ptr);
  7872  00167E  D818               	call	PL32	;call to abstracted procedure
  7873  001680  64F7               	cpfsgt	tblptrh,c
  7874  001682  D003               	bra	u3597
  7875  001684  0008               	tblrd		*
  7876  001686  50F5               	movf	tablat,w,c
  7877  001688  D001               	bra	u3590
  7878  00168A                     u3597:
  7879  00168A  D819               	call	PL44	;call to abstracted procedure
  7880  00168C                     u3590:
  7881  00168C  EC65  F00B         	call	_LcPutChar
  7882                           
  7883                           ;LcTLCD.c: 235:         s_ptr++;
  7884  001690  4A17               	infsnz	_s_ptr^0,f,c
  7885  001692  2A18               	incf	(_s_ptr+1)^0,f,c
  7886                           
  7887                           ;LcTLCD.c: 236:         if(*s_ptr == '\0'){
  7888  001694  D80D               	call	PL32	;call to abstracted procedure
  7889  001696  64F7               	cpfsgt	tblptrh,c
  7890  001698  D003               	bra	u3607
  7891  00169A  0008               	tblrd		*
  7892  00169C  50F5               	movf	tablat,w,c
  7893  00169E  D001               	bra	u3600
  7894  0016A0                     u3607:
  7895  0016A0  D80E               	call	PL44	;call to abstracted procedure
  7896  0016A2                     u3600:
  7897  0016A2  0900               	iorlw	0
  7898  0016A4  A4D8               	btfss	status,2,c
  7899  0016A6  0012               	return	
  7900                           
  7901                           ;LcTLCD.c: 237:             nou_s = 0;
  7902  0016A8  9078               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7903                           
  7904                           ;LcTLCD.c: 238:             s_ptr=0;
  7905  0016AA  6A17               	clrf	_s_ptr^0,c
  7906  0016AC  6A18               	clrf	(_s_ptr+1)^0,c
  7907  0016AE  0012               	return		;funcret
  7908  0016B0                     __end_of_LcLCD:
  7909                           	callstack 0
  7910  0016B0                     PL32:
  7911                           	callstack 24
  7912  0016B0  C017  FFF6         	movff	_s_ptr,tblptrl
  7913  0016B4  C018  FFF7         	movff	_s_ptr+1,tblptrh
  7914  0016B8  6AF8               	clrf	tblptru,c
  7915  0016BA  0E01               	movlw	(high __ramtop+-1)
  7916  0016BC  0012               	return	
  7917  0016BE                     __end_ofPL32:
  7918                           	callstack 0
  7919  0016BE                     PL44:
  7920                           	callstack 24
  7921  0016BE  CFF6 FFE1          	movff	tblptrl,fsr1l
  7922  0016C2  CFF7 FFE2          	movff	tblptrh,fsr1h
  7923  0016C6  50E7               	movf	indf1,w,c
  7924  0016C8  0012               	return	
  7925  0016CA                     __end_ofPL44:
  7926                           	callstack 0
  7927                           
  7928 ;; *************** function _LcInit *****************
  7929 ;; Defined at:
  7930 ;;		line 41 in file "LcTLCD.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;  rows            1    wreg     unsigned char 
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  rows            1   16[COMRAM] unsigned char 
  7935 ;;  i               2   17[COMRAM] int 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  1    wreg      void 
  7938 ;; Registers used:
  7939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1
  7945 ;;      Params:         0       0       0
  7946 ;;      Locals:         3       0       0
  7947 ;;      Temps:          0       0       0
  7948 ;;      Totals:         3       0       0
  7949 ;;Total ram usage:        3 bytes
  7950 ;; Hardware stack levels used: 1
  7951 ;; Hardware stack levels required when called: 4
  7952 ;; This function calls:
  7953 ;;		_CantaIR
  7954 ;;		_EscriuPrimeraOrdre
  7955 ;;		_Espera
  7956 ;;		_TiGetTimer
  7957 ;;		_WaitForBusy
  7958 ;; This function is called by:
  7959 ;;		_main
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	text68
  7964  001200                     __ptext68:
  7965                           	callstack 0
  7966  001200                     _LcInit:
  7967                           	callstack 26
  7968                           
  7969                           ;incstack = 0
  7970                           ;LcInit@rows stored from wreg
  7971  001200  6E5B               	movwf	LcInit@rows^0,c
  7972                           
  7973                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  7974  001202  EC55  F00C         	call	_TiGetTimer	;wreg free
  7975  001206  6E43               	movwf	_Timer^0,c
  7976                           
  7977                           ;LcTLCD.c: 49:  Rows = rows;
  7978  001208  C05B  F046         	movff	LcInit@rows,_Rows
  7979                           
  7980                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  7981  00120C  6A44               	clrf	_ColumnAct^0,c
  7982  00120E  6A45               	clrf	_RowAct^0,c
  7983                           
  7984                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  7985  001210  9894               	bcf	148,4,c	;volatile
  7986  001212  9E95               	bcf	149,7,c	;volatile
  7987  001214  9A94               	bcf	148,5,c	;volatile
  7988                           
  7989                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  7990  001216  6A5C               	clrf	LcInit@i^0,c
  7991  001218  6A5D               	clrf	(LcInit@i+1)^0,c
  7992  00121A                     l4321:
  7993                           
  7994                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  7995  00121A  6A58               	clrf	(Espera@ms+1)^0,c
  7996  00121C  0E64               	movlw	100
  7997  00121E  6E57               	movwf	Espera@ms^0,c
  7998  001220  5043               	movf	_Timer^0,w,c
  7999  001222  ECDA  F00C         	call	_Espera
  8000                           
  8001                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  8002  001226  0E03               	movlw	3
  8003  001228  EC3B  F00A         	call	_EscriuPrimeraOrdre
  8004                           
  8005                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  8006  00122C  6A58               	clrf	(Espera@ms+1)^0,c
  8007  00122E  0E05               	movlw	5
  8008  001230  6E57               	movwf	Espera@ms^0,c
  8009  001232  5043               	movf	_Timer^0,w,c
  8010  001234  ECDA  F00C         	call	_Espera
  8011                           
  8012                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  8013  001238  0E03               	movlw	3
  8014  00123A  EC3B  F00A         	call	_EscriuPrimeraOrdre
  8015                           
  8016                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  8017  00123E  D83A               	call	PL60	;call to abstracted procedure
  8018  001240  ECDA  F00C         	call	_Espera
  8019                           
  8020                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  8021  001244  0E03               	movlw	3
  8022  001246  EC3B  F00A         	call	_EscriuPrimeraOrdre
  8023                           
  8024                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  8025  00124A  D834               	call	PL60	;call to abstracted procedure
  8026  00124C  ECDA  F00C         	call	_Espera
  8027                           
  8028                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  8029  001250  0E02               	movlw	2
  8030  001252  EC3B  F00A         	call	_EscriuPrimeraOrdre
  8031                           
  8032                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  8033  001256  6A58               	clrf	(Espera@ms+1)^0,c
  8034  001258  0E04               	movlw	4
  8035  00125A  6E57               	movwf	Espera@ms^0,c
  8036  00125C  5043               	movf	_Timer^0,w,c
  8037  00125E  ECDA  F00C         	call	_Espera
  8038                           
  8039                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  8040  001262  0E28               	movlw	40
  8041  001264  EC08  F00D         	call	_CantaIR
  8042                           
  8043                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  8044  001268  ECCC  F00B         	call	_WaitForBusy	;wreg free
  8045  00126C  0E08               	movlw	8
  8046  00126E  EC08  F00D         	call	_CantaIR
  8047                           
  8048                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  8049  001272  ECCC  F00B         	call	_WaitForBusy	;wreg free
  8050  001276  0E01               	movlw	1
  8051  001278  EC08  F00D         	call	_CantaIR
  8052                           
  8053                           ;LcTLCD.c: 71:   Espera(Timer,3);
  8054  00127C  ECD5  F00C         	call	PL58	;call to abstracted procedure
  8055  001280  ECDA  F00C         	call	_Espera
  8056                           
  8057                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  8058  001284  ECCC  F00B         	call	_WaitForBusy	;wreg free
  8059  001288  0E06               	movlw	6
  8060  00128A  EC08  F00D         	call	_CantaIR
  8061                           
  8062                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  8063  00128E  ECCC  F00B         	call	_WaitForBusy	;wreg free
  8064  001292  0E0F               	movlw	15
  8065  001294  EC08  F00D         	call	_CantaIR
  8066                           
  8067                           ;LcTLCD.c: 74:  }
  8068  001298  4A5C               	infsnz	LcInit@i^0,f,c
  8069  00129A  2A5D               	incf	(LcInit@i+1)^0,f,c
  8070  00129C  BE5D               	btfsc	(LcInit@i+1)^0,7,c
  8071  00129E  D7BD               	goto	l4321
  8072  0012A0  505D               	movf	(LcInit@i+1)^0,w,c
  8073  0012A2  E103               	bnz	u3570
  8074  0012A4  0E02               	movlw	2
  8075  0012A6  5C5C               	subwf	LcInit@i^0,w,c
  8076  0012A8  E3B8               	bnc	l4321
  8077  0012AA                     u3570:
  8078                           
  8079                           ;LcTLCD.c: 80:     WaitForBusy();
  8080  0012AA  ECCC  F00B         	call	_WaitForBusy	;wreg free
  8081                           
  8082                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  8083  0012AE  0E0C               	movlw	12
  8084  0012B0  EF08  F00D         	goto	_CantaIR
  8085  0012B4                     __end_of_LcInit:
  8086                           	callstack 0
  8087  0012B4                     PL60:
  8088                           	callstack 26
  8089  0012B4  6A58               	clrf	(Espera@ms+1)^0,c
  8090  0012B6  0E01               	movlw	1
  8091  0012B8  6E57               	movwf	Espera@ms^0,c
  8092  0012BA  5043               	movf	_Timer^0,w,c
  8093  0012BC  0012               	return	
  8094  0012BE                     __end_ofPL60:
  8095                           	callstack 0
  8096                           
  8097 ;; *************** function _EscriuPrimeraOrdre *****************
  8098 ;; Defined at:
  8099 ;;		line 216 in file "LcTLCD.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;  ordre           1    wreg     unsigned char 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;  ordre           1    6[COMRAM] unsigned char 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1
  8113 ;;      Params:         0       0       0
  8114 ;;      Locals:         1       0       0
  8115 ;;      Temps:          1       0       0
  8116 ;;      Totals:         2       0       0
  8117 ;;Total ram usage:        2 bytes
  8118 ;; Hardware stack levels used: 1
  8119 ;; Hardware stack levels required when called: 2
  8120 ;; This function calls:
  8121 ;;		Nothing
  8122 ;; This function is called by:
  8123 ;;		_LcInit
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text69
  8128  001476                     __ptext69:
  8129                           	callstack 0
  8130  001476                     _EscriuPrimeraOrdre:
  8131                           	callstack 27
  8132                           
  8133                           ;incstack = 0
  8134                           ;EscriuPrimeraOrdre@ordre stored from wreg
  8135  001476  6E51               	movwf	EscriuPrimeraOrdre@ordre^0,c
  8136                           
  8137                           ;LcTLCD.c: 218:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  8138  001478  9694               	bcf	148,3,c	;volatile
  8139                           
  8140                           ;LcTLCD.c: 219:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  8141  00147A  D82F               	call	PL38	;call to abstracted procedure
  8142  00147C  888B               	bsf	139,4,c	;volatile
  8143                           
  8144                           ;LcTLCD.c: 220:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  8145  00147E  A651               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  8146  001480  D003               	goto	u230
  8147  001482  6A50               	clrf	??_EscriuPrimeraOrdre^0,c
  8148  001484  2A50               	incf	??_EscriuPrimeraOrdre^0,f,c
  8149  001486  D001               	goto	u248
  8150  001488                     u230:
  8151  001488  6A50               	clrf	??_EscriuPrimeraOrdre^0,c
  8152  00148A                     u248:
  8153  00148A  4650               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8154  00148C  D82D               	call	PL54	;call to abstracted procedure
  8155  00148E  0BF7               	andlw	-9
  8156  001490  1850               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8157  001492  6E8B               	movwf	139,c	;volatile
  8158                           
  8159                           ;LcTLCD.c: 221:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  8160  001494  A451               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  8161  001496  D003               	goto	u250
  8162  001498  6A50               	clrf	??_EscriuPrimeraOrdre^0,c
  8163  00149A  2A50               	incf	??_EscriuPrimeraOrdre^0,f,c
  8164  00149C  D001               	goto	u268
  8165  00149E                     u250:
  8166  00149E  6A50               	clrf	??_EscriuPrimeraOrdre^0,c
  8167  0014A0                     u268:
  8168  0014A0  D823               	call	PL54	;call to abstracted procedure
  8169  0014A2  0BFB               	andlw	-5
  8170  0014A4  1850               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8171  0014A6  6E8B               	movwf	139,c	;volatile
  8172                           
  8173                           ;LcTLCD.c: 222:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  8174  0014A8  A251               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  8175  0014AA  D003               	goto	u270
  8176  0014AC  6A50               	clrf	??_EscriuPrimeraOrdre^0,c
  8177  0014AE  2A50               	incf	??_EscriuPrimeraOrdre^0,f,c
  8178  0014B0  D001               	goto	u288
  8179  0014B2                     u270:
  8180  0014B2  6A50               	clrf	??_EscriuPrimeraOrdre^0,c
  8181  0014B4                     u288:
  8182  0014B4  4650               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8183  0014B6  508B               	movf	139,w,c	;volatile
  8184  0014B8  1850               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8185  0014BA  0BFD               	andlw	-3
  8186  0014BC  1850               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8187  0014BE  6E8B               	movwf	139,c	;volatile
  8188                           
  8189                           ;LcTLCD.c: 223:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  8190  0014C0  A051               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  8191  0014C2  D003               	goto	u290
  8192  0014C4  6A50               	clrf	??_EscriuPrimeraOrdre^0,c
  8193  0014C6  2A50               	incf	??_EscriuPrimeraOrdre^0,f,c
  8194  0014C8  D001               	goto	u308
  8195  0014CA                     u290:
  8196  0014CA  6A50               	clrf	??_EscriuPrimeraOrdre^0,c
  8197  0014CC                     u308:
  8198  0014CC  508B               	movf	139,w,c	;volatile
  8199  0014CE  1850               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8200  0014D0  0BFE               	andlw	-2
  8201  0014D2  1850               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8202  0014D4  6E8B               	movwf	139,c	;volatile
  8203                           
  8204                           ;LcTLCD.c: 224:  (LATCbits.LATC4 = 0);
  8205  0014D6  988B               	bcf	139,4,c	;volatile
  8206  0014D8  0012               	return		;funcret
  8207  0014DA                     __end_of_EscriuPrimeraOrdre:
  8208                           	callstack 0
  8209  0014DA                     PL38:
  8210                           	callstack 24
  8211  0014DA  9494               	bcf	148,2,c	;volatile
  8212  0014DC  9294               	bcf	148,1,c	;volatile
  8213  0014DE  9094               	bcf	148,0,c	;volatile
  8214  0014E0  9A8B               	bcf	139,5,c	;volatile
  8215  0014E2  9E8C               	bcf	140,7,c	;volatile
  8216  0014E4  888B               	bsf	139,4,c	;volatile
  8217  0014E6  0012               	return	
  8218  0014E8                     __end_ofPL38:
  8219                           	callstack 0
  8220  0014E8                     PL54:
  8221                           	callstack 27
  8222  0014E8  4650               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8223  0014EA  4650               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  8224  0014EC  508B               	movf	139,w,c	;volatile
  8225  0014EE  1850               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  8226  0014F0  0012               	return	
  8227  0014F2                     __end_ofPL54:
  8228                           	callstack 0
  8229                           
  8230 ;; *************** function _JoystickMotor *****************
  8231 ;; Defined at:
  8232 ;;		line 18 in file "Joystick.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;		None
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;		None
  8237 ;; Return value:  Size  Location     Type
  8238 ;;                  1    wreg      void 
  8239 ;; Registers used:
  8240 ;;		wreg, status,2, status,0, cstack
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMRAM   BANK0   BANK1
  8246 ;;      Params:         0       0       0
  8247 ;;      Locals:         0       0       0
  8248 ;;      Temps:          2       0       0
  8249 ;;      Totals:         2       0       0
  8250 ;;Total ram usage:        2 bytes
  8251 ;; Hardware stack levels used: 1
  8252 ;; Hardware stack levels required when called: 3
  8253 ;; This function calls:
  8254 ;;		_MNouJoystick
  8255 ;; This function is called by:
  8256 ;;		_main
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text70
  8261  00112A                     __ptext70:
  8262                           	callstack 0
  8263  00112A                     _JoystickMotor:
  8264                           	callstack 27
  8265                           
  8266                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  8267                           
  8268                           ;incstack = 0
  8269  00112A  D056               	goto	l3107
  8270  00112C                     l1001:
  8271                           
  8272                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8273  00112C  B2C2               	btfsc	194,1,c	;volatile
  8274  00112E  D00B               	goto	l1002
  8275  001130  0EC8               	movlw	200
  8276  001132  60C4               	cpfslt	196,c	;volatile
  8277  001134  D008               	goto	l1002
  8278  001136  0E32               	movlw	50
  8279  001138  64C4               	cpfsgt	196,c	;volatile
  8280  00113A  D005               	goto	l1002
  8281                           
  8282                           ;Joystick.c: 23:     ADCON0 = 0x07;
  8283  00113C  0E07               	movlw	7
  8284  00113E  6EC2               	movwf	194,c	;volatile
  8285                           
  8286                           ;Joystick.c: 24:                 cap1 = 1;
  8287  001140  8E76               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8288  001142                     l3037:
  8289                           
  8290                           ;Joystick.c: 25:     state++;
  8291  001142  2A21               	incf	JoystickMotor@state^0,f,c
  8292                           
  8293                           ;Joystick.c: 26:    }
  8294  001144  D052               	goto	l1009
  8295  001146                     l1002:
  8296  001146  B2C2               	btfsc	194,1,c	;volatile
  8297  001148  D00F               	goto	l1004
  8298  00114A  0EC7               	movlw	199
  8299  00114C  64C4               	cpfsgt	196,c	;volatile
  8300  00114E  D00C               	goto	l1004
  8301                           
  8302                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  8303  001150  0E02               	movlw	2
  8304  001152  1822               	xorwf	_ultimaTeclaAD^0,w,c
  8305  001154  E003               	bz	l3045
  8306  001156  0E02               	movlw	2
  8307  001158  ECE5  F00D         	call	_MNouJoystick
  8308  00115C                     l3045:
  8309                           
  8310                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  8311  00115C  0E02               	movlw	2
  8312  00115E  6E22               	movwf	_ultimaTeclaAD^0,c
  8313                           
  8314                           ;Joystick.c: 30:     ADCON0 = 0x07;
  8315  001160  0E07               	movlw	7
  8316  001162  6EC2               	movwf	194,c	;volatile
  8317                           
  8318                           ;Joystick.c: 31:                 cap1 = 0;
  8319  001164  9E76               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8320  001166  D7ED               	goto	l3037
  8321  001168                     l1004:
  8322  001168  B2C2               	btfsc	194,1,c	;volatile
  8323  00116A  D03F               	goto	l1009
  8324  00116C  0E33               	movlw	51
  8325  00116E  60C4               	cpfslt	196,c	;volatile
  8326  001170  D03C               	goto	l1009
  8327                           
  8328                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  8329  001172  0E08               	movlw	8
  8330  001174  1822               	xorwf	_ultimaTeclaAD^0,w,c
  8331  001176  E003               	bz	l3059
  8332  001178  0E08               	movlw	8
  8333  00117A  ECE5  F00D         	call	_MNouJoystick
  8334  00117E                     l3059:
  8335                           
  8336                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  8337  00117E  0E08               	movlw	8
  8338  001180  D7EE               	goto	L4
  8339  001182                     l1010:
  8340                           
  8341                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8342  001182  B2C2               	btfsc	194,1,c	;volatile
  8343  001184  D00B               	goto	l1011
  8344  001186  0EC8               	movlw	200
  8345  001188  60C4               	cpfslt	196,c	;volatile
  8346  00118A  D008               	goto	l1011
  8347  00118C  0E32               	movlw	50
  8348  00118E  64C4               	cpfsgt	196,c	;volatile
  8349  001190  D005               	goto	l1011
  8350                           
  8351                           ;Joystick.c: 44:     ADCON0 = 0x03;
  8352  001192  0E03               	movlw	3
  8353  001194  6EC2               	movwf	194,c	;volatile
  8354                           
  8355                           ;Joystick.c: 45:                 cap2 = 1;
  8356  001196  8C76               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8357  001198                     l3075:
  8358                           
  8359                           ;Joystick.c: 46:     state--;
  8360  001198  0621               	decf	JoystickMotor@state^0,f,c
  8361                           
  8362                           ;Joystick.c: 47:    }
  8363  00119A  D027               	goto	l1009
  8364  00119C                     l1011:
  8365  00119C  B2C2               	btfsc	194,1,c	;volatile
  8366  00119E  D00F               	goto	l1013
  8367  0011A0  0EC7               	movlw	199
  8368  0011A2  64C4               	cpfsgt	196,c	;volatile
  8369  0011A4  D00C               	goto	l1013
  8370                           
  8371                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  8372  0011A6  0E06               	movlw	6
  8373  0011A8  1822               	xorwf	_ultimaTeclaAD^0,w,c
  8374  0011AA  E003               	bz	l3083
  8375  0011AC  0E06               	movlw	6
  8376  0011AE  ECE5  F00D         	call	_MNouJoystick
  8377  0011B2                     l3083:
  8378                           
  8379                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  8380  0011B2  0E06               	movlw	6
  8381  0011B4  6E22               	movwf	_ultimaTeclaAD^0,c
  8382                           
  8383                           ;Joystick.c: 51:     ADCON0 = 0x03;
  8384  0011B6  0E03               	movlw	3
  8385  0011B8  6EC2               	movwf	194,c	;volatile
  8386                           
  8387                           ;Joystick.c: 52:                 cap2 = 0;
  8388  0011BA  9C76               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8389  0011BC  D7ED               	goto	l3075
  8390  0011BE                     l1013:
  8391  0011BE  B2C2               	btfsc	194,1,c	;volatile
  8392  0011C0  D014               	goto	l1009
  8393  0011C2  0E33               	movlw	51
  8394  0011C4  60C4               	cpfslt	196,c	;volatile
  8395  0011C6  D011               	goto	l1009
  8396                           
  8397                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  8398  0011C8  0E04               	movlw	4
  8399  0011CA  1822               	xorwf	_ultimaTeclaAD^0,w,c
  8400  0011CC  E003               	bz	l3097
  8401  0011CE  0E04               	movlw	4
  8402  0011D0  ECE5  F00D         	call	_MNouJoystick
  8403  0011D4                     l3097:
  8404                           
  8405                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  8406  0011D4  0E04               	movlw	4
  8407  0011D6  D7EE               	goto	L5
  8408  0011D8                     l3107:
  8409  0011D8  5021               	movf	JoystickMotor@state^0,w,c
  8410  0011DA  6E51               	movwf	??_JoystickMotor^0,c
  8411  0011DC  6A52               	clrf	(??_JoystickMotor+1)^0,c
  8412                           
  8413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8414                           ; Switch size 1, requested type "space"
  8415                           ; Number of cases is 1, Range of values is 0 to 0
  8416                           ; switch strategies available:
  8417                           ; Name         Instructions Cycles
  8418                           ; simple_byte            4     3 (average)
  8419                           ;	Chosen strategy is simple_byte
  8420  0011DE  5052               	movf	(??_JoystickMotor+1)^0,w,c
  8421  0011E0  E104               	bnz	l1009
  8422                           
  8423                           ; Switch size 1, requested type "space"
  8424                           ; Number of cases is 2, Range of values is 0 to 1
  8425                           ; switch strategies available:
  8426                           ; Name         Instructions Cycles
  8427                           ; simple_byte            7     4 (average)
  8428                           ;	Chosen strategy is simple_byte
  8429  0011E2  5051               	movf	??_JoystickMotor^0,w,c
  8430  0011E4  E0A3               	bz	l1001
  8431  0011E6  0A01               	xorlw	1	; case 1
  8432  0011E8  E0CC               	bz	l1010
  8433  0011EA                     l1009:
  8434                           
  8435                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  8436  0011EA  BE76               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  8437  0011EC  AC76               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  8438  0011EE  0012               	return	
  8439  0011F0  5022               	movf	_ultimaTeclaAD^0,w,c
  8440  0011F2  B4D8               	btfsc	status,2,c
  8441  0011F4  0012               	return	
  8442                           
  8443                           ;Joystick.c: 66:         MNouJoystick(-1);
  8444  0011F6  0EFF               	movlw	255
  8445  0011F8  ECE5  F00D         	call	_MNouJoystick
  8446                           
  8447                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  8448  0011FC  6822               	setf	_ultimaTeclaAD^0,c
  8449  0011FE  0012               	return		;funcret
  8450  001200                     __end_of_JoystickMotor:
  8451                           	callstack 0
  8452                           
  8453 ;; *************** function _MNouJoystick *****************
  8454 ;; Defined at:
  8455 ;;		line 38 in file "Menu.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;  posicio         1    wreg     char 
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  posicio         1    5[COMRAM] char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      void 
  8462 ;; Registers used:
  8463 ;;		wreg
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1
  8469 ;;      Params:         0       0       0
  8470 ;;      Locals:         1       0       0
  8471 ;;      Temps:          0       0       0
  8472 ;;      Totals:         1       0       0
  8473 ;;Total ram usage:        1 bytes
  8474 ;; Hardware stack levels used: 1
  8475 ;; Hardware stack levels required when called: 2
  8476 ;; This function calls:
  8477 ;;		Nothing
  8478 ;; This function is called by:
  8479 ;;		_JoystickMotor
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           	psect	text71
  8484  001BCA                     __ptext71:
  8485                           	callstack 0
  8486  001BCA                     _MNouJoystick:
  8487                           	callstack 27
  8488                           
  8489                           ;incstack = 0
  8490                           ;MNouJoystick@posicio stored from wreg
  8491  001BCA  6E50               	movwf	MNouJoystick@posicio^0,c
  8492                           
  8493                           ;Menu.c: 39:     novaDireccio = posicio;
  8494  001BCC  C050  F06A         	movff	MNouJoystick@posicio,_novaDireccio
  8495  001BD0  0012               	return		;funcret
  8496  001BD2                     __end_of_MNouJoystick:
  8497                           	callstack 0
  8498                           
  8499 ;; *************** function _JoystickInit *****************
  8500 ;; Defined at:
  8501 ;;		line 12 in file "Joystick.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;		None
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		wreg, status,2
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1
  8515 ;;      Params:         0       0       0
  8516 ;;      Locals:         0       0       0
  8517 ;;      Temps:          0       0       0
  8518 ;;      Totals:         0       0       0
  8519 ;;Total ram usage:        0 bytes
  8520 ;; Hardware stack levels used: 1
  8521 ;; Hardware stack levels required when called: 2
  8522 ;; This function calls:
  8523 ;;		Nothing
  8524 ;; This function is called by:
  8525 ;;		_main
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text72
  8530  001A9C                     __ptext72:
  8531                           	callstack 0
  8532  001A9C                     _JoystickInit:
  8533                           	callstack 28
  8534                           
  8535                           ;Joystick.c: 13:     ADCON0 = 0x01;
  8536                           
  8537                           ;incstack = 0
  8538  001A9C  0E01               	movlw	1
  8539  001A9E  6EC2               	movwf	194,c	;volatile
  8540                           
  8541                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  8542  001AA0  0E0D               	movlw	13
  8543  001AA2  6EC1               	movwf	193,c	;volatile
  8544                           
  8545                           ;Joystick.c: 15:     ADCON2 = 0x09;
  8546  001AA4  0E09               	movlw	9
  8547  001AA6  6EC0               	movwf	192,c	;volatile
  8548                           
  8549                           ;Joystick.c: 16:     ADRESH = 127;
  8550  001AA8  0E7F               	movlw	127
  8551  001AAA  6EC4               	movwf	196,c	;volatile
  8552  001AAC  0C7F               	retlw	127	;funcret
  8553  001AAE                     __end_of_JoystickInit:
  8554                           	callstack 0
  8555                           
  8556 ;; *************** function _GLCDMotor *****************
  8557 ;; Defined at:
  8558 ;;		line 36 in file "GestioLCD.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;		None
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;		None
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  1    wreg      void 
  8565 ;; Registers used:
  8566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMRAM   BANK0   BANK1
  8572 ;;      Params:         0       0       0
  8573 ;;      Locals:         0       0       0
  8574 ;;      Temps:          2       0       0
  8575 ;;      Totals:         2       0       0
  8576 ;;Total ram usage:        2 bytes
  8577 ;; Hardware stack levels used: 1
  8578 ;; Hardware stack levels required when called: 6
  8579 ;; This function calls:
  8580 ;;		_LcClear
  8581 ;;		_LcGotoXY
  8582 ;;		_LcLliure
  8583 ;;		_LcNewString
  8584 ;;		_LcPutChar
  8585 ;;		_TiGetTics
  8586 ;;		_TiResetTics
  8587 ;; This function is called by:
  8588 ;;		_main
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text73
  8593  0007C2                     __ptext73:
  8594                           	callstack 0
  8595  0007C2                     _GLCDMotor:
  8596                           	callstack 24
  8597                           
  8598                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  8599                           
  8600                           ;incstack = 0
  8601  0007C2  D0FD               	goto	l4683
  8602  0007C4                     l4499:
  8603                           
  8604                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  8605  0007C4  0E11               	movlw	17
  8606  0007C6  6024               	cpfslt	GLCDMotor@length1^0,c
  8607  0007C8  D00E               	goto	l4509
  8608  0007CA  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8609  0007CC  D00C               	goto	l4509
  8610                           
  8611                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  8612  0007CE  0E00               	movlw	0
  8613  0007D0  6E58               	movwf	LcGotoXY@Row^0,c
  8614  0007D2  EC3B  F00C         	call	_LcGotoXY
  8615                           
  8616                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  8617  0007D6  502B               	movf	_menuDaltGLCD^0,w,c
  8618  0007D8  0D1D               	mullw	29
  8619  0007DA  D930               	call	PL36	;call to abstracted procedure
  8620  0007DC  ECA0  F00D         	call	_LcNewString	;wreg free
  8621                           
  8622                           ;GestioLCD.c: 53:     state = 5;
  8623  0007E0  0E05               	movlw	5
  8624  0007E2  6E2A               	movwf	GLCDMotor@state^0,c
  8625                           
  8626                           ;GestioLCD.c: 54:    }
  8627  0007E4  0C05               	retlw	5
  8628  0007E6                     l4509:
  8629  0007E6  0E10               	movlw	16
  8630  0007E8  6424               	cpfsgt	GLCDMotor@length1^0,c
  8631  0007EA  0C10               	retlw	16
  8632  0007EC  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8633  0007EE  0C10               	retlw	16
  8634  0007F0                     u3750:
  8635                           
  8636                           ;GestioLCD.c: 56:     state++;
  8637  0007F0  2A2A               	incf	GLCDMotor@state^0,f,c
  8638  0007F2  0012               	return	
  8639  0007F4                     l4515:
  8640                           
  8641                           ;GestioLCD.c: 60:    if (j>=16) {
  8642  0007F4  0E0F               	movlw	15
  8643  0007F6  6429               	cpfsgt	GLCDMotor@j^0,c
  8644  0007F8  D012               	goto	l4529
  8645                           
  8646                           ;GestioLCD.c: 61:     min1++;
  8647  0007FA  2A28               	incf	GLCDMotor@min1^0,f,c
  8648                           
  8649                           ;GestioLCD.c: 62:     max1++;
  8650  0007FC  2A68               	incf	GLCDMotor@max1^0,f,c
  8651                           
  8652                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  8653  0007FE  D905               	call	PL2	;call to abstracted procedure
  8654  000800  5068               	movf	GLCDMotor@max1^0,w,c
  8655  000802  D90E               	call	PL4	;call to abstracted procedure
  8656  000804  E101               	bnz	l4523
  8657  000806  6A68               	clrf	GLCDMotor@max1^0,c
  8658  000808                     l4523:
  8659                           
  8660                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  8661  000808  D900               	call	PL2	;call to abstracted procedure
  8662  00080A  5028               	movf	GLCDMotor@min1^0,w,c
  8663  00080C  D909               	call	PL4	;call to abstracted procedure
  8664  00080E  E101               	bnz	l932
  8665  000810  6A28               	clrf	GLCDMotor@min1^0,c
  8666  000812                     l932:
  8667                           
  8668                           ;GestioLCD.c: 65:     j=0;
  8669  000812  6A29               	clrf	GLCDMotor@j^0,c
  8670                           
  8671                           ;GestioLCD.c: 66:     k1=min1;
  8672  000814  C028  F026         	movff	GLCDMotor@min1,GLCDMotor@k1
  8673                           
  8674                           ;GestioLCD.c: 67:     state = 6;
  8675  000818  0E06               	movlw	6
  8676  00081A  6E2A               	movwf	GLCDMotor@state^0,c
  8677                           
  8678                           ;GestioLCD.c: 68:    }
  8679  00081C  0C06               	retlw	6
  8680  00081E                     l4529:
  8681  00081E  0E10               	movlw	16
  8682  000820  6029               	cpfslt	GLCDMotor@j^0,c
  8683  000822  0C10               	retlw	16
  8684                           
  8685                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  8686  000824  0E00               	movlw	0
  8687  000826  6E58               	movwf	LcGotoXY@Row^0,c
  8688  000828  5029               	movf	GLCDMotor@j^0,w,c
  8689  00082A  EC3B  F00C         	call	_LcGotoXY
  8690                           
  8691                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  8692  00082E  D8ED               	call	PL2	;call to abstracted procedure
  8693  000830  5026               	movf	GLCDMotor@k1^0,w,c
  8694  000832  D8F6               	call	PL4	;call to abstracted procedure
  8695  000834  EC65  F00B         	call	_LcPutChar
  8696                           
  8697                           ;GestioLCD.c: 72:     j++;
  8698  000838  2A29               	incf	GLCDMotor@j^0,f,c
  8699                           
  8700                           ;GestioLCD.c: 73:     k1++;
  8701  00083A  2A26               	incf	GLCDMotor@k1^0,f,c
  8702                           
  8703                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  8704  00083C  D8E6               	call	PL2	;call to abstracted procedure
  8705  00083E  5026               	movf	GLCDMotor@k1^0,w,c
  8706  000840  D8EF               	call	PL4	;call to abstracted procedure
  8707  000842  B4D8               	btfsc	status,2,c
  8708  000844  6A26               	clrf	GLCDMotor@k1^0,c
  8709  000846  0012               	return	
  8710  000848                     l4543:
  8711                           
  8712                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  8713  000848  0E04               	movlw	4
  8714  00084A  602B               	cpfslt	_menuDaltGLCD^0,c
  8715  00084C  D010               	goto	u3850
  8716  00084E  D7D0               	goto	u3750
  8717  000850                     u3820:
  8718                           
  8719                           ;GestioLCD.c: 82:     state = 0;
  8720  000850  6A2A               	clrf	GLCDMotor@state^0,c
  8721  000852  0012               	return	
  8722  000854                     l4551:
  8723                           
  8724                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  8725  000854  ECA6  F00D         	call	_LcLliure	;wreg free
  8726  000858  E306               	bnc	l4557
  8727  00085A  0E04               	movlw	4
  8728  00085C  602B               	cpfslt	_menuDaltGLCD^0,c
  8729  00085E  D003               	goto	l4557
  8730                           
  8731                           ;GestioLCD.c: 87:     state = 7;
  8732  000860  0E07               	movlw	7
  8733  000862  6E2A               	movwf	GLCDMotor@state^0,c
  8734                           
  8735                           ;GestioLCD.c: 88:    }
  8736  000864  0C07               	retlw	7
  8737  000866                     l4557:
  8738  000866  ECA6  F00D         	call	_LcLliure	;wreg free
  8739  00086A  A0D8               	btfss	status,0,c
  8740  00086C  0012               	return	
  8741  00086E                     u3850:
  8742  00086E  0E03               	movlw	3
  8743  000870  642B               	cpfsgt	_menuDaltGLCD^0,c
  8744  000872  0C03               	retlw	3
  8745  000874  D7ED               	goto	u3820
  8746  000876                     l944:
  8747                           
  8748                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  8749  000876  B077               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8750  000878  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8751  00087A  0012               	return	
  8752                           
  8753                           ;GestioLCD.c: 95:     length1 = 0;
  8754  00087C  6A24               	clrf	GLCDMotor@length1^0,c
  8755                           
  8756                           ;GestioLCD.c: 96:     length2 = 0;
  8757  00087E  6A23               	clrf	GLCDMotor@length2^0,c
  8758                           
  8759                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  8760  000880  0E00               	movlw	0
  8761  000882  6E58               	movwf	LcGotoXY@Row^0,c
  8762  000884  EC3B  F00C         	call	_LcGotoXY
  8763                           
  8764                           ;GestioLCD.c: 98:     min1 = 0;
  8765  000888  6A28               	clrf	GLCDMotor@min1^0,c
  8766                           
  8767                           ;GestioLCD.c: 99:     max1 = 15;
  8768  00088A  0E0F               	movlw	15
  8769  00088C  6E68               	movwf	GLCDMotor@max1^0,c
  8770                           
  8771                           ;GestioLCD.c: 100:     min2 = 0;
  8772  00088E  6A27               	clrf	GLCDMotor@min2^0,c
  8773                           
  8774                           ;GestioLCD.c: 101:     max2 = 15;
  8775  000890  0E0F               	movlw	15
  8776  000892  6E67               	movwf	GLCDMotor@max2^0,c
  8777                           
  8778                           ;GestioLCD.c: 102:     j = 0;
  8779  000894  6A29               	clrf	GLCDMotor@j^0,c
  8780                           
  8781                           ;GestioLCD.c: 103:     k1 = 0;
  8782  000896  6A26               	clrf	GLCDMotor@k1^0,c
  8783                           
  8784                           ;GestioLCD.c: 104:     k2 = 0;
  8785  000898  6A25               	clrf	GLCDMotor@k2^0,c
  8786                           
  8787                           ;GestioLCD.c: 105:     newString = 0;
  8788  00089A  9077               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  8789  00089C  D7A9               	goto	u3750
  8790  00089E                     l4587:
  8791                           
  8792                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  8793  00089E  D8B5               	call	PL2	;call to abstracted procedure
  8794  0008A0  5024               	movf	GLCDMotor@length1^0,w,c
  8795  0008A2  D8BE               	call	PL4	;call to abstracted procedure
  8796  0008A4  E104               	bnz	l4593
  8797  0008A6  0E03               	movlw	3
  8798  0008A8  642B               	cpfsgt	_menuDaltGLCD^0,c
  8799  0008AA  D001               	goto	l4593
  8800  0008AC  D7A1               	goto	u3750
  8801  0008AE                     l4593:
  8802  0008AE  D8AD               	call	PL2	;call to abstracted procedure
  8803  0008B0  5024               	movf	GLCDMotor@length1^0,w,c
  8804  0008B2  D8B6               	call	PL4	;call to abstracted procedure
  8805  0008B4  E002               	bz	l4597
  8806                           
  8807                           ;GestioLCD.c: 114:     length1++;
  8808  0008B6  2A24               	incf	GLCDMotor@length1^0,f,c
  8809                           
  8810                           ;GestioLCD.c: 115:    }
  8811  0008B8  0012               	return	
  8812  0008BA                     l4597:
  8813  0008BA  0E04               	movlw	4
  8814  0008BC  602B               	cpfslt	_menuDaltGLCD^0,c
  8815  0008BE  0C04               	retlw	4
  8816  0008C0  D8A4               	call	PL2	;call to abstracted procedure
  8817  0008C2  5024               	movf	GLCDMotor@length1^0,w,c
  8818  0008C4  D8AD               	call	PL4	;call to abstracted procedure
  8819  0008C6  A4D8               	btfss	status,2,c
  8820  0008C8  0012               	return	
  8821                           
  8822                           ;GestioLCD.c: 117:     state = 13;
  8823  0008CA  0E0D               	movlw	13
  8824  0008CC  6E2A               	movwf	GLCDMotor@state^0,c
  8825  0008CE  0C0D               	retlw	13
  8826  0008D0                     l4603:
  8827                           
  8828                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  8829  0008D0  0E11               	movlw	17
  8830  0008D2  6023               	cpfslt	GLCDMotor@length2^0,c
  8831  0008D4  D010               	goto	l4613
  8832  0008D6  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8833  0008D8  D00E               	goto	l4613
  8834                           
  8835                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  8836  0008DA  ECC5  F003         	call	PL30	;call to abstracted procedure
  8837  0008DE  EC3B  F00C         	call	_LcGotoXY
  8838                           
  8839                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  8840  0008E2  502B               	movf	_menuDaltGLCD^0,w,c
  8841  0008E4  0D1D               	mullw	29
  8842  0008E6  0E1D               	movlw	29
  8843  0008E8  26F3               	addwf	243,f,c
  8844  0008EA  0E00               	movlw	0
  8845  0008EC  22F4               	addwfc	244,f,c
  8846  0008EE  D8A6               	call	PL36	;call to abstracted procedure
  8847  0008F0  ECA0  F00D         	call	_LcNewString	;wreg free
  8848  0008F4  D77D               	goto	u3750
  8849  0008F6                     l4613:
  8850  0008F6  0E10               	movlw	16
  8851  0008F8  6423               	cpfsgt	GLCDMotor@length2^0,c
  8852  0008FA  0C10               	retlw	16
  8853  0008FC  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8854  0008FE  0C10               	retlw	16
  8855                           
  8856                           ;GestioLCD.c: 127:     state = 9;
  8857  000900  0E09               	movlw	9
  8858  000902  6E2A               	movwf	GLCDMotor@state^0,c
  8859  000904  0C09               	retlw	9
  8860  000906                     l4619:
  8861                           
  8862                           ;GestioLCD.c: 131:    if (j<16) {
  8863  000906  0E10               	movlw	16
  8864  000908  6029               	cpfslt	GLCDMotor@j^0,c
  8865  00090A  D014               	goto	l4633
  8866                           
  8867                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  8868  00090C  0E01               	movlw	1
  8869  00090E  6E58               	movwf	LcGotoXY@Row^0,c
  8870  000910  5029               	movf	GLCDMotor@j^0,w,c
  8871  000912  EC3B  F00C         	call	_LcGotoXY
  8872                           
  8873                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  8874  000916  D879               	call	PL2	;call to abstracted procedure
  8875  000918  5025               	movf	GLCDMotor@k2^0,w,c
  8876  00091A  D88C               	call	PL6	;call to abstracted procedure
  8877  00091C  D881               	call	PL4	;call to abstracted procedure
  8878  00091E  EC65  F00B         	call	_LcPutChar
  8879                           
  8880                           ;GestioLCD.c: 134:     j++;
  8881  000922  2A29               	incf	GLCDMotor@j^0,f,c
  8882                           
  8883                           ;GestioLCD.c: 135:     k2++;
  8884  000924  2A25               	incf	GLCDMotor@k2^0,f,c
  8885                           
  8886                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  8887  000926  D871               	call	PL2	;call to abstracted procedure
  8888  000928  5025               	movf	GLCDMotor@k2^0,w,c
  8889  00092A  D884               	call	PL6	;call to abstracted procedure
  8890  00092C  D879               	call	PL4	;call to abstracted procedure
  8891  00092E  B4D8               	btfsc	status,2,c
  8892  000930  6A25               	clrf	GLCDMotor@k2^0,c
  8893  000932  0012               	return	
  8894  000934                     l4633:
  8895  000934  0E0F               	movlw	15
  8896  000936  6429               	cpfsgt	GLCDMotor@j^0,c
  8897  000938  0C0F               	retlw	15
  8898                           
  8899                           ;GestioLCD.c: 139:     min2++;
  8900  00093A  2A27               	incf	GLCDMotor@min2^0,f,c
  8901                           
  8902                           ;GestioLCD.c: 140:     max2++;
  8903  00093C  2A67               	incf	GLCDMotor@max2^0,f,c
  8904                           
  8905                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  8906  00093E  D865               	call	PL2	;call to abstracted procedure
  8907  000940  5067               	movf	GLCDMotor@max2^0,w,c
  8908  000942  D878               	call	PL6	;call to abstracted procedure
  8909  000944  D86D               	call	PL4	;call to abstracted procedure
  8910  000946  E101               	bnz	l4641
  8911  000948  6A67               	clrf	GLCDMotor@max2^0,c
  8912  00094A                     l4641:
  8913                           
  8914                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  8915  00094A  D85F               	call	PL2	;call to abstracted procedure
  8916  00094C  5027               	movf	GLCDMotor@min2^0,w,c
  8917  00094E  D872               	call	PL6	;call to abstracted procedure
  8918  000950  D867               	call	PL4	;call to abstracted procedure
  8919  000952  E101               	bnz	l962
  8920  000954  6A27               	clrf	GLCDMotor@min2^0,c
  8921  000956                     l962:
  8922                           
  8923                           ;GestioLCD.c: 143:     j=0;
  8924  000956  6A29               	clrf	GLCDMotor@j^0,c
  8925                           
  8926                           ;GestioLCD.c: 144:     k2=min2;
  8927  000958  C027  F025         	movff	GLCDMotor@min2,GLCDMotor@k2
  8928  00095C  D749               	goto	u3750
  8929  00095E                     l4647:
  8930                           
  8931                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  8932  00095E  502C               	movf	_timerGLCD^0,w,c
  8933  000960  EC92  F00C         	call	_TiGetTics
  8934  000964  BE51               	btfsc	(?_TiGetTics+1)^0,7,c
  8935  000966  D00A               	goto	l964
  8936  000968  D870               	call	PL64	;call to abstracted procedure
  8937  00096A  E308               	bnc	l964
  8938  00096C  A077               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  8939  00096E  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8940  000970  D005               	goto	l964
  8941                           
  8942                           ;GestioLCD.c: 150:     LcClear();
  8943  000972  ECC9  F00C         	call	_LcClear	;wreg free
  8944  000976                     l4655:
  8945                           
  8946                           ;GestioLCD.c: 151:     state = 2;
  8947  000976  0E02               	movlw	2
  8948  000978  6E2A               	movwf	GLCDMotor@state^0,c
  8949                           
  8950                           ;GestioLCD.c: 152:    }
  8951  00097A  0C02               	retlw	2
  8952  00097C                     l964:
  8953  00097C  B077               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8954  00097E  A277               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8955  000980  0012               	return	
  8956                           
  8957                           ;GestioLCD.c: 154:     LcClear();
  8958  000982  ECC9  F00C         	call	_LcClear	;wreg free
  8959  000986  D764               	goto	u3820
  8960  000988                     l4663:
  8961                           
  8962                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  8963  000988  502C               	movf	_timerGLCD^0,w,c
  8964  00098A  EC16  F00D         	call	_TiResetTics
  8965  00098E  D730               	goto	u3750
  8966  000990                     l4667:
  8967                           
  8968                           ;GestioLCD.c: 163:    if (LcLliure()) {
  8969  000990  ECA6  F00D         	call	_LcLliure	;wreg free
  8970  000994  A0D8               	btfss	status,0,c
  8971  000996  0012               	return	
  8972                           
  8973                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  8974  000998  502C               	movf	_timerGLCD^0,w,c
  8975  00099A  EC16  F00D         	call	_TiResetTics
  8976                           
  8977                           ;GestioLCD.c: 165:     state = 11;
  8978  00099E  0E0B               	movlw	11
  8979  0009A0  6E2A               	movwf	GLCDMotor@state^0,c
  8980  0009A2  0C0B               	retlw	11
  8981  0009A4                     l4673:
  8982                           
  8983                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  8984  0009A4  D832               	call	PL2	;call to abstracted procedure
  8985  0009A6  5023               	movf	GLCDMotor@length2^0,w,c
  8986  0009A8  D845               	call	PL6	;call to abstracted procedure
  8987  0009AA  D83A               	call	PL4	;call to abstracted procedure
  8988  0009AC  E002               	bz	l4677
  8989                           
  8990                           ;GestioLCD.c: 170:     length2++;
  8991  0009AE  2A23               	incf	GLCDMotor@length2^0,f,c
  8992                           
  8993                           ;GestioLCD.c: 171:    }
  8994  0009B0  0012               	return	
  8995  0009B2                     l4677:
  8996  0009B2  D82B               	call	PL2	;call to abstracted procedure
  8997  0009B4  5023               	movf	GLCDMotor@length2^0,w,c
  8998  0009B6  D83E               	call	PL6	;call to abstracted procedure
  8999  0009B8  D833               	call	PL4	;call to abstracted procedure
  9000  0009BA  E0DD               	bz	l4655
  9001  0009BC  0012               	return	
  9002  0009BE                     l4683:
  9003  0009BE  502A               	movf	GLCDMotor@state^0,w,c
  9004  0009C0  6E5F               	movwf	??_GLCDMotor^0,c
  9005  0009C2  6A60               	clrf	(??_GLCDMotor+1)^0,c
  9006                           
  9007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9008                           ; Switch size 1, requested type "space"
  9009                           ; Number of cases is 1, Range of values is 0 to 0
  9010                           ; switch strategies available:
  9011                           ; Name         Instructions Cycles
  9012                           ; simple_byte            4     3 (average)
  9013                           ;	Chosen strategy is simple_byte
  9014  0009C4  5060               	movf	(??_GLCDMotor+1)^0,w,c
  9015  0009C6  A4D8               	btfss	status,2,c
  9016  0009C8  0012               	return	
  9017                           
  9018                           ; Switch size 1, requested type "space"
  9019                           ; Number of cases is 12, Range of values is 0 to 13
  9020                           ; switch strategies available:
  9021                           ; Name         Instructions Cycles
  9022                           ; simple_byte           37    19 (average)
  9023                           ;	Chosen strategy is simple_byte
  9024  0009CA  505F               	movf	??_GLCDMotor^0,w,c
  9025  0009CC  E101 D753          	bz	l944
  9026  0009D0  0A01               	xorlw	1	; case 1
  9027  0009D2  E101 D764          	bz	l4587
  9028  0009D6  0A03               	xorlw	3	; case 2
  9029  0009D8  E101 D6F4          	bz	l4499
  9030  0009DC  0A01               	xorlw	1	; case 3
  9031  0009DE  E101 D709          	bz	l4515
  9032  0009E2  0A06               	xorlw	6	; case 5
  9033  0009E4  E101 D736          	bz	l4551
  9034  0009E8  0A03               	xorlw	3	; case 6
  9035  0009EA  E101 D72D          	bz	l4543
  9036  0009EE  0A01               	xorlw	1	; case 7
  9037  0009F0  E101 D76E          	bz	l4603
  9038  0009F4  0A0F               	xorlw	15	; case 8
  9039  0009F6  E0CC               	bz	l4667
  9040  0009F8  0A01               	xorlw	1	; case 9
  9041  0009FA  E085               	bz	l4619
  9042  0009FC  0A03               	xorlw	3	; case 10
  9043  0009FE  E0C4               	bz	l4663
  9044  000A00  0A01               	xorlw	1	; case 11
  9045  000A02  E0AD               	bz	l4647
  9046  000A04  0A06               	xorlw	6	; case 13
  9047  000A06  E0CE               	bz	l4673
  9048  000A08  0012               	return		;funcret
  9049  000A0A                     __end_of_GLCDMotor:
  9050                           	callstack 0
  9051  000A0A                     PL2:
  9052                           	callstack 24
  9053  000A0A  502B               	movf	_menuDaltGLCD^0,w,c
  9054  000A0C  0D1D               	mullw	29
  9055  000A0E  0EBF               	movlw	low _menuList
  9056  000A10  6E5F               	movwf	??_GLCDMotor^0,c
  9057  000A12  0E1C               	movlw	high _menuList
  9058  000A14  6E60               	movwf	(??_GLCDMotor+1)^0,c
  9059  000A16  50F3               	movf	243,w,c
  9060  000A18  265F               	addwf	??_GLCDMotor^0,f,c
  9061  000A1A  50F4               	movf	244,w,c
  9062  000A1C  2260               	addwfc	(??_GLCDMotor+1)^0,f,c
  9063  000A1E  0012               	return	
  9064  000A20                     __end_ofPL2:
  9065                           	callstack 0
  9066  000A20                     PL4:
  9067                           	callstack 24
  9068  000A20  265F               	addwf	??_GLCDMotor^0,f,c
  9069  000A22  0E00               	movlw	0
  9070  000A24  2260               	addwfc	(??_GLCDMotor+1)^0,f,c
  9071  000A26  C05F  FFF6         	movff	??_GLCDMotor,tblptrl
  9072  000A2A  C060  FFF7         	movff	??_GLCDMotor+1,tblptrh
  9073  000A2E                     	if	0	;tblptru may be non-zero
  9074  000A2E                     	endif
  9075  000A2E                     	if	0	;tblptru may be non-zero
  9076  000A2E                     	endif
  9077  000A2E  0008               	tblrd		*
  9078  000A30  50F5               	movf	tablat,w,c
  9079  000A32  0012               	return	
  9080  000A34                     __end_ofPL4:
  9081                           	callstack 0
  9082  000A34                     PL6:
  9083                           	callstack 24
  9084  000A34  265F               	addwf	??_GLCDMotor^0,f,c
  9085  000A36  0E00               	movlw	0
  9086  000A38  2260               	addwfc	(??_GLCDMotor+1)^0,f,c
  9087  000A3A  0C1D               	retlw	29
  9088  000A3C                     __end_ofPL6:
  9089                           	callstack 0
  9090  000A3C                     PL36:
  9091                           	callstack 24
  9092  000A3C  0EBF               	movlw	low _menuList
  9093  000A3E  24F3               	addwf	243,w,c
  9094  000A40  6E53               	movwf	LcNewString@new_s^0,c
  9095  000A42  0E1C               	movlw	high _menuList
  9096  000A44  20F4               	addwfc	prodh,w,c
  9097  000A46  6E54               	movwf	(LcNewString@new_s+1)^0,c
  9098  000A48  0012               	return	
  9099  000A4A                     __end_ofPL36:
  9100                           	callstack 0
  9101  000A4A                     PL64:
  9102                           	callstack 27
  9103  000A4A  0EB5               	movlw	181
  9104  000A4C  5C50               	subwf	?_TiGetTics^0,w,c
  9105  000A4E  0E04               	movlw	4
  9106  000A50  5851               	subwfb	(?_TiGetTics+1)^0,w,c
  9107  000A52  0012               	return	
  9108  000A54                     __end_ofPL64:
  9109                           	callstack 0
  9110                           
  9111 ;; *************** function _LcPutChar *****************
  9112 ;; Defined at:
  9113 ;;		line 120 in file "LcTLCD.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  c               1    wreg     unsigned char 
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;  c               1   19[COMRAM] unsigned char 
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  1    wreg      void 
  9120 ;; Registers used:
  9121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMRAM   BANK0   BANK1
  9127 ;;      Params:         0       0       0
  9128 ;;      Locals:         1       0       0
  9129 ;;      Temps:          0       0       0
  9130 ;;      Totals:         1       0       0
  9131 ;;Total ram usage:        1 bytes
  9132 ;; Hardware stack levels used: 1
  9133 ;; Hardware stack levels required when called: 5
  9134 ;; This function calls:
  9135 ;;		_CantaData
  9136 ;;		_LcGotoXY
  9137 ;;		_WaitForBusy
  9138 ;; This function is called by:
  9139 ;;		_LcLCD
  9140 ;;		_menu
  9141 ;;		_GLCDMotor
  9142 ;;		_motorSIO
  9143 ;; This function uses a non-reentrant model
  9144 ;;
  9145                           
  9146                           	psect	text74
  9147  0016CA                     __ptext74:
  9148                           	callstack 0
  9149  0016CA                     _LcPutChar:
  9150                           	callstack 24
  9151                           
  9152                           ;incstack = 0
  9153                           ;LcPutChar@c stored from wreg
  9154  0016CA  6E5E               	movwf	LcPutChar@c^0,c
  9155                           
  9156                           ;LcTLCD.c: 122:  WaitForBusy(); CantaData(c);
  9157  0016CC  ECCC  F00B         	call	_WaitForBusy	;wreg free
  9158  0016D0  505E               	movf	LcPutChar@c^0,w,c
  9159  0016D2  ECEB  F00B         	call	_CantaData
  9160                           
  9161                           ;LcTLCD.c: 124:  ++ColumnAct;
  9162  0016D6  2A44               	incf	_ColumnAct^0,f,c
  9163                           
  9164                           ;LcTLCD.c: 126:  if (Rows == 2) {
  9165  0016D8  0E02               	movlw	2
  9166  0016DA  1846               	xorwf	_Rows^0,w,c
  9167  0016DC  E10C               	bnz	l4209
  9168                           
  9169                           ;LcTLCD.c: 127:   if (ColumnAct >= 40) {
  9170  0016DE  0E27               	movlw	39
  9171  0016E0  6444               	cpfsgt	_ColumnAct^0,c
  9172  0016E2  D009               	goto	l4209
  9173                           
  9174                           ;LcTLCD.c: 128:    ColumnAct = 0;
  9175  0016E4  6A44               	clrf	_ColumnAct^0,c
  9176                           
  9177                           ;LcTLCD.c: 129:    if (++RowAct >= 2) RowAct = 0;
  9178  0016E6  2A45               	incf	_RowAct^0,f,c
  9179  0016E8  0E01               	movlw	1
  9180  0016EA  6445               	cpfsgt	_RowAct^0,c
  9181  0016EC  D001               	goto	l4207
  9182  0016EE  6A45               	clrf	_RowAct^0,c
  9183  0016F0                     l4207:
  9184                           
  9185                           ;LcTLCD.c: 130:    LcGotoXY(ColumnAct, RowAct);
  9186  0016F0  D80C               	call	PL74	;call to abstracted procedure
  9187  0016F2  EC3B  F00C         	call	_LcGotoXY
  9188  0016F6                     l4209:
  9189                           
  9190                           ;LcTLCD.c: 141:  if (RowAct == 1) {
  9191  0016F6  0445               	decf	_RowAct^0,w,c
  9192  0016F8  A4D8               	btfss	status,2,c
  9193  0016FA  0012               	return	
  9194                           
  9195                           ;LcTLCD.c: 142:   if (ColumnAct >= 40) ColumnAct = 0;
  9196  0016FC  0E27               	movlw	39
  9197  0016FE  6444               	cpfsgt	_ColumnAct^0,c
  9198  001700  D001               	goto	l4215
  9199  001702  6A44               	clrf	_ColumnAct^0,c
  9200  001704                     l4215:
  9201                           
  9202                           ;LcTLCD.c: 143:   LcGotoXY(ColumnAct, RowAct);
  9203  001704  D802               	call	PL74	;call to abstracted procedure
  9204  001706  EF3B  F00C         	goto	_LcGotoXY
  9205  00170A                     __end_of_LcPutChar:
  9206                           	callstack 0
  9207  00170A                     PL74:
  9208                           	callstack 24
  9209  00170A  C045  F058         	movff	_RowAct,LcGotoXY@Row
  9210  00170E  5044               	movf	_ColumnAct^0,w,c
  9211  001710  0012               	return	
  9212  001712                     __end_ofPL74:
  9213                           	callstack 0
  9214                           
  9215 ;; *************** function _CantaData *****************
  9216 ;; Defined at:
  9217 ;;		line 182 in file "LcTLCD.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;  Data            1    wreg     unsigned char 
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;  Data            1    7[COMRAM] unsigned char 
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  1    wreg      void 
  9224 ;; Registers used:
  9225 ;;		wreg, status,2, status,0, cstack
  9226 ;; Tracked objects:
  9227 ;;		On entry : 0/0
  9228 ;;		On exit  : 0/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMRAM   BANK0   BANK1
  9231 ;;      Params:         0       0       0
  9232 ;;      Locals:         1       0       0
  9233 ;;      Temps:          0       0       0
  9234 ;;      Totals:         1       0       0
  9235 ;;Total ram usage:        1 bytes
  9236 ;; Hardware stack levels used: 1
  9237 ;; Hardware stack levels required when called: 3
  9238 ;; This function calls:
  9239 ;;		_CantaPartAlta
  9240 ;;		_CantaPartBaixa
  9241 ;; This function is called by:
  9242 ;;		_LcPutChar
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           	psect	text75
  9247  0017D6                     __ptext75:
  9248                           	callstack 0
  9249  0017D6                     _CantaData:
  9250                           	callstack 25
  9251                           
  9252                           ;incstack = 0
  9253                           ;CantaData@Data stored from wreg
  9254  0017D6  6E52               	movwf	CantaData@Data^0,c
  9255                           
  9256                           ;LcTLCD.c: 183:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9257  0017D8  9694               	bcf	148,3,c	;volatile
  9258  0017DA  9494               	bcf	148,2,c	;volatile
  9259  0017DC  9294               	bcf	148,1,c	;volatile
  9260  0017DE  9094               	bcf	148,0,c	;volatile
  9261                           
  9262                           ;LcTLCD.c: 184:  (LATCbits.LATC5 = 1);
  9263  0017E0  8A8B               	bsf	139,5,c	;volatile
  9264                           
  9265                           ;LcTLCD.c: 185:  (LATDbits.LATD7 = 0);
  9266  0017E2  9E8C               	bcf	140,7,c	;volatile
  9267                           
  9268                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9269  0017E4  888B               	bsf	139,4,c	;volatile
  9270                           
  9271                           ;LcTLCD.c: 187:  CantaPartAlta(Data);
  9272  0017E6  5052               	movf	CantaData@Data^0,w,c
  9273  0017E8  ECAC  F00A         	call	_CantaPartAlta
  9274                           
  9275                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 1);
  9276                           
  9277                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 0);
  9278                           
  9279                           ;LcTLCD.c: 190:  (LATCbits.LATC4 = 0);
  9280                           
  9281                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9282  0017EC  D80B               	call	PL68	;call to abstracted procedure
  9283                           
  9284                           ;LcTLCD.c: 192:  CantaPartBaixa(Data);
  9285  0017EE  5052               	movf	CantaData@Data^0,w,c
  9286  0017F0  EC79  F00A         	call	_CantaPartBaixa
  9287                           
  9288                           ;LcTLCD.c: 193:  (LATCbits.LATC4 = 1);
  9289                           
  9290                           ;LcTLCD.c: 194:  (LATCbits.LATC4 = 0);
  9291                           
  9292                           ;LcTLCD.c: 195:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9293  0017F4  D000               	goto	PL28	;call to abstracted procedure
  9294  0017F6                     __end_of_CantaData:
  9295                           	callstack 0
  9296  0017F6                     PL28:
  9297                           	callstack 24
  9298  0017F6  888B               	bsf	139,4,c	;volatile
  9299  0017F8  988B               	bcf	139,4,c	;volatile
  9300  0017FA  8694               	bsf	148,3,c	;volatile
  9301  0017FC  8494               	bsf	148,2,c	;volatile
  9302  0017FE  8294               	bsf	148,1,c	;volatile
  9303  001800  8094               	bsf	148,0,c	;volatile
  9304  001802  0012               	return		;funcret
  9305  001804                     __end_ofPL28:
  9306                           	callstack 0
  9307  001804                     PL68:
  9308                           	callstack 24
  9309  001804  888B               	bsf	139,4,c	;volatile
  9310  001806  988B               	bcf	139,4,c	;volatile
  9311  001808  988B               	bcf	139,4,c	;volatile
  9312  00180A  888B               	bsf	139,4,c	;volatile
  9313  00180C  0012               	return	
  9314  00180E                     __end_ofPL68:
  9315                           	callstack 0
  9316                           
  9317 ;; *************** function _LcNewString *****************
  9318 ;; Defined at:
  9319 ;;		line 227 in file "LcTLCD.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9322 ;;		 -> stringScore(3), STR_8(8), STR_7(12), STR_6(8), 
  9323 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(144), 
  9324 ;;		 -> STR_5(16), STR_4(13), STR_3(9), STR_2(7), 
  9325 ;;		 -> STR_1(7), registerText(11), loginText(8), 
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;		None
  9328 ;; Return value:  Size  Location     Type
  9329 ;;                  1    wreg      void 
  9330 ;; Registers used:
  9331 ;;		wreg, status,2, status,0
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMRAM   BANK0   BANK1
  9337 ;;      Params:         2       0       0
  9338 ;;      Locals:         0       0       0
  9339 ;;      Temps:          0       0       0
  9340 ;;      Totals:         2       0       0
  9341 ;;Total ram usage:        2 bytes
  9342 ;; Hardware stack levels used: 1
  9343 ;; Hardware stack levels required when called: 2
  9344 ;; This function calls:
  9345 ;;		Nothing
  9346 ;; This function is called by:
  9347 ;;		_menu
  9348 ;;		_GLCDMotor
  9349 ;;		_motorJoc
  9350 ;;		_motorSIO
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           	psect	text76
  9355  001B40                     __ptext76:
  9356                           	callstack 0
  9357  001B40                     _LcNewString:
  9358                           	callstack 27
  9359                           
  9360                           ;LcTLCD.c: 228:     s_ptr = new_s;
  9361                           
  9362                           ;incstack = 0
  9363  001B40  C053  F017         	movff	LcNewString@new_s,_s_ptr
  9364  001B44  C054  F018         	movff	LcNewString@new_s+1,_s_ptr+1
  9365                           
  9366                           ;LcTLCD.c: 229:     nou_s = 1;
  9367  001B48  8078               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9368  001B4A  0012               	return		;funcret
  9369  001B4C                     __end_of_LcNewString:
  9370                           	callstack 0
  9371                           
  9372 ;; *************** function _LcLliure *****************
  9373 ;; Defined at:
  9374 ;;		line 243 in file "LcTLCD.c"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;		None
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;		None
  9379 ;; Return value:  Size  Location     Type
  9380 ;;		None               void
  9381 ;; Registers used:
  9382 ;;		status,0
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMRAM   BANK0   BANK1
  9388 ;;      Params:         0       0       0
  9389 ;;      Locals:         0       0       0
  9390 ;;      Temps:          0       0       0
  9391 ;;      Totals:         0       0       0
  9392 ;;Total ram usage:        0 bytes
  9393 ;; Hardware stack levels used: 1
  9394 ;; Hardware stack levels required when called: 2
  9395 ;; This function calls:
  9396 ;;		Nothing
  9397 ;; This function is called by:
  9398 ;;		_menu
  9399 ;;		_GLCDMotor
  9400 ;;		_motorJoc
  9401 ;;		_motorSIO
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text77
  9406  001B4C                     __ptext77:
  9407                           	callstack 0
  9408  001B4C                     _LcLliure:
  9409                           	callstack 27
  9410                           
  9411                           ;LcTLCD.c: 244:     return !nou_s;
  9412                           
  9413                           ;incstack = 0
  9414  001B4C  A078               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9415  001B4E  D002               	goto	l2143
  9416  001B50  90D8               	bcf	status,0,c
  9417  001B52  0012               	return	
  9418  001B54                     l2143:
  9419  001B54  80D8               	bsf	status,0,c
  9420  001B56  0012               	return		;funcret
  9421  001B58                     __end_of_LcLliure:
  9422                           	callstack 0
  9423                           
  9424 ;; *************** function _LcClear *****************
  9425 ;; Defined at:
  9426 ;;		line 84 in file "LcTLCD.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;		None
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;		None
  9431 ;; Return value:  Size  Location     Type
  9432 ;;                  1    wreg      void 
  9433 ;; Registers used:
  9434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/0
  9437 ;;		On exit  : 0/0
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMRAM   BANK0   BANK1
  9440 ;;      Params:         0       0       0
  9441 ;;      Locals:         0       0       0
  9442 ;;      Temps:          0       0       0
  9443 ;;      Totals:         0       0       0
  9444 ;;Total ram usage:        0 bytes
  9445 ;; Hardware stack levels used: 1
  9446 ;; Hardware stack levels required when called: 5
  9447 ;; This function calls:
  9448 ;;		_CantaIR
  9449 ;;		_Espera
  9450 ;;		_LcGotoXY
  9451 ;;		_WaitForBusy
  9452 ;; This function is called by:
  9453 ;;		_menu
  9454 ;;		_GLCDMotor
  9455 ;;		_motorSIO
  9456 ;; This function uses a non-reentrant model
  9457 ;;
  9458                           
  9459                           	psect	text78
  9460  001992                     __ptext78:
  9461                           	callstack 0
  9462  001992                     _LcClear:
  9463                           	callstack 24
  9464                           
  9465                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  9466                           
  9467                           ;incstack = 0
  9468  001992  ECCC  F00B         	call	_WaitForBusy	;wreg free
  9469  001996  0E01               	movlw	1
  9470  001998  EC08  F00D         	call	_CantaIR
  9471                           
  9472                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  9473  00199C  D806               	call	PL58	;call to abstracted procedure
  9474  00199E  ECDA  F00C         	call	_Espera
  9475                           
  9476                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  9477  0019A2  0E00               	movlw	0
  9478  0019A4  6E58               	movwf	LcGotoXY@Row^0,c
  9479  0019A6  EF3B  F00C         	goto	_LcGotoXY
  9480  0019AA                     __end_of_LcClear:
  9481                           	callstack 0
  9482  0019AA                     PL58:
  9483                           	callstack 26
  9484  0019AA  6A58               	clrf	(Espera@ms+1)^0,c
  9485  0019AC  0E03               	movlw	3
  9486  0019AE  6E57               	movwf	Espera@ms^0,c
  9487  0019B0  5043               	movf	_Timer^0,w,c
  9488  0019B2  0012               	return	
  9489  0019B4                     __end_ofPL58:
  9490                           	callstack 0
  9491                           
  9492 ;; *************** function _LcGotoXY *****************
  9493 ;; Defined at:
  9494 ;;		line 106 in file "LcTLCD.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  Column          1    wreg     unsigned char 
  9497 ;;  Row             1   13[COMRAM] unsigned char 
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;  Column          1   18[COMRAM] unsigned char 
  9500 ;;  Fisics          2   14[COMRAM] int 
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  1    wreg      void 
  9503 ;; Registers used:
  9504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMRAM   BANK0   BANK1
  9510 ;;      Params:         1       0       0
  9511 ;;      Locals:         5       0       0
  9512 ;;      Temps:          0       0       0
  9513 ;;      Totals:         6       0       0
  9514 ;;Total ram usage:        6 bytes
  9515 ;; Hardware stack levels used: 1
  9516 ;; Hardware stack levels required when called: 4
  9517 ;; This function calls:
  9518 ;;		_CantaIR
  9519 ;;		_WaitForBusy
  9520 ;; This function is called by:
  9521 ;;		_LcClear
  9522 ;;		_LcPutChar
  9523 ;;		_menu
  9524 ;;		_GLCDMotor
  9525 ;;		_motorJoc
  9526 ;;		_motorSIO
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text79
  9531  001876                     __ptext79:
  9532                           	callstack 0
  9533  001876                     _LcGotoXY:
  9534                           	callstack 24
  9535                           
  9536                           ;incstack = 0
  9537                           ;LcGotoXY@Column stored from wreg
  9538  001876  6E5D               	movwf	LcGotoXY@Column^0,c
  9539                           
  9540                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 111:  Fisics = Column + (!Row ? 0 : 0x40);
  9541  001878  5058               	movf	LcGotoXY@Row^0,w,c
  9542  00187A  E004               	bz	l55
  9543  00187C  6A5C               	clrf	(_LcGotoXY$334+1)^0,c
  9544  00187E  0E40               	movlw	64
  9545  001880  6E5B               	movwf	_LcGotoXY$334^0,c
  9546  001882  D002               	goto	l4135
  9547  001884                     l55:
  9548  001884  6A5B               	clrf	_LcGotoXY$334^0,c
  9549  001886  6A5C               	clrf	(_LcGotoXY$334+1)^0,c
  9550  001888                     l4135:
  9551  001888  505D               	movf	LcGotoXY@Column^0,w,c
  9552  00188A  245B               	addwf	_LcGotoXY$334^0,w,c
  9553  00188C  6E59               	movwf	LcGotoXY@Fisics^0,c
  9554  00188E  0E00               	movlw	0
  9555  001890  205C               	addwfc	(_LcGotoXY$334+1)^0,w,c
  9556  001892  6E5A               	movwf	(LcGotoXY@Fisics+1)^0,c
  9557                           
  9558                           ;LcTLCD.c: 113:  WaitForBusy();
  9559  001894  ECCC  F00B         	call	_WaitForBusy	;wreg free
  9560                           
  9561                           ;LcTLCD.c: 114:  CantaIR(0x80 | Fisics);
  9562  001898  5059               	movf	LcGotoXY@Fisics^0,w,c
  9563  00189A  0980               	iorlw	128
  9564  00189C  EC08  F00D         	call	_CantaIR
  9565                           
  9566                           ;LcTLCD.c: 116:  RowAct = Row;
  9567  0018A0  C058  F045         	movff	LcGotoXY@Row,_RowAct
  9568                           
  9569                           ;LcTLCD.c: 117:  ColumnAct = Column;
  9570  0018A4  C05D  F044         	movff	LcGotoXY@Column,_ColumnAct
  9571  0018A8  0012               	return		;funcret
  9572  0018AA                     __end_of_LcGotoXY:
  9573                           	callstack 0
  9574                           
  9575 ;; *************** function _WaitForBusy *****************
  9576 ;; Defined at:
  9577 ;;		line 198 in file "LcTLCD.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;		None
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;  Busy            1   12[COMRAM] unsigned char 
  9582 ;; Return value:  Size  Location     Type
  9583 ;;                  1    wreg      void 
  9584 ;; Registers used:
  9585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9586 ;; Tracked objects:
  9587 ;;		On entry : 0/0
  9588 ;;		On exit  : 0/0
  9589 ;;		Unchanged: 0/0
  9590 ;; Data sizes:     COMRAM   BANK0   BANK1
  9591 ;;      Params:         0       0       0
  9592 ;;      Locals:         1       0       0
  9593 ;;      Temps:          0       0       0
  9594 ;;      Totals:         1       0       0
  9595 ;;Total ram usage:        1 bytes
  9596 ;; Hardware stack levels used: 1
  9597 ;; Hardware stack levels required when called: 3
  9598 ;; This function calls:
  9599 ;;		_TiGetTics
  9600 ;;		_TiResetTics
  9601 ;; This function is called by:
  9602 ;;		_LcInit
  9603 ;;		_LcClear
  9604 ;;		_LcGotoXY
  9605 ;;		_LcPutChar
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           	psect	text80
  9610  001798                     __ptext80:
  9611                           	callstack 0
  9612  001798                     _WaitForBusy:
  9613                           	callstack 25
  9614                           
  9615                           ;LcTLCD.c: 199:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9616                           
  9617                           ;incstack = 0
  9618  001798  8694               	bsf	148,3,c	;volatile
  9619  00179A  8494               	bsf	148,2,c	;volatile
  9620  00179C  8294               	bsf	148,1,c	;volatile
  9621  00179E  8094               	bsf	148,0,c	;volatile
  9622                           
  9623                           ;LcTLCD.c: 200:  (LATCbits.LATC5 = 0);
  9624  0017A0  9A8B               	bcf	139,5,c	;volatile
  9625                           
  9626                           ;LcTLCD.c: 201:  (LATDbits.LATD7 = 1);
  9627  0017A2  8E8C               	bsf	140,7,c	;volatile
  9628                           
  9629                           ;LcTLCD.c: 202:  TiResetTics(Timer);
  9630  0017A4  5043               	movf	_Timer^0,w,c
  9631  0017A6  EC16  F00D         	call	_TiResetTics
  9632  0017AA                     l4103:
  9633                           
  9634                           ;LcTLCD.c: 204:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9635  0017AA  888B               	bsf	139,4,c	;volatile
  9636  0017AC  888B               	bsf	139,4,c	;volatile
  9637                           
  9638                           ;LcTLCD.c: 205:   Busy = (PORTCbits.RC3);
  9639  0017AE  0E00               	movlw	0
  9640  0017B0  B682               	btfsc	130,3,c	;volatile
  9641  0017B2  0E01               	movlw	1
  9642  0017B4  6E57               	movwf	WaitForBusy@Busy^0,c
  9643                           
  9644                           ;LcTLCD.c: 206:   (LATCbits.LATC4 = 0);
  9645  0017B6  988B               	bcf	139,4,c	;volatile
  9646                           
  9647                           ;LcTLCD.c: 207:   (LATCbits.LATC4 = 0);
  9648  0017B8  988B               	bcf	139,4,c	;volatile
  9649                           
  9650                           ;LcTLCD.c: 208:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9651  0017BA  888B               	bsf	139,4,c	;volatile
  9652  0017BC  888B               	bsf	139,4,c	;volatile
  9653                           
  9654                           ;LcTLCD.c: 210:   (LATCbits.LATC4 = 0);
  9655  0017BE  988B               	bcf	139,4,c	;volatile
  9656                           
  9657                           ;LcTLCD.c: 211:   (LATCbits.LATC4 = 0);
  9658  0017C0  988B               	bcf	139,4,c	;volatile
  9659                           
  9660                           ;LcTLCD.c: 212:   if (TiGetTics(Timer)) break;
  9661  0017C2  5043               	movf	_Timer^0,w,c
  9662  0017C4  EC92  F00C         	call	_TiGetTics
  9663  0017C8  5050               	movf	?_TiGetTics^0,w,c
  9664  0017CA  1051               	iorwf	(?_TiGetTics+1)^0,w,c
  9665  0017CC  E001               	bz	l4125
  9666  0017CE  0012               	return	
  9667  0017D0                     l4125:
  9668                           
  9669                           ;LcTLCD.c: 213:  } while(Busy);
  9670  0017D0  5057               	movf	WaitForBusy@Busy^0,w,c
  9671  0017D2  E1EB               	bnz	l4103
  9672  0017D4  0012               	return		;funcret
  9673  0017D6                     __end_of_WaitForBusy:
  9674                           	callstack 0
  9675                           
  9676 ;; *************** function _CantaIR *****************
  9677 ;; Defined at:
  9678 ;;		line 166 in file "LcTLCD.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  IR              1    wreg     unsigned char 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;  IR              1    7[COMRAM] unsigned char 
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  1    wreg      void 
  9685 ;; Registers used:
  9686 ;;		wreg, status,2, status,0, cstack
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMRAM   BANK0   BANK1
  9692 ;;      Params:         0       0       0
  9693 ;;      Locals:         1       0       0
  9694 ;;      Temps:          0       0       0
  9695 ;;      Totals:         1       0       0
  9696 ;;Total ram usage:        1 bytes
  9697 ;; Hardware stack levels used: 1
  9698 ;; Hardware stack levels required when called: 3
  9699 ;; This function calls:
  9700 ;;		_CantaPartAlta
  9701 ;;		_CantaPartBaixa
  9702 ;; This function is called by:
  9703 ;;		_LcScroll
  9704 ;;		_LcInit
  9705 ;;		_LcClear
  9706 ;;		_LcGotoXY
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           	psect	text81
  9711  001A10                     __ptext81:
  9712                           	callstack 0
  9713  001A10                     _CantaIR:
  9714                           	callstack 24
  9715                           
  9716                           ;incstack = 0
  9717                           ;CantaIR@IR stored from wreg
  9718  001A10  6E52               	movwf	CantaIR@IR^0,c
  9719                           
  9720                           ;LcTLCD.c: 167:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9721  001A12  9694               	bcf	148,3,c	;volatile
  9722                           
  9723                           ;LcTLCD.c: 168:  (LATCbits.LATC5 = 0);
  9724                           
  9725                           ;LcTLCD.c: 169:  (LATDbits.LATD7 = 0);
  9726                           
  9727                           ;LcTLCD.c: 170:  (LATCbits.LATC4 = 1);
  9728  001A14  EC6D  F00A         	call	PL38	;call to abstracted procedure
  9729                           
  9730                           ;LcTLCD.c: 171:  CantaPartAlta(IR);
  9731  001A18  5052               	movf	CantaIR@IR^0,w,c
  9732  001A1A  ECAC  F00A         	call	_CantaPartAlta
  9733                           
  9734                           ;LcTLCD.c: 172:  (LATCbits.LATC4 = 1);
  9735                           
  9736                           ;LcTLCD.c: 173:  (LATCbits.LATC4 = 0);
  9737                           
  9738                           ;LcTLCD.c: 174:  (LATCbits.LATC4 = 0);
  9739                           
  9740                           ;LcTLCD.c: 175:  (LATCbits.LATC4 = 1);
  9741  001A1E  EC02  F00C         	call	PL68	;call to abstracted procedure
  9742                           
  9743                           ;LcTLCD.c: 176:  CantaPartBaixa(IR);
  9744  001A22  5052               	movf	CantaIR@IR^0,w,c
  9745  001A24  EC79  F00A         	call	_CantaPartBaixa
  9746                           
  9747                           ;LcTLCD.c: 177:  (LATCbits.LATC4 = 1);
  9748                           
  9749                           ;LcTLCD.c: 178:  (LATCbits.LATC4 = 0);
  9750                           
  9751                           ;LcTLCD.c: 179:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9752  001A28  EFFB  F00B         	goto	PL28	;call to abstracted procedure
  9753  001A2C                     __end_of_CantaIR:
  9754                           	callstack 0
  9755                           
  9756 ;; *************** function _CantaPartBaixa *****************
  9757 ;; Defined at:
  9758 ;;		line 159 in file "LcTLCD.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  c               1    wreg     unsigned char 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;  c               1    6[COMRAM] unsigned char 
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  1    wreg      void 
  9765 ;; Registers used:
  9766 ;;		wreg, status,2, status,0
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMRAM   BANK0   BANK1
  9772 ;;      Params:         0       0       0
  9773 ;;      Locals:         1       0       0
  9774 ;;      Temps:          1       0       0
  9775 ;;      Totals:         2       0       0
  9776 ;;Total ram usage:        2 bytes
  9777 ;; Hardware stack levels used: 1
  9778 ;; Hardware stack levels required when called: 2
  9779 ;; This function calls:
  9780 ;;		Nothing
  9781 ;; This function is called by:
  9782 ;;		_CantaIR
  9783 ;;		_CantaData
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787                           	psect	text82
  9788  0014F2                     __ptext82:
  9789                           	callstack 0
  9790  0014F2                     _CantaPartBaixa:
  9791                           	callstack 24
  9792                           
  9793                           ;incstack = 0
  9794                           ;CantaPartBaixa@c stored from wreg
  9795  0014F2  6E51               	movwf	CantaPartBaixa@c^0,c
  9796                           
  9797                           ;LcTLCD.c: 160:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  9798  0014F4  A651               	btfss	CantaPartBaixa@c^0,3,c
  9799  0014F6  D003               	goto	u3320
  9800  0014F8  6A50               	clrf	??_CantaPartBaixa^0,c
  9801  0014FA  2A50               	incf	??_CantaPartBaixa^0,f,c
  9802  0014FC  D001               	goto	u3338
  9803  0014FE                     u3320:
  9804  0014FE  6A50               	clrf	??_CantaPartBaixa^0,c
  9805  001500                     u3338:
  9806  001500  4650               	rlncf	??_CantaPartBaixa^0,f,c
  9807  001502  D825               	call	PL70	;call to abstracted procedure
  9808  001504  0BF7               	andlw	-9
  9809  001506  1850               	xorwf	??_CantaPartBaixa^0,w,c
  9810  001508  6E8B               	movwf	139,c	;volatile
  9811                           
  9812                           ;LcTLCD.c: 161:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  9813  00150A  A451               	btfss	CantaPartBaixa@c^0,2,c
  9814  00150C  D003               	goto	u3340
  9815  00150E  6A50               	clrf	??_CantaPartBaixa^0,c
  9816  001510  2A50               	incf	??_CantaPartBaixa^0,f,c
  9817  001512  D001               	goto	u3358
  9818  001514                     u3340:
  9819  001514  6A50               	clrf	??_CantaPartBaixa^0,c
  9820  001516                     u3358:
  9821  001516  D81B               	call	PL70	;call to abstracted procedure
  9822  001518  0BFB               	andlw	-5
  9823  00151A  1850               	xorwf	??_CantaPartBaixa^0,w,c
  9824  00151C  6E8B               	movwf	139,c	;volatile
  9825                           
  9826                           ;LcTLCD.c: 162:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  9827  00151E  A251               	btfss	CantaPartBaixa@c^0,1,c
  9828  001520  D003               	goto	u3360
  9829  001522  6A50               	clrf	??_CantaPartBaixa^0,c
  9830  001524  2A50               	incf	??_CantaPartBaixa^0,f,c
  9831  001526  D001               	goto	u3378
  9832  001528                     u3360:
  9833  001528  6A50               	clrf	??_CantaPartBaixa^0,c
  9834  00152A                     u3378:
  9835  00152A  4650               	rlncf	??_CantaPartBaixa^0,f,c
  9836  00152C  508B               	movf	139,w,c	;volatile
  9837  00152E  1850               	xorwf	??_CantaPartBaixa^0,w,c
  9838  001530  0BFD               	andlw	-3
  9839  001532  1850               	xorwf	??_CantaPartBaixa^0,w,c
  9840  001534  6E8B               	movwf	139,c	;volatile
  9841                           
  9842                           ;LcTLCD.c: 163:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  9843  001536  A051               	btfss	CantaPartBaixa@c^0,0,c
  9844  001538  D003               	goto	u3380
  9845  00153A  6A50               	clrf	??_CantaPartBaixa^0,c
  9846  00153C  2A50               	incf	??_CantaPartBaixa^0,f,c
  9847  00153E  D001               	goto	u3398
  9848  001540                     u3380:
  9849  001540  6A50               	clrf	??_CantaPartBaixa^0,c
  9850  001542                     u3398:
  9851  001542  508B               	movf	139,w,c	;volatile
  9852  001544  1850               	xorwf	??_CantaPartBaixa^0,w,c
  9853  001546  0BFE               	andlw	-2
  9854  001548  1850               	xorwf	??_CantaPartBaixa^0,w,c
  9855  00154A  6E8B               	movwf	139,c	;volatile
  9856  00154C  0012               	return		;funcret
  9857  00154E                     __end_of_CantaPartBaixa:
  9858                           	callstack 0
  9859  00154E                     PL70:
  9860                           	callstack 24
  9861  00154E  4650               	rlncf	??_CantaPartBaixa^0,f,c
  9862  001550  4650               	rlncf	??_CantaPartBaixa^0,f,c
  9863  001552  508B               	movf	139,w,c	;volatile
  9864  001554  1850               	xorwf	??_CantaPartBaixa^0,w,c
  9865  001556  0012               	return	
  9866  001558                     __end_ofPL70:
  9867                           	callstack 0
  9868                           
  9869 ;; *************** function _CantaPartAlta *****************
  9870 ;; Defined at:
  9871 ;;		line 152 in file "LcTLCD.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  c               1    wreg     unsigned char 
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;  c               1    6[COMRAM] unsigned char 
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		wreg, status,2, status,0
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1
  9885 ;;      Params:         0       0       0
  9886 ;;      Locals:         1       0       0
  9887 ;;      Temps:          1       0       0
  9888 ;;      Totals:         2       0       0
  9889 ;;Total ram usage:        2 bytes
  9890 ;; Hardware stack levels used: 1
  9891 ;; Hardware stack levels required when called: 2
  9892 ;; This function calls:
  9893 ;;		Nothing
  9894 ;; This function is called by:
  9895 ;;		_CantaIR
  9896 ;;		_CantaData
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           	psect	text83
  9901  001558                     __ptext83:
  9902                           	callstack 0
  9903  001558                     _CantaPartAlta:
  9904                           	callstack 24
  9905                           
  9906                           ;incstack = 0
  9907                           ;CantaPartAlta@c stored from wreg
  9908  001558  6E51               	movwf	CantaPartAlta@c^0,c
  9909                           
  9910                           ;LcTLCD.c: 153:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  9911  00155A  AE51               	btfss	CantaPartAlta@c^0,7,c
  9912  00155C  D003               	goto	u3240
  9913  00155E  6A50               	clrf	??_CantaPartAlta^0,c
  9914  001560  2A50               	incf	??_CantaPartAlta^0,f,c
  9915  001562  D001               	goto	u3258
  9916  001564                     u3240:
  9917  001564  6A50               	clrf	??_CantaPartAlta^0,c
  9918  001566                     u3258:
  9919  001566  4650               	rlncf	??_CantaPartAlta^0,f,c
  9920  001568  D825               	call	PL62	;call to abstracted procedure
  9921  00156A  0BF7               	andlw	-9
  9922  00156C  1850               	xorwf	??_CantaPartAlta^0,w,c
  9923  00156E  6E8B               	movwf	139,c	;volatile
  9924                           
  9925                           ;LcTLCD.c: 154:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  9926  001570  AC51               	btfss	CantaPartAlta@c^0,6,c
  9927  001572  D003               	goto	u3260
  9928  001574  6A50               	clrf	??_CantaPartAlta^0,c
  9929  001576  2A50               	incf	??_CantaPartAlta^0,f,c
  9930  001578  D001               	goto	u3278
  9931  00157A                     u3260:
  9932  00157A  6A50               	clrf	??_CantaPartAlta^0,c
  9933  00157C                     u3278:
  9934  00157C  D81B               	call	PL62	;call to abstracted procedure
  9935  00157E  0BFB               	andlw	-5
  9936  001580  1850               	xorwf	??_CantaPartAlta^0,w,c
  9937  001582  6E8B               	movwf	139,c	;volatile
  9938                           
  9939                           ;LcTLCD.c: 155:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  9940  001584  AA51               	btfss	CantaPartAlta@c^0,5,c
  9941  001586  D003               	goto	u3280
  9942  001588  6A50               	clrf	??_CantaPartAlta^0,c
  9943  00158A  2A50               	incf	??_CantaPartAlta^0,f,c
  9944  00158C  D001               	goto	u3298
  9945  00158E                     u3280:
  9946  00158E  6A50               	clrf	??_CantaPartAlta^0,c
  9947  001590                     u3298:
  9948  001590  4650               	rlncf	??_CantaPartAlta^0,f,c
  9949  001592  508B               	movf	139,w,c	;volatile
  9950  001594  1850               	xorwf	??_CantaPartAlta^0,w,c
  9951  001596  0BFD               	andlw	-3
  9952  001598  1850               	xorwf	??_CantaPartAlta^0,w,c
  9953  00159A  6E8B               	movwf	139,c	;volatile
  9954                           
  9955                           ;LcTLCD.c: 156:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  9956  00159C  A851               	btfss	CantaPartAlta@c^0,4,c
  9957  00159E  D003               	goto	u3300
  9958  0015A0  6A50               	clrf	??_CantaPartAlta^0,c
  9959  0015A2  2A50               	incf	??_CantaPartAlta^0,f,c
  9960  0015A4  D001               	goto	u3318
  9961  0015A6                     u3300:
  9962  0015A6  6A50               	clrf	??_CantaPartAlta^0,c
  9963  0015A8                     u3318:
  9964  0015A8  508B               	movf	139,w,c	;volatile
  9965  0015AA  1850               	xorwf	??_CantaPartAlta^0,w,c
  9966  0015AC  0BFE               	andlw	-2
  9967  0015AE  1850               	xorwf	??_CantaPartAlta^0,w,c
  9968  0015B0  6E8B               	movwf	139,c	;volatile
  9969  0015B2  0012               	return		;funcret
  9970  0015B4                     __end_of_CantaPartAlta:
  9971                           	callstack 0
  9972  0015B4                     PL62:
  9973                           	callstack 24
  9974  0015B4  4650               	rlncf	??_CantaPartAlta^0,f,c
  9975  0015B6  4650               	rlncf	??_CantaPartAlta^0,f,c
  9976  0015B8  508B               	movf	139,w,c	;volatile
  9977  0015BA  1850               	xorwf	??_CantaPartAlta^0,w,c
  9978  0015BC  0012               	return	
  9979  0015BE                     __end_ofPL62:
  9980                           	callstack 0
  9981                           
  9982 ;; *************** function _Espera *****************
  9983 ;; Defined at:
  9984 ;;		line 147 in file "LcTLCD.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;  Timer           1    wreg     unsigned char 
  9987 ;;  ms              2   12[COMRAM] int 
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;  Timer           1   15[COMRAM] unsigned char 
  9990 ;; Return value:  Size  Location     Type
  9991 ;;                  1    wreg      void 
  9992 ;; Registers used:
  9993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMRAM   BANK0   BANK1
  9999 ;;      Params:         2       0       0
 10000 ;;      Locals:         1       0       0
 10001 ;;      Temps:          1       0       0
 10002 ;;      Totals:         4       0       0
 10003 ;;Total ram usage:        4 bytes
 10004 ;; Hardware stack levels used: 1
 10005 ;; Hardware stack levels required when called: 3
 10006 ;; This function calls:
 10007 ;;		_TiGetTics
 10008 ;;		_TiResetTics
 10009 ;; This function is called by:
 10010 ;;		_LcInit
 10011 ;;		_LcClear
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           
 10015                           	psect	text84
 10016  0019B4                     __ptext84:
 10017                           	callstack 0
 10018  0019B4                     _Espera:
 10019                           	callstack 25
 10020                           
 10021                           ;incstack = 0
 10022                           ;Espera@Timer stored from wreg
 10023  0019B4  6E5A               	movwf	Espera@Timer^0,c
 10024                           
 10025                           ;LcTLCD.c: 148:  TiResetTics(Timer);
 10026  0019B6  505A               	movf	Espera@Timer^0,w,c
 10027  0019B8  EC16  F00D         	call	_TiResetTics
 10028  0019BC                     l4129:
 10029  0019BC  505A               	movf	Espera@Timer^0,w,c
 10030  0019BE  EC92  F00C         	call	_TiGetTics
 10031  0019C2  5057               	movf	Espera@ms^0,w,c
 10032  0019C4  5C50               	subwf	?_TiGetTics^0,w,c
 10033  0019C6  5051               	movf	(?_TiGetTics+1)^0,w,c
 10034  0019C8  0A80               	xorlw	128
 10035  0019CA  6E59               	movwf	??_Espera^0,c
 10036  0019CC  5058               	movf	(Espera@ms+1)^0,w,c
 10037  0019CE  0A80               	xorlw	128
 10038  0019D0  5859               	subwfb	??_Espera^0,w,c
 10039  0019D2  E3F4               	bnc	l4129
 10040  0019D4  0012               	return		;funcret
 10041  0019D6                     __end_of_Espera:
 10042                           	callstack 0
 10043                           
 10044 ;; *************** function _TiResetTics *****************
 10045 ;; Defined at:
 10046 ;;		line 55 in file "TiTTimer.c"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;  Handle          1    wreg     unsigned char 
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;  Handle          1    5[COMRAM] unsigned char 
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  1    wreg      void 
 10053 ;; Registers used:
 10054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10055 ;; Tracked objects:
 10056 ;;		On entry : 0/0
 10057 ;;		On exit  : 0/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMRAM   BANK0   BANK1
 10060 ;;      Params:         0       0       0
 10061 ;;      Locals:         1       0       0
 10062 ;;      Temps:          0       0       0
 10063 ;;      Totals:         1       0       0
 10064 ;;Total ram usage:        1 bytes
 10065 ;; Hardware stack levels used: 1
 10066 ;; Hardware stack levels required when called: 2
 10067 ;; This function calls:
 10068 ;;		Nothing
 10069 ;; This function is called by:
 10070 ;;		_Espera
 10071 ;;		_WaitForBusy
 10072 ;;		_TeTeclat
 10073 ;;		_menu
 10074 ;;		_motorAltaveu
 10075 ;;		_GLCDMotor
 10076 ;;		_motorHora
 10077 ;;		_motorSIO
 10078 ;; This function uses a non-reentrant model
 10079 ;;
 10080                           
 10081                           	psect	text85
 10082  001A2C                     __ptext85:
 10083                           	callstack 0
 10084  001A2C                     _TiResetTics:
 10085                           	callstack 27
 10086                           
 10087                           ;incstack = 0
 10088                           ;TiResetTics@Handle stored from wreg
 10089  001A2C  6E50               	movwf	TiResetTics@Handle^0,c
 10090                           
 10091                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
 10092  001A2E  5050               	movf	TiResetTics@Handle^0,w,c
 10093  001A30  D805               	call	PL24	;call to abstracted procedure
 10094  001A32  C015  FFDE         	movff	_h_Tics,postinc2
 10095  001A36  C016  FFDD         	movff	_h_Tics+1,postdec2
 10096  001A3A  0012               	return		;funcret
 10097  001A3C                     __end_of_TiResetTics:
 10098                           	callstack 0
 10099  001A3C                     PL24:
 10100                           	callstack 24
 10101  001A3C  0D03               	mullw	3
 10102  001A3E  50F3               	movf	243,w,c
 10103  001A40  0F80               	addlw	low _s_Timers
 10104  001A42  6ED9               	movwf	fsr2l,c
 10105  001A44  6ADA               	clrf	fsr2h,c
 10106  001A46  0012               	return	
 10107  001A48                     __end_ofPL24:
 10108                           	callstack 0
 10109                           
 10110 ;; *************** function _TiGetTics *****************
 10111 ;; Defined at:
 10112 ;;		line 61 in file "TiTTimer.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  Handle          1    wreg     unsigned char 
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;  Handle          1    9[COMRAM] unsigned char 
 10117 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  2    5[COMRAM] int 
 10120 ;; Registers used:
 10121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1
 10127 ;;      Params:         2       0       0
 10128 ;;      Locals:         3       0       0
 10129 ;;      Temps:          2       0       0
 10130 ;;      Totals:         7       0       0
 10131 ;;Total ram usage:        7 bytes
 10132 ;; Hardware stack levels used: 1
 10133 ;; Hardware stack levels required when called: 2
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_Espera
 10138 ;;		_WaitForBusy
 10139 ;;		_TeTeclat
 10140 ;;		_menu
 10141 ;;		_motorAltaveu
 10142 ;;		_GLCDMotor
 10143 ;;		_motorHora
 10144 ;;		_motorSIO
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text86
 10149  001924                     __ptext86:
 10150                           	callstack 0
 10151  001924                     _TiGetTics:
 10152                           	callstack 27
 10153                           
 10154                           ;incstack = 0
 10155                           ;TiGetTics@Handle stored from wreg
 10156  001924  6E54               	movwf	TiGetTics@Handle^0,c
 10157                           
 10158                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
 10159  001926  C015  F055         	movff	_h_Tics,TiGetTics@actual	;volatile
 10160  00192A  C016  F056         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10161                           
 10162                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
 10163  00192E  5054               	movf	TiGetTics@Handle^0,w,c
 10164  001930  EC1E  F00D         	call	PL24	;call to abstracted procedure
 10165  001934  CFDE F052          	movff	postinc2,??_TiGetTics
 10166  001938  CFDD F053          	movff	postdec2,??_TiGetTics+1
 10167  00193C  5052               	movf	??_TiGetTics^0,w,c
 10168  00193E  5C55               	subwf	TiGetTics@actual^0,w,c	;volatile
 10169  001940  6E50               	movwf	?_TiGetTics^0,c
 10170  001942  5053               	movf	(??_TiGetTics+1)^0,w,c
 10171  001944  5856               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10172  001946  6E51               	movwf	(?_TiGetTics+1)^0,c
 10173  001948  0012               	return		;funcret
 10174  00194A                     __end_of_TiGetTics:
 10175                           	callstack 0
 10176                           
 10177 ;; *************** function _GLCDInit *****************
 10178 ;; Defined at:
 10179 ;;		line 26 in file "GestioLCD.c"
 10180 ;; Parameters:    Size  Location     Type
 10181 ;;		None
 10182 ;; Auto vars:     Size  Location     Type
 10183 ;;		None
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  1    wreg      void 
 10186 ;; Registers used:
 10187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10188 ;; Tracked objects:
 10189 ;;		On entry : 0/0
 10190 ;;		On exit  : 0/0
 10191 ;;		Unchanged: 0/0
 10192 ;; Data sizes:     COMRAM   BANK0   BANK1
 10193 ;;      Params:         0       0       0
 10194 ;;      Locals:         0       0       0
 10195 ;;      Temps:          0       0       0
 10196 ;;      Totals:         0       0       0
 10197 ;;Total ram usage:        0 bytes
 10198 ;; Hardware stack levels used: 1
 10199 ;; Hardware stack levels required when called: 3
 10200 ;; This function calls:
 10201 ;;		_TiGetTimer
 10202 ;; This function is called by:
 10203 ;;		_main
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           	psect	text87
 10208  001BD2                     __ptext87:
 10209                           	callstack 0
 10210  001BD2                     _GLCDInit:
 10211                           	callstack 27
 10212                           
 10213                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
 10214                           
 10215                           ;incstack = 0
 10216  001BD2  EC55  F00C         	call	_TiGetTimer	;wreg free
 10217  001BD6  6E2C               	movwf	_timerGLCD^0,c
 10218  001BD8  0012               	return		;funcret
 10219  001BDA                     __end_of_GLCDInit:
 10220                           	callstack 0
 10221                           
 10222 ;; *************** function _TiGetTimer *****************
 10223 ;; Defined at:
 10224 ;;		line 70 in file "TiTTimer.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;		None
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  1    wreg      unsigned char 
 10231 ;; Registers used:
 10232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1
 10238 ;;      Params:         0       0       0
 10239 ;;      Locals:         0       0       0
 10240 ;;      Temps:          1       0       0
 10241 ;;      Totals:         1       0       0
 10242 ;;Total ram usage:        1 bytes
 10243 ;; Hardware stack levels used: 1
 10244 ;; Hardware stack levels required when called: 2
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_LcInit
 10249 ;;		_Sinit
 10250 ;;		_TeInit
 10251 ;;		_Minit
 10252 ;;		_initAltaveu
 10253 ;;		_GLCDInit
 10254 ;;		_initHora
 10255 ;;		_initSIO
 10256 ;; This function uses a non-reentrant model
 10257 ;;
 10258                           
 10259                           	psect	text88
 10260  0018AA                     __ptext88:
 10261                           	callstack 0
 10262  0018AA                     _TiGetTimer:
 10263                           	callstack 27
 10264                           
 10265                           ;TiTTimer.c: 74:     counter=0;
 10266                           
 10267                           ;incstack = 0
 10268  0018AA  6A3E               	clrf	_counter^0,c
 10269                           
 10270                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10271  0018AC  D005               	goto	l4175
 10272  0018AE                     l4167:
 10273                           
 10274                           ;TiTTimer.c: 76:         counter++;
 10275  0018AE  2A3E               	incf	_counter^0,f,c
 10276                           
 10277                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10278  0018B0  0E08               	movlw	8
 10279  0018B2  183E               	xorwf	_counter^0,w,c
 10280  0018B4  E101               	bnz	l4175
 10281  0018B6  0CFF               	retlw	255
 10282  0018B8                     l4175:
 10283                           
 10284                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10285  0018B8  D807               	call	PL12	;call to abstracted procedure
 10286  0018BA  04DE               	decf	postinc2,w,c
 10287  0018BC  E0F8               	bz	l4167
 10288                           
 10289                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10290  0018BE  D804               	call	PL12	;call to abstracted procedure
 10291  0018C0  0E01               	movlw	1
 10292  0018C2  6EDF               	movwf	indf2,c
 10293                           
 10294                           ;TiTTimer.c: 80:     return (counter);
 10295  0018C4  503E               	movf	_counter^0,w,c
 10296  0018C6  0012               	return		;funcret
 10297  0018C8                     __end_of_TiGetTimer:
 10298                           	callstack 0
 10299  0018C8                     PL12:
 10300                           	callstack 28
 10301  0018C8  503E               	movf	_counter^0,w,c
 10302  0018CA  0D03               	mullw	3
 10303  0018CC  50F3               	movf	243,w,c
 10304  0018CE  0F82               	addlw	low (_s_Timers+2)
 10305  0018D0  6ED9               	movwf	fsr2l,c
 10306  0018D2  6ADA               	clrf	fsr2h,c
 10307  0018D4  0012               	return	
 10308  0018D6                     __end_ofPL12:
 10309                           	callstack 0
 10310                           
 10311 ;; *************** function _CtoA *****************
 10312 ;; Defined at:
 10313 ;;		line 22 in file "CtoA.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;		None
 10316 ;; Auto vars:     Size  Location     Type
 10317 ;;		None
 10318 ;; Return value:  Size  Location     Type
 10319 ;;                  1    wreg      void 
 10320 ;; Registers used:
 10321 ;;		wreg, status,2, status,0
 10322 ;; Tracked objects:
 10323 ;;		On entry : 0/0
 10324 ;;		On exit  : 0/0
 10325 ;;		Unchanged: 0/0
 10326 ;; Data sizes:     COMRAM   BANK0   BANK1
 10327 ;;      Params:         0       0       0
 10328 ;;      Locals:         0       0       0
 10329 ;;      Temps:          0       0       0
 10330 ;;      Totals:         0       0       0
 10331 ;;Total ram usage:        0 bytes
 10332 ;; Hardware stack levels used: 1
 10333 ;; Hardware stack levels required when called: 2
 10334 ;; This function calls:
 10335 ;;		Nothing
 10336 ;; This function is called by:
 10337 ;;		_main
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text89
 10342  00196E                     __ptext89:
 10343                           	callstack 0
 10344  00196E                     _CtoA:
 10345                           	callstack 28
 10346                           
 10347                           ;CtoA.c: 23:     if (convertir != 250) {
 10348                           
 10349                           ;incstack = 0
 10350  00196E  0EFA               	movlw	250
 10351  001970  1861               	xorwf	_convertir^0,w,c
 10352  001972  B4D8               	btfsc	status,2,c
 10353  001974  0012               	return	
 10354                           
 10355                           ;CtoA.c: 24:         if (convertir != 0){
 10356  001976  5061               	movf	_convertir^0,w,c
 10357  001978  E009               	bz	l3687
 10358                           
 10359                           ;CtoA.c: 25:             stringScore[1]++;
 10360  00197A  2A74               	incf	(_stringScore+1)^0,f,c
 10361                           
 10362                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 10363  00197C  0E3A               	movlw	58
 10364  00197E  1874               	xorwf	(_stringScore+1)^0,w,c
 10365  001980  E103               	bnz	l3685
 10366                           
 10367                           ;CtoA.c: 27:                 stringScore[1] = '0';
 10368  001982  0E30               	movlw	48
 10369  001984  6E74               	movwf	(_stringScore+1)^0,c
 10370                           
 10371                           ;CtoA.c: 28:                 stringScore[0]++;
 10372  001986  2A73               	incf	_stringScore^0,f,c
 10373  001988                     l3685:
 10374                           
 10375                           ;CtoA.c: 30:             convertir--;
 10376  001988  0661               	decf	_convertir^0,f,c
 10377                           
 10378                           ;CtoA.c: 31:         } else {
 10379  00198A  0012               	return	
 10380  00198C                     l3687:
 10381                           
 10382                           ;CtoA.c: 32:             convertir = 250;
 10383  00198C  0EFA               	movlw	250
 10384  00198E  6E61               	movwf	_convertir^0,c
 10385  001990  0CFA               	retlw	250	;funcret
 10386  001992                     __end_of_CtoA:
 10387                           	callstack 0
 10388                           
 10389 ;; *************** function _high_rsi *****************
 10390 ;; Defined at:
 10391 ;;		line 21 in file "main.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;		None
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  1    wreg      void 
 10398 ;; Registers used:
 10399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1
 10405 ;;      Params:         0       0       0
 10406 ;;      Locals:         0       0       0
 10407 ;;      Temps:          4       0       0
 10408 ;;      Totals:         4       0       0
 10409 ;;Total ram usage:        4 bytes
 10410 ;; Hardware stack levels used: 1
 10411 ;; Hardware stack levels required when called: 1
 10412 ;; This function calls:
 10413 ;;		__TiRSITimer
 10414 ;; This function is called by:
 10415 ;;		Interrupt level 2
 10416 ;; This function uses a non-reentrant model
 10417 ;;
 10418                           
 10419                           	psect	intcode
 10420  000008                     __pintcode:
 10421                           	callstack 0
 10422  000008                     _high_rsi:
 10423                           	callstack 24
 10424                           
 10425                           ;incstack = 0
 10426  000008  8279               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10427  00000A  CFD9 F04C          	movff	fsr2l,??_high_rsi
 10428  00000E  CFDA F04D          	movff	fsr2h,??_high_rsi+1
 10429  000012  CFF3 F04E          	movff	prodl,??_high_rsi+2
 10430  000016  CFF4 F04F          	movff	prodh,??_high_rsi+3
 10431  00001A  EC89  F00B         	call	__TiRSITimer	;wreg free
 10432  00001E  C04F  FFF4         	movff	??_high_rsi+3,prodh
 10433  000022  C04E  FFF3         	movff	??_high_rsi+2,prodl
 10434  000026  C04D  FFDA         	movff	??_high_rsi+1,fsr2h
 10435  00002A  C04C  FFD9         	movff	??_high_rsi,fsr2l
 10436  00002E  9279               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10437  000030  0011               	retfie		f
 10438  000032                     __end_of_high_rsi:
 10439                           	callstack 0
 10440                           
 10441 ;; *************** function __TiRSITimer *****************
 10442 ;; Defined at:
 10443 ;;		line 37 in file "TiTTimer.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;		None
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;		None
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  1    wreg      void 
 10450 ;; Registers used:
 10451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10452 ;; Tracked objects:
 10453 ;;		On entry : 0/0
 10454 ;;		On exit  : 0/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMRAM   BANK0   BANK1
 10457 ;;      Params:         0       0       0
 10458 ;;      Locals:         0       0       0
 10459 ;;      Temps:          1       0       0
 10460 ;;      Totals:         1       0       0
 10461 ;;Total ram usage:        1 bytes
 10462 ;; Hardware stack levels used: 1
 10463 ;; This function calls:
 10464 ;;		Nothing
 10465 ;; This function is called by:
 10466 ;;		_high_rsi
 10467 ;; This function uses a non-reentrant model
 10468 ;;
 10469                           
 10470                           	psect	text91
 10471  001712                     __ptext91:
 10472                           	callstack 0
 10473  001712                     __TiRSITimer:
 10474                           	callstack 0
 10475                           
 10476                           ;TiTTimer.c: 39:     TMR0H = 223;
 10477                           
 10478                           ;incstack = 0
 10479                           
 10480                           ;TiTTimer.c: 40:     TMR0L = 148;
 10481  001712  D81E               	call	PL52	;call to abstracted procedure
 10482                           
 10483                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 10484  001714  94F2               	bcf	242,2,c	;volatile
 10485                           
 10486                           ;TiTTimer.c: 42:     h_Tics++;
 10487  001716  4A15               	infsnz	_h_Tics^0,f,c
 10488  001718  2A16               	incf	(_h_Tics+1)^0,f,c
 10489                           
 10490                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 10491  00171A  0E48               	movlw	72
 10492  00171C  5C15               	subwf	_h_Tics^0,w,c
 10493  00171E  0EEE               	movlw	238
 10494  001720  5816               	subwfb	(_h_Tics+1)^0,w,c
 10495  001722  A0D8               	btfss	status,0,c
 10496  001724  0012               	return	
 10497                           
 10498                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 10499  001726  6A3E               	clrf	_counter^0,c
 10500  001728                     i2l4377:
 10501  001728  0E07               	movlw	7
 10502  00172A  643E               	cpfsgt	_counter^0,c
 10503  00172C  D001               	goto	i2l4381
 10504  00172E  D00D               	goto	i2l368
 10505  001730                     i2l4381:
 10506                           
 10507                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 10508  001730  EC64  F00C         	call	PL12	;call to abstracted procedure
 10509  001734  04DE               	decf	postinc2,w,c
 10510  001736  E107               	bnz	i2l4385
 10511                           
 10512                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 10513  001738  503E               	movf	_counter^0,w,c
 10514  00173A  EC1E  F00D         	call	PL24	;call to abstracted procedure
 10515  00173E  5015               	movf	_h_Tics^0,w,c
 10516  001740  5EDE               	subwf	postinc2,f,c
 10517  001742  5016               	movf	(_h_Tics+1)^0,w,c
 10518  001744  5ADD               	subwfb	postdec2,f,c
 10519  001746                     i2l4385:
 10520                           
 10521                           ;TiTTimer.c: 50:         }
 10522  001746  2A3E               	incf	_counter^0,f,c
 10523  001748  D7EF               	goto	i2l4377
 10524  00174A                     i2l368:
 10525                           
 10526                           ;TiTTimer.c: 51:         h_Tics=0;
 10527  00174A  6A15               	clrf	_h_Tics^0,c
 10528  00174C  6A16               	clrf	(_h_Tics+1)^0,c
 10529  00174E  0012               	return		;funcret
 10530  001750                     __end_of__TiRSITimer:
 10531                           	callstack 0
 10532  001750                     PL52:
 10533                           	callstack 28
 10534  001750  0EDF               	movlw	223
 10535  001752  6ED7               	movwf	215,c	;volatile
 10536  001754  0E94               	movlw	148
 10537  001756  6ED6               	movwf	214,c	;volatile
 10538  001758  0C94               	retlw	148
 10539  00175A                     __end_ofPL52:
 10540                           	callstack 0
 10541                           
 10542                           	psect	rparam
 10543  0000                     
 10544                           	psect	temp
 10545  000079                     btemp:
 10546                           	callstack 0
 10547  000079                     	ds	1
 10548  0000                     int$flags	set	btemp
 10549  0000                     wtemp8	set	btemp+1
 10550  0000                     ttemp5	set	btemp+1
 10551  0000                     ttemp6	set	btemp+4
 10552  0000                     ttemp7	set	btemp+8
 10553                           
 10554                           	psect	idloc
 10555                           
 10556                           ;Config register IDLOC0 @ 0x200000
 10557                           ;	unspecified, using default values
 10558  200000                     	org	2097152
 10559  200000  FF                 	db	255
 10560                           
 10561                           ;Config register IDLOC1 @ 0x200001
 10562                           ;	unspecified, using default values
 10563  200001                     	org	2097153
 10564  200001  FF                 	db	255
 10565                           
 10566                           ;Config register IDLOC2 @ 0x200002
 10567                           ;	unspecified, using default values
 10568  200002                     	org	2097154
 10569  200002  FF                 	db	255
 10570                           
 10571                           ;Config register IDLOC3 @ 0x200003
 10572                           ;	unspecified, using default values
 10573  200003                     	org	2097155
 10574  200003  FF                 	db	255
 10575                           
 10576                           ;Config register IDLOC4 @ 0x200004
 10577                           ;	unspecified, using default values
 10578  200004                     	org	2097156
 10579  200004  FF                 	db	255
 10580                           
 10581                           ;Config register IDLOC5 @ 0x200005
 10582                           ;	unspecified, using default values
 10583  200005                     	org	2097157
 10584  200005  FF                 	db	255
 10585                           
 10586                           ;Config register IDLOC6 @ 0x200006
 10587                           ;	unspecified, using default values
 10588  200006                     	org	2097158
 10589  200006  FF                 	db	255
 10590                           
 10591                           ;Config register IDLOC7 @ 0x200007
 10592                           ;	unspecified, using default values
 10593  200007                     	org	2097159
 10594  200007  FF                 	db	255
 10595                           
 10596                           	psect	config
 10597                           
 10598                           ; Padding undefined space
 10599  300000                     	org	3145728
 10600  300000  FF                 	db	255
 10601                           
 10602                           ;Config register CONFIG1H @ 0x300001
 10603                           ;	Oscillator
 10604                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 10605                           ;	Fail-Safe Clock Monitor Enable bit
 10606                           ;	FCMEN = 0x0, unprogrammed default
 10607                           ;	Internal/External Oscillator Switchover bit
 10608                           ;	IESO = 0x0, unprogrammed default
 10609  300001                     	org	3145729
 10610  300001  06                 	db	6
 10611                           
 10612                           ;Config register CONFIG2L @ 0x300002
 10613                           ;	unspecified, using default values
 10614                           ;	Power-up Timer Enable bit
 10615                           ;	PWRT = 0x1, unprogrammed default
 10616                           ;	Brown-out Reset Enable bits
 10617                           ;	BOR = 0x3, unprogrammed default
 10618                           ;	Brown-out Reset Voltage bits
 10619                           ;	BORV = 0x3, unprogrammed default
 10620  300002                     	org	3145730
 10621  300002  1F                 	db	31
 10622                           
 10623                           ;Config register CONFIG2H @ 0x300003
 10624                           ;	Watchdog Timer Enable bit
 10625                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10626                           ;	Watchdog Timer Postscale Select bits
 10627                           ;	WDTPS = 0xF, unprogrammed default
 10628  300003                     	org	3145731
 10629  300003  1E                 	db	30
 10630                           
 10631                           ; Padding undefined space
 10632  300004                     	org	3145732
 10633  300004  FF                 	db	255
 10634                           
 10635                           ;Config register CONFIG3H @ 0x300005
 10636                           ;	CCP2 MUX bit
 10637                           ;	CCP2MX = 0x1, unprogrammed default
 10638                           ;	PORTB A/D Enable bit
 10639                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10640                           ;	Low-Power Timer1 Oscillator Enable bit
 10641                           ;	LPT1OSC = 0x0, unprogrammed default
 10642                           ;	MCLR Pin Enable bit
 10643                           ;	MCLRE = 0x1, unprogrammed default
 10644  300005                     	org	3145733
 10645  300005  81                 	db	129
 10646                           
 10647                           ;Config register CONFIG4L @ 0x300006
 10648                           ;	Stack Full/Underflow Reset Enable bit
 10649                           ;	STVREN = 0x1, unprogrammed default
 10650                           ;	Single-Supply ICSP Enable bit
 10651                           ;	LVP = OFF, Single-Supply ICSP disabled
 10652                           ;	Boot Block Size Select bits
 10653                           ;	BBSIZ = 0x0, unprogrammed default
 10654                           ;	Extended Instruction Set Enable bit
 10655                           ;	XINST = 0x0, unprogrammed default
 10656                           ;	Background Debugger Enable bit
 10657                           ;	DEBUG = 0x1, unprogrammed default
 10658  300006                     	org	3145734
 10659  300006  81                 	db	129
 10660                           
 10661                           ; Padding undefined space
 10662  300007                     	org	3145735
 10663  300007  FF                 	db	255
 10664                           
 10665                           ;Config register CONFIG5L @ 0x300008
 10666                           ;	unspecified, using default values
 10667                           ;	Code Protection bit
 10668                           ;	CP0 = 0x1, unprogrammed default
 10669                           ;	Code Protection bit
 10670                           ;	CP1 = 0x1, unprogrammed default
 10671  300008                     	org	3145736
 10672  300008  03                 	db	3
 10673                           
 10674                           ;Config register CONFIG5H @ 0x300009
 10675                           ;	unspecified, using default values
 10676                           ;	Boot Block Code Protection bitProtect Boot
 10677                           ;	CPB = 0x1, unprogrammed default
 10678                           ;	Data EEPROM Code Protection bit
 10679                           ;	CPD = 0x1, unprogrammed default
 10680  300009                     	org	3145737
 10681  300009  C0                 	db	192
 10682                           
 10683                           ;Config register CONFIG6L @ 0x30000A
 10684                           ;	unspecified, using default values
 10685                           ;	Write Protection bit
 10686                           ;	WRT0 = 0x1, unprogrammed default
 10687                           ;	Write Protection bit
 10688                           ;	WRT1 = 0x1, unprogrammed default
 10689  30000A                     	org	3145738
 10690  30000A  03                 	db	3
 10691                           
 10692                           ;Config register CONFIG6H @ 0x30000B
 10693                           ;	unspecified, using default values
 10694                           ;	Configuration Register Write Protection bit
 10695                           ;	WRTC = 0x1, unprogrammed default
 10696                           ;	Boot Block Write Protection bit
 10697                           ;	WRTB = 0x1, unprogrammed default
 10698                           ;	Data EEPROM Write Protection bit
 10699                           ;	WRTD = 0x1, unprogrammed default
 10700  30000B                     	org	3145739
 10701  30000B  E0                 	db	224
 10702                           
 10703                           ;Config register CONFIG7L @ 0x30000C
 10704                           ;	unspecified, using default values
 10705                           ;	Table Read Protection bit
 10706                           ;	EBTR0 = 0x1, unprogrammed default
 10707                           ;	Table Read Protection bit
 10708                           ;	EBTR1 = 0x1, unprogrammed default
 10709  30000C                     	org	3145740
 10710  30000C  03                 	db	3
 10711                           
 10712                           ;Config register CONFIG7H @ 0x30000D
 10713                           ;	unspecified, using default values
 10714                           ;	Boot Block Table Read Protection bit
 10715                           ;	EBTRB = 0x1, unprogrammed default
 10716  30000D                     	org	3145741
 10717  30000D  40                 	db	64
 10718                           tosu	equ	0xFFF
 10719                           tosh	equ	0xFFE
 10720                           tosl	equ	0xFFD
 10721                           stkptr	equ	0xFFC
 10722                           pclatu	equ	0xFFB
 10723                           pclath	equ	0xFFA
 10724                           pcl	equ	0xFF9
 10725                           tblptru	equ	0xFF8
 10726                           tblptrh	equ	0xFF7
 10727                           tblptrl	equ	0xFF6
 10728                           tablat	equ	0xFF5
 10729                           prodh	equ	0xFF4
 10730                           prodl	equ	0xFF3
 10731                           indf0	equ	0xFEF
 10732                           postinc0	equ	0xFEE
 10733                           postdec0	equ	0xFED
 10734                           preinc0	equ	0xFEC
 10735                           plusw0	equ	0xFEB
 10736                           fsr0h	equ	0xFEA
 10737                           fsr0l	equ	0xFE9
 10738                           wreg	equ	0xFE8
 10739                           indf1	equ	0xFE7
 10740                           postinc1	equ	0xFE6
 10741                           postdec1	equ	0xFE5
 10742                           preinc1	equ	0xFE4
 10743                           plusw1	equ	0xFE3
 10744                           fsr1h	equ	0xFE2
 10745                           fsr1l	equ	0xFE1
 10746                           bsr	equ	0xFE0
 10747                           indf2	equ	0xFDF
 10748                           postinc2	equ	0xFDE
 10749                           postdec2	equ	0xFDD
 10750                           preinc2	equ	0xFDC
 10751                           plusw2	equ	0xFDB
 10752                           fsr2h	equ	0xFDA
 10753                           fsr2l	equ	0xFD9
 10754                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    176
    Data        21
    BSS         260
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     120
    BANK0           128      5      47
    BANK1           244      0     144

Pointer List with Targets:

    userPtr	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(BANK0[9]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 144
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[144]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(CODE[11]), loginText(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 145
		 -> stringScore(COMRAM[3]), STR_8(CODE[8]), STR_7(CODE[12]), STR_6(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[144]), 
		 -> STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[9]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), registerText(CODE[11]), loginText(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_GLCDMotor
    _main->_motorSIO
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _Uinit->___lbdiv
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    _main->_menu

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   41103
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    9851
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
                          _UnewScore
 ---------------------------------------------------------------------------------
 (2) _UnewScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    4144
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0   10724
                                              0 BANK0      5     5      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                          _UgetScore
                           _UgetTop5
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetTop5                                             1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0    1296
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                4     4      0    1421
                                              9 COMRAM     4     4      0
                            ___lbdiv
                 _escriureCharEEPROM
                   _llegirCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _llegirCharEEPROM                                     1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1    1032
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     238
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             4     4      0      91
                                             12 COMRAM     4     4      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0       9
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2525
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               3     3      0    1103
                                             16 COMRAM     3     3      0
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    9799
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2525
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1846
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                           _UgetTop5 (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    3168
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    2193
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetTop5 (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
     ___lbdiv
     _escriureCharEEPROM
     _llegirCharEEPROM
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetScore
     _UgetTop5
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName
     _UnewScore

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F3      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            F4      0       0       5        0.0%
BANK1               F4      0      90       6       59.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      5      2F       4       36.7%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     16      78       1       95.2%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     137       7        0.0%
DATA                 0      0     137       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 07 16:39:02 2022

               TiResetTics@Handle 0050                  _loginNOTRegister 03BF  
                               _i 0034                                 _j 0033  
                              PL2 0A0A                                PL4 0A20  
                              PL6 0A34                                PL8 0FD4  
                              l55 1884                  UgetUserName@quin 0052  
       ??_UcheckExistsNotFinished 0050         __size_of_llegirCharEEPROM 0010  
                             PL10 0C84                               PL20 0CBC  
                             PL12 18C8                               PL30 078A  
                             PL22 0EA8                               PL14 0C92  
                             PL40 1112                               PL32 16B0  
                             PL24 1A3C                               PL16 0CAE  
                             PL50 0EB4                               PL42 0790  
                             PL34 1104                               PL26 0780  
                             PL18 13DA                               PL60 12B4  
                             PL52 1750                               PL44 16BE  
                             PL36 0A3C                               PL28 17F6  
                             PL70 154E                               PL62 15B4  
                             PL54 14E8                               PL46 079A  
                             PL38 14DA                               PL80 07AE  
                             PL72 1A94                               PL64 0A4A  
                             PL56 1120                               PL48 1784  
                             PL82 07B4                               PL74 170A  
                             PL66 178E                               PL58 19AA  
                             PL84 07BA                               PL76 07A6  
                             PL68 1804                               PL78 0CCE  
          __end_of_compareStrings 1784                               l603 0476  
                             l509 0090                               l720 191A  
                             l536 01C6                               l537 01D6  
                             l539 01E2                               l732 108C  
                             l771 0ABC                               l763 0A56  
                             l851 1362                               l932 0812  
                             l772 0AB2                               l764 0A68  
                             l766 0A74                               l944 0876  
                             l768 0A8E                               l962 0956  
                             l795 0BAA                               l964 097C  
                             u230 1488                               u250 149E  
                             u308 14CC                               u270 14B2  
                             u248 148A                               u290 14CA  
                             u268 14A0                               u288 14B4  
                             _pos 0039                               _tmp 003D  
                ??_CantaPartBaixa 0050                               prod 000FF3  
                             wreg 000FE8       __size_of_calculateShowUsers 0004  
              __size_of_GLCDMotor 0248                              l1001 112C  
                            l1010 1182                              l1002 1146  
                            l1011 119C                              l1004 1168  
                            l1013 11BE                              l1009 11EA  
                            l1150 12D4                              l2143 1B54  
                            l2231 1B18                              l1272 0E12  
                            l1264 0D7A                              l2209 1B0C  
                            l2305 1B00                              l1257 0D52  
                            l3107 11D8                              l2331 195C  
                            l3045 115C                              l3037 1142  
                            l2165 1B24                              l2325 1954  
                            l4103 17AA                              l2343 196C  
                            l2337 1964                              l3083 11B2  
                            l3075 1198                              l3059 117E  
                            l4125 17D0                              l4135 1888  
                            l4215 1704                              l4207 16F0  
                            l4303 1872                              l2359 1AF4  
                            l4129 19BC                              l4209 16F6  
                            l3097 11D4                              l4321 121A  
                            l4401 18F4                              l6001 01B2  
                            l6011 01D2                              l6021 01F6  
                            l4167 18AE                              l4175 18B8  
                            l4271 1770                       _puntuacions 0001  
                            l4265 175C                              l6201 03C0  
                            l6121 02EE                              l6041 021E  
                            l6033 020E                              l4603 08D0  
                            l4523 0808                              l4515 07F4  
                            l4291 1856                              l4451 107A  
                            l4427 101E                              l6131 0314  
                            l6123 02F4                              l6107 02C6  
                            l4613 08F6                              l4509 07E6  
                            l4461 108E                              l6205 03C4  
                            l6061 0252                              l5501 1390  
                            l4551 0854                              l4543 0848  
                            l4287 1850                              l6303 0520  
                            l6135 032C                              l4641 094A  
                            l4633 0934                              l4529 081E  
                            l4473 10A8                              l6313 0538  
                            l6305 0526                              l6217 03D6  
                            l6049 022C                              l5521 13C0  
                            l4713 12FA                              l4705 12E4  
                            l4619 0906                              l4299 186A  
                            l4483 10CA                              l6323 0550  
                            l6315 053E                              l6155 0360  
                            l6091 02A4                              l6075 0278  
                            l5507 13A4                              l4723 1322  
                            l4707 12E8                              l3685 1988  
                            l4557 0866                              l4397 18EC  
                            l4485 10D4                              l5621 0B72  
                            l6333 0584                              l6261 0450  
                            l6253 042C                              l6229 03F6  
                            l6173 0384                              l6405 0692  
                            l5509 13A8                              l4813 0D94  
                            l3687 198C                              l4663 0988  
                            l4655 0976                              l4647 095E  
                            l5711 0F06                              l5623 0B7C  
                            l5615 0B68                              l5607 0B56  
                            l6327 0558                              l6271 047E  
                            l6247 041E                              l6239 0410  
                            l4823 0DC4                              l4815 0D9A  
                            l4673 09A4                              l4593 08AE  
                            l5705 0EF6                              l4489 10DC  
                            l5633 0BA8                              l5641 0BB4  
                            l5625 0B80                              l5561 0AC2  
                            l5545 0A80                              l6281 04A8  
                            l6089 029E                              l4921 1464  
                            l4729 1338                              l4737 1346  
                            l4833 0DFA                              l4745 0CD8  
                            l4667 0990                              l4587 089E  
                            l4499 07C4                              l4683 09BE  
                            l5731 0F36                              l5715 0F12  
                            l5563 0AC8                              l5547 0A88  
                            l5539 0A6E                              l6371 063A  
                            l6347 05C0                              l4691 12C0  
                            l4851 0E46                              l4843 0E24  
                            l4771 0D1A                              l4763 0D08  
                            l4755 0CF4                              l6427 15F4  
                            l4677 09B2                              l4597 08BA  
                            l5725 0F28                              l5717 0F18  
                            l5709 0F02                              l5653 0BD2  
                            l5645 0BC2                              l5573 0AF2  
                            l5557 0AB6                              l6381 064E  
                            l6373 0640                              l6349 05C6  
                            l6293 050A                              l6277 0490  
                            l6269 0478                              l6189 03A2  
                            l4909 1452                              l4917 1460  
                            l5663 0BEC                              l6359 060A  
                            l6287 04EA                              l5495 1384  
                            l4871 13F4                              l4775 0D24  
                            l4863 0E68                              l5753 0F6C  
                            l5745 0F56                              l5737 0F44  
                            l5665 0BF2                              l5593 0B28  
                            l5577 0B00                              l5569 0AEE  
                            l6289 04F0                              l5913 00E2  
                            l5905 00CA                              l5489 1378  
                            l4785 0D3A                              l4777 0D2A  
                            l5739 0F48                              l5659 0BE4  
                            l5595 0B2E                              l6387 0672  
                            l6299 0516                              l5923 0106  
                            l5915 00E8                              l5773 0FA0  
                            l5765 0F8E                              l5749 0F62  
                            l5685 0C34                              l5677 0C22  
                            l5589 0B20                              l6397 0686  
                            l5941 0124                              l5925 010C  
                            l5861 0038                              l4893 142C  
                            l5759 0F80                              l4887 1420  
                            l5769 0F96                              l5689 0C3C  
                            l5697 0C4E                              l5929 0114  
                            l5779 0FA6                              l5971 017A  
                            l5955 0148                              l5883 007E  
                            l5867 004E                              l4899 1438  
                            l5965 016C                              l5957 014E  
                            l5885 0084                              l5877 0070  
                            l5983 018A                              l5967 0172  
                            l5897 00AA                              STR_1 1DB8  
                            STR_2 1DB1                              STR_3 1D98  
                            STR_4 1D7F                              STR_5 1D6F  
                            STR_6 1DA9                              STR_7 1D8C  
                            STR_8 1DA1                              _LATD 000F8C  
                            u3300 15A6                              u3240 1564  
                            u3320 14FE                              u3260 157A  
                            u3340 1514                              u4300 0D5A  
                            u3318 15A8                              u4310 0D5E  
                            u3280 158E                              u3360 1528  
                            u3600 16A2                              u3258 1566  
                            u3338 1500                              u3530 1774  
                            u3380 1540                              u4340 0DDA  
                            u3278 157C                              u3358 1516  
                            u3550 185A                              u3607 16A0  
                            u3298 1590                              u3378 152A  
                            u3570 12AA                              u3820 0850  
                            u3398 1542                              u3750 07F0  
                            u3590 168C                              u6310 01EA  
                            u6240 0198                              u3850 086E  
                            u6330 01F0                              u6170 0132  
                            u3597 168A                              u5630 0AAE  
                            u5810 0BDE                              u6290 01DC  
                            u6820 0512                              u6910 05BE  
                            u6670 03E2                              u5880 0EC8  
                            u6680 03E8                              u6930 05D8  
                            u5888 0ECA                              _CtoA 196E  
                 ??_SsetNovaTecla 0050            __end_of_SIOcheckKrebut 1AF8  
                            _cap1 03B7                              _Rows 0046  
                            _cap2 03B6                              _main 15BE  
                            _hora 006D                              _menu 0036  
                            _nota 0030             getArrayShowUsers@quin 0052  
                 __end_of_HJugant 1BE0                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0079  
                 __end_of_JJuguem 1B92                              prodh 000FF4  
                            prodl 000FF3                   __end_of_LcClear 19AA  
                            start 0032                   __end_of_CantaIR 1A2C  
                    ?_initAltaveu 004B                      ___param_bank 000000  
                     _stringScore 0073                  __end_of_GLCDInit 1BDA  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 1BF2  
                           ?_CtoA 004B                __size_of_CToAReset 0008  
                     Espera@Timer 005A                             ?_main 004B  
                           ?_menu 004B                   __end_of___lbdiv 1876  
                           _EEADR 000FA9                     ??_TiInitTimer 0050  
                           _T0CON 000FD5                   ?_compareStrings 0050  
                           i2l368 174A                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _LcLCD 167A                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                      ?_init_eusart 004B  
                           _TXREG 000FAD                             _SMSon 1C2A  
                           _TXSTA 000FAC                             _Minit 1BC2  
                __end_of_HGetTime 1BF2                             _Sinit 1C26  
                           _Timer 0043                             _Uinit 100C  
                 __end_of_initSIO 1BA2                             _s_ptr 0017  
                           _score 001A                             _nou_s 03C0  
           __end_of_JoystickMotor 1200                   _HActualitzaHora 180E  
     __size_of_escriureCharEEPROM 0026                    __pbitbssCOMRAM 03B0  
                           tablat 000FF5                       _LcNewString 1B40  
                   ??_TiResetTics 0050                   ?_SIOcheckKrebut 004B  
              _UshowUsersCalculat 1B10                             ttemp5 007A  
                           ttemp6 007D                             ttemp7 0081  
                           status 000FD8                  ?_checkHoraAcabat 004B  
                           wtemp8 007A     __size_of_UcheckExistsGetError 0004  
              __size_of_HNouSegon 000C                   ___lbdiv@divisor 0050  
                __end_of_LcGotoXY 18AA              CToAConverteix@numero 0050  
                 ___lbdiv@counter 0052                  __end_of_LcLliure 1B58  
                   ??__TiRSITimer 004B                  __end_of_LcScroll 1BE6  
                      _TiGetTimer 18AA           EscriuPrimeraOrdre@ordre 0051  
                    __end_of_CtoA 1992                  __end_of_JendGame 1C1E  
                     ?_SIOendGame 004B                   __initialization 1622  
             ?_UshowUsersCalculat 004B                __size_of_CantaData 0020  
                    __end_of_main 1622            __end_of_HClearNouSegon 1BF6  
                    __end_of_menu 0780           ?_SIOHaAcabatPuntuacions 004B  
           __size_of_MNouJoystick 0008                      ?_playAltaveu 004B  
               __end_of_GLCDMotor 0A0A                  __end_of_TeTeclat 0FD4  
                   _indexNextUser 0036                            ??_CtoA 0050  
                          ??_main 0061                            ??_menu 00AA  
              __size_of_LcPutChar 0040                     __activetblptr 000002  
                   _ultimaTeclaAD 0022            __size_of_JnovaDireccio 0008  
                GLCDMotor@length1 0024                  GLCDMotor@length2 0023  
                      _JnovaTecla 1B7A                  __end_of_UgetTop5 1A94  
                          ?_LcLCD 004B                            ?_SMSon 004B  
                    ?_CToAobtenir 0050                            ?_Minit 004B  
            ??_UshowUsersCalculat 0050                            ?_Sinit 004B  
                          ?_Uinit 004B                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 18FE  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 0050                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 0050                __size_of_SiFerMenu 0004  
                       ??_LcClear 005E                         ??_CantaIR 0052  
                          i2l4381 1730                            i2l4385 1746  
                          i2l4377 1728                    LcGotoXY@Fisics 0059  
                  LcGotoXY@Column 005D                     ??_WaitForBusy 0057  
              __size_of_TiGetTics 0026                            _SPBRGH 000FB0  
               __end_of_CToAReset 1B9A                            _SMSoff 1C2C  
              SIONovaDireccio@num 0050                            _LcInit 1200  
                    _MNouJoystick 1BCA                    _UgetNumUsuaris 1BFE  
             escriureCharEEPROM@c 0051                            _TeInit 1BBA  
                          _Espera 19B4                      _LcGotoXY$334 005B  
                          _Krebut 03B0    __end_of_SIOHaAcabatPuntuacions 1C16  
                          _RowAct 0045               __end_of_TiResetTics 1A3C  
                          Uinit@k 0056                  __end_of_high_rsi 0032  
                          _h_Tics 0015                   ?_HClearNouSegon 004B  
                       ??___lbdiv 0051                     ?_CToAHaAcabat 004B  
                __end_of_initHora 1BAA               __end_of__TiRSITimer 1750  
                __end_of_menuList 1D50                            clear_0 1648  
                          clear_1 1654                            clear_2 1666  
                          _jugant 03B5                            _segons 001F  
                      _UenviaChar 1ABE                            isa$std 000001  
                _llegirCharEEPROM 1ACE                __size_of_UgetScore 000E  
                      UenviaPas@c 0051       __size_of_EscriuPrimeraOrdre 0064  
               __end_of_HNouSegon 1B04                         ??_initSIO 0051  
                    __pdataCOMRAM 0061            __size_of_CantaPartAlta 005C  
                __end_of_motorSIO 0EA8                __size_of_UenviaPas 0010  
         __end_of_HActualitzaHora 1842                 ??_SIONovaDireccio 0050  
                __end_of_motorJoc 1360                      __mediumconst 1CBE  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  ??_CToAConverteix 0050  
              __size_of_UnewScore 000A               __size_of_SIOendGame 0004  
               __end_of_CantaData 17F6                      TeTeclat@cols 0040  
                ___lbdiv@dividend 0051                         ?_GLCDInit 004B  
                   ?_UcheckExists 004B                        __accesstop 0080  
         __end_of__initialization 166C            __end_of_UgetNumUsuaris 1C02  
               __end_of_LcPutChar 170A                     _JnovaDireccio 1B82  
                JnovaDireccio@dir 0050                     ___rparam_used 000001  
                   __end_of_LcLCD 16B0                       ?_TiGetTimer 004B  
                   __end_of_SMSon 1C2C                 SIONovaTecla@tecla 0050  
                  __pcstackCOMRAM 004B                     __end_of_Minit 1BCA  
             __end_of_WaitForBusy 17D6                     __end_of_Sinit 1C2A  
                   __end_of_Uinit 1104                 __end_of_NoFerMenu 1C1A  
                       ?_HGetTime 0050                    ??_CToAHaAcabat 0050  
            __size_of_initAltaveu 0008                 __end_of_URegister 1C0E  
               __end_of_HnoJugant 1BEE                 __end_of_SiFerMenu 1C12  
                      __end_ofPL2 0A20                        __end_ofPL4 0A34  
                      __end_ofPL6 0A3C                        __end_ofPL8 100C  
                ___lbdiv@quotient 0053                 __end_of_TiGetTics 194A  
                     _TiInitTimer 18D6                       ?_JnovaTecla 004B  
                         ??_LcLCD 005F                           ??_SMSon 0050  
                       ?_LcGotoXY 0058                         ?_LcLliure 004B  
                         ??_Minit 0051                         ?_LcScroll 004B  
                         ??_Sinit 0051                   JnovaTecla@tecla 0050  
                         ??_Uinit 0054              __size_of_init_eusart 0016  
                       ?_JendGame 004B                    ??_UcheckExists 0050  
             MNouJoystick@posicio 0050                        ??_GLCDInit 0051  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100                         ?_TeTeclat 004B  
                     _TiResetTics 1A2C                   ?_UgetNumUsuaris 004B  
                  ?_JnovaDireccio 004B                     ??_UmotorUsers 0055  
               __end_of_UgetScore 1AEC                     ?_JoystickInit 004B  
                         ?_SMSoff 004B                           ?_LcInit 004B  
                   _CantaPartAlta 1558                           ?_TeInit 004B  
                         ?_Espera 0057                 __end_of_UenviaPas 1ABE  
                     __TiRSITimer 1712               _indexNextUserStruct 0035  
                       ?_UgetTop5 004B                 __end_of_UnewScore 1B62  
                      ??_HGetTime 0052                     ?_UgetUserName 0050  
                ??_compareStrings 0053                           _BAUDCON 000FB8  
                     ?_UenviaChar 0050              __size_of_playAltaveu 0004  
              __size_of_motorHora 0084            __size_of_MsetNovaTecla 0008  
      __end_of_calculateShowUsers 1BFE                           LcInit@i 005C  
                ?_HActualitzaHora 0050                        ??_LcGotoXY 0059  
                      ??_LcLliure 0050                        ??_LcScroll 0053  
                ??_SIOcheckKrebut 0050               __size_of_TiGetTimer 001E  
            __size_of_CToAobtenir 0004                        ??_JendGame 0050  
                         _HJugant 1BDA                         ?_high_rsi 004B  
                         _JJuguem 1B8A                           _LcClear 1992  
                         _CantaIR 1A10                      ?_LcNewString 0053  
                  ??_JoystickInit 0050                         ?_initHora 004B  
                      ??_TeTeclat 0057                       _WaitForBusy 1798  
                  ?_CantaPartAlta 004B             __end_of_SsetNovaTecla 1C30  
                 __size_of_SMSoff 0002                   __size_of_LcInit 00B4  
                         __Hparam 0000               __size_of_JnovaTecla 0008  
                 __size_of_TeInit 0008                   __size_of_Espera 0022  
                         __Lparam 0000                        ??_UgetTop5 0050  
                    ??_SIOendGame 0050                         ?_motorSIO 004B  
                       ?_motorJoc 004B                    ??_UgetUserName 0052  
               _getArrayShowUsers 19F4               __end_of_UmotorUsers 0C84  
        ?_UcheckExistsNotFinished 004B                           ___lbdiv 1842  
                   ?_motorAltaveu 004B                ?_getArrayShowUsers 0050  
                         __pcinit 1622      __end_of_UcheckExistsGetError 1C06  
                         _ferMenu 03B9                        _init_ports 19D6  
                         __ramtop 0200                           __ptext0 15BE  
                         __ptext1 0CD6                           __ptext2 1B58  
                         __ptext3 12BE                           __ptext4 194A  
                         __ptext5 1BE6                           __ptext6 1AEC  
                         __ptext7 1B62                           __ptext8 1B6A  
                         __ptext9 1B72                         _T0CONbits 000FD5  
                       _GLCDMotor 07C2                         CantaIR@IR 0052  
                         _initSIO 1B9A                           _counter 003E  
                         _horaTmp 0047            conversorJoystick@direc 0050  
             ??_getArrayShowUsers 0052                       UenviaChar@c 0051  
      __end_of_escriureCharEEPROM 1924                 __end_of_loginText 1D6F  
                LcNewString@new_s 0053                   WaitForBusy@Busy 0057  
                     Uinit@k_1190 0057                      _do_showUsers 03BC  
                         _userPtr 0013                 GLCDMostraMenu@num 0050  
              __end_of_SIOendGame 1BEA                        ??_high_rsi 004C  
            __end_of_CToAHaAcabat 1C26              end_of_initialization 166C  
                         _usuaris 0100                     UgetScore@quin 0050  
                 ??_JnovaDireccio 0050                        ??_initHora 0051  
        __end_of_llegirCharEEPROM 1ADE           __size_of_CantaPartBaixa 005C  
                   __Lmediumconst 1CBE                   TiGetTics@Handle 0054  
                   _MsetNovaTecla 1BB2               __size_of_UenviaChar 0010  
               _conversorJoystick 194A                 __end_of_motorHora 1476  
                ??_HClearNouSegon 0050                        _novaLletra 006B  
       __end_of_getArrayShowUsers 1A10                ?_conversorJoystick 004B  
                 _usuariActualSIO 0064                        ??_motorSIO 005F  
                       _CToAReset 1B92                        ??_motorJoc 005E  
                 TiGetTics@actual 0055                     ?_SIONovaTecla 004B  
                      GLCDMotor@j 0029                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 1B72  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 0057  
        __size_of_checkHoraAcabat 000C                        _numUsuaris 0037  
            __end_of_UcheckExists 1C0A                     TeTeclat@files 003F  
             ??_conversorJoystick 0050                SIOStartGame@usuari 0050  
          __size_of_JoystickMotor 00D6                     TeTeclat@state 0041  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 004B                     ?_SIOStartGame 004B  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
     __size_of_UshowUsersCalculat 000C                         _HNouSegon 1AF8  
               UnewScore@scoretmp 0050                    _GLCDMostraMenu 1B28  
       __end_of_conversorJoystick 196E                   ??_CantaPartAlta 0050  
                  ?_MsetNovaTecla 004B                         _CantaData 17D6  
               __size_of_GLCDInit 0008                       _UmotorUsers 0A54  
                       _TXSTAbits 000FAC   __end_of_UcheckExistsNotFinished 1B28  
                  __end_of_SMSoff 1C2E                      ??_TiGetTimer 0050  
                  __end_of_LcInit 12B4                    ??_SIONovaTecla 0050  
                      ?_CToAReset 004B              __end_of_teclaPremuda 1D5C  
                       _LcPutChar 16CA                    __end_of_TeInit 1BC2  
               motorAltaveu@state 002D                    __end_of_Espera 19D6  
                  GLCDMotor@state 002A        __end_of_EscriuPrimeraOrdre 14DA  
               __size_of_HGetTime 0004                     __pidataCOMRAM 1A5E  
                     ?_init_ports 004B                         _NoFerMenu 1C16  
                       _ColumnAct 0044              __end_of_JoystickInit 1AAE  
                  ??_SIOStartGame 0050                         _URegister 1C0A  
                       _HnoJugant 1BEA                      ?_TiInitTimer 004B  
            __end_of_registerText 1D67                      ??_JnovaTecla 0050  
                       _SiFerMenu 1C0E                       __end_ofPL10 0C92  
                     __end_ofPL20 0CCE                       __end_ofPL12 18D6  
                     __end_ofPL30 0790                       __end_ofPL22 0EB4  
                     __end_ofPL14 0CAE                       __end_ofPL40 1120  
                     __end_ofPL32 16BE                       __end_ofPL24 1A48  
                     __end_ofPL16 0CBC                       __end_ofPL50 0EBE  
                     __end_ofPL42 079A                       __end_ofPL34 1112  
                     __end_ofPL26 078A                       __end_ofPL18 13F2  
                     __end_ofPL60 12BE                       __end_ofPL52 175A  
                     __end_ofPL44 16CA                       __end_ofPL36 0A4A  
                     __end_ofPL28 1804                       __end_ofPL70 1558  
                     __end_ofPL62 15BE                       __end_ofPL54 14F2  
                     __end_ofPL46 07A6                       __end_ofPL38 14E8  
                     __end_ofPL80 07B4                       __end_ofPL72 1A9C  
                     __end_ofPL64 0A54                       __end_ofPL56 112A  
                     __end_ofPL48 178E                       __end_ofPL82 07BA  
                     __end_ofPL74 1712                       __end_ofPL66 1798  
                     __end_ofPL58 19B4                       __end_ofPL84 07C2  
                     __end_ofPL76 07AE                       __end_ofPL68 180E  
                     __end_ofPL78 0CD6               start_initialization 1622  
                       _TiGetTics 1924            __end_of_GLCDMostraMenu 1B34  
                      ?_HNouSegon 004B                  ??_UgetNumUsuaris 0050  
                UmotorUsers@state 0031                 __size_of_LcGotoXY 0034  
            __end_of_UgetUserName 1A88                __end_of_TiGetTimer 18C8  
                   JJuguem@usuari 0050                 __size_of_LcLliure 000C  
               __size_of_LcScroll 0006                     _JoystickMotor 112A  
               __size_of_JendGame 0004                      ?_TiResetTics 004B  
                      ?_CantaData 004B              _UcheckExistsGetError 1C02  
         __end_of_SIONovaDireccio 1B7A              __size_of_LcNewString 000C  
                        ??_SMSoff 0050                          ??_LcInit 005B  
                       _NovaTecla 006C                 __size_of_TeTeclat 0116  
      __size_of_getArrayShowUsers 001C                          ??_TeInit 0051  
                    ?__TiRSITimer 004B                     ??_initAltaveu 0051  
                        ??_Espera 0059                         _UgetScore 1ADE  
              __end_of_JnovaTecla 1B82                        ?_LcPutChar 004B  
                       _UenviaPas 1AAE                 __size_of_UgetTop5 000C  
                  motorHora@state 001E                      _menuDaltGLCD 002B  
                    ??_UenviaChar 0051                         _UnewScore 1B58  
                      ?_NoFerMenu 004B                       ??_GLCDMotor 005F  
                      ?_URegister 004B                        ?_HnoJugant 004B  
               ??_checkHoraAcabat 0050                     ??_init_eusart 0050  
                      ?_SiFerMenu 004B                       __pbssCOMRAM 0001  
           __size_of_CToAHaAcabat 0004                     __pcstackBANK0 00AA  
                      ?_TiGetTics 0050                   ?_GLCDMostraMenu 004B  
                        ?_HJugant 004B                    ?_JoystickMotor 004B  
                 ??_MsetNovaTecla 0050              __end_of_motorAltaveu 13DA  
                        ?_JJuguem 004B                          ?_LcClear 004B  
                        ?_CantaIR 004B        __size_of_conversorJoystick 0024  
              _calculateShowUsers 1BFA                    _CantaPartBaixa 14F2  
        ??_SIOHaAcabatPuntuacions 0050             ?_UcheckExistsGetError 004B  
               __size_of_high_rsi 002A                      ?_WaitForBusy 004B  
             __size_of_init_ports 001E                MsetNovaTecla@tecla 0050  
              SsetNovaTecla@tecla 0050                __end_of_UenviaChar 1ACE  
         __size_of_CToAConverteix 000C                 __size_of_initHora 0008  
           __size_of_UcheckExists 0004               ?_calculateShowUsers 004B  
                      ?_UgetScore 004B                       ??_CToAReset 0050  
                       __pintcode 0008                     __pmediumconst 1CBE  
                        ?___lbdiv 0050                     ??_playAltaveu 0050  
                      ?_UenviaPas 0050                 __size_of_motorSIO 01D2  
               __size_of_motorJoc 00A2                   CantaPartBaixa@c 0051  
                    _CToAHaAcabat 1C22               __end_of_initAltaveu 1BB2  
                      ?_UnewScore 004B                          ?_initSIO 004B  
                       _convertir 0061                     ??_CToAobtenir 0052  
                  __size_of_LcLCD 0036                    __size_of_SMSon 0002  
            ??_calculateShowUsers 0050  __size_of_UcheckExistsNotFinished 000C  
                  __size_of_Minit 0008              __end_of_SIONovaTecla 1B72  
                  __size_of_Sinit 0004                       ??_HNouSegon 0050  
                  __size_of_Uinit 00F8                       _direccioSIO 0063  
                     _direccioJoc 001D            __end_of_CantaPartBaixa 154E  
              JoystickMotor@state 0021                          _GLCDInit 1BD2  
                     _do_register 03BD               __end_of_init_eusart 1A5E  
                       _newString 03B8                      _UcheckExists 1C06  
                       _loginText 1D67                         _jugantSIO 03B1  
        __size_of_HActualitzaHora 0034                         _jugantJoc 03B2  
                    UgetTop5@quin 0050                       ??_CantaData 0052  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                 ?_llegirCharEEPROM 004B  
                   ?_MNouJoystick 004B                  ?_SIONovaDireccio 004B  
            __end_of_SIOStartGame 1B6A                     UenviaChar@pos 0050  
              _escriureCharEEPROM 18FE                ??_llegirCharEEPROM 0050  
                   motorSIO@state 0019                          _PIR1bits 000F9E  
                     ??_LcPutChar 005E                         _timerGLCD 002C  
                       _motorHora 13F2                          _RCONbits 000FD0  
                       _reproduir 03BA                          _HGetTime 1BEE  
           __size_of_JoystickInit 0012                         _timerHora 0020  
                       _timerMenu 003C               ?_escriureCharEEPROM 0050  
                     ??_NoFerMenu 0050                        _ADCON0bits 000FC2  
                     ??_URegister 0050                       ??_HnoJugant 0050  
                     ??_SiFerMenu 0050             __size_of_UgetUserName 0014  
             __end_of_playAltaveu 1BFA            __size_of_SsetNovaTecla 0002  
                        Espera@ms 0057                          _LcGotoXY 1876  
                  _usuariLoguejat 0069                          _LcLliure 1B4C  
                     ??_TiGetTics 0052           __size_of_compareStrings 002A  
             llegirCharEEPROM@pos 0050              __size_of_TiInitTimer 0028  
                        _LcScroll 1BE0                   ??_JoystickMotor 0051  
                   GLCDMotor@max1 0068                     GLCDMotor@max2 0067  
                   GLCDMotor@min1 0028                     GLCDMotor@min2 0027  
                    _teclaPremuda 1D50                          _JendGame 1C1A  
                       _usuariJoc 0066                       LcGotoXY@Row 0058  
                       copy_data0 1636              ??_escriureCharEEPROM 0051  
                 ?_CantaPartBaixa 004B               __end_of_CToAobtenir 1C22  
                __size_of_HJugant 0006            ??_UcheckExistsGetError 0050  
           escriureCharEEPROM@pos 0050                  __size_of_JJuguem 0008  
                __size_of_LcClear 0018                  __size_of_CantaIR 001C  
                        _TeTeclat 0EBE             __end_of_JnovaDireccio 1B8A  
                  ??_MNouJoystick 0050                    _do_updateScore 03BB  
 __size_of_SIOHaAcabatPuntuacions 0004                      ?_UmotorUsers 004B  
                    _JoystickInit 1A9C                        _EECON1bits 000FA6  
                    _registerText 1D5C                       _indexUsuari 003A  
         __size_of_SIOcheckKrebut 000C              __size_of_TiResetTics 0010  
                   motorJoc@state 001C                          __Hrparam 0000  
                     _initAltaveu 1BAA                       ??_UgetScore 0050  
                        _UgetTop5 1A88                         menu@state 0038  
                        __Lrparam 0000                        ?_motorHora 004B  
            __size_of__TiRSITimer 003E                      _UgetUserName 1A74  
                     ??_UenviaPas 0051                  __size_of___lbdiv 0034  
                    _novaDireccio 006A                       ??_UnewScore 0050  
                    ??_init_ports 0050               HActualitzaHora@nova 0050  
      __end_of_UshowUsersCalculat 1B1C                       _init_eusart 1A48  
                __size_of_initSIO 0008             __size_of_motorAltaveu 007A  
                    _novaTeclaJOC 0065                      _novaTeclaSIO 0062  
                 _do_check_exists 03BE                          __ptext10 1BEA  
                        __ptext11 1AF8                _EscriuPrimeraOrdre 1476  
                        __ptext20 1B04                          __ptext12 1BDA  
                        __ptext21 1BFA                          __ptext13 1BEE  
                        __ptext30 1C02                          __ptext22 1B10  
                        __ptext14 1BF2                          __ptext31 1C06  
                        __ptext23 1A74                          __ptext15 13F2  
                        __ptext40 1B82                          __ptext32 1C0A  
                        __ptext24 1A88                          __ptext16 1BF6  
                        __ptext41 1C1A                          __ptext33 1C0E  
                        __ptext25 1ADE                          __ptext17 1360  
                        __ptext50 1A48                          __ptext42 1B8A  
                        __ptext34 1C2A                          __ptext26 1BFE  
                        __ptext18 0036                          __ptext51 1B9A  
                        __ptext43 180E                          __ptext35 1C2C  
                        __ptext27 1AAE                          __ptext19 19F4  
                        __ptext60 18D6                          __ptext52 1BA2  
                        __ptext44 1B28                          __ptext36 1C12  
                        __ptext28 1ABE                          __ptext61 0EBE  
                        __ptext53 1BAA                          __ptext45 1C1E  
                        __ptext37 1C16                          __ptext29 1B1C  
                        __ptext70 112A                          __ptext62 1C2E  
                        __ptext54 0A54                          __ptext46 1C22  
                        __ptext38 1BE0                          __ptext71 1BCA  
                        __ptext63 1BB2                          __ptext55 175A  
                        __ptext47 1B34                          __ptext39 1B7A  
                        __ptext80 1798                          __ptext72 1A9C  
                        __ptext64 1BBA                          __ptext56 100C  
                        __ptext48 1B92                          __ptext81 1A10  
                        __ptext73 07C2                          __ptext65 1C26  
                        __ptext57 1ACE                          __ptext49 19D6  
                        __ptext82 14F2                          __ptext74 16CA  
                        __ptext66 1BC2                          __ptext58 18FE  
                        __ptext91 1712                          __ptext83 1558  
                        __ptext75 17D6                          __ptext67 167A  
                        __ptext59 1842                          __ptext84 19B4  
                        __ptext76 1B40                          __ptext68 1200  
                        __ptext85 1A2C                          __ptext77 1B4C  
                        __ptext69 1476                          __ptext86 1924  
                        __ptext78 1992                          __ptext87 1BD2  
                        __ptext79 1876                          __ptext88 18AA  
                        __ptext89 196E                    CantaPartAlta@c 0051  
                        _high_rsi 0008                          _copsNota 002E  
                        _s_Timers 0080                     __size_of_CtoA 0024  
                        _initHora 1BA2                          _menuDalt 003B  
                        _menuList 1CBF               ?_EscriuPrimeraOrdre 004B  
                   __size_of_main 0064                     __size_of_menu 074A  
           __end_of_CantaPartAlta 15B4                    _CToAConverteix 1B34  
                   CantaData@Data 0052                          _tiTeclat 0042  
              __end_of_init_ports 19F4                     _SsetNovaTecla 1C2E  
            __size_of_WaitForBusy 003E                          _nouSegon 03B4  
                        _scoreUsr 0032                          _motorSIO 0CD6  
               ??_HActualitzaHora 0051                          _motorJoc 12BE  
                 _checkHoraAcabat 1B04                          _timerSIO 001B  
                        isa$xinst 000000                          int$flags 0079  
                    UenviaPas@pos 0050                       _playAltaveu 1BF6  
                    _motorAltaveu 1360           __size_of_HClearNouSegon 0004  
          _SIOHaAcabatPuntuacions 1C12              ??_EscriuPrimeraOrdre 0050  
                      LcInit@rows 005B                  ??_GLCDMostraMenu 0050  
           __size_of_SIONovaTecla 0008           _UcheckExistsNotFinished 1B1C  
                      _INTCONbits 000FF2                       _CToAobtenir 1C1E  
           __size_of_SIOStartGame 0008                     ??_LcNewString 0055  
                        intlevel2 0000                      _timerAltaveu 002F  
                  _arrayShowUsers 000B            __end_of_CToAConverteix 1B40  
                      LcPutChar@c 005E                    ?_SsetNovaTecla 004B  
                 compareStrings@a 0050                   compareStrings@b 0051  
                     ??_motorHora 0057                      _SIONovaTecla 1B6A  
                     _tempsAcabat 03B3                       GLCDMotor@k1 0026  
                     GLCDMotor@k2 0025              __end_of_MNouJoystick 1BD2  
                    _SIOStartGame 1B62                    _compareStrings 175A  
                     _tmpPassword 0098                   ?_CToAConverteix 004B  
           __end_of_MsetNovaTecla 1BBA           __end_of_checkHoraAcabat 1B10  
                     _tmpUsername 00A1                    _SIOcheckKrebut 1AEC  
         __size_of_UgetNumUsuaris 0004               __end_of_LcNewString 1B4C  
            __size_of_UmotorUsers 0230                        _SIOendGame 1BE6  
