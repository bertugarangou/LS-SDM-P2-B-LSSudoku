

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri May 06 12:57:25 2022

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   110                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   111                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   112                           	psect	pa_nodes0,global,class=CODE,delta=1
   113  0000                     
   114                           ; Version 2.32
   115                           ; Generated 02/02/2021 GMT
   116                           ; 
   117                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution. Publication is not required when
   131                           ;        this file is used in an embedded application.
   132                           ; 
   133                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   134                           ;        software without specific prior written permission.
   135                           ; 
   136                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   137                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   138                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   139                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   140                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   141                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   142                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   143                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   144                           ; 
   145                           ; 
   146                           ; Code-generator required, PIC18F4321 Definitions
   147                           ; 
   148                           ; SFR Addresses
   149  0000                     
   150                           	psect	idataCOMRAM
   151  001B76                     __pidataCOMRAM:
   152                           	callstack 0
   153                           
   154                           ;initializer for _arrayZero
   155  001B76  30                 	db	48
   156  001B77  20                 	db	32
   157  001B78  00                 	db	0
   158                           
   159                           ;initializer for _convertir
   160  001B79  FA                 	db	250
   161                           
   162                           ;initializer for _novaTeclaSIO
   163  001B7A  FF                 	db	255
   164                           
   165                           ;initializer for _direccioSIO
   166  001B7B  FF                 	db	255
   167                           
   168                           ;initializer for _usuariActualSIO
   169  001B7C  FF                 	db	255
   170                           
   171                           ;initializer for _novaTeclaJOC
   172  001B7D  FF                 	db	255
   173                           
   174                           ;initializer for _usuariJoc
   175  001B7E  FF                 	db	255
   176                           
   177                           ;initializer for GLCDMotor@max2
   178  001B7F  0F                 	db	15
   179                           
   180                           ;initializer for GLCDMotor@max1
   181  001B80  0F                 	db	15
   182                           
   183                           ;initializer for _usuariLoguejat
   184  001B81  FF                 	db	255
   185                           
   186                           ;initializer for _novaDireccio
   187  001B82  FF                 	db	255
   188                           
   189                           ;initializer for _novaLletra
   190  001B83  FF                 	db	255
   191                           
   192                           ;initializer for _NovaTecla
   193  001B84  FF                 	db	255
   194                           
   195                           ;initializer for _ultimaTecla
   196  001B85  FF                 	db	255
   197                           
   198                           ;initializer for _timerSMS
   199  001B86  FF                 	db	255
   200                           
   201                           ;initializer for _novaTecla
   202  001B87  FF                 	db	255
   203                           
   204                           ;initializer for _lletraASCII
   205  001B88  FF                 	db	255
   206                           
   207                           ;initializer for _hora
   208  001B89  33                 	db	51
   209  001B8A  30                 	db	48
   210  001B8B  3A                 	db	58
   211  001B8C  30                 	db	48
   212  001B8D  30                 	db	48
   213  001B8E  00                 	db	0
   214                           
   215                           ;initializer for _stringScore
   216  001B8F  30                 	db	48
   217  001B90  30                 	db	48
   218  001B91  00                 	db	0
   219                           
   220                           	psect	idataBANK0
   221  001BFC                     __pidataBANK0:
   222                           	callstack 0
   223                           
   224                           ;initializer for _lletraInici
   225  001BFC  41                 	db	65
   226  001BFD  44                 	db	68
   227  001BFE  47                 	db	71
   228  001BFF  4A                 	db	74
   229  001C00  4D                 	db	77
   230  001C01  50                 	db	80
   231  001C02  54                 	db	84
   232  001C03  57                 	db	87
   233  001C04  00                 	db	0
   234                           
   235                           ;initializer for _teclaPremuda
   236  001C05  01                 	db	1
   237  001C06  02                 	db	2
   238  001C07  03                 	db	3
   239  001C08  04                 	db	4
   240  001C09  05                 	db	5
   241  001C0A  06                 	db	6
   242  001C0B  07                 	db	7
   243  001C0C  08                 	db	8
   244  001C0D  09                 	db	9
   245  001C0E  0A                 	db	10
   246  001C0F  00                 	db	0
   247  001C10  0B                 	db	11
   248                           
   249                           	psect	smallconst
   250  000200                     __psmallconst:
   251                           	callstack 0
   252  000200  00                 	db	0
   253  000201                     _menuList:
   254                           	callstack 0
   255  000201  31                 	db	49
   256  000202  2E                 	db	46
   257  000203  50                 	db	80
   258  000204  6C                 	db	108
   259  000205  61                 	db	97
   260  000206  79                 	db	121
   261  000207  20                 	db	32
   262  000208  61                 	db	97
   263  000209  20                 	db	32
   264  00020A  47                 	db	71
   265  00020B  61                 	db	97
   266  00020C  6D                 	db	109
   267  00020D  65                 	db	101
   268  00020E  00                 	db	0
   269  00020F  00                 	db	0
   270  000210  00                 	db	0
   271  000211  00                 	db	0
   272  000212  00                 	db	0
   273  000213  00                 	db	0
   274  000214  00                 	db	0
   275  000215  00                 	db	0
   276  000216  00                 	db	0
   277  000217  00                 	db	0
   278  000218  00                 	db	0
   279  000219  00                 	db	0
   280  00021A  00                 	db	0
   281  00021B  00                 	db	0
   282  00021C  00                 	db	0
   283  00021D  00                 	db	0
   284  00021E  32                 	db	50
   285  00021F  2E                 	db	46
   286  000220  4D                 	db	77
   287  000221  6F                 	db	111
   288  000222  64                 	db	100
   289  000223  69                 	db	105
   290  000224  66                 	db	102
   291  000225  79                 	db	121
   292  000226  20                 	db	32
   293  000227  54                 	db	84
   294  000228  69                 	db	105
   295  000229  6D                 	db	109
   296  00022A  65                 	db	101
   297  00022B  00                 	db	0
   298  00022C  00                 	db	0
   299  00022D  00                 	db	0
   300  00022E  00                 	db	0
   301  00022F  00                 	db	0
   302  000230  00                 	db	0
   303  000231  00                 	db	0
   304  000232  00                 	db	0
   305  000233  00                 	db	0
   306  000234  00                 	db	0
   307  000235  00                 	db	0
   308  000236  00                 	db	0
   309  000237  00                 	db	0
   310  000238  00                 	db	0
   311  000239  00                 	db	0
   312  00023A  00                 	db	0
   313  00023B  33                 	db	51
   314  00023C  2E                 	db	46
   315  00023D  53                 	db	83
   316  00023E  68                 	db	104
   317  00023F  6F                 	db	111
   318  000240  77                 	db	119
   319  000241  20                 	db	32
   320  000242  47                 	db	71
   321  000243  65                 	db	101
   322  000244  6E                 	db	110
   323  000245  65                 	db	101
   324  000246  72                 	db	114
   325  000247  61                 	db	97
   326  000248  6C                 	db	108
   327  000249  20                 	db	32
   328  00024A  54                 	db	84
   329  00024B  6F                 	db	111
   330  00024C  70                 	db	112
   331  00024D  20                 	db	32
   332  00024E  35                 	db	53
   333  00024F  20                 	db	32
   334  000250  53                 	db	83
   335  000251  63                 	db	99
   336  000252  6F                 	db	111
   337  000253  72                 	db	114
   338  000254  65                 	db	101
   339  000255  73                 	db	115
   340  000256  20                 	db	32
   341  000257  00                 	db	0
   342  000258  34                 	db	52
   343  000259  2E                 	db	46
   344  00025A  4C                 	db	76
   345  00025B  6F                 	db	111
   346  00025C  67                 	db	103
   347  00025D  6F                 	db	111
   348  00025E  75                 	db	117
   349  00025F  74                 	db	116
   350  000260  00                 	db	0
   351  000261  00                 	db	0
   352  000262  00                 	db	0
   353  000263  00                 	db	0
   354  000264  00                 	db	0
   355  000265  00                 	db	0
   356  000266  00                 	db	0
   357  000267  00                 	db	0
   358  000268  00                 	db	0
   359  000269  00                 	db	0
   360  00026A  00                 	db	0
   361  00026B  00                 	db	0
   362  00026C  00                 	db	0
   363  00026D  00                 	db	0
   364  00026E  00                 	db	0
   365  00026F  00                 	db	0
   366  000270  00                 	db	0
   367  000271  00                 	db	0
   368  000272  00                 	db	0
   369  000273  00                 	db	0
   370  000274  00                 	db	0
   371  000275  35                 	db	53
   372  000276  2E                 	db	46
   373  000277  53                 	db	83
   374  000278  68                 	db	104
   375  000279  6F                 	db	111
   376  00027A  77                 	db	119
   377  00027B  20                 	db	32
   378  00027C  41                 	db	65
   379  00027D  6C                 	db	108
   380  00027E  6C                 	db	108
   381  00027F  20                 	db	32
   382  000280  55                 	db	85
   383  000281  73                 	db	115
   384  000282  65                 	db	101
   385  000283  72                 	db	114
   386  000284  73                 	db	115
   387  000285  00                 	db	0
   388  000286  00                 	db	0
   389  000287  00                 	db	0
   390  000288  00                 	db	0
   391  000289  00                 	db	0
   392  00028A  00                 	db	0
   393  00028B  00                 	db	0
   394  00028C  00                 	db	0
   395  00028D  00                 	db	0
   396  00028E  00                 	db	0
   397  00028F  00                 	db	0
   398  000290  00                 	db	0
   399  000291  00                 	db	0
   400  000292                     __end_of_menuList:
   401                           	callstack 0
   402  0000                     _PIR1bits	set	3998
   403  0000                     _RCREG	set	4014
   404  0000                     _TXREG	set	4013
   405  0000                     _TXSTAbits	set	4012
   406  0000                     _ADCON0bits	set	4034
   407  0000                     _ADRESH	set	4036
   408  0000                     _ADCON2	set	4032
   409  0000                     _ADCON1	set	4033
   410  0000                     _ADCON0	set	4034
   411  0000                     _EECON2	set	4007
   412  0000                     _EEDATA	set	4008
   413  0000                     _EEADR	set	4009
   414  0000                     _T0CONbits	set	4053
   415  0000                     _TMR0L	set	4054
   416  0000                     _TMR0H	set	4055
   417  0000                     _T0CON	set	4053
   418  0000                     _INTCONbits	set	4082
   419  0000                     _RCONbits	set	4048
   420  0000                     _PORTDbits	set	3971
   421  0000                     _SPBRG	set	4015
   422  0000                     _SPBRGH	set	4016
   423  0000                     _BAUDCON	set	4024
   424  0000                     _RCSTA	set	4011
   425  0000                     _TXSTA	set	4012
   426  0000                     _EECON1bits	set	4006
   427  0000                     _LATD	set	3980
   428  0000                     _TRISD	set	3989
   429  0000                     _TRISC	set	3988
   430  0000                     _LATBbits	set	3978
   431  0000                     _TRISB	set	3987
   432  0000                     _TRISA	set	3986
   433  0000                     _PORTCbits	set	3970
   434  0000                     _LATDbits	set	3980
   435  0000                     _LATCbits	set	3979
   436  0000                     _TRISDbits	set	3989
   437  0000                     _TRISCbits	set	3988
   438  000292                     STR_7:
   439  000292  54                 	db	84	;'T'
   440  000293  49                 	db	73	;'I'
   441  000294  4D                 	db	77	;'M'
   442  000295  45                 	db	69	;'E'
   443  000296  20                 	db	32
   444  000297  52                 	db	82	;'R'
   445  000298  45                 	db	69	;'E'
   446  000299  4D                 	db	77	;'M'
   447  00029A  41                 	db	65	;'A'
   448  00029B  49                 	db	73	;'I'
   449  00029C  4E                 	db	78	;'N'
   450  00029D  49                 	db	73	;'I'
   451  00029E  4E                 	db	78	;'N'
   452  00029F  47                 	db	71	;'G'
   453  0002A0  3A                 	db	58	;':'
   454  0002A1  00                 	db	0
   455  0002A2                     STR_6:
   456  0002A2  4D                 	db	77	;'M'
   457  0002A3  6F                 	db	111	;'o'
   458  0002A4  64                 	db	100	;'d'
   459  0002A5  69                 	db	105	;'i'
   460  0002A6  66                 	db	102	;'f'
   461  0002A7  79                 	db	121	;'y'
   462  0002A8  20                 	db	32
   463  0002A9  54                 	db	84	;'T'
   464  0002AA  69                 	db	105	;'i'
   465  0002AB  6D                 	db	109	;'m'
   466  0002AC  65                 	db	101	;'e'
   467  0002AD  3A                 	db	58	;':'
   468  0002AE  00                 	db	0
   469  0002AF                     STR_9:
   470  0002AF  54                 	db	84	;'T'
   471  0002B0  49                 	db	73	;'I'
   472  0002B1  4D                 	db	77	;'M'
   473  0002B2  45                 	db	69	;'E'
   474  0002B3  20                 	db	32
   475  0002B4  4C                 	db	76	;'L'
   476  0002B5  45                 	db	69	;'E'
   477  0002B6  46                 	db	70	;'F'
   478  0002B7  54                 	db	84	;'T'
   479  0002B8  3A                 	db	58	;':'
   480  0002B9  20                 	db	32
   481  0002BA  00                 	db	0
   482  0002BB                     STR_2:
   483  0002BB  32                 	db	50	;'2'
   484  0002BC  2E                 	db	46
   485  0002BD  52                 	db	82	;'R'
   486  0002BE  45                 	db	69	;'E'
   487  0002BF  47                 	db	71	;'G'
   488  0002C0  49                 	db	73	;'I'
   489  0002C1  53                 	db	83	;'S'
   490  0002C2  54                 	db	84	;'T'
   491  0002C3  45                 	db	69	;'E'
   492  0002C4  52                 	db	82	;'R'
   493  0002C5  00                 	db	0
   494  0002C6                     STR_5:
   495  0002C6  42                 	db	66	;'B'
   496  0002C7  59                 	db	89	;'Y'
   497  0002C8  45                 	db	69	;'E'
   498  0002C9  20                 	db	32
   499  0002CA  42                 	db	66	;'B'
   500  0002CB  59                 	db	89	;'Y'
   501  0002CC  45                 	db	69	;'E'
   502  0002CD  20                 	db	32
   503  0002CE  00                 	db	0
   504  0002CF                     STR_10:
   505  0002CF  53                 	db	83	;'S'
   506  0002D0  43                 	db	67	;'C'
   507  0002D1  4F                 	db	79	;'O'
   508  0002D2  52                 	db	82	;'R'
   509  0002D3  45                 	db	69	;'E'
   510  0002D4  3A                 	db	58	;':'
   511  0002D5  20                 	db	32
   512  0002D6  00                 	db	0
   513  0002D7                     STR_8:
   514  0002D7  45                 	db	69	;'E'
   515  0002D8  52                 	db	82	;'R'
   516  0002D9  52                 	db	82	;'R'
   517  0002DA  4F                 	db	79	;'O'
   518  0002DB  52                 	db	82	;'R'
   519  0002DC  53                 	db	83	;'S'
   520  0002DD  3A                 	db	58	;':'
   521  0002DE  00                 	db	0
   522  0002DF                     STR_1:
   523  0002DF  31                 	db	49	;'1'
   524  0002E0  2E                 	db	46
   525  0002E1  4C                 	db	76	;'L'
   526  0002E2  4F                 	db	79	;'O'
   527  0002E3  47                 	db	71	;'G'
   528  0002E4  49                 	db	73	;'I'
   529  0002E5  4E                 	db	78	;'N'
   530  0002E6  00                 	db	0
   531  0002E7                     STR_4:
   532  0002E7  50                 	db	80	;'P'
   533  0002E8  53                 	db	83	;'S'
   534  0002E9  57                 	db	87	;'W'
   535  0002EA  44                 	db	68	;'D'
   536  0002EB  3A                 	db	58	;':'
   537  0002EC  20                 	db	32
   538  0002ED  00                 	db	0
   539  0002EE                     STR_3:
   540  0002EE  55                 	db	85	;'U'
   541  0002EF  53                 	db	83	;'S'
   542  0002F0  45                 	db	69	;'E'
   543  0002F1  52                 	db	82	;'R'
   544  0002F2  3A                 	db	58	;':'
   545  0002F3  20                 	db	32
   546  0002F4  00                 	db	0
   547  0002F5  00                 	db	0	; dummy byte at the end
   548  0000                     
   549                           ; #config settings
   550                           
   551                           	psect	cinit
   552  001612                     __pcinit:
   553                           	callstack 0
   554  001612                     start_initialization:
   555                           	callstack 0
   556  001612                     __initialization:
   557                           	callstack 0
   558                           
   559                           ; Initialize objects allocated to BANK0 (21 bytes)
   560                           ; load TBLPTR registers with __pidataBANK0
   561  001612  0EFC               	movlw	low __pidataBANK0
   562  001614  6EF6               	movwf	tblptrl,c
   563  001616  0E1B               	movlw	high __pidataBANK0
   564  001618  6EF7               	movwf	tblptrh,c
   565  00161A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   566  00161C  6EF8               	movwf	tblptru,c
   567  00161E  EE00  F0AA         	lfsr	0,__pdataBANK0
   568  001622  EE10 F015          	lfsr	1,21
   569  001626                     copy_data0:
   570  001626  0009               	tblrd		*+
   571  001628  CFF5 FFEE          	movff	tablat,postinc0
   572  00162C  50E5               	movf	postdec1,w,c
   573  00162E  50E1               	movf	fsr1l,w,c
   574  001630  E1FA               	bnz	copy_data0
   575                           
   576                           ; Initialize objects allocated to COMRAM (28 bytes)
   577                           ; load TBLPTR registers with __pidataCOMRAM
   578  001632  0E76               	movlw	low __pidataCOMRAM
   579  001634  6EF6               	movwf	tblptrl,c
   580  001636  0E1B               	movlw	high __pidataCOMRAM
   581  001638  6EF7               	movwf	tblptrh,c
   582  00163A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   583  00163C  6EF8               	movwf	tblptru,c
   584  00163E  EE00  F042         	lfsr	0,__pdataCOMRAM
   585  001642  EE10 F01C          	lfsr	1,28
   586  001646                     copy_data1:
   587  001646  0009               	tblrd		*+
   588  001648  CFF5 FFEE          	movff	tablat,postinc0
   589  00164C  50E5               	movf	postdec1,w,c
   590  00164E  50E1               	movf	fsr1l,w,c
   591  001650  E1FA               	bnz	copy_data1
   592                           
   593                           ; Clear objects allocated to BANK1 (184 bytes)
   594  001652  EE01  F000         	lfsr	0,__pbssBANK1
   595  001656  0EB8               	movlw	184
   596  001658                     clear_0:
   597  001658  6AEE               	clrf	postinc0,c
   598  00165A  06E8               	decf	wreg,f,c
   599  00165C  E1FD               	bnz	clear_0
   600                           
   601                           ; Clear objects allocated to BANK0 (42 bytes)
   602  00165E  EE00  F080         	lfsr	0,__pbssBANK0
   603  001662  0E2A               	movlw	42
   604  001664                     clear_1:
   605  001664  6AEE               	clrf	postinc0,c
   606  001666  06E8               	decf	wreg,f,c
   607  001668  E1FD               	bnz	clear_1
   608                           
   609                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   610  00166A  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   611  00166C  6A78               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   612  00166E  6A77               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   613                           
   614                           ; Clear objects allocated to COMRAM (65 bytes)
   615  001670  EE00  F001         	lfsr	0,__pbssCOMRAM
   616  001674  0E41               	movlw	65
   617  001676                     clear_2:
   618  001676  6AEE               	clrf	postinc0,c
   619  001678  06E8               	decf	wreg,f,c
   620  00167A  E1FD               	bnz	clear_2
   621  00167C                     end_of_initialization:
   622                           	callstack 0
   623  00167C                     __end_of__initialization:
   624                           	callstack 0
   625  00167C  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   626  00167E  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   627  001680  0E00               	movlw	low (__Lmediumconst shr (0+16))
   628  001682  6EF8               	movwf	tblptru,c
   629  001684  0100               	movlb	0
   630  001686  EF45  F00B         	goto	_main	;jump to C main() function
   631                           
   632                           	psect	bitbssCOMRAM
   633  0003B8                     __pbitbssCOMRAM:
   634                           	callstack 0
   635  0003B8                     _Krebut:
   636                           	callstack 0
   637  0003B8                     	ds	1
   638  0003B9                     _jugantSIO:
   639                           	callstack 0
   640  0003B9                     	ds	1
   641  0003BA                     _jugantJoc:
   642                           	callstack 0
   643  0003BA                     	ds	1
   644  0003BB                     _tempsAcabat:
   645                           	callstack 0
   646  0003BB                     	ds	1
   647  0003BC                     _nouSegon:
   648                           	callstack 0
   649  0003BC                     	ds	1
   650  0003BD                     _jugant:
   651                           	callstack 0
   652  0003BD                     	ds	1
   653  0003BE                     _cap2:
   654                           	callstack 0
   655  0003BE                     	ds	1
   656  0003BF                     _cap1:
   657                           	callstack 0
   658  0003BF                     	ds	1
   659  0003C0                     _newString:
   660                           	callstack 0
   661  0003C0                     	ds	1
   662  0003C1                     _ferMenu:
   663                           	callstack 0
   664  0003C1                     	ds	1
   665  0003C2                     _reproduir:
   666                           	callstack 0
   667  0003C2                     	ds	1
   668  0003C3                     _do_updateScores:
   669                           	callstack 0
   670  0003C3                     	ds	1
   671  0003C4                     _do_showUsers:
   672                           	callstack 0
   673  0003C4                     	ds	1
   674  0003C5                     _do_register:
   675                           	callstack 0
   676  0003C5                     	ds	1
   677  0003C6                     _do_check_exists:
   678                           	callstack 0
   679  0003C6                     	ds	1
   680  0003C7                     _loginNOTRegister:
   681                           	callstack 0
   682  0003C7                     	ds	1
   683  0003C8                     _setSMSon:
   684                           	callstack 0
   685  0003C8                     	ds	1
   686  0003C9                     _nou_s:
   687                           	callstack 0
   688  0003C9                     	ds	1
   689                           
   690                           	psect	bssCOMRAM
   691  000001                     __pbssCOMRAM:
   692                           	callstack 0
   693  000001                     _arrayShowUsers:
   694                           	callstack 0
   695  000001                     	ds	8
   696  000009                     _userPtr:
   697                           	callstack 0
   698  000009                     	ds	2
   699  00000B                     _h_Tics:
   700                           	callstack 0
   701  00000B                     	ds	2
   702  00000D                     _s_ptr:
   703                           	callstack 0
   704  00000D                     	ds	2
   705  00000F                     motorSIO@state:
   706                           	callstack 0
   707  00000F                     	ds	1
   708  000010                     _timerSIO:
   709                           	callstack 0
   710  000010                     	ds	1
   711  000011                     motorJoc@state:
   712                           	callstack 0
   713  000011                     	ds	1
   714  000012                     _direccioJoc:
   715                           	callstack 0
   716  000012                     	ds	1
   717  000013                     motorHora@state:
   718                           	callstack 0
   719  000013                     	ds	1
   720  000014                     _segons:
   721                           	callstack 0
   722  000014                     	ds	1
   723  000015                     _timerHora:
   724                           	callstack 0
   725  000015                     	ds	1
   726  000016                     JoystickMotor@state:
   727                           	callstack 0
   728  000016                     	ds	1
   729  000017                     _ultimaTeclaAD:
   730                           	callstack 0
   731  000017                     	ds	1
   732  000018                     GLCDMotor@length2:
   733                           	callstack 0
   734  000018                     	ds	1
   735  000019                     GLCDMotor@length1:
   736                           	callstack 0
   737  000019                     	ds	1
   738  00001A                     GLCDMotor@k2:
   739                           	callstack 0
   740  00001A                     	ds	1
   741  00001B                     GLCDMotor@k1:
   742                           	callstack 0
   743  00001B                     	ds	1
   744  00001C                     GLCDMotor@min2:
   745                           	callstack 0
   746  00001C                     	ds	1
   747  00001D                     GLCDMotor@min1:
   748                           	callstack 0
   749  00001D                     	ds	1
   750  00001E                     GLCDMotor@j:
   751                           	callstack 0
   752  00001E                     	ds	1
   753  00001F                     GLCDMotor@state:
   754                           	callstack 0
   755  00001F                     	ds	1
   756  000020                     _menuDaltGLCD:
   757                           	callstack 0
   758  000020                     	ds	1
   759  000021                     _timerGLCD:
   760                           	callstack 0
   761  000021                     	ds	1
   762  000022                     motorAltaveu@state:
   763                           	callstack 0
   764  000022                     	ds	1
   765  000023                     _copsNota:
   766                           	callstack 0
   767  000023                     	ds	1
   768  000024                     _timerAltaveu:
   769                           	callstack 0
   770  000024                     	ds	1
   771  000025                     _nota:
   772                           	callstack 0
   773  000025                     	ds	1
   774  000026                     UmotorUsers@state:
   775                           	callstack 0
   776  000026                     	ds	1
   777  000027                     _j:
   778                           	callstack 0
   779  000027                     	ds	1
   780  000028                     _i:
   781                           	callstack 0
   782  000028                     	ds	1
   783  000029                     _indexNextUserStruct:
   784                           	callstack 0
   785  000029                     	ds	1
   786  00002A                     _indexNextUser:
   787                           	callstack 0
   788  00002A                     	ds	1
   789  00002B                     _numUsuaris:
   790                           	callstack 0
   791  00002B                     	ds	1
   792  00002C                     menu@state:
   793                           	callstack 0
   794  00002C                     	ds	1
   795  00002D                     _pos:
   796                           	callstack 0
   797  00002D                     	ds	1
   798  00002E                     _indexUsuari:
   799                           	callstack 0
   800  00002E                     	ds	1
   801  00002F                     _menuDalt:
   802                           	callstack 0
   803  00002F                     	ds	1
   804  000030                     _timerMenu:
   805                           	callstack 0
   806  000030                     	ds	1
   807  000031                     _tmp:
   808                           	callstack 0
   809  000031                     	ds	1
   810  000032                     _counter:
   811                           	callstack 0
   812  000032                     	ds	1
   813  000033                     TeTeclat@files:
   814                           	callstack 0
   815  000033                     	ds	1
   816  000034                     TeTeclat@cols:
   817                           	callstack 0
   818  000034                     	ds	1
   819  000035                     TeTeclat@state:
   820                           	callstack 0
   821  000035                     	ds	1
   822  000036                     _tiTeclat:
   823                           	callstack 0
   824  000036                     	ds	1
   825  000037                     SMotor@state:
   826                           	callstack 0
   827  000037                     	ds	1
   828  000038                     _zeroTecla:
   829                           	callstack 0
   830  000038                     	ds	1
   831  000039                     _sumaPulsacions:
   832                           	callstack 0
   833  000039                     	ds	1
   834  00003A                     _Timer:
   835                           	callstack 0
   836  00003A                     	ds	1
   837  00003B                     _ColumnAct:
   838                           	callstack 0
   839  00003B                     	ds	1
   840  00003C                     _RowAct:
   841                           	callstack 0
   842  00003C                     	ds	1
   843  00003D                     _Rows:
   844                           	callstack 0
   845  00003D                     	ds	1
   846  00003E                     _horaTmp:
   847                           	callstack 0
   848  00003E                     	ds	4
   849                           
   850                           	psect	dataCOMRAM
   851  000042                     __pdataCOMRAM:
   852                           	callstack 0
   853  000042                     _arrayZero:
   854                           	callstack 0
   855  000042                     	ds	3
   856  000045                     _convertir:
   857                           	callstack 0
   858  000045                     	ds	1
   859  000046                     _novaTeclaSIO:
   860                           	callstack 0
   861  000046                     	ds	1
   862  000047                     _direccioSIO:
   863                           	callstack 0
   864  000047                     	ds	1
   865  000048                     _usuariActualSIO:
   866                           	callstack 0
   867  000048                     	ds	1
   868  000049                     _novaTeclaJOC:
   869                           	callstack 0
   870  000049                     	ds	1
   871  00004A                     _usuariJoc:
   872                           	callstack 0
   873  00004A                     	ds	1
   874  00004B                     GLCDMotor@max2:
   875                           	callstack 0
   876  00004B                     	ds	1
   877  00004C                     GLCDMotor@max1:
   878                           	callstack 0
   879  00004C                     	ds	1
   880  00004D                     _usuariLoguejat:
   881                           	callstack 0
   882  00004D                     	ds	1
   883  00004E                     _novaDireccio:
   884                           	callstack 0
   885  00004E                     	ds	1
   886  00004F                     _novaLletra:
   887                           	callstack 0
   888  00004F                     	ds	1
   889  000050                     _NovaTecla:
   890                           	callstack 0
   891  000050                     	ds	1
   892  000051                     _ultimaTecla:
   893                           	callstack 0
   894  000051                     	ds	1
   895  000052                     _timerSMS:
   896                           	callstack 0
   897  000052                     	ds	1
   898  000053                     _novaTecla:
   899                           	callstack 0
   900  000053                     	ds	1
   901  000054                     _lletraASCII:
   902                           	callstack 0
   903  000054                     	ds	1
   904  000055                     _hora:
   905                           	callstack 0
   906  000055                     	ds	6
   907  00005B                     _stringScore:
   908                           	callstack 0
   909  00005B                     	ds	3
   910                           
   911                           	psect	bssBANK0
   912  000080                     __pbssBANK0:
   913                           	callstack 0
   914  000080                     _s_Timers:
   915                           	callstack 0
   916  000080                     	ds	24
   917  000098                     _tmpPassword:
   918                           	callstack 0
   919  000098                     	ds	9
   920  0000A1                     _tmpUsername:
   921                           	callstack 0
   922  0000A1                     	ds	9
   923                           
   924                           	psect	dataBANK0
   925  0000AA                     __pdataBANK0:
   926                           	callstack 0
   927  0000AA                     _lletraInici:
   928                           	callstack 0
   929  0000AA                     	ds	9
   930  0000B3                     _teclaPremuda:
   931                           	callstack 0
   932  0000B3                     	ds	12
   933                           
   934                           	psect	bssBANK1
   935  000100                     __pbssBANK1:
   936                           	callstack 0
   937  000100                     _usuaris:
   938                           	callstack 0
   939  000100                     	ds	184
   940                           
   941                           	psect	cstackCOMRAM
   942  00005E                     __pcstackCOMRAM:
   943                           	callstack 0
   944  00005E                     
   945                           ; 1 bytes @ 0x0
   946  00005E                     	ds	1
   947  00005F                     ??_high_rsi:
   948                           
   949                           ; 1 bytes @ 0x1
   950  00005F                     	ds	4
   951  000063                     ??_EscriuPrimeraOrdre:
   952  000063                     ??_Uinit:
   953  000063                     ??_CantaPartAlta:
   954  000063                     ??_CantaPartBaixa:
   955  000063                     ?_TiGetTics:
   956                           	callstack 0
   957  000063                     ?_UgetUserName:
   958                           	callstack 0
   959  000063                     ?_getArrayShowUsers:
   960                           	callstack 0
   961  000063                     SsetNovaTecla@tecla:
   962                           	callstack 0
   963  000063                     TiResetTics@Handle:
   964                           	callstack 0
   965  000063                     MsetNovaTecla@tecla:
   966                           	callstack 0
   967  000063                     MNovaLletra@lletra:
   968                           	callstack 0
   969  000063                     MNouJoystick@posicio:
   970                           	callstack 0
   971  000063                     UenviaChar@pos:
   972                           	callstack 0
   973  000063                     UenviaPas@pos:
   974                           	callstack 0
   975  000063                     escriureCharEEPROM@pos:
   976                           	callstack 0
   977  000063                     compareStrings@a:
   978                           	callstack 0
   979  000063                     escriureEEPROM@caca:
   980                           	callstack 0
   981  000063                     GLCDMostraMenu@num:
   982                           	callstack 0
   983  000063                     HActualitzaHora@nova:
   984                           	callstack 0
   985  000063                     JJuguem@usuari:
   986                           	callstack 0
   987  000063                     JnovaTecla@tecla:
   988                           	callstack 0
   989  000063                     JnovaDireccio@dir:
   990                           	callstack 0
   991  000063                     conversorJoystick@direc:
   992                           	callstack 0
   993  000063                     SIONovaDireccio@num:
   994                           	callstack 0
   995  000063                     SIOStartGame@usuari:
   996                           	callstack 0
   997  000063                     SIONovaTecla@tecla:
   998                           	callstack 0
   999  000063                     CToAConverteix@numero:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x5
  1003  000063                     	ds	1
  1004  000064                     ??_JoystickMotor:
  1005  000064                     CantaPartAlta@c:
  1006                           	callstack 0
  1007  000064                     CantaPartBaixa@c:
  1008                           	callstack 0
  1009  000064                     EscriuPrimeraOrdre@ordre:
  1010                           	callstack 0
  1011  000064                     UenviaChar@c:
  1012                           	callstack 0
  1013  000064                     UenviaPas@c:
  1014                           	callstack 0
  1015  000064                     escriureCharEEPROM@c:
  1016                           	callstack 0
  1017  000064                     compareStrings@b:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x6
  1021  000064                     	ds	1
  1022  000065                     ??_TiGetTics:
  1023  000065                     CantaIR@IR:
  1024                           	callstack 0
  1025  000065                     CantaData@Data:
  1026                           	callstack 0
  1027  000065                     UgetUserName@quin:
  1028                           	callstack 0
  1029  000065                     getArrayShowUsers@quin:
  1030                           	callstack 0
  1031  000065                     Uinit@i:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x7
  1035  000065                     	ds	1
  1036  000066                     ??_compareStrings:
  1037  000066                     Uinit@j:
  1038                           	callstack 0
  1039  000066                     LcNewString@new_s:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x8
  1043  000066                     	ds	1
  1044  000067                     TiGetTics@Handle:
  1045                           	callstack 0
  1046  000067                     Uinit@j_1167:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x9
  1050  000067                     	ds	1
  1051  000068                     ??_UmotorUsers:
  1052  000068                     TiGetTics@actual:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0xA
  1056  000068                     	ds	2
  1057  00006A                     ??_SMotor:
  1058  00006A                     ??_motorHora:
  1059  00006A                     ??_motorAltaveu:
  1060  00006A                     ??_TeTeclat:
  1061  00006A                     WaitForBusy@Busy:
  1062                           	callstack 0
  1063  00006A                     Espera@ms:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0xC
  1067  00006A                     	ds	1
  1068  00006B                     LcGotoXY@Row:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0xD
  1072  00006B                     	ds	1
  1073  00006C                     ??_Espera:
  1074  00006C                     LcGotoXY@Fisics:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0xE
  1078  00006C                     	ds	1
  1079  00006D                     Espera@Timer:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0xF
  1083  00006D                     	ds	1
  1084  00006E                     LcInit@columns:
  1085                           	callstack 0
  1086  00006E                     _LcGotoXY$336:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x10
  1090  00006E                     	ds	1
  1091  00006F                     LcInit@rows:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x11
  1095  00006F                     	ds	1
  1096  000070                     LcGotoXY@Column:
  1097                           	callstack 0
  1098  000070                     LcInit@i:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x12
  1102  000070                     	ds	1
  1103  000071                     ??_motorJoc:
  1104  000071                     LcPutChar@c:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x13
  1108  000071                     	ds	1
  1109  000072                     ??_motorSIO:
  1110  000072                     ??_menu:
  1111  000072                     ??_GLCDMotor:
  1112  000072                     
  1113                           ; 1 bytes @ 0x14
  1114  000072                     	ds	5
  1115  000077                     
  1116                           ; 1 bytes @ 0x19
  1117 ;;
  1118 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1119 ;;
  1120 ;; *************** function _main *****************
  1121 ;; Defined at:
  1122 ;;		line 77 in file "main.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1
  1136 ;;      Params:         0       0       0
  1137 ;;      Locals:         0       0       0
  1138 ;;      Temps:          0       0       0
  1139 ;;      Totals:         0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels required when called: 7
  1142 ;; This function calls:
  1143 ;;		_CtoA
  1144 ;;		_GLCDInit
  1145 ;;		_GLCDMotor
  1146 ;;		_JoystickInit
  1147 ;;		_JoystickMotor
  1148 ;;		_LcInit
  1149 ;;		_LcLCD
  1150 ;;		_Minit
  1151 ;;		_SMotor
  1152 ;;		_Sinit
  1153 ;;		_TeInit
  1154 ;;		_TeTeclat
  1155 ;;		_TiInitTimer
  1156 ;;		_Uinit
  1157 ;;		_UmotorUsers
  1158 ;;		_escriure2usuarisStruct
  1159 ;;		_escriureEEPROM
  1160 ;;		_initAltaveu
  1161 ;;		_initHora
  1162 ;;		_initSIO
  1163 ;;		_init_eusart
  1164 ;;		_init_ports
  1165 ;;		_menu
  1166 ;;		_motorAltaveu
  1167 ;;		_motorHora
  1168 ;;		_motorJoc
  1169 ;;		_motorSIO
  1170 ;; This function is called by:
  1171 ;;		Startup code after reset
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text0
  1176  00168A                     __ptext0:
  1177                           	callstack 0
  1178  00168A                     _main:
  1179                           	callstack 24
  1180                           
  1181                           ;main.c: 78:     init_ports();
  1182                           
  1183                           ;incstack = 0
  1184  00168A  ECAC  F00D         	call	_init_ports	;wreg free
  1185                           
  1186                           ;main.c: 79:     escriureEEPROM();
  1187  00168E  EC19  F00D         	call	_escriureEEPROM	;wreg free
  1188                           
  1189                           ;main.c: 80:     init_eusart();
  1190  001692  ECF3  F00D         	call	_init_eusart	;wreg free
  1191                           
  1192                           ;main.c: 81:     TiInitTimer();
  1193  001696  EC2D  F00D         	call	_TiInitTimer	;wreg free
  1194                           
  1195                           ;main.c: 82:     TeInit();
  1196  00169A  EC92  F00E         	call	_TeInit	;wreg free
  1197                           
  1198                           ;main.c: 83:     Sinit();
  1199  00169E  EC96  F00E         	call	_Sinit	;wreg free
  1200                           
  1201                           ;main.c: 84:     SMotor();
  1202  0016A2  EC6A  F007         	call	_SMotor	;wreg free
  1203                           
  1204                           ;main.c: 85:     Uinit();
  1205  0016A6  ECF3  F009         	call	_Uinit	;wreg free
  1206                           
  1207                           ;main.c: 86:     initAltaveu();
  1208  0016AA  EC86  F00E         	call	_initAltaveu	;wreg free
  1209                           
  1210                           ;main.c: 87:     GLCDInit();
  1211  0016AE  ECA6  F00E         	call	_GLCDInit	;wreg free
  1212                           
  1213                           ;main.c: 88:     JoystickInit();
  1214  0016B2  EC13  F00E         	call	_JoystickInit	;wreg free
  1215                           
  1216                           ;main.c: 89:     initHora();
  1217  0016B6  EC82  F00E         	call	_initHora	;wreg free
  1218                           
  1219                           ;main.c: 90:     initSIO();
  1220  0016BA  EC7E  F00E         	call	_initSIO	;wreg free
  1221                           
  1222                           ;main.c: 92:     LcInit(2,16);
  1223  0016BE  0E10               	movlw	16
  1224  0016C0  6E6E               	movwf	LcInit@columns^0,c
  1225  0016C2  0E02               	movlw	2
  1226  0016C4  EC40  F009         	call	_LcInit
  1227                           
  1228                           ;main.c: 93:     Minit();
  1229  0016C8  EC9E  F00E         	call	_Minit	;wreg free
  1230                           
  1231                           ;main.c: 95:     escriure2usuarisStruct();
  1232  0016CC  EC95  F00C         	call	_escriure2usuarisStruct	;wreg free
  1233  0016D0                     l5901:
  1234                           
  1235                           ;main.c: 98:         motorJoc();
  1236  0016D0  EC9F  F009         	call	_motorJoc	;wreg free
  1237                           
  1238                           ;main.c: 99:         motorSIO();
  1239  0016D4  ECA4  F005         	call	_motorSIO	;wreg free
  1240                           
  1241                           ;main.c: 100:         motorHora();
  1242  0016D8  EC89  F00A         	call	_motorHora	;wreg free
  1243                           
  1244                           ;main.c: 101:         JoystickMotor();
  1245  0016DC  ECD5  F008         	call	_JoystickMotor	;wreg free
  1246                           
  1247                           ;main.c: 102:         menu();
  1248  0016E0  EC7B  F001         	call	_menu	;wreg free
  1249                           
  1250                           ;main.c: 104:         CtoA();
  1251  0016E4  EC78  F00D         	call	_CtoA	;wreg free
  1252                           
  1253                           ;main.c: 105:         motorAltaveu();
  1254  0016E8  EC3F  F00A         	call	_motorAltaveu	;wreg free
  1255                           
  1256                           ;main.c: 106:         UmotorUsers();
  1257  0016EC  EC90  F006         	call	_UmotorUsers	;wreg free
  1258                           
  1259                           ;main.c: 107:         GLCDMotor();
  1260  0016F0  EC58  F004         	call	_GLCDMotor	;wreg free
  1261                           
  1262                           ;main.c: 108:         TeTeclat();
  1263  0016F4  EC41  F008         	call	_TeTeclat	;wreg free
  1264                           
  1265                           ;main.c: 109:         SMotor();
  1266  0016F8  EC6A  F007         	call	_SMotor	;wreg free
  1267                           
  1268                           ;main.c: 110:         LcLCD();
  1269  0016FC  ECE7  F00B         	call	_LcLCD	;wreg free
  1270  001700  D7E7               	goto	l5901
  1271  001702                     __end_of_main:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _motorSIO *****************
  1275 ;; Defined at:
  1276 ;;		line 42 in file "SIO.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/1
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1
  1290 ;;      Params:         0       0       0
  1291 ;;      Locals:         0       0       0
  1292 ;;      Temps:          2       0       0
  1293 ;;      Totals:         2       0       0
  1294 ;;Total ram usage:        2 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 6
  1297 ;; This function calls:
  1298 ;;		_CToAConverteix
  1299 ;;		_CToAHaAcabat
  1300 ;;		_CToAobtenir
  1301 ;;		_HGetTime
  1302 ;;		_LcClear
  1303 ;;		_LcGotoXY
  1304 ;;		_LcLliure
  1305 ;;		_LcNewString
  1306 ;;		_LcPutChar
  1307 ;;		_TiGetTics
  1308 ;;		_TiResetTics
  1309 ;;		_UgetUserName
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text1
  1316  000B48                     __ptext1:
  1317                           	callstack 0
  1318  000B48                     _motorSIO:
  1319                           	callstack 24
  1320                           
  1321                           ;SIO.c: 43:     static char state = 0;;SIO.c: 45:  switch(state) {
  1322                           
  1323                           ;incstack = 0
  1324  000B48  D0C0               	goto	l4891
  1325  000B4A                     l4775:
  1326                           
  1327                           ;SIO.c: 47:    if (usuariActualSIO > -1) {
  1328  000B4A  BE48               	btfsc	_usuariActualSIO^0,7,c
  1329  000B4C  0012               	return	
  1330                           
  1331                           ;SIO.c: 48:     userPtr = UgetUserName(usuariActualSIO);
  1332  000B4E  5048               	movf	_usuariActualSIO^0,w,c
  1333  000B50  EC09  F00E         	call	_UgetUserName
  1334  000B54  C063  F009         	movff	?_UgetUserName,_userPtr
  1335  000B58  C064  F00A         	movff	?_UgetUserName+1,_userPtr+1
  1336                           
  1337                           ;SIO.c: 49:     jugantSIO = 1;
  1338  000B5C  8277               	bsf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1339                           
  1340                           ;SIO.c: 50:     Krebut = 0;
  1341  000B5E  9077               	bcf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1342                           
  1343                           ;SIO.c: 51:     state = 1;
  1344  000B60  0E01               	movlw	1
  1345  000B62  6E0F               	movwf	motorSIO@state^0,c
  1346  000B64  0C01               	retlw	1
  1347  000B66                     l4785:
  1348                           
  1349                           ;SIO.c: 55:    if (*userPtr == '\0' && TXSTAbits.TRMT) {
  1350  000B66  D8D1               	call	PL24	;call to abstracted procedure
  1351  000B68  E108               	bnz	l4793
  1352  000B6A  A2AC               	btfss	172,1,c	;volatile
  1353  000B6C  D006               	goto	l4793
  1354                           
  1355                           ;SIO.c: 56:     TXREG = '\0';
  1356  000B6E  6AAD               	clrf	173,c	;volatile
  1357                           
  1358                           ;SIO.c: 57:     novaTeclaSIO = 0;
  1359  000B70  6A46               	clrf	_novaTeclaSIO^0,c
  1360                           
  1361                           ;SIO.c: 58:     LATBbits.LATB3 = 1;
  1362  000B72  868A               	bsf	138,3,c	;volatile
  1363                           
  1364                           ;SIO.c: 59:     state = 2;
  1365  000B74  0E02               	movlw	2
  1366  000B76  6E0F               	movwf	motorSIO@state^0,c
  1367                           
  1368                           ;SIO.c: 60:    }
  1369  000B78  0C02               	retlw	2
  1370  000B7A                     l4793:
  1371  000B7A  D8C7               	call	PL24	;call to abstracted procedure
  1372  000B7C  A4D8               	btfss	status,2,c
  1373  000B7E  A2AC               	btfss	172,1,c	;volatile
  1374  000B80  0012               	return	
  1375                           
  1376                           ;SIO.c: 62:     TXREG = *userPtr;
  1377  000B82  D8C3               	call	PL24	;call to abstracted procedure
  1378  000B84  6EAD               	movwf	173,c	;volatile
  1379                           
  1380                           ;SIO.c: 63:     userPtr++;
  1381  000B86  4A09               	infsnz	_userPtr^0,f,c
  1382  000B88  2A0A               	incf	(_userPtr+1)^0,f,c
  1383  000B8A  0012               	return	
  1384  000B8C                     l4801:
  1385                           
  1386                           ;SIO.c: 67:    if (RCREG == 'K') {
  1387  000B8C  0E4B               	movlw	75
  1388  000B8E  18AE               	xorwf	174,w,c
  1389  000B90  A4D8               	btfss	status,2,c
  1390  000B92  0012               	return	
  1391                           
  1392                           ;SIO.c: 68:     Krebut = 1;
  1393  000B94  8077               	bsf	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  1394  000B96                     l4805:
  1395                           
  1396                           ;SIO.c: 69:     state = 3;
  1397  000B96  0E03               	movlw	3
  1398  000B98  6E0F               	movwf	motorSIO@state^0,c
  1399  000B9A  0C03               	retlw	3
  1400  000B9C                     l4807:
  1401                           
  1402                           ;SIO.c: 73:    if (direccioSIO != -1 && TXSTAbits.TRMT) {
  1403  000B9C  2847               	incf	_direccioSIO^0,w,c
  1404  000B9E  E006               	bz	l4815
  1405  000BA0  A2AC               	btfss	172,1,c	;volatile
  1406  000BA2  D004               	goto	l4815
  1407                           
  1408                           ;SIO.c: 74:     TXREG = direccioSIO;
  1409  000BA4  C047  FFAD         	movff	_direccioSIO,4013	;volatile
  1410                           
  1411                           ;SIO.c: 75:     direccioSIO = -1;
  1412  000BA8  6847               	setf	_direccioSIO^0,c
  1413  000BAA  D7F5               	goto	l4805
  1414  000BAC                     l4815:
  1415  000BAC  0E30               	movlw	48
  1416  000BAE  6446               	cpfsgt	_novaTeclaSIO^0,c
  1417  000BB0  D009               	goto	l1235
  1418  000BB2  0E3A               	movlw	58
  1419  000BB4  6046               	cpfslt	_novaTeclaSIO^0,c
  1420  000BB6  D006               	goto	l1235
  1421  000BB8  A2AC               	btfss	172,1,c	;volatile
  1422  000BBA  D004               	goto	l1235
  1423                           
  1424                           ;SIO.c: 79:     TXREG = novaTeclaSIO;
  1425  000BBC  C046  FFAD         	movff	_novaTeclaSIO,4013	;volatile
  1426                           
  1427                           ;SIO.c: 80:     novaTeclaSIO = 0;
  1428  000BC0  6A46               	clrf	_novaTeclaSIO^0,c
  1429  000BC2  D7E9               	goto	l4805
  1430  000BC4                     l1235:
  1431  000BC4  B277               	btfsc	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  1432  000BC6  D002               	goto	u4110
  1433  000BC8  B2AC               	btfsc	172,1,c	;volatile
  1434  000BCA  D002               	goto	u4120
  1435  000BCC                     u4110:
  1436  000BCC  AA9E               	btfss	158,5,c	;volatile
  1437  000BCE  0012               	return	
  1438  000BD0                     u4120:
  1439                           
  1440                           ;SIO.c: 84:     LcClear();
  1441  000BD0  EC8A  F00D         	call	_LcClear	;wreg free
  1442                           
  1443                           ;SIO.c: 85:     LcNewString("ERRORS:");
  1444  000BD4  0ED7               	movlw	low STR_8
  1445  000BD6  EC42  F004         	call	PL6	;call to abstracted procedure
  1446  000BDA  EC56  F00E         	call	_LcNewString	;wreg free
  1447                           
  1448                           ;SIO.c: 86:     TXREG = 'F';
  1449  000BDE  0E46               	movlw	70
  1450  000BE0  6EAD               	movwf	173,c	;volatile
  1451                           
  1452                           ;SIO.c: 87:     novaTeclaSIO = 0;
  1453  000BE2  6A46               	clrf	_novaTeclaSIO^0,c
  1454                           
  1455                           ;SIO.c: 88:     state = 4;
  1456  000BE4  0E04               	movlw	4
  1457  000BE6  6E0F               	movwf	motorSIO@state^0,c
  1458  000BE8  0C04               	retlw	4
  1459  000BEA                     l1242:
  1460                           
  1461                           ;SIO.c: 92:    if (PIR1bits.RCIF) {
  1462  000BEA  AA9E               	btfss	158,5,c	;volatile
  1463  000BEC  0012               	return	
  1464                           
  1465                           ;SIO.c: 93:     CToAConverteix(RCREG);
  1466  000BEE  50AE               	movf	174,w,c	;volatile
  1467  000BF0  EC2C  F00E         	call	_CToAConverteix
  1468                           
  1469                           ;SIO.c: 94:     TiResetTics(timerSIO);
  1470  000BF4  5010               	movf	_timerSIO^0,w,c
  1471  000BF6  ECE5  F00D         	call	_TiResetTics
  1472  000BFA                     l4841:
  1473                           
  1474                           ;SIO.c: 95:     state = 5;
  1475  000BFA  0E05               	movlw	5
  1476  000BFC  6E0F               	movwf	motorSIO@state^0,c
  1477  000BFE  0C05               	retlw	5
  1478  000C00                     l4843:
  1479                           
  1480                           ;SIO.c: 99:    if (TiGetTics(timerSIO) > 2490) {
  1481  000C00  5010               	movf	_timerSIO^0,w,c
  1482  000C02  EC41  F00D         	call	_TiGetTics
  1483  000C06  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  1484  000C08  D00F               	goto	l4851
  1485  000C0A  0EBB               	movlw	187
  1486  000C0C  5C63               	subwf	?_TiGetTics^0,w,c
  1487  000C0E  0E09               	movlw	9
  1488  000C10  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  1489  000C12  E30A               	bnc	l4851
  1490                           
  1491                           ;SIO.c: 100:     LcClear();
  1492  000C14  EC8A  F00D         	call	_LcClear	;wreg free
  1493                           
  1494                           ;SIO.c: 101:     LcNewString("TIME LEFT: ");
  1495  000C18  0EAF               	movlw	low STR_9
  1496  000C1A  EC42  F004         	call	PL6	;call to abstracted procedure
  1497  000C1E  EC56  F00E         	call	_LcNewString	;wreg free
  1498                           
  1499                           ;SIO.c: 102:     state = 7;
  1500  000C22  0E07               	movlw	7
  1501  000C24  6E0F               	movwf	motorSIO@state^0,c
  1502                           
  1503                           ;SIO.c: 103:    }
  1504  000C26  0C07               	retlw	7
  1505  000C28                     l4851:
  1506  000C28  5010               	movf	_timerSIO^0,w,c
  1507  000C2A  EC41  F00D         	call	_TiGetTics
  1508  000C2E  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  1509  000C30  D006               	goto	u4150
  1510  000C32  0EBA               	movlw	186
  1511  000C34  5C63               	subwf	?_TiGetTics^0,w,c
  1512  000C36  0E09               	movlw	9
  1513  000C38  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  1514  000C3A  B0D8               	btfsc	status,0,c
  1515  000C3C  0012               	return	
  1516  000C3E                     u4150:
  1517  000C3E  AA9E               	btfss	158,5,c	;volatile
  1518  000C40  0012               	return	
  1519  000C42  EC5C  F00E         	call	_LcLliure	;wreg free
  1520  000C46  A0D8               	btfss	status,0,c
  1521  000C48  0012               	return	
  1522                           
  1523                           ;SIO.c: 105:     LcGotoXY(0,1);
  1524  000C4A  EC4D  F004         	call	PL34	;call to abstracted procedure
  1525  000C4E  ECE9  F00C         	call	_LcGotoXY
  1526                           
  1527                           ;SIO.c: 106:     LcPutChar(RCREG);
  1528  000C52  50AE               	movf	174,w,c	;volatile
  1529  000C54  EC0F  F00C         	call	_LcPutChar
  1530                           
  1531                           ;SIO.c: 107:     state = 6;
  1532  000C58  0E06               	movlw	6
  1533  000C5A  6E0F               	movwf	motorSIO@state^0,c
  1534  000C5C  0C06               	retlw	6
  1535  000C5E                     l4861:
  1536                           
  1537                           ;SIO.c: 111:    if (LcLliure()) {
  1538  000C5E  EC5C  F00E         	call	_LcLliure	;wreg free
  1539  000C62  A0D8               	btfss	status,0,c
  1540  000C64  0012               	return	
  1541                           
  1542                           ;SIO.c: 112:     LcNewString(HGetTime());
  1543  000C66  ECBE  F00E         	call	_HGetTime	;wreg free
  1544  000C6A  D855               	call	PL46	;call to abstracted procedure
  1545  000C6C  EC56  F00E         	call	_LcNewString	;wreg free
  1546                           
  1547                           ;SIO.c: 113:     state = 8;
  1548  000C70  0E08               	movlw	8
  1549  000C72  6E0F               	movwf	motorSIO@state^0,c
  1550  000C74  0C08               	retlw	8
  1551  000C76                     l1250:
  1552                           
  1553                           ;SIO.c: 117:    if (PIR1bits.RCIF) {
  1554  000C76  AA9E               	btfss	158,5,c	;volatile
  1555  000C78  0012               	return	
  1556                           
  1557                           ;SIO.c: 118:     LcPutChar(RCREG);
  1558  000C7A  50AE               	movf	174,w,c	;volatile
  1559  000C7C  EC0F  F00C         	call	_LcPutChar
  1560                           
  1561                           ;SIO.c: 119:                 TiResetTics(timerSIO);
  1562  000C80  5010               	movf	_timerSIO^0,w,c
  1563  000C82  ECE5  F00D         	call	_TiResetTics
  1564  000C86  D7B9               	goto	l4841
  1565  000C88                     l4871:
  1566                           
  1567                           ;SIO.c: 124:    if (LcLliure()) {
  1568  000C88  EC5C  F00E         	call	_LcLliure	;wreg free
  1569  000C8C  A0D8               	btfss	status,0,c
  1570  000C8E  0012               	return	
  1571                           
  1572                           ;SIO.c: 125:     LcGotoXY(0,1);
  1573  000C90  EC4D  F004         	call	PL34	;call to abstracted procedure
  1574  000C94  ECE9  F00C         	call	_LcGotoXY
  1575                           
  1576                           ;SIO.c: 126:     LcNewString("SCORE: ");
  1577  000C98  0ECF               	movlw	low STR_10
  1578  000C9A  EC42  F004         	call	PL6	;call to abstracted procedure
  1579  000C9E  EC56  F00E         	call	_LcNewString	;wreg free
  1580                           
  1581                           ;SIO.c: 127:     state = 9;
  1582  000CA2  0E09               	movlw	9
  1583  000CA4  6E0F               	movwf	motorSIO@state^0,c
  1584  000CA6  0C09               	retlw	9
  1585  000CA8                     l4879:
  1586                           
  1587                           ;SIO.c: 131:    if (LcLliure() && CToAHaAcabat() == 250) {
  1588  000CA8  EC5C  F00E         	call	_LcLliure	;wreg free
  1589  000CAC  A0D8               	btfss	status,0,c
  1590  000CAE  0012               	return	
  1591  000CB0  ECB8  F00E         	call	_CToAHaAcabat	;wreg free
  1592  000CB4  0AFA               	xorlw	250
  1593  000CB6  A4D8               	btfss	status,2,c
  1594  000CB8  0012               	return	
  1595                           
  1596                           ;SIO.c: 132:     LcNewString(CToAobtenir());
  1597  000CBA  ECB6  F00E         	call	_CToAobtenir	;wreg free
  1598  000CBE  D82B               	call	PL46	;call to abstracted procedure
  1599  000CC0  EC56  F00E         	call	_LcNewString	;wreg free
  1600                           
  1601                           ;SIO.c: 133:     usuariActualSIO = -1;
  1602  000CC4  6848               	setf	_usuariActualSIO^0,c
  1603                           
  1604                           ;SIO.c: 134:     state = 0;
  1605  000CC6  6A0F               	clrf	motorSIO@state^0,c
  1606  000CC8  0012               	return	
  1607  000CCA                     l4891:
  1608  000CCA  500F               	movf	motorSIO@state^0,w,c
  1609  000CCC  6E72               	movwf	??_motorSIO^0,c
  1610  000CCE  6A73               	clrf	(??_motorSIO+1)^0,c
  1611                           
  1612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1613                           ; Switch size 1, requested type "space"
  1614                           ; Number of cases is 1, Range of values is 0 to 0
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte            4     3 (average)
  1618                           ;	Chosen strategy is simple_byte
  1619  000CD0  5073               	movf	(??_motorSIO+1)^0,w,c
  1620  000CD2  A4D8               	btfss	status,2,c
  1621  000CD4  0012               	return	
  1622                           
  1623                           ; Switch size 1, requested type "space"
  1624                           ; Number of cases is 10, Range of values is 0 to 9
  1625                           ; switch strategies available:
  1626                           ; Name         Instructions Cycles
  1627                           ; simple_byte           31    16 (average)
  1628                           ;	Chosen strategy is simple_byte
  1629  000CD6  5072               	movf	??_motorSIO^0,w,c
  1630  000CD8  E101 D737          	bz	l4775
  1631  000CDC  0A01               	xorlw	1	; case 1
  1632  000CDE  E101 D742          	bz	l4785
  1633  000CE2  0A03               	xorlw	3	; case 2
  1634  000CE4  E101 D752          	bz	l4801
  1635  000CE8  0A01               	xorlw	1	; case 3
  1636  000CEA  E101 D757          	bz	l4807
  1637  000CEE  0A07               	xorlw	7	; case 4
  1638  000CF0  E101 D77B          	bz	l1242
  1639  000CF4  0A01               	xorlw	1	; case 5
  1640  000CF6  E084               	bz	l4843
  1641  000CF8  0A03               	xorlw	3	; case 6
  1642  000CFA  E0BD               	bz	l1250
  1643  000CFC  0A01               	xorlw	1	; case 7
  1644  000CFE  E0AF               	bz	l4861
  1645  000D00  0A0F               	xorlw	15	; case 8
  1646  000D02  E0C2               	bz	l4871
  1647  000D04  0A01               	xorlw	1	; case 9
  1648  000D06  E0D0               	bz	l4879
  1649  000D08  0012               	return		;funcret
  1650  000D0A                     __end_of_motorSIO:
  1651                           	callstack 0
  1652  000D0A                     PL24:
  1653                           	callstack 24
  1654  000D0A  C009  FFD9         	movff	_userPtr,fsr2l
  1655  000D0E  C00A  FFDA         	movff	_userPtr+1,fsr2h
  1656  000D12  50DF               	movf	indf2,w,c
  1657  000D14  0012               	return	
  1658  000D16                     __end_ofPL24:
  1659                           	callstack 0
  1660  000D16                     PL46:
  1661                           	callstack 24
  1662  000D16  6E72               	movwf	??_motorSIO^0,c
  1663  000D18  C072  F066         	movff	??_motorSIO,LcNewString@new_s
  1664  000D1C  6A67               	clrf	(LcNewString@new_s+1)^0,c
  1665  000D1E  0012               	return	
  1666  000D20                     __end_ofPL46:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _CToAobtenir *****************
  1670 ;; Defined at:
  1671 ;;		line 7 in file "CtoA.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      PTR unsigned char 
  1678 ;; Registers used:
  1679 ;;		wreg
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/1
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1
  1685 ;;      Params:         2       0       0
  1686 ;;      Locals:         0       0       0
  1687 ;;      Temps:          0       0       0
  1688 ;;      Totals:         2       0       0
  1689 ;;Total ram usage:        2 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 2
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_motorSIO
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text2
  1700  001D6C                     __ptext2:
  1701                           	callstack 0
  1702  001D6C                     _CToAobtenir:
  1703                           	callstack 27
  1704                           
  1705                           ;CtoA.c: 8:     return stringScore;
  1706                           
  1707                           ;incstack = 0
  1708  001D6C  0E5B               	movlw	_stringScore& (0+255)
  1709  001D6E  0012               	return		;funcret
  1710  001D70                     __end_of_CToAobtenir:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _CToAHaAcabat *****************
  1714 ;; Defined at:
  1715 ;;		line 10 in file "CtoA.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      unsigned char 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/1
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1
  1729 ;;      Params:         0       0       0
  1730 ;;      Locals:         0       0       0
  1731 ;;      Temps:          0       0       0
  1732 ;;      Totals:         0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 2
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_motorSIO
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text3
  1744  001D70                     __ptext3:
  1745                           	callstack 0
  1746  001D70                     _CToAHaAcabat:
  1747                           	callstack 27
  1748                           
  1749                           ;CtoA.c: 11:     return convertir;
  1750                           
  1751                           ;incstack = 0
  1752  001D70  5045               	movf	_convertir^0,w,c
  1753  001D72  0012               	return		;funcret
  1754  001D74                     __end_of_CToAHaAcabat:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _CToAConverteix *****************
  1758 ;; Defined at:
  1759 ;;		line 14 in file "CtoA.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  numero          1    wreg     unsigned char 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  numero          1    5[COMRAM] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/1
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1
  1773 ;;      Params:         0       0       0
  1774 ;;      Locals:         1       0       0
  1775 ;;      Temps:          0       0       0
  1776 ;;      Totals:         1       0       0
  1777 ;;Total ram usage:        1 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; Hardware stack levels required when called: 3
  1780 ;; This function calls:
  1781 ;;		_CToAReset
  1782 ;; This function is called by:
  1783 ;;		_motorSIO
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text4
  1788  001C58                     __ptext4:
  1789                           	callstack 0
  1790  001C58                     _CToAConverteix:
  1791                           	callstack 26
  1792                           
  1793                           ;incstack = 0
  1794                           ;CToAConverteix@numero stored from wreg
  1795  001C58  6E63               	movwf	CToAConverteix@numero^0,c
  1796                           
  1797                           ;CtoA.c: 15:     CToAReset();
  1798  001C5A  EC62  F00E         	call	_CToAReset	;wreg free
  1799                           
  1800                           ;CtoA.c: 16:     convertir = numero;
  1801  001C5E  C063  F045         	movff	CToAConverteix@numero,_convertir
  1802  001C62  0012               	return		;funcret
  1803  001C64                     __end_of_CToAConverteix:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function _CToAReset *****************
  1807 ;; Defined at:
  1808 ;;		line 18 in file "CtoA.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/1
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1
  1822 ;;      Params:         0       0       0
  1823 ;;      Locals:         0       0       0
  1824 ;;      Temps:          0       0       0
  1825 ;;      Totals:         0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 2
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_CToAConverteix
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text5
  1837  001CC4                     __ptext5:
  1838                           	callstack 0
  1839  001CC4                     _CToAReset:
  1840                           	callstack 26
  1841                           
  1842                           ;CtoA.c: 19:     stringScore[0] = '0';
  1843                           
  1844                           ;incstack = 0
  1845  001CC4  0E30               	movlw	48
  1846  001CC6  6E5B               	movwf	_stringScore^0,c
  1847                           
  1848                           ;CtoA.c: 20:     stringScore[1] = '0';
  1849  001CC8  6E5C               	movwf	(_stringScore+1)^0,c
  1850  001CCA  0C30               	retlw	48	;funcret
  1851  001CCC                     __end_of_CToAReset:
  1852                           	callstack 0
  1853                           
  1854 ;; *************** function _motorJoc *****************
  1855 ;; Defined at:
  1856 ;;		line 48 in file "Joc.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/1
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1
  1870 ;;      Params:         0       0       0
  1871 ;;      Locals:         0       0       0
  1872 ;;      Temps:          2       0       0
  1873 ;;      Totals:         2       0       0
  1874 ;;Total ram usage:        2 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; Hardware stack levels required when called: 5
  1877 ;; This function calls:
  1878 ;;		_HClearNouSegon
  1879 ;;		_HGetTime
  1880 ;;		_HJugant
  1881 ;;		_HNouSegon
  1882 ;;		_HnoJugant
  1883 ;;		_LcGotoXY
  1884 ;;		_LcLliure
  1885 ;;		_LcNewString
  1886 ;;		_SIONovaDireccio
  1887 ;;		_SIONovaTecla
  1888 ;;		_SIOStartGame
  1889 ;;		_SIOcheckKrebut
  1890 ;;		_SIOendGame
  1891 ;;		_conversorJoystick
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text6
  1898  00133E                     __ptext6:
  1899                           	callstack 0
  1900  00133E                     _motorJoc:
  1901                           	callstack 25
  1902                           
  1903                           ;Joc.c: 49:     static char state = 0;;Joc.c: 51:  switch(state) {
  1904                           
  1905                           ;incstack = 0
  1906  00133E  D046               	goto	l4767
  1907  001340                     l4715:
  1908                           
  1909                           ;Joc.c: 53:    if (usuariJoc != -1) {
  1910  001340  284A               	incf	_usuariJoc^0,w,c
  1911  001342  B4D8               	btfsc	status,2,c
  1912  001344  0012               	return	
  1913                           
  1914                           ;Joc.c: 54:     SIOStartGame(usuariJoc);
  1915  001346  504A               	movf	_usuariJoc^0,w,c
  1916  001348  EC66  F00E         	call	_SIOStartGame
  1917                           
  1918                           ;Joc.c: 55:     jugantJoc = 1;
  1919  00134C  8477               	bsf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1920                           
  1921                           ;Joc.c: 56:     state = 2;
  1922  00134E  0E02               	movlw	2
  1923  001350  6E11               	movwf	motorJoc@state^0,c
  1924                           
  1925                           ;Joc.c: 58:   break;
  1926                           
  1927                           ;Joc.c: 57:    }
  1928  001352  0C02               	retlw	2
  1929  001354                     l1130:
  1930                           
  1931                           ;Joc.c: 60:    if (!jugantJoc) {
  1932  001354  B477               	btfsc	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  1933  001356  D008               	goto	l4731
  1934                           
  1935                           ;Joc.c: 61:     usuariJoc = -1;
  1936  001358  684A               	setf	_usuariJoc^0,c
  1937                           
  1938                           ;Joc.c: 62:     HnoJugant();
  1939  00135A  ECBC  F00E         	call	_HnoJugant	;wreg free
  1940                           
  1941                           ;Joc.c: 63:     SIOendGame();
  1942  00135E  ECBA  F00E         	call	_SIOendGame	;wreg free
  1943                           
  1944                           ;Joc.c: 64:     LATBbits.LATB3 = 0;
  1945  001362  968A               	bcf	138,3,c	;volatile
  1946                           
  1947                           ;Joc.c: 65:     state = 0;
  1948  001364  6A11               	clrf	motorJoc@state^0,c
  1949                           
  1950                           ;Joc.c: 66:    }
  1951  001366  0012               	return	
  1952  001368                     l4731:
  1953  001368  BE12               	btfsc	_direccioJoc^0,7,c
  1954  00136A  D009               	goto	l4739
  1955                           
  1956                           ;Joc.c: 68:     SIONovaDireccio(conversorJoystick(direccioJoc));
  1957  00136C  5012               	movf	_direccioJoc^0,w,c
  1958  00136E  EC54  F00D         	call	_conversorJoystick
  1959  001372  EC6E  F00E         	call	_SIONovaDireccio
  1960                           
  1961                           ;Joc.c: 69:     direccioJoc = -1;
  1962  001376  6812               	setf	_direccioJoc^0,c
  1963  001378                     l4737:
  1964                           
  1965                           ;Joc.c: 70:     state = 1;
  1966  001378  0E01               	movlw	1
  1967  00137A  6E11               	movwf	motorJoc@state^0,c
  1968                           
  1969                           ;Joc.c: 71:    }
  1970  00137C  0C01               	retlw	1
  1971  00137E                     l4739:
  1972  00137E  EC38  F00E         	call	_HNouSegon	;wreg free
  1973  001382  E312               	bnc	l4751
  1974  001384  EC5C  F00E         	call	_LcLliure	;wreg free
  1975  001388  E30F               	bnc	l4751
  1976                           
  1977                           ;Joc.c: 73:     HClearNouSegon();
  1978  00138A  ECC0  F00E         	call	_HClearNouSegon	;wreg free
  1979                           
  1980                           ;Joc.c: 74:     LcGotoXY(0,1);
  1981  00138E  EC4D  F004         	call	PL34	;call to abstracted procedure
  1982  001392  ECE9  F00C         	call	_LcGotoXY
  1983                           
  1984                           ;Joc.c: 75:     LcNewString(HGetTime());
  1985  001396  ECBE  F00E         	call	_HGetTime	;wreg free
  1986  00139A  6E71               	movwf	??_motorJoc^0,c
  1987  00139C  C071  F066         	movff	??_motorJoc,LcNewString@new_s
  1988  0013A0  6A67               	clrf	(LcNewString@new_s+1)^0,c
  1989  0013A2  EC56  F00E         	call	_LcNewString	;wreg free
  1990  0013A6  D7E8               	goto	l4737
  1991  0013A8                     l4751:
  1992  0013A8  5049               	movf	_novaTeclaJOC^0,w,c
  1993  0013AA  0A80               	xorlw	128
  1994  0013AC  0F7F               	addlw	-129
  1995  0013AE  A0D8               	btfss	status,0,c
  1996  0013B0  0012               	return	
  1997                           
  1998                           ;Joc.c: 79:     SIONovaTecla(novaTeclaJOC+48);
  1999  0013B2  5049               	movf	_novaTeclaJOC^0,w,c
  2000  0013B4  0F30               	addlw	48
  2001  0013B6  EC6A  F00E         	call	_SIONovaTecla
  2002                           
  2003                           ;Joc.c: 80:     novaTeclaJOC = -1;
  2004  0013BA  6849               	setf	_novaTeclaJOC^0,c
  2005  0013BC  D7DD               	goto	l4737
  2006  0013BE                     l4759:
  2007                           
  2008                           ;Joc.c: 85:    if (SIOcheckKrebut()) {
  2009  0013BE  EC32  F00E         	call	_SIOcheckKrebut	;wreg free
  2010  0013C2  A0D8               	btfss	status,0,c
  2011  0013C4  0012               	return	
  2012                           
  2013                           ;Joc.c: 86:     HJugant();
  2014  0013C6  ECAA  F00E         	call	_HJugant	;wreg free
  2015  0013CA  D7D6               	goto	l4737
  2016  0013CC                     l4767:
  2017  0013CC  5011               	movf	motorJoc@state^0,w,c
  2018  0013CE  6E71               	movwf	??_motorJoc^0,c
  2019  0013D0  6A72               	clrf	(??_motorJoc+1)^0,c
  2020                           
  2021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2022                           ; Switch size 1, requested type "space"
  2023                           ; Number of cases is 1, Range of values is 0 to 0
  2024                           ; switch strategies available:
  2025                           ; Name         Instructions Cycles
  2026                           ; simple_byte            4     3 (average)
  2027                           ;	Chosen strategy is simple_byte
  2028  0013D2  5072               	movf	(??_motorJoc+1)^0,w,c
  2029  0013D4  A4D8               	btfss	status,2,c
  2030  0013D6  0012               	return	
  2031                           
  2032                           ; Switch size 1, requested type "space"
  2033                           ; Number of cases is 3, Range of values is 0 to 2
  2034                           ; switch strategies available:
  2035                           ; Name         Instructions Cycles
  2036                           ; simple_byte           10     6 (average)
  2037                           ;	Chosen strategy is simple_byte
  2038  0013D8  5071               	movf	??_motorJoc^0,w,c
  2039  0013DA  E0B2               	bz	l4715
  2040  0013DC  0A01               	xorlw	1	; case 1
  2041  0013DE  E0BA               	bz	l1130
  2042  0013E0  0A03               	xorlw	3	; case 2
  2043  0013E2  E0ED               	bz	l4759
  2044  0013E4  0012               	return		;funcret
  2045  0013E6                     __end_of_motorJoc:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _conversorJoystick *****************
  2049 ;; Defined at:
  2050 ;;		line 31 in file "Joc.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  direc           1    wreg     unsigned char 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  direc           1    5[COMRAM] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      unsigned char 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/1
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1
  2064 ;;      Params:         0       0       0
  2065 ;;      Locals:         1       0       0
  2066 ;;      Temps:          0       0       0
  2067 ;;      Totals:         1       0       0
  2068 ;;Total ram usage:        1 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 2
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_motorJoc
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text7
  2079  001AA8                     __ptext7:
  2080                           	callstack 0
  2081  001AA8                     _conversorJoystick:
  2082                           	callstack 27
  2083                           
  2084                           ;incstack = 0
  2085                           ;conversorJoystick@direc stored from wreg
  2086  001AA8  6E63               	movwf	conversorJoystick@direc^0,c
  2087                           
  2088                           ;Joc.c: 33:     if (direc==2) {
  2089  001AAA  0E02               	movlw	2
  2090  001AAC  1863               	xorwf	conversorJoystick@direc^0,w,c
  2091  001AAE  E101               	bnz	l2275
  2092                           
  2093                           ;Joc.c: 34:         return 'W';
  2094  001AB0  0C57               	retlw	87
  2095  001AB2                     l2275:
  2096                           
  2097                           ;Joc.c: 36:     if (direc==6) {
  2098  001AB2  0E06               	movlw	6
  2099  001AB4  1863               	xorwf	conversorJoystick@direc^0,w,c
  2100  001AB6  E101               	bnz	l2281
  2101                           
  2102                           ;Joc.c: 37:         return 'D';
  2103  001AB8  0C44               	retlw	68
  2104  001ABA                     l2281:
  2105                           
  2106                           ;Joc.c: 39:     if (direc==8) {
  2107  001ABA  0E08               	movlw	8
  2108  001ABC  1863               	xorwf	conversorJoystick@direc^0,w,c
  2109  001ABE  E101               	bnz	l2287
  2110                           
  2111                           ;Joc.c: 40:         return 'S';
  2112  001AC0  0C53               	retlw	83
  2113  001AC2                     l2287:
  2114                           
  2115                           ;Joc.c: 42:     if (direc==4) {
  2116  001AC2  0E04               	movlw	4
  2117  001AC4  1863               	xorwf	conversorJoystick@direc^0,w,c
  2118  001AC6  E101               	bnz	l2293
  2119                           
  2120                           ;Joc.c: 43:         return 'A';
  2121  001AC8  0C41               	retlw	65
  2122  001ACA                     l2293:
  2123                           
  2124                           ;Joc.c: 45:     return 0;
  2125  001ACA  0C00               	retlw	0	;funcret
  2126  001ACC                     __end_of_conversorJoystick:
  2127                           	callstack 0
  2128                           
  2129 ;; *************** function _SIOendGame *****************
  2130 ;; Defined at:
  2131 ;;		line 22 in file "SIO.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		None
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/1
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1
  2145 ;;      Params:         0       0       0
  2146 ;;      Locals:         0       0       0
  2147 ;;      Temps:          0       0       0
  2148 ;;      Totals:         0       0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 2
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_motorJoc
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text8
  2160  001D74                     __ptext8:
  2161                           	callstack 0
  2162  001D74                     _SIOendGame:
  2163                           	callstack 27
  2164                           
  2165                           ;SIO.c: 23:     jugantSIO = 0;
  2166                           
  2167                           ;incstack = 0
  2168  001D74  9277               	bcf	(_jugantSIO/(0+8))^0,_jugantSIO& (0+7),c
  2169  001D76  0012               	return		;funcret
  2170  001D78                     __end_of_SIOendGame:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _SIOcheckKrebut *****************
  2174 ;; Defined at:
  2175 ;;		line 25 in file "SIO.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;		None               void
  2182 ;; Registers used:
  2183 ;;		status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/1
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1
  2189 ;;      Params:         0       0       0
  2190 ;;      Locals:         0       0       0
  2191 ;;      Temps:          0       0       0
  2192 ;;      Totals:         0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 2
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_motorJoc
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text9
  2204  001C64                     __ptext9:
  2205                           	callstack 0
  2206  001C64                     _SIOcheckKrebut:
  2207                           	callstack 27
  2208                           
  2209                           ;SIO.c: 26:     return Krebut;
  2210                           
  2211                           ;incstack = 0
  2212  001C64  B077               	btfsc	(_Krebut/(0+8))^0,_Krebut& (0+7),c
  2213  001C66  D002               	goto	l2309
  2214  001C68  90D8               	bcf	status,0,c
  2215  001C6A  0012               	return	
  2216  001C6C                     l2309:
  2217  001C6C  80D8               	bsf	status,0,c
  2218  001C6E  0012               	return		;funcret
  2219  001C70                     __end_of_SIOcheckKrebut:
  2220                           	callstack 0
  2221                           
  2222 ;; *************** function _SIOStartGame *****************
  2223 ;; Defined at:
  2224 ;;		line 32 in file "SIO.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  usuari          1    wreg     unsigned char 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  usuari          1    5[COMRAM] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/1
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1
  2238 ;;      Params:         0       0       0
  2239 ;;      Locals:         1       0       0
  2240 ;;      Temps:          0       0       0
  2241 ;;      Totals:         1       0       0
  2242 ;;Total ram usage:        1 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 2
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_motorJoc
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text10
  2253  001CCC                     __ptext10:
  2254                           	callstack 0
  2255  001CCC                     _SIOStartGame:
  2256                           	callstack 27
  2257                           
  2258                           ;incstack = 0
  2259                           ;SIOStartGame@usuari stored from wreg
  2260  001CCC  6E63               	movwf	SIOStartGame@usuari^0,c
  2261                           
  2262                           ;SIO.c: 33:     usuariActualSIO = usuari;
  2263  001CCE  C063  F048         	movff	SIOStartGame@usuari,_usuariActualSIO
  2264  001CD2  0012               	return		;funcret
  2265  001CD4                     __end_of_SIOStartGame:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _SIONovaTecla *****************
  2269 ;; Defined at:
  2270 ;;		line 39 in file "SIO.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  tecla           1    wreg     char 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  tecla           1    5[COMRAM] char 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/1
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1
  2284 ;;      Params:         0       0       0
  2285 ;;      Locals:         1       0       0
  2286 ;;      Temps:          0       0       0
  2287 ;;      Totals:         1       0       0
  2288 ;;Total ram usage:        1 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 2
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_motorJoc
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text11
  2299  001CD4                     __ptext11:
  2300                           	callstack 0
  2301  001CD4                     _SIONovaTecla:
  2302                           	callstack 27
  2303                           
  2304                           ;incstack = 0
  2305                           ;SIONovaTecla@tecla stored from wreg
  2306  001CD4  6E63               	movwf	SIONovaTecla@tecla^0,c
  2307                           
  2308                           ;SIO.c: 40:     novaTeclaSIO = tecla;
  2309  001CD6  C063  F046         	movff	SIONovaTecla@tecla,_novaTeclaSIO
  2310  001CDA  0012               	return		;funcret
  2311  001CDC                     __end_of_SIONovaTecla:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _SIONovaDireccio *****************
  2315 ;; Defined at:
  2316 ;;		line 28 in file "SIO.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  num             1    wreg     unsigned char 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  num             1    5[COMRAM] unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/1
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1
  2330 ;;      Params:         0       0       0
  2331 ;;      Locals:         1       0       0
  2332 ;;      Temps:          0       0       0
  2333 ;;      Totals:         1       0       0
  2334 ;;Total ram usage:        1 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 2
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_motorJoc
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text12
  2345  001CDC                     __ptext12:
  2346                           	callstack 0
  2347  001CDC                     _SIONovaDireccio:
  2348                           	callstack 27
  2349                           
  2350                           ;incstack = 0
  2351                           ;SIONovaDireccio@num stored from wreg
  2352  001CDC  6E63               	movwf	SIONovaDireccio@num^0,c
  2353                           
  2354                           ;SIO.c: 29:     direccioSIO = num;
  2355  001CDE  C063  F047         	movff	SIONovaDireccio@num,_direccioSIO
  2356  001CE2  0012               	return		;funcret
  2357  001CE4                     __end_of_SIONovaDireccio:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _HnoJugant *****************
  2361 ;; Defined at:
  2362 ;;		line 34 in file "Hora.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;		None
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;		None
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		None
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/1
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1
  2376 ;;      Params:         0       0       0
  2377 ;;      Locals:         0       0       0
  2378 ;;      Temps:          0       0       0
  2379 ;;      Totals:         0       0       0
  2380 ;;Total ram usage:        0 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 2
  2383 ;; This function calls:
  2384 ;;		Nothing
  2385 ;; This function is called by:
  2386 ;;		_motorJoc
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text13
  2391  001D78                     __ptext13:
  2392                           	callstack 0
  2393  001D78                     _HnoJugant:
  2394                           	callstack 27
  2395                           
  2396                           ;Hora.c: 35:     jugant = 0;
  2397                           
  2398                           ;incstack = 0
  2399  001D78  9A77               	bcf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2400  001D7A  0012               	return		;funcret
  2401  001D7C                     __end_of_HnoJugant:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _HNouSegon *****************
  2405 ;; Defined at:
  2406 ;;		line 22 in file "Hora.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;		None               void
  2413 ;; Registers used:
  2414 ;;		status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/1
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1
  2420 ;;      Params:         0       0       0
  2421 ;;      Locals:         0       0       0
  2422 ;;      Temps:          0       0       0
  2423 ;;      Totals:         0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 2
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_motorJoc
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text14
  2435  001C70                     __ptext14:
  2436                           	callstack 0
  2437  001C70                     _HNouSegon:
  2438                           	callstack 27
  2439                           
  2440                           ;Hora.c: 23:     return nouSegon;
  2441                           
  2442                           ;incstack = 0
  2443  001C70  B877               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2444  001C72  D002               	goto	l2255
  2445  001C74  90D8               	bcf	status,0,c
  2446  001C76  0012               	return	
  2447  001C78                     l2255:
  2448  001C78  80D8               	bsf	status,0,c
  2449  001C7A  0012               	return		;funcret
  2450  001C7C                     __end_of_HNouSegon:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _HJugant *****************
  2454 ;; Defined at:
  2455 ;;		line 37 in file "Hora.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		None
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/1
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1
  2469 ;;      Params:         0       0       0
  2470 ;;      Locals:         0       0       0
  2471 ;;      Temps:          0       0       0
  2472 ;;      Totals:         0       0       0
  2473 ;;Total ram usage:        0 bytes
  2474 ;; Hardware stack levels used: 1
  2475 ;; Hardware stack levels required when called: 2
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_motorJoc
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text15
  2484  001D54                     __ptext15:
  2485                           	callstack 0
  2486  001D54                     _HJugant:
  2487                           	callstack 27
  2488                           
  2489                           ;Hora.c: 38:     jugant = 1;
  2490                           
  2491                           ;incstack = 0
  2492  001D54  8A77               	bsf	(_jugant/(0+8))^0,_jugant& (0+7),c
  2493                           
  2494                           ;Hora.c: 39:     tempsAcabat = 0;
  2495  001D56  9677               	bcf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2496  001D58  0012               	return		;funcret
  2497  001D5A                     __end_of_HJugant:
  2498                           	callstack 0
  2499                           
  2500 ;; *************** function _HGetTime *****************
  2501 ;; Defined at:
  2502 ;;		line 30 in file "Hora.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      PTR unsigned char 
  2509 ;; Registers used:
  2510 ;;		wreg
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/1
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1
  2516 ;;      Params:         2       0       0
  2517 ;;      Locals:         0       0       0
  2518 ;;      Temps:          0       0       0
  2519 ;;      Totals:         2       0       0
  2520 ;;Total ram usage:        2 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 2
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_motorJoc
  2527 ;;		_motorSIO
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text16
  2532  001D7C                     __ptext16:
  2533                           	callstack 0
  2534  001D7C                     _HGetTime:
  2535                           	callstack 27
  2536                           
  2537                           ;Hora.c: 31:     return hora;
  2538                           
  2539                           ;incstack = 0
  2540  001D7C  0E55               	movlw	_hora& (0+255)
  2541  001D7E  0012               	return		;funcret
  2542  001D80                     __end_of_HGetTime:
  2543                           	callstack 0
  2544                           
  2545 ;; *************** function _HClearNouSegon *****************
  2546 ;; Defined at:
  2547 ;;		line 26 in file "Hora.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		None
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/1
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1
  2561 ;;      Params:         0       0       0
  2562 ;;      Locals:         0       0       0
  2563 ;;      Temps:          0       0       0
  2564 ;;      Totals:         0       0       0
  2565 ;;Total ram usage:        0 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 2
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_motorJoc
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text17
  2576  001D80                     __ptext17:
  2577                           	callstack 0
  2578  001D80                     _HClearNouSegon:
  2579                           	callstack 27
  2580                           
  2581                           ;Hora.c: 27:     nouSegon = 0;
  2582                           
  2583                           ;incstack = 0
  2584  001D80  9877               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2585  001D82  0012               	return		;funcret
  2586  001D84                     __end_of_HClearNouSegon:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _motorHora *****************
  2590 ;; Defined at:
  2591 ;;		line 45 in file "Hora.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/1
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1
  2605 ;;      Params:         0       0       0
  2606 ;;      Locals:         0       0       0
  2607 ;;      Temps:          2       0       0
  2608 ;;      Totals:         2       0       0
  2609 ;;Total ram usage:        2 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 3
  2612 ;; This function calls:
  2613 ;;		_TiGetTics
  2614 ;;		_TiResetTics
  2615 ;;		_playAltaveu
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text18
  2622  001512                     __ptext18:
  2623                           	callstack 0
  2624  001512                     _motorHora:
  2625                           	callstack 27
  2626                           
  2627                           ;Hora.c: 46:  static char state = 0;;Hora.c: 48:  switch(state) {
  2628                           
  2629                           ;incstack = 0
  2630  001512  D038               	goto	l4949
  2631  001514                     l4899:
  2632                           
  2633                           ;Hora.c: 50:    if (TiGetTics(timerHora) >= 1205) {
  2634  001514  5015               	movf	_timerHora^0,w,c
  2635  001516  EC41  F00D         	call	_TiGetTics
  2636  00151A  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  2637  00151C  0012               	return	
  2638  00151E  EC9F  F005         	call	PL60	;call to abstracted procedure
  2639  001522  A0D8               	btfss	status,0,c
  2640  001524  0012               	return	
  2641                           
  2642                           ;Hora.c: 51:     TiResetTics(timerHora);
  2643  001526  5015               	movf	_timerHora^0,w,c
  2644  001528  ECE5  F00D         	call	_TiResetTics
  2645                           
  2646                           ;Hora.c: 52:     if(jugant){
  2647  00152C  AA77               	btfss	(_jugant/(0+8))^0,_jugant& (0+7),c
  2648  00152E  D028               	goto	l4945
  2649                           
  2650                           ;Hora.c: 53:       nouSegon = 1;
  2651  001530  8877               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  2652                           
  2653                           ;Hora.c: 55:      hora[4]--;
  2654  001532  0659               	decf	(_hora+4)^0,f,c
  2655                           
  2656                           ;Hora.c: 56:      if(hora[4] == ('0'-1)){
  2657  001534  0E2F               	movlw	47
  2658  001536  1859               	xorwf	(_hora+4)^0,w,c
  2659  001538  E103               	bnz	l4915
  2660                           
  2661                           ;Hora.c: 57:       hora[4] = '9';
  2662  00153A  0E39               	movlw	57
  2663  00153C  6E59               	movwf	(_hora+4)^0,c
  2664                           
  2665                           ;Hora.c: 58:       hora[3]--;
  2666  00153E  0658               	decf	(_hora+3)^0,f,c
  2667  001540                     l4915:
  2668                           
  2669                           ;Hora.c: 61:      if(hora[3] == ('0'-1)){
  2670  001540  0E2F               	movlw	47
  2671  001542  1858               	xorwf	(_hora+3)^0,w,c
  2672  001544  E103               	bnz	l4921
  2673                           
  2674                           ;Hora.c: 62:       hora[3] = '5';
  2675  001546  0E35               	movlw	53
  2676  001548  6E58               	movwf	(_hora+3)^0,c
  2677                           
  2678                           ;Hora.c: 63:       hora[1]--;
  2679  00154A  0656               	decf	(_hora+1)^0,f,c
  2680  00154C                     l4921:
  2681                           
  2682                           ;Hora.c: 66:      if(hora[1] == ('0'-1)){
  2683  00154C  0E2F               	movlw	47
  2684  00154E  1856               	xorwf	(_hora+1)^0,w,c
  2685  001550  E103               	bnz	l4927
  2686                           
  2687                           ;Hora.c: 67:       hora[1] = '9';
  2688  001552  0E39               	movlw	57
  2689  001554  6E56               	movwf	(_hora+1)^0,c
  2690                           
  2691                           ;Hora.c: 68:       hora[0]--;
  2692  001556  0655               	decf	_hora^0,f,c
  2693  001558                     l4927:
  2694                           
  2695                           ;Hora.c: 71:      if(hora[0] == '0' && hora[1] == '0' && hora[3] == '0' && hora[4] == ('
      +                          0')){
  2696  001558  0E30               	movlw	48
  2697  00155A  1855               	xorwf	_hora^0,w,c
  2698  00155C  E10A               	bnz	l4937
  2699  00155E  0E30               	movlw	48
  2700  001560  1856               	xorwf	(_hora+1)^0,w,c
  2701  001562  E107               	bnz	l4937
  2702  001564  0E30               	movlw	48
  2703  001566  1858               	xorwf	(_hora+3)^0,w,c
  2704  001568  E104               	bnz	l4937
  2705  00156A  0E30               	movlw	48
  2706  00156C  1859               	xorwf	(_hora+4)^0,w,c
  2707  00156E  E101               	bnz	l4937
  2708                           
  2709                           ;Hora.c: 72:       tempsAcabat = 1;
  2710  001570  8677               	bsf	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  2711  001572                     l4937:
  2712                           
  2713                           ;Hora.c: 75:      segons++;
  2714  001572  2A14               	incf	_segons^0,f,c
  2715                           
  2716                           ;Hora.c: 76:      if(segons > 59){
  2717  001574  0E3B               	movlw	59
  2718  001576  6414               	cpfsgt	_segons^0,c
  2719  001578  D003               	goto	l4945
  2720                           
  2721                           ;Hora.c: 77:       playAltaveu();
  2722  00157A  ECC2  F00E         	call	_playAltaveu	;wreg free
  2723                           
  2724                           ;Hora.c: 78:       segons = 0;
  2725  00157E  6A14               	clrf	_segons^0,c
  2726  001580                     l4945:
  2727                           
  2728                           ;Hora.c: 81:     state = 0;
  2729  001580  6A13               	clrf	motorHora@state^0,c
  2730  001582  0012               	return	
  2731  001584                     l4949:
  2732  001584  5013               	movf	motorHora@state^0,w,c
  2733  001586  6E6A               	movwf	??_motorHora^0,c
  2734  001588  6A6B               	clrf	(??_motorHora+1)^0,c
  2735                           
  2736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2737                           ; Switch size 1, requested type "space"
  2738                           ; Number of cases is 1, Range of values is 0 to 0
  2739                           ; switch strategies available:
  2740                           ; Name         Instructions Cycles
  2741                           ; simple_byte            4     3 (average)
  2742                           ;	Chosen strategy is simple_byte
  2743  00158A  506B               	movf	(??_motorHora+1)^0,w,c
  2744  00158C  A4D8               	btfss	status,2,c
  2745  00158E  0012               	return	
  2746                           
  2747                           ; Switch size 1, requested type "space"
  2748                           ; Number of cases is 1, Range of values is 0 to 0
  2749                           ; switch strategies available:
  2750                           ; Name         Instructions Cycles
  2751                           ; simple_byte            4     3 (average)
  2752                           ;	Chosen strategy is simple_byte
  2753  001590  506A               	movf	??_motorHora^0,w,c
  2754  001592  E0C0               	bz	l4899
  2755  001594  0012               	return		;funcret
  2756  001596                     __end_of_motorHora:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _playAltaveu *****************
  2760 ;; Defined at:
  2761 ;;		line 14 in file "Altaveu.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		None
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/1
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1
  2775 ;;      Params:         0       0       0
  2776 ;;      Locals:         0       0       0
  2777 ;;      Temps:          0       0       0
  2778 ;;      Totals:         0       0       0
  2779 ;;Total ram usage:        0 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 2
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_motorHora
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text19
  2790  001D84                     __ptext19:
  2791                           	callstack 0
  2792  001D84                     _playAltaveu:
  2793                           	callstack 27
  2794                           
  2795                           ;Altaveu.c: 15:     reproduir = 1;
  2796                           
  2797                           ;incstack = 0
  2798  001D84  8478               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2799  001D86  0012               	return		;funcret
  2800  001D88                     __end_of_playAltaveu:
  2801                           	callstack 0
  2802                           
  2803 ;; *************** function _motorAltaveu *****************
  2804 ;; Defined at:
  2805 ;;		line 17 in file "Altaveu.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/1
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1
  2819 ;;      Params:         0       0       0
  2820 ;;      Locals:         0       0       0
  2821 ;;      Temps:          3       0       0
  2822 ;;      Totals:         3       0       0
  2823 ;;Total ram usage:        3 bytes
  2824 ;; Hardware stack levels used: 1
  2825 ;; Hardware stack levels required when called: 3
  2826 ;; This function calls:
  2827 ;;		_TiGetTics
  2828 ;;		_TiResetTics
  2829 ;; This function is called by:
  2830 ;;		_main
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text20
  2835  00147E                     __ptext20:
  2836                           	callstack 0
  2837  00147E                     _motorAltaveu:
  2838                           	callstack 27
  2839                           
  2840                           ;Altaveu.c: 18: static char state = 0;;Altaveu.c: 20:  switch(state) {
  2841                           
  2842                           ;incstack = 0
  2843  00147E  D030               	goto	l5463
  2844  001480                     l828:
  2845                           
  2846                           ;Altaveu.c: 22:    if (reproduir) {
  2847  001480  A478               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2848  001482  0012               	return	
  2849                           
  2850                           ;Altaveu.c: 23:     nota = 1;
  2851  001484  0E01               	movlw	1
  2852  001486  6E25               	movwf	_nota^0,c
  2853                           
  2854                           ;Altaveu.c: 24:     copsNota = 0;
  2855  001488  6A23               	clrf	_copsNota^0,c
  2856                           
  2857                           ;Altaveu.c: 25:     TiResetTics(timerAltaveu);
  2858  00148A  5024               	movf	_timerAltaveu^0,w,c
  2859  00148C  ECE5  F00D         	call	_TiResetTics
  2860  001490                     l5429:
  2861                           
  2862                           ;Altaveu.c: 26:     state = 1;
  2863  001490  0E01               	movlw	1
  2864  001492  6E22               	movwf	motorAltaveu@state^0,c
  2865  001494  0C01               	retlw	1
  2866  001496                     l5431:
  2867                           
  2868                           ;Altaveu.c: 30:    if (nota > 5) {
  2869  001496  0E05               	movlw	5
  2870  001498  6425               	cpfsgt	_nota^0,c
  2871  00149A  D003               	goto	l5435
  2872                           
  2873                           ;Altaveu.c: 31:     reproduir = 0;
  2874  00149C  9478               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  2875                           
  2876                           ;Altaveu.c: 32:     state = 0;
  2877  00149E  6A22               	clrf	motorAltaveu@state^0,c
  2878                           
  2879                           ;Altaveu.c: 33:    }
  2880  0014A0  0012               	return	
  2881  0014A2                     l5435:
  2882  0014A2  0EA8               	movlw	168
  2883  0014A4  1823               	xorwf	_copsNota^0,w,c
  2884  0014A6  E103               	bnz	l5443
  2885                           
  2886                           ;Altaveu.c: 35:     nota++;
  2887  0014A8  2A25               	incf	_nota^0,f,c
  2888                           
  2889                           ;Altaveu.c: 36:     copsNota = 0;
  2890  0014AA  6A23               	clrf	_copsNota^0,c
  2891  0014AC  D7F1               	goto	l5429
  2892  0014AE                     l5443:
  2893  0014AE  5024               	movf	_timerAltaveu^0,w,c
  2894  0014B0  EC41  F00D         	call	_TiGetTics
  2895  0014B4  D822               	call	PL16	;call to abstracted procedure
  2896  0014B6  B0D8               	btfsc	status,0,c
  2897  0014B8  0012               	return	
  2898                           
  2899                           ;Altaveu.c: 40:     LATBbits.LB0 = 1;
  2900  0014BA  808A               	bsf	138,0,c	;volatile
  2901                           
  2902                           ;Altaveu.c: 41:     TiResetTics(timerAltaveu);
  2903  0014BC  5024               	movf	_timerAltaveu^0,w,c
  2904  0014BE  ECE5  F00D         	call	_TiResetTics
  2905                           
  2906                           ;Altaveu.c: 42:     state = 2;
  2907  0014C2  0E02               	movlw	2
  2908  0014C4  6E22               	movwf	motorAltaveu@state^0,c
  2909  0014C6  0C02               	retlw	2
  2910  0014C8                     l5451:
  2911                           
  2912                           ;Altaveu.c: 46:    if (TiGetTics(timerAltaveu) > nota) {
  2913  0014C8  5024               	movf	_timerAltaveu^0,w,c
  2914  0014CA  EC41  F00D         	call	_TiGetTics
  2915  0014CE  D815               	call	PL16	;call to abstracted procedure
  2916  0014D0  B0D8               	btfsc	status,0,c
  2917  0014D2  0012               	return	
  2918                           
  2919                           ;Altaveu.c: 47:     LATBbits.LB0 = 0;
  2920  0014D4  908A               	bcf	138,0,c	;volatile
  2921                           
  2922                           ;Altaveu.c: 48:     TiResetTics(timerAltaveu);
  2923  0014D6  5024               	movf	_timerAltaveu^0,w,c
  2924  0014D8  ECE5  F00D         	call	_TiResetTics
  2925                           
  2926                           ;Altaveu.c: 49:     copsNota++;
  2927  0014DC  2A23               	incf	_copsNota^0,f,c
  2928  0014DE  D7D8               	goto	l5429
  2929  0014E0                     l5463:
  2930  0014E0  5022               	movf	motorAltaveu@state^0,w,c
  2931  0014E2  6E6A               	movwf	??_motorAltaveu^0,c
  2932  0014E4  6A6B               	clrf	(??_motorAltaveu+1)^0,c
  2933                           
  2934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2935                           ; Switch size 1, requested type "space"
  2936                           ; Number of cases is 1, Range of values is 0 to 0
  2937                           ; switch strategies available:
  2938                           ; Name         Instructions Cycles
  2939                           ; simple_byte            4     3 (average)
  2940                           ;	Chosen strategy is simple_byte
  2941  0014E6  506B               	movf	(??_motorAltaveu+1)^0,w,c
  2942  0014E8  A4D8               	btfss	status,2,c
  2943  0014EA  0012               	return	
  2944                           
  2945                           ; Switch size 1, requested type "space"
  2946                           ; Number of cases is 3, Range of values is 0 to 2
  2947                           ; switch strategies available:
  2948                           ; Name         Instructions Cycles
  2949                           ; simple_byte           10     6 (average)
  2950                           ;	Chosen strategy is simple_byte
  2951  0014EC  506A               	movf	??_motorAltaveu^0,w,c
  2952  0014EE  E0C8               	bz	l828
  2953  0014F0  0A01               	xorlw	1	; case 1
  2954  0014F2  E0D1               	bz	l5431
  2955  0014F4  0A03               	xorlw	3	; case 2
  2956  0014F6  E0E8               	bz	l5451
  2957  0014F8  0012               	return		;funcret
  2958  0014FA                     __end_of_motorAltaveu:
  2959                           	callstack 0
  2960  0014FA                     PL16:
  2961                           	callstack 27
  2962  0014FA  5025               	movf	_nota^0,w,c
  2963  0014FC  6E6A               	movwf	??_motorAltaveu^0,c
  2964  0014FE  6A6B               	clrf	(??_motorAltaveu+1)^0,c
  2965  001500  5063               	movf	?_TiGetTics^0,w,c
  2966  001502  5C6A               	subwf	??_motorAltaveu^0,w,c
  2967  001504  506B               	movf	(??_motorAltaveu+1)^0,w,c
  2968  001506  0A80               	xorlw	128
  2969  001508  6E6C               	movwf	(??_motorAltaveu+2)^0,c
  2970  00150A  5064               	movf	(?_TiGetTics+1)^0,w,c
  2971  00150C  0A80               	xorlw	128
  2972  00150E  586C               	subwfb	(??_motorAltaveu+2)^0,w,c
  2973  001510  0012               	return	
  2974  001512                     __end_ofPL16:
  2975                           	callstack 0
  2976                           
  2977 ;; *************** function _menu *****************
  2978 ;; Defined at:
  2979 ;;		line 39 in file "Menu.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/1
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1
  2993 ;;      Params:         0       0       0
  2994 ;;      Locals:         0       0       0
  2995 ;;      Temps:          5       0       0
  2996 ;;      Totals:         5       0       0
  2997 ;;Total ram usage:        5 bytes
  2998 ;; Hardware stack levels used: 1
  2999 ;; Hardware stack levels required when called: 6
  3000 ;; This function calls:
  3001 ;;		_GLCDMostraMenu
  3002 ;;		_HActualitzaHora
  3003 ;;		_JJuguem
  3004 ;;		_JendGame
  3005 ;;		_JnovaDireccio
  3006 ;;		_JnovaTecla
  3007 ;;		_LcClear
  3008 ;;		_LcGotoXY
  3009 ;;		_LcLliure
  3010 ;;		_LcNewString
  3011 ;;		_LcPutChar
  3012 ;;		_LcScroll
  3013 ;;		_NoFerMenu
  3014 ;;		_SIOHaAcabatPuntuacions
  3015 ;;		_SMSoff
  3016 ;;		_SMSon
  3017 ;;		_SiFerMenu
  3018 ;;		_TiGetTics
  3019 ;;		_TiResetTics
  3020 ;;		_URegister
  3021 ;;		_UcheckExists
  3022 ;;		_UcheckExistsGetError
  3023 ;;		_UcheckExistsNotFinished
  3024 ;;		_UenviaChar
  3025 ;;		_UenviaPas
  3026 ;;		_UgetNumUsuaris
  3027 ;;		_UgetUserName
  3028 ;;		_UshowUsersCalculat
  3029 ;;		_calculateShowUsers
  3030 ;;		_checkHoraAcabat
  3031 ;;		_getArrayShowUsers
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text21
  3038  0002F6                     __ptext21:
  3039                           	callstack 0
  3040  0002F6                     _menu:
  3041                           	callstack 24
  3042                           
  3043                           ;Menu.c: 40:  static char state = 0;;Menu.c: 42:  switch(state) {
  3044                           
  3045                           ;incstack = 0
  3046  0002F6  D265               	goto	l5415
  3047  0002F8                     l4957:
  3048                           
  3049                           ;Menu.c: 44:    LcClear();
  3050  0002F8  EC8A  F00D         	call	_LcClear	;wreg free
  3051                           
  3052                           ;Menu.c: 45:    LcNewString("1.LOGIN");
  3053  0002FC  0EDF               	movlw	low STR_1
  3054  0002FE  DAC2               	call	PL6	;call to abstracted procedure
  3055  000300  EC56  F00E         	call	_LcNewString	;wreg free
  3056                           
  3057                           ;Menu.c: 46:    state = 1;
  3058  000304  0E01               	movlw	1
  3059  000306  6E2C               	movwf	menu@state^0,c
  3060                           
  3061                           ;Menu.c: 47:   break;
  3062  000308  0C01               	retlw	1
  3063  00030A                     l4963:
  3064                           
  3065                           ;Menu.c: 49:    if (LcLliure()) {
  3066  00030A  EC5C  F00E         	call	_LcLliure	;wreg free
  3067  00030E  A0D8               	btfss	status,0,c
  3068  000310  0012               	return	
  3069                           
  3070                           ;Menu.c: 50:     LcGotoXY(0,1);
  3071  000312  DAC3               	call	PL34	;call to abstracted procedure
  3072  000314  ECE9  F00C         	call	_LcGotoXY
  3073                           
  3074                           ;Menu.c: 51:     LcNewString("2.REGISTER");
  3075  000318  0EBB               	movlw	low STR_2
  3076  00031A  DAB4               	call	PL6	;call to abstracted procedure
  3077  00031C  EC56  F00E         	call	_LcNewString	;wreg free
  3078                           
  3079                           ;Menu.c: 52:     NovaTecla = -1;
  3080  000320  6850               	setf	_NovaTecla^0,c
  3081                           
  3082                           ;Menu.c: 53:     state = 2;
  3083  000322  0E02               	movlw	2
  3084  000324  6E2C               	movwf	menu@state^0,c
  3085                           
  3086                           ;Menu.c: 55:   break;
  3087                           
  3088                           ;Menu.c: 54:    }
  3089  000326  0C02               	retlw	2
  3090  000328                     l4973:
  3091                           
  3092                           ;Menu.c: 57:    if (NovaTecla == 1 && UgetNumUsuaris() > 0) {
  3093  000328  0450               	decf	_NovaTecla^0,w,c
  3094  00032A  E108               	bnz	l4981
  3095  00032C  ECC6  F00E         	call	_UgetNumUsuaris	;wreg free
  3096  000330  0900               	iorlw	0
  3097  000332  E004               	bz	l4981
  3098                           
  3099                           ;Menu.c: 58:     loginNOTRegister = 1;
  3100  000334  8E78               	bsf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3101  000336                     l4979:
  3102                           
  3103                           ;Menu.c: 59:     state = 3;
  3104  000336  0E03               	movlw	3
  3105  000338  6E2C               	movwf	menu@state^0,c
  3106                           
  3107                           ;Menu.c: 60:    }
  3108  00033A  0C03               	retlw	3
  3109  00033C                     l4981:
  3110  00033C  0E02               	movlw	2
  3111  00033E  1850               	xorwf	_NovaTecla^0,w,c
  3112  000340  A4D8               	btfss	status,2,c
  3113  000342  0012               	return	
  3114                           
  3115                           ;Menu.c: 62:     loginNOTRegister = 0;
  3116  000344  9E78               	bcf	(_loginNOTRegister/(0+8))^0,_loginNOTRegister& (0+7),c
  3117  000346  D7F7               	goto	l4979
  3118  000348                     l503:
  3119                           
  3120                           ;Menu.c: 67:    NovaTecla = -1;
  3121  000348  6850               	setf	_NovaTecla^0,c
  3122                           
  3123                           ;Menu.c: 68:    novaLletra = -1;
  3124  00034A  684F               	setf	_novaLletra^0,c
  3125                           
  3126                           ;Menu.c: 69:    LcClear();
  3127  00034C  EC8A  F00D         	call	_LcClear	;wreg free
  3128                           
  3129                           ;Menu.c: 70:    LcNewString("USER: ");
  3130  000350  0EEE               	movlw	low STR_3
  3131  000352  DA98               	call	PL6	;call to abstracted procedure
  3132  000354  EC56  F00E         	call	_LcNewString	;wreg free
  3133                           
  3134                           ;Menu.c: 71:    state = 4;
  3135  000358  0E04               	movlw	4
  3136  00035A  6E2C               	movwf	menu@state^0,c
  3137                           
  3138                           ;Menu.c: 72:   break;
  3139  00035C  0C04               	retlw	4
  3140  00035E                     l4993:
  3141                           
  3142                           ;Menu.c: 74:    if (LcLliure()) {
  3143  00035E  EC5C  F00E         	call	_LcLliure	;wreg free
  3144  000362  A0D8               	btfss	status,0,c
  3145  000364  0012               	return	
  3146                           
  3147                           ;Menu.c: 75:     LcGotoXY(0,1);
  3148  000366  DA99               	call	PL34	;call to abstracted procedure
  3149  000368  ECE9  F00C         	call	_LcGotoXY
  3150                           
  3151                           ;Menu.c: 76:     LcNewString("PSWD: ");
  3152  00036C  0EE7               	movlw	low STR_4
  3153  00036E  DA8A               	call	PL6	;call to abstracted procedure
  3154  000370  EC56  F00E         	call	_LcNewString	;wreg free
  3155                           
  3156                           ;Menu.c: 77:     state = 5;
  3157  000374  0E05               	movlw	5
  3158  000376  6E2C               	movwf	menu@state^0,c
  3159  000378  0C05               	retlw	5
  3160  00037A                     l5001:
  3161                           
  3162                           ;Menu.c: 81:    if (LcLliure()) {
  3163  00037A  EC5C  F00E         	call	_LcLliure	;wreg free
  3164  00037E  A0D8               	btfss	status,0,c
  3165  000380  0012               	return	
  3166                           
  3167                           ;Menu.c: 82:     LcGotoXY(6,0);
  3168  000382  0E00               	movlw	0
  3169  000384  6E6B               	movwf	LcGotoXY@Row^0,c
  3170  000386  0E06               	movlw	6
  3171  000388  ECE9  F00C         	call	_LcGotoXY
  3172                           
  3173                           ;Menu.c: 83:     SMSon();
  3174  00038C  ECAD  F00E         	call	_SMSon	;wreg free
  3175                           
  3176                           ;Menu.c: 84:     tmp =0;
  3177  000390  6A31               	clrf	_tmp^0,c
  3178  000392                     l5009:
  3179                           
  3180                           ;Menu.c: 85:     state = 6;
  3181  000392  0E06               	movlw	6
  3182  000394  6E2C               	movwf	menu@state^0,c
  3183  000396  0C06               	retlw	6
  3184  000398                     l5011:
  3185                           
  3186                           ;Menu.c: 89:    if (novaLletra > 31 && NovaTecla != 10) {
  3187  000398  504F               	movf	_novaLletra^0,w,c
  3188  00039A  0A80               	xorlw	128
  3189  00039C  0F60               	addlw	-160
  3190  00039E  E30E               	bnc	l5021
  3191  0003A0  0E0A               	movlw	10
  3192  0003A2  1850               	xorwf	_NovaTecla^0,w,c
  3193  0003A4  E00B               	bz	l5021
  3194                           
  3195                           ;Menu.c: 90:     LcPutChar(novaLletra);
  3196  0003A6  504F               	movf	_novaLletra^0,w,c
  3197  0003A8  EC0F  F00C         	call	_LcPutChar
  3198                           
  3199                           ;Menu.c: 91:     UenviaChar(novaLletra,tmp);
  3200  0003AC  C031  F063         	movff	_tmp,UenviaChar@pos
  3201  0003B0  504F               	movf	_novaLletra^0,w,c
  3202  0003B2  EC24  F00E         	call	_UenviaChar
  3203  0003B6                     l5019:
  3204                           
  3205                           ;Menu.c: 92:     state = 7;
  3206  0003B6  0E07               	movlw	7
  3207  0003B8  6E2C               	movwf	menu@state^0,c
  3208                           
  3209                           ;Menu.c: 93:    }
  3210  0003BA  0C07               	retlw	7
  3211  0003BC                     l5021:
  3212  0003BC  0E0B               	movlw	11
  3213  0003BE  1850               	xorwf	_NovaTecla^0,w,c
  3214  0003C0  E0FA               	bz	l5019
  3215  0003C2  0012               	return	
  3216  0003C4                     l5025:
  3217                           
  3218                           ;Menu.c: 99:    if (tmp != 7 && NovaTecla != 11) {
  3219  0003C4  0E07               	movlw	7
  3220  0003C6  1831               	xorwf	_tmp^0,w,c
  3221  0003C8  E005               	bz	l5037
  3222  0003CA  0E0B               	movlw	11
  3223  0003CC  1850               	xorwf	_NovaTecla^0,w,c
  3224  0003CE  E002               	bz	l5037
  3225                           
  3226                           ;Menu.c: 100:     tmp++;
  3227                           
  3228                           ;Menu.c: 101:     NovaTecla = -1;
  3229                           
  3230                           ;Menu.c: 102:     novaLletra = -1;
  3231  0003D0  DA6B               	call	PL74	;call to abstracted procedure
  3232  0003D2  D7DF               	goto	l5009
  3233  0003D4                     l5037:
  3234  0003D4  0E07               	movlw	7
  3235  0003D6  1831               	xorwf	_tmp^0,w,c
  3236  0003D8  E004               	bz	u4450
  3237  0003DA  0E0B               	movlw	11
  3238  0003DC  1850               	xorwf	_NovaTecla^0,w,c
  3239  0003DE  A4D8               	btfss	status,2,c
  3240  0003E0  0012               	return	
  3241  0003E2                     u4450:
  3242                           
  3243                           ;Menu.c: 106:     LcGotoXY(6,1);
  3244  0003E2  0E01               	movlw	1
  3245  0003E4  6E6B               	movwf	LcGotoXY@Row^0,c
  3246  0003E6  0E06               	movlw	6
  3247  0003E8  ECE9  F00C         	call	_LcGotoXY
  3248                           
  3249                           ;Menu.c: 107:     UenviaChar('\0',tmp);
  3250  0003EC  C031  F063         	movff	_tmp,UenviaChar@pos
  3251  0003F0  0E00               	movlw	0
  3252  0003F2  EC24  F00E         	call	_UenviaChar
  3253                           
  3254                           ;Menu.c: 108:     NovaTecla = -1;
  3255                           
  3256                           ;Menu.c: 109:     novaLletra = -1;
  3257                           
  3258                           ;Menu.c: 110:     tmp = 0;
  3259  0003F6  DA54               	call	PL72	;call to abstracted procedure
  3260  0003F8                     l5051:
  3261                           
  3262                           ;Menu.c: 111:     state = 8;
  3263  0003F8  0E08               	movlw	8
  3264  0003FA  6E2C               	movwf	menu@state^0,c
  3265  0003FC  0C08               	retlw	8
  3266  0003FE                     l5053:
  3267                           
  3268                           ;Menu.c: 115:    if (novaLletra > 31 && NovaTecla != 10) {
  3269  0003FE  504F               	movf	_novaLletra^0,w,c
  3270  000400  0A80               	xorlw	128
  3271  000402  0F60               	addlw	-160
  3272  000404  E30E               	bnc	l5063
  3273  000406  0E0A               	movlw	10
  3274  000408  1850               	xorwf	_NovaTecla^0,w,c
  3275  00040A  E00B               	bz	l5063
  3276                           
  3277                           ;Menu.c: 116:     LcPutChar(novaLletra);
  3278  00040C  504F               	movf	_novaLletra^0,w,c
  3279  00040E  EC0F  F00C         	call	_LcPutChar
  3280                           
  3281                           ;Menu.c: 117:     UenviaPas(novaLletra,tmp);
  3282  000412  C031  F063         	movff	_tmp,UenviaPas@pos
  3283  000416  504F               	movf	_novaLletra^0,w,c
  3284  000418  EC1C  F00E         	call	_UenviaPas
  3285  00041C                     l5061:
  3286                           
  3287                           ;Menu.c: 118:     state = 9;
  3288  00041C  0E09               	movlw	9
  3289  00041E  6E2C               	movwf	menu@state^0,c
  3290                           
  3291                           ;Menu.c: 119:    }
  3292  000420  0C09               	retlw	9
  3293  000422                     l5063:
  3294  000422  0E0B               	movlw	11
  3295  000424  1850               	xorwf	_NovaTecla^0,w,c
  3296  000426  E0FA               	bz	l5061
  3297  000428  0012               	return	
  3298  00042A                     l5067:
  3299                           
  3300                           ;Menu.c: 125:    if (tmp != 7 && NovaTecla != 11) {
  3301  00042A  0E07               	movlw	7
  3302  00042C  1831               	xorwf	_tmp^0,w,c
  3303  00042E  E005               	bz	l5079
  3304  000430  0E0B               	movlw	11
  3305  000432  1850               	xorwf	_NovaTecla^0,w,c
  3306  000434  E002               	bz	l5079
  3307                           
  3308                           ;Menu.c: 126:     tmp++;
  3309                           
  3310                           ;Menu.c: 127:     NovaTecla = -1;
  3311                           
  3312                           ;Menu.c: 128:     novaLletra = -1;
  3313  000436  DA38               	call	PL74	;call to abstracted procedure
  3314  000438  D7DF               	goto	l5051
  3315  00043A                     l5079:
  3316  00043A  0E07               	movlw	7
  3317  00043C  1831               	xorwf	_tmp^0,w,c
  3318  00043E  E004               	bz	u4520
  3319  000440  0E0B               	movlw	11
  3320  000442  1850               	xorwf	_NovaTecla^0,w,c
  3321  000444  A4D8               	btfss	status,2,c
  3322  000446  0012               	return	
  3323  000448                     u4520:
  3324                           
  3325                           ;Menu.c: 132:     UenviaPas('\0',tmp);
  3326  000448  C031  F063         	movff	_tmp,UenviaPas@pos
  3327  00044C  0E00               	movlw	0
  3328  00044E  EC1C  F00E         	call	_UenviaPas
  3329                           
  3330                           ;Menu.c: 133:     NovaTecla = -1;
  3331                           
  3332                           ;Menu.c: 134:     novaLletra = -1;
  3333                           
  3334                           ;Menu.c: 135:     tmp = 0;
  3335  000452  DA26               	call	PL72	;call to abstracted procedure
  3336                           
  3337                           ;Menu.c: 136:     UcheckExists();
  3338  000454  ECCA  F00E         	call	_UcheckExists	;wreg free
  3339                           
  3340                           ;Menu.c: 137:     SMSoff();
  3341  000458  ECB0  F00E         	call	_SMSoff	;wreg free
  3342                           
  3343                           ;Menu.c: 138:     state = 10;
  3344  00045C  0E0A               	movlw	10
  3345  00045E  6E2C               	movwf	menu@state^0,c
  3346  000460  0C0A               	retlw	10
  3347  000462                     l5097:
  3348                           
  3349                           ;Menu.c: 142:    if (!UcheckExistsNotFinished()) {
  3350  000462  EC4A  F00E         	call	_UcheckExistsNotFinished	;wreg free
  3351  000466  B0D8               	btfsc	status,0,c
  3352  000468  0012               	return	
  3353                           
  3354                           ;Menu.c: 143:     indexUsuari = UcheckExistsGetError();
  3355  00046A  ECC8  F00E         	call	_UcheckExistsGetError	;wreg free
  3356  00046E  6E2E               	movwf	_indexUsuari^0,c
  3357                           
  3358                           ;Menu.c: 144:     state = 11;
  3359  000470  0E0B               	movlw	11
  3360  000472  6E2C               	movwf	menu@state^0,c
  3361  000474  0C0B               	retlw	11
  3362  000476                     l5103:
  3363                           
  3364                           ;Menu.c: 149:     state = 12;
  3365  000476  0E0C               	movlw	12
  3366  000478  6E2C               	movwf	menu@state^0,c
  3367                           
  3368                           ;Menu.c: 150:    }
  3369  00047A  0C0C               	retlw	12
  3370  00047C                     l5109:
  3371                           
  3372                           ;Menu.c: 153:     state = 0;
  3373  00047C  6A2C               	clrf	menu@state^0,c
  3374                           
  3375                           ;Menu.c: 154:    }
  3376  00047E  0012               	return	
  3377  000480                     l5119:
  3378                           
  3379                           ;Menu.c: 164:    LcClear();
  3380  000480  EC8A  F00D         	call	_LcClear	;wreg free
  3381                           
  3382                           ;Menu.c: 165:    SiFerMenu();
  3383  000484  ECCE  F00E         	call	_SiFerMenu	;wreg free
  3384                           
  3385                           ;Menu.c: 166:    GLCDMostraMenu(menuDalt);
  3386  000488  502F               	movf	_menuDalt^0,w,c
  3387  00048A  EC50  F00E         	call	_GLCDMostraMenu
  3388                           
  3389                           ;Menu.c: 167:    novaDireccio = -1;
  3390  00048E  684E               	setf	_novaDireccio^0,c
  3391                           
  3392                           ;Menu.c: 168:    NovaTecla = -1;
  3393  000490  6850               	setf	_NovaTecla^0,c
  3394                           
  3395                           ;Menu.c: 169:    state = 13;
  3396  000492  0E0D               	movlw	13
  3397  000494  6E2C               	movwf	menu@state^0,c
  3398                           
  3399                           ;Menu.c: 170:   break;
  3400  000496  0C0D               	retlw	13
  3401  000498                     l5131:
  3402                           
  3403                           ;Menu.c: 172:    if (novaDireccio == 8) {
  3404  000498  0E08               	movlw	8
  3405  00049A  184E               	xorwf	_novaDireccio^0,w,c
  3406  00049C  E105               	bnz	l5139
  3407                           
  3408                           ;Menu.c: 173:     if(menuDalt < 4) menuDalt++;
  3409  00049E  0E04               	movlw	4
  3410  0004A0  602F               	cpfslt	_menuDalt^0,c
  3411  0004A2  D7E9               	goto	l5103
  3412  0004A4  2A2F               	incf	_menuDalt^0,f,c
  3413  0004A6  D7E7               	goto	l5103
  3414  0004A8                     l5139:
  3415  0004A8  0E02               	movlw	2
  3416  0004AA  184E               	xorwf	_novaDireccio^0,w,c
  3417  0004AC  E104               	bnz	l5147
  3418                           
  3419                           ;Menu.c: 177:     if(menuDalt > 0) menuDalt--;
  3420  0004AE  502F               	movf	_menuDalt^0,w,c
  3421  0004B0  E0E2               	bz	l5103
  3422  0004B2  062F               	decf	_menuDalt^0,f,c
  3423  0004B4  D7E0               	goto	l5103
  3424  0004B6                     l5147:
  3425  0004B6  0E0B               	movlw	11
  3426  0004B8  1850               	xorwf	_NovaTecla^0,w,c
  3427  0004BA  E10E               	bnz	l5159
  3428  0004BC  0E03               	movlw	3
  3429  0004BE  182F               	xorwf	_menuDalt^0,w,c
  3430  0004C0  E10B               	bnz	l5159
  3431                           
  3432                           ;Menu.c: 181:     NoFerMenu();
  3433  0004C2  ECD2  F00E         	call	_NoFerMenu	;wreg free
  3434                           
  3435                           ;Menu.c: 182:     LcClear();
  3436  0004C6  EC8A  F00D         	call	_LcClear	;wreg free
  3437                           
  3438                           ;Menu.c: 183:     LcNewString("BYE BYE ");
  3439  0004CA  0EC6               	movlw	low STR_5
  3440  0004CC  D9DB               	call	PL6	;call to abstracted procedure
  3441  0004CE  EC56  F00E         	call	_LcNewString	;wreg free
  3442                           
  3443                           ;Menu.c: 184:     state = 14;
  3444  0004D2  0E0E               	movlw	14
  3445  0004D4  6E2C               	movwf	menu@state^0,c
  3446                           
  3447                           ;Menu.c: 185:    }
  3448  0004D6  0C0E               	retlw	14
  3449  0004D8                     l5159:
  3450  0004D8  0E0B               	movlw	11
  3451  0004DA  1850               	xorwf	_NovaTecla^0,w,c
  3452  0004DC  E10E               	bnz	l5173
  3453  0004DE  042F               	decf	_menuDalt^0,w,c
  3454  0004E0  E10C               	bnz	l5173
  3455                           
  3456                           ;Menu.c: 187:     LcClear();
  3457  0004E2  EC8A  F00D         	call	_LcClear	;wreg free
  3458                           
  3459                           ;Menu.c: 188:     NoFerMenu();
  3460  0004E6  ECD2  F00E         	call	_NoFerMenu	;wreg free
  3461                           
  3462                           ;Menu.c: 189:     LcNewString("Modify Time:");
  3463  0004EA  0EA2               	movlw	low STR_6
  3464  0004EC  D9CB               	call	PL6	;call to abstracted procedure
  3465  0004EE  EC56  F00E         	call	_LcNewString	;wreg free
  3466                           
  3467                           ;Menu.c: 190:     NovaTecla = -1;
  3468  0004F2  6850               	setf	_NovaTecla^0,c
  3469                           
  3470                           ;Menu.c: 191:     state = 16;
  3471  0004F4  0E10               	movlw	16
  3472  0004F6  6E2C               	movwf	menu@state^0,c
  3473                           
  3474                           ;Menu.c: 192:    }
  3475  0004F8  0C10               	retlw	16
  3476  0004FA                     l5173:
  3477  0004FA  502F               	movf	_menuDalt^0,w,c
  3478  0004FC  E112               	bnz	l5189
  3479  0004FE  0E0B               	movlw	11
  3480  000500  1850               	xorwf	_NovaTecla^0,w,c
  3481  000502  E10F               	bnz	l5189
  3482                           
  3483                           ;Menu.c: 194:     NoFerMenu();
  3484  000504  ECD2  F00E         	call	_NoFerMenu	;wreg free
  3485                           
  3486                           ;Menu.c: 195:     NovaTecla = -1;
  3487  000508  6850               	setf	_NovaTecla^0,c
  3488                           
  3489                           ;Menu.c: 196:     LcClear();
  3490  00050A  EC8A  F00D         	call	_LcClear	;wreg free
  3491                           
  3492                           ;Menu.c: 197:     LcNewString("TIME REMAINING:");
  3493  00050E  0E92               	movlw	low STR_7
  3494  000510  D9B9               	call	PL6	;call to abstracted procedure
  3495  000512  EC56  F00E         	call	_LcNewString	;wreg free
  3496                           
  3497                           ;Menu.c: 198:     JJuguem(indexUsuari);
  3498  000516  502E               	movf	_indexUsuari^0,w,c
  3499  000518  EC7A  F00E         	call	_JJuguem
  3500  00051C                     l5187:
  3501                           
  3502                           ;Menu.c: 199:     state = 21;
  3503  00051C  0E15               	movlw	21
  3504  00051E  6E2C               	movwf	menu@state^0,c
  3505                           
  3506                           ;Menu.c: 200:    }
  3507  000520  0C15               	retlw	21
  3508  000522                     l5189:
  3509  000522  0E0B               	movlw	11
  3510  000524  1850               	xorwf	_NovaTecla^0,w,c
  3511  000526  A4D8               	btfss	status,2,c
  3512  000528  0012               	return	
  3513  00052A  0E04               	movlw	4
  3514  00052C  182F               	xorwf	_menuDalt^0,w,c
  3515  00052E  A4D8               	btfss	status,2,c
  3516  000530  0012               	return	
  3517                           
  3518                           ;Menu.c: 202:     NoFerMenu();
  3519  000532  ECD2  F00E         	call	_NoFerMenu	;wreg free
  3520                           
  3521                           ;Menu.c: 203:     LcClear();
  3522  000536  EC8A  F00D         	call	_LcClear	;wreg free
  3523                           
  3524                           ;Menu.c: 204:     menuDalt = 0;
  3525  00053A  6A2F               	clrf	_menuDalt^0,c
  3526                           
  3527                           ;Menu.c: 205:     NovaTecla = -1;
  3528  00053C  6850               	setf	_NovaTecla^0,c
  3529                           
  3530                           ;Menu.c: 206:     calculateShowUsers();
  3531  00053E  ECC4  F00E         	call	_calculateShowUsers	;wreg free
  3532                           
  3533                           ;Menu.c: 207:     state = 30;
  3534  000542  0E1E               	movlw	30
  3535  000544  6E2C               	movwf	menu@state^0,c
  3536  000546  0C1E               	retlw	30
  3537  000548                     l5205:
  3538                           
  3539                           ;Menu.c: 211:    if (LcLliure()) {
  3540  000548  EC5C  F00E         	call	_LcLliure	;wreg free
  3541  00054C  A0D8               	btfss	status,0,c
  3542  00054E  0012               	return	
  3543                           
  3544                           ;Menu.c: 212:     LcNewString(UgetUserName(indexUsuari));
  3545  000550  502E               	movf	_indexUsuari^0,w,c
  3546  000552  EC09  F00E         	call	_UgetUserName
  3547  000556  C063  F066         	movff	?_UgetUserName,LcNewString@new_s
  3548  00055A  C064  F067         	movff	?_UgetUserName+1,LcNewString@new_s+1
  3549  00055E  EC56  F00E         	call	_LcNewString	;wreg free
  3550                           
  3551                           ;Menu.c: 213:     TiResetTics(timerMenu);
  3552  000562  5030               	movf	_timerMenu^0,w,c
  3553  000564  ECE5  F00D         	call	_TiResetTics
  3554                           
  3555                           ;Menu.c: 214:     state = 15;
  3556  000568  0E0F               	movlw	15
  3557  00056A  6E2C               	movwf	menu@state^0,c
  3558  00056C  0C0F               	retlw	15
  3559  00056E                     l5213:
  3560                           
  3561                           ;Menu.c: 218:    if (TiGetTics(timerMenu) > 2410) {
  3562  00056E  5030               	movf	_timerMenu^0,w,c
  3563  000570  EC41  F00D         	call	_TiGetTics
  3564  000574  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  3565  000576  0012               	return	
  3566  000578  0E6B               	movlw	107
  3567  00057A  5C63               	subwf	?_TiGetTics^0,w,c
  3568  00057C  0E09               	movlw	9
  3569  00057E  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  3570  000580  E301 D77C          	bc	l5109
  3571  000584  0012               	return	
  3572  000586                     l5217:
  3573                           
  3574                           ;Menu.c: 223:    if (LcLliure() && NovaTecla > -1 && NovaTecla < 10) {
  3575  000586  EC5C  F00E         	call	_LcLliure	;wreg free
  3576  00058A  E347               	bnc	l5283
  3577  00058C  BE50               	btfsc	_NovaTecla^0,7,c
  3578  00058E  D045               	goto	l5283
  3579  000590  5050               	movf	_NovaTecla^0,w,c
  3580  000592  0A80               	xorlw	128
  3581  000594  0F76               	addlw	-138
  3582  000596  E241               	bc	l5283
  3583                           
  3584                           ;Menu.c: 224:     LcGotoXY(0,1);
  3585  000598  D980               	call	PL34	;call to abstracted procedure
  3586  00059A  ECE9  F00C         	call	_LcGotoXY
  3587                           
  3588                           ;Menu.c: 225:     horaTmp[0] = NovaTecla+48;
  3589  00059E  5050               	movf	_NovaTecla^0,w,c
  3590  0005A0  0F30               	addlw	48
  3591  0005A2  6E3E               	movwf	_horaTmp^0,c
  3592                           
  3593                           ;Menu.c: 226:     LcPutChar(horaTmp[0]);
  3594  0005A4  503E               	movf	_horaTmp^0,w,c
  3595  0005A6  EC0F  F00C         	call	_LcPutChar
  3596                           
  3597                           ;Menu.c: 227:     NovaTecla = -1;
  3598  0005AA  6850               	setf	_NovaTecla^0,c
  3599                           
  3600                           ;Menu.c: 228:     state = 17;
  3601  0005AC  0E11               	movlw	17
  3602  0005AE                     L1:
  3603  0005AE  6E2C               	movwf	menu@state^0,c
  3604                           
  3605                           ;Menu.c: 229:    }
  3606  0005B0  0012               	return	
  3607  0005B2                     L2:
  3608  0005B2  1850               	xorwf	_NovaTecla^0,w,c
  3609  0005B4  E101 D75F          	bz	l5103
  3610  0005B8  0012               	return	
  3611  0005BA                     l5237:
  3612                           
  3613                           ;Menu.c: 235:    if (NovaTecla > -1 && NovaTecla < 10) {
  3614  0005BA  BE50               	btfsc	_NovaTecla^0,7,c
  3615  0005BC  D02E               	goto	l5283
  3616  0005BE  5050               	movf	_NovaTecla^0,w,c
  3617  0005C0  0A80               	xorlw	128
  3618  0005C2  0F76               	addlw	-138
  3619  0005C4  E22A               	bc	l5283
  3620                           
  3621                           ;Menu.c: 236:     horaTmp[1] = NovaTecla+48;
  3622  0005C6  5050               	movf	_NovaTecla^0,w,c
  3623  0005C8  0F30               	addlw	48
  3624  0005CA  6E3F               	movwf	(_horaTmp+1)^0,c
  3625                           
  3626                           ;Menu.c: 237:     LcPutChar(horaTmp[1]);
  3627  0005CC  503F               	movf	(_horaTmp+1)^0,w,c
  3628  0005CE  EC0F  F00C         	call	_LcPutChar
  3629                           
  3630                           ;Menu.c: 238:     NovaTecla = -1;
  3631  0005D2  6850               	setf	_NovaTecla^0,c
  3632                           
  3633                           ;Menu.c: 239:     LcPutChar(':');
  3634  0005D4  0E3A               	movlw	58
  3635  0005D6  EC0F  F00C         	call	_LcPutChar
  3636                           
  3637                           ;Menu.c: 240:     state = 18;
  3638  0005DA  0E12               	movlw	18
  3639  0005DC  D7E8               	goto	L1
  3640  0005DE                     l5255:
  3641                           
  3642                           ;Menu.c: 247:    if (NovaTecla > -1 && NovaTecla < 10) {
  3643  0005DE  BE50               	btfsc	_NovaTecla^0,7,c
  3644  0005E0  D01C               	goto	l5283
  3645  0005E2  5050               	movf	_NovaTecla^0,w,c
  3646  0005E4  0A80               	xorlw	128
  3647  0005E6  0F76               	addlw	-138
  3648  0005E8  E218               	bc	l5283
  3649                           
  3650                           ;Menu.c: 248:     horaTmp[2] = NovaTecla+48;
  3651  0005EA  5050               	movf	_NovaTecla^0,w,c
  3652  0005EC  0F30               	addlw	48
  3653  0005EE  6E40               	movwf	(_horaTmp+2)^0,c
  3654                           
  3655                           ;Menu.c: 249:     LcPutChar(horaTmp[2]);
  3656  0005F0  5040               	movf	(_horaTmp+2)^0,w,c
  3657  0005F2  EC0F  F00C         	call	_LcPutChar
  3658                           
  3659                           ;Menu.c: 250:     NovaTecla = -1;
  3660  0005F6  6850               	setf	_NovaTecla^0,c
  3661                           
  3662                           ;Menu.c: 251:     state = 19;
  3663  0005F8  0E13               	movlw	19
  3664  0005FA  D7D9               	goto	L1
  3665  0005FC                     l5271:
  3666                           
  3667                           ;Menu.c: 258:    if (NovaTecla > -1 && NovaTecla < 10) {
  3668  0005FC  BE50               	btfsc	_NovaTecla^0,7,c
  3669  0005FE  D00D               	goto	l5283
  3670  000600  5050               	movf	_NovaTecla^0,w,c
  3671  000602  0A80               	xorlw	128
  3672  000604  0F76               	addlw	-138
  3673  000606  E209               	bc	l5283
  3674                           
  3675                           ;Menu.c: 259:     horaTmp[3] = NovaTecla+48;
  3676  000608  5050               	movf	_NovaTecla^0,w,c
  3677  00060A  0F30               	addlw	48
  3678  00060C  6E41               	movwf	(_horaTmp+3)^0,c
  3679                           
  3680                           ;Menu.c: 260:     LcPutChar(horaTmp[3]);
  3681  00060E  5041               	movf	(_horaTmp+3)^0,w,c
  3682  000610  EC0F  F00C         	call	_LcPutChar
  3683                           
  3684                           ;Menu.c: 261:     NovaTecla = -1;
  3685  000614  6850               	setf	_NovaTecla^0,c
  3686                           
  3687                           ;Menu.c: 262:     state = 20;
  3688  000616  0E14               	movlw	20
  3689  000618  D7CA               	goto	L1
  3690  00061A                     l5283:
  3691  00061A  0E0A               	movlw	10
  3692  00061C  D7CA               	goto	L2
  3693  00061E                     l5287:
  3694                           
  3695                           ;Menu.c: 269:    if (NovaTecla == 11) {
  3696  00061E  0E0B               	movlw	11
  3697  000620  1850               	xorwf	_NovaTecla^0,w,c
  3698  000622  E1FB               	bnz	l5283
  3699                           
  3700                           ;Menu.c: 270:     HActualitzaHora(horaTmp);
  3701  000624  0E3E               	movlw	low _horaTmp
  3702  000626  6E63               	movwf	HActualitzaHora@nova^0,c
  3703  000628  ECCF  F00C         	call	_HActualitzaHora	;wreg free
  3704                           
  3705                           ;Menu.c: 271:     NovaTecla = -1;
  3706  00062C  6850               	setf	_NovaTecla^0,c
  3707  00062E  D723               	goto	l5103
  3708  000630                     l5299:
  3709                           
  3710                           ;Menu.c: 279:    if ((NovaTecla == 10 && LcLliure()) || checkHoraAcabat()) {
  3711  000630  0E0A               	movlw	10
  3712  000632  1850               	xorwf	_NovaTecla^0,w,c
  3713  000634  E103               	bnz	u4840
  3714  000636  EC5C  F00E         	call	_LcLliure	;wreg free
  3715  00063A  E203               	bc	u4850
  3716  00063C                     u4840:
  3717  00063C  EC3E  F00E         	call	_checkHoraAcabat	;wreg free
  3718  000640  E307               	bnc	l5311
  3719  000642                     u4850:
  3720                           
  3721                           ;Menu.c: 280:     LcClear();
  3722  000642  EC8A  F00D         	call	_LcClear	;wreg free
  3723                           
  3724                           ;Menu.c: 281:     JendGame();
  3725  000646  ECD4  F00E         	call	_JendGame	;wreg free
  3726                           
  3727                           ;Menu.c: 282:     state = 22;
  3728  00064A  0E16               	movlw	22
  3729  00064C  6E2C               	movwf	menu@state^0,c
  3730                           
  3731                           ;Menu.c: 283:    }
  3732  00064E  0C16               	retlw	22
  3733  000650                     l5311:
  3734  000650  5050               	movf	_NovaTecla^0,w,c
  3735  000652  0A80               	xorlw	128
  3736  000654  0F7F               	addlw	-129
  3737  000656  E309               	bnc	l5321
  3738  000658  5050               	movf	_NovaTecla^0,w,c
  3739  00065A  0A80               	xorlw	128
  3740  00065C  0F76               	addlw	-138
  3741  00065E  E205               	bc	l5321
  3742                           
  3743                           ;Menu.c: 285:     JnovaTecla(NovaTecla);
  3744  000660  5050               	movf	_NovaTecla^0,w,c
  3745  000662  EC72  F00E         	call	_JnovaTecla
  3746                           
  3747                           ;Menu.c: 286:     NovaTecla = -1;
  3748  000666  6850               	setf	_NovaTecla^0,c
  3749  000668  D759               	goto	l5187
  3750  00066A                     l5321:
  3751  00066A  BE4E               	btfsc	_novaDireccio^0,7,c
  3752  00066C  0012               	return	
  3753                           
  3754                           ;Menu.c: 290:     JnovaDireccio(novaDireccio);
  3755  00066E  504E               	movf	_novaDireccio^0,w,c
  3756  000670  EC76  F00E         	call	_JnovaDireccio
  3757                           
  3758                           ;Menu.c: 291:     novaDireccio = -1;
  3759  000674  684E               	setf	_novaDireccio^0,c
  3760  000676  D752               	goto	l5187
  3761  000678                     l5329:
  3762                           
  3763                           ;Menu.c: 296:    if (SIOHaAcabatPuntuacions() && NovaTecla == 11) {
  3764  000678  ECD0  F00E         	call	_SIOHaAcabatPuntuacions	;wreg free
  3765  00067C  0900               	iorlw	0
  3766  00067E  B4D8               	btfsc	status,2,c
  3767  000680  0012               	return	
  3768  000682  0E0B               	movlw	11
  3769  000684  D796               	goto	L2
  3770  000686                     l5335:
  3771                           
  3772                           ;Menu.c: 301:    if (LcLliure()) {
  3773  000686  EC5C  F00E         	call	_LcLliure	;wreg free
  3774  00068A  A0D8               	btfss	status,0,c
  3775  00068C  0012               	return	
  3776                           
  3777                           ;Menu.c: 302:     if (menuDalt == UgetNumUsuaris()){
  3778  00068E  ECC6  F00E         	call	_UgetNumUsuaris	;wreg free
  3779  000692  182F               	xorwf	_menuDalt^0,w,c
  3780  000694  E101               	bnz	l5341
  3781                           
  3782                           ;Menu.c: 303:       menuDalt = 0;
  3783  000696  6A2F               	clrf	_menuDalt^0,c
  3784  000698                     l5341:
  3785                           
  3786                           ;Menu.c: 305:     LcGotoXY(0,0);
  3787  000698  0E00               	movlw	0
  3788  00069A  6E6B               	movwf	LcGotoXY@Row^0,c
  3789  00069C  ECE9  F00C         	call	_LcGotoXY
  3790                           
  3791                           ;Menu.c: 306:     LcNewString(getArrayShowUsers(menuDalt));
  3792  0006A0  502F               	movf	_menuDalt^0,w,c
  3793  0006A2  ECC9  F00D         	call	_getArrayShowUsers
  3794  0006A6  D8F4               	call	PL28	;call to abstracted procedure
  3795  0006A8  EC56  F00E         	call	_LcNewString	;wreg free
  3796                           
  3797                           ;Menu.c: 307:     menuDalt++;
  3798  0006AC  2A2F               	incf	_menuDalt^0,f,c
  3799                           
  3800                           ;Menu.c: 308:     state = 24;
  3801  0006AE  0E18               	movlw	24
  3802  0006B0  6E2C               	movwf	menu@state^0,c
  3803  0006B2  0C18               	retlw	24
  3804  0006B4                     l5347:
  3805                           
  3806                           ;Menu.c: 312:    if (LcLliure()) {
  3807  0006B4  EC5C  F00E         	call	_LcLliure	;wreg free
  3808  0006B8  A0D8               	btfss	status,0,c
  3809  0006BA  0012               	return	
  3810                           
  3811                           ;Menu.c: 313:     if (menuDalt < UgetNumUsuaris()){
  3812  0006BC  ECC6  F00E         	call	_UgetNumUsuaris	;wreg free
  3813  0006C0  602F               	cpfslt	_menuDalt^0,c
  3814  0006C2  D00B               	goto	l598
  3815                           
  3816                           ;Menu.c: 314:       LcGotoXY(0,1);
  3817  0006C4  D8EA               	call	PL34	;call to abstracted procedure
  3818  0006C6  ECE9  F00C         	call	_LcGotoXY
  3819                           
  3820                           ;Menu.c: 315:       LcNewString(getArrayShowUsers(menuDalt));
  3821  0006CA  502F               	movf	_menuDalt^0,w,c
  3822  0006CC  ECC9  F00D         	call	_getArrayShowUsers
  3823  0006D0  D8DF               	call	PL28	;call to abstracted procedure
  3824  0006D2  EC56  F00E         	call	_LcNewString	;wreg free
  3825                           
  3826                           ;Menu.c: 316:       menuDalt++;
  3827  0006D6  2A2F               	incf	_menuDalt^0,f,c
  3828                           
  3829                           ;Menu.c: 317:     } else {
  3830  0006D8  D001               	goto	l5355
  3831  0006DA                     l598:
  3832                           
  3833                           ;Menu.c: 318:       menuDalt = 0;
  3834  0006DA  6A2F               	clrf	_menuDalt^0,c
  3835  0006DC                     l5355:
  3836                           
  3837                           ;Menu.c: 320:     state = 25;
  3838  0006DC  0E19               	movlw	25
  3839  0006DE  6E2C               	movwf	menu@state^0,c
  3840  0006E0  0C19               	retlw	25
  3841  0006E2                     l5357:
  3842                           
  3843                           ;Menu.c: 324:    if (LcLliure()) {
  3844  0006E2  EC5C  F00E         	call	_LcLliure	;wreg free
  3845  0006E6  A0D8               	btfss	status,0,c
  3846  0006E8  0012               	return	
  3847                           
  3848                           ;Menu.c: 325:     if (menuDalt == UgetNumUsuaris()){
  3849  0006EA  ECC6  F00E         	call	_UgetNumUsuaris	;wreg free
  3850  0006EE  182F               	xorwf	_menuDalt^0,w,c
  3851  0006F0  E101               	bnz	l5363
  3852                           
  3853                           ;Menu.c: 326:       menuDalt = 0;
  3854  0006F2  6A2F               	clrf	_menuDalt^0,c
  3855  0006F4                     l5363:
  3856                           
  3857                           ;Menu.c: 328:     LcGotoXY(16,0);
  3858  0006F4  0E00               	movlw	0
  3859  0006F6  6E6B               	movwf	LcGotoXY@Row^0,c
  3860  0006F8  0E10               	movlw	16
  3861  0006FA  ECE9  F00C         	call	_LcGotoXY
  3862                           
  3863                           ;Menu.c: 329:     LcNewString(getArrayShowUsers(menuDalt));
  3864  0006FE  502F               	movf	_menuDalt^0,w,c
  3865  000700  ECC9  F00D         	call	_getArrayShowUsers
  3866  000704  D8C5               	call	PL28	;call to abstracted procedure
  3867  000706  EC56  F00E         	call	_LcNewString	;wreg free
  3868                           
  3869                           ;Menu.c: 330:     state = 26;
  3870  00070A  0E1A               	movlw	26
  3871  00070C  6E2C               	movwf	menu@state^0,c
  3872  00070E  0C1A               	retlw	26
  3873  000710                     l5367:
  3874                           
  3875                           ;Menu.c: 334:    if (LcLliure()) {
  3876  000710  EC5C  F00E         	call	_LcLliure	;wreg free
  3877  000714  A0D8               	btfss	status,0,c
  3878  000716  0012               	return	
  3879                           
  3880                           ;Menu.c: 335:     if (menuDalt+1 < UgetNumUsuaris()){
  3881  000718  ECC6  F00E         	call	_UgetNumUsuaris	;wreg free
  3882  00071C  6E72               	movwf	??_menu^0,c
  3883  00071E  6A73               	clrf	(??_menu+1)^0,c
  3884  000720  502F               	movf	_menuDalt^0,w,c
  3885  000722  6E74               	movwf	(??_menu+2)^0,c
  3886  000724  6A75               	clrf	(??_menu+3)^0,c
  3887  000726  2A74               	incf	(??_menu+2)^0,f,c
  3888  000728  0E00               	movlw	0
  3889  00072A  2275               	addwfc	(??_menu+3)^0,f,c
  3890  00072C  5072               	movf	??_menu^0,w,c
  3891  00072E  5C74               	subwf	(??_menu+2)^0,w,c
  3892  000730  5075               	movf	(??_menu+3)^0,w,c
  3893  000732  0A80               	xorlw	128
  3894  000734  6E76               	movwf	(??_menu+4)^0,c
  3895  000736  5073               	movf	(??_menu+1)^0,w,c
  3896  000738  0A80               	xorlw	128
  3897  00073A  5876               	subwfb	(??_menu+4)^0,w,c
  3898  00073C  E20B               	bc	l5373
  3899                           
  3900                           ;Menu.c: 336:       LcGotoXY(16,1);
  3901  00073E  0E01               	movlw	1
  3902  000740  6E6B               	movwf	LcGotoXY@Row^0,c
  3903  000742  0E10               	movlw	16
  3904  000744  ECE9  F00C         	call	_LcGotoXY
  3905                           
  3906                           ;Menu.c: 337:       LcNewString(getArrayShowUsers(menuDalt+1));
  3907  000748  282F               	incf	_menuDalt^0,w,c
  3908  00074A  ECC9  F00D         	call	_getArrayShowUsers
  3909  00074E  D8A0               	call	PL28	;call to abstracted procedure
  3910  000750  EC56  F00E         	call	_LcNewString	;wreg free
  3911  000754                     l5373:
  3912                           
  3913                           ;Menu.c: 339:     state = 27;
  3914  000754  0E1B               	movlw	27
  3915  000756  6E2C               	movwf	menu@state^0,c
  3916  000758  0C1B               	retlw	27
  3917  00075A                     l5375:
  3918                           
  3919                           ;Menu.c: 343:    if (TiGetTics(timerMenu) > 400) {
  3920  00075A  5030               	movf	_timerMenu^0,w,c
  3921  00075C  EC41  F00D         	call	_TiGetTics
  3922  000760  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  3923  000762  D008               	goto	l5379
  3924  000764  0E91               	movlw	145
  3925  000766  5C63               	subwf	?_TiGetTics^0,w,c
  3926  000768  0E01               	movlw	1
  3927  00076A  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  3928  00076C  E303               	bnc	l5379
  3929                           
  3930                           ;Menu.c: 344:     state = 29;
  3931  00076E  0E1D               	movlw	29
  3932  000770  6E2C               	movwf	menu@state^0,c
  3933                           
  3934                           ;Menu.c: 345:    }
  3935  000772  0C1D               	retlw	29
  3936  000774                     l5379:
  3937  000774  0E0B               	movlw	11
  3938  000776  1850               	xorwf	_NovaTecla^0,w,c
  3939  000778  A4D8               	btfss	status,2,c
  3940  00077A  0012               	return	
  3941                           
  3942                           ;Menu.c: 347:     menuDalt = 0;
  3943  00077C  6A2F               	clrf	_menuDalt^0,c
  3944  00077E  D67B               	goto	l5103
  3945  000780                     l5385:
  3946                           
  3947                           ;Menu.c: 352:    if (pos > 15) {
  3948  000780  0E0F               	movlw	15
  3949  000782  642D               	cpfsgt	_pos^0,c
  3950  000784  D005               	goto	l5391
  3951                           
  3952                           ;Menu.c: 353:     LcClear();
  3953  000786  EC8A  F00D         	call	_LcClear	;wreg free
  3954  00078A                     l5389:
  3955                           
  3956                           ;Menu.c: 354:     state = 23;
  3957  00078A  0E17               	movlw	23
  3958  00078C  6E2C               	movwf	menu@state^0,c
  3959                           
  3960                           ;Menu.c: 355:    }
  3961  00078E  0C17               	retlw	23
  3962  000790                     l5391:
  3963  000790  0E10               	movlw	16
  3964  000792  602D               	cpfslt	_pos^0,c
  3965  000794  0C10               	retlw	16
  3966                           
  3967                           ;Menu.c: 357:     TiResetTics(timerMenu);
  3968  000796  5030               	movf	_timerMenu^0,w,c
  3969  000798  ECE5  F00D         	call	_TiResetTics
  3970                           
  3971                           ;Menu.c: 358:     LcScroll();
  3972  00079C  ECB3  F00E         	call	_LcScroll	;wreg free
  3973                           
  3974                           ;Menu.c: 359:     pos++;
  3975  0007A0  2A2D               	incf	_pos^0,f,c
  3976  0007A2                     l5399:
  3977                           
  3978                           ;Menu.c: 360:     state = 28;
  3979  0007A2  0E1C               	movlw	28
  3980  0007A4  6E2C               	movwf	menu@state^0,c
  3981  0007A6  0C1C               	retlw	28
  3982  0007A8                     l5401:
  3983                           
  3984                           ;Menu.c: 364:    if (LcLliure()) {
  3985  0007A8  EC5C  F00E         	call	_LcLliure	;wreg free
  3986  0007AC  A0D8               	btfss	status,0,c
  3987  0007AE  0012               	return	
  3988                           
  3989                           ;Menu.c: 365:     TiResetTics(timerMenu);
  3990  0007B0  5030               	movf	_timerMenu^0,w,c
  3991  0007B2  ECE5  F00D         	call	_TiResetTics
  3992                           
  3993                           ;Menu.c: 366:     pos = 0;
  3994  0007B6  6A2D               	clrf	_pos^0,c
  3995  0007B8  D7F4               	goto	l5399
  3996  0007BA                     l5409:
  3997                           
  3998                           ;Menu.c: 371:    if (UshowUsersCalculat()) {
  3999  0007BA  EC44  F00E         	call	_UshowUsersCalculat	;wreg free
  4000  0007BE  E2E5               	bc	l5389
  4001  0007C0  0012               	return	
  4002  0007C2                     l5415:
  4003  0007C2  502C               	movf	menu@state^0,w,c
  4004  0007C4  6E72               	movwf	??_menu^0,c
  4005  0007C6  6A73               	clrf	(??_menu+1)^0,c
  4006                           
  4007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4008                           ; Switch size 1, requested type "space"
  4009                           ; Number of cases is 1, Range of values is 0 to 0
  4010                           ; switch strategies available:
  4011                           ; Name         Instructions Cycles
  4012                           ; simple_byte            4     3 (average)
  4013                           ;	Chosen strategy is simple_byte
  4014  0007C8  5073               	movf	(??_menu+1)^0,w,c
  4015  0007CA  A4D8               	btfss	status,2,c
  4016  0007CC  0012               	return	
  4017                           
  4018                           ; Switch size 1, requested type "space"
  4019                           ; Number of cases is 31, Range of values is 0 to 30
  4020                           ; switch strategies available:
  4021                           ; Name         Instructions Cycles
  4022                           ; simple_byte           94    48 (average)
  4023                           ;	Chosen strategy is simple_byte
  4024  0007CE  5072               	movf	??_menu^0,w,c
  4025  0007D0  E101 D592          	bz	l4957
  4026  0007D4  0A01               	xorlw	1	; case 1
  4027  0007D6  E101 D598          	bz	l4963
  4028  0007DA  0A03               	xorlw	3	; case 2
  4029  0007DC  E101 D5A4          	bz	l4973
  4030  0007E0  0A01               	xorlw	1	; case 3
  4031  0007E2  E101 D5B1          	bz	l503
  4032  0007E6  0A07               	xorlw	7	; case 4
  4033  0007E8  E101 D5B9          	bz	l4993
  4034  0007EC  0A01               	xorlw	1	; case 5
  4035  0007EE  E101 D5C4          	bz	l5001
  4036  0007F2  0A03               	xorlw	3	; case 6
  4037  0007F4  E101 D5D0          	bz	l5011
  4038  0007F8  0A01               	xorlw	1	; case 7
  4039  0007FA  E101 D5E3          	bz	l5025
  4040  0007FE  0A0F               	xorlw	15	; case 8
  4041  000800  E101 D5FD          	bz	l5053
  4042  000804  0A01               	xorlw	1	; case 9
  4043  000806  E101 D610          	bz	l5067
  4044  00080A  0A03               	xorlw	3	; case 10
  4045  00080C  E101 D629          	bz	l5097
  4046  000810  0A01               	xorlw	1	; case 11
  4047  000812  E101 D630          	bz	l5103
  4048  000816  0A07               	xorlw	7	; case 12
  4049  000818  E101 D632          	bz	l5119
  4050  00081C  0A01               	xorlw	1	; case 13
  4051  00081E  E101 D63B          	bz	l5131
  4052  000822  0A03               	xorlw	3	; case 14
  4053  000824  E101 D690          	bz	l5205
  4054  000828  0A01               	xorlw	1	; case 15
  4055  00082A  E101 D6A0          	bz	l5213
  4056  00082E  0A1F               	xorlw	31	; case 16
  4057  000830  E101 D6A9          	bz	l5217
  4058  000834  0A01               	xorlw	1	; case 17
  4059  000836  E101 D6C0          	bz	l5237
  4060  00083A  0A03               	xorlw	3	; case 18
  4061  00083C  E101 D6CF          	bz	l5255
  4062  000840  0A01               	xorlw	1	; case 19
  4063  000842  E101 D6DB          	bz	l5271
  4064  000846  0A07               	xorlw	7	; case 20
  4065  000848  E101 D6E9          	bz	l5287
  4066  00084C  0A01               	xorlw	1	; case 21
  4067  00084E  E101 D6EF          	bz	l5299
  4068  000852  0A03               	xorlw	3	; case 22
  4069  000854  E101 D710          	bz	l5329
  4070  000858  0A01               	xorlw	1	; case 23
  4071  00085A  E101 D714          	bz	l5335
  4072  00085E  0A0F               	xorlw	15	; case 24
  4073  000860  E101 D728          	bz	l5347
  4074  000864  0A01               	xorlw	1	; case 25
  4075  000866  E101 D73C          	bz	l5357
  4076  00086A  0A03               	xorlw	3	; case 26
  4077  00086C  E101 D750          	bz	l5367
  4078  000870  0A01               	xorlw	1	; case 27
  4079  000872  E09A               	bz	l5401
  4080  000874  0A07               	xorlw	7	; case 28
  4081  000876  E101 D770          	bz	l5375
  4082  00087A  0A01               	xorlw	1	; case 29
  4083  00087C  E081               	bz	l5385
  4084  00087E  0A03               	xorlw	3	; case 30
  4085  000880  E09C               	bz	l5409
  4086  000882  0012               	return		;funcret
  4087  000884                     __end_of_menu:
  4088                           	callstack 0
  4089  000884                     PL6:
  4090                           	callstack 24
  4091  000884  6E66               	movwf	LcNewString@new_s^0,c
  4092  000886  5066               	movf	LcNewString@new_s^0,w,c
  4093  000888  A4D8               	btfss	status,2,c
  4094  00088A  0E02               	movlw	high __smallconst
  4095  00088C  6E67               	movwf	(LcNewString@new_s+1)^0,c
  4096  00088E  0012               	return	
  4097  000890                     __end_ofPL6:
  4098                           	callstack 0
  4099  000890                     PL28:
  4100                           	callstack 24
  4101  000890  C063  F066         	movff	?_getArrayShowUsers,LcNewString@new_s
  4102  000894  C064  F067         	movff	?_getArrayShowUsers+1,LcNewString@new_s+1
  4103  000898  0012               	return	
  4104  00089A                     __end_ofPL28:
  4105                           	callstack 0
  4106  00089A                     PL34:
  4107                           	callstack 24
  4108  00089A  0E01               	movlw	1
  4109  00089C  6E6B               	movwf	LcGotoXY@Row^0,c
  4110  00089E  0C00               	retlw	0
  4111  0008A0                     __end_ofPL34:
  4112                           	callstack 0
  4113  0008A0                     PL72:
  4114                           	callstack 24
  4115  0008A0  6850               	setf	_NovaTecla^0,c
  4116  0008A2  684F               	setf	_novaLletra^0,c
  4117  0008A4  6A31               	clrf	_tmp^0,c
  4118  0008A6  0012               	return	
  4119  0008A8                     __end_ofPL72:
  4120                           	callstack 0
  4121  0008A8                     PL74:
  4122                           	callstack 24
  4123  0008A8  2A31               	incf	_tmp^0,f,c
  4124  0008AA  6850               	setf	_NovaTecla^0,c
  4125  0008AC  684F               	setf	_novaLletra^0,c
  4126  0008AE  0012               	return	
  4127  0008B0                     __end_ofPL74:
  4128                           	callstack 0
  4129                           
  4130 ;; *************** function _getArrayShowUsers *****************
  4131 ;; Defined at:
  4132 ;;		line 80 in file "Usuaris.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  quin            1    wreg     unsigned char 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  quin            1    7[COMRAM] unsigned char 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  2    5[COMRAM] PTR unsigned char 
  4139 ;; Registers used:
  4140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/1
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMRAM   BANK0   BANK1
  4146 ;;      Params:         2       0       0
  4147 ;;      Locals:         1       0       0
  4148 ;;      Temps:          0       0       0
  4149 ;;      Totals:         3       0       0
  4150 ;;Total ram usage:        3 bytes
  4151 ;; Hardware stack levels used: 1
  4152 ;; Hardware stack levels required when called: 2
  4153 ;; This function calls:
  4154 ;;		Nothing
  4155 ;; This function is called by:
  4156 ;;		_menu
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text22
  4161  001B92                     __ptext22:
  4162                           	callstack 0
  4163  001B92                     _getArrayShowUsers:
  4164                           	callstack 27
  4165                           
  4166                           ;incstack = 0
  4167                           ;getArrayShowUsers@quin stored from wreg
  4168  001B92  6E65               	movwf	getArrayShowUsers@quin^0,c
  4169                           
  4170                           ;Usuaris.c: 82:     return usuaris[arrayShowUsers[quin]].username;
  4171  001B94  5065               	movf	getArrayShowUsers@quin^0,w,c
  4172  001B96  0F01               	addlw	low _arrayShowUsers
  4173  001B98  6ED9               	movwf	fsr2l,c
  4174  001B9A  6ADA               	clrf	fsr2h,c
  4175  001B9C  50DF               	movf	indf2,w,c
  4176  001B9E  0D17               	mullw	23
  4177  001BA0  0E00               	movlw	low _usuaris
  4178  001BA2  24F3               	addwf	243,w,c
  4179  001BA4  6E63               	movwf	?_getArrayShowUsers^0,c
  4180  001BA6  0E01               	movlw	high _usuaris
  4181  001BA8  20F4               	addwfc	prodh,w,c
  4182  001BAA  6E64               	movwf	(?_getArrayShowUsers+1)^0,c
  4183  001BAC  0012               	return		;funcret
  4184  001BAE                     __end_of_getArrayShowUsers:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function _checkHoraAcabat *****************
  4188 ;; Defined at:
  4189 ;;		line 41 in file "Hora.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;		None               void
  4196 ;; Registers used:
  4197 ;;		status,0
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/1
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1
  4203 ;;      Params:         0       0       0
  4204 ;;      Locals:         0       0       0
  4205 ;;      Temps:          0       0       0
  4206 ;;      Totals:         0       0       0
  4207 ;;Total ram usage:        0 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 2
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_menu
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text23
  4218  001C7C                     __ptext23:
  4219                           	callstack 0
  4220  001C7C                     _checkHoraAcabat:
  4221                           	callstack 27
  4222                           
  4223                           ;Hora.c: 42:     return tempsAcabat;
  4224                           
  4225                           ;incstack = 0
  4226  001C7C  B677               	btfsc	(_tempsAcabat/(0+8))^0,_tempsAcabat& (0+7),c
  4227  001C7E  D002               	goto	l2191
  4228  001C80  90D8               	bcf	status,0,c
  4229  001C82  0012               	return	
  4230  001C84                     l2191:
  4231  001C84  80D8               	bsf	status,0,c
  4232  001C86  0012               	return		;funcret
  4233  001C88                     __end_of_checkHoraAcabat:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _calculateShowUsers *****************
  4237 ;; Defined at:
  4238 ;;		line 180 in file "Usuaris.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		None
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/1
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1
  4252 ;;      Params:         0       0       0
  4253 ;;      Locals:         0       0       0
  4254 ;;      Temps:          0       0       0
  4255 ;;      Totals:         0       0       0
  4256 ;;Total ram usage:        0 bytes
  4257 ;; Hardware stack levels used: 1
  4258 ;; Hardware stack levels required when called: 2
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_menu
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text24
  4267  001D88                     __ptext24:
  4268                           	callstack 0
  4269  001D88                     _calculateShowUsers:
  4270                           	callstack 27
  4271                           
  4272                           ;Usuaris.c: 181:     do_showUsers = 1;
  4273                           
  4274                           ;incstack = 0
  4275  001D88  8878               	bsf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4276  001D8A  0012               	return		;funcret
  4277  001D8C                     __end_of_calculateShowUsers:
  4278                           	callstack 0
  4279                           
  4280 ;; *************** function _UshowUsersCalculat *****************
  4281 ;; Defined at:
  4282 ;;		line 183 in file "Usuaris.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;		None               void
  4289 ;; Registers used:
  4290 ;;		status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/1
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1
  4296 ;;      Params:         0       0       0
  4297 ;;      Locals:         0       0       0
  4298 ;;      Temps:          0       0       0
  4299 ;;      Totals:         0       0       0
  4300 ;;Total ram usage:        0 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; Hardware stack levels required when called: 2
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_menu
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text25
  4311  001C88                     __ptext25:
  4312                           	callstack 0
  4313  001C88                     _UshowUsersCalculat:
  4314                           	callstack 27
  4315                           
  4316                           ;Usuaris.c: 184:     return !do_showUsers;
  4317                           
  4318                           ;incstack = 0
  4319  001C88  A878               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  4320  001C8A  D002               	goto	l2213
  4321  001C8C  90D8               	bcf	status,0,c
  4322  001C8E  0012               	return	
  4323  001C90                     l2213:
  4324  001C90  80D8               	bsf	status,0,c
  4325  001C92  0012               	return		;funcret
  4326  001C94                     __end_of_UshowUsersCalculat:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function _UgetUserName *****************
  4330 ;; Defined at:
  4331 ;;		line 76 in file "Usuaris.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  quin            1    wreg     unsigned char 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  quin            1    7[COMRAM] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  2    5[COMRAM] PTR unsigned char 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0, prodl, prodh
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/1
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1
  4345 ;;      Params:         2       0       0
  4346 ;;      Locals:         1       0       0
  4347 ;;      Temps:          0       0       0
  4348 ;;      Totals:         3       0       0
  4349 ;;Total ram usage:        3 bytes
  4350 ;; Hardware stack levels used: 1
  4351 ;; Hardware stack levels required when called: 2
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_menu
  4356 ;;		_motorSIO
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text26
  4361  001C12                     __ptext26:
  4362                           	callstack 0
  4363  001C12                     _UgetUserName:
  4364                           	callstack 27
  4365                           
  4366                           ;incstack = 0
  4367                           ;UgetUserName@quin stored from wreg
  4368  001C12  6E65               	movwf	UgetUserName@quin^0,c
  4369                           
  4370                           ;Usuaris.c: 77:     return usuaris[quin].username;
  4371  001C14  5065               	movf	UgetUserName@quin^0,w,c
  4372  001C16  0D17               	mullw	23
  4373  001C18  0E00               	movlw	low _usuaris
  4374  001C1A  24F3               	addwf	243,w,c
  4375  001C1C  6E63               	movwf	?_UgetUserName^0,c
  4376  001C1E  0E01               	movlw	high _usuaris
  4377  001C20  20F4               	addwfc	prodh,w,c
  4378  001C22  6E64               	movwf	(?_UgetUserName+1)^0,c
  4379  001C24  0012               	return		;funcret
  4380  001C26                     __end_of_UgetUserName:
  4381                           	callstack 0
  4382                           
  4383 ;; *************** function _UgetNumUsuaris *****************
  4384 ;; Defined at:
  4385 ;;		line 52 in file "Usuaris.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;		None
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      unsigned char 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/1
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1
  4399 ;;      Params:         0       0       0
  4400 ;;      Locals:         0       0       0
  4401 ;;      Temps:          0       0       0
  4402 ;;      Totals:         0       0       0
  4403 ;;Total ram usage:        0 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 2
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_menu
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text27
  4414  001D8C                     __ptext27:
  4415                           	callstack 0
  4416  001D8C                     _UgetNumUsuaris:
  4417                           	callstack 27
  4418                           
  4419                           ;Usuaris.c: 53:     return numUsuaris;
  4420                           
  4421                           ;incstack = 0
  4422  001D8C  502B               	movf	_numUsuaris^0,w,c
  4423  001D8E  0012               	return		;funcret
  4424  001D90                     __end_of_UgetNumUsuaris:
  4425                           	callstack 0
  4426                           
  4427 ;; *************** function _UenviaPas *****************
  4428 ;; Defined at:
  4429 ;;		line 68 in file "Usuaris.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  c               1    wreg     unsigned char 
  4432 ;;  pos             1    5[COMRAM] unsigned char 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  c               1    6[COMRAM] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/1
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1
  4444 ;;      Params:         1       0       0
  4445 ;;      Locals:         1       0       0
  4446 ;;      Temps:          0       0       0
  4447 ;;      Totals:         2       0       0
  4448 ;;Total ram usage:        2 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 2
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_menu
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text28
  4459  001C38                     __ptext28:
  4460                           	callstack 0
  4461  001C38                     _UenviaPas:
  4462                           	callstack 27
  4463                           
  4464                           ;incstack = 0
  4465                           ;UenviaPas@c stored from wreg
  4466  001C38  6E64               	movwf	UenviaPas@c^0,c
  4467                           
  4468                           ;Usuaris.c: 69:     tmpPassword[pos] = c;
  4469  001C3A  5063               	movf	UenviaPas@pos^0,w,c
  4470  001C3C  0F98               	addlw	low _tmpPassword
  4471  001C3E  6ED9               	movwf	fsr2l,c
  4472  001C40  6ADA               	clrf	fsr2h,c
  4473  001C42  C064  FFDF         	movff	UenviaPas@c,indf2
  4474  001C46  0012               	return		;funcret
  4475  001C48                     __end_of_UenviaPas:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _UenviaChar *****************
  4479 ;; Defined at:
  4480 ;;		line 65 in file "Usuaris.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  c               1    wreg     unsigned char 
  4483 ;;  pos             1    5[COMRAM] unsigned char 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  c               1    6[COMRAM] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/1
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1
  4495 ;;      Params:         1       0       0
  4496 ;;      Locals:         1       0       0
  4497 ;;      Temps:          0       0       0
  4498 ;;      Totals:         2       0       0
  4499 ;;Total ram usage:        2 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; Hardware stack levels required when called: 2
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_menu
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text29
  4510  001C48                     __ptext29:
  4511                           	callstack 0
  4512  001C48                     _UenviaChar:
  4513                           	callstack 27
  4514                           
  4515                           ;incstack = 0
  4516                           ;UenviaChar@c stored from wreg
  4517  001C48  6E64               	movwf	UenviaChar@c^0,c
  4518                           
  4519                           ;Usuaris.c: 66:     tmpUsername[pos] = c;
  4520  001C4A  5063               	movf	UenviaChar@pos^0,w,c
  4521  001C4C  0FA1               	addlw	low _tmpUsername
  4522  001C4E  6ED9               	movwf	fsr2l,c
  4523  001C50  6ADA               	clrf	fsr2h,c
  4524  001C52  C064  FFDF         	movff	UenviaChar@c,indf2
  4525  001C56  0012               	return		;funcret
  4526  001C58                     __end_of_UenviaChar:
  4527                           	callstack 0
  4528                           
  4529 ;; *************** function _UcheckExistsNotFinished *****************
  4530 ;; Defined at:
  4531 ;;		line 59 in file "Usuaris.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;		None               void
  4538 ;; Registers used:
  4539 ;;		status,0
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/1
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1
  4545 ;;      Params:         0       0       0
  4546 ;;      Locals:         0       0       0
  4547 ;;      Temps:          0       0       0
  4548 ;;      Totals:         0       0       0
  4549 ;;Total ram usage:        0 bytes
  4550 ;; Hardware stack levels used: 1
  4551 ;; Hardware stack levels required when called: 2
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_menu
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text30
  4560  001C94                     __ptext30:
  4561                           	callstack 0
  4562  001C94                     _UcheckExistsNotFinished:
  4563                           	callstack 27
  4564                           
  4565                           ;Usuaris.c: 60:     return do_check_exists;
  4566                           
  4567                           ;incstack = 0
  4568  001C94  BC78               	btfsc	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4569  001C96  D002               	goto	l2151
  4570  001C98  90D8               	bcf	status,0,c
  4571  001C9A  0012               	return	
  4572  001C9C                     l2151:
  4573  001C9C  80D8               	bsf	status,0,c
  4574  001C9E  0012               	return		;funcret
  4575  001CA0                     __end_of_UcheckExistsNotFinished:
  4576                           	callstack 0
  4577                           
  4578 ;; *************** function _UcheckExistsGetError *****************
  4579 ;; Defined at:
  4580 ;;		line 62 in file "Usuaris.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      char 
  4587 ;; Registers used:
  4588 ;;		wreg, status,2
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/1
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1
  4594 ;;      Params:         0       0       0
  4595 ;;      Locals:         0       0       0
  4596 ;;      Temps:          0       0       0
  4597 ;;      Totals:         0       0       0
  4598 ;;Total ram usage:        0 bytes
  4599 ;; Hardware stack levels used: 1
  4600 ;; Hardware stack levels required when called: 2
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_menu
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text31
  4609  001D90                     __ptext31:
  4610                           	callstack 0
  4611  001D90                     _UcheckExistsGetError:
  4612                           	callstack 27
  4613                           
  4614                           ;Usuaris.c: 63:     return usuariLoguejat;
  4615                           
  4616                           ;incstack = 0
  4617  001D90  504D               	movf	_usuariLoguejat^0,w,c
  4618  001D92  0012               	return		;funcret
  4619  001D94                     __end_of_UcheckExistsGetError:
  4620                           	callstack 0
  4621                           
  4622 ;; *************** function _UcheckExists *****************
  4623 ;; Defined at:
  4624 ;;		line 56 in file "Usuaris.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		None
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/1
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1
  4638 ;;      Params:         0       0       0
  4639 ;;      Locals:         0       0       0
  4640 ;;      Temps:          0       0       0
  4641 ;;      Totals:         0       0       0
  4642 ;;Total ram usage:        0 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; Hardware stack levels required when called: 2
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_menu
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text32
  4653  001D94                     __ptext32:
  4654                           	callstack 0
  4655  001D94                     _UcheckExists:
  4656                           	callstack 27
  4657                           
  4658                           ;Usuaris.c: 57:     do_check_exists = 1;
  4659                           
  4660                           ;incstack = 0
  4661  001D94  8C78               	bsf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  4662  001D96  0012               	return		;funcret
  4663  001D98                     __end_of_UcheckExists:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _URegister *****************
  4667 ;; Defined at:
  4668 ;;		line 72 in file "Usuaris.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		None
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1
  4682 ;;      Params:         0       0       0
  4683 ;;      Locals:         0       0       0
  4684 ;;      Temps:          0       0       0
  4685 ;;      Totals:         0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 2
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_menu
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text33
  4697  001D98                     __ptext33:
  4698                           	callstack 0
  4699  001D98                     _URegister:
  4700                           	callstack 27
  4701                           
  4702                           ;Usuaris.c: 73:     do_register = 1;
  4703                           
  4704                           ;incstack = 0
  4705  001D98  8A78               	bsf	(_do_register/(0+8))^0,_do_register& (0+7),c
  4706  001D9A  0012               	return		;funcret
  4707  001D9C                     __end_of_URegister:
  4708                           	callstack 0
  4709                           
  4710 ;; *************** function _SiFerMenu *****************
  4711 ;; Defined at:
  4712 ;;		line 19 in file "GestioLCD.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		None
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/1
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1
  4726 ;;      Params:         0       0       0
  4727 ;;      Locals:         0       0       0
  4728 ;;      Temps:          0       0       0
  4729 ;;      Totals:         0       0       0
  4730 ;;Total ram usage:        0 bytes
  4731 ;; Hardware stack levels used: 1
  4732 ;; Hardware stack levels required when called: 2
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_menu
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text34
  4741  001D9C                     __ptext34:
  4742                           	callstack 0
  4743  001D9C                     _SiFerMenu:
  4744                           	callstack 27
  4745                           
  4746                           ;GestioLCD.c: 20:     ferMenu = 1;
  4747                           
  4748                           ;incstack = 0
  4749  001D9C  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4750  001D9E  0012               	return		;funcret
  4751  001DA0                     __end_of_SiFerMenu:
  4752                           	callstack 0
  4753                           
  4754 ;; *************** function _SMSon *****************
  4755 ;; Defined at:
  4756 ;;		line 129 in file "Ssms.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		None
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/1
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1
  4770 ;;      Params:         0       0       0
  4771 ;;      Locals:         0       0       0
  4772 ;;      Temps:          0       0       0
  4773 ;;      Totals:         0       0       0
  4774 ;;Total ram usage:        0 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 2
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_menu
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text35
  4785  001D5A                     __ptext35:
  4786                           	callstack 0
  4787  001D5A                     _SMSon:
  4788                           	callstack 27
  4789                           
  4790                           ;Ssms.c: 130:     setSMSon = 1;
  4791                           
  4792                           ;incstack = 0
  4793  001D5A  8079               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4794                           
  4795                           ;Ssms.c: 131:     novaTecla = -1;
  4796  001D5C  6853               	setf	_novaTecla^0,c
  4797  001D5E  0012               	return		;funcret
  4798  001D60                     __end_of_SMSon:
  4799                           	callstack 0
  4800                           
  4801 ;; *************** function _SMSoff *****************
  4802 ;; Defined at:
  4803 ;;		line 134 in file "Ssms.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		None
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/1
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1
  4817 ;;      Params:         0       0       0
  4818 ;;      Locals:         0       0       0
  4819 ;;      Temps:          0       0       0
  4820 ;;      Totals:         0       0       0
  4821 ;;Total ram usage:        0 bytes
  4822 ;; Hardware stack levels used: 1
  4823 ;; Hardware stack levels required when called: 2
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_menu
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text36
  4832  001D60                     __ptext36:
  4833                           	callstack 0
  4834  001D60                     _SMSoff:
  4835                           	callstack 27
  4836                           
  4837                           ;Ssms.c: 135:     setSMSon = 0;
  4838                           
  4839                           ;incstack = 0
  4840  001D60  9079               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  4841                           
  4842                           ;Ssms.c: 136:     novaTecla = -1;
  4843  001D62  6853               	setf	_novaTecla^0,c
  4844  001D64  0012               	return		;funcret
  4845  001D66                     __end_of_SMSoff:
  4846                           	callstack 0
  4847                           
  4848 ;; *************** function _SIOHaAcabatPuntuacions *****************
  4849 ;; Defined at:
  4850 ;;		line 36 in file "SIO.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      char 
  4857 ;; Registers used:
  4858 ;;		wreg, status,2
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/1
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1
  4864 ;;      Params:         0       0       0
  4865 ;;      Locals:         0       0       0
  4866 ;;      Temps:          0       0       0
  4867 ;;      Totals:         0       0       0
  4868 ;;Total ram usage:        0 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; Hardware stack levels required when called: 2
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_menu
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text37
  4879  001DA0                     __ptext37:
  4880                           	callstack 0
  4881  001DA0                     _SIOHaAcabatPuntuacions:
  4882                           	callstack 27
  4883                           
  4884                           ;SIO.c: 37:     return usuariActualSIO;
  4885                           
  4886                           ;incstack = 0
  4887  001DA0  5048               	movf	_usuariActualSIO^0,w,c
  4888  001DA2  0012               	return		;funcret
  4889  001DA4                     __end_of_SIOHaAcabatPuntuacions:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function _NoFerMenu *****************
  4893 ;; Defined at:
  4894 ;;		line 22 in file "GestioLCD.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		None
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/1
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1
  4908 ;;      Params:         0       0       0
  4909 ;;      Locals:         0       0       0
  4910 ;;      Temps:          0       0       0
  4911 ;;      Totals:         0       0       0
  4912 ;;Total ram usage:        0 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 2
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_menu
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text38
  4923  001DA4                     __ptext38:
  4924                           	callstack 0
  4925  001DA4                     _NoFerMenu:
  4926                           	callstack 27
  4927                           
  4928                           ;GestioLCD.c: 23:     ferMenu = 0;
  4929                           
  4930                           ;incstack = 0
  4931  001DA4  9278               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  4932  001DA6  0012               	return		;funcret
  4933  001DA8                     __end_of_NoFerMenu:
  4934                           	callstack 0
  4935                           
  4936 ;; *************** function _LcScroll *****************
  4937 ;; Defined at:
  4938 ;;		line 37 in file "LcTLCD.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;		None
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg, status,2, status,0, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/1
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1
  4952 ;;      Params:         0       0       0
  4953 ;;      Locals:         0       0       0
  4954 ;;      Temps:          0       0       0
  4955 ;;      Totals:         0       0       0
  4956 ;;Total ram usage:        0 bytes
  4957 ;; Hardware stack levels used: 1
  4958 ;; Hardware stack levels required when called: 4
  4959 ;; This function calls:
  4960 ;;		_CantaIR
  4961 ;; This function is called by:
  4962 ;;		_menu
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text39
  4967  001D66                     __ptext39:
  4968                           	callstack 0
  4969  001D66                     _LcScroll:
  4970                           	callstack 25
  4971                           
  4972                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  4973                           
  4974                           ;incstack = 0
  4975  001D66  0E18               	movlw	24
  4976  001D68  EFD7  F00D         	goto	_CantaIR
  4977  001D6C                     __end_of_LcScroll:
  4978                           	callstack 0
  4979                           
  4980 ;; *************** function _JnovaTecla *****************
  4981 ;; Defined at:
  4982 ;;		line 16 in file "Joc.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  tecla           1    wreg     char 
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;  tecla           1    5[COMRAM] char 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  1    wreg      void 
  4989 ;; Registers used:
  4990 ;;		wreg
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/1
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMRAM   BANK0   BANK1
  4996 ;;      Params:         0       0       0
  4997 ;;      Locals:         1       0       0
  4998 ;;      Temps:          0       0       0
  4999 ;;      Totals:         1       0       0
  5000 ;;Total ram usage:        1 bytes
  5001 ;; Hardware stack levels used: 1
  5002 ;; Hardware stack levels required when called: 2
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_menu
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text40
  5011  001CE4                     __ptext40:
  5012                           	callstack 0
  5013  001CE4                     _JnovaTecla:
  5014                           	callstack 27
  5015                           
  5016                           ;incstack = 0
  5017                           ;JnovaTecla@tecla stored from wreg
  5018  001CE4  6E63               	movwf	JnovaTecla@tecla^0,c
  5019                           
  5020                           ;Joc.c: 17:     novaTeclaJOC = tecla;
  5021  001CE6  C063  F049         	movff	JnovaTecla@tecla,_novaTeclaJOC
  5022  001CEA  0012               	return		;funcret
  5023  001CEC                     __end_of_JnovaTecla:
  5024                           	callstack 0
  5025                           
  5026 ;; *************** function _JnovaDireccio *****************
  5027 ;; Defined at:
  5028 ;;		line 19 in file "Joc.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  dir             1    wreg     unsigned char 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  dir             1    5[COMRAM] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/1
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1
  5042 ;;      Params:         0       0       0
  5043 ;;      Locals:         1       0       0
  5044 ;;      Temps:          0       0       0
  5045 ;;      Totals:         1       0       0
  5046 ;;Total ram usage:        1 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; Hardware stack levels required when called: 2
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_menu
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text41
  5057  001CEC                     __ptext41:
  5058                           	callstack 0
  5059  001CEC                     _JnovaDireccio:
  5060                           	callstack 27
  5061                           
  5062                           ;incstack = 0
  5063                           ;JnovaDireccio@dir stored from wreg
  5064  001CEC  6E63               	movwf	JnovaDireccio@dir^0,c
  5065                           
  5066                           ;Joc.c: 20:     direccioJoc = dir;
  5067  001CEE  C063  F012         	movff	JnovaDireccio@dir,_direccioJoc
  5068  001CF2  0012               	return		;funcret
  5069  001CF4                     __end_of_JnovaDireccio:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _JendGame *****************
  5073 ;; Defined at:
  5074 ;;		line 27 in file "Joc.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		None
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/1
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1
  5088 ;;      Params:         0       0       0
  5089 ;;      Locals:         0       0       0
  5090 ;;      Temps:          0       0       0
  5091 ;;      Totals:         0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; Hardware stack levels required when called: 2
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_menu
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text42
  5103  001DA8                     __ptext42:
  5104                           	callstack 0
  5105  001DA8                     _JendGame:
  5106                           	callstack 27
  5107                           
  5108                           ;Joc.c: 28:     jugantJoc = 0;
  5109                           
  5110                           ;incstack = 0
  5111  001DA8  9477               	bcf	(_jugantJoc/(0+8))^0,_jugantJoc& (0+7),c
  5112  001DAA  0012               	return		;funcret
  5113  001DAC                     __end_of_JendGame:
  5114                           	callstack 0
  5115                           
  5116 ;; *************** function _JJuguem *****************
  5117 ;; Defined at:
  5118 ;;		line 13 in file "Joc.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  usuari          1    wreg     unsigned char 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  usuari          1    5[COMRAM] unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/1
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1
  5132 ;;      Params:         0       0       0
  5133 ;;      Locals:         1       0       0
  5134 ;;      Temps:          0       0       0
  5135 ;;      Totals:         1       0       0
  5136 ;;Total ram usage:        1 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 2
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_menu
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text43
  5147  001CF4                     __ptext43:
  5148                           	callstack 0
  5149  001CF4                     _JJuguem:
  5150                           	callstack 27
  5151                           
  5152                           ;incstack = 0
  5153                           ;JJuguem@usuari stored from wreg
  5154  001CF4  6E63               	movwf	JJuguem@usuari^0,c
  5155                           
  5156                           ;Joc.c: 14:     usuariJoc = usuari;
  5157  001CF6  C063  F04A         	movff	JJuguem@usuari,_usuariJoc
  5158  001CFA  0012               	return		;funcret
  5159  001CFC                     __end_of_JJuguem:
  5160                           	callstack 0
  5161                           
  5162 ;; *************** function _HActualitzaHora *****************
  5163 ;; Defined at:
  5164 ;;		line 15 in file "Hora.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5167 ;;		 -> horaTmp(4), 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/1
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1
  5179 ;;      Params:         1       0       0
  5180 ;;      Locals:         0       0       0
  5181 ;;      Temps:          0       0       0
  5182 ;;      Totals:         1       0       0
  5183 ;;Total ram usage:        1 bytes
  5184 ;; Hardware stack levels used: 1
  5185 ;; Hardware stack levels required when called: 2
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_menu
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text44
  5194  00199E                     __ptext44:
  5195                           	callstack 0
  5196  00199E                     _HActualitzaHora:
  5197                           	callstack 27
  5198                           
  5199                           ;Hora.c: 16:     hora[0] = nova[0];
  5200                           
  5201                           ;incstack = 0
  5202  00199E  5063               	movf	HActualitzaHora@nova^0,w,c
  5203  0019A0  6ED9               	movwf	fsr2l,c
  5204  0019A2  6ADA               	clrf	fsr2h,c
  5205  0019A4  50DF               	movf	indf2,w,c
  5206  0019A6  6E55               	movwf	_hora^0,c
  5207                           
  5208                           ;Hora.c: 17:     hora[1] = nova[1];
  5209  0019A8  5063               	movf	HActualitzaHora@nova^0,w,c
  5210  0019AA  6ED9               	movwf	fsr2l,c
  5211  0019AC  6ADA               	clrf	fsr2h,c
  5212  0019AE  2AD9               	incf	fsr2l,f,c
  5213  0019B0  50DF               	movf	indf2,w,c
  5214  0019B2  6E56               	movwf	(_hora+1)^0,c
  5215                           
  5216                           ;Hora.c: 18:     hora[3] = nova[2];
  5217  0019B4  5063               	movf	HActualitzaHora@nova^0,w,c
  5218  0019B6  6ED9               	movwf	fsr2l,c
  5219  0019B8  6ADA               	clrf	fsr2h,c
  5220  0019BA  0E02               	movlw	2
  5221  0019BC  26D9               	addwf	fsr2l,f,c
  5222  0019BE  50DF               	movf	indf2,w,c
  5223  0019C0  6E58               	movwf	(_hora+3)^0,c
  5224                           
  5225                           ;Hora.c: 19:     hora[4] = nova[3];
  5226  0019C2  5063               	movf	HActualitzaHora@nova^0,w,c
  5227  0019C4  6ED9               	movwf	fsr2l,c
  5228  0019C6  6ADA               	clrf	fsr2h,c
  5229  0019C8  0E03               	movlw	3
  5230  0019CA  26D9               	addwf	fsr2l,f,c
  5231  0019CC  50DF               	movf	indf2,w,c
  5232  0019CE  6E59               	movwf	(_hora+4)^0,c
  5233  0019D0  0012               	return		;funcret
  5234  0019D2                     __end_of_HActualitzaHora:
  5235                           	callstack 0
  5236                           
  5237 ;; *************** function _GLCDMostraMenu *****************
  5238 ;; Defined at:
  5239 ;;		line 30 in file "GestioLCD.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  num             1    wreg     unsigned char 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  num             1    5[COMRAM] unsigned char 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/1
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1
  5253 ;;      Params:         0       0       0
  5254 ;;      Locals:         1       0       0
  5255 ;;      Temps:          0       0       0
  5256 ;;      Totals:         1       0       0
  5257 ;;Total ram usage:        1 bytes
  5258 ;; Hardware stack levels used: 1
  5259 ;; Hardware stack levels required when called: 2
  5260 ;; This function calls:
  5261 ;;		Nothing
  5262 ;; This function is called by:
  5263 ;;		_menu
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text45
  5268  001CA0                     __ptext45:
  5269                           	callstack 0
  5270  001CA0                     _GLCDMostraMenu:
  5271                           	callstack 27
  5272                           
  5273                           ;incstack = 0
  5274                           ;GLCDMostraMenu@num stored from wreg
  5275  001CA0  6E63               	movwf	GLCDMostraMenu@num^0,c
  5276                           
  5277                           ;GestioLCD.c: 31:     newString = 1;
  5278  001CA2  8078               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5279                           
  5280                           ;GestioLCD.c: 32:     menuDaltGLCD = num;
  5281  001CA4  C063  F020         	movff	GLCDMostraMenu@num,_menuDaltGLCD
  5282                           
  5283                           ;GestioLCD.c: 33:     ferMenu = 1;
  5284  001CA8  8278               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5285  001CAA  0012               	return		;funcret
  5286  001CAC                     __end_of_GLCDMostraMenu:
  5287                           	callstack 0
  5288                           
  5289 ;; *************** function _init_ports *****************
  5290 ;; Defined at:
  5291 ;;		line 26 in file "main.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1
  5305 ;;      Params:         0       0       0
  5306 ;;      Locals:         0       0       0
  5307 ;;      Temps:          0       0       0
  5308 ;;      Totals:         0       0       0
  5309 ;;Total ram usage:        0 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; Hardware stack levels required when called: 2
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_main
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           	psect	text46
  5320  001B58                     __ptext46:
  5321                           	callstack 0
  5322  001B58                     _init_ports:
  5323                           	callstack 28
  5324                           
  5325                           ;incstack = 0
  5326  001B58  0E03               	movlw	3
  5327  001B5A  6E92               	movwf	146,c	;volatile
  5328  001B5C  0EE0               	movlw	224
  5329  001B5E  6E93               	movwf	147,c	;volatile
  5330  001B60  968A               	bcf	138,3,c	;volatile
  5331  001B62  908A               	bcf	138,0,c	;volatile
  5332  001B64  928A               	bcf	138,1,c	;volatile
  5333                           
  5334                           ;main.c: 50:     TRISC = 0xC0;
  5335  001B66  0EC0               	movlw	192
  5336  001B68  6E94               	movwf	148,c	;volatile
  5337                           
  5338                           ;main.c: 60:     TRISD = 0x8F;
  5339  001B6A  0E8F               	movlw	143
  5340  001B6C  6E95               	movwf	149,c	;volatile
  5341                           
  5342                           ;main.c: 61:     LATD = 0x00;
  5343  001B6E  6A8C               	clrf	140,c	;volatile
  5344                           
  5345                           ;main.c: 64:     EECON1bits.EEPGD = 1;
  5346  001B70  8EA6               	bsf	166,7,c	;volsfr
  5347                           
  5348                           ;main.c: 65:     EECON1bits.CFGS = 0;
  5349  001B72  9CA6               	bcf	166,6,c	;volsfr
  5350  001B74  0012               	return		;funcret
  5351  001B76                     __end_of_init_ports:
  5352                           	callstack 0
  5353                           
  5354 ;; *************** function _init_eusart *****************
  5355 ;; Defined at:
  5356 ;;		line 68 in file "main.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;		None
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;		None
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      void 
  5363 ;; Registers used:
  5364 ;;		wreg, status,2
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMRAM   BANK0   BANK1
  5370 ;;      Params:         0       0       0
  5371 ;;      Locals:         0       0       0
  5372 ;;      Temps:          0       0       0
  5373 ;;      Totals:         0       0       0
  5374 ;;Total ram usage:        0 bytes
  5375 ;; Hardware stack levels used: 1
  5376 ;; Hardware stack levels required when called: 2
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_main
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text47
  5385  001BE6                     __ptext47:
  5386                           	callstack 0
  5387  001BE6                     _init_eusart:
  5388                           	callstack 28
  5389                           
  5390                           ;main.c: 69:     TXSTA = 0x24;
  5391                           
  5392                           ;incstack = 0
  5393  001BE6  0E24               	movlw	36
  5394  001BE8  6EAC               	movwf	172,c	;volatile
  5395                           
  5396                           ;main.c: 70:     RCSTA = 0x90;
  5397  001BEA  0E90               	movlw	144
  5398  001BEC  6EAB               	movwf	171,c	;volatile
  5399                           
  5400                           ;main.c: 71:     BAUDCON = 0x08;
  5401  001BEE  0E08               	movlw	8
  5402  001BF0  6EB8               	movwf	184,c	;volatile
  5403                           
  5404                           ;main.c: 72:     SPBRGH = 0x04;
  5405  001BF2  0E04               	movlw	4
  5406  001BF4  6EB0               	movwf	176,c	;volatile
  5407                           
  5408                           ;main.c: 73:     SPBRG = 0x10;
  5409  001BF6  0E10               	movlw	16
  5410  001BF8  6EAF               	movwf	175,c	;volatile
  5411  001BFA  0C10               	retlw	16	;funcret
  5412  001BFC                     __end_of_init_eusart:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function _initSIO *****************
  5416 ;; Defined at:
  5417 ;;		line 18 in file "SIO.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1
  5431 ;;      Params:         0       0       0
  5432 ;;      Locals:         0       0       0
  5433 ;;      Temps:          0       0       0
  5434 ;;      Totals:         0       0       0
  5435 ;;Total ram usage:        0 bytes
  5436 ;; Hardware stack levels used: 1
  5437 ;; Hardware stack levels required when called: 3
  5438 ;; This function calls:
  5439 ;;		_TiGetTimer
  5440 ;; This function is called by:
  5441 ;;		_main
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text48
  5446  001CFC                     __ptext48:
  5447                           	callstack 0
  5448  001CFC                     _initSIO:
  5449                           	callstack 27
  5450                           
  5451                           ;SIO.c: 19:     timerSIO = TiGetTimer();
  5452                           
  5453                           ;incstack = 0
  5454  001CFC  EC03  F00D         	call	_TiGetTimer	;wreg free
  5455  001D00  6E10               	movwf	_timerSIO^0,c
  5456  001D02  0012               	return		;funcret
  5457  001D04                     __end_of_initSIO:
  5458                           	callstack 0
  5459                           
  5460 ;; *************** function _initHora *****************
  5461 ;; Defined at:
  5462 ;;		line 11 in file "Hora.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1
  5476 ;;      Params:         0       0       0
  5477 ;;      Locals:         0       0       0
  5478 ;;      Temps:          0       0       0
  5479 ;;      Totals:         0       0       0
  5480 ;;Total ram usage:        0 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; Hardware stack levels required when called: 3
  5483 ;; This function calls:
  5484 ;;		_TiGetTimer
  5485 ;; This function is called by:
  5486 ;;		_main
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text49
  5491  001D04                     __ptext49:
  5492                           	callstack 0
  5493  001D04                     _initHora:
  5494                           	callstack 27
  5495                           
  5496                           ;Hora.c: 12:     timerHora = TiGetTimer();
  5497                           
  5498                           ;incstack = 0
  5499  001D04  EC03  F00D         	call	_TiGetTimer	;wreg free
  5500  001D08  6E15               	movwf	_timerHora^0,c
  5501  001D0A  0012               	return		;funcret
  5502  001D0C                     __end_of_initHora:
  5503                           	callstack 0
  5504                           
  5505 ;; *************** function _initAltaveu *****************
  5506 ;; Defined at:
  5507 ;;		line 10 in file "Altaveu.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1
  5521 ;;      Params:         0       0       0
  5522 ;;      Locals:         0       0       0
  5523 ;;      Temps:          0       0       0
  5524 ;;      Totals:         0       0       0
  5525 ;;Total ram usage:        0 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; Hardware stack levels required when called: 3
  5528 ;; This function calls:
  5529 ;;		_TiGetTimer
  5530 ;; This function is called by:
  5531 ;;		_main
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text50
  5536  001D0C                     __ptext50:
  5537                           	callstack 0
  5538  001D0C                     _initAltaveu:
  5539                           	callstack 27
  5540                           
  5541                           ;Altaveu.c: 11:     timerAltaveu = TiGetTimer();
  5542                           
  5543                           ;incstack = 0
  5544  001D0C  EC03  F00D         	call	_TiGetTimer	;wreg free
  5545  001D10  6E24               	movwf	_timerAltaveu^0,c
  5546  001D12  0012               	return		;funcret
  5547  001D14                     __end_of_initAltaveu:
  5548                           	callstack 0
  5549                           
  5550 ;; *************** function _escriureEEPROM *****************
  5551 ;; Defined at:
  5552 ;;		line 293 in file "Usuaris.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  caca            1    5[COMRAM] unsigned char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1
  5566 ;;      Params:         0       0       0
  5567 ;;      Locals:         1       0       0
  5568 ;;      Temps:          0       0       0
  5569 ;;      Totals:         1       0       0
  5570 ;;Total ram usage:        1 bytes
  5571 ;; Hardware stack levels used: 1
  5572 ;; Hardware stack levels required when called: 2
  5573 ;; This function calls:
  5574 ;;		Nothing
  5575 ;; This function is called by:
  5576 ;;		_main
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text51
  5581  001A32                     __ptext51:
  5582                           	callstack 0
  5583  001A32                     _escriureEEPROM:
  5584                           	callstack 28
  5585                           
  5586                           ;Usuaris.c: 294:     for(unsigned char caca = 0; caca < 160; caca++){
  5587                           
  5588                           ;incstack = 0
  5589  001A32  6A63               	clrf	escriureEEPROM@caca^0,c
  5590  001A34                     l795:
  5591                           
  5592                           ;Usuaris.c: 295:         EEADR = 0;
  5593  001A34  6AA9               	clrf	169,c	;volatile
  5594                           
  5595                           ;Usuaris.c: 296:         EEDATA = 0;
  5596  001A36  6AA8               	clrf	168,c	;volatile
  5597                           
  5598                           ;Usuaris.c: 297:         EECON1bits.EEPGD = 0;
  5599  001A38  9EA6               	bcf	166,7,c	;volsfr
  5600                           
  5601                           ;Usuaris.c: 298:         EECON1bits.CFGS = 0;
  5602  001A3A  9CA6               	bcf	166,6,c	;volsfr
  5603                           
  5604                           ;Usuaris.c: 299:         EECON1bits.WREN = 1;
  5605  001A3C  84A6               	bsf	166,2,c	;volsfr
  5606                           
  5607                           ;Usuaris.c: 300:         INTCONbits.GIE = 0;
  5608  001A3E  9EF2               	bcf	242,7,c	;volatile
  5609                           
  5610                           ;Usuaris.c: 301:         EECON2 = 85;
  5611  001A40  0E55               	movlw	85
  5612  001A42  6EA7               	movwf	167,c	;volsfr
  5613                           
  5614                           ;Usuaris.c: 302:         EECON2 = 170;
  5615  001A44  0EAA               	movlw	170
  5616  001A46  6EA7               	movwf	167,c	;volsfr
  5617                           
  5618                           ;Usuaris.c: 303:          EECON1bits.WR = 1;
  5619  001A48  82A6               	bsf	166,1,c	;volsfr
  5620  001A4A                     l797:
  5621                           
  5622                           ;Usuaris.c: 304:         while(EECON1bits.WR){
  5623  001A4A  B2A6               	btfsc	166,1,c	;volsfr
  5624  001A4C  D7FE               	goto	l797
  5625                           
  5626                           ;Usuaris.c: 309:     }
  5627  001A4E  2A63               	incf	escriureEEPROM@caca^0,f,c
  5628  001A50  0E9F               	movlw	159
  5629  001A52  6463               	cpfsgt	escriureEEPROM@caca^0,c
  5630  001A54  D7EF               	goto	l795
  5631                           
  5632                           ;Usuaris.c: 310:    INTCONbits.GIE = 1;
  5633  001A56  8EF2               	bsf	242,7,c	;volatile
  5634  001A58  0C9F               	retlw	159	;funcret
  5635  001A5A                     __end_of_escriureEEPROM:
  5636                           	callstack 0
  5637                           
  5638 ;; *************** function _escriure2usuarisStruct *****************
  5639 ;; Defined at:
  5640 ;;		line 142 in file "Usuaris.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 3F/1
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1
  5654 ;;      Params:         0       0       0
  5655 ;;      Locals:         0       0       0
  5656 ;;      Temps:          0       0       0
  5657 ;;      Totals:         0       0       0
  5658 ;;Total ram usage:        0 bytes
  5659 ;; Hardware stack levels used: 1
  5660 ;; Hardware stack levels required when called: 2
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_main
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text52
  5669  00192A                     __ptext52:
  5670                           	callstack 0
  5671  00192A                     _escriure2usuarisStruct:
  5672                           	callstack 28
  5673                           
  5674                           ;Usuaris.c: 144:     usuaris[0].username[0] = '1';
  5675                           
  5676                           ;incstack = 0
  5677  00192A  0E31               	movlw	49
  5678  00192C  0101               	movlb	1	; () banked
  5679  00192E  6F00               	movwf	_usuaris& (0+255),b
  5680                           
  5681                           ; BSR set to: 1
  5682                           ;Usuaris.c: 145:     usuaris[0].username[1] = '\0';
  5683  001930  6B01               	clrf	(_usuaris+1)& (0+255),b
  5684                           
  5685                           ;Usuaris.c: 147:     usuaris[1].username[0] = 'A';
  5686  001932  0E41               	movlw	65
  5687  001934  6F17               	movwf	(_usuaris+23)& (0+255),b
  5688                           
  5689                           ; BSR set to: 1
  5690                           ;Usuaris.c: 148:     usuaris[1].username[1] = '\0';
  5691  001936  6B18               	clrf	(_usuaris+24)& (0+255),b
  5692                           
  5693                           ;Usuaris.c: 150:     usuaris[2].username[0] = 'D';
  5694  001938  0E44               	movlw	68
  5695  00193A  6F2E               	movwf	(_usuaris+46)& (0+255),b
  5696                           
  5697                           ; BSR set to: 1
  5698                           ;Usuaris.c: 151:     usuaris[2].username[1] = '\0';
  5699  00193C  6B2F               	clrf	(_usuaris+47)& (0+255),b
  5700                           
  5701                           ;Usuaris.c: 153:     usuaris[3].username[0] = 'G';
  5702  00193E  0E47               	movlw	71
  5703  001940  6F45               	movwf	(_usuaris+69)& (0+255),b
  5704                           
  5705                           ; BSR set to: 1
  5706                           ;Usuaris.c: 154:     usuaris[3].username[1] = '\0';
  5707  001942  6B46               	clrf	(_usuaris+70)& (0+255),b
  5708                           
  5709                           ;Usuaris.c: 156:     usuaris[4].username[0] = 'J';
  5710  001944  0E4A               	movlw	74
  5711  001946  6F5C               	movwf	(_usuaris+92)& (0+255),b
  5712                           
  5713                           ; BSR set to: 1
  5714                           ;Usuaris.c: 157:     usuaris[4].username[1] = '\0';
  5715  001948  6B5D               	clrf	(_usuaris+93)& (0+255),b
  5716                           
  5717                           ;Usuaris.c: 159:     usuaris[5].username[0] = 'M';
  5718  00194A  0E4D               	movlw	77
  5719  00194C  6F73               	movwf	(_usuaris+115)& (0+255),b
  5720                           
  5721                           ; BSR set to: 1
  5722                           ;Usuaris.c: 160:     usuaris[5].username[1] = '\0';
  5723  00194E  6B74               	clrf	(_usuaris+116)& (0+255),b
  5724                           
  5725                           ;Usuaris.c: 162:     usuaris[6].username[0] = 'P';
  5726  001950  0E50               	movlw	80
  5727  001952  6F8A               	movwf	(_usuaris+138)& (0+255),b
  5728                           
  5729                           ; BSR set to: 1
  5730                           ;Usuaris.c: 163:     usuaris[6].username[1] = '\0';
  5731  001954  6B8B               	clrf	(_usuaris+139)& (0+255),b
  5732                           
  5733                           ;Usuaris.c: 165:     usuaris[7].username[0] = 'T';
  5734  001956  0E54               	movlw	84
  5735  001958  6FA1               	movwf	(_usuaris+161)& (0+255),b
  5736                           
  5737                           ; BSR set to: 1
  5738                           ;Usuaris.c: 166:     usuaris[7].username[1] = '\0';
  5739  00195A  6BA2               	clrf	(_usuaris+162)& (0+255),b
  5740                           
  5741                           ;Usuaris.c: 167:     numUsuaris = 8;
  5742  00195C  0E08               	movlw	8
  5743  00195E  6E2B               	movwf	_numUsuaris^0,c
  5744                           
  5745                           ;Usuaris.c: 168:     indexNextUserStruct = 3;
  5746  001960  0E03               	movlw	3
  5747  001962  6E29               	movwf	_indexNextUserStruct^0,c
  5748                           
  5749                           ; BSR set to: 1
  5750  001964  0C03               	retlw	3	;funcret
  5751  001966                     __end_of_escriure2usuarisStruct:
  5752                           	callstack 0
  5753                           
  5754 ;; *************** function _UmotorUsers *****************
  5755 ;; Defined at:
  5756 ;;		line 187 in file "Usuaris.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/1
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1
  5770 ;;      Params:         0       0       0
  5771 ;;      Locals:         0       0       0
  5772 ;;      Temps:          2       0       0
  5773 ;;      Totals:         2       0       0
  5774 ;;Total ram usage:        2 bytes
  5775 ;; Hardware stack levels used: 1
  5776 ;; Hardware stack levels required when called: 3
  5777 ;; This function calls:
  5778 ;;		_compareStrings
  5779 ;;		_escriureCharEEPROM
  5780 ;; This function is called by:
  5781 ;;		_main
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text53
  5786  000D20                     __ptext53:
  5787                           	callstack 0
  5788  000D20                     _UmotorUsers:
  5789                           	callstack 27
  5790                           
  5791                           ;Usuaris.c: 188:     static char state = 0;;Usuaris.c: 190:  switch(state) {
  5792                           
  5793                           ; BSR set to: 1
  5794                           ;incstack = 0
  5795  000D20  D0A8               	goto	l5587
  5796  000D22                     l755:
  5797                           
  5798                           ;Usuaris.c: 192:    if (!do_check_exists && !do_register && !do_updateScores && !do_show
      +                          Users) {
  5799  000D22  AC78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5800  000D24  BA78               	btfsc	(_do_register/(0+8))^0,_do_register& (0+7),c
  5801  000D26  D006               	goto	l756
  5802  000D28  A678               	btfss	(_do_updateScores/(0+8))^0,_do_updateScores& (0+7),c
  5803  000D2A  B878               	btfsc	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  5804  000D2C  D003               	goto	l756
  5805                           
  5806                           ;Usuaris.c: 193:     i = 0;
  5807  000D2E  6A28               	clrf	_i^0,c
  5808                           
  5809                           ;Usuaris.c: 194:     j = 0;
  5810  000D30  6A27               	clrf	_j^0,c
  5811                           
  5812                           ;Usuaris.c: 195:    }
  5813  000D32  0012               	return	
  5814  000D34                     l756:
  5815  000D34  AC78               	btfss	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5816  000D36  D004               	goto	l758
  5817                           
  5818                           ;Usuaris.c: 197:     usuariLoguejat = -1;
  5819  000D38  684D               	setf	_usuariLoguejat^0,c
  5820  000D3A                     l5481:
  5821                           
  5822                           ;Usuaris.c: 198:     state = 1;
  5823  000D3A  0E01               	movlw	1
  5824  000D3C  6E26               	movwf	UmotorUsers@state^0,c
  5825                           
  5826                           ;Usuaris.c: 199:    }
  5827  000D3E  0C01               	retlw	1
  5828  000D40                     l758:
  5829  000D40  AA78               	btfss	(_do_register/(0+8))^0,_do_register& (0+7),c
  5830  000D42  D003               	goto	l762
  5831  000D44                     u5150:
  5832                           
  5833                           ;Usuaris.c: 201:     state = 2;
  5834  000D44  0E02               	movlw	2
  5835  000D46  6E26               	movwf	UmotorUsers@state^0,c
  5836                           
  5837                           ;Usuaris.c: 202:    }
  5838  000D48  0C02               	retlw	2
  5839  000D4A                     l762:
  5840  000D4A  A878               	btfss	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  5841  000D4C  0012               	return	
  5842                           
  5843                           ;Usuaris.c: 207:     arrayShowUsers[0] = usuariLoguejat;
  5844  000D4E  C04D  F001         	movff	_usuariLoguejat,_arrayShowUsers
  5845                           
  5846                           ;Usuaris.c: 208:     arrayShowUsers[1] = -1;
  5847  000D52  6802               	setf	(_arrayShowUsers+1)^0,c
  5848                           
  5849                           ;Usuaris.c: 209:     arrayShowUsers[2] = -1;
  5850  000D54  6803               	setf	(_arrayShowUsers+2)^0,c
  5851                           
  5852                           ;Usuaris.c: 210:     arrayShowUsers[3] = -1;
  5853  000D56  6804               	setf	(_arrayShowUsers+3)^0,c
  5854                           
  5855                           ;Usuaris.c: 211:     arrayShowUsers[4] = -1;
  5856  000D58  6805               	setf	(_arrayShowUsers+4)^0,c
  5857                           
  5858                           ;Usuaris.c: 212:     arrayShowUsers[5] = -1;
  5859  000D5A  6806               	setf	(_arrayShowUsers+5)^0,c
  5860                           
  5861                           ;Usuaris.c: 213:     arrayShowUsers[6] = -1;
  5862  000D5C  6807               	setf	(_arrayShowUsers+6)^0,c
  5863                           
  5864                           ;Usuaris.c: 214:     arrayShowUsers[7] = -1;
  5865  000D5E  6808               	setf	(_arrayShowUsers+7)^0,c
  5866                           
  5867                           ;Usuaris.c: 215:     i = 1;
  5868  000D60  0E01               	movlw	1
  5869  000D62  6E28               	movwf	_i^0,c
  5870                           
  5871                           ;Usuaris.c: 216:     if(numUsuaris < 7) {
  5872  000D64  0E07               	movlw	7
  5873  000D66  602B               	cpfslt	_numUsuaris^0,c
  5874  000D68  D002               	goto	l765
  5875  000D6A                     u5170:
  5876                           
  5877                           ;Usuaris.c: 217:       j = 0;
  5878  000D6A  6A27               	clrf	_j^0,c
  5879                           
  5880                           ;Usuaris.c: 218:     }
  5881  000D6C  D002               	goto	l5495
  5882  000D6E                     l765:
  5883                           
  5884                           ;Usuaris.c: 220:       j = indexNextUserStruct;
  5885  000D6E  C029  F027         	movff	_indexNextUserStruct,_j
  5886  000D72                     l5495:
  5887                           
  5888                           ;Usuaris.c: 222:     state = 5;
  5889  000D72  0E05               	movlw	5
  5890  000D74  6E26               	movwf	UmotorUsers@state^0,c
  5891  000D76  0C05               	retlw	5
  5892  000D78                     l5497:
  5893                           
  5894                           ;Usuaris.c: 226:    if (i < numUsuaris) {
  5895  000D78  502B               	movf	_numUsuaris^0,w,c
  5896  000D7A  5C28               	subwf	_i^0,w,c
  5897  000D7C  E212               	bc	l5507
  5898                           
  5899                           ;Usuaris.c: 227:     if(compareStrings(tmpUsername, usuaris[i].username) == 0){
  5900  000D7E  0EA1               	movlw	low _tmpUsername
  5901  000D80  6E63               	movwf	compareStrings@a^0,c
  5902  000D82  5028               	movf	_i^0,w,c
  5903  000D84  0D17               	mullw	23
  5904  000D86  0E00               	movlw	low _usuaris
  5905  000D88  24F3               	addwf	243,w,c
  5906  000D8A  6E64               	movwf	compareStrings@b^0,c
  5907  000D8C  0E01               	movlw	high _usuaris
  5908  000D8E  20F4               	addwfc	prodh,w,c
  5909  000D90  6E65               	movwf	(compareStrings@b+1)^0,c
  5910  000D92  EC57  F00C         	call	_compareStrings	;wreg free
  5911  000D96  0900               	iorlw	0
  5912  000D98  E102               	bnz	l5503
  5913                           
  5914                           ;Usuaris.c: 228:      usuariLoguejat = i;
  5915  000D9A  C028  F04D         	movff	_i,_usuariLoguejat
  5916  000D9E                     l5503:
  5917                           
  5918                           ;Usuaris.c: 231:     i++;
  5919  000D9E  2A28               	incf	_i^0,f,c
  5920  000DA0  D7CC               	goto	l5481
  5921  000DA2                     l5507:
  5922  000DA2  502B               	movf	_numUsuaris^0,w,c
  5923  000DA4  1828               	xorwf	_i^0,w,c
  5924  000DA6  A4D8               	btfss	status,2,c
  5925  000DA8  0012               	return	
  5926                           
  5927                           ;Usuaris.c: 235:     do_check_exists = 0;
  5928  000DAA  9C78               	bcf	(_do_check_exists/(0+8))^0,_do_check_exists& (0+7),c
  5929                           
  5930                           ;Usuaris.c: 236:     state = 0;
  5931  000DAC  6A26               	clrf	UmotorUsers@state^0,c
  5932  000DAE  0012               	return	
  5933  000DB0                     l5511:
  5934                           
  5935                           ;Usuaris.c: 240:    if (i != 8) {
  5936  000DB0  0E08               	movlw	8
  5937  000DB2  1828               	xorwf	_i^0,w,c
  5938  000DB4  E00D               	bz	l5523
  5939                           
  5940                           ;Usuaris.c: 241:     escriureCharEEPROM(tmpUsername[i],indexNextUser++);
  5941  000DB6  C02A  F063         	movff	_indexNextUser,escriureCharEEPROM@pos
  5942  000DBA  5028               	movf	_i^0,w,c
  5943  000DBC  0FA1               	addlw	low _tmpUsername
  5944  000DBE  D886               	call	PL42	;call to abstracted procedure
  5945  000DC0  EC66  F00D         	call	_escriureCharEEPROM
  5946  000DC4  2A2A               	incf	_indexNextUser^0,f,c
  5947                           
  5948                           ;Usuaris.c: 242:     usuaris[indexNextUserStruct].username[i] = tmpUsername[i];
  5949  000DC6  5028               	movf	_i^0,w,c
  5950  000DC8  0FA1               	addlw	low _tmpUsername
  5951  000DCA  D877               	call	PL20	;call to abstracted procedure
  5952                           
  5953                           ;Usuaris.c: 243:     i++;
  5954  000DCC  D868               	call	PL14	;call to abstracted procedure
  5955  000DCE  D7BA               	goto	u5150
  5956  000DD0                     l5523:
  5957  000DD0  0E08               	movlw	8
  5958  000DD2  1828               	xorwf	_i^0,w,c
  5959  000DD4  A4D8               	btfss	status,2,c
  5960  000DD6  0012               	return	
  5961                           
  5962                           ;Usuaris.c: 247:     i = 0;
  5963  000DD8  6A28               	clrf	_i^0,c
  5964  000DDA                     l5527:
  5965                           
  5966                           ;Usuaris.c: 248:     state = 3;
  5967  000DDA  0E03               	movlw	3
  5968  000DDC  6E26               	movwf	UmotorUsers@state^0,c
  5969  000DDE  0C03               	retlw	3
  5970  000DE0                     l5529:
  5971                           
  5972                           ;Usuaris.c: 252:    if (i != 8) {
  5973  000DE0  0E08               	movlw	8
  5974  000DE2  1828               	xorwf	_i^0,w,c
  5975  000DE4  E011               	bz	l5541
  5976                           
  5977                           ;Usuaris.c: 253:     escriureCharEEPROM(tmpPassword[i],indexNextUser++);
  5978  000DE6  C02A  F063         	movff	_indexNextUser,escriureCharEEPROM@pos
  5979  000DEA  5028               	movf	_i^0,w,c
  5980  000DEC  0F98               	addlw	low _tmpPassword
  5981  000DEE  D86E               	call	PL42	;call to abstracted procedure
  5982  000DF0  EC66  F00D         	call	_escriureCharEEPROM
  5983  000DF4  2A2A               	incf	_indexNextUser^0,f,c
  5984                           
  5985                           ;Usuaris.c: 254:     usuaris[indexNextUserStruct].password[i] = tmpPassword[i];
  5986  000DF6  5028               	movf	_i^0,w,c
  5987  000DF8  0F98               	addlw	low _tmpPassword
  5988  000DFA  D85F               	call	PL20	;call to abstracted procedure
  5989  000DFC  0E09               	movlw	9
  5990  000DFE  2668               	addwf	??_UmotorUsers^0,f,c
  5991  000E00  0E00               	movlw	0
  5992  000E02  2269               	addwfc	(??_UmotorUsers+1)^0,f,c
  5993                           
  5994                           ;Usuaris.c: 255:     i++;
  5995  000E04  D84C               	call	PL14	;call to abstracted procedure
  5996  000E06  D7E9               	goto	l5527
  5997  000E08                     l5541:
  5998  000E08  0E08               	movlw	8
  5999  000E0A  1828               	xorwf	_i^0,w,c
  6000  000E0C  A4D8               	btfss	status,2,c
  6001  000E0E  0012               	return	
  6002                           
  6003                           ;Usuaris.c: 259:     do_register = 0;
  6004  000E10  9A78               	bcf	(_do_register/(0+8))^0,_do_register& (0+7),c
  6005                           
  6006                           ;Usuaris.c: 260:     indexNextUser++;
  6007  000E12  2A2A               	incf	_indexNextUser^0,f,c
  6008                           
  6009                           ;Usuaris.c: 261:     if(indexNextUser == 159) indexNextUser = 16;
  6010  000E14  0E9F               	movlw	159
  6011  000E16  182A               	xorwf	_indexNextUser^0,w,c
  6012  000E18  E102               	bnz	l5551
  6013  000E1A  0E10               	movlw	16
  6014  000E1C  6E2A               	movwf	_indexNextUser^0,c
  6015  000E1E                     l5551:
  6016                           
  6017                           ;Usuaris.c: 262:     indexNextUserStruct++;
  6018  000E1E  2A29               	incf	_indexNextUserStruct^0,f,c
  6019                           
  6020                           ;Usuaris.c: 263:     if(indexNextUserStruct == 8) indexNextUserStruct = 0;
  6021  000E20  0E08               	movlw	8
  6022  000E22  1829               	xorwf	_indexNextUserStruct^0,w,c
  6023  000E24  E101               	bnz	l5557
  6024  000E26  6A29               	clrf	_indexNextUserStruct^0,c
  6025  000E28                     l5557:
  6026                           
  6027                           ;Usuaris.c: 264:     if(numUsuaris != 8) numUsuaris++;
  6028  000E28  0E08               	movlw	8
  6029  000E2A  182B               	xorwf	_numUsuaris^0,w,c
  6030  000E2C  E001               	bz	l5561
  6031  000E2E  2A2B               	incf	_numUsuaris^0,f,c
  6032  000E30                     l5561:
  6033                           
  6034                           ;Usuaris.c: 265:     state = 0;
  6035  000E30  6A26               	clrf	UmotorUsers@state^0,c
  6036  000E32  0012               	return	
  6037  000E34                     l5563:
  6038                           
  6039                           ;Usuaris.c: 272:    if (i < numUsuaris) {
  6040  000E34  502B               	movf	_numUsuaris^0,w,c
  6041  000E36  5C28               	subwf	_i^0,w,c
  6042  000E38  E215               	bc	l5581
  6043                           
  6044                           ;Usuaris.c: 273:     if(j != usuariLoguejat){
  6045  000E3A  C04D  F068         	movff	_usuariLoguejat,??_UmotorUsers
  6046  000E3E  6A69               	clrf	(??_UmotorUsers+1)^0,c
  6047  000E40  BE68               	btfsc	??_UmotorUsers^0,7,c
  6048  000E42  0669               	decf	(??_UmotorUsers+1)^0,f,c
  6049  000E44  5027               	movf	_j^0,w,c
  6050  000E46  1868               	xorwf	??_UmotorUsers^0,w,c
  6051  000E48  1069               	iorwf	(??_UmotorUsers+1)^0,w,c
  6052  000E4A  E007               	bz	l5571
  6053                           
  6054                           ;Usuaris.c: 274:       arrayShowUsers[i] = j;
  6055  000E4C  5028               	movf	_i^0,w,c
  6056  000E4E  0F01               	addlw	low _arrayShowUsers
  6057  000E50  6ED9               	movwf	fsr2l,c
  6058  000E52  6ADA               	clrf	fsr2h,c
  6059  000E54  C027  FFDF         	movff	_j,indf2
  6060                           
  6061                           ;Usuaris.c: 275:      i++;
  6062  000E58  2A28               	incf	_i^0,f,c
  6063  000E5A                     l5571:
  6064                           
  6065                           ;Usuaris.c: 276:                     j++;
  6066  000E5A  2A27               	incf	_j^0,f,c
  6067                           
  6068                           ;Usuaris.c: 281:     if(j > 7) j=0;
  6069                           
  6070                           ;Usuaris.c: 277:     }else{
  6071  000E5C  0E07               	movlw	7
  6072  000E5E  6427               	cpfsgt	_j^0,c
  6073  000E60  D788               	goto	l5495
  6074  000E62  D783               	goto	u5170
  6075  000E64                     l5581:
  6076  000E64  502B               	movf	_numUsuaris^0,w,c
  6077  000E66  1828               	xorwf	_i^0,w,c
  6078  000E68  A4D8               	btfss	status,2,c
  6079  000E6A  0012               	return	
  6080                           
  6081                           ;Usuaris.c: 285:     do_showUsers = 0;
  6082  000E6C  9878               	bcf	(_do_showUsers/(0+8))^0,_do_showUsers& (0+7),c
  6083                           
  6084                           ;Usuaris.c: 286:     state = 0;
  6085  000E6E  6A26               	clrf	UmotorUsers@state^0,c
  6086  000E70  0012               	return	
  6087  000E72                     l5587:
  6088  000E72  5026               	movf	UmotorUsers@state^0,w,c
  6089  000E74  6E68               	movwf	??_UmotorUsers^0,c
  6090  000E76  6A69               	clrf	(??_UmotorUsers+1)^0,c
  6091                           
  6092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6093                           ; Switch size 1, requested type "space"
  6094                           ; Number of cases is 1, Range of values is 0 to 0
  6095                           ; switch strategies available:
  6096                           ; Name         Instructions Cycles
  6097                           ; simple_byte            4     3 (average)
  6098                           ;	Chosen strategy is simple_byte
  6099  000E78  5069               	movf	(??_UmotorUsers+1)^0,w,c
  6100  000E7A  A4D8               	btfss	status,2,c
  6101  000E7C  0012               	return	
  6102                           
  6103                           ; Switch size 1, requested type "space"
  6104                           ; Number of cases is 6, Range of values is 0 to 5
  6105                           ; switch strategies available:
  6106                           ; Name         Instructions Cycles
  6107                           ; simple_byte           19    10 (average)
  6108                           ;	Chosen strategy is simple_byte
  6109  000E7E  5068               	movf	??_UmotorUsers^0,w,c
  6110  000E80  E101 D74F          	bz	l755
  6111  000E84  0A01               	xorlw	1	; case 1
  6112  000E86  E101 D777          	bz	l5497
  6113  000E8A  0A03               	xorlw	3	; case 2
  6114  000E8C  E091               	bz	l5511
  6115  000E8E  0A01               	xorlw	1	; case 3
  6116  000E90  E0A7               	bz	l5529
  6117  000E92  0A07               	xorlw	7	; case 4
  6118  000E94  B4D8               	btfsc	status,2,c
  6119  000E96  0012               	return	
  6120  000E98  0A01               	xorlw	1	; case 5
  6121  000E9A  E0CC               	bz	l5563
  6122  000E9C  0012               	return		;funcret
  6123  000E9E                     __end_of_UmotorUsers:
  6124                           	callstack 0
  6125  000E9E                     PL14:
  6126                           	callstack 27
  6127  000E9E  50F3               	movf	243,w,c
  6128  000EA0  2668               	addwf	??_UmotorUsers^0,f,c
  6129  000EA2  50F4               	movf	244,w,c
  6130  000EA4  2269               	addwfc	(??_UmotorUsers+1)^0,f,c
  6131  000EA6  5028               	movf	_i^0,w,c
  6132  000EA8  2468               	addwf	??_UmotorUsers^0,w,c
  6133  000EAA  6EE1               	movwf	fsr1l,c
  6134  000EAC  0E00               	movlw	0
  6135  000EAE  2069               	addwfc	(??_UmotorUsers+1)^0,w,c
  6136  000EB0  6EE2               	movwf	fsr1h,c
  6137  000EB2  CFDF FFE7          	movff	indf2,indf1
  6138  000EB6  2A28               	incf	_i^0,f,c
  6139  000EB8  0012               	return	
  6140  000EBA                     __end_ofPL14:
  6141                           	callstack 0
  6142  000EBA                     PL20:
  6143                           	callstack 27
  6144  000EBA  6ED9               	movwf	fsr2l,c
  6145  000EBC  6ADA               	clrf	fsr2h,c
  6146  000EBE  5029               	movf	_indexNextUserStruct^0,w,c
  6147  000EC0  0D17               	mullw	23
  6148  000EC2  0E00               	movlw	low _usuaris
  6149  000EC4  6E68               	movwf	??_UmotorUsers^0,c
  6150  000EC6  0E01               	movlw	high _usuaris
  6151  000EC8  6E69               	movwf	(??_UmotorUsers+1)^0,c
  6152  000ECA  0012               	return	
  6153  000ECC                     __end_ofPL20:
  6154                           	callstack 0
  6155  000ECC                     PL42:
  6156                           	callstack 27
  6157  000ECC  6ED9               	movwf	fsr2l,c
  6158  000ECE  6ADA               	clrf	fsr2h,c
  6159  000ED0  50DF               	movf	indf2,w,c
  6160  000ED2  0012               	return	
  6161  000ED4                     __end_ofPL42:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function _escriureCharEEPROM *****************
  6165 ;; Defined at:
  6166 ;;		line 84 in file "Usuaris.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  c               1    wreg     unsigned char 
  6169 ;;  pos             1    5[COMRAM] unsigned char 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  c               1    6[COMRAM] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg, status,2
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/1
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1
  6181 ;;      Params:         1       0       0
  6182 ;;      Locals:         1       0       0
  6183 ;;      Temps:          0       0       0
  6184 ;;      Totals:         2       0       0
  6185 ;;Total ram usage:        2 bytes
  6186 ;; Hardware stack levels used: 1
  6187 ;; Hardware stack levels required when called: 2
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_UmotorUsers
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text54
  6196  001ACC                     __ptext54:
  6197                           	callstack 0
  6198  001ACC                     _escriureCharEEPROM:
  6199                           	callstack 27
  6200                           
  6201                           ;incstack = 0
  6202                           ;escriureCharEEPROM@c stored from wreg
  6203  001ACC  6E64               	movwf	escriureCharEEPROM@c^0,c
  6204                           
  6205                           ;Usuaris.c: 85:     EEADR = pos;
  6206  001ACE  C063  FFA9         	movff	escriureCharEEPROM@pos,4009	;volatile
  6207                           
  6208                           ;Usuaris.c: 86:     EEDATA = c;
  6209  001AD2  C064  FFA8         	movff	escriureCharEEPROM@c,4008	;volatile
  6210                           
  6211                           ;Usuaris.c: 87:     EECON1bits.EEPGD = 0;
  6212  001AD6  9EA6               	bcf	166,7,c	;volsfr
  6213                           
  6214                           ;Usuaris.c: 88:     EECON1bits.CFGS = 0;
  6215  001AD8  9CA6               	bcf	166,6,c	;volsfr
  6216                           
  6217                           ;Usuaris.c: 89:     EECON1bits.WREN = 1;
  6218  001ADA  84A6               	bsf	166,2,c	;volsfr
  6219                           
  6220                           ;Usuaris.c: 90:     INTCONbits.GIE = 0;
  6221  001ADC  9EF2               	bcf	242,7,c	;volatile
  6222                           
  6223                           ;Usuaris.c: 91:     EECON2 = 85;
  6224  001ADE  0E55               	movlw	85
  6225  001AE0  6EA7               	movwf	167,c	;volsfr
  6226                           
  6227                           ;Usuaris.c: 92:     EECON2 = 170;
  6228  001AE2  0EAA               	movlw	170
  6229  001AE4  6EA7               	movwf	167,c	;volsfr
  6230                           
  6231                           ;Usuaris.c: 93:     EECON1bits.WR = 1;
  6232  001AE6  82A6               	bsf	166,1,c	;volsfr
  6233  001AE8                     l704:
  6234  001AE8  B2A6               	btfsc	166,1,c	;volsfr
  6235  001AEA  D7FE               	goto	l704
  6236                           
  6237                           ;Usuaris.c: 95:     INTCONbits.GIE = 1;
  6238  001AEC  8EF2               	bsf	242,7,c	;volatile
  6239  001AEE  0012               	return		;funcret
  6240  001AF0                     __end_of_escriureCharEEPROM:
  6241                           	callstack 0
  6242                           
  6243 ;; *************** function _compareStrings *****************
  6244 ;; Defined at:
  6245 ;;		line 171 in file "Usuaris.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  a               1    5[COMRAM] PTR const unsigned char 
  6248 ;;		 -> tmpUsername(9), 
  6249 ;;  b               2    6[COMRAM] PTR const unsigned char 
  6250 ;;		 -> usuaris.username(9), usuaris(184), 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      unsigned char 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/1
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1
  6262 ;;      Params:         3       0       0
  6263 ;;      Locals:         0       0       0
  6264 ;;      Temps:          2       0       0
  6265 ;;      Totals:         5       0       0
  6266 ;;Total ram usage:        5 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; Hardware stack levels required when called: 2
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_UmotorUsers
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text55
  6277  0018AE                     __ptext55:
  6278                           	callstack 0
  6279  0018AE                     _compareStrings:
  6280                           	callstack 27
  6281                           
  6282                           ;Usuaris.c: 172:     while (*a){
  6283                           
  6284                           ;incstack = 0
  6285  0018AE  D00A               	goto	l4417
  6286  0018B0                     l4411:
  6287                           
  6288                           ;Usuaris.c: 173:         if (*a != *b)break;
  6289  0018B0  D813               	call	PL44	;call to abstracted procedure
  6290  0018B2  5063               	movf	compareStrings@a^0,w,c
  6291  0018B4  6EE1               	movwf	fsr1l,c
  6292  0018B6  6AE2               	clrf	fsr1h,c
  6293  0018B8  50DE               	movf	postinc2,w,c
  6294  0018BA  18E6               	xorwf	postinc1,w,c
  6295  0018BC  E105               	bnz	u3490
  6296                           
  6297                           ;Usuaris.c: 174:         a++;
  6298  0018BE  2A63               	incf	compareStrings@a^0,f,c
  6299                           
  6300                           ;Usuaris.c: 175:         b++;
  6301  0018C0  4A64               	infsnz	compareStrings@b^0,f,c
  6302  0018C2  2A65               	incf	(compareStrings@b+1)^0,f,c
  6303  0018C4                     l4417:
  6304                           
  6305                           ;Usuaris.c: 172:     while (*a){
  6306  0018C4  D80E               	call	PL62	;call to abstracted procedure
  6307  0018C6  E1F4               	bnz	l4411
  6308  0018C8                     u3490:
  6309                           
  6310                           ;Usuaris.c: 177:     return *(const unsigned char*)a - *(const unsigned char*)b;
  6311  0018C8  D807               	call	PL44	;call to abstracted procedure
  6312  0018CA  50DF               	movf	indf2,w,c
  6313  0018CC  6E66               	movwf	??_compareStrings^0,c
  6314  0018CE  D809               	call	PL62	;call to abstracted procedure
  6315  0018D0  6E67               	movwf	(??_compareStrings+1)^0,c
  6316  0018D2  5066               	movf	??_compareStrings^0,w,c
  6317  0018D4  5C67               	subwf	(??_compareStrings+1)^0,w,c
  6318  0018D6  0012               	return		;funcret
  6319  0018D8                     __end_of_compareStrings:
  6320                           	callstack 0
  6321  0018D8                     PL44:
  6322                           	callstack 27
  6323  0018D8  C064  FFD9         	movff	compareStrings@b,fsr2l
  6324  0018DC  C065  FFDA         	movff	compareStrings@b+1,fsr2h
  6325  0018E0  0012               	return	
  6326  0018E2                     __end_ofPL44:
  6327                           	callstack 0
  6328  0018E2                     PL62:
  6329                           	callstack 27
  6330  0018E2  5063               	movf	compareStrings@a^0,w,c
  6331  0018E4  6ED9               	movwf	fsr2l,c
  6332  0018E6  6ADA               	clrf	fsr2h,c
  6333  0018E8  50DF               	movf	indf2,w,c
  6334  0018EA  0012               	return	
  6335  0018EC                     __end_ofPL62:
  6336                           	callstack 0
  6337                           
  6338 ;; *************** function _Uinit *****************
  6339 ;; Defined at:
  6340 ;;		line 97 in file "Usuaris.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;		None
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;  j               1    9[COMRAM] unsigned char 
  6345 ;;  j               1    8[COMRAM] unsigned char 
  6346 ;;  i               1    7[COMRAM] unsigned char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1
  6356 ;;      Params:         0       0       0
  6357 ;;      Locals:         3       0       0
  6358 ;;      Temps:          2       0       0
  6359 ;;      Totals:         5       0       0
  6360 ;;Total ram usage:        5 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 2
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_main
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text56
  6371  0013E6                     __ptext56:
  6372                           	callstack 0
  6373  0013E6                     _Uinit:
  6374                           	callstack 28
  6375                           
  6376                           ;Usuaris.c: 102:     EEADR = 0;
  6377                           
  6378                           ;incstack = 0
  6379  0013E6  6AA9               	clrf	169,c	;volatile
  6380                           
  6381                           ;Usuaris.c: 103:     EECON1bits.EEPGD = 0;
  6382  0013E8  9EA6               	bcf	166,7,c	;volsfr
  6383                           
  6384                           ;Usuaris.c: 104:     EECON1bits.CFGS = 0;
  6385  0013EA  9CA6               	bcf	166,6,c	;volsfr
  6386                           
  6387                           ;Usuaris.c: 105:     EECON1bits.RD = 1;
  6388  0013EC  80A6               	bsf	166,0,c	;volsfr
  6389  0013EE                     l710:
  6390  0013EE  B0A6               	btfsc	166,0,c	;volsfr
  6391  0013F0  D7FE               	goto	l710
  6392                           
  6393                           ;Usuaris.c: 107:     numUsuaris = EEDATA;
  6394  0013F2  CFA8 F02B          	movff	4008,_numUsuaris	;volatile
  6395                           
  6396                           ;Usuaris.c: 110:     EEADR++;
  6397  0013F6  2AA9               	incf	169,f,c	;volatile
  6398                           
  6399                           ;Usuaris.c: 111:     EECON1bits.EEPGD = 0;
  6400  0013F8  9EA6               	bcf	166,7,c	;volsfr
  6401                           
  6402                           ;Usuaris.c: 112:     EECON1bits.CFGS = 0;
  6403  0013FA  9CA6               	bcf	166,6,c	;volsfr
  6404  0013FC                     l713:
  6405  0013FC  B0A6               	btfsc	166,0,c	;volsfr
  6406  0013FE  D7FE               	goto	l713
  6407                           
  6408                           ;Usuaris.c: 115:     indexNextUser = EEDATA;
  6409  001400  CFA8 F02A          	movff	4008,_indexNextUser	;volatile
  6410                           
  6411                           ;Usuaris.c: 117:     EEADR++;
  6412  001404  2AA9               	incf	169,f,c	;volatile
  6413                           
  6414                           ;Usuaris.c: 119:     for(char i = 0; i< numUsuaris; i++){
  6415  001406  6A65               	clrf	Uinit@i^0,c
  6416  001408  D021               	goto	l2665
  6417  00140A                     l717:
  6418                           
  6419                           ;Usuaris.c: 120:         for(char j = 0; j<9; j++){
  6420  00140A  6A66               	clrf	Uinit@j^0,c
  6421  00140C                     l718:
  6422                           
  6423                           ;Usuaris.c: 121:             EECON1bits.EEPGD = 0;
  6424  00140C  9EA6               	bcf	166,7,c	;volsfr
  6425                           
  6426                           ;Usuaris.c: 122:             EECON1bits.CFGS = 0;
  6427  00140E  9CA6               	bcf	166,6,c	;volsfr
  6428                           
  6429                           ;Usuaris.c: 123:             EECON1bits.RD = 1;
  6430  001410  80A6               	bsf	166,0,c	;volsfr
  6431  001412                     l720:
  6432  001412  B0A6               	btfsc	166,0,c	;volsfr
  6433  001414  D7FE               	goto	l720
  6434                           
  6435                           ;Usuaris.c: 125:             usuaris[i].username[j] = EEDATA;
  6436  001416  D827               	call	PL38	;call to abstracted procedure
  6437  001418  D82D               	call	PL52	;call to abstracted procedure
  6438  00141A  5066               	movf	Uinit@j^0,w,c
  6439                           
  6440                           ;Usuaris.c: 126:             EEADR++;
  6441  00141C  D81B               	call	PL22	;call to abstracted procedure
  6442                           
  6443                           ;Usuaris.c: 127:         }
  6444  00141E  2A66               	incf	Uinit@j^0,f,c
  6445  001420  0E08               	movlw	8
  6446  001422  6466               	cpfsgt	Uinit@j^0,c
  6447  001424  D7F3               	goto	l718
  6448                           
  6449                           ;Usuaris.c: 128:         for(char j = 0; j<9; j++){
  6450  001426  6A67               	clrf	Uinit@j_1167^0,c
  6451  001428                     l723:
  6452                           
  6453                           ;Usuaris.c: 129:             EECON1bits.EEPGD = 0;
  6454  001428  9EA6               	bcf	166,7,c	;volsfr
  6455                           
  6456                           ;Usuaris.c: 130:             EECON1bits.CFGS = 0;
  6457  00142A  9CA6               	bcf	166,6,c	;volsfr
  6458                           
  6459                           ;Usuaris.c: 131:             EECON1bits.RD = 1;
  6460  00142C  80A6               	bsf	166,0,c	;volsfr
  6461  00142E                     l725:
  6462  00142E  B0A6               	btfsc	166,0,c	;volsfr
  6463  001430  D7FE               	goto	l725
  6464                           
  6465                           ;Usuaris.c: 133:             usuaris[i].password[j] = EEDATA;
  6466  001432  D819               	call	PL38	;call to abstracted procedure
  6467  001434  0E09               	movlw	9
  6468  001436  2663               	addwf	??_Uinit^0,f,c
  6469  001438  0E00               	movlw	0
  6470  00143A  2264               	addwfc	(??_Uinit+1)^0,f,c
  6471  00143C  D81B               	call	PL52	;call to abstracted procedure
  6472  00143E  5067               	movf	Uinit@j_1167^0,w,c
  6473                           
  6474                           ;Usuaris.c: 134:             EEADR++;
  6475  001440  D809               	call	PL22	;call to abstracted procedure
  6476                           
  6477                           ;Usuaris.c: 135:         }
  6478  001442  2A67               	incf	Uinit@j_1167^0,f,c
  6479  001444  0E08               	movlw	8
  6480  001446  6467               	cpfsgt	Uinit@j_1167^0,c
  6481  001448  D7EF               	goto	l723
  6482                           
  6483                           ;Usuaris.c: 136:     }
  6484  00144A  2A65               	incf	Uinit@i^0,f,c
  6485  00144C                     l2665:
  6486  00144C  502B               	movf	_numUsuaris^0,w,c
  6487  00144E  5C65               	subwf	Uinit@i^0,w,c
  6488  001450  E3DC               	bnc	l717
  6489  001452  0012               	return		;funcret
  6490  001454                     __end_of_Uinit:
  6491                           	callstack 0
  6492  001454                     PL22:
  6493                           	callstack 28
  6494  001454  2463               	addwf	??_Uinit^0,w,c
  6495  001456  6ED9               	movwf	fsr2l,c
  6496  001458  0E00               	movlw	0
  6497  00145A  2064               	addwfc	(??_Uinit+1)^0,w,c
  6498  00145C  6EDA               	movwf	fsr2h,c
  6499  00145E  CFA8 FFDF          	movff	4008,indf2	;volatile
  6500  001462  2AA9               	incf	169,f,c	;volatile
  6501  001464  0012               	return	
  6502  001466                     __end_ofPL22:
  6503                           	callstack 0
  6504  001466                     PL38:
  6505                           	callstack 28
  6506  001466  5065               	movf	Uinit@i^0,w,c
  6507  001468  0D17               	mullw	23
  6508  00146A  0E00               	movlw	low _usuaris
  6509  00146C  6E63               	movwf	??_Uinit^0,c
  6510  00146E  0E01               	movlw	high _usuaris
  6511  001470  6E64               	movwf	(??_Uinit+1)^0,c
  6512  001472  0012               	return	
  6513  001474                     __end_ofPL38:
  6514                           	callstack 0
  6515  001474                     PL52:
  6516                           	callstack 28
  6517  001474  50F3               	movf	243,w,c
  6518  001476  2663               	addwf	??_Uinit^0,f,c
  6519  001478  50F4               	movf	244,w,c
  6520  00147A  2264               	addwfc	(??_Uinit+1)^0,f,c
  6521  00147C  0012               	return	
  6522  00147E                     __end_ofPL52:
  6523                           	callstack 0
  6524                           
  6525 ;; *************** function _TiInitTimer *****************
  6526 ;; Defined at:
  6527 ;;		line 18 in file "TiTTimer.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1
  6541 ;;      Params:         0       0       0
  6542 ;;      Locals:         0       0       0
  6543 ;;      Temps:          0       0       0
  6544 ;;      Totals:         0       0       0
  6545 ;;Total ram usage:        0 bytes
  6546 ;; Hardware stack levels used: 1
  6547 ;; Hardware stack levels required when called: 2
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_main
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text57
  6556  001A5A                     __ptext57:
  6557                           	callstack 0
  6558  001A5A                     _TiInitTimer:
  6559                           	callstack 28
  6560                           
  6561                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  6562                           
  6563                           ;incstack = 0
  6564  001A5A  9ED0               	bcf	208,7,c	;volatile
  6565                           
  6566                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  6567  001A5C  8EF2               	bsf	242,7,c	;volatile
  6568                           
  6569                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  6570  001A5E  8CF2               	bsf	242,6,c	;volatile
  6571                           
  6572                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  6573  001A60  8AF2               	bsf	242,5,c	;volatile
  6574                           
  6575                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  6576  001A62  94F2               	bcf	242,2,c	;volatile
  6577                           
  6578                           ;TiTTimer.c: 25:     T0CON = 136;
  6579  001A64  0E88               	movlw	136
  6580  001A66  6ED5               	movwf	213,c	;volatile
  6581                           
  6582                           ;TiTTimer.c: 27:     TMR0H = 223;
  6583                           
  6584                           ;TiTTimer.c: 28:     TMR0L = 148;
  6585  001A68  EC52  F00C         	call	PL48	;call to abstracted procedure
  6586                           
  6587                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  6588  001A6C  8ED5               	bsf	213,7,c	;volatile
  6589                           
  6590                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  6591  001A6E  6A32               	clrf	_counter^0,c
  6592  001A70                     l4521:
  6593  001A70  0E07               	movlw	7
  6594  001A72  6432               	cpfsgt	_counter^0,c
  6595  001A74  D001               	goto	l4525
  6596  001A76  0C07               	retlw	7
  6597  001A78                     l4525:
  6598                           
  6599                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  6600  001A78  EC12  F00D         	call	PL12	;call to abstracted procedure
  6601  001A7C  6ADF               	clrf	indf2,c
  6602                           
  6603                           ;TiTTimer.c: 33:     }
  6604  001A7E  2A32               	incf	_counter^0,f,c
  6605  001A80  D7F7               	goto	l4521
  6606  001A82                     __end_of_TiInitTimer:
  6607                           	callstack 0
  6608                           
  6609 ;; *************** function _TeTeclat *****************
  6610 ;; Defined at:
  6611 ;;		line 22 in file "TeTeclat.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;		None
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;		None
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      void 
  6618 ;; Registers used:
  6619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/1
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1
  6625 ;;      Params:         0       0       0
  6626 ;;      Locals:         0       0       0
  6627 ;;      Temps:          3       0       0
  6628 ;;      Totals:         3       0       0
  6629 ;;Total ram usage:        3 bytes
  6630 ;; Hardware stack levels used: 1
  6631 ;; Hardware stack levels required when called: 3
  6632 ;; This function calls:
  6633 ;;		_MsetNovaTecla
  6634 ;;		_SsetNovaTecla
  6635 ;;		_TiGetTics
  6636 ;;		_TiResetTics
  6637 ;; This function is called by:
  6638 ;;		_main
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           	psect	text58
  6643  001082                     __ptext58:
  6644                           	callstack 0
  6645  001082                     _TeTeclat:
  6646                           	callstack 27
  6647                           
  6648                           ;TeTeclat.c: 23:  static char state = 0;;TeTeclat.c: 24:     static char cols=0;;TeTecla
      +                          t.c: 25:     static char files = 0;;TeTeclat.c: 26:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  6649                           
  6650                           ;incstack = 0
  6651  001082  A083               	btfss	131,0,c	;volatile
  6652  001084  D003               	goto	u5710
  6653  001086  6A6A               	clrf	??_TeTeclat^0,c
  6654  001088  2A6A               	incf	??_TeTeclat^0,f,c
  6655  00108A  D001               	goto	u5718
  6656  00108C                     u5710:
  6657  00108C  6A6A               	clrf	??_TeTeclat^0,c
  6658  00108E                     u5718:
  6659  00108E  0E01               	movlw	1
  6660  001090  A283               	btfss	131,1,c	;volatile
  6661  001092  0E00               	movlw	0
  6662  001094  0D02               	mullw	2
  6663  001096  CFF3 F06B          	movff	prodl,??_TeTeclat+1
  6664  00109A  0E01               	movlw	1
  6665  00109C  A483               	btfss	131,2,c	;volatile
  6666  00109E  0E00               	movlw	0
  6667  0010A0  0D03               	mullw	3
  6668  0010A2  CFF3 F06C          	movff	prodl,??_TeTeclat+2
  6669  0010A6  0E01               	movlw	1
  6670  0010A8  A683               	btfss	131,3,c	;volatile
  6671  0010AA  0E00               	movlw	0
  6672  0010AC  0D04               	mullw	4
  6673  0010AE  50F3               	movf	243,w,c
  6674  0010B0  246C               	addwf	(??_TeTeclat+2)^0,w,c
  6675  0010B2  246B               	addwf	(??_TeTeclat+1)^0,w,c
  6676  0010B4  246A               	addwf	??_TeTeclat^0,w,c
  6677  0010B6  6E33               	movwf	TeTeclat@files^0,c
  6678                           
  6679                           ;TeTeclat.c: 27:  switch(state) {
  6680  0010B8  D058               	goto	l5861
  6681  0010BA                     l5787:
  6682                           
  6683                           ;TeTeclat.c: 29:    if (files==0) {
  6684  0010BA  5033               	movf	TeTeclat@files^0,w,c
  6685  0010BC  E106               	bnz	l5793
  6686                           
  6687                           ;TeTeclat.c: 30:     LATDbits.LD4=1;
  6688  0010BE  888C               	bsf	140,4,c	;volatile
  6689                           
  6690                           ;TeTeclat.c: 31:     LATDbits.LD5=0;
  6691  0010C0  9A8C               	bcf	140,5,c	;volatile
  6692                           
  6693                           ;TeTeclat.c: 32:     LATDbits.LD6=0;
  6694  0010C2  9C8C               	bcf	140,6,c	;volatile
  6695                           
  6696                           ;TeTeclat.c: 33:     cols=0;
  6697  0010C4  6A34               	clrf	TeTeclat@cols^0,c
  6698  0010C6                     l5791:
  6699                           
  6700                           ;TeTeclat.c: 34:     state++;
  6701  0010C6  2A35               	incf	TeTeclat@state^0,f,c
  6702                           
  6703                           ;TeTeclat.c: 35:    }
  6704  0010C8  0012               	return	
  6705  0010CA                     l5793:
  6706  0010CA  5033               	movf	TeTeclat@files^0,w,c
  6707  0010CC  B4D8               	btfsc	status,2,c
  6708  0010CE  0012               	return	
  6709                           
  6710                           ;TeTeclat.c: 37:     TiResetTics(tiTeclat);
  6711  0010D0  5036               	movf	_tiTeclat^0,w,c
  6712  0010D2  ECE5  F00D         	call	_TiResetTics
  6713  0010D6                     l5797:
  6714                           
  6715                           ;TeTeclat.c: 38:     state = 3;
  6716  0010D6  0E03               	movlw	3
  6717  0010D8  6E35               	movwf	TeTeclat@state^0,c
  6718  0010DA  0C03               	retlw	3
  6719  0010DC                     l5799:
  6720                           
  6721                           ;TeTeclat.c: 42:    if (files==0) {
  6722  0010DC  5033               	movf	TeTeclat@files^0,w,c
  6723  0010DE  E106               	bnz	l5807
  6724                           
  6725                           ;TeTeclat.c: 43:     LATDbits.LD4=0;
  6726  0010E0  988C               	bcf	140,4,c	;volatile
  6727                           
  6728                           ;TeTeclat.c: 44:     LATDbits.LD5=1;
  6729  0010E2  8A8C               	bsf	140,5,c	;volatile
  6730                           
  6731                           ;TeTeclat.c: 45:     LATDbits.LD6=0;
  6732  0010E4  9C8C               	bcf	140,6,c	;volatile
  6733                           
  6734                           ;TeTeclat.c: 46:     cols=1;
  6735  0010E6  0E01               	movlw	1
  6736  0010E8  6E34               	movwf	TeTeclat@cols^0,c
  6737  0010EA  D7ED               	goto	l5791
  6738  0010EC                     l5807:
  6739  0010EC  5033               	movf	TeTeclat@files^0,w,c
  6740  0010EE  B4D8               	btfsc	status,2,c
  6741  0010F0  0012               	return	
  6742                           
  6743                           ;TeTeclat.c: 50:     TiResetTics(tiTeclat);
  6744  0010F2  5036               	movf	_tiTeclat^0,w,c
  6745  0010F4  ECE5  F00D         	call	_TiResetTics
  6746  0010F8  D7EE               	goto	l5797
  6747  0010FA                     l5813:
  6748                           
  6749                           ;TeTeclat.c: 55:    if (files==0) {
  6750  0010FA  5033               	movf	TeTeclat@files^0,w,c
  6751  0010FC  E107               	bnz	l5821
  6752                           
  6753                           ;TeTeclat.c: 56:     LATDbits.LD4=0;
  6754  0010FE  988C               	bcf	140,4,c	;volatile
  6755                           
  6756                           ;TeTeclat.c: 57:     LATDbits.LD5=0;
  6757  001100  9A8C               	bcf	140,5,c	;volatile
  6758                           
  6759                           ;TeTeclat.c: 58:     LATDbits.LD6=1;
  6760  001102  8C8C               	bsf	140,6,c	;volatile
  6761                           
  6762                           ;TeTeclat.c: 59:     cols=2;
  6763  001104  0E02               	movlw	2
  6764  001106  6E34               	movwf	TeTeclat@cols^0,c
  6765  001108                     l5819:
  6766                           
  6767                           ;TeTeclat.c: 60:     state = 0;
  6768  001108  6A35               	clrf	TeTeclat@state^0,c
  6769                           
  6770                           ;TeTeclat.c: 61:    }
  6771  00110A  0012               	return	
  6772  00110C                     l5821:
  6773  00110C  5033               	movf	TeTeclat@files^0,w,c
  6774  00110E  B4D8               	btfsc	status,2,c
  6775  001110  0012               	return	
  6776                           
  6777                           ;TeTeclat.c: 63:     TiResetTics(tiTeclat);
  6778  001112  5036               	movf	_tiTeclat^0,w,c
  6779  001114  ECE5  F00D         	call	_TiResetTics
  6780  001118  D7D6               	goto	l5791
  6781  00111A                     l5827:
  6782                           
  6783                           ;TeTeclat.c: 68:    if (TiGetTics(tiTeclat)>=0) {
  6784  00111A  5036               	movf	_tiTeclat^0,w,c
  6785  00111C  EC41  F00D         	call	_TiGetTics
  6786  001120  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  6787  001122  0012               	return	
  6788  001124  D7D0               	goto	l5791
  6789  001126                     l5831:
  6790                           
  6791                           ;TeTeclat.c: 73:    if (files==0) {
  6792  001126  5033               	movf	TeTeclat@files^0,w,c
  6793  001128  E103               	bnz	l5835
  6794                           
  6795                           ;TeTeclat.c: 74:     state = 1;
  6796  00112A  0E01               	movlw	1
  6797  00112C  6E35               	movwf	TeTeclat@state^0,c
  6798                           
  6799                           ;TeTeclat.c: 75:    }
  6800  00112E  0C01               	retlw	1
  6801  001130                     l5835:
  6802  001130  5033               	movf	TeTeclat@files^0,w,c
  6803  001132  B4D8               	btfsc	status,2,c
  6804  001134  0012               	return	
  6805                           
  6806                           ;TeTeclat.c: 77:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  6807  001136  D830               	call	PL18	;call to abstracted procedure
  6808  001138  EC8E  F00E         	call	_MsetNovaTecla
  6809                           
  6810                           ;TeTeclat.c: 78:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  6811  00113C  D82D               	call	PL18	;call to abstracted procedure
  6812  00113E  EC8A  F00E         	call	_SsetNovaTecla
  6813  001142  D7C1               	goto	l5791
  6814  001144                     l5841:
  6815                           
  6816                           ;TeTeclat.c: 84:    if (files==0) {
  6817  001144  5033               	movf	TeTeclat@files^0,w,c
  6818  001146  A4D8               	btfss	status,2,c
  6819  001148  0012               	return	
  6820                           
  6821                           ;TeTeclat.c: 85:     TiResetTics(tiTeclat);
  6822  00114A  5036               	movf	_tiTeclat^0,w,c
  6823  00114C  ECE5  F00D         	call	_TiResetTics
  6824  001150  D7BA               	goto	l5791
  6825  001152                     l5847:
  6826                           
  6827                           ;TeTeclat.c: 90:    if (TiGetTics(tiTeclat)>=0) {
  6828  001152  5036               	movf	_tiTeclat^0,w,c
  6829  001154  EC41  F00D         	call	_TiGetTics
  6830  001158  D7E3               	goto	L3
  6831  00115A                     l5851:
  6832                           
  6833                           ;TeTeclat.c: 95:    if (files!=0) {
  6834  00115A  5033               	movf	TeTeclat@files^0,w,c
  6835  00115C  E003               	bz	l5855
  6836                           
  6837                           ;TeTeclat.c: 96:     state = 5;
  6838  00115E  0E05               	movlw	5
  6839  001160  6E35               	movwf	TeTeclat@state^0,c
  6840                           
  6841                           ;TeTeclat.c: 97:    }
  6842  001162  0C05               	retlw	5
  6843  001164                     l5855:
  6844  001164  5033               	movf	TeTeclat@files^0,w,c
  6845  001166  E0D0               	bz	l5819
  6846  001168  0012               	return	
  6847  00116A                     l5861:
  6848  00116A  5035               	movf	TeTeclat@state^0,w,c
  6849  00116C  6E6A               	movwf	??_TeTeclat^0,c
  6850  00116E  6A6B               	clrf	(??_TeTeclat+1)^0,c
  6851                           
  6852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6853                           ; Switch size 1, requested type "space"
  6854                           ; Number of cases is 1, Range of values is 0 to 0
  6855                           ; switch strategies available:
  6856                           ; Name         Instructions Cycles
  6857                           ; simple_byte            4     3 (average)
  6858                           ;	Chosen strategy is simple_byte
  6859  001170  506B               	movf	(??_TeTeclat+1)^0,w,c
  6860  001172  A4D8               	btfss	status,2,c
  6861  001174  0012               	return	
  6862                           
  6863                           ; Switch size 1, requested type "space"
  6864                           ; Number of cases is 8, Range of values is 0 to 7
  6865                           ; switch strategies available:
  6866                           ; Name         Instructions Cycles
  6867                           ; simple_byte           25    13 (average)
  6868                           ;	Chosen strategy is simple_byte
  6869  001176  506A               	movf	??_TeTeclat^0,w,c
  6870  001178  E0A0               	bz	l5787
  6871  00117A  0A01               	xorlw	1	; case 1
  6872  00117C  E0AF               	bz	l5799
  6873  00117E  0A03               	xorlw	3	; case 2
  6874  001180  E0BC               	bz	l5813
  6875  001182  0A01               	xorlw	1	; case 3
  6876  001184  E0CA               	bz	l5827
  6877  001186  0A07               	xorlw	7	; case 4
  6878  001188  E0CE               	bz	l5831
  6879  00118A  0A01               	xorlw	1	; case 5
  6880  00118C  E0DB               	bz	l5841
  6881  00118E  0A03               	xorlw	3	; case 6
  6882  001190  E0E0               	bz	l5847
  6883  001192  0A01               	xorlw	1	; case 7
  6884  001194  E0E2               	bz	l5851
  6885  001196  0012               	return		;funcret
  6886  001198                     __end_of_TeTeclat:
  6887                           	callstack 0
  6888  001198                     PL18:
  6889                           	callstack 27
  6890  001198  5033               	movf	TeTeclat@files^0,w,c
  6891  00119A  0D03               	mullw	3
  6892  00119C  50F3               	movf	243,w,c
  6893  00119E  0FB0               	addlw	low (_teclaPremuda+253)
  6894  0011A0  2434               	addwf	TeTeclat@cols^0,w,c
  6895  0011A2  6ED9               	movwf	fsr2l,c
  6896  0011A4  6ADA               	clrf	fsr2h,c
  6897  0011A6  50DF               	movf	indf2,w,c
  6898  0011A8  0012               	return	
  6899  0011AA                     __end_ofPL18:
  6900                           	callstack 0
  6901                           
  6902 ;; *************** function _SsetNovaTecla *****************
  6903 ;; Defined at:
  6904 ;;		line 125 in file "Ssms.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;  tecla           1    wreg     unsigned char 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;  tecla           1    5[COMRAM] unsigned char 
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  1    wreg      void 
  6911 ;; Registers used:
  6912 ;;		wreg
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/1
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1
  6918 ;;      Params:         0       0       0
  6919 ;;      Locals:         1       0       0
  6920 ;;      Temps:          0       0       0
  6921 ;;      Totals:         1       0       0
  6922 ;;Total ram usage:        1 bytes
  6923 ;; Hardware stack levels used: 1
  6924 ;; Hardware stack levels required when called: 2
  6925 ;; This function calls:
  6926 ;;		Nothing
  6927 ;; This function is called by:
  6928 ;;		_TeTeclat
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           	psect	text59
  6933  001D14                     __ptext59:
  6934                           	callstack 0
  6935  001D14                     _SsetNovaTecla:
  6936                           	callstack 27
  6937                           
  6938                           ;incstack = 0
  6939                           ;SsetNovaTecla@tecla stored from wreg
  6940  001D14  6E63               	movwf	SsetNovaTecla@tecla^0,c
  6941                           
  6942                           ;Ssms.c: 126:     novaTecla = tecla;
  6943  001D16  C063  F053         	movff	SsetNovaTecla@tecla,_novaTecla
  6944  001D1A  0012               	return		;funcret
  6945  001D1C                     __end_of_SsetNovaTecla:
  6946                           	callstack 0
  6947                           
  6948 ;; *************** function _MsetNovaTecla *****************
  6949 ;; Defined at:
  6950 ;;		line 28 in file "Menu.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  tecla           1    wreg     unsigned char 
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;  tecla           1    5[COMRAM] unsigned char 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  1    wreg      void 
  6957 ;; Registers used:
  6958 ;;		wreg
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/1
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMRAM   BANK0   BANK1
  6964 ;;      Params:         0       0       0
  6965 ;;      Locals:         1       0       0
  6966 ;;      Temps:          0       0       0
  6967 ;;      Totals:         1       0       0
  6968 ;;Total ram usage:        1 bytes
  6969 ;; Hardware stack levels used: 1
  6970 ;; Hardware stack levels required when called: 2
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_TeTeclat
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text60
  6979  001D1C                     __ptext60:
  6980                           	callstack 0
  6981  001D1C                     _MsetNovaTecla:
  6982                           	callstack 27
  6983                           
  6984                           ;incstack = 0
  6985                           ;MsetNovaTecla@tecla stored from wreg
  6986  001D1C  6E63               	movwf	MsetNovaTecla@tecla^0,c
  6987                           
  6988                           ;Menu.c: 29:     NovaTecla = tecla;
  6989  001D1E  C063  F050         	movff	MsetNovaTecla@tecla,_NovaTecla
  6990  001D22  0012               	return		;funcret
  6991  001D24                     __end_of_MsetNovaTecla:
  6992                           	callstack 0
  6993                           
  6994 ;; *************** function _TeInit *****************
  6995 ;; Defined at:
  6996 ;;		line 18 in file "TeTeclat.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;		None
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;		None
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      void 
  7003 ;; Registers used:
  7004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMRAM   BANK0   BANK1
  7010 ;;      Params:         0       0       0
  7011 ;;      Locals:         0       0       0
  7012 ;;      Temps:          0       0       0
  7013 ;;      Totals:         0       0       0
  7014 ;;Total ram usage:        0 bytes
  7015 ;; Hardware stack levels used: 1
  7016 ;; Hardware stack levels required when called: 3
  7017 ;; This function calls:
  7018 ;;		_TiGetTimer
  7019 ;; This function is called by:
  7020 ;;		_main
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           	psect	text61
  7025  001D24                     __ptext61:
  7026                           	callstack 0
  7027  001D24                     _TeInit:
  7028                           	callstack 27
  7029                           
  7030                           ;TeTeclat.c: 19:     tiTeclat=TiGetTimer();
  7031                           
  7032                           ;incstack = 0
  7033  001D24  EC03  F00D         	call	_TiGetTimer	;wreg free
  7034  001D28  6E36               	movwf	_tiTeclat^0,c
  7035  001D2A  0012               	return		;funcret
  7036  001D2C                     __end_of_TeInit:
  7037                           	callstack 0
  7038                           
  7039 ;; *************** function _Sinit *****************
  7040 ;; Defined at:
  7041 ;;		line 18 in file "Ssms.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;		None
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;		None
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  1    wreg      void 
  7048 ;; Registers used:
  7049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMRAM   BANK0   BANK1
  7055 ;;      Params:         0       0       0
  7056 ;;      Locals:         0       0       0
  7057 ;;      Temps:          0       0       0
  7058 ;;      Totals:         0       0       0
  7059 ;;Total ram usage:        0 bytes
  7060 ;; Hardware stack levels used: 1
  7061 ;; Hardware stack levels required when called: 3
  7062 ;; This function calls:
  7063 ;;		_TiGetTimer
  7064 ;; This function is called by:
  7065 ;;		_main
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text62
  7070  001D2C                     __ptext62:
  7071                           	callstack 0
  7072  001D2C                     _Sinit:
  7073                           	callstack 27
  7074                           
  7075                           ;Ssms.c: 19:     timerSMS = TiGetTimer();
  7076                           
  7077                           ;incstack = 0
  7078  001D2C  EC03  F00D         	call	_TiGetTimer	;wreg free
  7079  001D30  6E52               	movwf	_timerSMS^0,c
  7080  001D32  0012               	return		;funcret
  7081  001D34                     __end_of_Sinit:
  7082                           	callstack 0
  7083                           
  7084 ;; *************** function _SMotor *****************
  7085 ;; Defined at:
  7086 ;;		line 22 in file "Ssms.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;		None
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;		None
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1    wreg      void 
  7093 ;; Registers used:
  7094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1
  7100 ;;      Params:         0       0       0
  7101 ;;      Locals:         0       0       0
  7102 ;;      Temps:          2       0       0
  7103 ;;      Totals:         2       0       0
  7104 ;;Total ram usage:        2 bytes
  7105 ;; Hardware stack levels used: 1
  7106 ;; Hardware stack levels required when called: 3
  7107 ;; This function calls:
  7108 ;;		_MNovaLletra
  7109 ;;		_TiGetTics
  7110 ;;		_TiResetTics
  7111 ;; This function is called by:
  7112 ;;		_main
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text63
  7117  000ED4                     __ptext63:
  7118                           	callstack 0
  7119  000ED4                     _SMotor:
  7120                           	callstack 27
  7121                           
  7122                           ;Ssms.c: 23:  static char state = 0;;Ssms.c: 25:  switch(state) {
  7123                           
  7124                           ;incstack = 0
  7125  000ED4  D0BA               	goto	l4697
  7126  000ED6                     l4537:
  7127                           
  7128                           ;Ssms.c: 27:    if (novaTecla != -1 && setSMSon == 1) {
  7129  000ED6  2853               	incf	_novaTecla^0,w,c
  7130  000ED8  E008               	bz	l4545
  7131  000EDA  A079               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7132  000EDC  D006               	goto	l4545
  7133                           
  7134                           ;Ssms.c: 28:     TiResetTics(timerSMS);
  7135  000EDE  5052               	movf	_timerSMS^0,w,c
  7136  000EE0  ECE5  F00D         	call	_TiResetTics
  7137                           
  7138                           ;Ssms.c: 29:     state = 3;
  7139  000EE4  0E03               	movlw	3
  7140  000EE6  6E37               	movwf	SMotor@state^0,c
  7141                           
  7142                           ;Ssms.c: 30:    }
  7143  000EE8  0C03               	retlw	3
  7144  000EEA                     l4545:
  7145  000EEA  2853               	incf	_novaTecla^0,w,c
  7146  000EEC  A4D8               	btfss	status,2,c
  7147  000EEE  0012               	return	
  7148  000EF0  5052               	movf	_timerSMS^0,w,c
  7149  000EF2  EC41  F00D         	call	_TiGetTics
  7150  000EF6  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  7151  000EF8  0012               	return	
  7152  000EFA  D8BE               	call	PL66	;call to abstracted procedure
  7153  000EFC  A0D8               	btfss	status,0,c
  7154  000EFE  0012               	return	
  7155  000F00  2854               	incf	_lletraASCII^0,w,c
  7156  000F02  A4D8               	btfss	status,2,c
  7157  000F04  A079               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  7158  000F06  0012               	return	
  7159                           
  7160                           ;Ssms.c: 32:     MNovaLletra(lletraASCII);
  7161  000F08  5054               	movf	_lletraASCII^0,w,c
  7162  000F0A  EC9A  F00E         	call	_MNovaLletra
  7163                           
  7164                           ;Ssms.c: 33:     lletraASCII = -1;
  7165  000F0E  6854               	setf	_lletraASCII^0,c
  7166                           
  7167                           ;Ssms.c: 34:     ultimaTecla = -1;
  7168  000F10  6851               	setf	_ultimaTecla^0,c
  7169                           
  7170                           ;Ssms.c: 35:     zeroTecla = 0;
  7171  000F12  6A38               	clrf	_zeroTecla^0,c
  7172  000F14                     l4561:
  7173                           
  7174                           ;Ssms.c: 36:     state = 0;
  7175  000F14  6A37               	clrf	SMotor@state^0,c
  7176  000F16  0012               	return	
  7177  000F18                     l4563:
  7178                           
  7179                           ;Ssms.c: 40:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 602) {
  7180  000F18  5051               	movf	_ultimaTecla^0,w,c
  7181  000F1A  1853               	xorwf	_novaTecla^0,w,c
  7182  000F1C  E10D               	bnz	l4573
  7183  000F1E  5052               	movf	_timerSMS^0,w,c
  7184  000F20  EC41  F00D         	call	_TiGetTics
  7185  000F24  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  7186  000F26  D002               	goto	u3660
  7187  000F28  D8A7               	call	PL66	;call to abstracted procedure
  7188  000F2A  E206               	bc	l4573
  7189  000F2C                     u3660:
  7190                           
  7191                           ;Ssms.c: 41:     novaTecla = -1;
  7192  000F2C  6853               	setf	_novaTecla^0,c
  7193                           
  7194                           ;Ssms.c: 42:     sumaPulsacions++;
  7195  000F2E  2A39               	incf	_sumaPulsacions^0,f,c
  7196                           
  7197                           ;Ssms.c: 43:     lletraASCII++;
  7198  000F30  2A54               	incf	_lletraASCII^0,f,c
  7199                           
  7200                           ;Ssms.c: 44:     state = 2;
  7201  000F32  0E02               	movlw	2
  7202  000F34  6E37               	movwf	SMotor@state^0,c
  7203                           
  7204                           ;Ssms.c: 45:    }
  7205  000F36  0C02               	retlw	2
  7206  000F38                     l4573:
  7207  000F38  2853               	incf	_novaTecla^0,w,c
  7208  000F3A  B4D8               	btfsc	status,2,c
  7209  000F3C  0012               	return	
  7210  000F3E  5051               	movf	_ultimaTecla^0,w,c
  7211  000F40  1853               	xorwf	_novaTecla^0,w,c
  7212  000F42  B4D8               	btfsc	status,2,c
  7213  000F44  0012               	return	
  7214                           
  7215                           ;Ssms.c: 47:     MNovaLletra(lletraASCII);
  7216  000F46  5054               	movf	_lletraASCII^0,w,c
  7217  000F48  EC9A  F00E         	call	_MNovaLletra
  7218                           
  7219                           ;Ssms.c: 48:     if(novaTecla != 0){
  7220  000F4C  5053               	movf	_novaTecla^0,w,c
  7221  000F4E  E005               	bz	l4583
  7222                           
  7223                           ;Ssms.c: 49:       lletraASCII = lletraInici[novaTecla-2];
  7224  000F50  5053               	movf	_novaTecla^0,w,c
  7225  000F52  0FA8               	addlw	low (_lletraInici+254)
  7226  000F54  EC66  F007         	call	PL42	;call to abstracted procedure
  7227  000F58  D001               	goto	L4
  7228  000F5A                     l4583:
  7229                           
  7230                           ;Ssms.c: 51:       lletraASCII = '0';
  7231  000F5A  0E30               	movlw	48
  7232  000F5C                     L4:
  7233  000F5C  6E54               	movwf	_lletraASCII^0,c
  7234                           
  7235                           ;Ssms.c: 53:     zeroTecla=0;
  7236  000F5E  6A38               	clrf	_zeroTecla^0,c
  7237                           
  7238                           ;Ssms.c: 54:     ultimaTecla = novaTecla;
  7239  000F60  C053  F051         	movff	_novaTecla,_ultimaTecla
  7240                           
  7241                           ;Ssms.c: 55:     sumaPulsacions = 0;
  7242  000F64  6A39               	clrf	_sumaPulsacions^0,c
  7243  000F66                     l4591:
  7244                           
  7245                           ;Ssms.c: 56:     novaTecla = -1;
  7246  000F66  6853               	setf	_novaTecla^0,c
  7247  000F68  D7D5               	goto	l4561
  7248  000F6A                     l4595:
  7249                           
  7250                           ;Ssms.c: 61:    if (ultimaTecla != 7 && ultimaTecla != 9 && ultimaTecla != 0) {
  7251  000F6A  0E07               	movlw	7
  7252  000F6C  1851               	xorwf	_ultimaTecla^0,w,c
  7253  000F6E  E008               	bz	l4603
  7254  000F70  0E09               	movlw	9
  7255  000F72  1851               	xorwf	_ultimaTecla^0,w,c
  7256  000F74  E005               	bz	l4603
  7257  000F76  5051               	movf	_ultimaTecla^0,w,c
  7258  000F78  E003               	bz	l4603
  7259                           
  7260                           ;Ssms.c: 62:     state = 5;
  7261  000F7A  0E05               	movlw	5
  7262  000F7C  6E37               	movwf	SMotor@state^0,c
  7263                           
  7264                           ;Ssms.c: 63:    }
  7265  000F7E  0C05               	retlw	5
  7266  000F80                     l4603:
  7267  000F80  0E07               	movlw	7
  7268  000F82  1851               	xorwf	_ultimaTecla^0,w,c
  7269  000F84  E003               	bz	u3740
  7270  000F86  0E09               	movlw	9
  7271  000F88  1851               	xorwf	_ultimaTecla^0,w,c
  7272  000F8A  E103               	bnz	l4609
  7273  000F8C                     u3740:
  7274                           
  7275                           ;Ssms.c: 65:     state = 6;
  7276  000F8C  0E06               	movlw	6
  7277  000F8E  6E37               	movwf	SMotor@state^0,c
  7278                           
  7279                           ;Ssms.c: 66:    }
  7280  000F90  0C06               	retlw	6
  7281  000F92                     l4609:
  7282  000F92  5051               	movf	_ultimaTecla^0,w,c
  7283  000F94  A4D8               	btfss	status,2,c
  7284  000F96  0012               	return	
  7285                           
  7286                           ;Ssms.c: 68:     zeroTecla++;
  7287  000F98  2A38               	incf	_zeroTecla^0,f,c
  7288                           
  7289                           ;Ssms.c: 69:     if(zeroTecla == 2) zeroTecla = 0;
  7290  000F9A  0E02               	movlw	2
  7291  000F9C  1838               	xorwf	_zeroTecla^0,w,c
  7292  000F9E  E101               	bnz	l4617
  7293  000FA0  6A38               	clrf	_zeroTecla^0,c
  7294  000FA2                     l4617:
  7295                           
  7296                           ;Ssms.c: 70:     lletraASCII = arrayZero[zeroTecla];
  7297  000FA2  5038               	movf	_zeroTecla^0,w,c
  7298  000FA4  0F42               	addlw	low _arrayZero
  7299  000FA6  EC66  F007         	call	PL42	;call to abstracted procedure
  7300  000FAA  D041               	goto	L5
  7301  000FAC                     l4621:
  7302                           
  7303                           ;Ssms.c: 75:    if ((novaTecla > 1 || novaTecla == 0) && novaTecla < 10) {
  7304  000FAC  5053               	movf	_novaTecla^0,w,c
  7305  000FAE  0A80               	xorlw	128
  7306  000FB0  0F7E               	addlw	-130
  7307  000FB2  E202               	bc	u3780
  7308  000FB4  5053               	movf	_novaTecla^0,w,c
  7309  000FB6  E107               	bnz	l4629
  7310  000FB8                     u3780:
  7311  000FB8  5053               	movf	_novaTecla^0,w,c
  7312  000FBA  0A80               	xorlw	128
  7313  000FBC  0F76               	addlw	-138
  7314  000FBE  E203               	bc	l4629
  7315                           
  7316                           ;Ssms.c: 76:     state = 1;
  7317  000FC0  0E01               	movlw	1
  7318  000FC2  6E37               	movwf	SMotor@state^0,c
  7319                           
  7320                           ;Ssms.c: 77:    }
  7321  000FC4  0C01               	retlw	1
  7322  000FC6                     l4629:
  7323  000FC6  5053               	movf	_novaTecla^0,w,c
  7324  000FC8  E00B               	bz	l4641
  7325  000FCA  5053               	movf	_novaTecla^0,w,c
  7326  000FCC  0A80               	xorlw	128
  7327  000FCE  0F7E               	addlw	-130
  7328  000FD0  E207               	bc	l4641
  7329  000FD2  2854               	incf	_lletraASCII^0,w,c
  7330  000FD4  E105               	bnz	l4641
  7331                           
  7332                           ;Ssms.c: 79:     MNovaLletra(novaTecla+48);
  7333  000FD6  5053               	movf	_novaTecla^0,w,c
  7334  000FD8  0F30               	addlw	48
  7335  000FDA  EC9A  F00E         	call	_MNovaLletra
  7336  000FDE  D7C3               	goto	l4591
  7337  000FE0                     l4641:
  7338  000FE0  5053               	movf	_novaTecla^0,w,c
  7339  000FE2  B4D8               	btfsc	status,2,c
  7340  000FE4  0012               	return	
  7341  000FE6  5053               	movf	_novaTecla^0,w,c
  7342  000FE8  0A80               	xorlw	128
  7343  000FEA  0F7E               	addlw	-130
  7344  000FEC  B0D8               	btfsc	status,0,c
  7345  000FEE  0012               	return	
  7346  000FF0  2854               	incf	_lletraASCII^0,w,c
  7347  000FF2  B4D8               	btfsc	status,2,c
  7348  000FF4  0012               	return	
  7349                           
  7350                           ;Ssms.c: 84:     MNovaLletra(lletraASCII);
  7351  000FF6  5054               	movf	_lletraASCII^0,w,c
  7352  000FF8  EC9A  F00E         	call	_MNovaLletra
  7353                           
  7354                           ;Ssms.c: 85:     lletraASCII = -1;
  7355  000FFC  6854               	setf	_lletraASCII^0,c
  7356                           
  7357                           ;Ssms.c: 86:     state = 4;
  7358  000FFE  0E04               	movlw	4
  7359  001000  6E37               	movwf	SMotor@state^0,c
  7360  001002  0C04               	retlw	4
  7361  001004                     l4653:
  7362                           
  7363                           ;Ssms.c: 90:    MNovaLletra(novaTecla+48);
  7364  001004  5053               	movf	_novaTecla^0,w,c
  7365  001006  0F30               	addlw	48
  7366  001008  EC9A  F00E         	call	_MNovaLletra
  7367  00100C  D7AC               	goto	l4591
  7368  00100E                     l4659:
  7369                           
  7370                           ;Ssms.c: 95:    if (sumaPulsacions == 4) {
  7371  00100E  0E04               	movlw	4
  7372  001010  1839               	xorwf	_sumaPulsacions^0,w,c
  7373  001012  E108               	bnz	l4667
  7374  001014                     u3860:
  7375                           
  7376                           ;Ssms.c: 96:     lletraASCII = lletraInici[ultimaTecla-2];
  7377  001014  5051               	movf	_ultimaTecla^0,w,c
  7378  001016  0FA8               	addlw	low (_lletraInici+254)
  7379  001018  6ED9               	movwf	fsr2l,c
  7380  00101A  6ADA               	clrf	fsr2h,c
  7381  00101C  50DF               	movf	indf2,w,c
  7382  00101E  6E54               	movwf	_lletraASCII^0,c
  7383                           
  7384                           ;Ssms.c: 97:     sumaPulsacions = 0;
  7385  001020  6A39               	clrf	_sumaPulsacions^0,c
  7386  001022  D778               	goto	l4561
  7387  001024                     l4667:
  7388  001024  0E03               	movlw	3
  7389  001026  1839               	xorwf	_sumaPulsacions^0,w,c
  7390  001028  E104               	bnz	l4673
  7391  00102A                     u3870:
  7392                           
  7393                           ;Ssms.c: 101:     lletraASCII = ultimaTecla+48;
  7394  00102A  5051               	movf	_ultimaTecla^0,w,c
  7395  00102C  0F30               	addlw	48
  7396  00102E                     L5:
  7397  00102E  6E54               	movwf	_lletraASCII^0,c
  7398  001030  D771               	goto	l4561
  7399  001032                     l4673:
  7400  001032  0E03               	movlw	3
  7401  001034  6039               	cpfslt	_sumaPulsacions^0,c
  7402  001036  0012               	return	
  7403  001038  D76D               	goto	l4561
  7404  00103A                     l4677:
  7405                           
  7406                           ;Ssms.c: 109:    if (sumaPulsacions == 4) {
  7407  00103A  0E04               	movlw	4
  7408  00103C  1839               	xorwf	_sumaPulsacions^0,w,c
  7409  00103E  E0F5               	bz	u3870
  7410  001040  0E05               	movlw	5
  7411  001042  1839               	xorwf	_sumaPulsacions^0,w,c
  7412  001044  E0E7               	bz	u3860
  7413  001046  0E04               	movlw	4
  7414  001048  D7F5               	goto	L6
  7415  00104A                     l4697:
  7416  00104A  5037               	movf	SMotor@state^0,w,c
  7417  00104C  6E6A               	movwf	??_SMotor^0,c
  7418  00104E  6A6B               	clrf	(??_SMotor+1)^0,c
  7419                           
  7420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7421                           ; Switch size 1, requested type "space"
  7422                           ; Number of cases is 1, Range of values is 0 to 0
  7423                           ; switch strategies available:
  7424                           ; Name         Instructions Cycles
  7425                           ; simple_byte            4     3 (average)
  7426                           ;	Chosen strategy is simple_byte
  7427  001050  506B               	movf	(??_SMotor+1)^0,w,c
  7428  001052  A4D8               	btfss	status,2,c
  7429  001054  0012               	return	
  7430                           
  7431                           ; Switch size 1, requested type "space"
  7432                           ; Number of cases is 7, Range of values is 0 to 6
  7433                           ; switch strategies available:
  7434                           ; Name         Instructions Cycles
  7435                           ; simple_byte           22    12 (average)
  7436                           ;	Chosen strategy is simple_byte
  7437  001056  506A               	movf	??_SMotor^0,w,c
  7438  001058  E101 D73D          	bz	l4537
  7439  00105C  0A01               	xorlw	1	; case 1
  7440  00105E  E101 D75B          	bz	l4563
  7441  001062  0A03               	xorlw	3	; case 2
  7442  001064  E082               	bz	l4595
  7443  001066  0A01               	xorlw	1	; case 3
  7444  001068  E0A1               	bz	l4621
  7445  00106A  0A07               	xorlw	7	; case 4
  7446  00106C  E0CB               	bz	l4653
  7447  00106E  0A01               	xorlw	1	; case 5
  7448  001070  E0CE               	bz	l4659
  7449  001072  0A03               	xorlw	3	; case 6
  7450  001074  E0E2               	bz	l4677
  7451  001076  0012               	return		;funcret
  7452  001078                     __end_of_SMotor:
  7453                           	callstack 0
  7454  001078                     PL66:
  7455                           	callstack 27
  7456  001078  0E5A               	movlw	90
  7457  00107A  5C63               	subwf	?_TiGetTics^0,w,c
  7458  00107C  0E02               	movlw	2
  7459  00107E  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  7460  001080  0012               	return	
  7461  001082                     __end_ofPL66:
  7462                           	callstack 0
  7463                           
  7464 ;; *************** function _MNovaLletra *****************
  7465 ;; Defined at:
  7466 ;;		line 32 in file "Menu.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  lletra          1    wreg     unsigned char 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;  lletra          1    5[COMRAM] unsigned char 
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1
  7480 ;;      Params:         0       0       0
  7481 ;;      Locals:         1       0       0
  7482 ;;      Temps:          0       0       0
  7483 ;;      Totals:         1       0       0
  7484 ;;Total ram usage:        1 bytes
  7485 ;; Hardware stack levels used: 1
  7486 ;; Hardware stack levels required when called: 2
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		_SMotor
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text64
  7495  001D34                     __ptext64:
  7496                           	callstack 0
  7497  001D34                     _MNovaLletra:
  7498                           	callstack 27
  7499                           
  7500                           ;incstack = 0
  7501                           ;MNovaLletra@lletra stored from wreg
  7502  001D34  6E63               	movwf	MNovaLletra@lletra^0,c
  7503                           
  7504                           ;Menu.c: 33:     novaLletra = lletra;
  7505  001D36  C063  F04F         	movff	MNovaLletra@lletra,_novaLletra
  7506  001D3A  0012               	return		;funcret
  7507  001D3C                     __end_of_MNovaLletra:
  7508                           	callstack 0
  7509                           
  7510 ;; *************** function _Minit *****************
  7511 ;; Defined at:
  7512 ;;		line 25 in file "Menu.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;		None
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      void 
  7519 ;; Registers used:
  7520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1
  7526 ;;      Params:         0       0       0
  7527 ;;      Locals:         0       0       0
  7528 ;;      Temps:          0       0       0
  7529 ;;      Totals:         0       0       0
  7530 ;;Total ram usage:        0 bytes
  7531 ;; Hardware stack levels used: 1
  7532 ;; Hardware stack levels required when called: 3
  7533 ;; This function calls:
  7534 ;;		_TiGetTimer
  7535 ;; This function is called by:
  7536 ;;		_main
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text65
  7541  001D3C                     __ptext65:
  7542                           	callstack 0
  7543  001D3C                     _Minit:
  7544                           	callstack 27
  7545                           
  7546                           ;Menu.c: 26:     timerMenu = TiGetTimer();
  7547                           
  7548                           ;incstack = 0
  7549  001D3C  EC03  F00D         	call	_TiGetTimer	;wreg free
  7550  001D40  6E30               	movwf	_timerMenu^0,c
  7551  001D42  0012               	return		;funcret
  7552  001D44                     __end_of_Minit:
  7553                           	callstack 0
  7554                           
  7555 ;; *************** function _LcLCD *****************
  7556 ;; Defined at:
  7557 ;;		line 246 in file "LcTLCD.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;		None
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      void 
  7564 ;; Registers used:
  7565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/1
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1
  7571 ;;      Params:         0       0       0
  7572 ;;      Locals:         0       0       0
  7573 ;;      Temps:          0       0       0
  7574 ;;      Totals:         0       0       0
  7575 ;;Total ram usage:        0 bytes
  7576 ;; Hardware stack levels used: 1
  7577 ;; Hardware stack levels required when called: 6
  7578 ;; This function calls:
  7579 ;;		_LcPutChar
  7580 ;; This function is called by:
  7581 ;;		_main
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text66
  7586  0017CE                     __ptext66:
  7587                           	callstack 0
  7588  0017CE                     _LcLCD:
  7589                           	callstack 24
  7590                           
  7591                           ;LcTLCD.c: 247:     if(nou_s == 1){
  7592                           
  7593                           ;incstack = 0
  7594  0017CE  A279               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7595  0017D0  0012               	return	
  7596                           
  7597                           ;LcTLCD.c: 248:         LcPutChar(*s_ptr);
  7598  0017D2  D818               	call	PL32	;call to abstracted procedure
  7599  0017D4  64F7               	cpfsgt	tblptrh,c
  7600  0017D6  D003               	bra	u3527
  7601  0017D8  0008               	tblrd		*
  7602  0017DA  50F5               	movf	tablat,w,c
  7603  0017DC  D001               	bra	u3520
  7604  0017DE                     u3527:
  7605  0017DE  D819               	call	PL40	;call to abstracted procedure
  7606  0017E0                     u3520:
  7607  0017E0  EC0F  F00C         	call	_LcPutChar
  7608                           
  7609                           ;LcTLCD.c: 249:         s_ptr++;
  7610  0017E4  4A0D               	infsnz	_s_ptr^0,f,c
  7611  0017E6  2A0E               	incf	(_s_ptr+1)^0,f,c
  7612                           
  7613                           ;LcTLCD.c: 250:         if(*s_ptr == '\0'){
  7614  0017E8  D80D               	call	PL32	;call to abstracted procedure
  7615  0017EA  64F7               	cpfsgt	tblptrh,c
  7616  0017EC  D003               	bra	u3537
  7617  0017EE  0008               	tblrd		*
  7618  0017F0  50F5               	movf	tablat,w,c
  7619  0017F2  D001               	bra	u3530
  7620  0017F4                     u3537:
  7621  0017F4  D80E               	call	PL40	;call to abstracted procedure
  7622  0017F6                     u3530:
  7623  0017F6  0900               	iorlw	0
  7624  0017F8  A4D8               	btfss	status,2,c
  7625  0017FA  0012               	return	
  7626                           
  7627                           ;LcTLCD.c: 251:             nou_s = 0;
  7628  0017FC  9279               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  7629                           
  7630                           ;LcTLCD.c: 252:             s_ptr=0;
  7631  0017FE  6A0D               	clrf	_s_ptr^0,c
  7632  001800  6A0E               	clrf	(_s_ptr+1)^0,c
  7633  001802  0012               	return		;funcret
  7634  001804                     __end_of_LcLCD:
  7635                           	callstack 0
  7636  001804                     PL32:
  7637                           	callstack 24
  7638  001804  C00D  FFF6         	movff	_s_ptr,tblptrl
  7639  001808  C00E  FFF7         	movff	_s_ptr+1,tblptrh
  7640  00180C  6AF8               	clrf	tblptru,c
  7641  00180E  0E01               	movlw	(high __ramtop+-1)
  7642  001810  0012               	return	
  7643  001812                     __end_ofPL32:
  7644                           	callstack 0
  7645  001812                     PL40:
  7646                           	callstack 24
  7647  001812  CFF6 FFE1          	movff	tblptrl,fsr1l
  7648  001816  CFF7 FFE2          	movff	tblptrh,fsr1h
  7649  00181A  50E7               	movf	indf1,w,c
  7650  00181C  0012               	return	
  7651  00181E                     __end_ofPL40:
  7652                           	callstack 0
  7653                           
  7654 ;; *************** function _LcInit *****************
  7655 ;; Defined at:
  7656 ;;		line 41 in file "LcTLCD.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  rows            1    wreg     unsigned char 
  7659 ;;  columns         1   16[COMRAM] unsigned char 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  rows            1   17[COMRAM] unsigned char 
  7662 ;;  i               2   18[COMRAM] int 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      void 
  7665 ;; Registers used:
  7666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1
  7672 ;;      Params:         1       0       0
  7673 ;;      Locals:         3       0       0
  7674 ;;      Temps:          0       0       0
  7675 ;;      Totals:         4       0       0
  7676 ;;Total ram usage:        4 bytes
  7677 ;; Hardware stack levels used: 1
  7678 ;; Hardware stack levels required when called: 4
  7679 ;; This function calls:
  7680 ;;		_CantaIR
  7681 ;;		_EscriuPrimeraOrdre
  7682 ;;		_Espera
  7683 ;;		_TiGetTimer
  7684 ;;		_WaitForBusy
  7685 ;; This function is called by:
  7686 ;;		_main
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text67
  7691  001280                     __ptext67:
  7692                           	callstack 0
  7693  001280                     _LcInit:
  7694                           	callstack 26
  7695                           
  7696                           ;incstack = 0
  7697                           ;LcInit@rows stored from wreg
  7698  001280  6E6F               	movwf	LcInit@rows^0,c
  7699                           
  7700                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  7701  001282  EC03  F00D         	call	_TiGetTimer	;wreg free
  7702  001286  6E3A               	movwf	_Timer^0,c
  7703                           
  7704                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  7705  001288  C06F  F03D         	movff	LcInit@rows,_Rows
  7706                           
  7707                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  7708  00128C  6A3B               	clrf	_ColumnAct^0,c
  7709  00128E  6A3C               	clrf	_RowAct^0,c
  7710                           
  7711                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  7712  001290  9894               	bcf	148,4,c	;volatile
  7713  001292  9E95               	bcf	149,7,c	;volatile
  7714  001294  9A94               	bcf	148,5,c	;volatile
  7715                           
  7716                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  7717  001296  6A70               	clrf	LcInit@i^0,c
  7718  001298  6A71               	clrf	(LcInit@i+1)^0,c
  7719  00129A                     l4445:
  7720                           
  7721                           ;LcTLCD.c: 53:   Espera(Timer, 100);
  7722  00129A  6A6B               	clrf	(Espera@ms+1)^0,c
  7723  00129C  0E64               	movlw	100
  7724  00129E  6E6A               	movwf	Espera@ms^0,c
  7725  0012A0  503A               	movf	_Timer^0,w,c
  7726  0012A2  EC9B  F00D         	call	_Espera
  7727                           
  7728                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  7729  0012A6  0E03               	movlw	3
  7730  0012A8  ECCB  F00A         	call	_EscriuPrimeraOrdre
  7731                           
  7732                           ;LcTLCD.c: 57:   Espera(Timer, 5);
  7733  0012AC  6A6B               	clrf	(Espera@ms+1)^0,c
  7734  0012AE  0E05               	movlw	5
  7735  0012B0  6E6A               	movwf	Espera@ms^0,c
  7736  0012B2  503A               	movf	_Timer^0,w,c
  7737  0012B4  EC9B  F00D         	call	_Espera
  7738                           
  7739                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  7740  0012B8  0E03               	movlw	3
  7741  0012BA  ECCB  F00A         	call	_EscriuPrimeraOrdre
  7742                           
  7743                           ;LcTLCD.c: 59:   Espera(Timer, 1);
  7744  0012BE  D83A               	call	PL56	;call to abstracted procedure
  7745  0012C0  EC9B  F00D         	call	_Espera
  7746                           
  7747                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  7748  0012C4  0E03               	movlw	3
  7749  0012C6  ECCB  F00A         	call	_EscriuPrimeraOrdre
  7750                           
  7751                           ;LcTLCD.c: 61:   Espera(Timer, 1);
  7752  0012CA  D834               	call	PL56	;call to abstracted procedure
  7753  0012CC  EC9B  F00D         	call	_Espera
  7754                           
  7755                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  7756  0012D0  0E02               	movlw	2
  7757  0012D2  ECCB  F00A         	call	_EscriuPrimeraOrdre
  7758                           
  7759                           ;LcTLCD.c: 65:   Espera(Timer, 4);
  7760  0012D6  6A6B               	clrf	(Espera@ms+1)^0,c
  7761  0012D8  0E04               	movlw	4
  7762  0012DA  6E6A               	movwf	Espera@ms^0,c
  7763  0012DC  503A               	movf	_Timer^0,w,c
  7764  0012DE  EC9B  F00D         	call	_Espera
  7765                           
  7766                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  7767  0012E2  0E28               	movlw	40
  7768  0012E4  ECD7  F00D         	call	_CantaIR
  7769                           
  7770                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  7771  0012E8  EC76  F00C         	call	_WaitForBusy	;wreg free
  7772  0012EC  0E08               	movlw	8
  7773  0012EE  ECD7  F00D         	call	_CantaIR
  7774                           
  7775                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  7776  0012F2  EC76  F00C         	call	_WaitForBusy	;wreg free
  7777  0012F6  0E01               	movlw	1
  7778  0012F8  ECD7  F00D         	call	_CantaIR
  7779                           
  7780                           ;LcTLCD.c: 71:   Espera(Timer,3);
  7781  0012FC  EC96  F00D         	call	PL54	;call to abstracted procedure
  7782  001300  EC9B  F00D         	call	_Espera
  7783                           
  7784                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  7785  001304  EC76  F00C         	call	_WaitForBusy	;wreg free
  7786  001308  0E06               	movlw	6
  7787  00130A  ECD7  F00D         	call	_CantaIR
  7788                           
  7789                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  7790  00130E  EC76  F00C         	call	_WaitForBusy	;wreg free
  7791  001312  0E0F               	movlw	15
  7792  001314  ECD7  F00D         	call	_CantaIR
  7793                           
  7794                           ;LcTLCD.c: 74:  }
  7795  001318  4A70               	infsnz	LcInit@i^0,f,c
  7796  00131A  2A71               	incf	(LcInit@i+1)^0,f,c
  7797  00131C  BE71               	btfsc	(LcInit@i+1)^0,7,c
  7798  00131E  D7BD               	goto	l4445
  7799  001320  5071               	movf	(LcInit@i+1)^0,w,c
  7800  001322  E103               	bnz	u3500
  7801  001324  0E02               	movlw	2
  7802  001326  5C70               	subwf	LcInit@i^0,w,c
  7803  001328  E3B8               	bnc	l4445
  7804  00132A                     u3500:
  7805                           
  7806                           ;LcTLCD.c: 80:     WaitForBusy();
  7807  00132A  EC76  F00C         	call	_WaitForBusy	;wreg free
  7808                           
  7809                           ;LcTLCD.c: 81:  CantaIR(0x08 | 0x04);
  7810  00132E  0E0C               	movlw	12
  7811  001330  EFD7  F00D         	goto	_CantaIR
  7812  001334                     __end_of_LcInit:
  7813                           	callstack 0
  7814  001334                     PL56:
  7815                           	callstack 26
  7816  001334  6A6B               	clrf	(Espera@ms+1)^0,c
  7817  001336  0E01               	movlw	1
  7818  001338  6E6A               	movwf	Espera@ms^0,c
  7819  00133A  503A               	movf	_Timer^0,w,c
  7820  00133C  0012               	return	
  7821  00133E                     __end_ofPL56:
  7822                           	callstack 0
  7823                           
  7824 ;; *************** function _EscriuPrimeraOrdre *****************
  7825 ;; Defined at:
  7826 ;;		line 230 in file "LcTLCD.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  ordre           1    wreg     unsigned char 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  ordre           1    6[COMRAM] unsigned char 
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, status,2, status,0
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMRAM   BANK0   BANK1
  7840 ;;      Params:         0       0       0
  7841 ;;      Locals:         1       0       0
  7842 ;;      Temps:          1       0       0
  7843 ;;      Totals:         2       0       0
  7844 ;;Total ram usage:        2 bytes
  7845 ;; Hardware stack levels used: 1
  7846 ;; Hardware stack levels required when called: 2
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_LcInit
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text68
  7855  001596                     __ptext68:
  7856                           	callstack 0
  7857  001596                     _EscriuPrimeraOrdre:
  7858                           	callstack 27
  7859                           
  7860                           ;incstack = 0
  7861                           ;EscriuPrimeraOrdre@ordre stored from wreg
  7862  001596  6E64               	movwf	EscriuPrimeraOrdre@ordre^0,c
  7863                           
  7864                           ;LcTLCD.c: 232:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  7865  001598  9694               	bcf	148,3,c	;volatile
  7866                           
  7867                           ;LcTLCD.c: 233:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  7868  00159A  D82F               	call	PL36	;call to abstracted procedure
  7869  00159C  888B               	bsf	139,4,c	;volatile
  7870                           
  7871                           ;LcTLCD.c: 234:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  7872  00159E  A664               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  7873  0015A0  D003               	goto	u230
  7874  0015A2  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7875  0015A4  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7876  0015A6  D001               	goto	u248
  7877  0015A8                     u230:
  7878  0015A8  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7879  0015AA                     u248:
  7880  0015AA  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7881  0015AC  D82D               	call	PL50	;call to abstracted procedure
  7882  0015AE  0BF7               	andlw	-9
  7883  0015B0  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7884  0015B2  6E8B               	movwf	139,c	;volatile
  7885                           
  7886                           ;LcTLCD.c: 235:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  7887  0015B4  A464               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  7888  0015B6  D003               	goto	u250
  7889  0015B8  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7890  0015BA  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7891  0015BC  D001               	goto	u268
  7892  0015BE                     u250:
  7893  0015BE  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7894  0015C0                     u268:
  7895  0015C0  D823               	call	PL50	;call to abstracted procedure
  7896  0015C2  0BFB               	andlw	-5
  7897  0015C4  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7898  0015C6  6E8B               	movwf	139,c	;volatile
  7899                           
  7900                           ;LcTLCD.c: 236:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  7901  0015C8  A264               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  7902  0015CA  D003               	goto	u270
  7903  0015CC  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7904  0015CE  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7905  0015D0  D001               	goto	u288
  7906  0015D2                     u270:
  7907  0015D2  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7908  0015D4                     u288:
  7909  0015D4  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7910  0015D6  508B               	movf	139,w,c	;volatile
  7911  0015D8  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7912  0015DA  0BFD               	andlw	-3
  7913  0015DC  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7914  0015DE  6E8B               	movwf	139,c	;volatile
  7915                           
  7916                           ;LcTLCD.c: 237:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  7917  0015E0  A064               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  7918  0015E2  D003               	goto	u290
  7919  0015E4  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7920  0015E6  2A63               	incf	??_EscriuPrimeraOrdre^0,f,c
  7921  0015E8  D001               	goto	u308
  7922  0015EA                     u290:
  7923  0015EA  6A63               	clrf	??_EscriuPrimeraOrdre^0,c
  7924  0015EC                     u308:
  7925  0015EC  508B               	movf	139,w,c	;volatile
  7926  0015EE  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7927  0015F0  0BFE               	andlw	-2
  7928  0015F2  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7929  0015F4  6E8B               	movwf	139,c	;volatile
  7930                           
  7931                           ;LcTLCD.c: 238:  (LATCbits.LATC4 = 0);
  7932  0015F6  988B               	bcf	139,4,c	;volatile
  7933  0015F8  0012               	return		;funcret
  7934  0015FA                     __end_of_EscriuPrimeraOrdre:
  7935                           	callstack 0
  7936  0015FA                     PL36:
  7937                           	callstack 24
  7938  0015FA  9494               	bcf	148,2,c	;volatile
  7939  0015FC  9294               	bcf	148,1,c	;volatile
  7940  0015FE  9094               	bcf	148,0,c	;volatile
  7941  001600  9A8B               	bcf	139,5,c	;volatile
  7942  001602  9E8C               	bcf	140,7,c	;volatile
  7943  001604  888B               	bsf	139,4,c	;volatile
  7944  001606  0012               	return	
  7945  001608                     __end_ofPL36:
  7946                           	callstack 0
  7947  001608                     PL50:
  7948                           	callstack 27
  7949  001608  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7950  00160A  4663               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  7951  00160C  508B               	movf	139,w,c	;volatile
  7952  00160E  1863               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  7953  001610  0012               	return	
  7954  001612                     __end_ofPL50:
  7955                           	callstack 0
  7956                           
  7957 ;; *************** function _JoystickMotor *****************
  7958 ;; Defined at:
  7959 ;;		line 18 in file "Joystick.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;		None
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;		None
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  1    wreg      void 
  7966 ;; Registers used:
  7967 ;;		wreg, status,2, status,0, cstack
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/1
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMRAM   BANK0   BANK1
  7973 ;;      Params:         0       0       0
  7974 ;;      Locals:         0       0       0
  7975 ;;      Temps:          2       0       0
  7976 ;;      Totals:         2       0       0
  7977 ;;Total ram usage:        2 bytes
  7978 ;; Hardware stack levels used: 1
  7979 ;; Hardware stack levels required when called: 3
  7980 ;; This function calls:
  7981 ;;		_MNouJoystick
  7982 ;; This function is called by:
  7983 ;;		_main
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text69
  7988  0011AA                     __ptext69:
  7989                           	callstack 0
  7990  0011AA                     _JoystickMotor:
  7991                           	callstack 27
  7992                           
  7993                           ;Joystick.c: 19:  static char state = 0;;Joystick.c: 20:     switch(state) {
  7994                           
  7995                           ;incstack = 0
  7996  0011AA  D056               	goto	l3019
  7997  0011AC                     l978:
  7998                           
  7999                           ;Joystick.c: 22:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8000  0011AC  B2C2               	btfsc	194,1,c	;volatile
  8001  0011AE  D00B               	goto	l979
  8002  0011B0  0EC8               	movlw	200
  8003  0011B2  60C4               	cpfslt	196,c	;volatile
  8004  0011B4  D008               	goto	l979
  8005  0011B6  0E32               	movlw	50
  8006  0011B8  64C4               	cpfsgt	196,c	;volatile
  8007  0011BA  D005               	goto	l979
  8008                           
  8009                           ;Joystick.c: 23:     ADCON0 = 0x07;
  8010  0011BC  0E07               	movlw	7
  8011  0011BE  6EC2               	movwf	194,c	;volatile
  8012                           
  8013                           ;Joystick.c: 24:                 cap1 = 1;
  8014  0011C0  8E77               	bsf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8015  0011C2                     l2949:
  8016                           
  8017                           ;Joystick.c: 25:     state++;
  8018  0011C2  2A16               	incf	JoystickMotor@state^0,f,c
  8019                           
  8020                           ;Joystick.c: 26:    }
  8021  0011C4  D052               	goto	l986
  8022  0011C6                     l979:
  8023  0011C6  B2C2               	btfsc	194,1,c	;volatile
  8024  0011C8  D00F               	goto	l981
  8025  0011CA  0EC7               	movlw	199
  8026  0011CC  64C4               	cpfsgt	196,c	;volatile
  8027  0011CE  D00C               	goto	l981
  8028                           
  8029                           ;Joystick.c: 28:     if(ultimaTeclaAD != 2)MNouJoystick(2);
  8030  0011D0  0E02               	movlw	2
  8031  0011D2  1817               	xorwf	_ultimaTeclaAD^0,w,c
  8032  0011D4  E003               	bz	l2957
  8033  0011D6  0E02               	movlw	2
  8034  0011D8  ECA2  F00E         	call	_MNouJoystick
  8035  0011DC                     l2957:
  8036                           
  8037                           ;Joystick.c: 29:     ultimaTeclaAD = 2;
  8038  0011DC  0E02               	movlw	2
  8039  0011DE  6E17               	movwf	_ultimaTeclaAD^0,c
  8040                           
  8041                           ;Joystick.c: 30:     ADCON0 = 0x07;
  8042  0011E0  0E07               	movlw	7
  8043  0011E2  6EC2               	movwf	194,c	;volatile
  8044                           
  8045                           ;Joystick.c: 31:                 cap1 = 0;
  8046  0011E4  9E77               	bcf	(_cap1/(0+8))^0,_cap1& (0+7),c
  8047  0011E6  D7ED               	goto	l2949
  8048  0011E8                     l981:
  8049  0011E8  B2C2               	btfsc	194,1,c	;volatile
  8050  0011EA  D03F               	goto	l986
  8051  0011EC  0E33               	movlw	51
  8052  0011EE  60C4               	cpfslt	196,c	;volatile
  8053  0011F0  D03C               	goto	l986
  8054                           
  8055                           ;Joystick.c: 35:     if(ultimaTeclaAD != 8)MNouJoystick(8);
  8056  0011F2  0E08               	movlw	8
  8057  0011F4  1817               	xorwf	_ultimaTeclaAD^0,w,c
  8058  0011F6  E003               	bz	l2971
  8059  0011F8  0E08               	movlw	8
  8060  0011FA  ECA2  F00E         	call	_MNouJoystick
  8061  0011FE                     l2971:
  8062                           
  8063                           ;Joystick.c: 36:     ultimaTeclaAD = 8;
  8064  0011FE  0E08               	movlw	8
  8065  001200  D7EE               	goto	L7
  8066  001202                     l987:
  8067                           
  8068                           ;Joystick.c: 43:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  8069  001202  B2C2               	btfsc	194,1,c	;volatile
  8070  001204  D00B               	goto	l988
  8071  001206  0EC8               	movlw	200
  8072  001208  60C4               	cpfslt	196,c	;volatile
  8073  00120A  D008               	goto	l988
  8074  00120C  0E32               	movlw	50
  8075  00120E  64C4               	cpfsgt	196,c	;volatile
  8076  001210  D005               	goto	l988
  8077                           
  8078                           ;Joystick.c: 44:     ADCON0 = 0x03;
  8079  001212  0E03               	movlw	3
  8080  001214  6EC2               	movwf	194,c	;volatile
  8081                           
  8082                           ;Joystick.c: 45:                 cap2 = 1;
  8083  001216  8C77               	bsf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8084  001218                     l2987:
  8085                           
  8086                           ;Joystick.c: 46:     state--;
  8087  001218  0616               	decf	JoystickMotor@state^0,f,c
  8088                           
  8089                           ;Joystick.c: 47:    }
  8090  00121A  D027               	goto	l986
  8091  00121C                     l988:
  8092  00121C  B2C2               	btfsc	194,1,c	;volatile
  8093  00121E  D00F               	goto	l990
  8094  001220  0EC7               	movlw	199
  8095  001222  64C4               	cpfsgt	196,c	;volatile
  8096  001224  D00C               	goto	l990
  8097                           
  8098                           ;Joystick.c: 49:     if(ultimaTeclaAD != 6)MNouJoystick(6);
  8099  001226  0E06               	movlw	6
  8100  001228  1817               	xorwf	_ultimaTeclaAD^0,w,c
  8101  00122A  E003               	bz	l2995
  8102  00122C  0E06               	movlw	6
  8103  00122E  ECA2  F00E         	call	_MNouJoystick
  8104  001232                     l2995:
  8105                           
  8106                           ;Joystick.c: 50:     ultimaTeclaAD = 6;
  8107  001232  0E06               	movlw	6
  8108  001234  6E17               	movwf	_ultimaTeclaAD^0,c
  8109                           
  8110                           ;Joystick.c: 51:     ADCON0 = 0x03;
  8111  001236  0E03               	movlw	3
  8112  001238  6EC2               	movwf	194,c	;volatile
  8113                           
  8114                           ;Joystick.c: 52:                 cap2 = 0;
  8115  00123A  9C77               	bcf	(_cap2/(0+8))^0,_cap2& (0+7),c
  8116  00123C  D7ED               	goto	l2987
  8117  00123E                     l990:
  8118  00123E  B2C2               	btfsc	194,1,c	;volatile
  8119  001240  D014               	goto	l986
  8120  001242  0E33               	movlw	51
  8121  001244  60C4               	cpfslt	196,c	;volatile
  8122  001246  D011               	goto	l986
  8123                           
  8124                           ;Joystick.c: 56:     if(ultimaTeclaAD != 4)MNouJoystick(4);
  8125  001248  0E04               	movlw	4
  8126  00124A  1817               	xorwf	_ultimaTeclaAD^0,w,c
  8127  00124C  E003               	bz	l3009
  8128  00124E  0E04               	movlw	4
  8129  001250  ECA2  F00E         	call	_MNouJoystick
  8130  001254                     l3009:
  8131                           
  8132                           ;Joystick.c: 57:     ultimaTeclaAD = 4;
  8133  001254  0E04               	movlw	4
  8134  001256  D7EE               	goto	L8
  8135  001258                     l3019:
  8136  001258  5016               	movf	JoystickMotor@state^0,w,c
  8137  00125A  6E64               	movwf	??_JoystickMotor^0,c
  8138  00125C  6A65               	clrf	(??_JoystickMotor+1)^0,c
  8139                           
  8140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8141                           ; Switch size 1, requested type "space"
  8142                           ; Number of cases is 1, Range of values is 0 to 0
  8143                           ; switch strategies available:
  8144                           ; Name         Instructions Cycles
  8145                           ; simple_byte            4     3 (average)
  8146                           ;	Chosen strategy is simple_byte
  8147  00125E  5065               	movf	(??_JoystickMotor+1)^0,w,c
  8148  001260  E104               	bnz	l986
  8149                           
  8150                           ; Switch size 1, requested type "space"
  8151                           ; Number of cases is 2, Range of values is 0 to 1
  8152                           ; switch strategies available:
  8153                           ; Name         Instructions Cycles
  8154                           ; simple_byte            7     4 (average)
  8155                           ;	Chosen strategy is simple_byte
  8156  001262  5064               	movf	??_JoystickMotor^0,w,c
  8157  001264  E0A3               	bz	l978
  8158  001266  0A01               	xorlw	1	; case 1
  8159  001268  E0CC               	bz	l987
  8160  00126A                     l986:
  8161                           
  8162                           ;Joystick.c: 65:     if(cap1 && cap2 && ultimaTeclaAD != 0){
  8163  00126A  BE77               	btfsc	(_cap1/(0+8))^0,_cap1& (0+7),c
  8164  00126C  AC77               	btfss	(_cap2/(0+8))^0,_cap2& (0+7),c
  8165  00126E  0012               	return	
  8166  001270  5017               	movf	_ultimaTeclaAD^0,w,c
  8167  001272  B4D8               	btfsc	status,2,c
  8168  001274  0012               	return	
  8169                           
  8170                           ;Joystick.c: 66:         MNouJoystick(-1);
  8171  001276  0EFF               	movlw	255
  8172  001278  ECA2  F00E         	call	_MNouJoystick
  8173                           
  8174                           ;Joystick.c: 67:         ultimaTeclaAD = -1;
  8175  00127C  6817               	setf	_ultimaTeclaAD^0,c
  8176  00127E  0012               	return		;funcret
  8177  001280                     __end_of_JoystickMotor:
  8178                           	callstack 0
  8179                           
  8180 ;; *************** function _MNouJoystick *****************
  8181 ;; Defined at:
  8182 ;;		line 35 in file "Menu.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;  posicio         1    wreg     char 
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;  posicio         1    5[COMRAM] char 
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  1    wreg      void 
  8189 ;; Registers used:
  8190 ;;		wreg
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/1
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1
  8196 ;;      Params:         0       0       0
  8197 ;;      Locals:         1       0       0
  8198 ;;      Temps:          0       0       0
  8199 ;;      Totals:         1       0       0
  8200 ;;Total ram usage:        1 bytes
  8201 ;; Hardware stack levels used: 1
  8202 ;; Hardware stack levels required when called: 2
  8203 ;; This function calls:
  8204 ;;		Nothing
  8205 ;; This function is called by:
  8206 ;;		_JoystickMotor
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           	psect	text70
  8211  001D44                     __ptext70:
  8212                           	callstack 0
  8213  001D44                     _MNouJoystick:
  8214                           	callstack 27
  8215                           
  8216                           ;incstack = 0
  8217                           ;MNouJoystick@posicio stored from wreg
  8218  001D44  6E63               	movwf	MNouJoystick@posicio^0,c
  8219                           
  8220                           ;Menu.c: 36:     novaDireccio = posicio;
  8221  001D46  C063  F04E         	movff	MNouJoystick@posicio,_novaDireccio
  8222  001D4A  0012               	return		;funcret
  8223  001D4C                     __end_of_MNouJoystick:
  8224                           	callstack 0
  8225                           
  8226 ;; *************** function _JoystickInit *****************
  8227 ;; Defined at:
  8228 ;;		line 12 in file "Joystick.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;		None
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1
  8242 ;;      Params:         0       0       0
  8243 ;;      Locals:         0       0       0
  8244 ;;      Temps:          0       0       0
  8245 ;;      Totals:         0       0       0
  8246 ;;Total ram usage:        0 bytes
  8247 ;; Hardware stack levels used: 1
  8248 ;; Hardware stack levels required when called: 2
  8249 ;; This function calls:
  8250 ;;		Nothing
  8251 ;; This function is called by:
  8252 ;;		_main
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text71
  8257  001C26                     __ptext71:
  8258                           	callstack 0
  8259  001C26                     _JoystickInit:
  8260                           	callstack 28
  8261                           
  8262                           ;Joystick.c: 13:     ADCON0 = 0x01;
  8263                           
  8264                           ;incstack = 0
  8265  001C26  0E01               	movlw	1
  8266  001C28  6EC2               	movwf	194,c	;volatile
  8267                           
  8268                           ;Joystick.c: 14:     ADCON1 = 0x0D;
  8269  001C2A  0E0D               	movlw	13
  8270  001C2C  6EC1               	movwf	193,c	;volatile
  8271                           
  8272                           ;Joystick.c: 15:     ADCON2 = 0x09;
  8273  001C2E  0E09               	movlw	9
  8274  001C30  6EC0               	movwf	192,c	;volatile
  8275                           
  8276                           ;Joystick.c: 16:     ADRESH = 127;
  8277  001C32  0E7F               	movlw	127
  8278  001C34  6EC4               	movwf	196,c	;volatile
  8279  001C36  0C7F               	retlw	127	;funcret
  8280  001C38                     __end_of_JoystickInit:
  8281                           	callstack 0
  8282                           
  8283 ;; *************** function _GLCDMotor *****************
  8284 ;; Defined at:
  8285 ;;		line 36 in file "GestioLCD.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;		None
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;		None
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  1    wreg      void 
  8292 ;; Registers used:
  8293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/1
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMRAM   BANK0   BANK1
  8299 ;;      Params:         0       0       0
  8300 ;;      Locals:         0       0       0
  8301 ;;      Temps:          2       0       0
  8302 ;;      Totals:         2       0       0
  8303 ;;Total ram usage:        2 bytes
  8304 ;; Hardware stack levels used: 1
  8305 ;; Hardware stack levels required when called: 6
  8306 ;; This function calls:
  8307 ;;		_LcClear
  8308 ;;		_LcGotoXY
  8309 ;;		_LcLliure
  8310 ;;		_LcNewString
  8311 ;;		_LcPutChar
  8312 ;;		_TiGetTics
  8313 ;;		_TiResetTics
  8314 ;; This function is called by:
  8315 ;;		_main
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text72
  8320  0008B0                     __ptext72:
  8321                           	callstack 0
  8322  0008B0                     _GLCDMotor:
  8323                           	callstack 24
  8324                           
  8325                           ;GestioLCD.c: 37:  static char state = 0;;GestioLCD.c: 38:     static char j=0;;GestioLC
      +                          D.c: 39:     static char max1 = 15;;GestioLCD.c: 40:     static char min1 = 0;;GestioLCD
      +                          .c: 41:     static char min2 = 0;;GestioLCD.c: 42:     static char max2 = 15;;GestioLCD.
      +                          c: 43:     static char k1 = 0;;GestioLCD.c: 44:     static char k2 = 0;;GestioLCD.c: 45:
      +                               static char length1=0;;GestioLCD.c: 46:     static char length2=0;;GestioLCD.c: 48:
      +                               switch(state) {
  8326                           
  8327                           ;incstack = 0
  8328  0008B0  D10B               	goto	l5779
  8329  0008B2                     l5595:
  8330                           
  8331                           ;GestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  8332  0008B2  0E11               	movlw	17
  8333  0008B4  6019               	cpfslt	GLCDMotor@length1^0,c
  8334  0008B6  D010               	goto	l5605
  8335  0008B8  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8336  0008BA  D00E               	goto	l5605
  8337                           
  8338                           ;GestioLCD.c: 51:     LcGotoXY(0,0);
  8339  0008BC  0E00               	movlw	0
  8340  0008BE  6E6B               	movwf	LcGotoXY@Row^0,c
  8341  0008C0  ECE9  F00C         	call	_LcGotoXY
  8342                           
  8343                           ;GestioLCD.c: 52:     LcNewString(menuList[menuDaltGLCD]);
  8344  0008C4  D932               	call	PL8	;call to abstracted procedure
  8345  0008C6  6E72               	movwf	??_GLCDMotor^0,c
  8346  0008C8  C072  F066         	movff	??_GLCDMotor,LcNewString@new_s
  8347  0008CC  D933               	call	PL10	;call to abstracted procedure
  8348  0008CE  EC56  F00E         	call	_LcNewString	;wreg free
  8349                           
  8350                           ;GestioLCD.c: 53:     state = 5;
  8351  0008D2  0E05               	movlw	5
  8352  0008D4  6E1F               	movwf	GLCDMotor@state^0,c
  8353                           
  8354                           ;GestioLCD.c: 54:    }
  8355  0008D6  0C05               	retlw	5
  8356  0008D8                     l5605:
  8357  0008D8  0E10               	movlw	16
  8358  0008DA  6419               	cpfsgt	GLCDMotor@length1^0,c
  8359  0008DC  0C10               	retlw	16
  8360  0008DE  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8361  0008E0  0C10               	retlw	16
  8362  0008E2                     u5350:
  8363                           
  8364                           ;GestioLCD.c: 56:     state++;
  8365  0008E2  2A1F               	incf	GLCDMotor@state^0,f,c
  8366  0008E4  0012               	return	
  8367  0008E6                     l5611:
  8368                           
  8369                           ;GestioLCD.c: 60:    if (j>=16) {
  8370  0008E6  0E0F               	movlw	15
  8371  0008E8  641E               	cpfsgt	GLCDMotor@j^0,c
  8372  0008EA  D014               	goto	l5625
  8373                           
  8374                           ;GestioLCD.c: 61:     min1++;
  8375  0008EC  2A1D               	incf	GLCDMotor@min1^0,f,c
  8376                           
  8377                           ;GestioLCD.c: 62:     max1++;
  8378  0008EE  2A4C               	incf	GLCDMotor@max1^0,f,c
  8379                           
  8380                           ;GestioLCD.c: 63:     if (menuList[menuDaltGLCD][max1] == '\0') max1=0;
  8381  0008F0  D91C               	call	PL8	;call to abstracted procedure
  8382  0008F2  244C               	addwf	GLCDMotor@max1^0,w,c
  8383  0008F4  6E72               	movwf	??_GLCDMotor^0,c
  8384  0008F6  D90E               	call	PL2	;call to abstracted procedure
  8385  0008F8  E101               	bnz	l5619
  8386  0008FA  6A4C               	clrf	GLCDMotor@max1^0,c
  8387  0008FC                     l5619:
  8388                           
  8389                           ;GestioLCD.c: 64:     if (menuList[menuDaltGLCD][min1] == '\0') min1=0;
  8390  0008FC  D916               	call	PL8	;call to abstracted procedure
  8391  0008FE  241D               	addwf	GLCDMotor@min1^0,w,c
  8392  000900  6E72               	movwf	??_GLCDMotor^0,c
  8393  000902  D908               	call	PL2	;call to abstracted procedure
  8394  000904  E101               	bnz	l909
  8395  000906  6A1D               	clrf	GLCDMotor@min1^0,c
  8396  000908                     l909:
  8397                           
  8398                           ;GestioLCD.c: 65:     j=0;
  8399  000908  6A1E               	clrf	GLCDMotor@j^0,c
  8400                           
  8401                           ;GestioLCD.c: 66:     k1=min1;
  8402  00090A  C01D  F01B         	movff	GLCDMotor@min1,GLCDMotor@k1
  8403                           
  8404                           ;GestioLCD.c: 67:     state = 6;
  8405  00090E  0E06               	movlw	6
  8406  000910  6E1F               	movwf	GLCDMotor@state^0,c
  8407                           
  8408                           ;GestioLCD.c: 68:    }
  8409  000912  0C06               	retlw	6
  8410  000914                     l5625:
  8411  000914  0E10               	movlw	16
  8412  000916  601E               	cpfslt	GLCDMotor@j^0,c
  8413  000918  0C10               	retlw	16
  8414                           
  8415                           ;GestioLCD.c: 70:     LcGotoXY(j,0);
  8416  00091A  0E00               	movlw	0
  8417  00091C  6E6B               	movwf	LcGotoXY@Row^0,c
  8418  00091E  501E               	movf	GLCDMotor@j^0,w,c
  8419  000920  ECE9  F00C         	call	_LcGotoXY
  8420                           
  8421                           ;GestioLCD.c: 71:     LcPutChar(menuList[menuDaltGLCD][k1]);
  8422  000924  D902               	call	PL8	;call to abstracted procedure
  8423  000926  241B               	addwf	GLCDMotor@k1^0,w,c
  8424  000928  6E72               	movwf	??_GLCDMotor^0,c
  8425  00092A  D8F4               	call	PL2	;call to abstracted procedure
  8426  00092C  EC0F  F00C         	call	_LcPutChar
  8427                           
  8428                           ;GestioLCD.c: 72:     j++;
  8429  000930  2A1E               	incf	GLCDMotor@j^0,f,c
  8430                           
  8431                           ;GestioLCD.c: 73:     k1++;
  8432  000932  2A1B               	incf	GLCDMotor@k1^0,f,c
  8433                           
  8434                           ;GestioLCD.c: 74:     if(menuList[menuDaltGLCD][k1] == '\0') k1 = 0;
  8435  000934  D8FA               	call	PL8	;call to abstracted procedure
  8436  000936  241B               	addwf	GLCDMotor@k1^0,w,c
  8437  000938  6E72               	movwf	??_GLCDMotor^0,c
  8438  00093A  D8EC               	call	PL2	;call to abstracted procedure
  8439  00093C  B4D8               	btfsc	status,2,c
  8440  00093E  6A1B               	clrf	GLCDMotor@k1^0,c
  8441  000940  0012               	return	
  8442  000942                     l5639:
  8443                           
  8444                           ;GestioLCD.c: 78:    if (menuDaltGLCD<4) {
  8445  000942  0E04               	movlw	4
  8446  000944  6020               	cpfslt	_menuDaltGLCD^0,c
  8447  000946  D010               	goto	u5450
  8448  000948  D7CC               	goto	u5350
  8449  00094A                     u5420:
  8450                           
  8451                           ;GestioLCD.c: 82:     state = 0;
  8452  00094A  6A1F               	clrf	GLCDMotor@state^0,c
  8453  00094C  0012               	return	
  8454  00094E                     l5647:
  8455                           
  8456                           ;GestioLCD.c: 86:    if (LcLliure() && menuDaltGLCD<4) {
  8457  00094E  EC5C  F00E         	call	_LcLliure	;wreg free
  8458  000952  E306               	bnc	l5653
  8459  000954  0E04               	movlw	4
  8460  000956  6020               	cpfslt	_menuDaltGLCD^0,c
  8461  000958  D003               	goto	l5653
  8462                           
  8463                           ;GestioLCD.c: 87:     state = 7;
  8464  00095A  0E07               	movlw	7
  8465  00095C  6E1F               	movwf	GLCDMotor@state^0,c
  8466                           
  8467                           ;GestioLCD.c: 88:    }
  8468  00095E  0C07               	retlw	7
  8469  000960                     l5653:
  8470  000960  EC5C  F00E         	call	_LcLliure	;wreg free
  8471  000964  A0D8               	btfss	status,0,c
  8472  000966  0012               	return	
  8473  000968                     u5450:
  8474  000968  0E03               	movlw	3
  8475  00096A  6420               	cpfsgt	_menuDaltGLCD^0,c
  8476  00096C  0C03               	retlw	3
  8477  00096E  D7ED               	goto	u5420
  8478  000970                     l921:
  8479                           
  8480                           ;GestioLCD.c: 94:    if (newString != 0 && ferMenu == 1) {
  8481  000970  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8482  000972  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8483  000974  0012               	return	
  8484                           
  8485                           ;GestioLCD.c: 95:     length1 = 0;
  8486  000976  6A19               	clrf	GLCDMotor@length1^0,c
  8487                           
  8488                           ;GestioLCD.c: 96:     length2 = 0;
  8489  000978  6A18               	clrf	GLCDMotor@length2^0,c
  8490                           
  8491                           ;GestioLCD.c: 97:     LcGotoXY(0,0);
  8492  00097A  0E00               	movlw	0
  8493  00097C  6E6B               	movwf	LcGotoXY@Row^0,c
  8494  00097E  ECE9  F00C         	call	_LcGotoXY
  8495                           
  8496                           ;GestioLCD.c: 98:     min1 = 0;
  8497  000982  6A1D               	clrf	GLCDMotor@min1^0,c
  8498                           
  8499                           ;GestioLCD.c: 99:     max1 = 15;
  8500  000984  0E0F               	movlw	15
  8501  000986  6E4C               	movwf	GLCDMotor@max1^0,c
  8502                           
  8503                           ;GestioLCD.c: 100:     min2 = 0;
  8504  000988  6A1C               	clrf	GLCDMotor@min2^0,c
  8505                           
  8506                           ;GestioLCD.c: 101:     max2 = 15;
  8507  00098A  0E0F               	movlw	15
  8508  00098C  6E4B               	movwf	GLCDMotor@max2^0,c
  8509                           
  8510                           ;GestioLCD.c: 102:     j = 0;
  8511  00098E  6A1E               	clrf	GLCDMotor@j^0,c
  8512                           
  8513                           ;GestioLCD.c: 103:     k1 = 0;
  8514  000990  6A1B               	clrf	GLCDMotor@k1^0,c
  8515                           
  8516                           ;GestioLCD.c: 104:     k2 = 0;
  8517  000992  6A1A               	clrf	GLCDMotor@k2^0,c
  8518                           
  8519                           ;GestioLCD.c: 105:     newString = 0;
  8520  000994  9078               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  8521  000996  D7A5               	goto	u5350
  8522  000998                     l5683:
  8523                           
  8524                           ;GestioLCD.c: 110:    if (menuList[menuDaltGLCD][length1] == '\0' && menuDaltGLCD>=4) {
  8525  000998  D8C8               	call	PL8	;call to abstracted procedure
  8526  00099A  2419               	addwf	GLCDMotor@length1^0,w,c
  8527  00099C  6E72               	movwf	??_GLCDMotor^0,c
  8528  00099E  D8BA               	call	PL2	;call to abstracted procedure
  8529  0009A0  E104               	bnz	l5689
  8530  0009A2  0E03               	movlw	3
  8531  0009A4  6420               	cpfsgt	_menuDaltGLCD^0,c
  8532  0009A6  D001               	goto	l5689
  8533  0009A8  D79C               	goto	u5350
  8534  0009AA                     l5689:
  8535  0009AA  D8BF               	call	PL8	;call to abstracted procedure
  8536  0009AC  2419               	addwf	GLCDMotor@length1^0,w,c
  8537  0009AE  6E72               	movwf	??_GLCDMotor^0,c
  8538  0009B0  D8B1               	call	PL2	;call to abstracted procedure
  8539  0009B2  E002               	bz	l5693
  8540                           
  8541                           ;GestioLCD.c: 114:     length1++;
  8542  0009B4  2A19               	incf	GLCDMotor@length1^0,f,c
  8543                           
  8544                           ;GestioLCD.c: 115:    }
  8545  0009B6  0012               	return	
  8546  0009B8                     l5693:
  8547  0009B8  0E04               	movlw	4
  8548  0009BA  6020               	cpfslt	_menuDaltGLCD^0,c
  8549  0009BC  0C04               	retlw	4
  8550  0009BE  D8B5               	call	PL8	;call to abstracted procedure
  8551  0009C0  2419               	addwf	GLCDMotor@length1^0,w,c
  8552  0009C2  6E72               	movwf	??_GLCDMotor^0,c
  8553  0009C4  D8A7               	call	PL2	;call to abstracted procedure
  8554  0009C6  A4D8               	btfss	status,2,c
  8555  0009C8  0012               	return	
  8556                           
  8557                           ;GestioLCD.c: 117:     state = 13;
  8558  0009CA  0E0D               	movlw	13
  8559  0009CC  6E1F               	movwf	GLCDMotor@state^0,c
  8560  0009CE  0C0D               	retlw	13
  8561  0009D0                     l5699:
  8562                           
  8563                           ;GestioLCD.c: 121:    if (length2 < 17 && ferMenu == 1) {
  8564  0009D0  0E11               	movlw	17
  8565  0009D2  6018               	cpfslt	GLCDMotor@length2^0,c
  8566  0009D4  D015               	goto	l5709
  8567  0009D6  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8568  0009D8  D013               	goto	l5709
  8569                           
  8570                           ;GestioLCD.c: 122:     LcGotoXY(0,1);
  8571  0009DA  EC4D  F004         	call	PL34	;call to abstracted procedure
  8572  0009DE  ECE9  F00C         	call	_LcGotoXY
  8573                           
  8574                           ;GestioLCD.c: 123:     LcNewString(menuList[menuDaltGLCD+1]);
  8575  0009E2  5020               	movf	_menuDaltGLCD^0,w,c
  8576  0009E4  0D1D               	mullw	29
  8577  0009E6  CFF3 F072          	movff	prodl,??_GLCDMotor
  8578  0009EA  0E1D               	movlw	29
  8579  0009EC  2672               	addwf	??_GLCDMotor^0,f,c
  8580  0009EE  5072               	movf	??_GLCDMotor^0,w,c
  8581  0009F0  0F01               	addlw	low _menuList
  8582  0009F2  6E73               	movwf	(??_GLCDMotor+1)^0,c
  8583  0009F4  C073  F066         	movff	??_GLCDMotor+1,LcNewString@new_s
  8584  0009F8  D89D               	call	PL10	;call to abstracted procedure
  8585  0009FA  EC56  F00E         	call	_LcNewString	;wreg free
  8586  0009FE  D771               	goto	u5350
  8587  000A00                     l5709:
  8588  000A00  0E10               	movlw	16
  8589  000A02  6418               	cpfsgt	GLCDMotor@length2^0,c
  8590  000A04  0C10               	retlw	16
  8591  000A06  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8592  000A08  0C10               	retlw	16
  8593                           
  8594                           ;GestioLCD.c: 127:     state = 9;
  8595  000A0A  0E09               	movlw	9
  8596  000A0C  6E1F               	movwf	GLCDMotor@state^0,c
  8597  000A0E  0C09               	retlw	9
  8598  000A10                     l5715:
  8599                           
  8600                           ;GestioLCD.c: 131:    if (j<16) {
  8601  000A10  0E10               	movlw	16
  8602  000A12  601E               	cpfslt	GLCDMotor@j^0,c
  8603  000A14  D014               	goto	l5729
  8604                           
  8605                           ;GestioLCD.c: 132:     LcGotoXY(j,1);
  8606  000A16  0E01               	movlw	1
  8607  000A18  6E6B               	movwf	LcGotoXY@Row^0,c
  8608  000A1A  501E               	movf	GLCDMotor@j^0,w,c
  8609  000A1C  ECE9  F00C         	call	_LcGotoXY
  8610                           
  8611                           ;GestioLCD.c: 133:     LcPutChar(menuList[menuDaltGLCD+1][k2]);
  8612  000A20  D884               	call	PL8	;call to abstracted procedure
  8613  000A22  241A               	addwf	GLCDMotor@k2^0,w,c
  8614  000A24  D87E               	call	PL4	;call to abstracted procedure
  8615  000A26  D876               	call	PL2	;call to abstracted procedure
  8616  000A28  EC0F  F00C         	call	_LcPutChar
  8617                           
  8618                           ;GestioLCD.c: 134:     j++;
  8619  000A2C  2A1E               	incf	GLCDMotor@j^0,f,c
  8620                           
  8621                           ;GestioLCD.c: 135:     k2++;
  8622  000A2E  2A1A               	incf	GLCDMotor@k2^0,f,c
  8623                           
  8624                           ;GestioLCD.c: 136:     if(menuList[menuDaltGLCD+1][k2] == '\0') k2 = 0;
  8625  000A30  D87C               	call	PL8	;call to abstracted procedure
  8626  000A32  241A               	addwf	GLCDMotor@k2^0,w,c
  8627  000A34  D876               	call	PL4	;call to abstracted procedure
  8628  000A36  D86E               	call	PL2	;call to abstracted procedure
  8629  000A38  B4D8               	btfsc	status,2,c
  8630  000A3A  6A1A               	clrf	GLCDMotor@k2^0,c
  8631  000A3C  0012               	return	
  8632  000A3E                     l5729:
  8633  000A3E  0E0F               	movlw	15
  8634  000A40  641E               	cpfsgt	GLCDMotor@j^0,c
  8635  000A42  0C0F               	retlw	15
  8636                           
  8637                           ;GestioLCD.c: 139:     min2++;
  8638  000A44  2A1C               	incf	GLCDMotor@min2^0,f,c
  8639                           
  8640                           ;GestioLCD.c: 140:     max2++;
  8641  000A46  2A4B               	incf	GLCDMotor@max2^0,f,c
  8642                           
  8643                           ;GestioLCD.c: 141:     if (menuList[menuDaltGLCD+1][max2] == '\0') max2=0;
  8644  000A48  D870               	call	PL8	;call to abstracted procedure
  8645  000A4A  244B               	addwf	GLCDMotor@max2^0,w,c
  8646  000A4C  D86A               	call	PL4	;call to abstracted procedure
  8647  000A4E  D862               	call	PL2	;call to abstracted procedure
  8648  000A50  E101               	bnz	l5737
  8649  000A52  6A4B               	clrf	GLCDMotor@max2^0,c
  8650  000A54                     l5737:
  8651                           
  8652                           ;GestioLCD.c: 142:     if (menuList[menuDaltGLCD+1][min2] == '\0') min2=0;
  8653  000A54  D86A               	call	PL8	;call to abstracted procedure
  8654  000A56  241C               	addwf	GLCDMotor@min2^0,w,c
  8655  000A58  D864               	call	PL4	;call to abstracted procedure
  8656  000A5A  D85C               	call	PL2	;call to abstracted procedure
  8657  000A5C  E101               	bnz	l939
  8658  000A5E  6A1C               	clrf	GLCDMotor@min2^0,c
  8659  000A60                     l939:
  8660                           
  8661                           ;GestioLCD.c: 143:     j=0;
  8662  000A60  6A1E               	clrf	GLCDMotor@j^0,c
  8663                           
  8664                           ;GestioLCD.c: 144:     k2=min2;
  8665  000A62  C01C  F01A         	movff	GLCDMotor@min2,GLCDMotor@k2
  8666  000A66  D73D               	goto	u5350
  8667  000A68                     l5743:
  8668                           
  8669                           ;GestioLCD.c: 149:    if (TiGetTics(timerGLCD)>= 1205 && newString == 0 && ferMenu == 1)
      +                           {
  8670  000A68  5021               	movf	_timerGLCD^0,w,c
  8671  000A6A  EC41  F00D         	call	_TiGetTics
  8672  000A6E  BE64               	btfsc	(?_TiGetTics+1)^0,7,c
  8673  000A70  D00A               	goto	l941
  8674  000A72  D865               	call	PL60	;call to abstracted procedure
  8675  000A74  E308               	bnc	l941
  8676  000A76  A078               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  8677  000A78  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8678  000A7A  D005               	goto	l941
  8679                           
  8680                           ;GestioLCD.c: 150:     LcClear();
  8681  000A7C  EC8A  F00D         	call	_LcClear	;wreg free
  8682  000A80                     l5751:
  8683                           
  8684                           ;GestioLCD.c: 151:     state = 2;
  8685  000A80  0E02               	movlw	2
  8686  000A82  6E1F               	movwf	GLCDMotor@state^0,c
  8687                           
  8688                           ;GestioLCD.c: 152:    }
  8689  000A84  0C02               	retlw	2
  8690  000A86                     l941:
  8691  000A86  B078               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  8692  000A88  A278               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  8693  000A8A  0012               	return	
  8694                           
  8695                           ;GestioLCD.c: 154:     LcClear();
  8696  000A8C  EC8A  F00D         	call	_LcClear	;wreg free
  8697  000A90  D75C               	goto	u5420
  8698  000A92                     l5759:
  8699                           
  8700                           ;GestioLCD.c: 159:    TiResetTics(timerGLCD);
  8701  000A92  5021               	movf	_timerGLCD^0,w,c
  8702  000A94  ECE5  F00D         	call	_TiResetTics
  8703  000A98  D724               	goto	u5350
  8704  000A9A                     l5763:
  8705                           
  8706                           ;GestioLCD.c: 163:    if (LcLliure()) {
  8707  000A9A  EC5C  F00E         	call	_LcLliure	;wreg free
  8708  000A9E  A0D8               	btfss	status,0,c
  8709  000AA0  0012               	return	
  8710                           
  8711                           ;GestioLCD.c: 164:     TiResetTics(timerGLCD);
  8712  000AA2  5021               	movf	_timerGLCD^0,w,c
  8713  000AA4  ECE5  F00D         	call	_TiResetTics
  8714                           
  8715                           ;GestioLCD.c: 165:     state = 11;
  8716  000AA8  0E0B               	movlw	11
  8717  000AAA  6E1F               	movwf	GLCDMotor@state^0,c
  8718  000AAC  0C0B               	retlw	11
  8719  000AAE                     l5769:
  8720                           
  8721                           ;GestioLCD.c: 169:    if (menuList[menuDaltGLCD+1][length2] != '\0') {
  8722  000AAE  D83D               	call	PL8	;call to abstracted procedure
  8723  000AB0  2418               	addwf	GLCDMotor@length2^0,w,c
  8724  000AB2  D837               	call	PL4	;call to abstracted procedure
  8725  000AB4  D82F               	call	PL2	;call to abstracted procedure
  8726  000AB6  E002               	bz	l5773
  8727                           
  8728                           ;GestioLCD.c: 170:     length2++;
  8729  000AB8  2A18               	incf	GLCDMotor@length2^0,f,c
  8730                           
  8731                           ;GestioLCD.c: 171:    }
  8732  000ABA  0012               	return	
  8733  000ABC                     l5773:
  8734  000ABC  D836               	call	PL8	;call to abstracted procedure
  8735  000ABE  2418               	addwf	GLCDMotor@length2^0,w,c
  8736  000AC0  D830               	call	PL4	;call to abstracted procedure
  8737  000AC2  D828               	call	PL2	;call to abstracted procedure
  8738  000AC4  E0DD               	bz	l5751
  8739  000AC6  0012               	return	
  8740  000AC8                     l5779:
  8741  000AC8  501F               	movf	GLCDMotor@state^0,w,c
  8742  000ACA  6E72               	movwf	??_GLCDMotor^0,c
  8743  000ACC  6A73               	clrf	(??_GLCDMotor+1)^0,c
  8744                           
  8745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8746                           ; Switch size 1, requested type "space"
  8747                           ; Number of cases is 1, Range of values is 0 to 0
  8748                           ; switch strategies available:
  8749                           ; Name         Instructions Cycles
  8750                           ; simple_byte            4     3 (average)
  8751                           ;	Chosen strategy is simple_byte
  8752  000ACE  5073               	movf	(??_GLCDMotor+1)^0,w,c
  8753  000AD0  A4D8               	btfss	status,2,c
  8754  000AD2  0012               	return	
  8755                           
  8756                           ; Switch size 1, requested type "space"
  8757                           ; Number of cases is 12, Range of values is 0 to 13
  8758                           ; switch strategies available:
  8759                           ; Name         Instructions Cycles
  8760                           ; simple_byte           37    19 (average)
  8761                           ;	Chosen strategy is simple_byte
  8762  000AD4  5072               	movf	??_GLCDMotor^0,w,c
  8763  000AD6  E101 D74B          	bz	l921
  8764  000ADA  0A01               	xorlw	1	; case 1
  8765  000ADC  E101 D75C          	bz	l5683
  8766  000AE0  0A03               	xorlw	3	; case 2
  8767  000AE2  E101 D6E6          	bz	l5595
  8768  000AE6  0A01               	xorlw	1	; case 3
  8769  000AE8  E101 D6FD          	bz	l5611
  8770  000AEC  0A06               	xorlw	6	; case 5
  8771  000AEE  E101 D72E          	bz	l5647
  8772  000AF2  0A03               	xorlw	3	; case 6
  8773  000AF4  E101 D725          	bz	l5639
  8774  000AF8  0A01               	xorlw	1	; case 7
  8775  000AFA  E101 D769          	bz	l5699
  8776  000AFE  0A0F               	xorlw	15	; case 8
  8777  000B00  E0CC               	bz	l5763
  8778  000B02  0A01               	xorlw	1	; case 9
  8779  000B04  E085               	bz	l5715
  8780  000B06  0A03               	xorlw	3	; case 10
  8781  000B08  E0C4               	bz	l5759
  8782  000B0A  0A01               	xorlw	1	; case 11
  8783  000B0C  E0AD               	bz	l5743
  8784  000B0E  0A06               	xorlw	6	; case 13
  8785  000B10  E0CE               	bz	l5769
  8786  000B12  0012               	return		;funcret
  8787  000B14                     __end_of_GLCDMotor:
  8788                           	callstack 0
  8789  000B14                     PL2:
  8790                           	callstack 24
  8791  000B14  C072  FFF6         	movff	??_GLCDMotor,tblptrl
  8792  000B18                     	if	1	;There is more than 1 active tblptr byte
  8793  000B18  0E02               	movlw	high __smallconst
  8794  000B1A  6EF7               	movwf	tblptrh,c
  8795  000B1C                     	endif
  8796  000B1C                     	if	0	;tblptru may be non-zero
  8797  000B1C                     	endif
  8798  000B1C                     	if	0	;tblptru may be non-zero
  8799  000B1C                     	endif
  8800  000B1C  0008               	tblrd		*
  8801  000B1E  50F5               	movf	tablat,w,c
  8802  000B20  0012               	return	
  8803  000B22                     __end_ofPL2:
  8804                           	callstack 0
  8805  000B22                     PL4:
  8806                           	callstack 24
  8807  000B22  6E72               	movwf	??_GLCDMotor^0,c
  8808  000B24  0E1D               	movlw	29
  8809  000B26  2672               	addwf	??_GLCDMotor^0,f,c
  8810  000B28  0C1D               	retlw	29
  8811  000B2A                     __end_ofPL4:
  8812                           	callstack 0
  8813  000B2A                     PL8:
  8814                           	callstack 24
  8815  000B2A  5020               	movf	_menuDaltGLCD^0,w,c
  8816  000B2C  0D1D               	mullw	29
  8817  000B2E  50F3               	movf	243,w,c
  8818  000B30  0F01               	addlw	low _menuList
  8819  000B32  0012               	return	
  8820  000B34                     __end_ofPL8:
  8821                           	callstack 0
  8822  000B34                     PL10:
  8823                           	callstack 24
  8824  000B34  5066               	movf	LcNewString@new_s^0,w,c
  8825  000B36  A4D8               	btfss	status,2,c
  8826  000B38  0E02               	movlw	high __smallconst
  8827  000B3A  6E67               	movwf	(LcNewString@new_s+1)^0,c
  8828  000B3C  0012               	return	
  8829  000B3E                     __end_ofPL10:
  8830                           	callstack 0
  8831  000B3E                     PL60:
  8832                           	callstack 27
  8833  000B3E  0EB5               	movlw	181
  8834  000B40  5C63               	subwf	?_TiGetTics^0,w,c
  8835  000B42  0E04               	movlw	4
  8836  000B44  5864               	subwfb	(?_TiGetTics+1)^0,w,c
  8837  000B46  0012               	return	
  8838  000B48                     __end_ofPL60:
  8839                           	callstack 0
  8840                           
  8841 ;; *************** function _LcPutChar *****************
  8842 ;; Defined at:
  8843 ;;		line 134 in file "LcTLCD.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;  c               1    wreg     unsigned char 
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;  c               1   19[COMRAM] unsigned char 
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/1
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMRAM   BANK0   BANK1
  8857 ;;      Params:         0       0       0
  8858 ;;      Locals:         1       0       0
  8859 ;;      Temps:          0       0       0
  8860 ;;      Totals:         1       0       0
  8861 ;;Total ram usage:        1 bytes
  8862 ;; Hardware stack levels used: 1
  8863 ;; Hardware stack levels required when called: 5
  8864 ;; This function calls:
  8865 ;;		_CantaData
  8866 ;;		_LcGotoXY
  8867 ;;		_WaitForBusy
  8868 ;; This function is called by:
  8869 ;;		_LcLCD
  8870 ;;		_menu
  8871 ;;		_GLCDMotor
  8872 ;;		_motorSIO
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text73
  8877  00181E                     __ptext73:
  8878                           	callstack 0
  8879  00181E                     _LcPutChar:
  8880                           	callstack 24
  8881                           
  8882                           ;incstack = 0
  8883                           ;LcPutChar@c stored from wreg
  8884  00181E  6E71               	movwf	LcPutChar@c^0,c
  8885                           
  8886                           ;LcTLCD.c: 136:  WaitForBusy(); CantaData(c);
  8887  001820  EC76  F00C         	call	_WaitForBusy	;wreg free
  8888  001824  5071               	movf	LcPutChar@c^0,w,c
  8889  001826  ECB3  F00C         	call	_CantaData
  8890                           
  8891                           ;LcTLCD.c: 138:  ++ColumnAct;
  8892  00182A  2A3B               	incf	_ColumnAct^0,f,c
  8893                           
  8894                           ;LcTLCD.c: 140:  if (Rows == 2) {
  8895  00182C  0E02               	movlw	2
  8896  00182E  183D               	xorwf	_Rows^0,w,c
  8897  001830  E10C               	bnz	l4353
  8898                           
  8899                           ;LcTLCD.c: 141:   if (ColumnAct >= 40) {
  8900  001832  0E27               	movlw	39
  8901  001834  643B               	cpfsgt	_ColumnAct^0,c
  8902  001836  D009               	goto	l4353
  8903                           
  8904                           ;LcTLCD.c: 142:    ColumnAct = 0;
  8905  001838  6A3B               	clrf	_ColumnAct^0,c
  8906                           
  8907                           ;LcTLCD.c: 143:    if (++RowAct >= 2) RowAct = 0;
  8908  00183A  2A3C               	incf	_RowAct^0,f,c
  8909  00183C  0E01               	movlw	1
  8910  00183E  643C               	cpfsgt	_RowAct^0,c
  8911  001840  D001               	goto	l4351
  8912  001842  6A3C               	clrf	_RowAct^0,c
  8913  001844                     l4351:
  8914                           
  8915                           ;LcTLCD.c: 144:    LcGotoXY(ColumnAct, RowAct);
  8916  001844  D80C               	call	PL70	;call to abstracted procedure
  8917  001846  ECE9  F00C         	call	_LcGotoXY
  8918  00184A                     l4353:
  8919                           
  8920                           ;LcTLCD.c: 155:  if (RowAct == 1) {
  8921  00184A  043C               	decf	_RowAct^0,w,c
  8922  00184C  A4D8               	btfss	status,2,c
  8923  00184E  0012               	return	
  8924                           
  8925                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) ColumnAct = 0;
  8926  001850  0E27               	movlw	39
  8927  001852  643B               	cpfsgt	_ColumnAct^0,c
  8928  001854  D001               	goto	l4359
  8929  001856  6A3B               	clrf	_ColumnAct^0,c
  8930  001858                     l4359:
  8931                           
  8932                           ;LcTLCD.c: 157:   LcGotoXY(ColumnAct, RowAct);
  8933  001858  D802               	call	PL70	;call to abstracted procedure
  8934  00185A  EFE9  F00C         	goto	_LcGotoXY
  8935  00185E                     __end_of_LcPutChar:
  8936                           	callstack 0
  8937  00185E                     PL70:
  8938                           	callstack 24
  8939  00185E  C03C  F06B         	movff	_RowAct,LcGotoXY@Row
  8940  001862  503B               	movf	_ColumnAct^0,w,c
  8941  001864  0012               	return	
  8942  001866                     __end_ofPL70:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function _CantaData *****************
  8946 ;; Defined at:
  8947 ;;		line 196 in file "LcTLCD.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;  Data            1    wreg     unsigned char 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  Data            1    7[COMRAM] unsigned char 
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  1    wreg      void 
  8954 ;; Registers used:
  8955 ;;		wreg, status,2, status,0, cstack
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/1
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1
  8961 ;;      Params:         0       0       0
  8962 ;;      Locals:         1       0       0
  8963 ;;      Temps:          0       0       0
  8964 ;;      Totals:         1       0       0
  8965 ;;Total ram usage:        1 bytes
  8966 ;; Hardware stack levels used: 1
  8967 ;; Hardware stack levels required when called: 3
  8968 ;; This function calls:
  8969 ;;		_CantaPartAlta
  8970 ;;		_CantaPartBaixa
  8971 ;; This function is called by:
  8972 ;;		_LcPutChar
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text74
  8977  001966                     __ptext74:
  8978                           	callstack 0
  8979  001966                     _CantaData:
  8980                           	callstack 25
  8981                           
  8982                           ;incstack = 0
  8983                           ;CantaData@Data stored from wreg
  8984  001966  6E65               	movwf	CantaData@Data^0,c
  8985                           
  8986                           ;LcTLCD.c: 197:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8987  001968  9694               	bcf	148,3,c	;volatile
  8988  00196A  9494               	bcf	148,2,c	;volatile
  8989  00196C  9294               	bcf	148,1,c	;volatile
  8990  00196E  9094               	bcf	148,0,c	;volatile
  8991                           
  8992                           ;LcTLCD.c: 198:  (LATCbits.LATC5 = 1);
  8993  001970  8A8B               	bsf	139,5,c	;volatile
  8994                           
  8995                           ;LcTLCD.c: 199:  (LATDbits.LATD7 = 0);
  8996  001972  9E8C               	bcf	140,7,c	;volatile
  8997                           
  8998                           ;LcTLCD.c: 200:  (LATCbits.LATC4 = 1);
  8999  001974  888B               	bsf	139,4,c	;volatile
  9000                           
  9001                           ;LcTLCD.c: 201:  CantaPartAlta(Data);
  9002  001976  5065               	movf	CantaData@Data^0,w,c
  9003  001978  ECB4  F00B         	call	_CantaPartAlta
  9004                           
  9005                           ;LcTLCD.c: 202:  (LATCbits.LATC4 = 1);
  9006                           
  9007                           ;LcTLCD.c: 203:  (LATCbits.LATC4 = 0);
  9008                           
  9009                           ;LcTLCD.c: 204:  (LATCbits.LATC4 = 0);
  9010                           
  9011                           ;LcTLCD.c: 205:  (LATCbits.LATC4 = 1);
  9012  00197C  D80B               	call	PL64	;call to abstracted procedure
  9013                           
  9014                           ;LcTLCD.c: 206:  CantaPartBaixa(Data);
  9015  00197E  5065               	movf	CantaData@Data^0,w,c
  9016  001980  EC81  F00B         	call	_CantaPartBaixa
  9017                           
  9018                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  9019                           
  9020                           ;LcTLCD.c: 208:  (LATCbits.LATC4 = 0);
  9021                           
  9022                           ;LcTLCD.c: 209:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9023  001984  D000               	goto	PL30	;call to abstracted procedure
  9024  001986                     __end_of_CantaData:
  9025                           	callstack 0
  9026  001986                     PL30:
  9027                           	callstack 24
  9028  001986  888B               	bsf	139,4,c	;volatile
  9029  001988  988B               	bcf	139,4,c	;volatile
  9030  00198A  8694               	bsf	148,3,c	;volatile
  9031  00198C  8494               	bsf	148,2,c	;volatile
  9032  00198E  8294               	bsf	148,1,c	;volatile
  9033  001990  8094               	bsf	148,0,c	;volatile
  9034  001992  0012               	return		;funcret
  9035  001994                     __end_ofPL30:
  9036                           	callstack 0
  9037  001994                     PL64:
  9038                           	callstack 24
  9039  001994  888B               	bsf	139,4,c	;volatile
  9040  001996  988B               	bcf	139,4,c	;volatile
  9041  001998  988B               	bcf	139,4,c	;volatile
  9042  00199A  888B               	bsf	139,4,c	;volatile
  9043  00199C  0012               	return	
  9044  00199E                     __end_ofPL64:
  9045                           	callstack 0
  9046                           
  9047 ;; *************** function _LcNewString *****************
  9048 ;; Defined at:
  9049 ;;		line 241 in file "LcTLCD.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  9052 ;;		 -> stringScore(3), STR_10(8), STR_9(12), STR_8(8), 
  9053 ;;		 -> hora(6), menuList(145), usuaris.username(9), usuaris(184), 
  9054 ;;		 -> STR_7(16), STR_6(13), STR_5(9), STR_4(7), 
  9055 ;;		 -> STR_3(7), STR_2(11), STR_1(8), 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;		None
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      void 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/1
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1
  9067 ;;      Params:         2       0       0
  9068 ;;      Locals:         0       0       0
  9069 ;;      Temps:          0       0       0
  9070 ;;      Totals:         2       0       0
  9071 ;;Total ram usage:        2 bytes
  9072 ;; Hardware stack levels used: 1
  9073 ;; Hardware stack levels required when called: 2
  9074 ;; This function calls:
  9075 ;;		Nothing
  9076 ;; This function is called by:
  9077 ;;		_menu
  9078 ;;		_GLCDMotor
  9079 ;;		_motorJoc
  9080 ;;		_motorSIO
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           
  9084                           	psect	text75
  9085  001CAC                     __ptext75:
  9086                           	callstack 0
  9087  001CAC                     _LcNewString:
  9088                           	callstack 27
  9089                           
  9090                           ;LcTLCD.c: 242:     s_ptr = new_s;
  9091                           
  9092                           ;incstack = 0
  9093  001CAC  C066  F00D         	movff	LcNewString@new_s,_s_ptr
  9094  001CB0  C067  F00E         	movff	LcNewString@new_s+1,_s_ptr+1
  9095                           
  9096                           ;LcTLCD.c: 243:     nou_s = 1;
  9097  001CB4  8279               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9098  001CB6  0012               	return		;funcret
  9099  001CB8                     __end_of_LcNewString:
  9100                           	callstack 0
  9101                           
  9102 ;; *************** function _LcLliure *****************
  9103 ;; Defined at:
  9104 ;;		line 257 in file "LcTLCD.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;		None
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;		None
  9109 ;; Return value:  Size  Location     Type
  9110 ;;		None               void
  9111 ;; Registers used:
  9112 ;;		status,0
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/1
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1
  9118 ;;      Params:         0       0       0
  9119 ;;      Locals:         0       0       0
  9120 ;;      Temps:          0       0       0
  9121 ;;      Totals:         0       0       0
  9122 ;;Total ram usage:        0 bytes
  9123 ;; Hardware stack levels used: 1
  9124 ;; Hardware stack levels required when called: 2
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_menu
  9129 ;;		_GLCDMotor
  9130 ;;		_motorJoc
  9131 ;;		_motorSIO
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           	psect	text76
  9136  001CB8                     __ptext76:
  9137                           	callstack 0
  9138  001CB8                     _LcLliure:
  9139                           	callstack 27
  9140                           
  9141                           ;LcTLCD.c: 258:     return !nou_s;
  9142                           
  9143                           ;incstack = 0
  9144  001CB8  A279               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  9145  001CBA  D002               	goto	l2121
  9146  001CBC  90D8               	bcf	status,0,c
  9147  001CBE  0012               	return	
  9148  001CC0                     l2121:
  9149  001CC0  80D8               	bsf	status,0,c
  9150  001CC2  0012               	return		;funcret
  9151  001CC4                     __end_of_LcLliure:
  9152                           	callstack 0
  9153                           
  9154 ;; *************** function _LcClear *****************
  9155 ;; Defined at:
  9156 ;;		line 84 in file "LcTLCD.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;		None
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;		None
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      void 
  9163 ;; Registers used:
  9164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/1
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1
  9170 ;;      Params:         0       0       0
  9171 ;;      Locals:         0       0       0
  9172 ;;      Temps:          0       0       0
  9173 ;;      Totals:         0       0       0
  9174 ;;Total ram usage:        0 bytes
  9175 ;; Hardware stack levels used: 1
  9176 ;; Hardware stack levels required when called: 5
  9177 ;; This function calls:
  9178 ;;		_CantaIR
  9179 ;;		_Espera
  9180 ;;		_LcGotoXY
  9181 ;;		_WaitForBusy
  9182 ;; This function is called by:
  9183 ;;		_menu
  9184 ;;		_GLCDMotor
  9185 ;;		_motorSIO
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189                           	psect	text77
  9190  001B14                     __ptext77:
  9191                           	callstack 0
  9192  001B14                     _LcClear:
  9193                           	callstack 24
  9194                           
  9195                           ;LcTLCD.c: 87:  WaitForBusy(); CantaIR(0x01);
  9196                           
  9197                           ;incstack = 0
  9198  001B14  EC76  F00C         	call	_WaitForBusy	;wreg free
  9199  001B18  0E01               	movlw	1
  9200  001B1A  ECD7  F00D         	call	_CantaIR
  9201                           
  9202                           ;LcTLCD.c: 88:  Espera(Timer, 3);
  9203  001B1E  D806               	call	PL54	;call to abstracted procedure
  9204  001B20  EC9B  F00D         	call	_Espera
  9205                           
  9206                           ;LcTLCD.c: 89:     LcGotoXY(0,0);
  9207  001B24  0E00               	movlw	0
  9208  001B26  6E6B               	movwf	LcGotoXY@Row^0,c
  9209  001B28  EFE9  F00C         	goto	_LcGotoXY
  9210  001B2C                     __end_of_LcClear:
  9211                           	callstack 0
  9212  001B2C                     PL54:
  9213                           	callstack 26
  9214  001B2C  6A6B               	clrf	(Espera@ms+1)^0,c
  9215  001B2E  0E03               	movlw	3
  9216  001B30  6E6A               	movwf	Espera@ms^0,c
  9217  001B32  503A               	movf	_Timer^0,w,c
  9218  001B34  0012               	return	
  9219  001B36                     __end_ofPL54:
  9220                           	callstack 0
  9221                           
  9222 ;; *************** function _LcGotoXY *****************
  9223 ;; Defined at:
  9224 ;;		line 106 in file "LcTLCD.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  Column          1    wreg     unsigned char 
  9227 ;;  Row             1   13[COMRAM] unsigned char 
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;  Column          1   18[COMRAM] unsigned char 
  9230 ;;  Fisics          2   14[COMRAM] int 
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  1    wreg      void 
  9233 ;; Registers used:
  9234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/1
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMRAM   BANK0   BANK1
  9240 ;;      Params:         1       0       0
  9241 ;;      Locals:         5       0       0
  9242 ;;      Temps:          0       0       0
  9243 ;;      Totals:         6       0       0
  9244 ;;Total ram usage:        6 bytes
  9245 ;; Hardware stack levels used: 1
  9246 ;; Hardware stack levels required when called: 4
  9247 ;; This function calls:
  9248 ;;		_CantaIR
  9249 ;;		_WaitForBusy
  9250 ;; This function is called by:
  9251 ;;		_LcClear
  9252 ;;		_LcPutChar
  9253 ;;		_menu
  9254 ;;		_GLCDMotor
  9255 ;;		_motorJoc
  9256 ;;		_motorSIO
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text78
  9261  0019D2                     __ptext78:
  9262                           	callstack 0
  9263  0019D2                     _LcGotoXY:
  9264                           	callstack 24
  9265                           
  9266                           ;incstack = 0
  9267                           ;LcGotoXY@Column stored from wreg
  9268  0019D2  6E70               	movwf	LcGotoXY@Column^0,c
  9269                           
  9270                           ;LcTLCD.c: 110:  int Fisics;;LcTLCD.c: 114:    Fisics = Column + (!Row ? 0 : 0x40);
  9271  0019D4  506B               	movf	LcGotoXY@Row^0,w,c
  9272  0019D6  E004               	bz	l57
  9273  0019D8  6A6F               	clrf	(_LcGotoXY$336+1)^0,c
  9274  0019DA  0E40               	movlw	64
  9275  0019DC  6E6E               	movwf	_LcGotoXY$336^0,c
  9276  0019DE  D002               	goto	l4279
  9277  0019E0                     l57:
  9278  0019E0  6A6E               	clrf	_LcGotoXY$336^0,c
  9279  0019E2  6A6F               	clrf	(_LcGotoXY$336+1)^0,c
  9280  0019E4                     l4279:
  9281  0019E4  5070               	movf	LcGotoXY@Column^0,w,c
  9282  0019E6  246E               	addwf	_LcGotoXY$336^0,w,c
  9283  0019E8  6E6C               	movwf	LcGotoXY@Fisics^0,c
  9284  0019EA  0E00               	movlw	0
  9285  0019EC  206F               	addwfc	(_LcGotoXY$336+1)^0,w,c
  9286  0019EE  6E6D               	movwf	(LcGotoXY@Fisics+1)^0,c
  9287                           
  9288                           ;LcTLCD.c: 127:  WaitForBusy();
  9289  0019F0  EC76  F00C         	call	_WaitForBusy	;wreg free
  9290                           
  9291                           ;LcTLCD.c: 128:  CantaIR(0x80 | Fisics);
  9292  0019F4  506C               	movf	LcGotoXY@Fisics^0,w,c
  9293  0019F6  0980               	iorlw	128
  9294  0019F8  ECD7  F00D         	call	_CantaIR
  9295                           
  9296                           ;LcTLCD.c: 130:  RowAct = Row;
  9297  0019FC  C06B  F03C         	movff	LcGotoXY@Row,_RowAct
  9298                           
  9299                           ;LcTLCD.c: 131:  ColumnAct = Column;
  9300  001A00  C070  F03B         	movff	LcGotoXY@Column,_ColumnAct
  9301  001A04  0012               	return		;funcret
  9302  001A06                     __end_of_LcGotoXY:
  9303                           	callstack 0
  9304                           
  9305 ;; *************** function _WaitForBusy *****************
  9306 ;; Defined at:
  9307 ;;		line 212 in file "LcTLCD.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;		None
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;  Busy            1   12[COMRAM] unsigned char 
  9312 ;; Return value:  Size  Location     Type
  9313 ;;                  1    wreg      void 
  9314 ;; Registers used:
  9315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9316 ;; Tracked objects:
  9317 ;;		On entry : 0/0
  9318 ;;		On exit  : 0/0
  9319 ;;		Unchanged: 0/0
  9320 ;; Data sizes:     COMRAM   BANK0   BANK1
  9321 ;;      Params:         0       0       0
  9322 ;;      Locals:         1       0       0
  9323 ;;      Temps:          0       0       0
  9324 ;;      Totals:         1       0       0
  9325 ;;Total ram usage:        1 bytes
  9326 ;; Hardware stack levels used: 1
  9327 ;; Hardware stack levels required when called: 3
  9328 ;; This function calls:
  9329 ;;		_TiGetTics
  9330 ;;		_TiResetTics
  9331 ;; This function is called by:
  9332 ;;		_LcInit
  9333 ;;		_LcClear
  9334 ;;		_LcGotoXY
  9335 ;;		_LcPutChar
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           	psect	text79
  9340  0018EC                     __ptext79:
  9341                           	callstack 0
  9342  0018EC                     _WaitForBusy:
  9343                           	callstack 25
  9344                           
  9345                           ;LcTLCD.c: 213:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9346                           
  9347                           ;incstack = 0
  9348  0018EC  8694               	bsf	148,3,c	;volatile
  9349  0018EE  8494               	bsf	148,2,c	;volatile
  9350  0018F0  8294               	bsf	148,1,c	;volatile
  9351  0018F2  8094               	bsf	148,0,c	;volatile
  9352                           
  9353                           ;LcTLCD.c: 214:  (LATCbits.LATC5 = 0);
  9354  0018F4  9A8B               	bcf	139,5,c	;volatile
  9355                           
  9356                           ;LcTLCD.c: 215:  (LATDbits.LATD7 = 1);
  9357  0018F6  8E8C               	bsf	140,7,c	;volatile
  9358                           
  9359                           ;LcTLCD.c: 216:  TiResetTics(Timer);
  9360  0018F8  503A               	movf	_Timer^0,w,c
  9361  0018FA  ECE5  F00D         	call	_TiResetTics
  9362  0018FE                     l4247:
  9363                           
  9364                           ;LcTLCD.c: 218:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9365  0018FE  888B               	bsf	139,4,c	;volatile
  9366  001900  888B               	bsf	139,4,c	;volatile
  9367                           
  9368                           ;LcTLCD.c: 219:   Busy = (PORTCbits.RC3);
  9369  001902  0E00               	movlw	0
  9370  001904  B682               	btfsc	130,3,c	;volatile
  9371  001906  0E01               	movlw	1
  9372  001908  6E6A               	movwf	WaitForBusy@Busy^0,c
  9373                           
  9374                           ;LcTLCD.c: 220:   (LATCbits.LATC4 = 0);
  9375  00190A  988B               	bcf	139,4,c	;volatile
  9376                           
  9377                           ;LcTLCD.c: 221:   (LATCbits.LATC4 = 0);
  9378  00190C  988B               	bcf	139,4,c	;volatile
  9379                           
  9380                           ;LcTLCD.c: 222:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  9381  00190E  888B               	bsf	139,4,c	;volatile
  9382  001910  888B               	bsf	139,4,c	;volatile
  9383                           
  9384                           ;LcTLCD.c: 224:   (LATCbits.LATC4 = 0);
  9385  001912  988B               	bcf	139,4,c	;volatile
  9386                           
  9387                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 0);
  9388  001914  988B               	bcf	139,4,c	;volatile
  9389                           
  9390                           ;LcTLCD.c: 226:   if (TiGetTics(Timer)) break;
  9391  001916  503A               	movf	_Timer^0,w,c
  9392  001918  EC41  F00D         	call	_TiGetTics
  9393  00191C  5063               	movf	?_TiGetTics^0,w,c
  9394  00191E  1064               	iorwf	(?_TiGetTics+1)^0,w,c
  9395  001920  E001               	bz	l4269
  9396  001922  0012               	return	
  9397  001924                     l4269:
  9398                           
  9399                           ;LcTLCD.c: 227:  } while(Busy);
  9400  001924  506A               	movf	WaitForBusy@Busy^0,w,c
  9401  001926  E1EB               	bnz	l4247
  9402  001928  0012               	return		;funcret
  9403  00192A                     __end_of_WaitForBusy:
  9404                           	callstack 0
  9405                           
  9406 ;; *************** function _CantaIR *****************
  9407 ;; Defined at:
  9408 ;;		line 180 in file "LcTLCD.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  IR              1    wreg     unsigned char 
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;  IR              1    7[COMRAM] unsigned char 
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1    wreg      void 
  9415 ;; Registers used:
  9416 ;;		wreg, status,2, status,0, cstack
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/1
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMRAM   BANK0   BANK1
  9422 ;;      Params:         0       0       0
  9423 ;;      Locals:         1       0       0
  9424 ;;      Temps:          0       0       0
  9425 ;;      Totals:         1       0       0
  9426 ;;Total ram usage:        1 bytes
  9427 ;; Hardware stack levels used: 1
  9428 ;; Hardware stack levels required when called: 3
  9429 ;; This function calls:
  9430 ;;		_CantaPartAlta
  9431 ;;		_CantaPartBaixa
  9432 ;; This function is called by:
  9433 ;;		_LcScroll
  9434 ;;		_LcInit
  9435 ;;		_LcClear
  9436 ;;		_LcGotoXY
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           	psect	text80
  9441  001BAE                     __ptext80:
  9442                           	callstack 0
  9443  001BAE                     _CantaIR:
  9444                           	callstack 24
  9445                           
  9446                           ;incstack = 0
  9447                           ;CantaIR@IR stored from wreg
  9448  001BAE  6E65               	movwf	CantaIR@IR^0,c
  9449                           
  9450                           ;LcTLCD.c: 181:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  9451  001BB0  9694               	bcf	148,3,c	;volatile
  9452                           
  9453                           ;LcTLCD.c: 182:  (LATCbits.LATC5 = 0);
  9454                           
  9455                           ;LcTLCD.c: 183:  (LATDbits.LATD7 = 0);
  9456                           
  9457                           ;LcTLCD.c: 184:  (LATCbits.LATC4 = 1);
  9458  001BB2  ECFD  F00A         	call	PL36	;call to abstracted procedure
  9459                           
  9460                           ;LcTLCD.c: 185:  CantaPartAlta(IR);
  9461  001BB6  5065               	movf	CantaIR@IR^0,w,c
  9462  001BB8  ECB4  F00B         	call	_CantaPartAlta
  9463                           
  9464                           ;LcTLCD.c: 186:  (LATCbits.LATC4 = 1);
  9465                           
  9466                           ;LcTLCD.c: 187:  (LATCbits.LATC4 = 0);
  9467                           
  9468                           ;LcTLCD.c: 188:  (LATCbits.LATC4 = 0);
  9469                           
  9470                           ;LcTLCD.c: 189:  (LATCbits.LATC4 = 1);
  9471  001BBC  ECCA  F00C         	call	PL64	;call to abstracted procedure
  9472                           
  9473                           ;LcTLCD.c: 190:  CantaPartBaixa(IR);
  9474  001BC0  5065               	movf	CantaIR@IR^0,w,c
  9475  001BC2  EC81  F00B         	call	_CantaPartBaixa
  9476                           
  9477                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  9478                           
  9479                           ;LcTLCD.c: 192:  (LATCbits.LATC4 = 0);
  9480                           
  9481                           ;LcTLCD.c: 193:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  9482  001BC6  EFC3  F00C         	goto	PL30	;call to abstracted procedure
  9483  001BCA                     __end_of_CantaIR:
  9484                           	callstack 0
  9485                           
  9486 ;; *************** function _CantaPartBaixa *****************
  9487 ;; Defined at:
  9488 ;;		line 173 in file "LcTLCD.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;  c               1    wreg     unsigned char 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;  c               1    6[COMRAM] unsigned char 
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  1    wreg      void 
  9495 ;; Registers used:
  9496 ;;		wreg, status,2, status,0
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/1
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMRAM   BANK0   BANK1
  9502 ;;      Params:         0       0       0
  9503 ;;      Locals:         1       0       0
  9504 ;;      Temps:          1       0       0
  9505 ;;      Totals:         2       0       0
  9506 ;;Total ram usage:        2 bytes
  9507 ;; Hardware stack levels used: 1
  9508 ;; Hardware stack levels required when called: 2
  9509 ;; This function calls:
  9510 ;;		Nothing
  9511 ;; This function is called by:
  9512 ;;		_CantaIR
  9513 ;;		_CantaData
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           	psect	text81
  9518  001702                     __ptext81:
  9519                           	callstack 0
  9520  001702                     _CantaPartBaixa:
  9521                           	callstack 24
  9522                           
  9523                           ;incstack = 0
  9524                           ;CantaPartBaixa@c stored from wreg
  9525  001702  6E64               	movwf	CantaPartBaixa@c^0,c
  9526                           
  9527                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  9528  001704  A664               	btfss	CantaPartBaixa@c^0,3,c
  9529  001706  D003               	goto	u3280
  9530  001708  6A63               	clrf	??_CantaPartBaixa^0,c
  9531  00170A  2A63               	incf	??_CantaPartBaixa^0,f,c
  9532  00170C  D001               	goto	u3298
  9533  00170E                     u3280:
  9534  00170E  6A63               	clrf	??_CantaPartBaixa^0,c
  9535  001710                     u3298:
  9536  001710  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9537  001712  D825               	call	PL68	;call to abstracted procedure
  9538  001714  0BF7               	andlw	-9
  9539  001716  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9540  001718  6E8B               	movwf	139,c	;volatile
  9541                           
  9542                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  9543  00171A  A464               	btfss	CantaPartBaixa@c^0,2,c
  9544  00171C  D003               	goto	u3300
  9545  00171E  6A63               	clrf	??_CantaPartBaixa^0,c
  9546  001720  2A63               	incf	??_CantaPartBaixa^0,f,c
  9547  001722  D001               	goto	u3318
  9548  001724                     u3300:
  9549  001724  6A63               	clrf	??_CantaPartBaixa^0,c
  9550  001726                     u3318:
  9551  001726  D81B               	call	PL68	;call to abstracted procedure
  9552  001728  0BFB               	andlw	-5
  9553  00172A  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9554  00172C  6E8B               	movwf	139,c	;volatile
  9555                           
  9556                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  9557  00172E  A264               	btfss	CantaPartBaixa@c^0,1,c
  9558  001730  D003               	goto	u3320
  9559  001732  6A63               	clrf	??_CantaPartBaixa^0,c
  9560  001734  2A63               	incf	??_CantaPartBaixa^0,f,c
  9561  001736  D001               	goto	u3338
  9562  001738                     u3320:
  9563  001738  6A63               	clrf	??_CantaPartBaixa^0,c
  9564  00173A                     u3338:
  9565  00173A  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9566  00173C  508B               	movf	139,w,c	;volatile
  9567  00173E  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9568  001740  0BFD               	andlw	-3
  9569  001742  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9570  001744  6E8B               	movwf	139,c	;volatile
  9571                           
  9572                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  9573  001746  A064               	btfss	CantaPartBaixa@c^0,0,c
  9574  001748  D003               	goto	u3340
  9575  00174A  6A63               	clrf	??_CantaPartBaixa^0,c
  9576  00174C  2A63               	incf	??_CantaPartBaixa^0,f,c
  9577  00174E  D001               	goto	u3358
  9578  001750                     u3340:
  9579  001750  6A63               	clrf	??_CantaPartBaixa^0,c
  9580  001752                     u3358:
  9581  001752  508B               	movf	139,w,c	;volatile
  9582  001754  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9583  001756  0BFE               	andlw	-2
  9584  001758  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9585  00175A  6E8B               	movwf	139,c	;volatile
  9586  00175C  0012               	return		;funcret
  9587  00175E                     __end_of_CantaPartBaixa:
  9588                           	callstack 0
  9589  00175E                     PL68:
  9590                           	callstack 24
  9591  00175E  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9592  001760  4663               	rlncf	??_CantaPartBaixa^0,f,c
  9593  001762  508B               	movf	139,w,c	;volatile
  9594  001764  1863               	xorwf	??_CantaPartBaixa^0,w,c
  9595  001766  0012               	return	
  9596  001768                     __end_ofPL68:
  9597                           	callstack 0
  9598                           
  9599 ;; *************** function _CantaPartAlta *****************
  9600 ;; Defined at:
  9601 ;;		line 166 in file "LcTLCD.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  c               1    wreg     unsigned char 
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;  c               1    6[COMRAM] unsigned char 
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		wreg, status,2, status,0
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/1
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1
  9615 ;;      Params:         0       0       0
  9616 ;;      Locals:         1       0       0
  9617 ;;      Temps:          1       0       0
  9618 ;;      Totals:         2       0       0
  9619 ;;Total ram usage:        2 bytes
  9620 ;; Hardware stack levels used: 1
  9621 ;; Hardware stack levels required when called: 2
  9622 ;; This function calls:
  9623 ;;		Nothing
  9624 ;; This function is called by:
  9625 ;;		_CantaIR
  9626 ;;		_CantaData
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text82
  9631  001768                     __ptext82:
  9632                           	callstack 0
  9633  001768                     _CantaPartAlta:
  9634                           	callstack 24
  9635                           
  9636                           ;incstack = 0
  9637                           ;CantaPartAlta@c stored from wreg
  9638  001768  6E64               	movwf	CantaPartAlta@c^0,c
  9639                           
  9640                           ;LcTLCD.c: 167:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  9641  00176A  AE64               	btfss	CantaPartAlta@c^0,7,c
  9642  00176C  D003               	goto	u3200
  9643  00176E  6A63               	clrf	??_CantaPartAlta^0,c
  9644  001770  2A63               	incf	??_CantaPartAlta^0,f,c
  9645  001772  D001               	goto	u3218
  9646  001774                     u3200:
  9647  001774  6A63               	clrf	??_CantaPartAlta^0,c
  9648  001776                     u3218:
  9649  001776  4663               	rlncf	??_CantaPartAlta^0,f,c
  9650  001778  D825               	call	PL58	;call to abstracted procedure
  9651  00177A  0BF7               	andlw	-9
  9652  00177C  1863               	xorwf	??_CantaPartAlta^0,w,c
  9653  00177E  6E8B               	movwf	139,c	;volatile
  9654                           
  9655                           ;LcTLCD.c: 168:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  9656  001780  AC64               	btfss	CantaPartAlta@c^0,6,c
  9657  001782  D003               	goto	u3220
  9658  001784  6A63               	clrf	??_CantaPartAlta^0,c
  9659  001786  2A63               	incf	??_CantaPartAlta^0,f,c
  9660  001788  D001               	goto	u3238
  9661  00178A                     u3220:
  9662  00178A  6A63               	clrf	??_CantaPartAlta^0,c
  9663  00178C                     u3238:
  9664  00178C  D81B               	call	PL58	;call to abstracted procedure
  9665  00178E  0BFB               	andlw	-5
  9666  001790  1863               	xorwf	??_CantaPartAlta^0,w,c
  9667  001792  6E8B               	movwf	139,c	;volatile
  9668                           
  9669                           ;LcTLCD.c: 169:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  9670  001794  AA64               	btfss	CantaPartAlta@c^0,5,c
  9671  001796  D003               	goto	u3240
  9672  001798  6A63               	clrf	??_CantaPartAlta^0,c
  9673  00179A  2A63               	incf	??_CantaPartAlta^0,f,c
  9674  00179C  D001               	goto	u3258
  9675  00179E                     u3240:
  9676  00179E  6A63               	clrf	??_CantaPartAlta^0,c
  9677  0017A0                     u3258:
  9678  0017A0  4663               	rlncf	??_CantaPartAlta^0,f,c
  9679  0017A2  508B               	movf	139,w,c	;volatile
  9680  0017A4  1863               	xorwf	??_CantaPartAlta^0,w,c
  9681  0017A6  0BFD               	andlw	-3
  9682  0017A8  1863               	xorwf	??_CantaPartAlta^0,w,c
  9683  0017AA  6E8B               	movwf	139,c	;volatile
  9684                           
  9685                           ;LcTLCD.c: 170:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  9686  0017AC  A864               	btfss	CantaPartAlta@c^0,4,c
  9687  0017AE  D003               	goto	u3260
  9688  0017B0  6A63               	clrf	??_CantaPartAlta^0,c
  9689  0017B2  2A63               	incf	??_CantaPartAlta^0,f,c
  9690  0017B4  D001               	goto	u3278
  9691  0017B6                     u3260:
  9692  0017B6  6A63               	clrf	??_CantaPartAlta^0,c
  9693  0017B8                     u3278:
  9694  0017B8  508B               	movf	139,w,c	;volatile
  9695  0017BA  1863               	xorwf	??_CantaPartAlta^0,w,c
  9696  0017BC  0BFE               	andlw	-2
  9697  0017BE  1863               	xorwf	??_CantaPartAlta^0,w,c
  9698  0017C0  6E8B               	movwf	139,c	;volatile
  9699  0017C2  0012               	return		;funcret
  9700  0017C4                     __end_of_CantaPartAlta:
  9701                           	callstack 0
  9702  0017C4                     PL58:
  9703                           	callstack 24
  9704  0017C4  4663               	rlncf	??_CantaPartAlta^0,f,c
  9705  0017C6  4663               	rlncf	??_CantaPartAlta^0,f,c
  9706  0017C8  508B               	movf	139,w,c	;volatile
  9707  0017CA  1863               	xorwf	??_CantaPartAlta^0,w,c
  9708  0017CC  0012               	return	
  9709  0017CE                     __end_ofPL58:
  9710                           	callstack 0
  9711                           
  9712 ;; *************** function _Espera *****************
  9713 ;; Defined at:
  9714 ;;		line 161 in file "LcTLCD.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  Timer           1    wreg     unsigned char 
  9717 ;;  ms              2   12[COMRAM] int 
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;  Timer           1   15[COMRAM] unsigned char 
  9720 ;; Return value:  Size  Location     Type
  9721 ;;                  1    wreg      void 
  9722 ;; Registers used:
  9723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9724 ;; Tracked objects:
  9725 ;;		On entry : 0/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMRAM   BANK0   BANK1
  9729 ;;      Params:         2       0       0
  9730 ;;      Locals:         1       0       0
  9731 ;;      Temps:          1       0       0
  9732 ;;      Totals:         4       0       0
  9733 ;;Total ram usage:        4 bytes
  9734 ;; Hardware stack levels used: 1
  9735 ;; Hardware stack levels required when called: 3
  9736 ;; This function calls:
  9737 ;;		_TiGetTics
  9738 ;;		_TiResetTics
  9739 ;; This function is called by:
  9740 ;;		_LcInit
  9741 ;;		_LcClear
  9742 ;; This function uses a non-reentrant model
  9743 ;;
  9744                           
  9745                           	psect	text83
  9746  001B36                     __ptext83:
  9747                           	callstack 0
  9748  001B36                     _Espera:
  9749                           	callstack 25
  9750                           
  9751                           ;incstack = 0
  9752                           ;Espera@Timer stored from wreg
  9753  001B36  6E6D               	movwf	Espera@Timer^0,c
  9754                           
  9755                           ;LcTLCD.c: 162:  TiResetTics(Timer);
  9756  001B38  506D               	movf	Espera@Timer^0,w,c
  9757  001B3A  ECE5  F00D         	call	_TiResetTics
  9758  001B3E                     l4273:
  9759  001B3E  506D               	movf	Espera@Timer^0,w,c
  9760  001B40  EC41  F00D         	call	_TiGetTics
  9761  001B44  506A               	movf	Espera@ms^0,w,c
  9762  001B46  5C63               	subwf	?_TiGetTics^0,w,c
  9763  001B48  5064               	movf	(?_TiGetTics+1)^0,w,c
  9764  001B4A  0A80               	xorlw	128
  9765  001B4C  6E6C               	movwf	??_Espera^0,c
  9766  001B4E  506B               	movf	(Espera@ms+1)^0,w,c
  9767  001B50  0A80               	xorlw	128
  9768  001B52  586C               	subwfb	??_Espera^0,w,c
  9769  001B54  E3F4               	bnc	l4273
  9770  001B56  0012               	return		;funcret
  9771  001B58                     __end_of_Espera:
  9772                           	callstack 0
  9773                           
  9774 ;; *************** function _TiResetTics *****************
  9775 ;; Defined at:
  9776 ;;		line 55 in file "TiTTimer.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;  Handle          1    wreg     unsigned char 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;  Handle          1    5[COMRAM] unsigned char 
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      void 
  9783 ;; Registers used:
  9784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/1
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1
  9790 ;;      Params:         0       0       0
  9791 ;;      Locals:         1       0       0
  9792 ;;      Temps:          0       0       0
  9793 ;;      Totals:         1       0       0
  9794 ;;Total ram usage:        1 bytes
  9795 ;; Hardware stack levels used: 1
  9796 ;; Hardware stack levels required when called: 2
  9797 ;; This function calls:
  9798 ;;		Nothing
  9799 ;; This function is called by:
  9800 ;;		_Espera
  9801 ;;		_WaitForBusy
  9802 ;;		_SMotor
  9803 ;;		_TeTeclat
  9804 ;;		_menu
  9805 ;;		_motorAltaveu
  9806 ;;		_GLCDMotor
  9807 ;;		_motorHora
  9808 ;;		_motorSIO
  9809 ;; This function uses a non-reentrant model
  9810 ;;
  9811                           
  9812                           	psect	text84
  9813  001BCA                     __ptext84:
  9814                           	callstack 0
  9815  001BCA                     _TiResetTics:
  9816                           	callstack 27
  9817                           
  9818                           ;incstack = 0
  9819                           ;TiResetTics@Handle stored from wreg
  9820  001BCA  6E63               	movwf	TiResetTics@Handle^0,c
  9821                           
  9822                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  9823  001BCC  5063               	movf	TiResetTics@Handle^0,w,c
  9824  001BCE  D805               	call	PL26	;call to abstracted procedure
  9825  001BD0  C00B  FFDE         	movff	_h_Tics,postinc2
  9826  001BD4  C00C  FFDD         	movff	_h_Tics+1,postdec2
  9827  001BD8  0012               	return		;funcret
  9828  001BDA                     __end_of_TiResetTics:
  9829                           	callstack 0
  9830  001BDA                     PL26:
  9831                           	callstack 24
  9832  001BDA  0D03               	mullw	3
  9833  001BDC  50F3               	movf	243,w,c
  9834  001BDE  0F80               	addlw	low _s_Timers
  9835  001BE0  6ED9               	movwf	fsr2l,c
  9836  001BE2  6ADA               	clrf	fsr2h,c
  9837  001BE4  0012               	return	
  9838  001BE6                     __end_ofPL26:
  9839                           	callstack 0
  9840                           
  9841 ;; *************** function _TiGetTics *****************
  9842 ;; Defined at:
  9843 ;;		line 61 in file "TiTTimer.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;  Handle          1    wreg     unsigned char 
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;  Handle          1    9[COMRAM] unsigned char 
  9848 ;;  actual          2   10[COMRAM] volatile unsigned int 
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  2    5[COMRAM] int 
  9851 ;; Registers used:
  9852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/1
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1
  9858 ;;      Params:         2       0       0
  9859 ;;      Locals:         3       0       0
  9860 ;;      Temps:          2       0       0
  9861 ;;      Totals:         7       0       0
  9862 ;;Total ram usage:        7 bytes
  9863 ;; Hardware stack levels used: 1
  9864 ;; Hardware stack levels required when called: 2
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		_Espera
  9869 ;;		_WaitForBusy
  9870 ;;		_SMotor
  9871 ;;		_TeTeclat
  9872 ;;		_menu
  9873 ;;		_motorAltaveu
  9874 ;;		_GLCDMotor
  9875 ;;		_motorHora
  9876 ;;		_motorSIO
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           	psect	text85
  9881  001A82                     __ptext85:
  9882                           	callstack 0
  9883  001A82                     _TiGetTics:
  9884                           	callstack 27
  9885                           
  9886                           ;incstack = 0
  9887                           ;TiGetTics@Handle stored from wreg
  9888  001A82  6E67               	movwf	TiGetTics@Handle^0,c
  9889                           
  9890                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  9891  001A84  C00B  F068         	movff	_h_Tics,TiGetTics@actual	;volatile
  9892  001A88  C00C  F069         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  9893                           
  9894                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  9895  001A8C  5067               	movf	TiGetTics@Handle^0,w,c
  9896  001A8E  ECED  F00D         	call	PL26	;call to abstracted procedure
  9897  001A92  CFDE F065          	movff	postinc2,??_TiGetTics
  9898  001A96  CFDD F066          	movff	postdec2,??_TiGetTics+1
  9899  001A9A  5065               	movf	??_TiGetTics^0,w,c
  9900  001A9C  5C68               	subwf	TiGetTics@actual^0,w,c	;volatile
  9901  001A9E  6E63               	movwf	?_TiGetTics^0,c
  9902  001AA0  5066               	movf	(??_TiGetTics+1)^0,w,c
  9903  001AA2  5869               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  9904  001AA4  6E64               	movwf	(?_TiGetTics+1)^0,c
  9905  001AA6  0012               	return		;funcret
  9906  001AA8                     __end_of_TiGetTics:
  9907                           	callstack 0
  9908                           
  9909 ;; *************** function _GLCDInit *****************
  9910 ;; Defined at:
  9911 ;;		line 26 in file "GestioLCD.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;		None
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;		None
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  1    wreg      void 
  9918 ;; Registers used:
  9919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1
  9925 ;;      Params:         0       0       0
  9926 ;;      Locals:         0       0       0
  9927 ;;      Temps:          0       0       0
  9928 ;;      Totals:         0       0       0
  9929 ;;Total ram usage:        0 bytes
  9930 ;; Hardware stack levels used: 1
  9931 ;; Hardware stack levels required when called: 3
  9932 ;; This function calls:
  9933 ;;		_TiGetTimer
  9934 ;; This function is called by:
  9935 ;;		_main
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939                           	psect	text86
  9940  001D4C                     __ptext86:
  9941                           	callstack 0
  9942  001D4C                     _GLCDInit:
  9943                           	callstack 27
  9944                           
  9945                           ;GestioLCD.c: 27:     timerGLCD=TiGetTimer();
  9946                           
  9947                           ;incstack = 0
  9948  001D4C  EC03  F00D         	call	_TiGetTimer	;wreg free
  9949  001D50  6E21               	movwf	_timerGLCD^0,c
  9950  001D52  0012               	return		;funcret
  9951  001D54                     __end_of_GLCDInit:
  9952                           	callstack 0
  9953                           
  9954 ;; *************** function _TiGetTimer *****************
  9955 ;; Defined at:
  9956 ;;		line 70 in file "TiTTimer.c"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;		None
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;		None
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  1    wreg      unsigned char 
  9963 ;; Registers used:
  9964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMRAM   BANK0   BANK1
  9970 ;;      Params:         0       0       0
  9971 ;;      Locals:         0       0       0
  9972 ;;      Temps:          1       0       0
  9973 ;;      Totals:         1       0       0
  9974 ;;Total ram usage:        1 bytes
  9975 ;; Hardware stack levels used: 1
  9976 ;; Hardware stack levels required when called: 2
  9977 ;; This function calls:
  9978 ;;		Nothing
  9979 ;; This function is called by:
  9980 ;;		_LcInit
  9981 ;;		_Sinit
  9982 ;;		_TeInit
  9983 ;;		_Minit
  9984 ;;		_initAltaveu
  9985 ;;		_GLCDInit
  9986 ;;		_initHora
  9987 ;;		_initSIO
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           	psect	text87
  9992  001A06                     __ptext87:
  9993                           	callstack 0
  9994  001A06                     _TiGetTimer:
  9995                           	callstack 27
  9996                           
  9997                           ;TiTTimer.c: 74:     counter=0;
  9998                           
  9999                           ;incstack = 0
 10000  001A06  6A32               	clrf	_counter^0,c
 10001                           
 10002                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10003  001A08  D005               	goto	l4319
 10004  001A0A                     l4311:
 10005                           
 10006                           ;TiTTimer.c: 76:         counter++;
 10007  001A0A  2A32               	incf	_counter^0,f,c
 10008                           
 10009                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
 10010  001A0C  0E08               	movlw	8
 10011  001A0E  1832               	xorwf	_counter^0,w,c
 10012  001A10  E101               	bnz	l4319
 10013  001A12  0CFF               	retlw	255
 10014  001A14                     l4319:
 10015                           
 10016                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
 10017  001A14  D807               	call	PL12	;call to abstracted procedure
 10018  001A16  04DE               	decf	postinc2,w,c
 10019  001A18  E0F8               	bz	l4311
 10020                           
 10021                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
 10022  001A1A  D804               	call	PL12	;call to abstracted procedure
 10023  001A1C  0E01               	movlw	1
 10024  001A1E  6EDF               	movwf	indf2,c
 10025                           
 10026                           ;TiTTimer.c: 80:     return (counter);
 10027  001A20  5032               	movf	_counter^0,w,c
 10028  001A22  0012               	return		;funcret
 10029  001A24                     __end_of_TiGetTimer:
 10030                           	callstack 0
 10031  001A24                     PL12:
 10032                           	callstack 28
 10033  001A24  5032               	movf	_counter^0,w,c
 10034  001A26  0D03               	mullw	3
 10035  001A28  50F3               	movf	243,w,c
 10036  001A2A  0F82               	addlw	low (_s_Timers+2)
 10037  001A2C  6ED9               	movwf	fsr2l,c
 10038  001A2E  6ADA               	clrf	fsr2h,c
 10039  001A30  0012               	return	
 10040  001A32                     __end_ofPL12:
 10041                           	callstack 0
 10042                           
 10043 ;; *************** function _CtoA *****************
 10044 ;; Defined at:
 10045 ;;		line 22 in file "CtoA.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;		None
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;		None
 10050 ;; Return value:  Size  Location     Type
 10051 ;;                  1    wreg      void 
 10052 ;; Registers used:
 10053 ;;		wreg, status,2, status,0
 10054 ;; Tracked objects:
 10055 ;;		On entry : 0/1
 10056 ;;		On exit  : 0/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMRAM   BANK0   BANK1
 10059 ;;      Params:         0       0       0
 10060 ;;      Locals:         0       0       0
 10061 ;;      Temps:          0       0       0
 10062 ;;      Totals:         0       0       0
 10063 ;;Total ram usage:        0 bytes
 10064 ;; Hardware stack levels used: 1
 10065 ;; Hardware stack levels required when called: 2
 10066 ;; This function calls:
 10067 ;;		Nothing
 10068 ;; This function is called by:
 10069 ;;		_main
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           	psect	text88
 10074  001AF0                     __ptext88:
 10075                           	callstack 0
 10076  001AF0                     _CtoA:
 10077                           	callstack 28
 10078                           
 10079                           ;CtoA.c: 23:     if (convertir != 250) {
 10080                           
 10081                           ;incstack = 0
 10082  001AF0  0EFA               	movlw	250
 10083  001AF2  1845               	xorwf	_convertir^0,w,c
 10084  001AF4  B4D8               	btfsc	status,2,c
 10085  001AF6  0012               	return	
 10086                           
 10087                           ;CtoA.c: 24:         if (convertir != 0){
 10088  001AF8  5045               	movf	_convertir^0,w,c
 10089  001AFA  E009               	bz	l3513
 10090                           
 10091                           ;CtoA.c: 25:             stringScore[1]++;
 10092  001AFC  2A5C               	incf	(_stringScore+1)^0,f,c
 10093                           
 10094                           ;CtoA.c: 26:             if (stringScore[1] == 58) {
 10095  001AFE  0E3A               	movlw	58
 10096  001B00  185C               	xorwf	(_stringScore+1)^0,w,c
 10097  001B02  E103               	bnz	l3511
 10098                           
 10099                           ;CtoA.c: 27:                 stringScore[1] = '0';
 10100  001B04  0E30               	movlw	48
 10101  001B06  6E5C               	movwf	(_stringScore+1)^0,c
 10102                           
 10103                           ;CtoA.c: 28:                 stringScore[0]++;
 10104  001B08  2A5B               	incf	_stringScore^0,f,c
 10105  001B0A                     l3511:
 10106                           
 10107                           ;CtoA.c: 30:             convertir--;
 10108  001B0A  0645               	decf	_convertir^0,f,c
 10109                           
 10110                           ;CtoA.c: 31:         } else {
 10111  001B0C  0012               	return	
 10112  001B0E                     l3513:
 10113                           
 10114                           ;CtoA.c: 32:             convertir = 250;
 10115  001B0E  0EFA               	movlw	250
 10116  001B10  6E45               	movwf	_convertir^0,c
 10117  001B12  0CFA               	retlw	250	;funcret
 10118  001B14                     __end_of_CtoA:
 10119                           	callstack 0
 10120                           
 10121 ;; *************** function _high_rsi *****************
 10122 ;; Defined at:
 10123 ;;		line 22 in file "main.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;		None
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;		None
 10128 ;; Return value:  Size  Location     Type
 10129 ;;                  1    wreg      void 
 10130 ;; Registers used:
 10131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMRAM   BANK0   BANK1
 10137 ;;      Params:         0       0       0
 10138 ;;      Locals:         0       0       0
 10139 ;;      Temps:          4       0       0
 10140 ;;      Totals:         4       0       0
 10141 ;;Total ram usage:        4 bytes
 10142 ;; Hardware stack levels used: 1
 10143 ;; Hardware stack levels required when called: 1
 10144 ;; This function calls:
 10145 ;;		__TiRSITimer
 10146 ;; This function is called by:
 10147 ;;		Interrupt level 2
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151                           	psect	intcode
 10152  000008                     __pintcode:
 10153                           	callstack 0
 10154  000008                     _high_rsi:
 10155                           	callstack 24
 10156                           
 10157                           ;incstack = 0
 10158  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10159  00000A  CFD9 F05F          	movff	fsr2l,??_high_rsi
 10160  00000E  CFDA F060          	movff	fsr2h,??_high_rsi+1
 10161  000012  CFF3 F061          	movff	prodl,??_high_rsi+2
 10162  000016  CFF4 F062          	movff	prodh,??_high_rsi+3
 10163  00001A  EC33  F00C         	call	__TiRSITimer	;wreg free
 10164  00001E  C062  FFF4         	movff	??_high_rsi+3,prodh
 10165  000022  C061  FFF3         	movff	??_high_rsi+2,prodl
 10166  000026  C060  FFDA         	movff	??_high_rsi+1,fsr2h
 10167  00002A  C05F  FFD9         	movff	??_high_rsi,fsr2l
 10168  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10169  000030  0011               	retfie		f
 10170  000032                     __end_of_high_rsi:
 10171                           	callstack 0
 10172                           
 10173 ;; *************** function __TiRSITimer *****************
 10174 ;; Defined at:
 10175 ;;		line 37 in file "TiTTimer.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;		None
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;		None
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      void 
 10182 ;; Registers used:
 10183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMRAM   BANK0   BANK1
 10189 ;;      Params:         0       0       0
 10190 ;;      Locals:         0       0       0
 10191 ;;      Temps:          1       0       0
 10192 ;;      Totals:         1       0       0
 10193 ;;Total ram usage:        1 bytes
 10194 ;; Hardware stack levels used: 1
 10195 ;; This function calls:
 10196 ;;		Nothing
 10197 ;; This function is called by:
 10198 ;;		_high_rsi
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           	psect	text90
 10203  001866                     __ptext90:
 10204                           	callstack 0
 10205  001866                     __TiRSITimer:
 10206                           	callstack 0
 10207                           
 10208                           ;TiTTimer.c: 39:     TMR0H = 223;
 10209                           
 10210                           ;incstack = 0
 10211                           
 10212                           ;TiTTimer.c: 40:     TMR0L = 148;
 10213  001866  D81E               	call	PL48	;call to abstracted procedure
 10214                           
 10215                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
 10216  001868  94F2               	bcf	242,2,c	;volatile
 10217                           
 10218                           ;TiTTimer.c: 42:     h_Tics++;
 10219  00186A  4A0B               	infsnz	_h_Tics^0,f,c
 10220  00186C  2A0C               	incf	(_h_Tics+1)^0,f,c
 10221                           
 10222                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
 10223  00186E  0E48               	movlw	72
 10224  001870  5C0B               	subwf	_h_Tics^0,w,c
 10225  001872  0EEE               	movlw	238
 10226  001874  580C               	subwfb	(_h_Tics+1)^0,w,c
 10227  001876  A0D8               	btfss	status,0,c
 10228  001878  0012               	return	
 10229                           
 10230                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
 10231  00187A  6A32               	clrf	_counter^0,c
 10232  00187C                     i2l4501:
 10233  00187C  0E07               	movlw	7
 10234  00187E  6432               	cpfsgt	_counter^0,c
 10235  001880  D001               	goto	i2l4505
 10236  001882  D00D               	goto	i2l376
 10237  001884                     i2l4505:
 10238                           
 10239                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
 10240  001884  EC12  F00D         	call	PL12	;call to abstracted procedure
 10241  001888  04DE               	decf	postinc2,w,c
 10242  00188A  E107               	bnz	i2l4509
 10243                           
 10244                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
 10245  00188C  5032               	movf	_counter^0,w,c
 10246  00188E  ECED  F00D         	call	PL26	;call to abstracted procedure
 10247  001892  500B               	movf	_h_Tics^0,w,c
 10248  001894  5EDE               	subwf	postinc2,f,c
 10249  001896  500C               	movf	(_h_Tics+1)^0,w,c
 10250  001898  5ADD               	subwfb	postdec2,f,c
 10251  00189A                     i2l4509:
 10252                           
 10253                           ;TiTTimer.c: 50:         }
 10254  00189A  2A32               	incf	_counter^0,f,c
 10255  00189C  D7EF               	goto	i2l4501
 10256  00189E                     i2l376:
 10257                           
 10258                           ;TiTTimer.c: 51:         h_Tics=0;
 10259  00189E  6A0B               	clrf	_h_Tics^0,c
 10260  0018A0  6A0C               	clrf	(_h_Tics+1)^0,c
 10261  0018A2  0012               	return		;funcret
 10262  0018A4                     __end_of__TiRSITimer:
 10263                           	callstack 0
 10264  0018A4                     PL48:
 10265                           	callstack 28
 10266  0018A4  0EDF               	movlw	223
 10267  0018A6  6ED7               	movwf	215,c	;volatile
 10268  0018A8  0E94               	movlw	148
 10269  0018AA  6ED6               	movwf	214,c	;volatile
 10270  0018AC  0C94               	retlw	148
 10271  0018AE                     __end_ofPL48:
 10272                           	callstack 0
 10273                           
 10274                           	psect	rparam
 10275  0000                     
 10276                           	psect	temp
 10277  00007A                     btemp:
 10278                           	callstack 0
 10279  00007A                     	ds	1
 10280  0000                     int$flags	set	btemp
 10281  0000                     wtemp8	set	btemp+1
 10282  0000                     ttemp5	set	btemp+1
 10283  0000                     ttemp6	set	btemp+4
 10284  0000                     ttemp7	set	btemp+8
 10285                           
 10286                           	psect	idloc
 10287                           
 10288                           ;Config register IDLOC0 @ 0x200000
 10289                           ;	unspecified, using default values
 10290  200000                     	org	2097152
 10291  200000  FF                 	db	255
 10292                           
 10293                           ;Config register IDLOC1 @ 0x200001
 10294                           ;	unspecified, using default values
 10295  200001                     	org	2097153
 10296  200001  FF                 	db	255
 10297                           
 10298                           ;Config register IDLOC2 @ 0x200002
 10299                           ;	unspecified, using default values
 10300  200002                     	org	2097154
 10301  200002  FF                 	db	255
 10302                           
 10303                           ;Config register IDLOC3 @ 0x200003
 10304                           ;	unspecified, using default values
 10305  200003                     	org	2097155
 10306  200003  FF                 	db	255
 10307                           
 10308                           ;Config register IDLOC4 @ 0x200004
 10309                           ;	unspecified, using default values
 10310  200004                     	org	2097156
 10311  200004  FF                 	db	255
 10312                           
 10313                           ;Config register IDLOC5 @ 0x200005
 10314                           ;	unspecified, using default values
 10315  200005                     	org	2097157
 10316  200005  FF                 	db	255
 10317                           
 10318                           ;Config register IDLOC6 @ 0x200006
 10319                           ;	unspecified, using default values
 10320  200006                     	org	2097158
 10321  200006  FF                 	db	255
 10322                           
 10323                           ;Config register IDLOC7 @ 0x200007
 10324                           ;	unspecified, using default values
 10325  200007                     	org	2097159
 10326  200007  FF                 	db	255
 10327                           
 10328                           	psect	config
 10329                           
 10330                           ; Padding undefined space
 10331  300000                     	org	3145728
 10332  300000  FF                 	db	255
 10333                           
 10334                           ;Config register CONFIG1H @ 0x300001
 10335                           ;	Oscillator
 10336                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 10337                           ;	Fail-Safe Clock Monitor Enable bit
 10338                           ;	FCMEN = 0x0, unprogrammed default
 10339                           ;	Internal/External Oscillator Switchover bit
 10340                           ;	IESO = 0x0, unprogrammed default
 10341  300001                     	org	3145729
 10342  300001  06                 	db	6
 10343                           
 10344                           ;Config register CONFIG2L @ 0x300002
 10345                           ;	unspecified, using default values
 10346                           ;	Power-up Timer Enable bit
 10347                           ;	PWRT = 0x1, unprogrammed default
 10348                           ;	Brown-out Reset Enable bits
 10349                           ;	BOR = 0x3, unprogrammed default
 10350                           ;	Brown-out Reset Voltage bits
 10351                           ;	BORV = 0x3, unprogrammed default
 10352  300002                     	org	3145730
 10353  300002  1F                 	db	31
 10354                           
 10355                           ;Config register CONFIG2H @ 0x300003
 10356                           ;	Watchdog Timer Enable bit
 10357                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10358                           ;	Watchdog Timer Postscale Select bits
 10359                           ;	WDTPS = 0xF, unprogrammed default
 10360  300003                     	org	3145731
 10361  300003  1E                 	db	30
 10362                           
 10363                           ; Padding undefined space
 10364  300004                     	org	3145732
 10365  300004  FF                 	db	255
 10366                           
 10367                           ;Config register CONFIG3H @ 0x300005
 10368                           ;	CCP2 MUX bit
 10369                           ;	CCP2MX = 0x1, unprogrammed default
 10370                           ;	PORTB A/D Enable bit
 10371                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10372                           ;	Low-Power Timer1 Oscillator Enable bit
 10373                           ;	LPT1OSC = 0x0, unprogrammed default
 10374                           ;	MCLR Pin Enable bit
 10375                           ;	MCLRE = 0x1, unprogrammed default
 10376  300005                     	org	3145733
 10377  300005  81                 	db	129
 10378                           
 10379                           ;Config register CONFIG4L @ 0x300006
 10380                           ;	Stack Full/Underflow Reset Enable bit
 10381                           ;	STVREN = 0x1, unprogrammed default
 10382                           ;	Single-Supply ICSP Enable bit
 10383                           ;	LVP = OFF, Single-Supply ICSP disabled
 10384                           ;	Boot Block Size Select bits
 10385                           ;	BBSIZ = 0x0, unprogrammed default
 10386                           ;	Extended Instruction Set Enable bit
 10387                           ;	XINST = 0x0, unprogrammed default
 10388                           ;	Background Debugger Enable bit
 10389                           ;	DEBUG = 0x1, unprogrammed default
 10390  300006                     	org	3145734
 10391  300006  81                 	db	129
 10392                           
 10393                           ; Padding undefined space
 10394  300007                     	org	3145735
 10395  300007  FF                 	db	255
 10396                           
 10397                           ;Config register CONFIG5L @ 0x300008
 10398                           ;	unspecified, using default values
 10399                           ;	Code Protection bit
 10400                           ;	CP0 = 0x1, unprogrammed default
 10401                           ;	Code Protection bit
 10402                           ;	CP1 = 0x1, unprogrammed default
 10403  300008                     	org	3145736
 10404  300008  03                 	db	3
 10405                           
 10406                           ;Config register CONFIG5H @ 0x300009
 10407                           ;	unspecified, using default values
 10408                           ;	Boot Block Code Protection bitProtect Boot
 10409                           ;	CPB = 0x1, unprogrammed default
 10410                           ;	Data EEPROM Code Protection bit
 10411                           ;	CPD = 0x1, unprogrammed default
 10412  300009                     	org	3145737
 10413  300009  C0                 	db	192
 10414                           
 10415                           ;Config register CONFIG6L @ 0x30000A
 10416                           ;	unspecified, using default values
 10417                           ;	Write Protection bit
 10418                           ;	WRT0 = 0x1, unprogrammed default
 10419                           ;	Write Protection bit
 10420                           ;	WRT1 = 0x1, unprogrammed default
 10421  30000A                     	org	3145738
 10422  30000A  03                 	db	3
 10423                           
 10424                           ;Config register CONFIG6H @ 0x30000B
 10425                           ;	unspecified, using default values
 10426                           ;	Configuration Register Write Protection bit
 10427                           ;	WRTC = 0x1, unprogrammed default
 10428                           ;	Boot Block Write Protection bit
 10429                           ;	WRTB = 0x1, unprogrammed default
 10430                           ;	Data EEPROM Write Protection bit
 10431                           ;	WRTD = 0x1, unprogrammed default
 10432  30000B                     	org	3145739
 10433  30000B  E0                 	db	224
 10434                           
 10435                           ;Config register CONFIG7L @ 0x30000C
 10436                           ;	unspecified, using default values
 10437                           ;	Table Read Protection bit
 10438                           ;	EBTR0 = 0x1, unprogrammed default
 10439                           ;	Table Read Protection bit
 10440                           ;	EBTR1 = 0x1, unprogrammed default
 10441  30000C                     	org	3145740
 10442  30000C  03                 	db	3
 10443                           
 10444                           ;Config register CONFIG7H @ 0x30000D
 10445                           ;	unspecified, using default values
 10446                           ;	Boot Block Table Read Protection bit
 10447                           ;	EBTRB = 0x1, unprogrammed default
 10448  30000D                     	org	3145741
 10449  30000D  40                 	db	64
 10450                           tosu	equ	0xFFF
 10451                           tosh	equ	0xFFE
 10452                           tosl	equ	0xFFD
 10453                           stkptr	equ	0xFFC
 10454                           pclatu	equ	0xFFB
 10455                           pclath	equ	0xFFA
 10456                           pcl	equ	0xFF9
 10457                           tblptru	equ	0xFF8
 10458                           tblptrh	equ	0xFF7
 10459                           tblptrl	equ	0xFF6
 10460                           tablat	equ	0xFF5
 10461                           prodh	equ	0xFF4
 10462                           prodl	equ	0xFF3
 10463                           indf0	equ	0xFEF
 10464                           postinc0	equ	0xFEE
 10465                           postdec0	equ	0xFED
 10466                           preinc0	equ	0xFEC
 10467                           plusw0	equ	0xFEB
 10468                           fsr0h	equ	0xFEA
 10469                           fsr0l	equ	0xFE9
 10470                           wreg	equ	0xFE8
 10471                           indf1	equ	0xFE7
 10472                           postinc1	equ	0xFE6
 10473                           postdec1	equ	0xFE5
 10474                           preinc1	equ	0xFE4
 10475                           plusw1	equ	0xFE3
 10476                           fsr1h	equ	0xFE2
 10477                           fsr1l	equ	0xFE1
 10478                           bsr	equ	0xFE0
 10479                           indf2	equ	0xFDF
 10480                           postinc2	equ	0xFDE
 10481                           postdec2	equ	0xFDD
 10482                           preinc2	equ	0xFDC
 10483                           plusw2	equ	0xFDB
 10484                           fsr2h	equ	0xFDA
 10485                           fsr2l	equ	0xFD9
 10486                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    145
    Data        49
    BSS         291
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     25     121
    BANK0           128      0      63
    BANK1           256      0     184

Pointer List with Targets:

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 3
		 -> stringScore(COMRAM[3]), 

    userPtr	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), NULL(NULL[0]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> hora(COMRAM[6]), 

    HActualitzaHora@nova	PTR unsigned char  size(1) Largest target is 4
		 -> horaTmp(COMRAM[4]), 

    compareStrings@b	PTR const unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    compareStrings@a	PTR const unsigned char  size(1) Largest target is 9
		 -> tmpUsername(BANK0[9]), 

    sp__getArrayShowUsers	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 184
		 -> usuaris.username(BANK1[9]), usuaris(BANK1[184]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 184
		 -> stringScore(COMRAM[3]), STR_10(CODE[8]), STR_9(CODE[12]), STR_8(CODE[8]), 
		 -> hora(COMRAM[6]), menuList(CODE[145]), usuaris.username(BANK1[9]), usuaris(BANK1[184]), 
		 -> STR_7(CODE[16]), STR_6(CODE[13]), STR_5(CODE[9]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[11]), STR_1(CODE[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _motorSIO->_LcPutChar
    _motorJoc->_LcGotoXY
    _motorHora->_TiGetTics
    _motorAltaveu->_TiGetTics
    _menu->_LcPutChar
    _LcScroll->_CantaIR
    _initSIO->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _UmotorUsers->_compareStrings
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _Minit->_TiGetTimer
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _JoystickMotor->_MNouJoystick
    _GLCDMotor->_LcPutChar
    _LcPutChar->_LcGotoXY
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcNewString->_getArrayShowUsers
    _LcClear->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _WaitForBusy->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _Espera->_TiGetTics
    _GLCDInit->_TiGetTimer

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   35423
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                       _JoystickInit
                      _JoystickMotor
                             _LcInit
                              _LcLCD
                              _Minit
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                              _Uinit
                        _UmotorUsers
             _escriure2usuarisStruct
                     _escriureEEPROM
                        _initAltaveu
                           _initHora
                            _initSIO
                        _init_eusart
                         _init_ports
                               _menu
                       _motorAltaveu
                          _motorHora
                           _motorJoc
                           _motorSIO
 ---------------------------------------------------------------------------------
 (1) _motorSIO                                             2     2      0    8848
                                             20 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                        _CToAobtenir
                           _HGetTime
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
                          _CToAReset
 ---------------------------------------------------------------------------------
 (3) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorJoc                                             2     2      0    3612
                                             19 COMRAM     2     2      0
                     _HClearNouSegon
                           _HGetTime
                            _HJugant
                          _HNouSegon
                          _HnoJugant
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIONovaTecla
                       _SIOStartGame
                     _SIOcheckKrebut
                         _SIOendGame
                  _conversorJoystick
 ---------------------------------------------------------------------------------
 (2) _conversorJoystick                                    1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIOendGame                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOcheckKrebut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaTecla                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HnoJugant                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJugant                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                        _playAltaveu
 ---------------------------------------------------------------------------------
 (2) _playAltaveu                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorAltaveu                                         3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _menu                                                 5     5      0    9691
                                             20 COMRAM     5     5      0
                     _GLCDMostraMenu
                    _HActualitzaHora
                            _JJuguem
                           _JendGame
                      _JnovaDireccio
                         _JnovaTecla
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                           _LcScroll
                          _NoFerMenu
             _SIOHaAcabatPuntuacions
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
                          _URegister
                       _UcheckExists
               _UcheckExistsGetError
            _UcheckExistsNotFinished
                         _UenviaChar
                          _UenviaPas
                     _UgetNumUsuaris
                       _UgetUserName
                 _UshowUsersCalculat
                 _calculateShowUsers
                    _checkHoraAcabat
                  _getArrayShowUsers
 ---------------------------------------------------------------------------------
 (2) _getArrayShowUsers                                    3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _checkHoraAcabat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculateShowUsers                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UshowUsersCalculat                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UenviaPas                                            2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UenviaChar                                           2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsNotFinished                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExistsGetError                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UcheckExists                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _URegister                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOHaAcabatPuntuacions                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JnovaDireccio                                        1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _JendGame                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HActualitzaHora                                      1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _escriureEEPROM                                       1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _escriure2usuarisStruct                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UmotorUsers                                          2     2      0     460
                                             10 COMRAM     2     2      0
                     _compareStrings
                 _escriureCharEEPROM
 ---------------------------------------------------------------------------------
 (2) _escriureCharEEPROM                                   2     1      1     196
                                              5 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _compareStrings                                       5     2      3     264
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _Uinit                                                5     5      0     135
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     111
                                             12 COMRAM     3     3      0
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      89
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    2297
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1190
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JoystickMotor                                        2     2      0      15
                                              6 COMRAM     2     2      0
                       _MNouJoystick
 ---------------------------------------------------------------------------------
 (2) _MNouJoystick                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _JoystickInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0    8811
                                             20 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    2297
                                             19 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    1542
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                       _UgetUserName (ARG)
                  _getArrayShowUsers (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2940
                            _CantaIR
                             _Espera
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             6     5      1    1965
                                             13 COMRAM     6     5      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (7) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _LcGotoXY
         _CantaIR
         _WaitForBusy
           _TiGetTics
           _TiResetTics
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _UgetUserName (ARG)
       _getArrayShowUsers (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _TiGetTics
     _TiResetTics
   _JoystickInit
   _JoystickMotor
     _MNouJoystick
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _Minit
     _TiGetTimer
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _Uinit
   _UmotorUsers
     _compareStrings
     _escriureCharEEPROM
   _escriure2usuarisStruct
   _escriureEEPROM
   _initAltaveu
     _TiGetTimer
   _initHora
     _TiGetTimer
   _initSIO
     _TiGetTimer
   _init_eusart
   _init_ports
   _menu
     _GLCDMostraMenu
     _HActualitzaHora
     _JJuguem
     _JendGame
     _JnovaDireccio
     _JnovaTecla
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SIOHaAcabatPuntuacions
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _URegister
     _UcheckExists
     _UcheckExistsGetError
     _UcheckExistsNotFinished
     _UenviaChar
     _UenviaPas
     _UgetNumUsuaris
     _UgetUserName
     _UshowUsersCalculat
     _calculateShowUsers
     _checkHoraAcabat
     _getArrayShowUsers
   _motorAltaveu
     _TiGetTics
     _TiResetTics
   _motorHora
     _TiGetTics
     _TiResetTics
     _playAltaveu
   _motorJoc
     _HClearNouSegon
     _HGetTime
     _HJugant
     _HNouSegon
     _HnoJugant
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIONovaTecla
     _SIOStartGame
     _SIOcheckKrebut
     _SIOendGame
     _conversorJoystick
   _motorSIO
     _CToAConverteix
       _CToAReset
     _CToAHaAcabat
     _CToAobtenir
     _HGetTime
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _TiGetTics
     _TiResetTics
     _UgetUserName

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      B8       6       71.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      3F       4       49.2%
BITCOMRAM           7E      0       3       0        2.4%
COMRAM              7E     19      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     170       7        0.0%
DATA                 0      0     170       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri May 06 12:57:25 2022

               TiResetTics@Handle 0063                  _loginNOTRegister 03C7  
                               _i 0028                                 _j 0027  
                              PL2 0B14                                PL4 0B22  
                              PL6 0884                                PL8 0B2A  
                              l57 19E0                  UgetUserName@quin 0065  
       ??_UcheckExistsNotFinished 0063                               PL10 0B34  
                             PL20 0EBA                               PL12 1A24  
                             PL30 1986                               PL22 1454  
                             PL14 0E9E                               PL40 1812  
                             PL32 1804                               PL24 0D0A  
                             PL16 14FA                               PL50 1608  
                             PL42 0ECC                               PL34 089A  
                             PL26 1BDA                               PL18 1198  
                             PL60 0B3E                               PL52 1474  
                             PL44 18D8                               PL36 15FA  
                             PL28 0890                               PL70 185E  
                             PL62 18E2                               PL54 1B2C  
                             PL46 0D16                               PL38 1466  
                             PL72 08A0                               PL64 1994  
                             PL56 1334                               PL48 18A4  
                             PL74 08A8                               PL66 1078  
                             PL58 17C4                               PL68 175E  
          __end_of_compareStrings 18D8                               l503 0348  
                             l710 13EE                               l720 1412  
                             l704 1AE8                               l713 13FC  
                             l723 1428                               l725 142E  
                             l717 140A                               l718 140C  
                             l921 0970                               l762 0D4A  
                             l755 0D22                               l756 0D34  
                             l828 1480                               l941 0A86  
                             l909 0908                               l765 0D6E  
                             l758 0D40                               l598 06DA  
                             l939 0A60                               l795 1A34  
                             l981 11E8                               l797 1A4A  
                             l990 123E                               l986 126A  
                             l978 11AC                               l987 1202  
                             l979 11C6                               l988 121C  
                             u230 15A8                               u250 15BE  
                             u308 15EC                               u270 15D2  
                             u248 15AA                               u290 15EA  
                             u268 15C0                               u288 15D4  
                             _pos 002D                               _tmp 0031  
                ??_CantaPartBaixa 0063                               prod 000FF3  
                             wreg 000FE8       __size_of_calculateShowUsers 0004  
                     _ultimaTecla 0051                __size_of_GLCDMotor 0264  
                            l1130 1354                              l2121 1CC0  
                            l1250 0C76                              l1242 0BEA  
                            l1235 0BC4                              l2213 1C90  
                            l2151 1C9C                              l3009 1254  
                            l3019 1258                              l2309 1C6C  
                            l2191 1C84                              l2255 1C78  
                            l5001 037A                              l2281 1ABA  
                            l5011 0398                              l2275 1AB2  
                            l5021 03BC                              l2293 1ACA  
                            l3511 1B0A                              l4311 1A0A  
                            l5103 0476                              l2287 1AC2  
                            l3513 1B0E                              l5025 03C4  
                            l5009 0392                              l4411 18B0  
                            l5131 0498                              l5051 03F8  
                            l5019 03B6                              l5213 056E  
                            l5205 0548                              l5109 047C  
                            l5061 041C                              l5053 03FE  
                            l5037 03D4                              l4319 1A14  
                            l4247 18FE                              l4351 1844  
                            l5311 0650                              l5119 0480  
                            l5063 0422                              l4273 1B3E  
                            l4353 184A                              l4521 1A70  
                            l2665 144C                              l4417 18C4  
                            l5401 07A8                              l5321 066A  
                            l5217 0586                              l4603 0F80  
                            l5147 04B6                              l5139 04A8  
                            l5067 042A                              l4269 1924  
                            l4445 129A                              l4621 0FAC  
                            l4525 1A78                              l5341 0698  
                            l5237 05BA                              l5173 04FA  
                            l4279 19E4                              l4359 1858  
                            l5511 0DB0                              l5503 0D9E  
                            l5335 0686                              l5271 05FC  
                            l5255 05DE                              l5159 04D8  
                            l5079 043A                              l5415 07C2  
                            l5431 1496                              l4641 0FE0  
                            l4617 0FA2                              l4609 0F92  
                            l4561 0F14                              l4545 0EEA  
                            l4537 0ED6                              l5409 07BA  
                            l5329 0678                              l5097 0462  
                            l4801 0B8C                              l5611 08E6  
                            l2971 11FE                              l4563 0F18  
                            l5523 0DD0                              l5507 0DA2  
                            l5363 06F4                              l5355 06DC  
                            l5347 06B4                              l5283 061A  
                            l5187 051C                              l5451 14C8  
                            l5443 14AE                              l5435 14A2  
                            l4731 1368                              l4715 1340  
                            l5605 08D8                              l2957 11DC  
                            l2949 11C2                              l4653 1004  
                            l4629 0FC6                              l4573 0F38  
                            l5541 0E08                              l5373 0754  
                            l5357 06E2                              l5189 0522  
                            l5429 1490                              l4805 0B96  
                            l4591 0F66                              l4583 0F5A  
                            l5551 0E1E                              l5527 0DDA  
                            l5391 0790                              l5375 075A  
                            l5367 0710                              l5287 061E  
                            l5463 14E0                              l4751 13A8  
                            l4815 0BAC                              l4807 0B9C  
                            l5625 0914                              l4673 1032  
                            l5561 0E30                              l5529 0DE0  
                            l5481 0D3A                              l5385 0780  
                            l4921 154C                              l4737 1378  
                            l4841 0BFA                              l5715 0A10  
                            l5619 08FC                              l2995 1232  
                            l2987 1218                              l4667 1024  
                            l4659 100E                              l4595 0F6A  
                            l5571 0E5A                              l5563 0E34  
                            l5379 0774                              l5299 0630  
                            l4915 1540                              l4739 137E  
                            l4851 0C28                              l4843 0C00  
                            l5709 0A00                              l5653 0960  
                            l4677 103A                              l5821 110C  
                            l5813 10FA                              l5581 0E64  
                            l5557 0E28                              l5389 078A  
                            l4861 0C5E                              l5901 16D0  
                            l5751 0A80                              l5743 0A68  
                            l5647 094E                              l5639 0942  
                            l5831 1126                              l5807 10EC  
                            l5495 0D72                              l5399 07A2  
                            l4927 1558                              l4759 13BE  
                            l4767 13CC                              l4871 0C88  
                            l4775 0B4A                              l5737 0A54  
                            l5729 0A3E                              l4697 104A  
                            l5841 1144                              l5497 0D78  
                            l4937 1572                              l4945 1580  
                            l4793 0B7A                              l4785 0B66  
                            l5763 0A9A                              l5683 0998  
                            l5595 08B2                              l5851 115A  
                            l5835 1130                              l5827 111A  
                            l5819 1108                              l5587 0E72  
                            l4963 030A                              l4891 0CCA  
                            l5773 0ABC                              l5693 09B8  
                            l5861 116A                              l4981 033C  
                            l4973 0328                              l4957 02F8  
                            l4949 1584                              l5759 0A92  
                            l5855 1164                              l5847 1152  
                            l5791 10C6                              l4879 0CA8  
                            l5769 0AAE                              l5689 09AA  
                            l5793 10CA                              l4993 035E  
                            l5699 09D0                              l5779 0AC8  
                            l5787 10BA                              l4979 0336  
                            l4899 1514                              l5797 10D6  
                            l5799 10DC                              STR_1 02DF  
                            STR_2 02BB                              STR_3 02EE  
                            STR_4 02E7                              STR_5 02C6  
                            STR_6 02A2                              STR_7 0292  
                            STR_8 02D7                              STR_9 02AF  
                            u3200 1774                              _LATD 000F8C  
                            u3220 178A                              u3300 1724  
                            u4110 0BCC                              u3240 179E  
                            u3320 1738                              u4120 0BD0  
                            u3218 1776                              u3260 17B6  
                            u3340 1750                              u3500 132A  
                            u3238 178C                              u3318 1726  
                            u4150 0C3E                              u3280 170E  
                            u3520 17E0                              u3258 17A0  
                            u3338 173A                              u3530 17F6  
                            u3278 17B8                              u3358 1752  
                            u5150 0D44                              u3527 17DE  
                            u4520 0448                              u3537 17F4  
                            u3298 1710                              u3490 18C8  
                            u5170 0D6A                              u4450 03E2  
                            u5420 094A                              u3740 0F8C  
                            u3660 0F2C                              u5350 08E2  
                            u5450 0968                              u3860 1014  
                            u3780 0FB8                              u3870 102A  
                            u5710 108C                              u4840 063C  
                            u4850 0642                              u5718 108E  
                            _CtoA 1AF0                   ??_SsetNovaTecla 0063  
          __end_of_SIOcheckKrebut 1C70                              _cap1 03BF  
                            _Rows 003D                              _cap2 03BE  
                            _main 168A                              _hora 0055  
                            _menu 02F6                              _nota 0025  
           getArrayShowUsers@quin 0065                   __end_of_HJugant 1D5A  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 007A                   __end_of_JJuguem 1CFC  
                            prodh 000FF4                              prodl 000FF3  
                 __end_of_LcClear 1B2C                              start 0032  
                 __end_of_CantaIR 1BCA                      ?_initAltaveu 005E  
                   LcInit@columns 006E                      ___param_bank 000000  
                     _stringScore 005B                  __end_of_GLCDInit 1D54  
        __size_of_SIONovaDireccio 0008                    _HClearNouSegon 1D80  
                           ?_CtoA 005E                __size_of_CToAReset 0008  
                     Espera@Timer 006D                             ?_main 005E  
         __size_of_escriureEEPROM 0028                             ?_menu 005E  
                           _EEADR 000FA9                             STR_10 02CF  
                   ??_TiInitTimer 0063                             _T0CON 000FD5  
                 ?_compareStrings 0063                             i2l376 189E  
                           _RCREG 000FAE                             _RCSTA 000FAB  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                             _LcLCD 17CE  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                    ?_init_eusart 005E                             _TXREG 000FAD  
                           _SMSon 1D5A                             _TXSTA 000FAC  
                     _MNovaLletra 1D34                             _Minit 1D3C  
                __end_of_HGetTime 1D80                             _Sinit 1D2C  
                           _Timer 003A                             _Uinit 13E6  
                 __end_of_initSIO 1D04                             _s_ptr 000D  
                           _nou_s 03C9             __end_of_JoystickMotor 1280  
                 _HActualitzaHora 199E       __size_of_escriureCharEEPROM 0024  
                  __pbitbssCOMRAM 03B8                             tablat 000FF5  
                     _LcNewString 1CAC                     ??_TiResetTics 0063  
                 ?_SIOcheckKrebut 005E                _UshowUsersCalculat 1C88  
                           ttemp5 007B                             ttemp6 007E  
                           ttemp7 0082                             status 000FD8  
                ?_checkHoraAcabat 005E                             wtemp8 007B  
   __size_of_UcheckExistsGetError 0004                __size_of_HNouSegon 000C  
                __end_of_LcGotoXY 1A06              CToAConverteix@numero 0063  
                __end_of_LcLliure 1CC4                     ??__TiRSITimer 005E  
                __end_of_LcScroll 1D6C                        _TiGetTimer 1A06  
         EscriuPrimeraOrdre@ordre 0064                      __end_of_CtoA 1B14  
                __end_of_JendGame 1DAC                       ?_SIOendGame 005E  
                 __initialization 1612               ?_UshowUsersCalculat 005E  
              __size_of_CantaData 0020                      __end_of_main 1702  
          __end_of_HClearNouSegon 1D84                      __end_of_menu 0884  
         ?_SIOHaAcabatPuntuacions 005E             __size_of_MNouJoystick 0008  
                    ?_playAltaveu 005E                 __end_of_GLCDMotor 0B14  
                __end_of_TeTeclat 1198                     _indexNextUser 002A  
                          ??_CtoA 0063                            ??_main 0077  
                          ??_menu 0072                __size_of_LcPutChar 0040  
                   __activetblptr 000002                     _ultimaTeclaAD 0017  
          __size_of_JnovaDireccio 0008                  GLCDMotor@length1 0019  
                GLCDMotor@length2 0018                        _JnovaTecla 1CE4  
                          ?_LcLCD 005E                            ?_SMSon 005E  
                    ?_CToAobtenir 0063                            ?_Minit 005E  
            ??_UshowUsersCalculat 0063                            ?_Sinit 005E  
                          ?_Uinit 005E                __size_of_NoFerMenu 0004  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0               __end_of_TiInitTimer 1A82  
                          _ADRESH 000FC4                            _EEDATA 000FA8  
                       ??_HJugant 0063                            _EECON2 000FA7  
              __size_of_URegister 0004                __size_of_HnoJugant 0004  
                       ??_JJuguem 0063                __size_of_SiFerMenu 0004  
        ??_escriure2usuarisStruct 0063                         ??_LcClear 0071  
                       ??_CantaIR 0065                            i2l4501 187C  
                          i2l4505 1884                            i2l4509 189A  
                  LcGotoXY@Fisics 006C                    LcGotoXY@Column 0070  
                   ??_WaitForBusy 006A                __size_of_TiGetTics 0026  
                          _SPBRGH 000FB0                    _sumaPulsacions 0039  
               __end_of_CToAReset 1CCC                            _SMSoff 1D60  
              SIONovaDireccio@num 0063                            _LcInit 1280  
                    _MNouJoystick 1D44                    _UgetNumUsuaris 1D8C  
                          _SMotor 0ED4               escriureCharEEPROM@c 0064  
                          _TeInit 1D24                            _Espera 1B36  
                    _LcGotoXY$336 006E                            _Krebut 03B8  
  __end_of_SIOHaAcabatPuntuacions 1DA4                            _RowAct 003C  
             __end_of_TiResetTics 1BDA                            Uinit@i 0065  
                          Uinit@j 0066                  __end_of_high_rsi 0032  
                          _h_Tics 000B                   ?_HClearNouSegon 005E  
                   ?_CToAHaAcabat 005E                  __end_of_initHora 1D0C  
             __end_of__TiRSITimer 18A4                  __end_of_menuList 0292  
                          clear_0 1658                            clear_1 1664  
                          clear_2 1676                            _jugant 03BD  
                          _segons 0014                        _UenviaChar 1C48  
                          isa$std 000001                        UenviaPas@c 0064  
     __size_of_EscriuPrimeraOrdre 0064                 __end_of_HNouSegon 1C7C  
                       ??_initSIO 0064                      __pdataCOMRAM 0042  
          __size_of_CantaPartAlta 005C                  __end_of_motorSIO 0D0A  
              __size_of_UenviaPas 0010           __end_of_HActualitzaHora 19D2  
               ??_SIONovaDireccio 0063                  __end_of_motorJoc 13E6  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                ??_CToAConverteix 0063               __size_of_SIOendGame 0004  
               __end_of_CantaData 1986                      TeTeclat@cols 0034  
                       ?_GLCDInit 005E                     ?_UcheckExists 005E  
                      __accesstop 0080           __end_of__initialization 167C  
          __end_of_UgetNumUsuaris 1D90                 __end_of_LcPutChar 185E  
                   _JnovaDireccio 1CEC                  JnovaDireccio@dir 0063  
                   ___rparam_used 000001                     __end_of_LcLCD 1804  
                     ?_TiGetTimer 005E                     __end_of_SMSon 1D60  
               SIONovaTecla@tecla 0063                    __pcstackCOMRAM 005E  
                   __end_of_Minit 1D44               __end_of_WaitForBusy 192A  
                   __end_of_Sinit 1D34                     __end_of_Uinit 1454  
               __end_of_NoFerMenu 1DA8                         ?_HGetTime 0063  
                    __pidataBANK0 1BFC                    ??_CToAHaAcabat 0063  
            __size_of_initAltaveu 0008                 __end_of_URegister 1D9C  
               __end_of_HnoJugant 1D7C                 __end_of_SiFerMenu 1DA0  
                      __end_ofPL2 0B22                        __end_ofPL4 0B2A  
                      __end_ofPL6 0890                        __end_ofPL8 0B34  
                  _escriureEEPROM 1A32                 __end_of_TiGetTics 1AA8  
                     _TiInitTimer 1A5A                       ?_JnovaTecla 005E  
                         ??_LcLCD 0072                           ??_SMSon 0063  
                       ?_LcGotoXY 006B                         ?_LcLliure 005E  
                         ??_Minit 0064                         ?_LcScroll 005E  
                         ??_Sinit 0064                   JnovaTecla@tecla 0063  
                         ??_Uinit 0063              __size_of_init_eusart 0016  
                       ?_JendGame 005E                    ??_UcheckExists 0063  
             MNouJoystick@posicio 0063                        ??_GLCDInit 0064  
         __size_of_GLCDMostraMenu 000C                        __pbssBANK0 0080  
                      __pbssBANK1 0100   __size_of_escriure2usuarisStruct 003C  
                       ?_TeTeclat 005E                       _TiResetTics 1BCA  
                 ?_UgetNumUsuaris 005E                    ?_JnovaDireccio 005E  
                   ??_UmotorUsers 0068                     ?_JoystickInit 005E  
                         ?_SMSoff 005E                           ?_LcInit 006E  
                   _CantaPartAlta 1768                           ?_SMotor 005E  
                         ?_TeInit 005E                           ?_Espera 006A  
               __end_of_UenviaPas 1C48                       __TiRSITimer 1866  
             _indexNextUserStruct 0029                        ??_HGetTime 0065  
                   ?_UgetUserName 0063                  ??_compareStrings 0066  
          __end_of_escriureEEPROM 1A5A                           _BAUDCON 000FB8  
                     ?_UenviaChar 0063              __size_of_playAltaveu 0004  
              __size_of_motorHora 0084            __size_of_MsetNovaTecla 0008  
      __end_of_calculateShowUsers 1D8C                           LcInit@i 0070  
                ?_HActualitzaHora 0063                        ??_LcGotoXY 006C  
                    ?_MNovaLletra 005E                        ??_LcLliure 0063  
                      ??_LcScroll 0066                  ??_SIOcheckKrebut 0063  
             __size_of_TiGetTimer 001E              __size_of_CToAobtenir 0004  
                      ??_JendGame 0063                           _HJugant 1D54  
                       ?_high_rsi 005E                           _JJuguem 1CF4  
                         _LcClear 1B14                           _CantaIR 1BAE  
                    ?_LcNewString 0066                    ??_JoystickInit 0063  
                       ?_initHora 005E                        ??_TeTeclat 006A  
                     _WaitForBusy 18EC                    ?_CantaPartAlta 005E  
           __end_of_SsetNovaTecla 1D1C                   __size_of_SMSoff 0006  
                 __size_of_LcInit 00B4                           __Hparam 0000  
                 __size_of_SMotor 01A4               __size_of_JnovaTecla 0008  
                 __size_of_TeInit 0008                   __size_of_Espera 0022  
                         __Lparam 0000                      ??_SIOendGame 0063  
                       ?_motorSIO 005E                         ?_motorJoc 005E  
                  ??_UgetUserName 0065                 _getArrayShowUsers 1B92  
             __end_of_UmotorUsers 0E9E          ?_UcheckExistsNotFinished 005E  
                 ?_escriureEEPROM 005E                     ?_motorAltaveu 005E  
                    __psmallconst 0200                ?_getArrayShowUsers 0063  
          _escriure2usuarisStruct 192A                           __pcinit 1612  
    __end_of_UcheckExistsGetError 1D94                           _ferMenu 03C1  
                      _init_ports 1B58                           __ramtop 0200  
                         __ptext0 168A                           __ptext1 0B48  
                         __ptext2 1D6C                           __ptext3 1D70  
                         __ptext4 1C58                           __ptext5 1CC4  
                         __ptext6 133E                           __ptext7 1AA8  
                         __ptext8 1D74                           __ptext9 1C64  
                       _T0CONbits 000FD5                         _GLCDMotor 08B0  
                       CantaIR@IR 0065                           _initSIO 1CFC  
                         _counter 0032                           _horaTmp 003E  
          conversorJoystick@direc 0063               ??_getArrayShowUsers 0065  
                     UenviaChar@c 0064        __end_of_escriureCharEEPROM 1AF0  
                LcNewString@new_s 0066                   WaitForBusy@Busy 006A  
                     Uinit@j_1167 0067                      _do_showUsers 03C4  
                         _userPtr 0009                 GLCDMostraMenu@num 0063  
              __end_of_SIOendGame 1D78                        ??_high_rsi 005F  
            __end_of_CToAHaAcabat 1D74              end_of_initialization 167C  
                         _usuaris 0100                   ??_JnovaDireccio 0063  
                      ??_initHora 0064           __size_of_CantaPartBaixa 005C  
                   __Lmediumconst 0000                   TiGetTics@Handle 0067  
                   _MsetNovaTecla 1D1C               __size_of_UenviaChar 0010  
               _conversorJoystick 1AA8                 __end_of_motorHora 1596  
                ??_HClearNouSegon 0063                        _novaLletra 004F  
       __end_of_getArrayShowUsers 1BAE                ?_conversorJoystick 005E  
                 _usuariActualSIO 0048                        ??_motorSIO 0072  
                       _CToAReset 1CC4                        ??_motorJoc 0071  
                 TiGetTics@actual 0068                     ?_SIONovaTecla 005E  
                      GLCDMotor@j 001E                           postdec1 000FE5  
                         postdec2 000FDD                   _SIONovaDireccio 1CDC  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                    ??_motorAltaveu 006A  
        __size_of_checkHoraAcabat 000C                        _numUsuaris 002B  
            __end_of_UcheckExists 1D98                     TeTeclat@files 0033  
             ??_conversorJoystick 0063                SIOStartGame@usuari 0063  
          __size_of_JoystickMotor 00D6                     TeTeclat@state 0035  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                      ?_GLCDMotor 005E                     ?_SIOStartGame 005E  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
     __size_of_UshowUsersCalculat 000C                         _HNouSegon 1C70  
                  _GLCDMostraMenu 1CA0         __end_of_conversorJoystick 1ACC  
                 ??_CantaPartAlta 0063                    ?_MsetNovaTecla 005E  
                       _CantaData 1966                 __size_of_GLCDInit 0008  
                     _UmotorUsers 0D20                         _TXSTAbits 000FAC  
 __end_of_UcheckExistsNotFinished 1CA0                    __end_of_SMSoff 1D66  
                    ??_TiGetTimer 0063                    __end_of_LcInit 1334  
                  ??_SIONovaTecla 0063                        ?_CToAReset 005E  
                  __end_of_SMotor 1078                         _LcPutChar 181E  
                  __end_of_TeInit 1D2C                 motorAltaveu@state 0022  
                  __end_of_Espera 1B58                    GLCDMotor@state 001F  
      __end_of_EscriuPrimeraOrdre 15FA                 __size_of_HGetTime 0004  
                   __pidataCOMRAM 1B76                       ?_init_ports 005E  
                       _NoFerMenu 1DA4                         _ColumnAct 003B  
            __end_of_JoystickInit 1C38                    ??_SIOStartGame 0063  
                       _URegister 1D98                         _HnoJugant 1D78  
                    ?_TiInitTimer 005E                      ??_JnovaTecla 0063  
                       _SiFerMenu 1D9C                       __end_ofPL10 0B3E  
                     __end_ofPL20 0ECC                       __end_ofPL12 1A32  
                     __end_ofPL30 1994                       __end_ofPL22 1466  
                     __end_ofPL14 0EBA                       __end_ofPL40 181E  
                     __end_ofPL32 1812                       __end_ofPL24 0D16  
                     __end_ofPL16 1512                       __end_ofPL50 1612  
                     __end_ofPL42 0ED4                       __end_ofPL34 08A0  
                     __end_ofPL26 1BE6                       __end_ofPL18 11AA  
                     __end_ofPL60 0B48                       __end_ofPL52 147E  
                     __end_ofPL44 18E2                       __end_ofPL36 1608  
                     __end_ofPL28 089A                       __end_ofPL70 1866  
                     __end_ofPL62 18EC                       __end_ofPL54 1B36  
                     __end_ofPL46 0D20                       __end_ofPL38 1474  
                     __end_ofPL72 08A8                       __end_ofPL64 199E  
                     __end_ofPL56 133E                       __end_ofPL48 18AE  
                     __end_ofPL74 08B0                       __end_ofPL66 1082  
                     __end_ofPL58 17CE                       __end_ofPL68 1768  
             start_initialization 1612                         _TiGetTics 1A82  
          __end_of_GLCDMostraMenu 1CAC                        ?_HNouSegon 005E  
                ??_UgetNumUsuaris 0063                  UmotorUsers@state 0026  
               __size_of_LcGotoXY 0034              __end_of_UgetUserName 1C26  
              __end_of_TiGetTimer 1A24                   _do_updateScores 03C3  
                   JJuguem@usuari 0063              __size_of_MNovaLletra 0008  
               __size_of_LcLliure 000C                 __size_of_LcScroll 0006  
                   _JoystickMotor 11AA                 __size_of_JendGame 0004  
                    ?_TiResetTics 005E                        ?_CantaData 005E  
            _UcheckExistsGetError 1D90           __end_of_SIONovaDireccio 1CE4  
            __size_of_LcNewString 000C                          ??_SMSoff 0063  
                        ??_LcInit 006F                         _NovaTecla 0050  
               __size_of_TeTeclat 0116                          ??_SMotor 006A  
      __size_of_getArrayShowUsers 001C                          ??_TeInit 0064  
                    ?__TiRSITimer 005E                     ??_initAltaveu 0064  
                        ??_Espera 006C                __end_of_JnovaTecla 1CEC  
                      ?_LcPutChar 005E                         _UenviaPas 1C38  
                     __pdataBANK0 00AA                    motorHora@state 0013  
                    _menuDaltGLCD 0020                      ??_UenviaChar 0064  
                      ?_NoFerMenu 005E                       ??_GLCDMotor 0072  
                      ?_URegister 005E                        ?_HnoJugant 005E  
               ??_checkHoraAcabat 0063                     ??_init_eusart 0063  
                      ?_SiFerMenu 005E                       __pbssCOMRAM 0001  
           __size_of_CToAHaAcabat 0004                        ?_TiGetTics 0063  
                 ?_GLCDMostraMenu 005E                          ?_HJugant 005E  
                  ?_JoystickMotor 005E                   ??_MsetNovaTecla 0063  
            __end_of_motorAltaveu 14FA                          ?_JJuguem 005E  
                        ?_LcClear 005E                          ?_CantaIR 005E  
      __size_of_conversorJoystick 0024                _calculateShowUsers 1D88  
                  _CantaPartBaixa 1702          ??_SIOHaAcabatPuntuacions 0063  
           ?_UcheckExistsGetError 005E                 __size_of_high_rsi 002A  
                    ?_WaitForBusy 005E               __size_of_init_ports 001E  
              MsetNovaTecla@tecla 0063                SsetNovaTecla@tecla 0063  
              __end_of_UenviaChar 1C58           __size_of_CToAConverteix 000C  
               __size_of_initHora 0008                  ??_escriureEEPROM 0063  
           __size_of_UcheckExists 0004               ?_calculateShowUsers 005E  
                     ??_CToAReset 0063           ?_escriure2usuarisStruct 005E  
                       __pintcode 0008                     ??_playAltaveu 0063  
                      ?_UenviaPas 0063                 __size_of_motorSIO 01C2  
               __size_of_motorJoc 00A8                   CantaPartBaixa@c 0064  
                    _CToAHaAcabat 1D70               __end_of_initAltaveu 1D14  
                       _arrayZero 0042                          ?_initSIO 005E  
                     __smallconst 0200                         _convertir 0045  
                   ??_CToAobtenir 0065                    __size_of_LcLCD 0036  
                  __size_of_SMSon 0006              ??_calculateShowUsers 0063  
__size_of_UcheckExistsNotFinished 000C                    __size_of_Minit 0008  
            __end_of_SIONovaTecla 1CDC                    __size_of_Sinit 0008  
                     ??_HNouSegon 0063                    __size_of_Uinit 006E  
                     _direccioSIO 0047                       _direccioJoc 0012  
          __end_of_CantaPartBaixa 175E                JoystickMotor@state 0016  
                        _GLCDInit 1D4C                escriureEEPROM@caca 0063  
                     _do_register 03C5               __end_of_init_eusart 1BFC  
                       _newString 03C0                      _UcheckExists 1D94  
                       _jugantSIO 03B9          __size_of_HActualitzaHora 0034  
                       _jugantJoc 03BA                       ??_CantaData 0065  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                     ?_MNouJoystick 005E  
                ?_SIONovaDireccio 005E              __end_of_SIOStartGame 1CD4  
                   UenviaChar@pos 0063    __end_of_escriure2usuarisStruct 1966  
              _escriureCharEEPROM 1ACC                         _novaTecla 0053  
                   motorSIO@state 000F                          _PIR1bits 000F9E  
                     ??_LcPutChar 0071                         _timerGLCD 0021  
                       _motorHora 1512                          _RCONbits 000FD0  
                       _reproduir 03C2                          _HGetTime 1D7C  
           __size_of_JoystickInit 0012                         _timerHora 0015  
                       _timerMenu 0030               ?_escriureCharEEPROM 0063  
                     ??_NoFerMenu 0063                        _ADCON0bits 000FC2  
                     ??_URegister 0063                       ??_HnoJugant 0063  
                     ??_SiFerMenu 0063             __size_of_UgetUserName 0014  
             __end_of_playAltaveu 1D88            __size_of_SsetNovaTecla 0008  
                        Espera@ms 006A                         _zeroTecla 0038  
                        _LcGotoXY 19D2                    _usuariLoguejat 004D  
                        _LcLliure 1CB8                       ??_TiGetTics 0065  
         __size_of_compareStrings 002A              __size_of_TiInitTimer 0028  
                        _LcScroll 1D66                   ??_JoystickMotor 0064  
                   GLCDMotor@max1 004C                     GLCDMotor@max2 004B  
                   GLCDMotor@min1 001D                     GLCDMotor@min2 001C  
                    _teclaPremuda 00B3                          _JendGame 1DA8  
                       _usuariJoc 004A                       LcGotoXY@Row 006B  
                       copy_data0 1626                         copy_data1 1646  
            ??_escriureCharEEPROM 0064                   ?_CantaPartBaixa 005E  
             __end_of_CToAobtenir 1D70                  __size_of_HJugant 0006  
          ??_UcheckExistsGetError 0063             escriureCharEEPROM@pos 0063  
                __size_of_JJuguem 0008                  __size_of_LcClear 0018  
                __size_of_CantaIR 001C                          _TeTeclat 1082  
           __end_of_JnovaDireccio 1CF4                    ??_MNouJoystick 0063  
 __size_of_SIOHaAcabatPuntuacions 0004                      ?_UmotorUsers 005E  
                    _JoystickInit 1C26                        _EECON1bits 000FA6  
                     _indexUsuari 002E           __size_of_SIOcheckKrebut 000C  
            __size_of_TiResetTics 0010                     motorJoc@state 0011  
                        __Hrparam 0000                       _initAltaveu 1D0C  
                       menu@state 002C                          __Lrparam 0000  
                      ?_motorHora 005E              __size_of__TiRSITimer 003E  
                    _UgetUserName 1C12                       ??_UenviaPas 0064  
                    _novaDireccio 004E                      ??_init_ports 0063  
             HActualitzaHora@nova 0063        __end_of_UshowUsersCalculat 1C94  
                     _init_eusart 1BE6                  __size_of_initSIO 0008  
           __size_of_motorAltaveu 007C                      _novaTeclaJOC 0049  
                    _novaTeclaSIO 0046                   _do_check_exists 03C6  
                        __ptext10 1CCC                          __ptext11 1CD4  
              _EscriuPrimeraOrdre 1596                          __ptext20 147E  
                        __ptext12 1CDC                          __ptext21 02F6  
                        __ptext13 1D78                          __ptext30 1C94  
                        __ptext22 1B92                          __ptext14 1C70  
                        __ptext31 1D90                          __ptext23 1C7C  
                        __ptext15 1D54                          __ptext40 1CE4  
                        __ptext32 1D94                          __ptext24 1D88  
                        __ptext16 1D7C                          __ptext41 1CEC  
                        __ptext33 1D98                          __ptext25 1C88  
                        __ptext17 1D80                          __ptext50 1D0C  
                        __ptext42 1DA8                          __ptext34 1D9C  
                        __ptext26 1C12                          __ptext18 1512  
                        __ptext51 1A32                          __ptext43 1CF4  
                        __ptext35 1D5A                          __ptext27 1D8C  
                        __ptext19 1D84                          __ptext60 1D1C  
                        __ptext52 192A                          __ptext44 199E  
                        __ptext36 1D60                          __ptext28 1C38  
                        __ptext61 1D24                          __ptext53 0D20  
                        __ptext45 1CA0                          __ptext37 1DA0  
                        __ptext29 1C48                          __ptext70 1D44  
                        __ptext62 1D2C                          __ptext54 1ACC  
                        __ptext46 1B58                          __ptext38 1DA4  
                        __ptext71 1C26                          __ptext63 0ED4  
                        __ptext55 18AE                          __ptext47 1BE6  
                        __ptext39 1D66                          __ptext80 1BAE  
                        __ptext72 08B0                          __ptext64 1D34  
                        __ptext56 13E6                          __ptext48 1CFC  
                        __ptext81 1702                          __ptext73 181E  
                        __ptext65 1D3C                          __ptext57 1A5A  
                        __ptext49 1D04                          __ptext90 1866  
                        __ptext82 1768                          __ptext74 1966  
                        __ptext66 17CE                          __ptext58 1082  
                        __ptext83 1B36                          __ptext75 1CAC  
                        __ptext67 1280                          __ptext59 1D14  
                        __ptext84 1BCA                          __ptext76 1CB8  
                        __ptext68 1596                          __ptext85 1A82  
                        __ptext77 1B14                          __ptext69 11AA  
                        __ptext86 1D4C                          __ptext78 19D2  
                        __ptext87 1A06                          __ptext79 18EC  
                        __ptext88 1AF0                    CantaPartAlta@c 0064  
                     _lletraASCII 0054                          _high_rsi 0008  
                        _copsNota 0023                          _s_Timers 0080  
                   __size_of_CtoA 0024                          _initHora 1D04  
                     _lletraInici 00AA                          _menuDalt 002F  
                        _menuList 0201               ?_EscriuPrimeraOrdre 005E  
                   __size_of_main 0078                     __size_of_menu 058E  
           __end_of_CantaPartAlta 17C4                    _CToAConverteix 1C58  
                   CantaData@Data 0065                          _tiTeclat 0036  
              __end_of_init_ports 1B76                          _setSMSon 03C8  
                   _SsetNovaTecla 1D14              __size_of_WaitForBusy 003E  
                        _nouSegon 03BC                          _motorSIO 0B48  
               ??_HActualitzaHora 0064                          _motorJoc 133E  
                 _checkHoraAcabat 1C7C                          _timerSIO 0010  
                        _timerSMS 0052                          isa$xinst 000000  
                        int$flags 007A                      UenviaPas@pos 0063  
                     _playAltaveu 1D84                      _motorAltaveu 147E  
         __size_of_HClearNouSegon 0004            _SIOHaAcabatPuntuacions 1DA0  
            ??_EscriuPrimeraOrdre 0063                        LcInit@rows 006F  
                ??_GLCDMostraMenu 0063             __size_of_SIONovaTecla 0008  
         _UcheckExistsNotFinished 1C94                        _INTCONbits 000FF2  
                   ??_MNovaLletra 0063                       _CToAobtenir 1D6C  
           __size_of_SIOStartGame 0008                     ??_LcNewString 0068  
                        intlevel2 0000                      _timerAltaveu 0024  
                  _arrayShowUsers 0001            __end_of_CToAConverteix 1C64  
                      LcPutChar@c 0071                    ?_SsetNovaTecla 005E  
               MNovaLletra@lletra 0063                   compareStrings@a 0063  
                 compareStrings@b 0064                       ??_motorHora 006A  
                    _SIONovaTecla 1CD4                       _tempsAcabat 03BB  
                     GLCDMotor@k1 001B                       GLCDMotor@k2 001A  
            __end_of_MNouJoystick 1D4C                      _SIOStartGame 1CCC  
                  _compareStrings 18AE                       _tmpPassword 0098  
             __end_of_MNovaLletra 1D3C                   ?_CToAConverteix 005E  
           __end_of_MsetNovaTecla 1D24           __end_of_checkHoraAcabat 1C88  
                     _tmpUsername 00A1                    _SIOcheckKrebut 1C64  
                     SMotor@state 0037           __size_of_UgetNumUsuaris 0004  
             __end_of_LcNewString 1CB8              __size_of_UmotorUsers 017E  
                      _SIOendGame 1D74  
